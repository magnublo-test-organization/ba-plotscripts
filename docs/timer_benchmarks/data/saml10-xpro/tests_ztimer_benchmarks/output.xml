<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:16:54.442" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.013" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:55.022" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:56.234" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:55.012" endtime="20201029 18:16:56.235"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.238" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:16:56.236" endtime="20201029 18:16:56.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.011" endtime="20201029 18:16:56.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:56.241" endtime="20201029 18:16:56.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.239" endtime="20201029 18:16:56.482"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.494" endtime="20201029 18:16:56.507"></status>
</kw>
<msg timestamp="20201029 18:16:56.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.493" endtime="20201029 18:16:56.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.508" endtime="20201029 18:16:56.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.513" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:56.511" endtime="20201029 18:16:56.513"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:56.490" endtime="20201029 18:16:56.514"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:56.488" endtime="20201029 18:16:56.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.487" endtime="20201029 18:16:56.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:56.518" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:56.518" endtime="20201029 18:16:56.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.515" endtime="20201029 18:16:56.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.486" endtime="20201029 18:16:56.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.485" endtime="20201029 18:16:56.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.521" endtime="20201029 18:16:56.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.484" endtime="20201029 18:16:56.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.524" endtime="20201029 18:16:56.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.483" endtime="20201029 18:16:56.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.009" endtime="20201029 18:16:56.526"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:56.532" endtime="20201029 18:16:56.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.530" endtime="20201029 18:16:56.552"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.565" endtime="20201029 18:16:56.577"></status>
</kw>
<msg timestamp="20201029 18:16:56.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.563" endtime="20201029 18:16:56.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.579" endtime="20201029 18:16:56.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.583" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:56.581" endtime="20201029 18:16:56.583"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:56.561" endtime="20201029 18:16:56.584"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:56.558" endtime="20201029 18:16:56.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.557" endtime="20201029 18:16:56.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:56.588" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:56.588" endtime="20201029 18:16:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.586" endtime="20201029 18:16:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.556" endtime="20201029 18:16:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.555" endtime="20201029 18:16:56.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.590" endtime="20201029 18:16:56.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.554" endtime="20201029 18:16:56.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.552" endtime="20201029 18:16:56.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.529" endtime="20201029 18:16:56.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.600" endtime="20201029 18:16:56.608"></status>
</kw>
<msg timestamp="20201029 18:16:56.609" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.598" endtime="20201029 18:16:56.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.611" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.610" endtime="20201029 18:16:56.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.612" endtime="20201029 18:16:56.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.595" endtime="20201029 18:16:56.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.593" endtime="20201029 18:16:56.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.619" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:16:56.618" endtime="20201029 18:16:56.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.621" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:16:56.620" endtime="20201029 18:16:56.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.615" endtime="20201029 18:16:56.621"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:56.526" endtime="20201029 18:16:56.622" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:54.563" endtime="20201029 18:16:56.624"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.682" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:56.692" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:57.896" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:56.680" endtime="20201029 18:16:57.897"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.899" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:16:57.898" endtime="20201029 18:16:57.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.678" endtime="20201029 18:16:57.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.902" endtime="20201029 18:16:58.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.901" endtime="20201029 18:16:58.159"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.177" endtime="20201029 18:16:58.191"></status>
</kw>
<msg timestamp="20201029 18:16:58.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.175" endtime="20201029 18:16:58.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.194" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.193" endtime="20201029 18:16:58.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.197" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:58.195" endtime="20201029 18:16:58.198"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:58.171" endtime="20201029 18:16:58.198"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:58.168" endtime="20201029 18:16:58.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.167" endtime="20201029 18:16:58.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:58.203" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:58.202" endtime="20201029 18:16:58.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.200" endtime="20201029 18:16:58.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.165" endtime="20201029 18:16:58.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.163" endtime="20201029 18:16:58.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.204" endtime="20201029 18:16:58.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.161" endtime="20201029 18:16:58.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.207" endtime="20201029 18:16:58.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.160" endtime="20201029 18:16:58.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.676" endtime="20201029 18:16:58.210"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.216" endtime="20201029 18:16:58.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.214" endtime="20201029 18:16:58.236"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.249" endtime="20201029 18:16:58.261"></status>
</kw>
<msg timestamp="20201029 18:16:58.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.247" endtime="20201029 18:16:58.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.264" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.263" endtime="20201029 18:16:58.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.267" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:58.265" endtime="20201029 18:16:58.267"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:58.244" endtime="20201029 18:16:58.268"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:58.242" endtime="20201029 18:16:58.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.241" endtime="20201029 18:16:58.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:58.273" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:58.272" endtime="20201029 18:16:58.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.270" endtime="20201029 18:16:58.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.240" endtime="20201029 18:16:58.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.240" endtime="20201029 18:16:58.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.274" endtime="20201029 18:16:58.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.238" endtime="20201029 18:16:58.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.237" endtime="20201029 18:16:58.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.212" endtime="20201029 18:16:58.277"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.285" endtime="20201029 18:16:58.296"></status>
</kw>
<msg timestamp="20201029 18:16:58.297" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.284" endtime="20201029 18:16:58.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.299" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.298" endtime="20201029 18:16:58.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.300" endtime="20201029 18:16:58.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.281" endtime="20201029 18:16:58.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.279" endtime="20201029 18:16:58.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.309" endtime="20201029 18:16:58.598"></status>
</kw>
<msg timestamp="20201029 18:16:58.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060225347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060226611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.308" endtime="20201029 18:16:58.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060225347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060226611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.602" endtime="20201029 18:16:58.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.611" endtime="20201029 18:16:58.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.305" endtime="20201029 18:16:58.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.303" endtime="20201029 18:16:58.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.617" level="INFO">${RESULT} = [{'diff': 1.26400000000082e-06}, {'diff': 1.1110000000050246e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.068999999999376e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0559999999992797e-06}...</msg>
<status status="PASS" starttime="20201029 18:16:58.614" endtime="20201029 18:16:58.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:58.622" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.26400000000082e-06, 1.1110000000050246e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:16:58.618" endtime="20201029 18:16:58.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.626" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:16:58.625" endtime="20201029 18:16:58.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.629" level="INFO">VALUE: [1.26400000000082e-06, 1.1110000000050246e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.068999999999376e-06, 9.860000000014302e-07, 1.0969999999985158e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.1109999999980857e-06, 1.0830000000058848e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.055000000006745e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0139999999936311e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.1119999999975594e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.055000000006745e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201029 18:16:58.627" endtime="20201029 18:16:58.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.623" endtime="20201029 18:16:58.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.278" endtime="20201029 18:16:58.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.278" endtime="20201029 18:16:58.631"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.639" endtime="20201029 18:16:58.649"></status>
</kw>
<msg timestamp="20201029 18:16:58.649" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.637" endtime="20201029 18:16:58.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.652" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.650" endtime="20201029 18:16:58.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.653" endtime="20201029 18:16:58.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.635" endtime="20201029 18:16:58.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.633" endtime="20201029 18:16:58.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.662" endtime="20201029 18:16:58.993"></status>
</kw>
<msg timestamp="20201029 18:16:58.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061760125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061761181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.660" endtime="20201029 18:16:58.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061760125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061761181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.998" endtime="20201029 18:16:59.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.008" endtime="20201029 18:16:59.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.658" endtime="20201029 18:16:59.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.656" endtime="20201029 18:16:59.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.019" level="INFO">${RESULT} = [{'diff': 1.0559999999992797e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.0419999999997098e-06}, {'diff': 1.0699999999988496e-06}, {'diff': 1.1119999999975594e-06}, {'diff': 1.0969999999985158e-...</msg>
<status status="PASS" starttime="20201029 18:16:59.014" endtime="20201029 18:16:59.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:59.027" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.1119999999975594e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.055000000006745e-06,...</msg>
<status status="PASS" starttime="20201029 18:16:59.021" endtime="20201029 18:16:59.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.033" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:16:59.031" endtime="20201029 18:16:59.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.036" level="INFO">VALUE: [1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.1119999999975594e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.055000000006745e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.318999999999626e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0409999999794195e-06, 1.0830000000128237e-06, 1.0970000000054547e-06, 1.0549999999720505e-06, 1.0839999999845418e-06, 1.0830000000128237e-06, 1.0420000000066487e-06, 1.0830000000128237e-06, 1.0549999999720505e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.084000000040053e-06, 1.0549999999720505e-06, 1.0559999999992797e-06, 1.0139999999658755e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0550000000275617e-06, 1.0000000000287557e-06, 1.0550000000275617e-06, 1.0830000000128237e-06, 1.0690000000201927e-06, 1.1249999999907168e-06, 1.0690000000201927e-06, 1.084000000040053e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0689999999646815e-06, 1.0830000000128237e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0000000000287557e-06, 1.0830000000128237e-06, 1.0839999999845418e-06, 1.0000000000287557e-06, 1.0549999999720505e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0550000000275617e-06, 1.0699999999919108e-06, 1.0830000000128237e-06, 1.0690000000201927e-06, 1.0410000000349307e-06, 1.0280000000140177e-06]</msg>
<status status="PASS" starttime="20201029 18:16:59.034" endtime="20201029 18:16:59.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.028" endtime="20201029 18:16:59.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.632" endtime="20201029 18:16:59.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.631" endtime="20201029 18:16:59.038"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.049" endtime="20201029 18:16:59.060"></status>
</kw>
<msg timestamp="20201029 18:16:59.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.047" endtime="20201029 18:16:59.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.063" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.061" endtime="20201029 18:16:59.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.064" endtime="20201029 18:16:59.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.044" endtime="20201029 18:16:59.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.041" endtime="20201029 18:16:59.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.073" endtime="20201029 18:16:59.382"></status>
</kw>
<msg timestamp="20201029 18:16:59.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.404408639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.404409722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.071" endtime="20201029 18:16:59.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.404408639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.404409722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.388" endtime="20201029 18:16:59.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.403" endtime="20201029 18:16:59.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.069" endtime="20201029 18:16:59.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.067" endtime="20201029 18:16:59.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.410" level="INFO">${RESULT} = [{'diff': 1.0830000000128237e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.0000000000287557e-06}, {'diff': 1.0549999999720505e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.0420000000066487e-...</msg>
<status status="PASS" starttime="20201029 18:16:59.406" endtime="20201029 18:16:59.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:59.415" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0830000000128237e-06, 1.0839999999845418e-06, 1.0000000000287557e-06, 1.0549999999720505e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06...</msg>
<status status="PASS" starttime="20201029 18:16:59.411" endtime="20201029 18:16:59.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.419" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:16:59.418" endtime="20201029 18:16:59.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.422" level="INFO">VALUE: [1.0830000000128237e-06, 1.0839999999845418e-06, 1.0000000000287557e-06, 1.0549999999720505e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0550000000275617e-06, 1.0699999999919108e-06, 1.0830000000128237e-06, 1.0690000000201927e-06, 1.0410000000349307e-06, 1.0280000000140177e-06, 1.2499999999526779e-06, 1.0559999999992797e-06, 1.0690000000757038e-06, 1.0689999999646815e-06, 1.0410000000904418e-06, 1.0559999999992797e-06, 1.0409999999794195e-06, 1.0280000000140177e-06, 1.0699999999363996e-06, 9.999999999177334e-07, 1.070000000047422e-06, 1.0689999999646815e-06, 1.070000000047422e-06, 1.0419999999511376e-06, 1.0550000000275617e-06, 1.070000000047422e-06, 1.0000000000287557e-06, 1.070000000047422e-06, 1.0699999999363996e-06, 1.0409999999794195e-06, 1.0969999999499436e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.0979999999216616e-06, 1.0139999999658755e-06, 1.070000000047422e-06, 9.999999999177334e-07, 1.0550000000275617e-06, 1.070000000047422e-06, 1.0559999999992797e-06, 1.0969999999499436e-06, 1.0699999999363996e-06, 1.0839999999845418e-06, 1.0559999999992797e-06, 1.0419999999511376e-06, 9.730000000152117e-07, 1.0000000000287557e-06, 1.0559999999992797e-06, 1.0419999999511376e-06, 1.0559999999992797e-06, 1.0419999999511376e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0559999999992797e-06, 1.098000000032684e-06]</msg>
<status status="PASS" starttime="20201029 18:16:59.420" endtime="20201029 18:16:59.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.416" endtime="20201029 18:16:59.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.039" endtime="20201029 18:16:59.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.039" endtime="20201029 18:16:59.423"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.432" endtime="20201029 18:16:59.442"></status>
</kw>
<msg timestamp="20201029 18:16:59.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.429" endtime="20201029 18:16:59.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.445" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.444" endtime="20201029 18:16:59.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.446" endtime="20201029 18:16:59.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.427" endtime="20201029 18:16:59.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.425" endtime="20201029 18:16:59.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.455" endtime="20201029 18:16:59.788"></status>
</kw>
<msg timestamp="20201029 18:16:59.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.805164458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.805165514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.454" endtime="20201029 18:16:59.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.805164458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.805165514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.794" endtime="20201029 18:16:59.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.806" endtime="20201029 18:16:59.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.451" endtime="20201029 18:16:59.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.449" endtime="20201029 18:16:59.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.813" level="INFO">${RESULT} = [{'diff': 1.0559999999992797e-06}, {'diff': 1.0419999999511376e-06}, {'diff': 9.730000000152117e-07}, {'diff': 1.0000000000287557e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.0419999999511376e-0...</msg>
<status status="PASS" starttime="20201029 18:16:59.809" endtime="20201029 18:16:59.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:59.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999999992797e-06, 1.0419999999511376e-06, 9.730000000152117e-07, 1.0000000000287557e-06, 1.0559999999992797e-06, 1.0419999999511376e-06, 1.0559999999992797e-06, 1.0419999999511376e-06,...</msg>
<status status="PASS" starttime="20201029 18:16:59.814" endtime="20201029 18:16:59.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.823" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:16:59.822" endtime="20201029 18:16:59.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.825" level="INFO">VALUE: [1.0559999999992797e-06, 1.0419999999511376e-06, 9.730000000152117e-07, 1.0000000000287557e-06, 1.0559999999992797e-06, 1.0419999999511376e-06, 1.0559999999992797e-06, 1.0419999999511376e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0559999999992797e-06, 1.098000000032684e-06, 1.2499999999526779e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 9.860000000916358e-07, 1.0689999998536592e-06, 1.0689999998536592e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0409999999794195e-06, 1.054999999805517e-06, 1.054999999805517e-06, 9.999999999177334e-07, 1.0699999999363996e-06, 1.0970000001719882e-06, 1.0550000000275617e-06, 1.056000000110302e-06, 1.0699999999363996e-06, 1.0690000000757038e-06, 1.0689999998536592e-06, 1.0690000000757038e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.0550000000275617e-06, 1.0689999998536592e-06, 1.0700000001584442e-06, 9.999999999177334e-07, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0969999999499436e-06, 1.0699999999363996e-06, 1.0839999999845418e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.056000000110302e-06, 1.0839999999845418e-06, 1.056000000110302e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0419999998401153e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.0550000000275617e-06, 1.0550000000275617e-06]</msg>
<status status="PASS" starttime="20201029 18:16:59.824" endtime="20201029 18:16:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.819" endtime="20201029 18:16:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.424" endtime="20201029 18:16:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.423" endtime="20201029 18:16:59.827"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.834" endtime="20201029 18:16:59.844"></status>
</kw>
<msg timestamp="20201029 18:16:59.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.833" endtime="20201029 18:16:59.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.846" endtime="20201029 18:16:59.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.848" endtime="20201029 18:16:59.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.830" endtime="20201029 18:16:59.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.829" endtime="20201029 18:16:59.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.857" endtime="20201029 18:17:00.161"></status>
</kw>
<msg timestamp="20201029 18:17:00.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177646833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177647917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.856" endtime="20201029 18:17:00.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177646833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177647917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.166" endtime="20201029 18:17:00.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.176" endtime="20201029 18:17:00.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.853" endtime="20201029 18:17:00.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.852" endtime="20201029 18:17:00.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.183" level="INFO">${RESULT} = [{'diff': 1.0839999999845418e-06}, {'diff': 1.054999999805517e-06}, {'diff': 1.0690000000757038e-06}, {'diff': 1.056000000110302e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.056000000110302e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:00.179" endtime="20201029 18:17:00.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:00.188" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0839999999845418e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.056000000110302e-06, 1.0839999999845418e-06, 1.056000000110302e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:17:00.184" endtime="20201029 18:17:00.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.193" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:00.192" endtime="20201029 18:17:00.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.195" level="INFO">VALUE: [1.0839999999845418e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.056000000110302e-06, 1.0839999999845418e-06, 1.056000000110302e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0419999998401153e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.26400000000082e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.098000000032684e-06, 1.0409999999794195e-06, 1.056000000110302e-06, 1.056000000110302e-06, 1.056000000110302e-06, 1.056000000110302e-06, 1.0550000000275617e-06, 1.0700000001584442e-06, 9.999999999177334e-07, 1.056000000110302e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.056000000110302e-06, 1.0550000000275617e-06, 1.056000000110302e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0700000001584442e-06, 1.0699999999363996e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.056000000110302e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, 1.056000000110302e-06, 1.056000000110302e-06, 1.0699999999363996e-06, 1.0139999999658755e-06, 1.0970000001719882e-06, 1.0699999999363996e-06, 1.083000000123846e-06, 1.0699999999363996e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.098000000032684e-06, 1.0559999998882574e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0839999999845418e-06, 1.0839999999845418e-06, 1.0690000000757038e-06]</msg>
<status status="PASS" starttime="20201029 18:17:00.194" endtime="20201029 18:17:00.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.189" endtime="20201029 18:17:00.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.827" endtime="20201029 18:17:00.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.827" endtime="20201029 18:17:00.196"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.204" endtime="20201029 18:17:00.214"></status>
</kw>
<msg timestamp="20201029 18:17:00.215" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.203" endtime="20201029 18:17:00.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.217" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.216" endtime="20201029 18:17:00.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.218" endtime="20201029 18:17:00.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.200" endtime="20201029 18:17:00.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.198" endtime="20201029 18:17:00.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.227" endtime="20201029 18:17:00.529"></status>
</kw>
<msg timestamp="20201029 18:17:00.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.569990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.569991472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.225" endtime="20201029 18:17:00.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.569990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.569991472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.534" endtime="20201029 18:17:00.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.544" endtime="20201029 18:17:00.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.223" endtime="20201029 18:17:00.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.221" endtime="20201029 18:17:00.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.551" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.0699999999363996e-06}, {'diff': 1.083000000123846e-06}, {'diff': 1.0699999999363996e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0550000000275617e-0...</msg>
<status status="PASS" starttime="20201029 18:17:00.547" endtime="20201029 18:17:00.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:00.556" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.0699999999363996e-06, 1.083000000123846e-06, 1.0699999999363996e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.098000000032684e-06, 1.0559999998882574e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:00.552" endtime="20201029 18:17:00.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.560" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:00.559" endtime="20201029 18:17:00.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.562" level="INFO">VALUE: [1.0970000001719882e-06, 1.0699999999363996e-06, 1.083000000123846e-06, 1.0699999999363996e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.098000000032684e-06, 1.0559999998882574e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0839999999845418e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.26400000000082e-06, 1.0139999999658755e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.000000000139778e-06, 1.0420000000621599e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0839999999845418e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0419999998401153e-06, 1.0689999998536592e-06, 1.0689999998536592e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.083000000123846e-06, 1.0550000000275617e-06, 1.054999999805517e-06, 1.0829999999018014e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.0409999999794195e-06, 1.0839999999845418e-06, 1.0559999998882574e-06, 1.0699999999363996e-06, 1.0559999998882574e-06, 1.056000000110302e-06, 1.1109999999980857e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.056000000110302e-06, 1.000000000139778e-06, 1.0699999999363996e-06, 1.1119999998587815e-06, 1.0969999999499436e-06, 1.056000000110302e-06, 1.0690000000757038e-06, 1.0969999999499436e-06, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 18:17:00.561" endtime="20201029 18:17:00.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.556" endtime="20201029 18:17:00.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.197" endtime="20201029 18:17:00.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.197" endtime="20201029 18:17:00.564"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.572" endtime="20201029 18:17:00.583"></status>
</kw>
<msg timestamp="20201029 18:17:00.583" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.571" endtime="20201029 18:17:00.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.585" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.584" endtime="20201029 18:17:00.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.586" endtime="20201029 18:17:00.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.568" endtime="20201029 18:17:00.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.566" endtime="20201029 18:17:00.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.595" endtime="20201029 18:17:00.901"></status>
</kw>
<msg timestamp="20201029 18:17:00.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.929787597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.929788667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.594" endtime="20201029 18:17:00.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.929787597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.929788667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.906" endtime="20201029 18:17:00.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.917" endtime="20201029 18:17:00.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.591" endtime="20201029 18:17:00.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.590" endtime="20201029 18:17:00.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.924" level="INFO">${RESULT} = [{'diff': 1.0699999999363996e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0690000000757038e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.056000000110302e-0...</msg>
<status status="PASS" starttime="20201029 18:17:00.920" endtime="20201029 18:17:00.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:00.929" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0699999999363996e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.056000000110302e-06, 1.000000000139778e-06, 1.0699999999363996e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:00.925" endtime="20201029 18:17:00.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.934" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:00.933" endtime="20201029 18:17:00.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.936" level="INFO">VALUE: [1.0699999999363996e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.056000000110302e-06, 1.000000000139778e-06, 1.0699999999363996e-06, 1.1119999998587815e-06, 1.0969999999499436e-06, 1.056000000110302e-06, 1.0690000000757038e-06, 1.0969999999499436e-06, 1.0420000000621599e-06, 1.2640000002228646e-06, 1.0280000002360623e-06, 1.0690000000757038e-06, 1.0689999996316146e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.0689999996316146e-06, 1.0700000001584442e-06, 1.0280000002360623e-06, 1.0420000000621599e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.096999999727899e-06, 1.0690000000757038e-06, 1.0139999999658755e-06, 1.0690000000757038e-06, 1.1249999998241833e-06, 1.054999999805517e-06, 1.069999999714355e-06, 1.096999999727899e-06, 1.0420000000621599e-06, 1.000000000139778e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.1109999999980857e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0689999996316146e-06, 1.0839999999845418e-06, 1.0689999996316146e-06, 1.0559999998882574e-06, 1.0139999999658755e-06, 1.0280000002360623e-06, 1.0560000003323466e-06, 1.0690000000757038e-06, 9.860000003136804e-07, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0559999998882574e-06, 1.000000000139778e-06, 1.0700000001584442e-06, 1.0700000001584442e-06]</msg>
<status status="PASS" starttime="20201029 18:17:00.935" endtime="20201029 18:17:00.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.930" endtime="20201029 18:17:00.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.565" endtime="20201029 18:17:00.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.564" endtime="20201029 18:17:00.938"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.945" endtime="20201029 18:17:00.958"></status>
</kw>
<msg timestamp="20201029 18:17:00.959" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.944" endtime="20201029 18:17:00.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.965" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.962" endtime="20201029 18:17:00.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.967" endtime="20201029 18:17:00.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.941" endtime="20201029 18:17:00.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.940" endtime="20201029 18:17:00.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.986" endtime="20201029 18:17:01.303"></status>
</kw>
<msg timestamp="20201029 18:17:01.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.288124042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.288125111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.983" endtime="20201029 18:17:01.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.288124042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.288125111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.309" endtime="20201029 18:17:01.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.319" endtime="20201029 18:17:01.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.977" endtime="20201029 18:17:01.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.974" endtime="20201029 18:17:01.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.326" level="INFO">${RESULT} = [{'diff': 1.0689999996316146e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.0139999999658755e-06}, {'diff': 1.0280000002360623e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0690000000757038e-...</msg>
<status status="PASS" starttime="20201029 18:17:01.323" endtime="20201029 18:17:01.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:01.332" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0689999996316146e-06, 1.0559999998882574e-06, 1.0139999999658755e-06, 1.0280000002360623e-06, 1.0560000003323466e-06, 1.0690000000757038e-06, 9.860000003136804e-07, 1.0690000000757038e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:01.327" endtime="20201029 18:17:01.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.336" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:01.335" endtime="20201029 18:17:01.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.339" level="INFO">VALUE: [1.0689999996316146e-06, 1.0559999998882574e-06, 1.0139999999658755e-06, 1.0280000002360623e-06, 1.0560000003323466e-06, 1.0690000000757038e-06, 9.860000003136804e-07, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0559999998882574e-06, 1.000000000139778e-06, 1.0700000001584442e-06, 1.0700000001584442e-06, 1.2640000002228646e-06, 1.027999999791973e-06, 1.0280000002360623e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0839999999845418e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0139999999658755e-06, 1.069999999714355e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0839999999845418e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0700000001584442e-06, 1.0139999999658755e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.027999999791973e-06, 1.0280000002360623e-06, 1.0559999998882574e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0139999999658755e-06, 1.0420000000621599e-06, 9.999999996956888e-07, 1.0559999998882574e-06, 1.0139999999658755e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0690000000757038e-06]</msg>
<status status="PASS" starttime="20201029 18:17:01.337" endtime="20201029 18:17:01.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.333" endtime="20201029 18:17:01.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.939" endtime="20201029 18:17:01.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.938" endtime="20201029 18:17:01.340"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.348" endtime="20201029 18:17:01.358"></status>
</kw>
<msg timestamp="20201029 18:17:01.359" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.346" endtime="20201029 18:17:01.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.360" endtime="20201029 18:17:01.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.362" endtime="20201029 18:17:01.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.344" endtime="20201029 18:17:01.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.342" endtime="20201029 18:17:01.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.372" endtime="20201029 18:17:01.680"></status>
</kw>
<msg timestamp="20201029 18:17:01.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.649409722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.649410792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.371" endtime="20201029 18:17:01.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.649409722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.649410792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.685" endtime="20201029 18:17:01.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.695" endtime="20201029 18:17:01.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.367" endtime="20201029 18:17:01.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.365" endtime="20201029 18:17:01.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.711" level="INFO">${RESULT} = [{'diff': 1.069999999714355e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0139999999658755e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 9.999999996956888e-07...</msg>
<status status="PASS" starttime="20201029 18:17:01.707" endtime="20201029 18:17:01.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:01.715" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.069999999714355e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0139999999658755e-06, 1.0420000000621599e-06, 9.999999996956888e-07, 1.0559999998882574e-06, 1.0139999999658755e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:01.712" endtime="20201029 18:17:01.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.720" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:01.719" endtime="20201029 18:17:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.722" level="INFO">VALUE: [1.069999999714355e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0139999999658755e-06, 1.0420000000621599e-06, 9.999999996956888e-07, 1.0559999998882574e-06, 1.0139999999658755e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.235999999682491e-06, 1.000000000139778e-06, 1.0559999998882574e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0139999999658755e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.000000000139778e-06, 1.096999999727899e-06, 1.027999999791973e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.054999999805517e-06, 1.0700000001584442e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0700000001584442e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0139999999658755e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.0560000003323466e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.0829999999018014e-06, 1.0269999997092327e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 9.999999996956888e-07, 1.0700000001584442e-06, 1.069999999714355e-06]</msg>
<status status="PASS" starttime="20201029 18:17:01.721" endtime="20201029 18:17:01.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.716" endtime="20201029 18:17:01.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.341" endtime="20201029 18:17:01.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.341" endtime="20201029 18:17:01.724"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.732" endtime="20201029 18:17:01.742"></status>
</kw>
<msg timestamp="20201029 18:17:01.743" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.731" endtime="20201029 18:17:01.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.745" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.744" endtime="20201029 18:17:01.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.746" endtime="20201029 18:17:01.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.728" endtime="20201029 18:17:01.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.726" endtime="20201029 18:17:01.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.755" endtime="20201029 18:17:02.073"></status>
</kw>
<msg timestamp="20201029 18:17:02.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.043017417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.043018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.754" endtime="20201029 18:17:02.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.043017417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.043018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.078" endtime="20201029 18:17:02.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.089" endtime="20201029 18:17:02.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.751" endtime="20201029 18:17:02.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.749" endtime="20201029 18:17:02.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.095" level="INFO">${RESULT} = [{'diff': 1.054999999805517e-06}, {'diff': 1.0690000000757038e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0269999997092327e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0559999998882574e-0...</msg>
<status status="PASS" starttime="20201029 18:17:02.092" endtime="20201029 18:17:02.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:02.101" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.054999999805517e-06, 1.0690000000757038e-06, 1.0829999999018014e-06, 1.0269999997092327e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0420000000621599e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:02.096" endtime="20201029 18:17:02.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.105" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:02.104" endtime="20201029 18:17:02.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.107" level="INFO">VALUE: [1.054999999805517e-06, 1.0690000000757038e-06, 1.0829999999018014e-06, 1.0269999997092327e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 9.999999996956888e-07, 1.0700000001584442e-06, 1.069999999714355e-06, 1.2640000002228646e-06, 9.870000003964208e-07, 1.084000000428631e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0139999999658755e-06, 1.0830000003458906e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0410000004235087e-06, 1.0280000002360623e-06, 1.096999999727899e-06, 1.0550000002496063e-06, 1.0139999999658755e-06, 1.0979999998106393e-06, 1.000000000139778e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0979999998106393e-06, 1.0560000003323466e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0829999999018014e-06, 1.0139999999658755e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0839999999845418e-06, 1.0830000003458906e-06, 1.0559999998882574e-06]</msg>
<status status="PASS" starttime="20201029 18:17:02.106" endtime="20201029 18:17:02.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.102" endtime="20201029 18:17:02.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.725" endtime="20201029 18:17:02.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.725" endtime="20201029 18:17:02.109"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.116" endtime="20201029 18:17:02.127"></status>
</kw>
<msg timestamp="20201029 18:17:02.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.115" endtime="20201029 18:17:02.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.130" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.128" endtime="20201029 18:17:02.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.131" endtime="20201029 18:17:02.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.112" endtime="20201029 18:17:02.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.111" endtime="20201029 18:17:02.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.139" endtime="20201029 18:17:02.454"></status>
</kw>
<msg timestamp="20201029 18:17:02.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.417061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.417062333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.138" endtime="20201029 18:17:02.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.417061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.417062333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.459" endtime="20201029 18:17:02.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.475" endtime="20201029 18:17:02.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.135" endtime="20201029 18:17:02.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.134" endtime="20201029 18:17:02.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.492" level="INFO">${RESULT} = [{'diff': 1.0550000002496063e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.0979999998106393e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0559999998882574e-...</msg>
<status status="PASS" starttime="20201029 18:17:02.483" endtime="20201029 18:17:02.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:02.502" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0979999998106393e-06, 1.0560000003323466e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0829999999018014e-06...</msg>
<status status="PASS" starttime="20201029 18:17:02.494" endtime="20201029 18:17:02.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.511" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:02.509" endtime="20201029 18:17:02.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.516" level="INFO">VALUE: [1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0979999998106393e-06, 1.0560000003323466e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0829999999018014e-06, 1.0139999999658755e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0839999999845418e-06, 1.0830000003458906e-06, 1.0559999998882574e-06, 1.3060000001452465e-06, 1.0690000000757038e-06, 1.0830000003458906e-06, 1.0139999999658755e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0559999998882574e-06, 1.0409999999794195e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.1109999999980857e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0700000001584442e-06, 1.000000000139778e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.0139999999658755e-06, 1.027999999791973e-06, 1.0409999999794195e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.000000000139778e-06, 1.1109999999980857e-06, 1.069999999714355e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 9.999999996956888e-07, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 9.999999996956888e-07, 1.0559999998882574e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.054999999805517e-06]</msg>
<status status="PASS" starttime="20201029 18:17:02.513" endtime="20201029 18:17:02.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.504" endtime="20201029 18:17:02.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.110" endtime="20201029 18:17:02.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.109" endtime="20201029 18:17:02.520"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.538" endtime="20201029 18:17:02.558"></status>
</kw>
<msg timestamp="20201029 18:17:02.559" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.533" endtime="20201029 18:17:02.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.561" endtime="20201029 18:17:02.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.567" endtime="20201029 18:17:02.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.527" endtime="20201029 18:17:02.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.524" endtime="20201029 18:17:02.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.577" endtime="20201029 18:17:02.885"></status>
</kw>
<msg timestamp="20201029 18:17:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.791466944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.791468, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:02.576" endtime="20201029 18:17:02.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.791466944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.791468, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:02.891" endtime="20201029 18:17:02.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.901" endtime="20201029 18:17:02.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.573" endtime="20201029 18:17:02.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.571" endtime="20201029 18:17:02.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.908" level="INFO">${RESULT} = [{'diff': 1.0559999998882574e-06}, {'diff': 9.999999996956888e-07}, {'diff': 1.0690000000757038e-06}, {'diff': 1.0700000001584442e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0559999998882574e-0...</msg>
<status status="PASS" starttime="20201029 18:17:02.904" endtime="20201029 18:17:02.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:02.913" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999998882574e-06, 9.999999996956888e-07, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0420000000621599e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:02.909" endtime="20201029 18:17:02.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:02.916" endtime="20201029 18:17:02.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.920" level="INFO">VALUE: [1.0559999998882574e-06, 9.999999996956888e-07, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 9.999999996956888e-07, 1.0559999998882574e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.250000000396767e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0969999992838098e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.069000000519793e-06, 1.1109999995539965e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.000000000139778e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.000000000139778e-06, 1.0550000002496063e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0979999993665501e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0830000007899798e-06, 1.0970000001719882e-06, 1.0559999994441682e-06, 1.0980000002547285e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0140000004099647e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0549999993614279e-06]</msg>
<status status="PASS" starttime="20201029 18:17:02.918" endtime="20201029 18:17:02.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.914" endtime="20201029 18:17:02.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.521" endtime="20201029 18:17:02.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.520" endtime="20201029 18:17:02.921"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.929" endtime="20201029 18:17:02.939"></status>
</kw>
<msg timestamp="20201029 18:17:02.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.927" endtime="20201029 18:17:02.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.941" endtime="20201029 18:17:02.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.943" endtime="20201029 18:17:02.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.925" endtime="20201029 18:17:02.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.923" endtime="20201029 18:17:02.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.952" endtime="20201029 18:17:03.269"></status>
</kw>
<msg timestamp="20201029 18:17:03.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.212415722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.212416778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.951" endtime="20201029 18:17:03.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.212415722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.212416778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.274" endtime="20201029 18:17:03.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.292" endtime="20201029 18:17:03.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.948" endtime="20201029 18:17:03.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.946" endtime="20201029 18:17:03.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.307" level="INFO">${RESULT} = [{'diff': 1.0559999994441682e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0409999999794195e-...</msg>
<status status="PASS" starttime="20201029 18:17:03.299" endtime="20201029 18:17:03.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:03.319" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999994441682e-06, 1.0980000002547285e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0140000004099647e-06...</msg>
<status status="PASS" starttime="20201029 18:17:03.309" endtime="20201029 18:17:03.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.327" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:03.325" endtime="20201029 18:17:03.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.332" level="INFO">VALUE: [1.0559999994441682e-06, 1.0980000002547285e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0140000004099647e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0549999993614279e-06, 1.2909999993482302e-06, 1.0409999999794195e-06, 1.0979999993665501e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 9.860000007577696e-07, 1.0969999992838098e-06, 1.0559999994441682e-06, 1.069000000519793e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0700000006025334e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0689999996316146e-06, 1.0830000007899798e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.1109999995539965e-06, 1.0549999993614279e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.027999999791973e-06, 1.0559999994441682e-06, 1.000000000139778e-06, 1.0409999999794195e-06, 1.027999999791973e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0549999993614279e-06, 1.0689999996316146e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.069000000519793e-06]</msg>
<status status="PASS" starttime="20201029 18:17:03.329" endtime="20201029 18:17:03.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.320" endtime="20201029 18:17:03.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.922" endtime="20201029 18:17:03.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.921" endtime="20201029 18:17:03.336"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.352" endtime="20201029 18:17:03.364"></status>
</kw>
<msg timestamp="20201029 18:17:03.365" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.348" endtime="20201029 18:17:03.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.370" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.367" endtime="20201029 18:17:03.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.372" endtime="20201029 18:17:03.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.343" endtime="20201029 18:17:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.340" endtime="20201029 18:17:03.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.385" endtime="20201029 18:17:03.704"></status>
</kw>
<msg timestamp="20201029 18:17:03.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.584961014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.584962014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.383" endtime="20201029 18:17:03.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.584961014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.584962014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.709" endtime="20201029 18:17:03.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.719" endtime="20201029 18:17:03.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.381" endtime="20201029 18:17:03.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.379" endtime="20201029 18:17:03.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.726" level="INFO">${RESULT} = [{'diff': 1.000000000139778e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.027999999791973e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0560000003323466e-06...</msg>
<status status="PASS" starttime="20201029 18:17:03.722" endtime="20201029 18:17:03.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:03.730" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.000000000139778e-06, 1.0409999999794195e-06, 1.027999999791973e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:03.727" endtime="20201029 18:17:03.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.734" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:03.733" endtime="20201029 18:17:03.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.737" level="INFO">VALUE: [1.000000000139778e-06, 1.0409999999794195e-06, 1.027999999791973e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0549999993614279e-06, 1.0689999996316146e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.069000000519793e-06, 1.2090000005571255e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.0700000006025334e-06, 1.000000000139778e-06, 1.0409999999794195e-06, 1.0139999995217863e-06, 1.0549999993614279e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0980000002547285e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.000000000139778e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0409999999794195e-06, 1.0829999999018014e-06, 1.0980000002547285e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 9.859999998695912e-07, 1.0839999999845418e-06, 1.0829999999018014e-06, 1.000000000139778e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.000000000139778e-06, 1.0409999999794195e-06, 1.0970000001719882e-06, 1.0139999995217863e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0549999993614279e-06, 1.1109999995539965e-06, 1.069999999714355e-06, 1.069000000519793e-06]</msg>
<status status="PASS" starttime="20201029 18:17:03.735" endtime="20201029 18:17:03.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.731" endtime="20201029 18:17:03.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.337" endtime="20201029 18:17:03.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.336" endtime="20201029 18:17:03.739"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.749" endtime="20201029 18:17:03.759"></status>
</kw>
<msg timestamp="20201029 18:17:03.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.747" endtime="20201029 18:17:03.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.762" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.760" endtime="20201029 18:17:03.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.763" endtime="20201029 18:17:03.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.742" endtime="20201029 18:17:03.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.741" endtime="20201029 18:17:03.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.772" endtime="20201029 18:17:04.081"></status>
</kw>
<msg timestamp="20201029 18:17:04.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.999687778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.999688861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.770" endtime="20201029 18:17:04.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.999687778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.999688861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.086" endtime="20201029 18:17:04.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.107" endtime="20201029 18:17:04.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.768" endtime="20201029 18:17:04.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.766" endtime="20201029 18:17:04.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:04.121" level="INFO">${RESULT} = [{'diff': 1.0829999999018014e-06}, {'diff': 1.000000000139778e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.000000000139778e-06}, {'diff': 1.0409999999794195e-06...</msg>
<status status="PASS" starttime="20201029 18:17:04.114" endtime="20201029 18:17:04.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:04.133" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0829999999018014e-06, 1.000000000139778e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.000000000139778e-06, 1.0409999999794195e-06, 1.0970000001719882e-06, 1.0139999995217863e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:04.123" endtime="20201029 18:17:04.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.141" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:04.139" endtime="20201029 18:17:04.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.147" level="INFO">VALUE: [1.0829999999018014e-06, 1.000000000139778e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.000000000139778e-06, 1.0409999999794195e-06, 1.0970000001719882e-06, 1.0139999995217863e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0549999993614279e-06, 1.1109999995539965e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.2359999992384019e-06, 1.069999999714355e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0549999993614279e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.041000000867598e-06, 1.069999999714355e-06, 9.719999995994044e-07, 1.0420000000621599e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0839999999845418e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 18:17:04.144" endtime="20201029 18:17:04.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.135" endtime="20201029 18:17:04.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.739" endtime="20201029 18:17:04.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.739" endtime="20201029 18:17:04.150"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.166" endtime="20201029 18:17:04.180"></status>
</kw>
<msg timestamp="20201029 18:17:04.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.163" endtime="20201029 18:17:04.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.184" endtime="20201029 18:17:04.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.189" endtime="20201029 18:17:04.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.158" endtime="20201029 18:17:04.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.154" endtime="20201029 18:17:04.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.198" endtime="20201029 18:17:04.514"></status>
</kw>
<msg timestamp="20201029 18:17:04.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.384624389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.384625431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.196" endtime="20201029 18:17:04.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.384624389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.384625431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.519" endtime="20201029 18:17:04.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.529" endtime="20201029 18:17:04.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.194" endtime="20201029 18:17:04.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.192" endtime="20201029 18:17:04.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:04.536" level="INFO">${RESULT} = [{'diff': 1.0420000000621599e-06}, {'diff': 1.0549999993614279e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.000000000139778e-0...</msg>
<status status="PASS" starttime="20201029 18:17:04.533" endtime="20201029 18:17:04.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:04.542" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0420000000621599e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0839999999845418e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.0560000003323466e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:04.537" endtime="20201029 18:17:04.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.546" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:04.545" endtime="20201029 18:17:04.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.548" level="INFO">VALUE: [1.0420000000621599e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0839999999845418e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.250000000396767e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.0970000001719882e-06, 1.0700000006025334e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0689999996316146e-06, 1.0549999993614279e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.0700000006025334e-06, 1.0549999993614279e-06, 1.0700000006025334e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0409999999794195e-06, 1.0970000001719882e-06, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.0549999993614279e-06, 1.0280000006801515e-06, 1.0269999997092327e-06, 1.027999999791973e-06]</msg>
<status status="PASS" starttime="20201029 18:17:04.547" endtime="20201029 18:17:04.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.542" endtime="20201029 18:17:04.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.152" endtime="20201029 18:17:04.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.151" endtime="20201029 18:17:04.550"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.557" endtime="20201029 18:17:04.568"></status>
</kw>
<msg timestamp="20201029 18:17:04.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.556" endtime="20201029 18:17:04.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.571" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.569" endtime="20201029 18:17:04.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.572" endtime="20201029 18:17:04.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.553" endtime="20201029 18:17:04.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.552" endtime="20201029 18:17:04.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.581" endtime="20201029 18:17:04.901"></status>
</kw>
<msg timestamp="20201029 18:17:04.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.794672361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.794673444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.579" endtime="20201029 18:17:04.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.794672361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.794673444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.906" endtime="20201029 18:17:04.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.916" endtime="20201029 18:17:04.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.576" endtime="20201029 18:17:04.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.575" endtime="20201029 18:17:04.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:04.923" level="INFO">${RESULT} = [{'diff': 1.0829999999018014e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.069999999714355e-06}, {'diff': 1.0839999999845418e-0...</msg>
<status status="PASS" starttime="20201029 18:17:04.919" endtime="20201029 18:17:04.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:04.927" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0829999999018014e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.0980000002547285e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:04.924" endtime="20201029 18:17:04.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.931" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:04.930" endtime="20201029 18:17:04.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.934" level="INFO">VALUE: [1.0829999999018014e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.0549999993614279e-06, 1.0280000006801515e-06, 1.0269999997092327e-06, 1.027999999791973e-06, 1.2360000001265803e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0830000007899798e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.1109999995539965e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.1250000007123617e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0559999994441682e-06, 1.0409999999794195e-06, 1.0549999993614279e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 1.027999999791973e-06, 1.0829999999018014e-06, 1.0409999999794195e-06, 9.720000004875828e-07, 1.0970000001719882e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.1109999995539965e-06, 1.0700000006025334e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 18:17:04.932" endtime="20201029 18:17:04.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.928" endtime="20201029 18:17:04.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.551" endtime="20201029 18:17:04.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.550" endtime="20201029 18:17:04.935"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.944" endtime="20201029 18:17:04.954"></status>
</kw>
<msg timestamp="20201029 18:17:04.954" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.942" endtime="20201029 18:17:04.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.957" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.955" endtime="20201029 18:17:04.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.958" endtime="20201029 18:17:04.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.939" endtime="20201029 18:17:04.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.937" endtime="20201029 18:17:04.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.967" endtime="20201029 18:17:05.279"></status>
</kw>
<msg timestamp="20201029 18:17:05.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.173506806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.173507847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.966" endtime="20201029 18:17:05.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.173506806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.173507847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.285" endtime="20201029 18:17:05.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.295" endtime="20201029 18:17:05.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.963" endtime="20201029 18:17:05.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.961" endtime="20201029 18:17:05.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:05.302" level="INFO">${RESULT} = [{'diff': 1.0409999999794195e-06}, {'diff': 9.720000004875828e-07}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0550000002496063e-0...</msg>
<status status="PASS" starttime="20201029 18:17:05.299" endtime="20201029 18:17:05.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:05.307" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0409999999794195e-06, 9.720000004875828e-07, 1.0970000001719882e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.1109999995539965e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:05.303" endtime="20201029 18:17:05.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.312" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:05.311" endtime="20201029 18:17:05.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.314" level="INFO">VALUE: [1.0409999999794195e-06, 9.720000004875828e-07, 1.0970000001719882e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.1109999995539965e-06, 1.0700000006025334e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.262999999696035e-06, 1.0549999993614279e-06, 1.0419999991739815e-06, 1.069999999714355e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.000000000139778e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.069000000519793e-06, 1.0419999991739815e-06, 1.0420000000621599e-06, 1.0280000006801515e-06, 1.0689999996316146e-06, 1.0140000004099647e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0829999999018014e-06, 1.0839999999845418e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.1109999995539965e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.111000000442175e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0550000002496063e-06]</msg>
<status status="PASS" starttime="20201029 18:17:05.313" endtime="20201029 18:17:05.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.308" endtime="20201029 18:17:05.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.936" endtime="20201029 18:17:05.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.936" endtime="20201029 18:17:05.316"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.323" endtime="20201029 18:17:05.334"></status>
</kw>
<msg timestamp="20201029 18:17:05.334" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.322" endtime="20201029 18:17:05.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.337" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.335" endtime="20201029 18:17:05.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.338" endtime="20201029 18:17:05.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.319" endtime="20201029 18:17:05.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.318" endtime="20201029 18:17:05.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.347" endtime="20201029 18:17:05.665"></status>
</kw>
<msg timestamp="20201029 18:17:05.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.548946958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.548948014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.345" endtime="20201029 18:17:05.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.548946958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.548948014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.670" endtime="20201029 18:17:05.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.680" endtime="20201029 18:17:05.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.343" endtime="20201029 18:17:05.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.341" endtime="20201029 18:17:05.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:05.687" level="INFO">${RESULT} = [{'diff': 1.0559999994441682e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0689999996316146e-0...</msg>
<status status="PASS" starttime="20201029 18:17:05.683" endtime="20201029 18:17:05.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:05.692" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999994441682e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.069000000519793e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:05.688" endtime="20201029 18:17:05.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.696" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:05.695" endtime="20201029 18:17:05.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.699" level="INFO">VALUE: [1.0559999994441682e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.111000000442175e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.2370000002093207e-06, 1.0829999999018014e-06, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.0700000006025334e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.069000000519793e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0829999999018014e-06, 1.0559999994441682e-06, 1.1249999998241833e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0559999994441682e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.027999999791973e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0140000004099647e-06, 1.0549999993614279e-06, 1.0269999997092327e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0139999995217863e-06, 1.0409999999794195e-06, 1.0700000006025334e-06, 1.000000000139778e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.069000000519793e-06]</msg>
<status status="PASS" starttime="20201029 18:17:05.698" endtime="20201029 18:17:05.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.693" endtime="20201029 18:17:05.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.316" endtime="20201029 18:17:05.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.316" endtime="20201029 18:17:05.701"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.708" endtime="20201029 18:17:05.718"></status>
</kw>
<msg timestamp="20201029 18:17:05.719" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.707" endtime="20201029 18:17:05.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.720" endtime="20201029 18:17:05.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.722" endtime="20201029 18:17:05.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.704" endtime="20201029 18:17:05.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.703" endtime="20201029 18:17:05.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.733" endtime="20201029 18:17:06.042"></status>
</kw>
<msg timestamp="20201029 18:17:06.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.917752139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.917753194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.730" endtime="20201029 18:17:06.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.917752139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.917753194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.047" endtime="20201029 18:17:06.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.057" endtime="20201029 18:17:06.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.728" endtime="20201029 18:17:06.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.726" endtime="20201029 18:17:06.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:06.064" level="INFO">${RESULT} = [{'diff': 1.0550000002496063e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.0139999995217863e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0700000006025334e-...</msg>
<status status="PASS" starttime="20201029 18:17:06.060" endtime="20201029 18:17:06.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:06.069" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0550000002496063e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0139999995217863e-06, 1.0409999999794195e-06, 1.0700000006025334e-06, 1.000000000139778e-06, 1.0689999996316146e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:06.065" endtime="20201029 18:17:06.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.073" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:06.072" endtime="20201029 18:17:06.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.075" level="INFO">VALUE: [1.0550000002496063e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0139999995217863e-06, 1.0409999999794195e-06, 1.0700000006025334e-06, 1.000000000139778e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.262999999696035e-06, 1.0689999996316146e-06, 1.0549999993614279e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0839999999845418e-06, 1.069000000519793e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.111000000442175e-06, 1.012999999439046e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0549999993614279e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.0559999994441682e-06, 1.111000000442175e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.027999999791973e-06, 1.0830000007899798e-06, 1.0969999992838098e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.0140000004099647e-06, 1.0560000003323466e-06, 1.1249999998241833e-06, 1.0700000006025334e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.0969999992838098e-06, 9.860000007577696e-07, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0689999996316146e-06]</msg>
<status status="PASS" starttime="20201029 18:17:06.074" endtime="20201029 18:17:06.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.070" endtime="20201029 18:17:06.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.701" endtime="20201029 18:17:06.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.701" endtime="20201029 18:17:06.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.277" endtime="20201029 18:17:06.077"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:58.210" endtime="20201029 18:17:06.078" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:06.085" endtime="20201029 18:17:06.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.083" endtime="20201029 18:17:06.105"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.118" endtime="20201029 18:17:06.130"></status>
</kw>
<msg timestamp="20201029 18:17:06.131" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.117" endtime="20201029 18:17:06.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.132" endtime="20201029 18:17:06.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.136" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:06.134" endtime="20201029 18:17:06.137"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:06.114" endtime="20201029 18:17:06.137"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:06.112" endtime="20201029 18:17:06.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.110" endtime="20201029 18:17:06.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:06.142" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:06.141" endtime="20201029 18:17:06.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.139" endtime="20201029 18:17:06.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.109" endtime="20201029 18:17:06.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.109" endtime="20201029 18:17:06.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.144" endtime="20201029 18:17:06.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.107" endtime="20201029 18:17:06.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.106" endtime="20201029 18:17:06.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.081" endtime="20201029 18:17:06.146"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.155" endtime="20201029 18:17:06.166"></status>
</kw>
<msg timestamp="20201029 18:17:06.167" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.153" endtime="20201029 18:17:06.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.168" endtime="20201029 18:17:06.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.170" endtime="20201029 18:17:06.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.151" endtime="20201029 18:17:06.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.149" endtime="20201029 18:17:06.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.179" endtime="20201029 18:17:06.465"></status>
</kw>
<msg timestamp="20201029 18:17:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061364819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061374417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.178" endtime="20201029 18:17:06.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061364819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061374417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.469" endtime="20201029 18:17:06.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.478" endtime="20201029 18:17:06.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.175" endtime="20201029 18:17:06.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.173" endtime="20201029 18:17:06.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:06.484" level="INFO">${RESULT} = [{'diff': 9.597999999999551e-06}, {'diff': 9.195000000003506e-06}, {'diff': 9.195000000003506e-06}, {'diff': 9.222000000003172e-06}, {'diff': 9.208999999996137e-06}, {'diff': 9.222000000003172e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:06.481" endtime="20201029 18:17:06.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:06.489" level="INFO">${OVERHEAD} = {'diff': [9.597999999999551e-06, 9.195000000003506e-06, 9.195000000003506e-06, 9.222000000003172e-06, 9.208999999996137e-06, 9.222000000003172e-06, 9.221999999996233e-06, 9.208000000003602e-06, 9.1809...</msg>
<status status="PASS" starttime="20201029 18:17:06.485" endtime="20201029 18:17:06.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.493" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:06.492" endtime="20201029 18:17:06.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.495" level="INFO">VALUE: [9.597999999999551e-06, 9.195000000003506e-06, 9.195000000003506e-06, 9.222000000003172e-06, 9.208999999996137e-06, 9.222000000003172e-06, 9.221999999996233e-06, 9.208000000003602e-06, 9.180999999996997e-06, 9.222000000003172e-06, 9.193999999997093e-06, 9.137999999998814e-06, 9.195000000003506e-06, 9.180999999996997e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.209000000003076e-06, 9.264000000001882e-06, 9.222000000003172e-06, 9.153000000004796e-06, 9.207999999996663e-06, 9.221999999996233e-06, 9.207999999996663e-06, 9.208999999996137e-06, 9.26299999999547e-06, 9.222999999995707e-06, 9.221999999996233e-06, 9.221999999996233e-06, 9.292000000001022e-06, 9.194000000004032e-06, 9.208999999996137e-06, 9.193999999997093e-06, 9.223000000002646e-06, 9.165999999997954e-06, 9.193999999997093e-06, 9.194000000004032e-06, 9.222000000003172e-06, 9.194999999989628e-06, 9.209000000010015e-06, 9.222000000003172e-06, 9.222999999988768e-06, 9.222000000003172e-06, 9.208000000010541e-06, 9.193999999990154e-06, 9.195000000003506e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.208999999996137e-06, 9.207999999996663e-06]</msg>
<status status="PASS" starttime="20201029 18:17:06.494" endtime="20201029 18:17:06.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.489" endtime="20201029 18:17:06.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.148" endtime="20201029 18:17:06.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.147" endtime="20201029 18:17:06.497"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.505" endtime="20201029 18:17:06.516"></status>
</kw>
<msg timestamp="20201029 18:17:06.516" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.503" endtime="20201029 18:17:06.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.517" endtime="20201029 18:17:06.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.520" endtime="20201029 18:17:06.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.501" endtime="20201029 18:17:06.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.499" endtime="20201029 18:17:06.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.529" endtime="20201029 18:17:06.835"></status>
</kw>
<msg timestamp="20201029 18:17:06.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062464014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062473236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.527" endtime="20201029 18:17:06.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062464014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062473236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.840" endtime="20201029 18:17:06.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.850" endtime="20201029 18:17:06.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.525" endtime="20201029 18:17:06.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.523" endtime="20201029 18:17:06.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:06.865" level="INFO">${RESULT} = [{'diff': 9.222000000003172e-06}, {'diff': 9.194999999989628e-06}, {'diff': 9.209000000010015e-06}, {'diff': 9.222000000003172e-06}, {'diff': 9.222999999988768e-06}, {'diff': 9.222000000003172e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:06.861" endtime="20201029 18:17:06.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:06.870" level="INFO">${OVERHEAD} = {'diff': [9.222000000003172e-06, 9.194999999989628e-06, 9.209000000010015e-06, 9.222000000003172e-06, 9.222999999988768e-06, 9.222000000003172e-06, 9.208000000010541e-06, 9.193999999990154e-06, 9.1950...</msg>
<status status="PASS" starttime="20201029 18:17:06.866" endtime="20201029 18:17:06.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.874" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:06.873" endtime="20201029 18:17:06.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.877" level="INFO">VALUE: [9.222000000003172e-06, 9.194999999989628e-06, 9.209000000010015e-06, 9.222000000003172e-06, 9.222999999988768e-06, 9.222000000003172e-06, 9.208000000010541e-06, 9.193999999990154e-06, 9.195000000003506e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.208999999996137e-06, 9.207999999996663e-06, 9.639000000005726e-06, 9.207999999982786e-06, 9.209000000010015e-06, 9.207999999982786e-06, 9.15300000003949e-06, 9.180999999969242e-06, 9.222000000030928e-06, 9.209000000010015e-06, 9.221999999975417e-06, 9.221999999975417e-06, 9.222000000030928e-06, 9.222000000030928e-06, 9.207999999982786e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.195000000017384e-06, 9.16699999997661e-06, 9.221999999975417e-06, 9.181000000024753e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.222000000030928e-06, 9.222000000030928e-06, 9.222000000030928e-06, 9.223000000002646e-06, 9.235999999968048e-06, 9.221999999975417e-06, 9.221999999975417e-06, 9.209000000010015e-06, 9.222000000030928e-06, 9.236999999995277e-06, 9.221999999975417e-06, 9.195000000017384e-06, 9.209000000010015e-06, 9.152000000012261e-06, 9.209000000010015e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.26399999995331e-06, 9.221999999975417e-06, 9.223000000002646e-06, 9.209000000010015e-06, 9.209000000010015e-06, 9.207999999982786e-06, 9.124999999998717e-06, 9.221999999975417e-06, 9.222999999947135e-06, 9.236000000023559e-06]</msg>
<status status="PASS" starttime="20201029 18:17:06.875" endtime="20201029 18:17:06.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.871" endtime="20201029 18:17:06.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.498" endtime="20201029 18:17:06.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.498" endtime="20201029 18:17:06.879"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.886" endtime="20201029 18:17:06.897"></status>
</kw>
<msg timestamp="20201029 18:17:06.897" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.885" endtime="20201029 18:17:06.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.899" endtime="20201029 18:17:06.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.901" endtime="20201029 18:17:06.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.882" endtime="20201029 18:17:06.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.880" endtime="20201029 18:17:06.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.910" endtime="20201029 18:17:07.213"></status>
</kw>
<msg timestamp="20201029 18:17:07.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402904681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.402913833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.908" endtime="20201029 18:17:07.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402904681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.402913833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.220" endtime="20201029 18:17:07.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.230" endtime="20201029 18:17:07.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.906" endtime="20201029 18:17:07.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.904" endtime="20201029 18:17:07.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.237" level="INFO">${RESULT} = [{'diff': 9.152000000012261e-06}, {'diff': 9.209000000010015e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.221999999975417e-06}, {'diff': 9.26399999995331e-06}, {'diff': 9.221999999975417e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:07.233" endtime="20201029 18:17:07.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:07.241" level="INFO">${OVERHEAD} = {'diff': [9.152000000012261e-06, 9.209000000010015e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.26399999995331e-06, 9.221999999975417e-06, 9.223000000002646e-06, 9.209000000010015e-06, 9.20900...</msg>
<status status="PASS" starttime="20201029 18:17:07.238" endtime="20201029 18:17:07.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:07.244" endtime="20201029 18:17:07.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.248" level="INFO">VALUE: [9.152000000012261e-06, 9.209000000010015e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.26399999995331e-06, 9.221999999975417e-06, 9.223000000002646e-06, 9.209000000010015e-06, 9.209000000010015e-06, 9.207999999982786e-06, 9.124999999998717e-06, 9.221999999975417e-06, 9.222999999947135e-06, 9.236000000023559e-06, 9.707999999997163e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.222999999947135e-06, 9.221999999975417e-06, 9.236999999995277e-06, 9.223000000058157e-06, 9.236000000023559e-06, 9.209000000010015e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.209000000010015e-06, 9.236000000023559e-06, 9.195000000072895e-06, 9.221999999975417e-06, 9.207999999927274e-06, 9.236000000023559e-06, 9.207999999927274e-06, 9.236000000023559e-06, 9.167000000087633e-06, 9.209000000010015e-06, 9.208000000038297e-06, 9.236000000023559e-06, 9.221999999975417e-06, 9.221999999975417e-06, 9.207999999927274e-06, 9.208000000038297e-06, 9.209000000010015e-06, 9.181000000024753e-06, 9.250000000071701e-06, 9.194000000101177e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.207999999927274e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.209000000010015e-06, 9.222999999947135e-06, 9.306000000042225e-06, 9.221999999975417e-06, 9.207999999927274e-06, 9.208000000038297e-06, 9.291999999994083e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.208000000038297e-06]</msg>
<status status="PASS" starttime="20201029 18:17:07.246" endtime="20201029 18:17:07.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.242" endtime="20201029 18:17:07.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.879" endtime="20201029 18:17:07.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.879" endtime="20201029 18:17:07.249"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.258" endtime="20201029 18:17:07.269"></status>
</kw>
<msg timestamp="20201029 18:17:07.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.256" endtime="20201029 18:17:07.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.271" endtime="20201029 18:17:07.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.273" endtime="20201029 18:17:07.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.253" endtime="20201029 18:17:07.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.251" endtime="20201029 18:17:07.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.282" endtime="20201029 18:17:07.589"></status>
</kw>
<msg timestamp="20201029 18:17:07.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.773224167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.773233389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.280" endtime="20201029 18:17:07.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.773224167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.773233389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.594" endtime="20201029 18:17:07.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.604" endtime="20201029 18:17:07.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.278" endtime="20201029 18:17:07.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.276" endtime="20201029 18:17:07.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.611" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.221999999975417e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.193999999990154e-06}, {'diff': 9.209000000010015e-06}, {'diff': 9.222999999947135e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:07.608" endtime="20201029 18:17:07.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:07.617" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.209000000010015e-06, 9.222999999947135e-06, 9.306000000042225e-06, 9.221999999975417e-06, 9.2079...</msg>
<status status="PASS" starttime="20201029 18:17:07.612" endtime="20201029 18:17:07.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.621" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:07.620" endtime="20201029 18:17:07.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.623" level="INFO">VALUE: [9.222000000086439e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.209000000010015e-06, 9.222999999947135e-06, 9.306000000042225e-06, 9.221999999975417e-06, 9.207999999927274e-06, 9.208000000038297e-06, 9.291999999994083e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.652999999998357e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.19499999985085e-06, 9.29199999988306e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.221999999864394e-06, 9.179999999942012e-06, 9.195000000072895e-06, 9.221999999864394e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.181000000024753e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.236000000134581e-06, 9.179999999942012e-06, 9.181000000024753e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.181000000024753e-06, 9.276999999974223e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.236000000134581e-06, 9.26400000000882e-06, 9.166000000115915e-06, 9.195000000072895e-06, 9.19499999985085e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.208999999898992e-06, 9.222999999947135e-06, 9.193999999990154e-06, 9.153000000150513e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.207999999816252e-06, 9.221999999864394e-06, 9.207999999816252e-06, 9.181000000024753e-06, 9.209000000121037e-06, 9.221999999864394e-06]</msg>
<status status="PASS" starttime="20201029 18:17:07.622" endtime="20201029 18:17:07.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.617" endtime="20201029 18:17:07.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.250" endtime="20201029 18:17:07.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.250" endtime="20201029 18:17:07.625"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.633" endtime="20201029 18:17:07.643"></status>
</kw>
<msg timestamp="20201029 18:17:07.644" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.631" endtime="20201029 18:17:07.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.645" endtime="20201029 18:17:07.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.648" endtime="20201029 18:17:07.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.629" endtime="20201029 18:17:07.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.627" endtime="20201029 18:17:07.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.658" endtime="20201029 18:17:07.967"></status>
</kw>
<msg timestamp="20201029 18:17:07.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.134350042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.134359264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.656" endtime="20201029 18:17:07.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.134350042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.134359264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.972" endtime="20201029 18:17:07.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.982" endtime="20201029 18:17:07.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.653" endtime="20201029 18:17:07.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.651" endtime="20201029 18:17:07.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.989" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.222999999947135e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.222999999947135e-06}, {'diff': 9.193999999990154e-06}, {'diff': 9.153000000150513e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:07.985" endtime="20201029 18:17:07.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:07.995" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.222999999947135e-06, 9.208999999898992e-06, 9.222999999947135e-06, 9.193999999990154e-06, 9.153000000150513e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.2079...</msg>
<status status="PASS" starttime="20201029 18:17:07.990" endtime="20201029 18:17:07.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.999" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:07.998" endtime="20201029 18:17:07.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.001" level="INFO">VALUE: [9.222000000086439e-06, 9.222999999947135e-06, 9.208999999898992e-06, 9.222999999947135e-06, 9.193999999990154e-06, 9.153000000150513e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.207999999816252e-06, 9.221999999864394e-06, 9.207999999816252e-06, 9.181000000024753e-06, 9.209000000121037e-06, 9.221999999864394e-06, 9.652999999998357e-06, 9.16699999997661e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.138999999880326e-06, 9.209000000121037e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.236000000134581e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.181000000024753e-06, 9.152999999928468e-06, 9.235999999912536e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.236999999995277e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.208000000038297e-06, 9.235999999912536e-06, 9.208000000038297e-06, 9.195000000072895e-06, 9.209000000121037e-06, 9.179999999942012e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.222999999947135e-06, 9.166000000115915e-06]</msg>
<status status="PASS" starttime="20201029 18:17:08.000" endtime="20201029 18:17:08.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.995" endtime="20201029 18:17:08.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.626" endtime="20201029 18:17:08.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.625" endtime="20201029 18:17:08.003"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.011" endtime="20201029 18:17:08.021"></status>
</kw>
<msg timestamp="20201029 18:17:08.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.009" endtime="20201029 18:17:08.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.023" endtime="20201029 18:17:08.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.025" endtime="20201029 18:17:08.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.006" endtime="20201029 18:17:08.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.005" endtime="20201029 18:17:08.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.034" endtime="20201029 18:17:08.327"></status>
</kw>
<msg timestamp="20201029 18:17:08.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.498743292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.4987525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:08.033" endtime="20201029 18:17:08.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.498743292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.4987525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:08.332" endtime="20201029 18:17:08.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.342" endtime="20201029 18:17:08.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.030" endtime="20201029 18:17:08.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.028" endtime="20201029 18:17:08.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.349" level="INFO">${RESULT} = [{'diff': 9.208000000038297e-06}, {'diff': 9.195000000072895e-06}, {'diff': 9.209000000121037e-06}, {'diff': 9.179999999942012e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.235999999912536e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:08.346" endtime="20201029 18:17:08.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:08.354" level="INFO">${OVERHEAD} = {'diff': [9.208000000038297e-06, 9.195000000072895e-06, 9.209000000121037e-06, 9.179999999942012e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.2080...</msg>
<status status="PASS" starttime="20201029 18:17:08.350" endtime="20201029 18:17:08.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.358" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:08.357" endtime="20201029 18:17:08.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.360" level="INFO">VALUE: [9.208000000038297e-06, 9.195000000072895e-06, 9.209000000121037e-06, 9.179999999942012e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.222999999947135e-06, 9.166000000115915e-06, 9.624999999902073e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.209000000121037e-06, 9.208999999898992e-06, 9.221999999864394e-06, 9.193999999990154e-06, 9.221999999864394e-06, 9.222999999947135e-06, 9.26400000000882e-06, 9.209000000121037e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.221999999864394e-06, 9.292000000105105e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.221999999864394e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.221999999864394e-06, 9.221999999864394e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.193999999990154e-06, 9.195000000072895e-06, 9.194000000212199e-06, 9.235999999912536e-06, 9.235999999912536e-06, 9.249999999960679e-06, 9.152000000067773e-06, 9.208999999898992e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.209000000121037e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.194000000212199e-06, 9.208000000038297e-06, 9.249999999960679e-06]</msg>
<status status="PASS" starttime="20201029 18:17:08.359" endtime="20201029 18:17:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.354" endtime="20201029 18:17:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.004" endtime="20201029 18:17:08.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.003" endtime="20201029 18:17:08.362"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.370" endtime="20201029 18:17:08.381"></status>
</kw>
<msg timestamp="20201029 18:17:08.381" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.369" endtime="20201029 18:17:08.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.384" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.382" endtime="20201029 18:17:08.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.385" endtime="20201029 18:17:08.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.365" endtime="20201029 18:17:08.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.364" endtime="20201029 18:17:08.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.394" endtime="20201029 18:17:08.710"></status>
</kw>
<msg timestamp="20201029 18:17:08.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.866687819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.866697028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.392" endtime="20201029 18:17:08.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.866687819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.866697028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.716" endtime="20201029 18:17:08.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.726" endtime="20201029 18:17:08.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.390" endtime="20201029 18:17:08.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.388" endtime="20201029 18:17:08.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.733" level="INFO">${RESULT} = [{'diff': 9.208999999898992e-06}, {'diff': 9.209000000121037e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.221999999864394e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:08.730" endtime="20201029 18:17:08.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:08.738" level="INFO">${OVERHEAD} = {'diff': [9.208999999898992e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.209000000121037e-06, 9.2219...</msg>
<status status="PASS" starttime="20201029 18:17:08.734" endtime="20201029 18:17:08.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.742" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:08.741" endtime="20201029 18:17:08.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.745" level="INFO">VALUE: [9.208999999898992e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.209000000121037e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.194000000212199e-06, 9.208000000038297e-06, 9.249999999960679e-06, 9.653000000220402e-06, 9.22199999964235e-06, 9.22199999964235e-06, 9.22199999964235e-06, 9.208999999898992e-06, 9.236999999995277e-06, 9.137999999797586e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.236000000356626e-06, 9.152000000067773e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.195000000072895e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.278000000279008e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.180999999802708e-06]</msg>
<status status="PASS" starttime="20201029 18:17:08.743" endtime="20201029 18:17:08.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.739" endtime="20201029 18:17:08.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.362" endtime="20201029 18:17:08.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.362" endtime="20201029 18:17:08.746"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.754" endtime="20201029 18:17:08.765"></status>
</kw>
<msg timestamp="20201029 18:17:08.765" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.752" endtime="20201029 18:17:08.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.768" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.766" endtime="20201029 18:17:08.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.769" endtime="20201029 18:17:08.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.750" endtime="20201029 18:17:08.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.748" endtime="20201029 18:17:08.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.777" endtime="20201029 18:17:09.084"></status>
</kw>
<msg timestamp="20201029 18:17:09.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.217286042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.217295264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.776" endtime="20201029 18:17:09.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.217286042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.217295264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.089" endtime="20201029 18:17:09.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.099" endtime="20201029 18:17:09.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.773" endtime="20201029 18:17:09.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.772" endtime="20201029 18:17:09.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:09.106" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.195000000072895e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.278000000279008e-06}, {'diff': 9.222000000086439e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:09.103" endtime="20201029 18:17:09.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:09.112" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.194999999628806e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.278000000279008e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.2080...</msg>
<status status="PASS" starttime="20201029 18:17:09.107" endtime="20201029 18:17:09.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.116" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:09.115" endtime="20201029 18:17:09.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.118" level="INFO">VALUE: [9.222000000086439e-06, 9.194999999628806e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.278000000279008e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.180999999802708e-06, 9.652999999776313e-06, 9.22199999964235e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.22299999972509e-06, 9.179999999719968e-06, 9.16699999997661e-06, 9.180999999802708e-06, 9.235999999912536e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.250000000182723e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.193999999990154e-06, 9.138999999880326e-06, 9.22199999964235e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.180999999802708e-06, 9.208000000260341e-06, 9.22199999964235e-06, 9.235999999912536e-06, 9.209000000343082e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.152999999706424e-06, 9.209000000343082e-06, 9.26400000000882e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.181000000246797e-06, 9.207999999816252e-06, 9.22299999972509e-06, 9.16599999989387e-06, 9.222000000086439e-06, 9.195000000072895e-06]</msg>
<status status="PASS" starttime="20201029 18:17:09.117" endtime="20201029 18:17:09.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.112" endtime="20201029 18:17:09.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.747" endtime="20201029 18:17:09.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.747" endtime="20201029 18:17:09.120"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.127" endtime="20201029 18:17:09.138"></status>
</kw>
<msg timestamp="20201029 18:17:09.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.126" endtime="20201029 18:17:09.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.139" endtime="20201029 18:17:09.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.142" endtime="20201029 18:17:09.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.123" endtime="20201029 18:17:09.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.122" endtime="20201029 18:17:09.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.152" endtime="20201029 18:17:09.472"></status>
</kw>
<msg timestamp="20201029 18:17:09.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.591044917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.591054125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.149" endtime="20201029 18:17:09.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.591044917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.591054125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.480" endtime="20201029 18:17:09.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.496" endtime="20201029 18:17:09.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.147" endtime="20201029 18:17:09.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.145" endtime="20201029 18:17:09.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:09.511" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.152999999706424e-06}, {'diff': 9.209000000343082e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.193999999990154e-06}, {'diff': 9.207999999816252e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:09.504" endtime="20201029 18:17:09.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:09.518" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.152999999706424e-06, 9.209000000343082e-06, 9.26400000000882e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.18100...</msg>
<status status="PASS" starttime="20201029 18:17:09.513" endtime="20201029 18:17:09.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.522" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:09.521" endtime="20201029 18:17:09.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.525" level="INFO">VALUE: [9.207999999816252e-06, 9.152999999706424e-06, 9.209000000343082e-06, 9.26400000000882e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.181000000246797e-06, 9.207999999816252e-06, 9.22299999972509e-06, 9.16599999989387e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.638999999950215e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.153000000150513e-06, 9.209000000343082e-06, 9.208000000260341e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.236999999995277e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.193999999990154e-06, 9.16599999989387e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.277999999834918e-06, 9.195000000072895e-06, 9.250000000182723e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.250000000182723e-06, 9.235999999912536e-06, 9.179999999719968e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.153000000150513e-06, 9.22299999972509e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 18:17:09.523" endtime="20201029 18:17:09.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.519" endtime="20201029 18:17:09.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.120" endtime="20201029 18:17:09.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.120" endtime="20201029 18:17:09.526"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.535" endtime="20201029 18:17:09.546"></status>
</kw>
<msg timestamp="20201029 18:17:09.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.534" endtime="20201029 18:17:09.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.548" endtime="20201029 18:17:09.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.550" endtime="20201029 18:17:09.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.531" endtime="20201029 18:17:09.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.528" endtime="20201029 18:17:09.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.560" endtime="20201029 18:17:09.871"></status>
</kw>
<msg timestamp="20201029 18:17:09.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.954366403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.954375611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.558" endtime="20201029 18:17:09.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.954366403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.954375611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.876" endtime="20201029 18:17:09.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.886" endtime="20201029 18:17:09.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.555" endtime="20201029 18:17:09.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.554" endtime="20201029 18:17:09.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:09.892" level="INFO">${RESULT} = [{'diff': 9.208000000260341e-06}, {'diff': 9.194000000434244e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.250000000182723e-06}, {'diff': 9.235999999912536e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:09.889" endtime="20201029 18:17:09.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:09.898" level="INFO">${OVERHEAD} = {'diff': [9.208000000260341e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.250000000182723e-06, 9.235999999912536e-06, 9.179999999719968e-06, 9.207999999816252e-06, 9.2359...</msg>
<status status="PASS" starttime="20201029 18:17:09.893" endtime="20201029 18:17:09.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.902" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:09.901" endtime="20201029 18:17:09.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.904" level="INFO">VALUE: [9.208000000260341e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.250000000182723e-06, 9.235999999912536e-06, 9.179999999719968e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.153000000150513e-06, 9.22299999972509e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.638999999950215e-06, 9.137999999797586e-06, 9.236999999995277e-06, 9.208999999898992e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.235999999912536e-06, 9.235999999912536e-06, 9.26299999992608e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.194999999628806e-06, 9.208999999898992e-06, 9.236999999995277e-06, 9.138999999880326e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.22299999972509e-06, 9.195000000072895e-06, 9.22300000016918e-06, 9.22300000016918e-06, 9.22300000016918e-06, 9.22300000016918e-06, 9.236999999995277e-06, 9.1670000004207e-06, 9.125000000054229e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.22199999964235e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.16699999997661e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.153000000150513e-06, 9.305999999931203e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.22299999972509e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.22199999964235e-06]</msg>
<status status="PASS" starttime="20201029 18:17:09.903" endtime="20201029 18:17:09.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.899" endtime="20201029 18:17:09.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.527" endtime="20201029 18:17:09.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.526" endtime="20201029 18:17:09.907"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.919" endtime="20201029 18:17:09.931"></status>
</kw>
<msg timestamp="20201029 18:17:09.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.916" endtime="20201029 18:17:09.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.935" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.932" endtime="20201029 18:17:09.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.939" endtime="20201029 18:17:09.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.913" endtime="20201029 18:17:09.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.911" endtime="20201029 18:17:09.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.959" endtime="20201029 18:17:10.283"></status>
</kw>
<msg timestamp="20201029 18:17:10.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.352726681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.352735889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.956" endtime="20201029 18:17:10.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.352726681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.352735889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.288" endtime="20201029 18:17:10.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.297" endtime="20201029 18:17:10.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.950" endtime="20201029 18:17:10.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.946" endtime="20201029 18:17:10.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:10.305" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.22300000016918e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.153000000150513e-06}, {'diff': 9.305999999931203e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:10.301" endtime="20201029 18:17:10.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:10.310" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.153000000150513e-06, 9.305999999931203e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.22299...</msg>
<status status="PASS" starttime="20201029 18:17:10.306" endtime="20201029 18:17:10.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.314" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:10.313" endtime="20201029 18:17:10.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.316" level="INFO">VALUE: [9.207999999816252e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.153000000150513e-06, 9.305999999931203e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.22299999972509e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.22199999964235e-06, 9.637999999867475e-06, 9.208000000260341e-06, 9.193999999990154e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.208999999898992e-06, 9.277999999834918e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.195000000072895e-06, 9.208999999898992e-06, 9.195000000072895e-06, 9.180999999802708e-06, 9.249999999738634e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.235999999912536e-06, 9.138999999880326e-06, 9.222000000086439e-06, 9.22199999964235e-06, 9.193999999990154e-06, 9.193999999990154e-06, 9.208999999898992e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.250000000182723e-06, 9.195000000072895e-06, 9.181000000246797e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.208000000260341e-06]</msg>
<status status="PASS" starttime="20201029 18:17:10.315" endtime="20201029 18:17:10.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.310" endtime="20201029 18:17:10.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.908" endtime="20201029 18:17:10.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.908" endtime="20201029 18:17:10.318"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.325" endtime="20201029 18:17:10.336"></status>
</kw>
<msg timestamp="20201029 18:17:10.336" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.324" endtime="20201029 18:17:10.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.339" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.338" endtime="20201029 18:17:10.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.340" endtime="20201029 18:17:10.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.321" endtime="20201029 18:17:10.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.320" endtime="20201029 18:17:10.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.352" endtime="20201029 18:17:10.670"></status>
</kw>
<msg timestamp="20201029 18:17:10.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.727717514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.727726736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.350" endtime="20201029 18:17:10.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.727717514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.727726736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.675" endtime="20201029 18:17:10.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.685" endtime="20201029 18:17:10.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.345" endtime="20201029 18:17:10.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.343" endtime="20201029 18:17:10.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:10.695" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.193999999990154e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.250000000182723e-06}, {'diff': 9.195000000072895e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:10.690" endtime="20201029 18:17:10.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:10.702" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.193999999990154e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.250000000182723e-06, 9.195000000072895e-06, 9.181000000246797e-06, 9.208000000260341e-06, 9.2079...</msg>
<status status="PASS" starttime="20201029 18:17:10.697" endtime="20201029 18:17:10.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.708" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:10.706" endtime="20201029 18:17:10.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.712" level="INFO">VALUE: [9.222000000086439e-06, 9.193999999990154e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.250000000182723e-06, 9.195000000072895e-06, 9.181000000246797e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.208000000260341e-06, 9.638999999950215e-06, 9.237000000439366e-06, 9.207999999816252e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.26400000000882e-06, 9.193999999546065e-06, 9.16599999989387e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.250000000626812e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.16699999997661e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.208999999898992e-06, 9.22300000016918e-06, 9.180000000164057e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.139000000324415e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.236000000356626e-06]</msg>
<status status="PASS" starttime="20201029 18:17:10.710" endtime="20201029 18:17:10.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.703" endtime="20201029 18:17:10.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.318" endtime="20201029 18:17:10.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.318" endtime="20201029 18:17:10.715"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.725" endtime="20201029 18:17:10.735"></status>
</kw>
<msg timestamp="20201029 18:17:10.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.723" endtime="20201029 18:17:10.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.738" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.737" endtime="20201029 18:17:10.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.739" endtime="20201029 18:17:10.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.720" endtime="20201029 18:17:10.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.718" endtime="20201029 18:17:10.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.749" endtime="20201029 18:17:11.058"></status>
</kw>
<msg timestamp="20201029 18:17:11.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.122428278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.122437486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.747" endtime="20201029 18:17:11.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.122428278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.122437486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.063" endtime="20201029 18:17:11.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.073" endtime="20201029 18:17:11.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.744" endtime="20201029 18:17:11.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.743" endtime="20201029 18:17:11.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:11.079" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.22300000016918e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.236000000356626e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:11.076" endtime="20201029 18:17:11.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:11.085" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.22200...</msg>
<status status="PASS" starttime="20201029 18:17:11.080" endtime="20201029 18:17:11.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.089" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:11.088" endtime="20201029 18:17:11.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.091" level="INFO">VALUE: [9.207999999816252e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.236000000356626e-06, 9.653000000220402e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.181000000246797e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.20800000070443e-06, 9.222999999281e-06, 9.194000000434244e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.222999999281e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.26400000000882e-06, 9.20800000070443e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.20800000070443e-06, 9.249999999738634e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.22199999919826e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.16599999989387e-06, 9.179999999275879e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 18:17:11.090" endtime="20201029 18:17:11.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.085" endtime="20201029 18:17:11.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.716" endtime="20201029 18:17:11.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.715" endtime="20201029 18:17:11.093"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.100" endtime="20201029 18:17:11.111"></status>
</kw>
<msg timestamp="20201029 18:17:11.112" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.099" endtime="20201029 18:17:11.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.114" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.113" endtime="20201029 18:17:11.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.115" endtime="20201029 18:17:11.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.096" endtime="20201029 18:17:11.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.095" endtime="20201029 18:17:11.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.124" endtime="20201029 18:17:11.441"></status>
</kw>
<msg timestamp="20201029 18:17:11.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.511702028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.51171125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:11.123" endtime="20201029 18:17:11.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.511702028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.51171125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:11.446" endtime="20201029 18:17:11.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.456" endtime="20201029 18:17:11.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.120" endtime="20201029 18:17:11.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.119" endtime="20201029 18:17:11.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:11.463" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.22199999919826e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.222000000086439e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:11.460" endtime="20201029 18:17:11.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:11.468" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.22199999919826e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.22200...</msg>
<status status="PASS" starttime="20201029 18:17:11.464" endtime="20201029 18:17:11.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.472" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:11.471" endtime="20201029 18:17:11.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.474" level="INFO">VALUE: [9.222000000086439e-06, 9.22199999919826e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.16599999989387e-06, 9.179999999275879e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.66699999960241e-06, 9.195000000516984e-06, 9.236000000356626e-06, 9.16699999997661e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.250000000626812e-06, 9.235999999468447e-06, 9.26400000000882e-06, 9.236000000356626e-06, 9.278000000279008e-06, 9.195000000516984e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.278000000279008e-06, 9.276999999308089e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.152999999706424e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.235999999468447e-06, 9.193999999546065e-06, 9.139000000324415e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.20800000070443e-06, 9.180000000164057e-06, 9.290999999578275e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.16699999997661e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 18:17:11.473" endtime="20201029 18:17:11.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.468" endtime="20201029 18:17:11.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.093" endtime="20201029 18:17:11.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.093" endtime="20201029 18:17:11.476"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.484" endtime="20201029 18:17:11.495"></status>
</kw>
<msg timestamp="20201029 18:17:11.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.482" endtime="20201029 18:17:11.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.498" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.496" endtime="20201029 18:17:11.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.499" endtime="20201029 18:17:11.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.479" endtime="20201029 18:17:11.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.478" endtime="20201029 18:17:11.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.508" endtime="20201029 18:17:11.827"></status>
</kw>
<msg timestamp="20201029 18:17:11.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.875808431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.875817639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.507" endtime="20201029 18:17:11.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.875808431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.875817639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.832" endtime="20201029 18:17:11.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.842" endtime="20201029 18:17:11.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.504" endtime="20201029 18:17:11.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.502" endtime="20201029 18:17:11.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:11.849" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.20800000070443e-06}, {'diff': 9.180000000164057e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:11.845" endtime="20201029 18:17:11.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:11.854" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.20800000070443e-06, 9.180000000164057e-06, 9.290999999578275e-06, 9.222000000086439e-06, 9.20799...</msg>
<status status="PASS" starttime="20201029 18:17:11.850" endtime="20201029 18:17:11.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.858" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:11.857" endtime="20201029 18:17:11.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.861" level="INFO">VALUE: [9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.20800000070443e-06, 9.180000000164057e-06, 9.290999999578275e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.16699999997661e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.638999999950215e-06, 9.20800000070443e-06, 9.249999999738634e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.181000000246797e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.22199999919826e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.152999999706424e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.222999999281e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.278000000279008e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.166000000782049e-06, 9.138999999436237e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.305999999931203e-06, 9.207999999816252e-06, 9.278000000279008e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.22199999919826e-06, 9.207999999816252e-06]</msg>
<status status="PASS" starttime="20201029 18:17:11.859" endtime="20201029 18:17:11.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.855" endtime="20201029 18:17:11.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.476" endtime="20201029 18:17:11.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.476" endtime="20201029 18:17:11.862"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.870" endtime="20201029 18:17:11.880"></status>
</kw>
<msg timestamp="20201029 18:17:11.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.868" endtime="20201029 18:17:11.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.882" endtime="20201029 18:17:11.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.889" endtime="20201029 18:17:11.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.866" endtime="20201029 18:17:11.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.864" endtime="20201029 18:17:11.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.897" endtime="20201029 18:17:12.207"></status>
</kw>
<msg timestamp="20201029 18:17:12.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.248570958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.248580167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.896" endtime="20201029 18:17:12.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.248570958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.248580167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.212" endtime="20201029 18:17:12.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.222" endtime="20201029 18:17:12.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.893" endtime="20201029 18:17:12.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.892" endtime="20201029 18:17:12.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:12.228" level="INFO">${RESULT} = [{'diff': 9.208999999898992e-06}, {'diff': 9.236000000356626e-06}, {'diff': 9.305999999931203e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.278000000279008e-06}, {'diff': 9.194999999628806e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:12.225" endtime="20201029 18:17:12.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:12.234" level="INFO">${OVERHEAD} = {'diff': [9.208999999898992e-06, 9.236000000356626e-06, 9.305999999931203e-06, 9.207999999816252e-06, 9.278000000279008e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.1940...</msg>
<status status="PASS" starttime="20201029 18:17:12.229" endtime="20201029 18:17:12.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.238" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:12.237" endtime="20201029 18:17:12.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.241" level="INFO">VALUE: [9.208999999898992e-06, 9.236000000356626e-06, 9.305999999931203e-06, 9.207999999816252e-06, 9.278000000279008e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.679999999789857e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.180999999358619e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.125000000054229e-06, 9.20800000070443e-06, 9.235999999468447e-06, 9.236000000356626e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.180000000164057e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.16599999989387e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.26400000000882e-06, 9.208999999898992e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.16699999997661e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.125000000054229e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.153000000594602e-06]</msg>
<status status="PASS" starttime="20201029 18:17:12.239" endtime="20201029 18:17:12.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.235" endtime="20201029 18:17:12.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.863" endtime="20201029 18:17:12.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.862" endtime="20201029 18:17:12.242"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.250" endtime="20201029 18:17:12.261"></status>
</kw>
<msg timestamp="20201029 18:17:12.261" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.248" endtime="20201029 18:17:12.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.262" endtime="20201029 18:17:12.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.265" endtime="20201029 18:17:12.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.246" endtime="20201029 18:17:12.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.244" endtime="20201029 18:17:12.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.274" endtime="20201029 18:17:12.590"></status>
</kw>
<msg timestamp="20201029 18:17:12.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.624132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.624141542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.272" endtime="20201029 18:17:12.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.624132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.624141542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.595" endtime="20201029 18:17:12.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.605" endtime="20201029 18:17:12.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.270" endtime="20201029 18:17:12.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.268" endtime="20201029 18:17:12.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:12.612" level="INFO">${RESULT} = [{'diff': 9.195000000516984e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.20800000070443e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.208999999898992e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:12.608" endtime="20201029 18:17:12.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:12.616" level="INFO">${OVERHEAD} = {'diff': [9.195000000516984e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.125000000054229e-06, 9.22200...</msg>
<status status="PASS" starttime="20201029 18:17:12.613" endtime="20201029 18:17:12.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.620" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:12.619" endtime="20201029 18:17:12.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.623" level="INFO">VALUE: [9.195000000516984e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.125000000054229e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.153000000594602e-06, 9.652999999332224e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.152999999706424e-06, 9.22199999919826e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.209000000787171e-06, 9.22300000016918e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.180000000164057e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.179999999275879e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.139000000324415e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.139000000324415e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.249999999738634e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.235999999468447e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.180999999358619e-06, 9.208999999898992e-06, 9.152999999706424e-06]</msg>
<status status="PASS" starttime="20201029 18:17:12.621" endtime="20201029 18:17:12.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.617" endtime="20201029 18:17:12.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.243" endtime="20201029 18:17:12.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.242" endtime="20201029 18:17:12.624"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.633" endtime="20201029 18:17:12.643"></status>
</kw>
<msg timestamp="20201029 18:17:12.644" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.631" endtime="20201029 18:17:12.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.645" endtime="20201029 18:17:12.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.648" endtime="20201029 18:17:12.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.628" endtime="20201029 18:17:12.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.626" endtime="20201029 18:17:12.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.657" endtime="20201029 18:17:12.980"></status>
</kw>
<msg timestamp="20201029 18:17:12.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.995338611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.995347819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.655" endtime="20201029 18:17:12.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.995338611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.995347819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.985" endtime="20201029 18:17:12.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.994" endtime="20201029 18:17:12.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.653" endtime="20201029 18:17:12.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.651" endtime="20201029 18:17:12.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.001" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.194000000434244e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:12.998" endtime="20201029 18:17:13.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:13.006" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.2359...</msg>
<status status="PASS" starttime="20201029 18:17:13.002" endtime="20201029 18:17:13.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.011" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:13.010" endtime="20201029 18:17:13.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.013" level="INFO">VALUE: [9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.235999999468447e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.180999999358619e-06, 9.208999999898992e-06, 9.152999999706424e-06, 9.653000000220402e-06, 9.194000000434244e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.16599999989387e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.304999999848462e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.249999999738634e-06, 9.22199999919826e-06, 9.194999999628806e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.278000000279008e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.194999999628806e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 18:17:13.012" endtime="20201029 18:17:13.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.007" endtime="20201029 18:17:13.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.625" endtime="20201029 18:17:13.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.624" endtime="20201029 18:17:13.015"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.022" endtime="20201029 18:17:13.033"></status>
</kw>
<msg timestamp="20201029 18:17:13.034" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.021" endtime="20201029 18:17:13.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.036" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.035" endtime="20201029 18:17:13.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.037" endtime="20201029 18:17:13.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.018" endtime="20201029 18:17:13.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.016" endtime="20201029 18:17:13.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.046" endtime="20201029 18:17:13.361"></status>
</kw>
<msg timestamp="20201029 18:17:13.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.36712525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.367134528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:13.045" endtime="20201029 18:17:13.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.36712525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.367134528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:13.366" endtime="20201029 18:17:13.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.375" endtime="20201029 18:17:13.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.042" endtime="20201029 18:17:13.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.040" endtime="20201029 18:17:13.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.382" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.22199999919826e-06}, {'diff': 9.249999999738634e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.207999999816252e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:13.379" endtime="20201029 18:17:13.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:13.388" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.16699...</msg>
<status status="PASS" starttime="20201029 18:17:13.383" endtime="20201029 18:17:13.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.392" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:13.391" endtime="20201029 18:17:13.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.394" level="INFO">VALUE: [9.278000000279008e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.638999999950215e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.139000000324415e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.180000000164057e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222999999281e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.180000000164057e-06, 9.209000000787171e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.249999999738634e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.16599999989387e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.166000000782049e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.167000000864789e-06, 9.237000000439366e-06, 9.207999999816252e-06]</msg>
<status status="PASS" starttime="20201029 18:17:13.393" endtime="20201029 18:17:13.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.389" endtime="20201029 18:17:13.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.015" endtime="20201029 18:17:13.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.015" endtime="20201029 18:17:13.396"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.403" endtime="20201029 18:17:13.415"></status>
</kw>
<msg timestamp="20201029 18:17:13.415" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.402" endtime="20201029 18:17:13.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.418" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.416" endtime="20201029 18:17:13.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.419" endtime="20201029 18:17:13.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.399" endtime="20201029 18:17:13.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.398" endtime="20201029 18:17:13.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.428" endtime="20201029 18:17:13.748"></status>
</kw>
<msg timestamp="20201029 18:17:13.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.745829833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.745839056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.427" endtime="20201029 18:17:13.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.745829833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.745839056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.753" endtime="20201029 18:17:13.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.763" endtime="20201029 18:17:13.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.423" endtime="20201029 18:17:13.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.422" endtime="20201029 18:17:13.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.770" level="INFO">${RESULT} = [{'diff': 9.22300000016918e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.16599999989387e-06}, {'diff': 9.249999999738634e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.166000000782049e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:13.766" endtime="20201029 18:17:13.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:13.774" level="INFO">${OVERHEAD} = {'diff': [9.22300000016918e-06, 9.222000000086439e-06, 9.16599999989387e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.166000000782049e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.2220000...</msg>
<status status="PASS" starttime="20201029 18:17:13.771" endtime="20201029 18:17:13.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:13.777" endtime="20201029 18:17:13.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.783" level="INFO">VALUE: [9.22300000016918e-06, 9.222000000086439e-06, 9.16599999989387e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.166000000782049e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.167000000864789e-06, 9.237000000439366e-06, 9.207999999816252e-06, 9.638999999950215e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.193999999546065e-06, 9.16699999997661e-06, 9.193999999546065e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.16699999997661e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.16699999997661e-06, 9.181000000246797e-06, 9.20800000070443e-06, 9.194999999628806e-06, 9.236000000356626e-06, 9.181000000246797e-06, 9.180000000164057e-06, 9.208999999898992e-06, 9.237000000439366e-06]</msg>
<status status="PASS" starttime="20201029 18:17:13.779" endtime="20201029 18:17:13.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.775" endtime="20201029 18:17:13.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.396" endtime="20201029 18:17:13.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.396" endtime="20201029 18:17:13.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.147" endtime="20201029 18:17:13.785"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:06.079" endtime="20201029 18:17:13.786" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:13.793" endtime="20201029 18:17:13.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.791" endtime="20201029 18:17:13.813"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.825" endtime="20201029 18:17:13.837"></status>
</kw>
<msg timestamp="20201029 18:17:13.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.824" endtime="20201029 18:17:13.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.840" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.839" endtime="20201029 18:17:13.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.843" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:13.841" endtime="20201029 18:17:13.844"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:13.821" endtime="20201029 18:17:13.844"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:13.819" endtime="20201029 18:17:13.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.818" endtime="20201029 18:17:13.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:13.849" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:13.848" endtime="20201029 18:17:13.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.846" endtime="20201029 18:17:13.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.817" endtime="20201029 18:17:13.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.816" endtime="20201029 18:17:13.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.850" endtime="20201029 18:17:13.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.815" endtime="20201029 18:17:13.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.813" endtime="20201029 18:17:13.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.790" endtime="20201029 18:17:13.853"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.862" endtime="20201029 18:17:13.882"></status>
</kw>
<msg timestamp="20201029 18:17:13.883" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.861" endtime="20201029 18:17:13.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.885" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.884" endtime="20201029 18:17:13.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.886" endtime="20201029 18:17:13.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.857" endtime="20201029 18:17:13.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.855" endtime="20201029 18:17:13.889"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.891" endtime="20201029 18:17:13.893"></status>
</kw>
<msg timestamp="20201029 18:17:13.893" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:17:13.890" endtime="20201029 18:17:13.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.898" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:13.896" endtime="20201029 18:17:13.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.900" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:13.899" endtime="20201029 18:17:13.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.894" endtime="20201029 18:17:13.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.904" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:13.903" endtime="20201029 18:17:13.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.906" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:13.905" endtime="20201029 18:17:13.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.901" endtime="20201029 18:17:13.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.913" endtime="20201029 18:17:14.199"></status>
</kw>
<msg timestamp="20201029 18:17:14.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062193083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062226833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.912" endtime="20201029 18:17:14.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062193083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062226833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.203" endtime="20201029 18:17:14.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.212" endtime="20201029 18:17:14.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.909" endtime="20201029 18:17:14.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.907" endtime="20201029 18:17:14.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:14.218" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.858400000000123e-05}, {'diff': 3.833399999999404e-05}, {'diff': 3.8346999999994136e-05}, {'diff': 3.8402999999999354e-05}, {'diff': 3.833400000000098e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:14.215" endtime="20201029 18:17:14.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:14.223" level="INFO">${OVERHEAD} = {'diff': [3.374999999999906e-05, 3.858400000000123e-05, 3.833399999999404e-05, 3.8346999999994136e-05, 3.8402999999999354e-05, 3.833400000000098e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:17:14.219" endtime="20201029 18:17:14.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.228" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:17:14.226" endtime="20201029 18:17:14.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.230" level="INFO">VALUE: [3.374999999999906e-05, 3.858400000000123e-05, 3.833399999999404e-05, 3.8346999999994136e-05, 3.8402999999999354e-05, 3.833400000000098e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.834799999999361e-05, 3.830600000000184e-05, 3.8361000000000645e-05, 3.832000000000835e-05, 3.833400000000098e-05, 3.833400000000098e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.8361000000000645e-05, 3.8346999999994136e-05, 3.833400000000098e-05, 3.830600000000184e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.8347000000008014e-05, 3.833400000000098e-05, 3.834800000000749e-05, 3.8374999999993276e-05, 3.836200000000012e-05, 3.834800000000749e-05, 3.8333000000001505e-05, 3.831999999999447e-05, 3.82780000000027e-05, 3.8374999999993276e-05, 3.8375000000007153e-05, 3.8333000000001505e-05, 3.829199999999533e-05, 3.8346999999994136e-05, 3.830499999998849e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.827699999998935e-05, 3.833400000000098e-05, 3.8333000000001505e-05, 3.8361000000000645e-05, 3.8375000000007153e-05, 3.834799999999361e-05, 3.8346999999994136e-05, 3.840199999999294e-05, 3.8333000000001505e-05, 3.8347000000008014e-05]</msg>
<status status="PASS" starttime="20201029 18:17:14.229" endtime="20201029 18:17:14.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.224" endtime="20201029 18:17:14.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.854" endtime="20201029 18:17:14.231"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:13.787" endtime="20201029 18:17:14.232" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:14.238" endtime="20201029 18:17:14.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.237" endtime="20201029 18:17:14.259"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.271" endtime="20201029 18:17:14.284"></status>
</kw>
<msg timestamp="20201029 18:17:14.284" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.270" endtime="20201029 18:17:14.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.285" endtime="20201029 18:17:14.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.290" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:14.288" endtime="20201029 18:17:14.290"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:14.267" endtime="20201029 18:17:14.290"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:14.265" endtime="20201029 18:17:14.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.264" endtime="20201029 18:17:14.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:14.296" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:14.295" endtime="20201029 18:17:14.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.292" endtime="20201029 18:17:14.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.263" endtime="20201029 18:17:14.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.262" endtime="20201029 18:17:14.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.298" endtime="20201029 18:17:14.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.261" endtime="20201029 18:17:14.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.260" endtime="20201029 18:17:14.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.236" endtime="20201029 18:17:14.302"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.311" endtime="20201029 18:17:14.453"></status>
</kw>
<msg timestamp="20201029 18:17:14.454" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.309" endtime="20201029 18:17:14.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.456" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.455" endtime="20201029 18:17:14.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.457" endtime="20201029 18:17:14.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.306" endtime="20201029 18:17:14.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.304" endtime="20201029 18:17:14.460"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.462" endtime="20201029 18:17:14.463"></status>
</kw>
<msg timestamp="20201029 18:17:14.464" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:17:14.461" endtime="20201029 18:17:14.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.468" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:14.467" endtime="20201029 18:17:14.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.470" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:14.469" endtime="20201029 18:17:14.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.464" endtime="20201029 18:17:14.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.475" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:14.474" endtime="20201029 18:17:14.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.477" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:14.476" endtime="20201029 18:17:14.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.472" endtime="20201029 18:17:14.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.484" endtime="20201029 18:17:14.777"></status>
</kw>
<msg timestamp="20201029 18:17:14.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066404556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066457833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.482" endtime="20201029 18:17:14.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066404556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066457833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.781" endtime="20201029 18:17:14.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.789" endtime="20201029 18:17:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.480" endtime="20201029 18:17:14.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.478" endtime="20201029 18:17:14.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:14.796" level="INFO">${RESULT} = [{'diff': 5.327699999999047e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.67910000000066e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.676399999999306e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:14.792" endtime="20201029 18:17:14.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:14.800" level="INFO">${OVERHEAD} = {'diff': [5.327699999999047e-05, 7.675000000000043e-05, 7.67910000000066e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.676399999999306e-05, 7.675000000000043e-05, 7.670899999999425e-05, 7.67500...</msg>
<status status="PASS" starttime="20201029 18:17:14.797" endtime="20201029 18:17:14.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.804" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:17:14.803" endtime="20201029 18:17:14.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.807" level="INFO">VALUE: [5.327699999999047e-05, 7.675000000000043e-05, 7.67910000000066e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.676399999999306e-05, 7.675000000000043e-05, 7.670899999999425e-05, 7.675000000000043e-05, 7.677799999999957e-05, 7.672199999998741e-05, 7.675000000000043e-05, 7.677800000001345e-05, 7.676399999999306e-05, 7.673599999999392e-05, 7.676399999999306e-05, 7.67360000000078e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.674999999998655e-05, 7.673599999999392e-05, 7.673700000000727e-05, 7.679200000000608e-05, 7.674999999998655e-05, 7.673600000002168e-05, 7.673600000002168e-05, 7.673599999999392e-05, 7.676299999997971e-05, 7.675000000001431e-05, 7.673599999999392e-05, 7.675000000001431e-05, 7.673599999999392e-05, 7.670800000000866e-05, 7.672200000000129e-05, 7.673599999999392e-05, 7.673599999999392e-05, 7.672200000000129e-05, 7.672200000000129e-05, 7.673599999999392e-05, 7.67919999999922e-05, 7.672200000000129e-05, 7.675000000001431e-05, 7.674999999998655e-05, 7.676400000000694e-05, 7.675000000001431e-05, 7.681900000000574e-05, 7.673600000002168e-05, 7.674999999998655e-05, 7.674999999998655e-05]</msg>
<status status="PASS" starttime="20201029 18:17:14.805" endtime="20201029 18:17:14.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.801" endtime="20201029 18:17:14.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.303" endtime="20201029 18:17:14.808"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:14.233" endtime="20201029 18:17:14.809" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:14.815" endtime="20201029 18:17:14.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.814" endtime="20201029 18:17:14.835"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.849" endtime="20201029 18:17:14.862"></status>
</kw>
<msg timestamp="20201029 18:17:14.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.848" endtime="20201029 18:17:14.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.863" endtime="20201029 18:17:14.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.868" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:14.866" endtime="20201029 18:17:14.868"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:14.845" endtime="20201029 18:17:14.869"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:14.842" endtime="20201029 18:17:14.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.841" endtime="20201029 18:17:14.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:14.873" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:14.872" endtime="20201029 18:17:14.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.870" endtime="20201029 18:17:14.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.840" endtime="20201029 18:17:14.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.840" endtime="20201029 18:17:14.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.875" endtime="20201029 18:17:14.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.838" endtime="20201029 18:17:14.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.836" endtime="20201029 18:17:14.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.813" endtime="20201029 18:17:14.877"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.886" endtime="20201029 18:17:15.308"></status>
</kw>
<msg timestamp="20201029 18:17:15.309" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.884" endtime="20201029 18:17:15.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.315" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.311" endtime="20201029 18:17:15.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.317" endtime="20201029 18:17:15.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.882" endtime="20201029 18:17:15.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.880" endtime="20201029 18:17:15.322"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.327" endtime="20201029 18:17:15.330"></status>
</kw>
<msg timestamp="20201029 18:17:15.331" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:17:15.324" endtime="20201029 18:17:15.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.339" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:15.337" endtime="20201029 18:17:15.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.344" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:15.342" endtime="20201029 18:17:15.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.332" endtime="20201029 18:17:15.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.353" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:15.351" endtime="20201029 18:17:15.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.358" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:15.356" endtime="20201029 18:17:15.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.347" endtime="20201029 18:17:15.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.375" endtime="20201029 18:17:15.674"></status>
</kw>
<msg timestamp="20201029 18:17:15.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067675708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067766347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:15.372" endtime="20201029 18:17:15.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067675708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067766347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:15.678" endtime="20201029 18:17:15.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.685" endtime="20201029 18:17:15.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.364" endtime="20201029 18:17:15.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.361" endtime="20201029 18:17:15.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:15.692" level="INFO">${RESULT} = [{'diff': 9.063900000000347e-05}, {'diff': 0.000133680000000011}, {'diff': 0.00013369400000000364}, {'diff': 0.00013367999999999713}, {'diff': 0.00013373599999999541}, {'diff': 0.00013365299999999747}...</msg>
<status status="PASS" starttime="20201029 18:17:15.689" endtime="20201029 18:17:15.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:15.696" level="INFO">${OVERHEAD} = {'diff': [9.063900000000347e-05, 0.000133680000000011, 0.00013369400000000364, 0.00013367999999999713, 0.00013373599999999541, 0.00013365299999999747, 0.0001336669999999901, 0.00013369400000000364, 0....</msg>
<status status="PASS" starttime="20201029 18:17:15.693" endtime="20201029 18:17:15.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.700" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:17:15.699" endtime="20201029 18:17:15.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.702" level="INFO">VALUE: [9.063900000000347e-05, 0.000133680000000011, 0.00013369400000000364, 0.00013367999999999713, 0.00013373599999999541, 0.00013365299999999747, 0.0001336669999999901, 0.00013369400000000364, 0.00013369399999998977, 0.00013373599999999541, 0.0001336660000000045, 0.00013369499999998924, 0.00013372300000000226, 0.00013367999999999713, 0.00013373599999999541, 0.00013369399999998977, 0.0001336809999999966, 0.0001337079999999824, 0.00013370800000001015, 0.00013366699999997622, 0.0001337079999999824, 0.00013369399999998977, 0.00013369399999998977, 0.00013372200000000278, 0.00013370800000001015, 0.00013373599999999541, 0.00013369499999998924, 0.00013369499999998924, 0.00013370800000001015, 0.00013370800000001015, 0.0001336809999999966, 0.00013369400000001752, 0.0001336809999999966, 0.0001336809999999966, 0.00013372200000000278, 0.0001336809999999966, 0.0001336800000000249, 0.00013370800000001015, 0.0001336800000000249, 0.00013369499999998924, 0.00013365300000001135, 0.0001336800000000249, 0.00013367999999996938, 0.0001336800000000249, 0.00013366600000003226, 0.00013370800000001015, 0.00013373599999999541, 0.0001336809999999966, 0.00013370899999998187, 0.0001336809999999966]</msg>
<status status="PASS" starttime="20201029 18:17:15.701" endtime="20201029 18:17:15.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.696" endtime="20201029 18:17:15.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.878" endtime="20201029 18:17:15.704"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:14.810" endtime="20201029 18:17:15.704" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:15.711" endtime="20201029 18:17:15.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.710" endtime="20201029 18:17:15.731"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.745" endtime="20201029 18:17:15.757"></status>
</kw>
<msg timestamp="20201029 18:17:15.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.744" endtime="20201029 18:17:15.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.759" endtime="20201029 18:17:15.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.763" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:15.761" endtime="20201029 18:17:15.763"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:15.741" endtime="20201029 18:17:15.764"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:15.739" endtime="20201029 18:17:15.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.738" endtime="20201029 18:17:15.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:15.769" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:15.768" endtime="20201029 18:17:15.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.766" endtime="20201029 18:17:15.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.737" endtime="20201029 18:17:15.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.736" endtime="20201029 18:17:15.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.771" endtime="20201029 18:17:15.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.734" endtime="20201029 18:17:15.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.732" endtime="20201029 18:17:15.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.708" endtime="20201029 18:17:15.774"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.783" endtime="20201029 18:17:15.804"></status>
</kw>
<msg timestamp="20201029 18:17:15.805" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.781" endtime="20201029 18:17:15.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.807" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.806" endtime="20201029 18:17:15.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.809" endtime="20201029 18:17:15.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.779" endtime="20201029 18:17:15.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.776" endtime="20201029 18:17:15.811"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.813" endtime="20201029 18:17:15.816"></status>
</kw>
<msg timestamp="20201029 18:17:15.816" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:17:15.812" endtime="20201029 18:17:15.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.820" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:15.820" endtime="20201029 18:17:15.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.823" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:15.822" endtime="20201029 18:17:15.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.817" endtime="20201029 18:17:15.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.828" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:15.827" endtime="20201029 18:17:15.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.830" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:15.829" endtime="20201029 18:17:15.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.824" endtime="20201029 18:17:15.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.837" endtime="20201029 18:17:16.122"></status>
</kw>
<msg timestamp="20201029 18:17:16.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064751, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064774236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:15.835" endtime="20201029 18:17:16.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064751, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064774236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:16.126" endtime="20201029 18:17:16.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.135" endtime="20201029 18:17:16.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.833" endtime="20201029 18:17:16.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.831" endtime="20201029 18:17:16.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:16.141" level="INFO">${RESULT} = [{'diff': 2.3235999999995927e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.2915999999997827e-05}, {'diff': 2.2874999999991652e-05}, {'diff': 2.290300000000467e-05}, {'diff': 2.29169999999973e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:16.138" endtime="20201029 18:17:16.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:16.147" level="INFO">${OVERHEAD} = {'diff': [2.3235999999995927e-05, 2.288899999999816e-05, 2.2915999999997827e-05, 2.2874999999991652e-05, 2.290300000000467e-05, 2.29169999999973e-05, 2.2902000000005196e-05, 2.288899999999816e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:17:16.143" endtime="20201029 18:17:16.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.151" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:17:16.150" endtime="20201029 18:17:16.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.154" level="INFO">VALUE: [2.3235999999995927e-05, 2.288899999999816e-05, 2.2915999999997827e-05, 2.2874999999991652e-05, 2.290300000000467e-05, 2.29169999999973e-05, 2.2902000000005196e-05, 2.288899999999816e-05, 2.290300000000467e-05, 2.2902000000005196e-05, 2.29169999999973e-05, 2.2957999999989598e-05, 2.290300000000467e-05, 2.290300000000467e-05, 2.284700000000639e-05, 2.288900000001204e-05, 2.290300000000467e-05, 2.288899999999816e-05, 2.2901999999991318e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.2916000000011705e-05, 2.2902999999990792e-05, 2.2915999999997827e-05, 2.2915999999997827e-05, 2.290300000000467e-05, 2.288899999999816e-05, 2.291700000001118e-05, 2.290300000000467e-05, 2.291700000001118e-05, 2.2902999999990792e-05, 2.293100000000381e-05, 2.297299999999558e-05, 2.2930000000004336e-05, 2.290300000000467e-05, 2.2902000000005196e-05, 2.2887999999998687e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.2915999999997827e-05, 2.2902999999990792e-05, 2.286099999999902e-05, 2.290300000000467e-05, 2.295900000000295e-05, 2.2902999999990792e-05, 2.2902000000005196e-05, 2.2915999999997827e-05, 2.29169999999973e-05, 2.2902000000005196e-05]</msg>
<status status="PASS" starttime="20201029 18:17:16.153" endtime="20201029 18:17:16.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.148" endtime="20201029 18:17:16.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.774" endtime="20201029 18:17:16.155"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:15.706" endtime="20201029 18:17:16.156" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:16.163" endtime="20201029 18:17:16.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.161" endtime="20201029 18:17:16.183"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.197" endtime="20201029 18:17:16.209"></status>
</kw>
<msg timestamp="20201029 18:17:16.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.195" endtime="20201029 18:17:16.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.211" endtime="20201029 18:17:16.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.216" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:16.214" endtime="20201029 18:17:16.216"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:16.193" endtime="20201029 18:17:16.217"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:16.190" endtime="20201029 18:17:16.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.189" endtime="20201029 18:17:16.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:16.221" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:16.221" endtime="20201029 18:17:16.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.219" endtime="20201029 18:17:16.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.188" endtime="20201029 18:17:16.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.187" endtime="20201029 18:17:16.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.223" endtime="20201029 18:17:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.186" endtime="20201029 18:17:16.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.184" endtime="20201029 18:17:16.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.160" endtime="20201029 18:17:16.226"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.236" endtime="20201029 18:17:16.382"></status>
</kw>
<msg timestamp="20201029 18:17:16.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.234" endtime="20201029 18:17:16.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.385" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.383" endtime="20201029 18:17:16.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.386" endtime="20201029 18:17:16.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.231" endtime="20201029 18:17:16.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.228" endtime="20201029 18:17:16.388"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.391" endtime="20201029 18:17:16.392"></status>
</kw>
<msg timestamp="20201029 18:17:16.393" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:17:16.389" endtime="20201029 18:17:16.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.397" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:16.396" endtime="20201029 18:17:16.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.399" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:16.398" endtime="20201029 18:17:16.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.394" endtime="20201029 18:17:16.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.405" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:16.404" endtime="20201029 18:17:16.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.407" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:16.406" endtime="20201029 18:17:16.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.401" endtime="20201029 18:17:16.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.415" endtime="20201029 18:17:16.708"></status>
</kw>
<msg timestamp="20201029 18:17:16.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067479083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067535181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:16.413" endtime="20201029 18:17:16.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067479083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067535181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:16.712" endtime="20201029 18:17:16.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.720" endtime="20201029 18:17:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.410" endtime="20201029 18:17:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.408" endtime="20201029 18:17:16.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:16.727" level="INFO">${RESULT} = [{'diff': 5.609800000000442e-05}, {'diff': 5.588900000000341e-05}, {'diff': 5.5916000000003074e-05}, {'diff': 5.590300000000992e-05}, {'diff': 5.588900000000341e-05}, {'diff': 5.5901999999996566e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:16.724" endtime="20201029 18:17:16.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:16.732" level="INFO">${OVERHEAD} = {'diff': [5.609800000000442e-05, 5.588900000000341e-05, 5.5916000000003074e-05, 5.590300000000992e-05, 5.588900000000341e-05, 5.5901999999996566e-05, 5.5944000000002214e-05, 5.591700000000255e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 18:17:16.728" endtime="20201029 18:17:16.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.736" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:17:16.735" endtime="20201029 18:17:16.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.739" level="INFO">VALUE: [5.609800000000442e-05, 5.588900000000341e-05, 5.5916000000003074e-05, 5.590300000000992e-05, 5.588900000000341e-05, 5.5901999999996566e-05, 5.5944000000002214e-05, 5.591700000000255e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.58749999999969e-05, 5.588899999998953e-05, 5.595800000000872e-05, 5.5901999999996566e-05, 5.591700000000255e-05, 5.5972000000001354e-05, 5.590299999999604e-05, 5.59590000000082e-05, 5.58749999999969e-05, 5.5901999999996566e-05, 5.590300000000992e-05, 5.588900000000341e-05, 5.591700000000255e-05, 5.5901999999996566e-05, 5.5903000000023795e-05, 5.591699999998867e-05, 5.588899999997565e-05, 5.5888000000003935e-05, 5.590299999999604e-05, 5.587500000001078e-05, 5.583299999997737e-05, 5.588900000000341e-05, 5.587500000001078e-05, 5.59580000000226e-05, 5.590299999999604e-05, 5.590299999999604e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.587499999998302e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.588899999997565e-05, 5.591600000001695e-05, 5.590299999999604e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.5915999999989197e-05, 5.591699999998867e-05, 5.588900000000341e-05, 5.591699999998867e-05]</msg>
<status status="PASS" starttime="20201029 18:17:16.737" endtime="20201029 18:17:16.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.733" endtime="20201029 18:17:16.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.226" endtime="20201029 18:17:16.740"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:16.158" endtime="20201029 18:17:16.740" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:16.747" endtime="20201029 18:17:16.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.746" endtime="20201029 18:17:16.767"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.781" endtime="20201029 18:17:16.793"></status>
</kw>
<msg timestamp="20201029 18:17:16.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.779" endtime="20201029 18:17:16.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.796" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.795" endtime="20201029 18:17:16.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.802" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:16.797" endtime="20201029 18:17:16.803"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:16.776" endtime="20201029 18:17:16.803"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:16.774" endtime="20201029 18:17:16.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.772" endtime="20201029 18:17:16.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:16.808" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:16.807" endtime="20201029 18:17:16.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.805" endtime="20201029 18:17:16.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.772" endtime="20201029 18:17:16.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.771" endtime="20201029 18:17:16.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.809" endtime="20201029 18:17:16.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.770" endtime="20201029 18:17:16.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.768" endtime="20201029 18:17:16.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.744" endtime="20201029 18:17:16.812"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.820" endtime="20201029 18:17:17.246"></status>
</kw>
<msg timestamp="20201029 18:17:17.247" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.819" endtime="20201029 18:17:17.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.249" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:17.248" endtime="20201029 18:17:17.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.250" endtime="20201029 18:17:17.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.816" endtime="20201029 18:17:17.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.814" endtime="20201029 18:17:17.253"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.255" endtime="20201029 18:17:17.256"></status>
</kw>
<msg timestamp="20201029 18:17:17.257" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:17:17.253" endtime="20201029 18:17:17.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.261" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:17.260" endtime="20201029 18:17:17.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.263" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:17.262" endtime="20201029 18:17:17.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.257" endtime="20201029 18:17:17.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.270" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:17.269" endtime="20201029 18:17:17.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.273" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:17.271" endtime="20201029 18:17:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.265" endtime="20201029 18:17:17.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.281" endtime="20201029 18:17:17.582"></status>
</kw>
<msg timestamp="20201029 18:17:17.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071272444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071350361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:17.279" endtime="20201029 18:17:17.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071272444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071350361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:17.591" endtime="20201029 18:17:17.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.608" endtime="20201029 18:17:17.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.276" endtime="20201029 18:17:17.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.275" endtime="20201029 18:17:17.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:17.624" level="INFO">${RESULT} = [{'diff': 7.79169999999968e-05}, {'diff': 7.769399999998927e-05}, {'diff': 7.768099999999611e-05}, {'diff': 7.769400000000315e-05}, {'diff': 7.769500000000262e-05}, {'diff': 7.772200000000229e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:17.617" endtime="20201029 18:17:17.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:17.633" level="INFO">${OVERHEAD} = {'diff': [7.79169999999968e-05, 7.769399999998927e-05, 7.768099999999611e-05, 7.769400000000315e-05, 7.769500000000262e-05, 7.772200000000229e-05, 7.769400000000315e-05, 7.769400000001703e-05, 7.76940...</msg>
<status status="PASS" starttime="20201029 18:17:17.626" endtime="20201029 18:17:17.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.641" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:17:17.640" endtime="20201029 18:17:17.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.643" level="INFO">VALUE: [7.79169999999968e-05, 7.769399999998927e-05, 7.768099999999611e-05, 7.769400000000315e-05, 7.769500000000262e-05, 7.772200000000229e-05, 7.769400000000315e-05, 7.769400000001703e-05, 7.769400000001703e-05, 7.772200000000229e-05, 7.769400000001703e-05, 7.766600000000401e-05, 7.768099999999611e-05, 7.76950000000165e-05, 7.765300000001085e-05, 7.769400000001703e-05, 7.769399999998927e-05, 7.769400000001703e-05, 7.768099999999611e-05, 7.769399999998927e-05, 7.769400000001703e-05, 7.769400000001703e-05, 7.774999999998755e-05, 7.767999999996889e-05, 7.76800000000244e-05, 7.769399999996152e-05, 7.769400000001703e-05, 7.767999999996889e-05, 7.766600000003177e-05, 7.766700000000348e-05, 7.759800000001205e-05, 7.769499999998875e-05, 7.770800000000966e-05, 7.768099999999611e-05, 7.773599999999492e-05, 7.769400000001703e-05, 7.768099999999611e-05, 7.769400000001703e-05, 7.768099999999611e-05, 7.776399999998018e-05, 7.769499999998875e-05, 7.762500000002559e-05, 7.773599999999492e-05, 7.768099999999611e-05, 7.768100000005163e-05, 7.768100000005163e-05, 7.769499999998875e-05, 7.769499999998875e-05, 7.773599999999492e-05, 7.770899999998138e-05]</msg>
<status status="PASS" starttime="20201029 18:17:17.642" endtime="20201029 18:17:17.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.635" endtime="20201029 18:17:17.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.813" endtime="20201029 18:17:17.644"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:16.742" endtime="20201029 18:17:17.645" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:17.651" endtime="20201029 18:17:17.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.650" endtime="20201029 18:17:17.671"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.685" endtime="20201029 18:17:17.697"></status>
</kw>
<msg timestamp="20201029 18:17:17.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:17.684" endtime="20201029 18:17:17.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:17.699" endtime="20201029 18:17:17.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.703" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:17.701" endtime="20201029 18:17:17.703"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:17.681" endtime="20201029 18:17:17.704"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:17.678" endtime="20201029 18:17:17.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.676" endtime="20201029 18:17:17.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:17.709" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:17.708" endtime="20201029 18:17:17.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.706" endtime="20201029 18:17:17.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.675" endtime="20201029 18:17:17.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.675" endtime="20201029 18:17:17.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.712" endtime="20201029 18:17:17.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.674" endtime="20201029 18:17:17.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.672" endtime="20201029 18:17:17.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.649" endtime="20201029 18:17:17.715"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.720" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:17.730" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:18.885" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:17.719" endtime="20201029 18:17:18.886"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.888" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:18.887" endtime="20201029 18:17:18.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.717" endtime="20201029 18:17:18.889"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:18.892" endtime="20201029 18:17:18.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.891" endtime="20201029 18:17:18.912"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.921" endtime="20201029 18:17:18.929"></status>
</kw>
<msg timestamp="20201029 18:17:18.930" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.919" endtime="20201029 18:17:18.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.932" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.931" endtime="20201029 18:17:18.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.933" endtime="20201029 18:17:18.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.916" endtime="20201029 18:17:18.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.915" endtime="20201029 18:17:18.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.944" endtime="20201029 18:17:19.248"></status>
</kw>
<msg timestamp="20201029 18:17:19.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:18.942" endtime="20201029 18:17:19.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.252" endtime="20201029 18:17:19.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.260" endtime="20201029 18:17:19.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.939" endtime="20201029 18:17:19.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.937" endtime="20201029 18:17:19.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:19.266" level="INFO">${PHILIP_RES} = [{'diff': 3.524999999999709e-05}, {'diff': 3.368100000000068e-05}, {'diff': 3.368100000000068e-05}, {'diff': 3.370800000000035e-05}, {'diff': 3.368100000000068e-05}, {'diff': 3.366700000000111e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:19.263" endtime="20201029 18:17:19.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:19.271" level="INFO">${RESULT} = {'diff': [3.524999999999709e-05, 3.368100000000068e-05, 3.368100000000068e-05, 3.370800000000035e-05, 3.368100000000068e-05, 3.366700000000111e-05, 3.366599999999817e-05, 3.369499999999678e-05, 3.3666...</msg>
<status status="PASS" starttime="20201029 18:17:19.267" endtime="20201029 18:17:19.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.275" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:19.274" endtime="20201029 18:17:19.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.277" level="INFO">VALUE: [3.524999999999709e-05, 3.368100000000068e-05, 3.368100000000068e-05, 3.370800000000035e-05, 3.368100000000068e-05, 3.366700000000111e-05, 3.366599999999817e-05, 3.369499999999678e-05, 3.366699999999764e-05, 3.368000000000121e-05, 3.368100000000068e-05, 3.369500000000025e-05, 3.370800000000035e-05, 3.3638999999998503e-05, 3.366699999999764e-05, 3.369400000000078e-05, 3.368100000000068e-05, 3.365300000000154e-05, 3.369400000000078e-05, 3.368100000000068e-05, 3.366699999999764e-05, 3.36519999999986e-05, 3.368100000000068e-05, 3.367999999999774e-05, 3.368099999999721e-05, 3.369400000000078e-05, 3.365300000000154e-05, 3.368100000000068e-05, 3.368000000000121e-05, 3.368100000000068e-05, 3.369500000000025e-05, 3.373599999999949e-05, 3.365299999999807e-05, 3.366699999999764e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.368000000000121e-05, 3.368000000000121e-05, 3.368100000000068e-05, 3.366600000000164e-05, 3.366700000000111e-05, 3.369500000000025e-05, 3.367999999999774e-05, 3.361200000000231e-05, 3.366699999999764e-05, 3.368000000000121e-05, 3.368100000000068e-05, 3.368000000000121e-05, 3.369400000000078e-05, 3.368100000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:17:19.276" endtime="20201029 18:17:19.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.271" endtime="20201029 18:17:19.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.913" endtime="20201029 18:17:19.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.890" endtime="20201029 18:17:19.279"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:19.281" endtime="20201029 18:17:19.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.280" endtime="20201029 18:17:19.301"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.310" endtime="20201029 18:17:19.321"></status>
</kw>
<msg timestamp="20201029 18:17:19.321" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.309" endtime="20201029 18:17:19.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.324" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.323" endtime="20201029 18:17:19.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.325" endtime="20201029 18:17:19.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.306" endtime="20201029 18:17:19.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.303" endtime="20201029 18:17:19.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.334" endtime="20201029 18:17:19.620"></status>
</kw>
<msg timestamp="20201029 18:17:19.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018226611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.333" endtime="20201029 18:17:19.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018226611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.624" endtime="20201029 18:17:19.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.632" endtime="20201029 18:17:19.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.330" endtime="20201029 18:17:19.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.328" endtime="20201029 18:17:19.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:19.639" level="INFO">${PHILIP_RES} = [{'diff': 5.2957999999998784e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.138899999999891e-05}, {'diff': 5.13470000000002e-05}, {'diff': 5.1387999999999434e-05}, {'diff': 5.140300000000195e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:19.636" endtime="20201029 18:17:19.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:19.644" level="INFO">${RESULT} = {'diff': [5.2957999999998784e-05, 5.141700000000152e-05, 5.138899999999891e-05, 5.13470000000002e-05, 5.1387999999999434e-05, 5.140300000000195e-05, 5.141700000000152e-05, 5.141699999999805e-05, 5.147...</msg>
<status status="PASS" starttime="20201029 18:17:19.640" endtime="20201029 18:17:19.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.648" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:19.647" endtime="20201029 18:17:19.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.650" level="INFO">VALUE: [5.2957999999998784e-05, 5.141700000000152e-05, 5.138899999999891e-05, 5.13470000000002e-05, 5.1387999999999434e-05, 5.140300000000195e-05, 5.141700000000152e-05, 5.141699999999805e-05, 5.147200000000032e-05, 5.143099999999762e-05, 5.144499999999719e-05, 5.141700000000152e-05, 5.141700000000152e-05, 5.137500000000281e-05, 5.141700000000152e-05, 5.143100000000109e-05, 5.141699999999805e-05, 5.138899999999891e-05, 5.143000000000161e-05, 5.145800000000075e-05, 5.1416000000002043e-05, 5.1416000000002043e-05, 5.1415999999998574e-05, 5.1401999999999004e-05, 5.141700000000152e-05, 5.144400000000118e-05, 5.140300000000195e-05, 5.143100000000109e-05, 5.137500000000281e-05, 5.140299999999848e-05, 5.140299999999848e-05, 5.138899999999891e-05, 5.141700000000152e-05, 5.141700000000152e-05, 5.141700000000152e-05, 5.13470000000002e-05, 5.141700000000152e-05, 5.143100000000109e-05, 5.140299999999848e-05, 5.133300000000063e-05, 5.141700000000152e-05, 5.143000000000161e-05, 5.140300000000195e-05, 5.1415999999998574e-05, 5.1401999999999004e-05, 5.1415999999998574e-05, 5.1443999999997714e-05, 5.143000000000161e-05, 5.1416000000002043e-05, 5.141700000000152e-05]</msg>
<status status="PASS" starttime="20201029 18:17:19.649" endtime="20201029 18:17:19.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.645" endtime="20201029 18:17:19.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.302" endtime="20201029 18:17:19.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.279" endtime="20201029 18:17:19.652"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:19.654" endtime="20201029 18:17:19.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.653" endtime="20201029 18:17:19.674"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.682" endtime="20201029 18:17:19.695"></status>
</kw>
<msg timestamp="20201029 18:17:19.696" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.681" endtime="20201029 18:17:19.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.698" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.697" endtime="20201029 18:17:19.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.699" endtime="20201029 18:17:19.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.678" endtime="20201029 18:17:19.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.676" endtime="20201029 18:17:19.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.709" endtime="20201029 18:17:19.995"></status>
</kw>
<msg timestamp="20201029 18:17:19.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017276903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.707" endtime="20201029 18:17:19.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017276903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.999" endtime="20201029 18:17:20.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.008" endtime="20201029 18:17:20.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.705" endtime="20201029 18:17:20.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.702" endtime="20201029 18:17:20.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:20.014" level="INFO">${PHILIP_RES} = [{'diff': 7.072199999999876e-05}, {'diff': 6.916599999999898e-05}, {'diff': 6.918000000000202e-05}, {'diff': 6.919399999999812e-05}, {'diff': 6.915300000000235e-05}, {'diff': 6.926399999999944e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:20.011" endtime="20201029 18:17:20.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:20.019" level="INFO">${RESULT} = {'diff': [7.072199999999876e-05, 6.916599999999898e-05, 6.918000000000202e-05, 6.919399999999812e-05, 6.915300000000235e-05, 6.926399999999944e-05, 6.916700000000192e-05, 6.916700000000192e-05, 6.9166...</msg>
<status status="PASS" starttime="20201029 18:17:20.015" endtime="20201029 18:17:20.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.024" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:20.023" endtime="20201029 18:17:20.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.026" level="INFO">VALUE: [7.072199999999876e-05, 6.916599999999898e-05, 6.918000000000202e-05, 6.919399999999812e-05, 6.915300000000235e-05, 6.926399999999944e-05, 6.916700000000192e-05, 6.916700000000192e-05, 6.916699999999845e-05, 6.915300000000235e-05, 6.920800000000116e-05, 6.918100000000149e-05, 6.916699999999845e-05, 6.915300000000235e-05, 6.915299999999888e-05, 6.915199999999941e-05, 6.913899999999931e-05, 6.916599999999898e-05, 6.917999999999855e-05, 6.916600000000245e-05, 6.917999999999855e-05, 6.924999999999987e-05, 6.916699999999845e-05, 6.918099999999802e-05, 6.918100000000149e-05, 6.911199999999965e-05, 6.916599999999898e-05, 6.913900000000278e-05, 6.916599999999898e-05, 6.916600000000245e-05, 6.919400000000159e-05, 6.911100000000017e-05, 6.920800000000116e-05, 6.918099999999802e-05, 6.915299999999888e-05, 6.915299999999888e-05, 6.915299999999888e-05, 6.919399999999812e-05, 6.913899999999931e-05, 6.913799999999984e-05, 6.92360000000003e-05, 6.916599999999898e-05, 6.919400000000159e-05, 6.915299999999888e-05, 6.915299999999888e-05, 6.915300000000235e-05, 6.915299999999888e-05, 6.916700000000192e-05, 6.916699999999845e-05, 6.916699999999845e-05]</msg>
<status status="PASS" starttime="20201029 18:17:20.025" endtime="20201029 18:17:20.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.020" endtime="20201029 18:17:20.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.675" endtime="20201029 18:17:20.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.652" endtime="20201029 18:17:20.028"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:20.030" endtime="20201029 18:17:20.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.028" endtime="20201029 18:17:20.050"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.058" endtime="20201029 18:17:20.074"></status>
</kw>
<msg timestamp="20201029 18:17:20.074" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.056" endtime="20201029 18:17:20.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.077" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.075" endtime="20201029 18:17:20.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.078" endtime="20201029 18:17:20.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.054" endtime="20201029 18:17:20.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.052" endtime="20201029 18:17:20.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.087" endtime="20201029 18:17:20.373"></status>
</kw>
<msg timestamp="20201029 18:17:20.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017238292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0173275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:20.085" endtime="20201029 18:17:20.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017238292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0173275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:20.377" endtime="20201029 18:17:20.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.385" endtime="20201029 18:17:20.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.083" endtime="20201029 18:17:20.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.081" endtime="20201029 18:17:20.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:20.392" level="INFO">${PHILIP_RES} = [{'diff': 8.920800000000034e-05}, {'diff': 8.766700000000308e-05}, {'diff': 8.765300000000004e-05}, {'diff': 8.770800000000231e-05}, {'diff': 8.763900000000047e-05}, {'diff': 8.769499999999875e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:20.389" endtime="20201029 18:17:20.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:20.396" level="INFO">${RESULT} = {'diff': [8.920800000000034e-05, 8.766700000000308e-05, 8.765300000000004e-05, 8.770800000000231e-05, 8.763900000000047e-05, 8.769499999999875e-05, 8.76669999999996e-05, 8.76669999999996e-05, 8.765200...</msg>
<status status="PASS" starttime="20201029 18:17:20.393" endtime="20201029 18:17:20.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.400" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:20.399" endtime="20201029 18:17:20.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.402" level="INFO">VALUE: [8.920800000000034e-05, 8.766700000000308e-05, 8.765300000000004e-05, 8.770800000000231e-05, 8.763900000000047e-05, 8.769499999999875e-05, 8.76669999999996e-05, 8.76669999999996e-05, 8.765200000000056e-05, 8.766600000000013e-05, 8.756899999999915e-05, 8.765200000000056e-05, 8.759700000000176e-05, 8.763900000000047e-05, 8.76799999999997e-05, 8.76669999999996e-05, 8.765300000000004e-05, 8.759699999999829e-05, 8.765200000000056e-05, 8.765200000000056e-05, 8.765300000000004e-05, 8.766600000000013e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.76669999999996e-05, 8.762499999999743e-05, 8.766600000000013e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.763900000000047e-05, 8.758300000000219e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.759700000000176e-05, 8.76799999999997e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.768099999999918e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.76669999999996e-05, 8.765200000000056e-05, 8.769399999999927e-05, 8.765300000000004e-05, 8.763900000000047e-05, 8.765200000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:17:20.401" endtime="20201029 18:17:20.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.397" endtime="20201029 18:17:20.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.050" endtime="20201029 18:17:20.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.028" endtime="20201029 18:17:20.404"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:20.406" endtime="20201029 18:17:20.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.405" endtime="20201029 18:17:20.427"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.439" endtime="20201029 18:17:20.459"></status>
</kw>
<msg timestamp="20201029 18:17:20.459" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.437" endtime="20201029 18:17:20.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.462" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.460" endtime="20201029 18:17:20.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.463" endtime="20201029 18:17:20.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.432" endtime="20201029 18:17:20.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.430" endtime="20201029 18:17:20.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.472" endtime="20201029 18:17:20.759"></status>
</kw>
<msg timestamp="20201029 18:17:20.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023535139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:20.471" endtime="20201029 18:17:20.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023535139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:20.763" endtime="20201029 18:17:20.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.771" endtime="20201029 18:17:20.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.468" endtime="20201029 18:17:20.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.466" endtime="20201029 18:17:20.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:20.778" level="INFO">${PHILIP_RES} = [{'diff': 0.00010844399999999921}, {'diff': 0.00010686099999999976}, {'diff': 0.0001068889999999989}, {'diff': 0.00010686099999999976}, {'diff': 0.00010687499999999933}, {'diff': 0.0001068749999999993...</msg>
<status status="PASS" starttime="20201029 18:17:20.774" endtime="20201029 18:17:20.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:20.782" level="INFO">${RESULT} = {'diff': [0.00010844399999999921, 0.00010686099999999976, 0.0001068889999999989, 0.00010686099999999976, 0.00010687499999999933, 0.00010687499999999933, 0.0001068750000000028, 0.00010691699999999804, ...</msg>
<status status="PASS" starttime="20201029 18:17:20.779" endtime="20201029 18:17:20.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.786" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:20.785" endtime="20201029 18:17:20.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.788" level="INFO">VALUE: [0.00010844399999999921, 0.00010686099999999976, 0.0001068889999999989, 0.00010686099999999976, 0.00010687499999999933, 0.00010687499999999933, 0.0001068750000000028, 0.00010691699999999804, 0.0001068889999999989, 0.00010687499999999933, 0.00010686099999999976, 0.00010691700000000151, 0.00010680600000000096, 0.00010688900000000237, 0.00010686099999999976, 0.00010688900000000237, 0.00010683300000000062, 0.00010684800000000313, 0.0001068750000000028, 0.0001068889999999989, 0.00010686199999999924, 0.00010690300000000194, 0.00010687499999999933, 0.00010694400000000118, 0.0001068889999999989, 0.0001068750000000028, 0.0001068889999999989, 0.0001068889999999989, 0.0001068889999999989, 0.00010684799999999967, 0.00010687499999999933, 0.00010687500000000627, 0.0001068340000000001, 0.00010693099999999761, 0.00010682000000000053, 0.00010688900000000584, 0.00010687499999999933, 0.000106901999999999, 0.00010687500000000627, 0.00010693099999999761, 0.00010687499999999933, 0.00010687499999999933, 0.0001068889999999989, 0.00010690299999999847, 0.00010684700000000019, 0.00010686099999999976, 0.00010687499999999933, 0.00010688900000000584, 0.00010684700000000019, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201029 18:17:20.787" endtime="20201029 18:17:20.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.783" endtime="20201029 18:17:20.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.428" endtime="20201029 18:17:20.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.404" endtime="20201029 18:17:20.791"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:20.793" endtime="20201029 18:17:20.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.792" endtime="20201029 18:17:20.813"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.821" endtime="20201029 18:17:20.842"></status>
</kw>
<msg timestamp="20201029 18:17:20.843" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.820" endtime="20201029 18:17:20.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.845" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.844" endtime="20201029 18:17:20.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.847" endtime="20201029 18:17:20.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.817" endtime="20201029 18:17:20.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.815" endtime="20201029 18:17:20.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.857" endtime="20201029 18:17:21.144"></status>
</kw>
<msg timestamp="20201029 18:17:21.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017540972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:20.855" endtime="20201029 18:17:21.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017540972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.147" endtime="20201029 18:17:21.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.156" endtime="20201029 18:17:21.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.852" endtime="20201029 18:17:21.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.850" endtime="20201029 18:17:21.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:21.163" level="INFO">${PHILIP_RES} = [{'diff': 0.00012841599999999925}, {'diff': 0.00012683399999999928}, {'diff': 0.00012684700000000285}, {'diff': 0.0001268329999999998}, {'diff': 0.00012684699999999938}, {'diff': 0.0001268469999999993...</msg>
<status status="PASS" starttime="20201029 18:17:21.160" endtime="20201029 18:17:21.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.168" level="INFO">${RESULT} = {'diff': [0.00012841599999999925, 0.00012683399999999928, 0.00012684700000000285, 0.0001268329999999998, 0.00012684699999999938, 0.00012684699999999938, 0.00012680600000000014, 0.00012687499999999852,...</msg>
<status status="PASS" starttime="20201029 18:17:21.164" endtime="20201029 18:17:21.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.172" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:21.171" endtime="20201029 18:17:21.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.175" level="INFO">VALUE: [0.00012841599999999925, 0.00012683399999999928, 0.00012684700000000285, 0.0001268329999999998, 0.00012684699999999938, 0.00012684699999999938, 0.00012680600000000014, 0.00012687499999999852, 0.00012686100000000242, 0.00012684799999999885, 0.00012686100000000242, 0.00012686099999999895, 0.00012686099999999895, 0.00012690300000000113, 0.00012683399999999928, 0.0001268329999999998, 0.00012687499999999852, 0.00012684799999999885, 0.00012684700000000285, 0.00012687499999999852, 0.00012687500000000199, 0.00012684799999999885, 0.00012686099999999895, 0.00012686099999999895, 0.00012679200000000057, 0.00012684799999999885, 0.00012684699999999938, 0.0001268329999999998, 0.00012684699999999938, 0.00012686100000000242, 0.00012679200000000057, 0.00012684799999999885, 0.00012686100000000242, 0.00012686099999999895, 0.00012688800000000208, 0.0001269170000000007, 0.00012681900000000024, 0.00012690299999999766, 0.00012683399999999928, 0.0001268199999999997, 0.00012684699999999938, 0.00012684700000000285, 0.00012684699999999938, 0.0001268329999999998, 0.00012686099999999895, 0.0001268329999999998, 0.00012684699999999938, 0.00012688900000000503, 0.00012684699999999938, 0.00012686100000000589]</msg>
<status status="PASS" starttime="20201029 18:17:21.174" endtime="20201029 18:17:21.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.169" endtime="20201029 18:17:21.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.814" endtime="20201029 18:17:21.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.791" endtime="20201029 18:17:21.176"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:21.179" endtime="20201029 18:17:21.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.177" endtime="20201029 18:17:21.199"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.211" endtime="20201029 18:17:21.235"></status>
</kw>
<msg timestamp="20201029 18:17:21.236" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.209" endtime="20201029 18:17:21.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.239" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.237" endtime="20201029 18:17:21.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.240" endtime="20201029 18:17:21.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.205" endtime="20201029 18:17:21.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.202" endtime="20201029 18:17:21.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.249" endtime="20201029 18:17:21.534"></status>
</kw>
<msg timestamp="20201029 18:17:21.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.247" endtime="20201029 18:17:21.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.538" endtime="20201029 18:17:21.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.545" endtime="20201029 18:17:21.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.245" endtime="20201029 18:17:21.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.243" endtime="20201029 18:17:21.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:21.552" level="INFO">${PHILIP_RES} = [{'diff': 0.00014920800000000137}, {'diff': 0.00014756999999999965}, {'diff': 0.00014756999999999965}, {'diff': 0.0001475969999999993}, {'diff': 0.00014761099999999888}, {'diff': 0.000147526999999998}...</msg>
<status status="PASS" starttime="20201029 18:17:21.549" endtime="20201029 18:17:21.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.556" level="INFO">${RESULT} = {'diff': [0.00014920800000000137, 0.00014756999999999965, 0.00014756999999999965, 0.0001475969999999993, 0.00014761099999999888, 0.000147526999999998, 0.0001475969999999993, 0.0001475969999999993, 0.0...</msg>
<status status="PASS" starttime="20201029 18:17:21.553" endtime="20201029 18:17:21.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.561" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:21.560" endtime="20201029 18:17:21.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.563" level="INFO">VALUE: [0.00014920800000000137, 0.00014756999999999965, 0.00014756999999999965, 0.0001475969999999993, 0.00014761099999999888, 0.000147526999999998, 0.0001475969999999993, 0.0001475969999999993, 0.00014758299999999974, 0.00014758400000000269, 0.0001475969999999993, 0.00014761200000000183, 0.00014762499999999845, 0.00014763899999999802, 0.0001476529999999976, 0.00014766700000000063, 0.00014759700000000278, 0.00014755600000000008, 0.0001475969999999993, 0.0001475969999999993, 0.00014758299999999974, 0.00014758299999999974, 0.0001475969999999993, 0.00014758299999999974, 0.00014756900000000017, 0.00014755600000000008, 0.00014758299999999974, 0.00014758399999999922, 0.00014758399999999922, 0.00014761099999999888, 0.00014768100000000367, 0.00014761099999999888, 0.0001475969999999993, 0.00014758299999999974, 0.00014758399999999922, 0.00014758399999999922, 0.00014756999999999965, 0.00014759799999999879, 0.00014758399999999922, 0.00014758299999999974, 0.00014756900000000017, 0.00014761099999999888, 0.0001475420000000005, 0.00014768100000000367, 0.00014765300000000453, 0.0001475969999999993, 0.00014766699999999716, 0.00014766699999999716, 0.00014758299999999974, 0.00014756999999999965]</msg>
<status status="PASS" starttime="20201029 18:17:21.562" endtime="20201029 18:17:21.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.557" endtime="20201029 18:17:21.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.200" endtime="20201029 18:17:21.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.177" endtime="20201029 18:17:21.564"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:21.567" endtime="20201029 18:17:21.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.565" endtime="20201029 18:17:21.587"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.595" endtime="20201029 18:17:21.621"></status>
</kw>
<msg timestamp="20201029 18:17:21.622" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.593" endtime="20201029 18:17:21.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.624" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.623" endtime="20201029 18:17:21.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.625" endtime="20201029 18:17:21.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.591" endtime="20201029 18:17:21.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.589" endtime="20201029 18:17:21.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.638" endtime="20201029 18:17:21.924"></status>
</kw>
<msg timestamp="20201029 18:17:21.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017259444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017430069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.636" endtime="20201029 18:17:21.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017259444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017430069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.928" endtime="20201029 18:17:21.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.936" endtime="20201029 18:17:21.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.634" endtime="20201029 18:17:21.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.632" endtime="20201029 18:17:21.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:21.942" level="INFO">${PHILIP_RES} = [{'diff': 0.00017062500000000064}, {'diff': 0.00016905600000000076}, {'diff': 0.00016907000000000033}, {'diff': 0.00016906900000000086}, {'diff': 0.00016913900000000218}, {'diff': 0.000169069000000000...</msg>
<status status="PASS" starttime="20201029 18:17:21.939" endtime="20201029 18:17:21.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.946" level="INFO">${RESULT} = {'diff': [0.00017062500000000064, 0.00016905600000000076, 0.00016907000000000033, 0.00016906900000000086, 0.00016913900000000218, 0.00016906900000000086, 0.00016906900000000086, 0.00016905499999999782...</msg>
<status status="PASS" starttime="20201029 18:17:21.943" endtime="20201029 18:17:21.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.950" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:21.949" endtime="20201029 18:17:21.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.952" level="INFO">VALUE: [0.00017062500000000064, 0.00016905600000000076, 0.00016907000000000033, 0.00016906900000000086, 0.00016913900000000218, 0.00016906900000000086, 0.00016906900000000086, 0.00016905499999999782, 0.00016905600000000076, 0.00016905600000000076, 0.00016905600000000076, 0.0001690550000000013, 0.00016904199999999772, 0.00016905600000000076, 0.00016906900000000086, 0.00016906900000000086, 0.000169097, 0.00016906900000000086, 0.0001690689999999974, 0.000169097, 0.0001690839999999999, 0.0001690839999999999, 0.00016907000000000033, 0.00016907000000000033, 0.0001690550000000013, 0.00016900000000000248, 0.00016902799999999815, 0.00016907000000000033, 0.00016902799999999815, 0.00016907000000000033, 0.0001690839999999999, 0.0001690559999999973, 0.00016905600000000076, 0.00016906900000000086, 0.0001690550000000013, 0.00016906900000000086, 0.00016902700000000215, 0.00016902800000000162, 0.0001690839999999999, 0.00016906900000000086, 0.00016905600000000076, 0.00016907000000000033, 0.00016905600000000076, 0.0001690550000000013, 0.00016902700000000215, 0.00016905499999999435, 0.00016906900000000086, 0.0001690550000000013, 0.0001690550000000013, 0.00016915299999999828]</msg>
<status status="PASS" starttime="20201029 18:17:21.951" endtime="20201029 18:17:21.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.947" endtime="20201029 18:17:21.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.587" endtime="20201029 18:17:21.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.565" endtime="20201029 18:17:21.955"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:21.957" endtime="20201029 18:17:21.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.955" endtime="20201029 18:17:21.977"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.985" endtime="20201029 18:17:22.015"></status>
</kw>
<msg timestamp="20201029 18:17:22.015" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.983" endtime="20201029 18:17:22.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.018" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.016" endtime="20201029 18:17:22.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.019" endtime="20201029 18:17:22.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.981" endtime="20201029 18:17:22.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.979" endtime="20201029 18:17:22.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.028" endtime="20201029 18:17:22.313"></status>
</kw>
<msg timestamp="20201029 18:17:22.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018118986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018311903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.026" endtime="20201029 18:17:22.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018118986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018311903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.317" endtime="20201029 18:17:22.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.325" endtime="20201029 18:17:22.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.024" endtime="20201029 18:17:22.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.022" endtime="20201029 18:17:22.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:22.331" level="INFO">${PHILIP_RES} = [{'diff': 0.00019291700000000078}, {'diff': 0.00019130599999999873}, {'diff': 0.00019130499999999925}, {'diff': 0.0001913329999999984}, {'diff': 0.00019130499999999925}, {'diff': 0.0001912920000000026...</msg>
<status status="PASS" starttime="20201029 18:17:22.328" endtime="20201029 18:17:22.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:22.336" level="INFO">${RESULT} = {'diff': [0.00019291700000000078, 0.00019130599999999873, 0.00019130499999999925, 0.0001913329999999984, 0.00019130499999999925, 0.00019129200000000263, 0.00019129199999999916, 0.00019133399999999787,...</msg>
<status status="PASS" starttime="20201029 18:17:22.332" endtime="20201029 18:17:22.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.340" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:22.339" endtime="20201029 18:17:22.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.343" level="INFO">VALUE: [0.00019291700000000078, 0.00019130599999999873, 0.00019130499999999925, 0.0001913329999999984, 0.00019130499999999925, 0.00019129200000000263, 0.00019129199999999916, 0.00019133399999999787, 0.0001912779999999996, 0.00019129199999999916, 0.0001913060000000022, 0.00019137500000000057, 0.00019131899999999882, 0.0001913329999999984, 0.00019140200000000024, 0.0001913480000000009, 0.0001912779999999996, 0.00019129199999999916, 0.00019130499999999925, 0.00019127700000000011, 0.00019130499999999925, 0.0001913329999999984, 0.00019130499999999925, 0.00019126400000000002, 0.00019131899999999882, 0.0001912779999999996, 0.000191361000000001, 0.00019123600000000088, 0.00019130500000000272, 0.00019130500000000272, 0.0001912919999999957, 0.0001913060000000022, 0.0001913060000000022, 0.00019122199999999784, 0.00019127700000000358, 0.00019127800000000306, 0.00019132000000000177, 0.0001912919999999957, 0.00019129200000000263, 0.00019129200000000263, 0.00019129200000000263, 0.00019130499999999578, 0.0001913190000000023, 0.0001913060000000022, 0.00019133400000000134, 0.0001913060000000022, 0.00019130500000000272, 0.00019130500000000272, 0.0001912359999999974, 0.00019127800000000306]</msg>
<status status="PASS" starttime="20201029 18:17:22.341" endtime="20201029 18:17:22.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.337" endtime="20201029 18:17:22.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.978" endtime="20201029 18:17:22.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.955" endtime="20201029 18:17:22.344"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:22.346" endtime="20201029 18:17:22.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.345" endtime="20201029 18:17:22.366"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.382" endtime="20201029 18:17:22.414"></status>
</kw>
<msg timestamp="20201029 18:17:22.415" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.380" endtime="20201029 18:17:22.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.417" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.416" endtime="20201029 18:17:22.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.418" endtime="20201029 18:17:22.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.370" endtime="20201029 18:17:22.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.368" endtime="20201029 18:17:22.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.427" endtime="20201029 18:17:22.719"></status>
</kw>
<msg timestamp="20201029 18:17:22.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025640972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.426" endtime="20201029 18:17:22.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025640972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.728" endtime="20201029 18:17:22.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.745" endtime="20201029 18:17:22.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.423" endtime="20201029 18:17:22.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.421" endtime="20201029 18:17:22.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:22.761" level="INFO">${PHILIP_RES} = [{'diff': 0.00021583300000000208}, {'diff': 0.00021427800000000177}, {'diff': 0.0002143060000000009}, {'diff': 0.0002142359999999996}, {'diff': 0.0002142229999999995}, {'diff': 0.0002142779999999983},...</msg>
<status status="PASS" starttime="20201029 18:17:22.754" endtime="20201029 18:17:22.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:22.769" level="INFO">${RESULT} = {'diff': [0.00021583300000000208, 0.00021427800000000177, 0.0002143060000000009, 0.0002142359999999996, 0.0002142229999999995, 0.0002142779999999983, 0.00021424999999999916, 0.00021427800000000177, 0....</msg>
<status status="PASS" starttime="20201029 18:17:22.763" endtime="20201029 18:17:22.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.778" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:22.776" endtime="20201029 18:17:22.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.783" level="INFO">VALUE: [0.00021583300000000208, 0.00021427800000000177, 0.0002143060000000009, 0.0002142359999999996, 0.0002142229999999995, 0.0002142779999999983, 0.00021424999999999916, 0.00021427800000000177, 0.0002142359999999996, 0.0002142640000000022, 0.0002142909999999984, 0.00021425000000000263, 0.00021427699999999883, 0.00021426399999999873, 0.00021426399999999873, 0.00021427800000000524, 0.00021424999999999916, 0.00021426399999999873, 0.00021424999999999916, 0.00021424999999999916, 0.0002142779999999983, 0.0002141810000000008, 0.00021427800000000524, 0.00021427800000000524, 0.00021426399999999873, 0.00021424999999999916, 0.0002142359999999996, 0.00021422200000000002, 0.00021430600000000438, 0.00021420800000000045, 0.00021424999999999916, 0.00021426400000000567, 0.0002142909999999984, 0.00021426399999999873, 0.0002142359999999996, 0.00021424999999999916, 0.00021426299999999926, 0.0002142779999999983, 0.00021427800000000524, 0.0002143050000000049, 0.00021426399999999873, 0.0002142779999999983, 0.00021424999999999916, 0.00021427800000000524, 0.0002142920000000048, 0.00021429199999999787, 0.0002142779999999983, 0.00021426399999999873, 0.0002142920000000048, 0.00021429199999999787]</msg>
<status status="PASS" starttime="20201029 18:17:22.780" endtime="20201029 18:17:22.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.771" endtime="20201029 18:17:22.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.367" endtime="20201029 18:17:22.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.344" endtime="20201029 18:17:22.786"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:22.791" endtime="20201029 18:17:22.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.788" endtime="20201029 18:17:22.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.820" endtime="20201029 18:17:22.855"></status>
</kw>
<msg timestamp="20201029 18:17:22.855" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.819" endtime="20201029 18:17:22.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.858" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.856" endtime="20201029 18:17:22.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.859" endtime="20201029 18:17:22.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.816" endtime="20201029 18:17:22.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.814" endtime="20201029 18:17:22.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.869" endtime="20201029 18:17:23.155"></status>
</kw>
<msg timestamp="20201029 18:17:23.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017939569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.867" endtime="20201029 18:17:23.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017939569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.158" endtime="20201029 18:17:23.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.166" endtime="20201029 18:17:23.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.864" endtime="20201029 18:17:23.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.863" endtime="20201029 18:17:23.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:23.172" level="INFO">${PHILIP_RES} = [{'diff': 0.0002395420000000023}, {'diff': 0.00023799999999999863}, {'diff': 0.0002380000000000021}, {'diff': 0.00023801400000000167}, {'diff': 0.00023798599999999906}, {'diff': 0.00023798599999999906...</msg>
<status status="PASS" starttime="20201029 18:17:23.169" endtime="20201029 18:17:23.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:23.176" level="INFO">${RESULT} = {'diff': [0.0002395420000000023, 0.00023799999999999863, 0.0002380000000000021, 0.00023801400000000167, 0.00023798599999999906, 0.00023798599999999906, 0.00023798599999999906, 0.0002379719999999995, 0...</msg>
<status status="PASS" starttime="20201029 18:17:23.173" endtime="20201029 18:17:23.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.181" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:23.180" endtime="20201029 18:17:23.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.183" level="INFO">VALUE: [0.0002395420000000023, 0.00023799999999999863, 0.0002380000000000021, 0.00023801400000000167, 0.00023798599999999906, 0.00023798599999999906, 0.00023798599999999906, 0.0002379719999999995, 0.0002380000000000021, 0.0002379589999999994, 0.00023798699999999853, 0.00023795799999999992, 0.00023798599999999906, 0.00023798599999999906, 0.00023795799999999992, 0.00023798599999999906, 0.0002379719999999995, 0.00023794400000000035, 0.00023794400000000035, 0.00023798600000000253, 0.00023801400000000167, 0.0002379719999999995, 0.00023797300000000243, 0.0002380420000000008, 0.0002379580000000034, 0.0002380000000000021, 0.00023798600000000253, 0.00023788899999999807, 0.0002380000000000021, 0.00023797200000000296, 0.0002379580000000034, 0.00023797200000000296, 0.0002380000000000021, 0.00023795900000000286, 0.00023791699999999721, 0.00023797199999999602, 0.00023799999999999516, 0.0002379859999999956, 0.00023794399999999688, 0.0002379859999999956, 0.0002380000000000021, 0.00023801400000000167, 0.00023797199999999602, 0.00023802700000000176, 0.00023797200000000296, 0.00023797200000000296, 0.00023805600000000038, 0.00023790299999999764, 0.00023801400000000167, 0.0002379859999999956]</msg>
<status status="PASS" starttime="20201029 18:17:23.182" endtime="20201029 18:17:23.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.177" endtime="20201029 18:17:23.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.812" endtime="20201029 18:17:23.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.787" endtime="20201029 18:17:23.185"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:23.188" endtime="20201029 18:17:23.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.186" endtime="20201029 18:17:23.208"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.216" endtime="20201029 18:17:23.254"></status>
</kw>
<msg timestamp="20201029 18:17:23.254" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.214" endtime="20201029 18:17:23.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.257" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.255" endtime="20201029 18:17:23.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.258" endtime="20201029 18:17:23.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.212" endtime="20201029 18:17:23.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.210" endtime="20201029 18:17:23.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.266" endtime="20201029 18:17:23.563"></status>
</kw>
<msg timestamp="20201029 18:17:23.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018001347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.265" endtime="20201029 18:17:23.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018001347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.571" endtime="20201029 18:17:23.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.589" endtime="20201029 18:17:23.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.262" endtime="20201029 18:17:23.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.261" endtime="20201029 18:17:23.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:23.602" level="INFO">${PHILIP_RES} = [{'diff': 0.00026400000000000035}, {'diff': 0.00026240200000000186}, {'diff': 0.00026243100000000047}, {'diff': 0.0002624160000000014}, {'diff': 0.00026243100000000047}, {'diff': 0.0002623749999999987...</msg>
<status status="PASS" starttime="20201029 18:17:23.595" endtime="20201029 18:17:23.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:23.610" level="INFO">${RESULT} = {'diff': [0.00026400000000000035, 0.00026240200000000186, 0.00026243100000000047, 0.0002624160000000014, 0.00026243100000000047, 0.0002623749999999987, 0.000262430000000001, 0.00026243100000000047, 0....</msg>
<status status="PASS" starttime="20201029 18:17:23.604" endtime="20201029 18:17:23.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.615" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:23.614" endtime="20201029 18:17:23.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.617" level="INFO">VALUE: [0.00026400000000000035, 0.00026240200000000186, 0.00026243100000000047, 0.0002624160000000014, 0.00026243100000000047, 0.0002623749999999987, 0.000262430000000001, 0.00026243100000000047, 0.0002624170000000009, 0.00026245800000000014, 0.00026245800000000014, 0.00026240300000000133, 0.0002624299999999975, 0.0002623469999999996, 0.00026244500000000004, 0.000262430000000001, 0.0002624170000000009, 0.0002624299999999975, 0.00026245800000000014, 0.00026244400000000057, 0.00026244500000000004, 0.00026243100000000047, 0.00026248699999999875, 0.00026237499999999525, 0.00026243099999999353, 0.00026245800000000014, 0.0002624719999999997, 0.00026244400000000057, 0.00026244400000000057, 0.00026245800000000014, 0.0002625139999999984, 0.00026245800000000014, 0.00026245800000000014, 0.000262430000000001, 0.00026245800000000014, 0.0002624719999999997, 0.0002624719999999997, 0.0002624859999999993, 0.00026245800000000014, 0.00026244400000000057, 0.0002624729999999992, 0.00026238900000000176, 0.00026245800000000014, 0.00026244400000000057, 0.0002624589999999996, 0.00026244500000000004, 0.00026241699999999396, 0.00026243100000000047, 0.000262430000000001, 0.0002624859999999993]</msg>
<status status="PASS" starttime="20201029 18:17:23.616" endtime="20201029 18:17:23.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.611" endtime="20201029 18:17:23.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.209" endtime="20201029 18:17:23.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.186" endtime="20201029 18:17:23.618"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:23.621" endtime="20201029 18:17:23.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.620" endtime="20201029 18:17:23.641"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.649" endtime="20201029 18:17:23.690"></status>
</kw>
<msg timestamp="20201029 18:17:23.690" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.648" endtime="20201029 18:17:23.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.693" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.691" endtime="20201029 18:17:23.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.694" endtime="20201029 18:17:23.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.645" endtime="20201029 18:17:23.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.643" endtime="20201029 18:17:23.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.702" endtime="20201029 18:17:23.988"></status>
</kw>
<msg timestamp="20201029 18:17:23.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017501639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017790889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.701" endtime="20201029 18:17:23.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017501639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017790889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.992" endtime="20201029 18:17:23.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.999" endtime="20201029 18:17:24.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.698" endtime="20201029 18:17:24.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.697" endtime="20201029 18:17:24.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:24.007" level="INFO">${PHILIP_RES} = [{'diff': 0.0002892500000000013}, {'diff': 0.0002876659999999989}, {'diff': 0.00028768100000000144}, {'diff': 0.0002876530000000023}, {'diff': 0.00028768100000000144}, {'diff': 0.00028768100000000144}...</msg>
<status status="PASS" starttime="20201029 18:17:24.004" endtime="20201029 18:17:24.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:24.011" level="INFO">${RESULT} = {'diff': [0.0002892500000000013, 0.0002876659999999989, 0.00028768100000000144, 0.0002876530000000023, 0.00028768100000000144, 0.00028768100000000144, 0.00028768100000000144, 0.0002876669999999984, 0....</msg>
<status status="PASS" starttime="20201029 18:17:24.008" endtime="20201029 18:17:24.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.015" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:24.014" endtime="20201029 18:17:24.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.017" level="INFO">VALUE: [0.0002892500000000013, 0.0002876659999999989, 0.00028768100000000144, 0.0002876530000000023, 0.00028768100000000144, 0.00028768100000000144, 0.00028768100000000144, 0.0002876669999999984, 0.00028769399999999806, 0.00028773600000000024, 0.0002876669999999984, 0.00028772200000000067, 0.00028766700000000187, 0.00028766700000000187, 0.00028768100000000144, 0.0002876249999999997, 0.0002876669999999984, 0.00028766700000000187, 0.0002876669999999984, 0.00028765199999999935, 0.00028766700000000534, 0.0002877089999999971, 0.00028768099999999797, 0.0002876669999999984, 0.0002876669999999984, 0.0002876110000000001, 0.0002876799999999985, 0.00028765199999999935, 0.00028759700000000055, 0.0002876529999999988, 0.00028769399999999806, 0.0002876659999999989, 0.0002876249999999997, 0.00028765199999999935, 0.0002876529999999988, 0.0002876249999999997, 0.0002876669999999984, 0.0002876669999999984, 0.00028766700000000534, 0.00028763899999999926, 0.0002876659999999989, 0.00028768099999999797, 0.00028768099999999797, 0.0002876669999999984, 0.00028768000000000543, 0.00028774999999999634, 0.0002876799999999985, 0.00028766700000000534, 0.0002876529999999988, 0.0002876659999999989]</msg>
<status status="PASS" starttime="20201029 18:17:24.016" endtime="20201029 18:17:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.012" endtime="20201029 18:17:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.642" endtime="20201029 18:17:24.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.619" endtime="20201029 18:17:24.019"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:24.021" endtime="20201029 18:17:24.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.020" endtime="20201029 18:17:24.042"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.049" endtime="20201029 18:17:24.093"></status>
</kw>
<msg timestamp="20201029 18:17:24.093" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.048" endtime="20201029 18:17:24.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.096" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.094" endtime="20201029 18:17:24.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.097" endtime="20201029 18:17:24.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.045" endtime="20201029 18:17:24.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.043" endtime="20201029 18:17:24.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.106" endtime="20201029 18:17:24.411"></status>
</kw>
<msg timestamp="20201029 18:17:24.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017453222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.105" endtime="20201029 18:17:24.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017453222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.419" endtime="20201029 18:17:24.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.427" endtime="20201029 18:17:24.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.102" endtime="20201029 18:17:24.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.101" endtime="20201029 18:17:24.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:24.433" level="INFO">${PHILIP_RES} = [{'diff': 0.00031512499999999943}, {'diff': 0.00031363900000000097}, {'diff': 0.0003136250000000014}, {'diff': 0.0003136389999999975}, {'diff': 0.00031361100000000183}, {'diff': 0.0003136250000000014}...</msg>
<status status="PASS" starttime="20201029 18:17:24.430" endtime="20201029 18:17:24.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:24.437" level="INFO">${RESULT} = {'diff': [0.00031512499999999943, 0.00031363900000000097, 0.0003136250000000014, 0.0003136389999999975, 0.00031361100000000183, 0.0003136250000000014, 0.0003136250000000014, 0.00031361099999999836, 0....</msg>
<status status="PASS" starttime="20201029 18:17:24.434" endtime="20201029 18:17:24.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.441" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:24.440" endtime="20201029 18:17:24.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.444" level="INFO">VALUE: [0.00031512499999999943, 0.00031363900000000097, 0.0003136250000000014, 0.0003136389999999975, 0.00031361100000000183, 0.0003136250000000014, 0.0003136250000000014, 0.00031361099999999836, 0.0003135969999999988, 0.00031355599999999956, 0.00031361100000000183, 0.0003136529999999971, 0.00031361100000000183, 0.00031361099999999836, 0.00031365300000000054, 0.0003135280000000004, 0.0003135969999999988, 0.00031359799999999827, 0.00031365300000000054, 0.00031372300000000186, 0.00031362500000000487, 0.00031362499999999793, 0.000313653000000004, 0.00031362499999999793, 0.00031361099999999836, 0.00031363900000000444, 0.00031361099999999836, 0.00031356999999999913, 0.0003136389999999975, 0.00031362499999999793, 0.00031356899999999965, 0.00031359700000000573, 0.00031362500000000487, 0.0003135969999999988, 0.0003135829999999992, 0.00031361099999999836, 0.0003135969999999988, 0.00031361099999999836, 0.0003136110000000053, 0.0003135969999999988, 0.0003136110000000053, 0.000313653000000004, 0.0003135969999999988, 0.0003136389999999975, 0.00031355499999999314, 0.00031362500000000487, 0.00031362499999999793, 0.0003136950000000027, 0.00031362500000000487, 0.00031361099999999836]</msg>
<status status="PASS" starttime="20201029 18:17:24.442" endtime="20201029 18:17:24.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.438" endtime="20201029 18:17:24.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.042" endtime="20201029 18:17:24.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.020" endtime="20201029 18:17:24.446"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:24.449" endtime="20201029 18:17:24.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.447" endtime="20201029 18:17:24.469"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.476" endtime="20201029 18:17:24.523"></status>
</kw>
<msg timestamp="20201029 18:17:24.523" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.475" endtime="20201029 18:17:24.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.526" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.524" endtime="20201029 18:17:24.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.527" endtime="20201029 18:17:24.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.472" endtime="20201029 18:17:24.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.471" endtime="20201029 18:17:24.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.536" endtime="20201029 18:17:24.821"></status>
</kw>
<msg timestamp="20201029 18:17:24.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017397792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017739667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.534" endtime="20201029 18:17:24.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017397792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017739667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.825" endtime="20201029 18:17:24.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.833" endtime="20201029 18:17:24.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.532" endtime="20201029 18:17:24.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.530" endtime="20201029 18:17:24.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:24.839" level="INFO">${PHILIP_RES} = [{'diff': 0.0003418750000000019}, {'diff': 0.00034036100000000083}, {'diff': 0.00034036099999999736}, {'diff': 0.00034036100000000083}, {'diff': 0.00034034700000000126}, {'diff': 0.0003403470000000012...</msg>
<status status="PASS" starttime="20201029 18:17:24.836" endtime="20201029 18:17:24.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:24.844" level="INFO">${RESULT} = {'diff': [0.0003418750000000019, 0.00034036100000000083, 0.00034036099999999736, 0.00034036100000000083, 0.00034034700000000126, 0.00034034700000000126, 0.0003403330000000017, 0.00034033400000000116, ...</msg>
<status status="PASS" starttime="20201029 18:17:24.840" endtime="20201029 18:17:24.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.848" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:24.847" endtime="20201029 18:17:24.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.851" level="INFO">VALUE: [0.0003418750000000019, 0.00034036100000000083, 0.00034036099999999736, 0.00034036100000000083, 0.00034034700000000126, 0.00034034700000000126, 0.0003403330000000017, 0.00034033400000000116, 0.0003403200000000016, 0.0003403750000000004, 0.0003403469999999978, 0.00034038899999999997, 0.0003403750000000004, 0.0003404169999999991, 0.00034038899999999997, 0.0003403750000000004, 0.00034036100000000083, 0.0003403750000000004, 0.00034037499999999693, 0.0003403610000000043, 0.00034034799999999726, 0.00034037500000000387, 0.00034036099999999736, 0.0003403049999999991, 0.00034033400000000463, 0.0003403469999999978, 0.00034036099999999736, 0.00034037500000000387, 0.00034037500000000387, 0.00034030599999999855, 0.00034034700000000473, 0.00034037499999999693, 0.0003402779999999994, 0.00034027699999999994, 0.0003403199999999981, 0.00034036099999999736, 0.00034037500000000387, 0.00034031899999999865, 0.00034036199999999683, 0.000340305000000006, 0.00034037499999999693, 0.00034036199999999683, 0.00034037500000000387, 0.00034037499999999693, 0.0003403329999999982, 0.00034030599999999855, 0.00034034799999999726, 0.0003402779999999994, 0.0003403339999999977, 0.00034031899999999865]</msg>
<status status="PASS" starttime="20201029 18:17:24.849" endtime="20201029 18:17:24.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.845" endtime="20201029 18:17:24.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.469" endtime="20201029 18:17:24.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.447" endtime="20201029 18:17:24.853"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:24.855" endtime="20201029 18:17:24.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.853" endtime="20201029 18:17:24.875"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.883" endtime="20201029 18:17:24.932"></status>
</kw>
<msg timestamp="20201029 18:17:24.933" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.881" endtime="20201029 18:17:24.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.935" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.934" endtime="20201029 18:17:24.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.936" endtime="20201029 18:17:24.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.879" endtime="20201029 18:17:24.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.877" endtime="20201029 18:17:24.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.945" endtime="20201029 18:17:25.247"></status>
</kw>
<msg timestamp="20201029 18:17:25.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.944" endtime="20201029 18:17:25.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.251" endtime="20201029 18:17:25.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.259" endtime="20201029 18:17:25.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.941" endtime="20201029 18:17:25.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.940" endtime="20201029 18:17:25.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:25.265" level="INFO">${PHILIP_RES} = [{'diff': 0.00036937500000000165}, {'diff': 0.0003677769999999997}, {'diff': 0.0003678189999999984}, {'diff': 0.00036779099999999926}, {'diff': 0.0003677920000000022}, {'diff': 0.0003677639999999996},...</msg>
<status status="PASS" starttime="20201029 18:17:25.262" endtime="20201029 18:17:25.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:25.269" level="INFO">${RESULT} = {'diff': [0.00036937500000000165, 0.0003677769999999997, 0.0003678189999999984, 0.00036779099999999926, 0.0003677920000000022, 0.0003677639999999996, 0.00036779199999999873, 0.0003677920000000022, 0.0...</msg>
<status status="PASS" starttime="20201029 18:17:25.266" endtime="20201029 18:17:25.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.273" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:25.272" endtime="20201029 18:17:25.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.275" level="INFO">VALUE: [0.00036937500000000165, 0.0003677769999999997, 0.0003678189999999984, 0.00036779099999999926, 0.0003677920000000022, 0.0003677639999999996, 0.00036779199999999873, 0.0003677920000000022, 0.00036781900000000187, 0.00036781999999999787, 0.0003678059999999983, 0.00036777799999999916, 0.00036776400000000306, 0.00036779199999999873, 0.0003677630000000001, 0.00036780499999999883, 0.00036779199999999873, 0.00036777799999999916, 0.0003678059999999983, 0.0003677910000000062, 0.0003678470000000045, 0.0003677630000000001, 0.00036779199999999873, 0.0003677220000000009, 0.00036777799999999916, 0.0003678200000000048, 0.00036779199999999873, 0.0003678059999999983, 0.00036779099999999926, 0.0003678059999999983, 0.00036780499999999883, 0.00036784699999999754, 0.00036775, 0.00036777799999999916, 0.0003678059999999983, 0.0003677639999999996, 0.00036781999999999787, 0.00036775, 0.0003677780000000061, 0.00036780600000000524, 0.00036780600000000524, 0.00036784800000000395, 0.0003678340000000044, 0.00036779199999999873, 0.00036777799999999916, 0.0003677910000000062, 0.0003677910000000062, 0.0003678059999999983, 0.00036781900000000534, 0.0003678340000000044]</msg>
<status status="PASS" starttime="20201029 18:17:25.274" endtime="20201029 18:17:25.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.270" endtime="20201029 18:17:25.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.875" endtime="20201029 18:17:25.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.853" endtime="20201029 18:17:25.277"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:25.280" endtime="20201029 18:17:25.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.278" endtime="20201029 18:17:25.300"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.307" endtime="20201029 18:17:25.360"></status>
</kw>
<msg timestamp="20201029 18:17:25.360" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.306" endtime="20201029 18:17:25.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.363" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.361" endtime="20201029 18:17:25.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.364" endtime="20201029 18:17:25.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.303" endtime="20201029 18:17:25.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.302" endtime="20201029 18:17:25.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.376" endtime="20201029 18:17:25.661"></status>
</kw>
<msg timestamp="20201029 18:17:25.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017517042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017914597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.374" endtime="20201029 18:17:25.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017517042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017914597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.665" endtime="20201029 18:17:25.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.673" endtime="20201029 18:17:25.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.372" endtime="20201029 18:17:25.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.370" endtime="20201029 18:17:25.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:25.679" level="INFO">${PHILIP_RES} = [{'diff': 0.0003975550000000008}, {'diff': 0.0003959719999999979}, {'diff': 0.00039593100000000214}, {'diff': 0.0003960140000000001}, {'diff': 0.00039598600000000095}, {'diff': 0.0003960000000000005},...</msg>
<status status="PASS" starttime="20201029 18:17:25.676" endtime="20201029 18:17:25.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:25.683" level="INFO">${RESULT} = {'diff': [0.0003975550000000008, 0.0003959719999999979, 0.00039593100000000214, 0.0003960140000000001, 0.00039598600000000095, 0.0003960000000000005, 0.00039602799999999966, 0.0003959580000000018, 0.0...</msg>
<status status="PASS" starttime="20201029 18:17:25.680" endtime="20201029 18:17:25.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.687" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:25.686" endtime="20201029 18:17:25.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.690" level="INFO">VALUE: [0.0003975550000000008, 0.0003959719999999979, 0.00039593100000000214, 0.0003960140000000001, 0.00039598600000000095, 0.0003960000000000005, 0.00039602799999999966, 0.0003959580000000018, 0.00039588899999999996, 0.00039593099999999867, 0.00039594400000000224, 0.0003960420000000027, 0.00039598600000000095, 0.0003959859999999975, 0.0003959580000000018, 0.0003959449999999948, 0.0003959309999999952, 0.00039586099999999735, 0.00039597199999999444, 0.00039598600000000095, 0.00039598600000000095, 0.0003959999999999936, 0.00039598600000000095, 0.0003960140000000001, 0.0003960140000000001, 0.0003959999999999936, 0.0003959720000000014, 0.0003960000000000005, 0.0003960129999999937, 0.00039604199999999923, 0.00039602799999999966, 0.0003960000000000005, 0.0003960140000000001, 0.0003960140000000001, 0.0003960140000000001, 0.0003960140000000001, 0.0003960140000000001, 0.0003960559999999988, 0.0003960140000000001, 0.00039591699999999563, 0.00039598600000000095, 0.0003959720000000014, 0.0003960000000000005, 0.0003960000000000005, 0.0003960140000000001, 0.0003960140000000001, 0.00039602799999999966, 0.00039604099999999975, 0.0003960280000000066, 0.0003959729999999939]</msg>
<status status="PASS" starttime="20201029 18:17:25.688" endtime="20201029 18:17:25.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.684" endtime="20201029 18:17:25.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.300" endtime="20201029 18:17:25.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.278" endtime="20201029 18:17:25.692"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:25.695" endtime="20201029 18:17:25.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.693" endtime="20201029 18:17:25.715"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.722" endtime="20201029 18:17:25.778"></status>
</kw>
<msg timestamp="20201029 18:17:25.778" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.721" endtime="20201029 18:17:25.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.781" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.779" endtime="20201029 18:17:25.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.782" endtime="20201029 18:17:25.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.718" endtime="20201029 18:17:25.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.716" endtime="20201029 18:17:25.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.791" endtime="20201029 18:17:26.094"></status>
</kw>
<msg timestamp="20201029 18:17:26.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017347986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017774458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.789" endtime="20201029 18:17:26.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017347986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017774458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.098" endtime="20201029 18:17:26.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.106" endtime="20201029 18:17:26.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.787" endtime="20201029 18:17:26.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.785" endtime="20201029 18:17:26.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:26.112" level="INFO">${PHILIP_RES} = [{'diff': 0.00042647200000000066}, {'diff': 0.0004250280000000009}, {'diff': 0.0004249579999999996}, {'diff': 0.0004249309999999999}, {'diff': 0.0004249859999999987}, {'diff': 0.0004249859999999987}, ...</msg>
<status status="PASS" starttime="20201029 18:17:26.109" endtime="20201029 18:17:26.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:26.117" level="INFO">${RESULT} = {'diff': [0.00042647200000000066, 0.0004250280000000009, 0.0004249579999999996, 0.0004249309999999999, 0.0004249859999999987, 0.0004249859999999987, 0.000424944, 0.000424944, 0.00042497299999999863, 0...</msg>
<status status="PASS" starttime="20201029 18:17:26.113" endtime="20201029 18:17:26.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.121" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:26.120" endtime="20201029 18:17:26.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.123" level="INFO">VALUE: [0.00042647200000000066, 0.0004250280000000009, 0.0004249579999999996, 0.0004249309999999999, 0.0004249859999999987, 0.0004249859999999987, 0.000424944, 0.000424944, 0.00042497299999999863, 0.0004250280000000009, 0.0004249859999999987, 0.00042495899999999906, 0.0004249999999999983, 0.00042495900000000253, 0.00042495800000000306, 0.0004249860000000022, 0.00042494500000000296, 0.0004249440000000035, 0.0004249170000000038, 0.00042495800000000306, 0.0004249860000000022, 0.0004249730000000021, 0.00042494500000000296, 0.0004249159999999974, 0.0004249159999999974, 0.000424944999999996, 0.00042495800000000306, 0.0004249860000000022, 0.0004250139999999944, 0.0004250280000000009, 0.00042495800000000306, 0.00042498700000000167, 0.0004249579999999961, 0.00042501400000000134, 0.0004249720000000026, 0.00042494399999999655, 0.00042500000000000177, 0.00042500000000000177, 0.00042498599999999526, 0.0004249860000000022, 0.00042495800000000306, 0.00042500000000000177, 0.0004249860000000022, 0.0004249730000000021, 0.0004249579999999961, 0.00042497299999999516, 0.00042501400000000134, 0.0004249719999999957, 0.00042501400000000134, 0.00042497299999999516]</msg>
<status status="PASS" starttime="20201029 18:17:26.122" endtime="20201029 18:17:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.118" endtime="20201029 18:17:26.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.715" endtime="20201029 18:17:26.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.693" endtime="20201029 18:17:26.125"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:26.128" endtime="20201029 18:17:26.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.126" endtime="20201029 18:17:26.148"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.157" endtime="20201029 18:17:26.216"></status>
</kw>
<msg timestamp="20201029 18:17:26.217" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.155" endtime="20201029 18:17:26.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.221" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.219" endtime="20201029 18:17:26.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.223" endtime="20201029 18:17:26.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.152" endtime="20201029 18:17:26.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.150" endtime="20201029 18:17:26.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.237" endtime="20201029 18:17:26.525"></status>
</kw>
<msg timestamp="20201029 18:17:26.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01989025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:26.235" endtime="20201029 18:17:26.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01989025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:26.529" endtime="20201029 18:17:26.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.537" endtime="20201029 18:17:26.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.231" endtime="20201029 18:17:26.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.228" endtime="20201029 18:17:26.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:26.543" level="INFO">${PHILIP_RES} = [{'diff': 0.0004561670000000004}, {'diff': 0.0004546529999999993}, {'diff': 0.00045463899999999974}, {'diff': 0.0004546529999999993}, {'diff': 0.00045466700000000235}, {'diff': 0.0004546659999999994},...</msg>
<status status="PASS" starttime="20201029 18:17:26.540" endtime="20201029 18:17:26.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:26.547" level="INFO">${RESULT} = {'diff': [0.0004561670000000004, 0.0004546529999999993, 0.00045463899999999974, 0.0004546529999999993, 0.00045466700000000235, 0.0004546659999999994, 0.00045463899999999974, 0.0004545409999999993, 0.0...</msg>
<status status="PASS" starttime="20201029 18:17:26.544" endtime="20201029 18:17:26.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.551" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:26.550" endtime="20201029 18:17:26.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.554" level="INFO">VALUE: [0.0004561670000000004, 0.0004546529999999993, 0.00045463899999999974, 0.0004546529999999993, 0.00045466700000000235, 0.0004546659999999994, 0.00045463899999999974, 0.0004545409999999993, 0.00045462500000000017, 0.00045462500000000017, 0.00045468099999999845, 0.00045459700000000103, 0.00045463899999999974, 0.0004545980000000005, 0.00045469399999999854, 0.00045458400000000093, 0.0004546529999999993, 0.00045463899999999974, 0.0004546669999999989, 0.0004546529999999993, 0.0004546669999999989, 0.00045469399999999854, 0.0004545550000000023, 0.00045463899999999974, 0.00045462500000000017, 0.00045463899999999974, 0.0004546529999999993, 0.00045462500000000017, 0.0004546669999999989, 0.00045463899999999974, 0.0004546529999999993, 0.0004546529999999993, 0.0004546529999999993, 0.00045462500000000017, 0.00045462500000000017, 0.00045463899999999974, 0.0004545690000000019, 0.00045462500000000017, 0.0004546810000000054, 0.00045459700000000103, 0.00045468099999999845, 0.0004546390000000067, 0.00045465199999999983, 0.00045461100000000754, 0.000454679999999999, 0.0004545829999999945, 0.00045462500000000017, 0.00045462500000000017, 0.000454679999999999, 0.0004546529999999993]</msg>
<status status="PASS" starttime="20201029 18:17:26.552" endtime="20201029 18:17:26.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.548" endtime="20201029 18:17:26.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.148" endtime="20201029 18:17:26.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.125" endtime="20201029 18:17:26.556"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:26.558" endtime="20201029 18:17:26.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.557" endtime="20201029 18:17:26.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.586" endtime="20201029 18:17:26.648"></status>
</kw>
<msg timestamp="20201029 18:17:26.648" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.584" endtime="20201029 18:17:26.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.650" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.649" endtime="20201029 18:17:26.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.651" endtime="20201029 18:17:26.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.582" endtime="20201029 18:17:26.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.580" endtime="20201029 18:17:26.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.661" endtime="20201029 18:17:26.947"></status>
</kw>
<msg timestamp="20201029 18:17:26.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017452042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017938653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.660" endtime="20201029 18:17:26.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017452042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017938653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.951" endtime="20201029 18:17:26.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.958" endtime="20201029 18:17:26.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.657" endtime="20201029 18:17:26.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.655" endtime="20201029 18:17:26.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:26.965" level="INFO">${PHILIP_RES} = [{'diff': 0.0004866109999999979}, {'diff': 0.0004850000000000028}, {'diff': 0.0004850549999999981}, {'diff': 0.00048502799999999846}, {'diff': 0.0004851519999999991}, {'diff': 0.00048502799999999846},...</msg>
<status status="PASS" starttime="20201029 18:17:26.962" endtime="20201029 18:17:26.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:26.969" level="INFO">${RESULT} = {'diff': [0.0004866109999999979, 0.0004850000000000028, 0.0004850549999999981, 0.00048502799999999846, 0.0004851519999999991, 0.00048502799999999846, 0.0004850549999999981, 0.0004850139999999989, 0.00...</msg>
<status status="PASS" starttime="20201029 18:17:26.966" endtime="20201029 18:17:26.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.973" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:26.972" endtime="20201029 18:17:26.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.975" level="INFO">VALUE: [0.0004866109999999979, 0.0004850000000000028, 0.0004850549999999981, 0.00048502799999999846, 0.0004851519999999991, 0.00048502799999999846, 0.0004850549999999981, 0.0004850139999999989, 0.0004850979999999998, 0.0004850139999999989, 0.0004850549999999981, 0.0004851109999999999, 0.00048508299999999727, 0.00048506900000000464, 0.0004850979999999963, 0.00048508299999999727, 0.00048505500000000507, 0.0004850549999999981, 0.0004850559999999976, 0.00048504199999999803, 0.0004850549999999981, 0.0004850700000000041, 0.00048509699999999684, 0.00048508299999999727, 0.00048506999999999717, 0.00048506999999999717, 0.00048511100000000335, 0.0004850559999999976, 0.0004850830000000042, 0.00048508299999999727, 0.0004850979999999963, 0.00048509699999999684, 0.00048504199999999803, 0.0004850979999999963, 0.0004850689999999977, 0.0004850549999999981, 0.00048508299999999727, 0.00048506999999999717, 0.00048505600000000454, 0.0004849999999999993, 0.00048505599999999066, 0.0004850419999999911, 0.00048502799999999846, 0.00048506899999999076, 0.00048508299999999727, 0.0004850410000000055, 0.00048506900000000464, 0.00048508299999999727, 0.00048515300000000205, 0.0004850560000000115]</msg>
<status status="PASS" starttime="20201029 18:17:26.974" endtime="20201029 18:17:26.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.970" endtime="20201029 18:17:26.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.579" endtime="20201029 18:17:26.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.556" endtime="20201029 18:17:26.978"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:26.980" endtime="20201029 18:17:27.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.979" endtime="20201029 18:17:27.000"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.008" endtime="20201029 18:17:27.073"></status>
</kw>
<msg timestamp="20201029 18:17:27.074" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.007" endtime="20201029 18:17:27.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.076" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.075" endtime="20201029 18:17:27.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.077" endtime="20201029 18:17:27.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.004" endtime="20201029 18:17:27.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.002" endtime="20201029 18:17:27.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.086" endtime="20201029 18:17:27.372"></status>
</kw>
<msg timestamp="20201029 18:17:27.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018061417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.084" endtime="20201029 18:17:27.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018061417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.375" endtime="20201029 18:17:27.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.383" endtime="20201029 18:17:27.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.082" endtime="20201029 18:17:27.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.080" endtime="20201029 18:17:27.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:27.390" level="INFO">${PHILIP_RES} = [{'diff': 0.0005178059999999991}, {'diff': 0.0005162499999999993}, {'diff': 0.0005162629999999994}, {'diff': 0.0005162779999999985}, {'diff': 0.0005162499999999993}, {'diff': 0.0005161659999999985}, {...</msg>
<status status="PASS" starttime="20201029 18:17:27.386" endtime="20201029 18:17:27.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:27.394" level="INFO">${RESULT} = {'diff': [0.0005178059999999991, 0.0005162499999999993, 0.0005162629999999994, 0.0005162779999999985, 0.0005162499999999993, 0.0005161659999999985, 0.0005162640000000024, 0.0005162500000000028, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:17:27.391" endtime="20201029 18:17:27.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.399" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:27.398" endtime="20201029 18:17:27.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.401" level="INFO">VALUE: [0.0005178059999999991, 0.0005162499999999993, 0.0005162629999999994, 0.0005162779999999985, 0.0005162499999999993, 0.0005161659999999985, 0.0005162640000000024, 0.0005162500000000028, 0.0005162220000000002, 0.0005162090000000001, 0.0005161939999999976, 0.0005161940000000011, 0.0005162500000000028, 0.0005161660000000054, 0.0005162230000000032, 0.0005162500000000028, 0.0005162090000000036, 0.0005161940000000045, 0.0005161669999999979, 0.0005162079999999972, 0.0005162089999999966, 0.0005162219999999967, 0.0005162090000000036, 0.0005162220000000037, 0.0005162639999999954, 0.0005162360000000032, 0.0005162230000000032, 0.0005162919999999946, 0.0005162359999999963, 0.0005162360000000032, 0.000516291000000002, 0.0005162640000000024, 0.0005163060000000011, 0.0005162360000000032, 0.0005163060000000011, 0.000516278000000002, 0.0005162920000000015, 0.0005163470000000003, 0.0005162639999999954, 0.0005162499999999959, 0.0005162360000000032, 0.0005162219999999967, 0.0005162920000000015, 0.0005162219999999967, 0.0005162220000000106, 0.000516277999999995, 0.0005163059999999942, 0.000516277999999995, 0.0005162090000000036, 0.0005162500000000098]</msg>
<status status="PASS" starttime="20201029 18:17:27.400" endtime="20201029 18:17:27.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.395" endtime="20201029 18:17:27.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.001" endtime="20201029 18:17:27.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.978" endtime="20201029 18:17:27.406"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:27.409" endtime="20201029 18:17:27.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.407" endtime="20201029 18:17:27.429"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.437" endtime="20201029 18:17:27.506"></status>
</kw>
<msg timestamp="20201029 18:17:27.507" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.435" endtime="20201029 18:17:27.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.512" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.509" endtime="20201029 18:17:27.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.514" endtime="20201029 18:17:27.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.433" endtime="20201029 18:17:27.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.431" endtime="20201029 18:17:27.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.533" endtime="20201029 18:17:27.827"></status>
</kw>
<msg timestamp="20201029 18:17:27.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017430861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.530" endtime="20201029 18:17:27.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017430861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.831" endtime="20201029 18:17:27.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.838" endtime="20201029 18:17:27.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.524" endtime="20201029 18:17:27.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.521" endtime="20201029 18:17:27.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:27.845" level="INFO">${PHILIP_RES} = [{'diff': 0.0005496530000000006}, {'diff': 0.0005481669999999987}, {'diff': 0.0005481669999999987}, {'diff': 0.0005481799999999988}, {'diff': 0.0005481529999999991}, {'diff': 0.0005481529999999991}, {...</msg>
<status status="PASS" starttime="20201029 18:17:27.842" endtime="20201029 18:17:27.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:27.849" level="INFO">${RESULT} = {'diff': [0.0005496530000000006, 0.0005481669999999987, 0.0005481669999999987, 0.0005481799999999988, 0.0005481529999999991, 0.0005481529999999991, 0.0005481389999999996, 0.0005481670000000022, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:17:27.846" endtime="20201029 18:17:27.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.853" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:27.852" endtime="20201029 18:17:27.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.855" level="INFO">VALUE: [0.0005496530000000006, 0.0005481669999999987, 0.0005481669999999987, 0.0005481799999999988, 0.0005481529999999991, 0.0005481529999999991, 0.0005481389999999996, 0.0005481670000000022, 0.000548207999999998, 0.0005482639999999997, 0.000548207999999998, 0.0005481940000000018, 0.0005481669999999952, 0.0005482090000000009, 0.0005481530000000026, 0.0005481810000000018, 0.0005481249999999965, 0.0005481670000000022, 0.0005481249999999965, 0.0005481519999999962, 0.0005481249999999965, 0.000548110999999997, 0.0005481660000000027, 0.0005481940000000018, 0.0005481660000000027, 0.0005481799999999953, 0.0005481530000000026, 0.0005481670000000022, 0.0005480689999999983, 0.0005481810000000018, 0.0005481669999999952, 0.0005481950000000013, 0.0005482500000000001, 0.0005481810000000018, 0.0005482500000000001, 0.0005482230000000005, 0.0005481670000000022, 0.0005481940000000018, 0.0005481670000000022, 0.00054811099999999, 0.0005481530000000095, 0.0005481250000000104, 0.0005481110000000039, 0.0005480699999999977, 0.0005481670000000022, 0.0005481530000000095, 0.0005481659999999888, 0.0005481660000000027, 0.0005481670000000022, 0.0005481799999999953]</msg>
<status status="PASS" starttime="20201029 18:17:27.854" endtime="20201029 18:17:27.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.850" endtime="20201029 18:17:27.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.429" endtime="20201029 18:17:27.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.407" endtime="20201029 18:17:27.857"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:27.859" endtime="20201029 18:17:27.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.858" endtime="20201029 18:17:27.879"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.887" endtime="20201029 18:17:27.959"></status>
</kw>
<msg timestamp="20201029 18:17:27.960" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.886" endtime="20201029 18:17:27.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.962" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.961" endtime="20201029 18:17:27.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.963" endtime="20201029 18:17:27.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.883" endtime="20201029 18:17:27.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.881" endtime="20201029 18:17:27.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.973" endtime="20201029 18:17:28.258"></status>
</kw>
<msg timestamp="20201029 18:17:28.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.972" endtime="20201029 18:17:28.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.262" endtime="20201029 18:17:28.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.270" endtime="20201029 18:17:28.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.969" endtime="20201029 18:17:28.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.968" endtime="20201029 18:17:28.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:28.276" level="INFO">${PHILIP_RES} = [{'diff': 0.0005824309999999978}, {'diff': 0.0005809299999999969}, {'diff': 0.0005809300000000003}, {'diff': 0.0005808749999999981}, {'diff': 0.0005809579999999995}, {'diff': 0.0005809999999999982}, {...</msg>
<status status="PASS" starttime="20201029 18:17:28.273" endtime="20201029 18:17:28.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:28.280" level="INFO">${RESULT} = {'diff': [0.0005824309999999978, 0.0005809299999999969, 0.0005809300000000003, 0.0005808749999999981, 0.0005809579999999995, 0.0005809999999999982, 0.0005809170000000002, 0.0005809309999999998, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:17:28.277" endtime="20201029 18:17:28.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.284" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:28.284" endtime="20201029 18:17:28.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.287" level="INFO">VALUE: [0.0005824309999999978, 0.0005809299999999969, 0.0005809300000000003, 0.0005808749999999981, 0.0005809579999999995, 0.0005809999999999982, 0.0005809170000000002, 0.0005809309999999998, 0.0005808050000000002, 0.0005808750000000015, 0.0005808889999999976, 0.0005808890000000011, 0.0005808480000000019, 0.0005809170000000002, 0.0005808890000000011, 0.0005808750000000015, 0.0005809859999999986, 0.0005809160000000008, 0.0005808750000000015, 0.0005809170000000002, 0.0005809439999999999, 0.0005809300000000003, 0.0005809449999999994, 0.0005809030000000007, 0.0005809030000000007, 0.0005809300000000003, 0.0005809300000000003, 0.0005809729999999985, 0.0005809439999999999, 0.0005809030000000007, 0.0005809309999999998, 0.0005809730000000055, 0.000580971999999999, 0.0005809439999999999, 0.0005809450000000063, 0.0005808890000000011, 0.0005809029999999937, 0.0005809449999999994, 0.000580861000000002, 0.0005809869999999911, 0.0005809860000000056, 0.0005809439999999999, 0.0005809439999999999, 0.0005809729999999985, 0.0005809439999999999, 0.0005809310000000067, 0.0005809579999999925, 0.0005809299999999934, 0.0005809449999999994, 0.0005808749999999946]</msg>
<status status="PASS" starttime="20201029 18:17:28.286" endtime="20201029 18:17:28.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.281" endtime="20201029 18:17:28.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.880" endtime="20201029 18:17:28.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.857" endtime="20201029 18:17:28.292"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.297" endtime="20201029 18:17:28.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.294" endtime="20201029 18:17:28.319"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.336" endtime="20201029 18:17:28.412"></status>
</kw>
<msg timestamp="20201029 18:17:28.414" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.333" endtime="20201029 18:17:28.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.419" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.416" endtime="20201029 18:17:28.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.421" endtime="20201029 18:17:28.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.327" endtime="20201029 18:17:28.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.323" endtime="20201029 18:17:28.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.439" endtime="20201029 18:17:28.732"></status>
</kw>
<msg timestamp="20201029 18:17:28.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029357431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029973306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.436" endtime="20201029 18:17:28.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029357431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029973306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.735" endtime="20201029 18:17:28.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.743" endtime="20201029 18:17:28.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.431" endtime="20201029 18:17:28.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.427" endtime="20201029 18:17:28.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:28.749" level="INFO">${PHILIP_RES} = [{'diff': 0.0006158750000000018}, {'diff': 0.0006143339999999976}, {'diff': 0.0006143609999999938}, {'diff': 0.0006143200000000015}, {'diff': 0.000614306000000002}, {'diff': 0.0006143889999999999}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:28.746" endtime="20201029 18:17:28.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:28.754" level="INFO">${RESULT} = {'diff': [0.0006158750000000018, 0.0006143339999999976, 0.0006143609999999938, 0.0006143200000000015, 0.000614306000000002, 0.0006143889999999999, 0.0006143190000000021, 0.0006142629999999968, 0.00061...</msg>
<status status="PASS" starttime="20201029 18:17:28.750" endtime="20201029 18:17:28.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.758" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:28.757" endtime="20201029 18:17:28.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.760" level="INFO">VALUE: [0.0006158750000000018, 0.0006143339999999976, 0.0006143609999999938, 0.0006143200000000015, 0.000614306000000002, 0.0006143889999999999, 0.0006143190000000021, 0.0006142629999999968, 0.0006143049999999955, 0.0006142920000000024, 0.000614306000000002, 0.0006142779999999959, 0.0006142779999999959, 0.0006143049999999955, 0.0006142920000000024, 0.0006142499999999967, 0.0006143470000000012, 0.0006143889999999999, 0.0006142499999999967, 0.0006143049999999955, 0.000614306000000002, 0.0006142500000000037, 0.0006141669999999988, 0.0006142359999999972, 0.0006142499999999967, 0.0006142779999999959, 0.0006141949999999979, 0.0006142499999999967, 0.0006141800000000058, 0.0006142920000000024, 0.0006142780000000098, 0.0006143190000000021, 0.0006142920000000024, 0.0006143050000000094, 0.0006143750000000003, 0.0006142919999999885, 0.0006142920000000024, 0.0006143890000000068, 0.000614305999999995, 0.0006143480000000007, 0.0006143329999999947, 0.0006142910000000029, 0.0006141939999999985, 0.000614305999999995, 0.0006143610000000077, 0.0006142920000000024, 0.0006143339999999942, 0.0006143060000000089, 0.0006143190000000021, 0.000614305999999995]</msg>
<status status="PASS" starttime="20201029 18:17:28.759" endtime="20201029 18:17:28.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.755" endtime="20201029 18:17:28.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.321" endtime="20201029 18:17:28.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.292" endtime="20201029 18:17:28.762"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.765" endtime="20201029 18:17:28.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.763" endtime="20201029 18:17:28.785"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.793" endtime="20201029 18:17:28.871"></status>
</kw>
<msg timestamp="20201029 18:17:28.871" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.791" endtime="20201029 18:17:28.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.874" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.872" endtime="20201029 18:17:28.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.875" endtime="20201029 18:17:28.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.789" endtime="20201029 18:17:28.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.787" endtime="20201029 18:17:28.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.884" endtime="20201029 18:17:29.170"></status>
</kw>
<msg timestamp="20201029 18:17:29.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017559042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.882" endtime="20201029 18:17:29.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017559042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:29.174" endtime="20201029 18:17:29.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.182" endtime="20201029 18:17:29.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.880" endtime="20201029 18:17:29.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.878" endtime="20201029 18:17:29.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:29.188" level="INFO">${PHILIP_RES} = [{'diff': 0.0006500140000000008}, {'diff': 0.0006484999999999998}, {'diff': 0.0006484029999999988}, {'diff': 0.0006484299999999985}, {'diff': 0.0006484590000000005}, {'diff': 0.0006484019999999993}, {...</msg>
<status status="PASS" starttime="20201029 18:17:29.185" endtime="20201029 18:17:29.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:29.192" level="INFO">${RESULT} = {'diff': [0.0006500140000000008, 0.0006484999999999998, 0.0006484029999999988, 0.0006484299999999985, 0.0006484590000000005, 0.0006484019999999993, 0.0006484580000000011, 0.0006485139999999993, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:17:29.189" endtime="20201029 18:17:29.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.196" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:29.195" endtime="20201029 18:17:29.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.198" level="INFO">VALUE: [0.0006500140000000008, 0.0006484999999999998, 0.0006484029999999988, 0.0006484299999999985, 0.0006484590000000005, 0.0006484019999999993, 0.0006484580000000011, 0.0006485139999999993, 0.0006484580000000011, 0.0006484860000000002, 0.0006484579999999976, 0.0006483890000000062, 0.0006484589999999971, 0.0006484589999999971, 0.000648526999999996, 0.0006484719999999972, 0.0006485000000000032, 0.0006484720000000041, 0.0006485000000000032, 0.000648443999999998, 0.0006484579999999976, 0.0006484860000000037, 0.0006485280000000024, 0.0006484720000000041, 0.0006484579999999976, 0.0006484029999999988, 0.0006484030000000057, 0.0006484309999999979, 0.0006484159999999989, 0.0006484299999999985, 0.0006484450000000044, 0.000648444000000005, 0.0006485139999999889, 0.0006485700000000011, 0.0006485140000000028, 0.0006485279999999954, 0.000648542000000002, 0.0006484719999999972, 0.0006484719999999972, 0.000648443999999998, 0.0006484859999999898, 0.0006484860000000037, 0.0006485130000000033, 0.0006484999999999963, 0.000648542000000002, 0.0006485690000000016, 0.0006485139999999889, 0.0006484719999999972, 0.0006484030000000057, 0.0006484580000000045]</msg>
<status status="PASS" starttime="20201029 18:17:29.197" endtime="20201029 18:17:29.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.193" endtime="20201029 18:17:29.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.785" endtime="20201029 18:17:29.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.763" endtime="20201029 18:17:29.200"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:29.203" endtime="20201029 18:17:29.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.201" endtime="20201029 18:17:29.225"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.241" endtime="20201029 18:17:29.325"></status>
</kw>
<msg timestamp="20201029 18:17:29.326" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.238" endtime="20201029 18:17:29.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.332" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.329" endtime="20201029 18:17:29.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.335" endtime="20201029 18:17:29.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.233" endtime="20201029 18:17:29.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.229" endtime="20201029 18:17:29.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.360" endtime="20201029 18:17:29.655"></status>
</kw>
<msg timestamp="20201029 18:17:29.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029379972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030065028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:29.357" endtime="20201029 18:17:29.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029379972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030065028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:29.659" endtime="20201029 18:17:29.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.666" endtime="20201029 18:17:29.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.352" endtime="20201029 18:17:29.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.348" endtime="20201029 18:17:29.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:29.673" level="INFO">${PHILIP_RES} = [{'diff': 0.0006850559999999999}, {'diff': 0.0006834860000000005}, {'diff': 0.0006834300000000057}, {'diff': 0.0006835140000000031}, {'diff': 0.0006835000000000035}, {'diff': 0.0006834999999999966}, {...</msg>
<status status="PASS" starttime="20201029 18:17:29.670" endtime="20201029 18:17:29.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:29.676" level="INFO">${RESULT} = {'diff': [0.0006850559999999999, 0.0006834860000000005, 0.0006834300000000057, 0.0006835140000000031, 0.0006835000000000035, 0.0006834999999999966, 0.0006835000000000035, 0.000683486000000004, 0.00068...</msg>
<status status="PASS" starttime="20201029 18:17:29.674" endtime="20201029 18:17:29.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.681" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:29.680" endtime="20201029 18:17:29.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.683" level="INFO">VALUE: [0.0006850559999999999, 0.0006834860000000005, 0.0006834300000000057, 0.0006835140000000031, 0.0006835000000000035, 0.0006834999999999966, 0.0006835000000000035, 0.000683486000000004, 0.0006834999999999966, 0.0006834870000000035, 0.0006834309999999982, 0.0006834869999999965, 0.0006834029999999991, 0.0006834300000000057, 0.0006834169999999987, 0.0006833890000000065, 0.000683375, 0.0006833470000000008, 0.000683485999999997, 0.0006833610000000004, 0.0006834310000000052, 0.0006834309999999982, 0.0006833609999999934, 0.0006833330000000082, 0.0006833470000000008, 0.0006834029999999991, 0.0006834579999999979, 0.0006833470000000008, 0.0006833609999999934, 0.000683375, 0.0006835000000000035, 0.0006834869999999965, 0.0006834579999999979, 0.0006834170000000056, 0.0006834160000000061, 0.000683485999999997, 0.0006834309999999982, 0.000683485999999997, 0.0006834309999999982, 0.0006833890000000065, 0.0006834449999999909, 0.0006834589999999974, 0.0006834999999999897, 0.0006834309999999982, 0.0006834169999999917, 0.0006833610000000073, 0.0006834310000000121, 0.0006834299999999988, 0.0006834019999999996, 0.0006834309999999982]</msg>
<status status="PASS" starttime="20201029 18:17:29.682" endtime="20201029 18:17:29.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.677" endtime="20201029 18:17:29.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.226" endtime="20201029 18:17:29.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.201" endtime="20201029 18:17:29.686"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:29.688" endtime="20201029 18:17:29.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.687" endtime="20201029 18:17:29.708"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.716" endtime="20201029 18:17:29.801"></status>
</kw>
<msg timestamp="20201029 18:17:29.801" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.714" endtime="20201029 18:17:29.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.804" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.802" endtime="20201029 18:17:29.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.805" endtime="20201029 18:17:29.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.712" endtime="20201029 18:17:29.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.710" endtime="20201029 18:17:29.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.813" endtime="20201029 18:17:30.099"></status>
</kw>
<msg timestamp="20201029 18:17:30.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017519764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:29.812" endtime="20201029 18:17:30.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017519764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.102" endtime="20201029 18:17:30.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.110" endtime="20201029 18:17:30.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.809" endtime="20201029 18:17:30.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.808" endtime="20201029 18:17:30.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:30.116" level="INFO">${PHILIP_RES} = [{'diff': 0.0007206109999999995}, {'diff': 0.0007189999999999974}, {'diff': 0.0007189999999999974}, {'diff': 0.0007190689999999993}, {'diff': 0.0007190829999999988}, {'diff': 0.0007190699999999987}, {...</msg>
<status status="PASS" starttime="20201029 18:17:30.113" endtime="20201029 18:17:30.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:30.121" level="INFO">${RESULT} = {'diff': [0.0007206109999999995, 0.0007189999999999974, 0.0007189999999999974, 0.0007190689999999993, 0.0007190829999999988, 0.0007190699999999987, 0.0007190689999999993, 0.0007190419999999996, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:17:30.117" endtime="20201029 18:17:30.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.125" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:30.124" endtime="20201029 18:17:30.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.128" level="INFO">VALUE: [0.0007206109999999995, 0.0007189999999999974, 0.0007189999999999974, 0.0007190689999999993, 0.0007190829999999988, 0.0007190699999999987, 0.0007190689999999993, 0.0007190419999999996, 0.0007190699999999987, 0.0007190840000000018, 0.0007190280000000035, 0.0007190279999999966, 0.000719013999999997, 0.0007190560000000026, 0.0007190000000000044, 0.000719027000000004, 0.0007189999999999974, 0.000719125000000001, 0.0007191669999999997, 0.0007191110000000014, 0.0007190830000000023, 0.0007191530000000002, 0.0007190829999999954, 0.0007191109999999945, 0.0007191249999999941, 0.0007190419999999961, 0.0007191110000000014, 0.0007191249999999941, 0.0007190839999999948, 0.000719125000000001, 0.0007191110000000084, 0.0007191530000000002, 0.000719125000000001, 0.0007190840000000087, 0.0007190839999999948, 0.0007191659999999933, 0.0007192219999999916, 0.0007190700000000022, 0.0007190690000000027, 0.0007189999999999974, 0.0007190420000000031, 0.0007190419999999892, 0.0007189870000000043, 0.0007190690000000027, 0.0007190980000000013, 0.0007190559999999957, 0.0007190830000000092, 0.0007190689999999889, 0.000719125000000001, 0.0007190829999999954]</msg>
<status status="PASS" starttime="20201029 18:17:30.126" endtime="20201029 18:17:30.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.122" endtime="20201029 18:17:30.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.709" endtime="20201029 18:17:30.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.686" endtime="20201029 18:17:30.130"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:30.132" endtime="20201029 18:17:30.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.130" endtime="20201029 18:17:30.154"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.171" endtime="20201029 18:17:30.262"></status>
</kw>
<msg timestamp="20201029 18:17:30.263" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.168" endtime="20201029 18:17:30.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.268" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.265" endtime="20201029 18:17:30.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.270" endtime="20201029 18:17:30.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.162" endtime="20201029 18:17:30.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.158" endtime="20201029 18:17:30.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.289" endtime="20201029 18:17:30.585"></status>
</kw>
<msg timestamp="20201029 18:17:30.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029893958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030651042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.285" endtime="20201029 18:17:30.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029893958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030651042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.589" endtime="20201029 18:17:30.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.597" endtime="20201029 18:17:30.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.280" endtime="20201029 18:17:30.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.276" endtime="20201029 18:17:30.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:30.603" level="INFO">${PHILIP_RES} = [{'diff': 0.0007570839999999981}, {'diff': 0.0007554729999999996}, {'diff': 0.0007555279999999984}, {'diff': 0.0007555560000000044}, {'diff': 0.0007555139999999988}, {'diff': 0.000755444000000001}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:30.600" endtime="20201029 18:17:30.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:30.607" level="INFO">${RESULT} = {'diff': [0.0007570839999999981, 0.0007554729999999996, 0.0007555279999999984, 0.0007555560000000044, 0.0007555139999999988, 0.000755444000000001, 0.0007555420000000049, 0.0007555409999999985, 0.00075...</msg>
<status status="PASS" starttime="20201029 18:17:30.604" endtime="20201029 18:17:30.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.611" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:30.610" endtime="20201029 18:17:30.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.614" level="INFO">VALUE: [0.0007570839999999981, 0.0007554729999999996, 0.0007555279999999984, 0.0007555560000000044, 0.0007555139999999988, 0.000755444000000001, 0.0007555420000000049, 0.0007555409999999985, 0.0007554720000000001, 0.0007555280000000053, 0.0007556109999999963, 0.0007555969999999967, 0.0007554999999999992, 0.0007555840000000036, 0.0007555690000000045, 0.0007555830000000041, 0.0007556250000000028, 0.0007554999999999992, 0.000755570000000004, 0.0007554720000000001, 0.000755555000000005, 0.000755526999999992, 0.0007555560000000044, 0.000755555000000005, 0.0007555559999999906, 0.0007554719999999931, 0.0007556250000000098, 0.0007555690000000115, 0.0007555409999999985, 0.0007555000000000062, 0.0007554719999999931, 0.0007555699999999971, 0.000755472000000007, 0.0007555559999999906, 0.0007555280000000053, 0.0007554999999999923, 0.0007555139999999988, 0.0007554580000000005, 0.0007554859999999997, 0.0007554859999999997, 0.0007555280000000053, 0.0007554859999999997, 0.0007554159999999949, 0.0007554859999999997, 0.0007554859999999997, 0.0007554300000000014, 0.0007554719999999931, 0.0007555840000000036, 0.0007555000000000062, 0.0007554859999999997]</msg>
<status status="PASS" starttime="20201029 18:17:30.612" endtime="20201029 18:17:30.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.608" endtime="20201029 18:17:30.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.155" endtime="20201029 18:17:30.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.130" endtime="20201029 18:17:30.615"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:30.618" endtime="20201029 18:17:30.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.616" endtime="20201029 18:17:30.638"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.646" endtime="20201029 18:17:30.737"></status>
</kw>
<msg timestamp="20201029 18:17:30.738" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.644" endtime="20201029 18:17:30.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.740" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.739" endtime="20201029 18:17:30.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.741" endtime="20201029 18:17:30.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.642" endtime="20201029 18:17:30.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.640" endtime="20201029 18:17:30.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.751" endtime="20201029 18:17:31.038"></status>
</kw>
<msg timestamp="20201029 18:17:31.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017396847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.750" endtime="20201029 18:17:31.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017396847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.042" endtime="20201029 18:17:31.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.049" endtime="20201029 18:17:31.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.747" endtime="20201029 18:17:31.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.745" endtime="20201029 18:17:31.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:31.056" level="INFO">${PHILIP_RES} = [{'diff': 0.0007942090000000006}, {'diff': 0.0007926529999999973}, {'diff': 0.0007926800000000005}, {'diff': 0.0007926949999999995}, {'diff': 0.0007926660000000009}, {'diff': 0.0007926809999999999}, {...</msg>
<status status="PASS" starttime="20201029 18:17:31.053" endtime="20201029 18:17:31.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.060" level="INFO">${RESULT} = {'diff': [0.0007942090000000006, 0.0007926529999999973, 0.0007926800000000005, 0.0007926949999999995, 0.0007926660000000009, 0.0007926809999999999, 0.0007926250000000017, 0.0007926809999999999, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:17:31.057" endtime="20201029 18:17:31.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.064" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:31.063" endtime="20201029 18:17:31.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.066" level="INFO">VALUE: [0.0007942090000000006, 0.0007926529999999973, 0.0007926800000000005, 0.0007926949999999995, 0.0007926660000000009, 0.0007926809999999999, 0.0007926250000000017, 0.0007926809999999999, 0.0007926530000000008, 0.0007926519999999979, 0.0007926389999999978, 0.0007926800000000039, 0.000792694999999996, 0.0007927080000000031, 0.0007926940000000035, 0.0007927219999999957, 0.0007926940000000035, 0.000792695000000003, 0.0007926530000000043, 0.0007926529999999973, 0.0007926669999999969, 0.0007926390000000047, 0.000792694999999996, 0.0007926390000000047, 0.0007926250000000051, 0.0007925829999999995, 0.0007926390000000047, 0.000792597000000006, 0.0007926109999999986, 0.0007926670000000108, 0.0007926389999999978, 0.0007926390000000116, 0.0007925969999999921, 0.0007925829999999995, 0.0007925829999999995, 0.0007925829999999995, 0.0007927370000000017, 0.0007925829999999995, 0.0007925830000000134, 0.0007925969999999921, 0.0007926109999999986, 0.0007926659999999974, 0.0007926249999999913, 0.0007925690000000069, 0.000792597000000006, 0.0007926250000000051, 0.000792583999999999, 0.0007925829999999995, 0.000792597000000006, 0.0007925980000000055]</msg>
<status status="PASS" starttime="20201029 18:17:31.065" endtime="20201029 18:17:31.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.061" endtime="20201029 18:17:31.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.638" endtime="20201029 18:17:31.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.616" endtime="20201029 18:17:31.071"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:31.076" endtime="20201029 18:17:31.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.073" endtime="20201029 18:17:31.099"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.115" endtime="20201029 18:17:31.213"></status>
</kw>
<msg timestamp="20201029 18:17:31.214" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.112" endtime="20201029 18:17:31.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.219" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.216" endtime="20201029 18:17:31.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.221" endtime="20201029 18:17:31.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.106" endtime="20201029 18:17:31.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.103" endtime="20201029 18:17:31.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.239" endtime="20201029 18:17:31.533"></status>
</kw>
<msg timestamp="20201029 18:17:31.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029520333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030352417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.236" endtime="20201029 18:17:31.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029520333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030352417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.537" endtime="20201029 18:17:31.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.544" endtime="20201029 18:17:31.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.231" endtime="20201029 18:17:31.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.228" endtime="20201029 18:17:31.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:31.551" level="INFO">${PHILIP_RES} = [{'diff': 0.0008320840000000003}, {'diff': 0.0008306120000000014}, {'diff': 0.0008305419999999966}, {'diff': 0.0008305549999999967}, {'diff': 0.0008305549999999967}, {'diff': 0.0008305420000000036}, {...</msg>
<status status="PASS" starttime="20201029 18:17:31.548" endtime="20201029 18:17:31.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.555" level="INFO">${RESULT} = {'diff': [0.0008320840000000003, 0.0008306120000000014, 0.0008305419999999966, 0.0008305549999999967, 0.0008305549999999967, 0.0008305420000000036, 0.000830527999999997, 0.0008305690000000032, 0.00083...</msg>
<status status="PASS" starttime="20201029 18:17:31.552" endtime="20201029 18:17:31.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.560" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:31.559" endtime="20201029 18:17:31.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.562" level="INFO">VALUE: [0.0008320840000000003, 0.0008306120000000014, 0.0008305419999999966, 0.0008305549999999967, 0.0008305549999999967, 0.0008305420000000036, 0.000830527999999997, 0.0008305690000000032, 0.0008305549999999967, 0.0008305560000000031, 0.0008305689999999963, 0.0008305419999999966, 0.0008305409999999971, 0.0008305420000000036, 0.0008305689999999963, 0.0008305969999999954, 0.0008306110000000019, 0.0008305409999999971, 0.000830527999999997, 0.0008305420000000036, 0.000830610999999995, 0.0008306800000000003, 0.0008306250000000015, 0.0008306110000000089, 0.0008306530000000006, 0.0008306530000000006, 0.0008305970000000024, 0.0008305970000000024, 0.0008305829999999959, 0.0008305829999999959, 0.0008305690000000032, 0.0008305829999999959, 0.0008305970000000024, 0.0008305829999999959, 0.0008305690000000032, 0.0008305559999999962, 0.0008305840000000092, 0.0008305269999999976, 0.0008305980000000018, 0.0008305140000000044, 0.0008306250000000015, 0.0008306520000000012, 0.0008306110000000089, 0.0008305829999999959, 0.0008306950000000063, 0.0008306250000000015, 0.0008305830000000097, 0.0008306110000000089, 0.0008306389999999941, 0.000830610999999995]</msg>
<status status="PASS" starttime="20201029 18:17:31.561" endtime="20201029 18:17:31.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.556" endtime="20201029 18:17:31.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.100" endtime="20201029 18:17:31.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.071" endtime="20201029 18:17:31.564"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:31.566" endtime="20201029 18:17:31.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.565" endtime="20201029 18:17:31.586"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.594" endtime="20201029 18:17:31.693"></status>
</kw>
<msg timestamp="20201029 18:17:31.693" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.592" endtime="20201029 18:17:31.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.695" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.694" endtime="20201029 18:17:31.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.696" endtime="20201029 18:17:31.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.590" endtime="20201029 18:17:31.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.588" endtime="20201029 18:17:31.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.705" endtime="20201029 18:17:31.998"></status>
</kw>
<msg timestamp="20201029 18:17:32.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017411917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01828275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:31.704" endtime="20201029 18:17:32.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017411917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01828275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:32.007" endtime="20201029 18:17:32.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.024" endtime="20201029 18:17:32.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.701" endtime="20201029 18:17:32.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.700" endtime="20201029 18:17:32.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:32.038" level="INFO">${PHILIP_RES} = [{'diff': 0.0008708330000000014}, {'diff': 0.0008693199999999998}, {'diff': 0.0008693060000000002}, {'diff': 0.0008692639999999981}, {'diff': 0.0008692079999999998}, {'diff': 0.0008692359999999989}, {...</msg>
<status status="PASS" starttime="20201029 18:17:32.032" endtime="20201029 18:17:32.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.047" level="INFO">${RESULT} = {'diff': [0.0008708330000000014, 0.0008693199999999998, 0.0008693060000000002, 0.0008692639999999981, 0.0008692079999999998, 0.0008692359999999989, 0.0008692910000000012, 0.0008693190000000003, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:17:32.040" endtime="20201029 18:17:32.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.056" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:32.054" endtime="20201029 18:17:32.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.061" level="INFO">VALUE: [0.0008708330000000014, 0.0008693199999999998, 0.0008693060000000002, 0.0008692639999999981, 0.0008692079999999998, 0.0008692359999999989, 0.0008692910000000012, 0.0008693190000000003, 0.0008693339999999994, 0.000869347999999999, 0.0008692220000000028, 0.0008692640000000015, 0.0008691940000000037, 0.0008693329999999999, 0.0008692639999999946, 0.000869347999999999, 0.0008692229999999954, 0.0008692359999999955, 0.0008692770000000016, 0.0008693049999999938, 0.0008693329999999999, 0.0008692780000000011, 0.0008692219999999959, 0.000869250000000002, 0.0008692090000000027, 0.0008692220000000028, 0.0008692639999999946, 0.0008691799999999972, 0.0008691949999999893, 0.0008691940000000037, 0.0008691660000000045, 0.0008692499999999881, 0.0008691799999999972, 0.0008691939999999898, 0.0008691390000000049, 0.0008691669999999901, 0.0008691529999999975, 0.0008692220000000028, 0.000869221999999989, 0.0008692359999999955, 0.0008691950000000032, 0.0008691799999999972, 0.000869250000000002, 0.0008691940000000037, 0.0008691659999999907, 0.0008691939999999898, 0.0008691660000000045, 0.0008691799999999972, 0.0008692080000000102, 0.0008692359999999955]</msg>
<status status="PASS" starttime="20201029 18:17:32.058" endtime="20201029 18:17:32.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.049" endtime="20201029 18:17:32.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.587" endtime="20201029 18:17:32.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.564" endtime="20201029 18:17:32.065"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:32.070" endtime="20201029 18:17:32.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.067" endtime="20201029 18:17:32.091"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.099" endtime="20201029 18:17:32.201"></status>
</kw>
<msg timestamp="20201029 18:17:32.202" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.097" endtime="20201029 18:17:32.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.204" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.203" endtime="20201029 18:17:32.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.205" endtime="20201029 18:17:32.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.095" endtime="20201029 18:17:32.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.093" endtime="20201029 18:17:32.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.215" endtime="20201029 18:17:32.502"></status>
</kw>
<msg timestamp="20201029 18:17:32.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017626014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018536167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.213" endtime="20201029 18:17:32.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017626014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018536167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.506" endtime="20201029 18:17:32.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.513" endtime="20201029 18:17:32.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.211" endtime="20201029 18:17:32.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.209" endtime="20201029 18:17:32.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:32.520" level="INFO">${PHILIP_RES} = [{'diff': 0.0009101530000000004}, {'diff': 0.0009088330000000013}, {'diff': 0.0009086939999999981}, {'diff': 0.0009087079999999977}, {'diff': 0.0009086389999999993}, {'diff': 0.000908665999999999}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:32.517" endtime="20201029 18:17:32.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.524" level="INFO">${RESULT} = {'diff': [0.0009101530000000004, 0.0009088330000000013, 0.0009086939999999981, 0.0009087079999999977, 0.0009086389999999993, 0.000908665999999999, 0.0009086529999999989, 0.000908680999999998, 0.000908...</msg>
<status status="PASS" starttime="20201029 18:17:32.521" endtime="20201029 18:17:32.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.528" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:32.527" endtime="20201029 18:17:32.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.530" level="INFO">VALUE: [0.0009101530000000004, 0.0009088330000000013, 0.0009086939999999981, 0.0009087079999999977, 0.0009086389999999993, 0.000908665999999999, 0.0009086529999999989, 0.000908680999999998, 0.0009086530000000023, 0.000908680000000002, 0.0009087230000000002, 0.0009087360000000003, 0.0009086660000000024, 0.0009086110000000036, 0.0009086110000000036, 0.0009086940000000016, 0.0009085969999999971, 0.0009088059999999981, 0.0009087080000000011, 0.0009087360000000003, 0.0009087220000000007, 0.0009086670000000019, 0.0009087639999999994, 0.0009087769999999995, 0.0009088189999999913, 0.0009087499999999998, 0.0009087640000000063, 0.000908777999999999, 0.000908568999999998, 0.0009086940000000016, 0.0009086660000000024, 0.0009086940000000016, 0.0009086670000000019, 0.0009086530000000093, 0.0009086660000000024, 0.0009085840000000039, 0.0009086249999999962, 0.000908679999999995, 0.0009086110000000036, 0.0009087220000000007, 0.000908679999999995, 0.0009087220000000007, 0.0009085969999999971, 0.0009086390000000028, 0.0009086529999999954, 0.0009086670000000019, 0.0009086800000000089, 0.0009087359999999933, 0.0009086940000000016, 0.0009087499999999998]</msg>
<status status="PASS" starttime="20201029 18:17:32.529" endtime="20201029 18:17:32.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.525" endtime="20201029 18:17:32.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.091" endtime="20201029 18:17:32.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.066" endtime="20201029 18:17:32.533"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:32.536" endtime="20201029 18:17:32.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.534" endtime="20201029 18:17:32.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.564" endtime="20201029 18:17:32.669"></status>
</kw>
<msg timestamp="20201029 18:17:32.670" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.562" endtime="20201029 18:17:32.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.672" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.671" endtime="20201029 18:17:32.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.673" endtime="20201029 18:17:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.560" endtime="20201029 18:17:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.558" endtime="20201029 18:17:32.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.682" endtime="20201029 18:17:32.984"></status>
</kw>
<msg timestamp="20201029 18:17:32.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018426014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.681" endtime="20201029 18:17:32.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018426014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.988" endtime="20201029 18:17:32.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.995" endtime="20201029 18:17:32.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.678" endtime="20201029 18:17:32.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.676" endtime="20201029 18:17:32.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:33.002" level="INFO">${PHILIP_RES} = [{'diff': 0.0009506530000000027}, {'diff': 0.0009489999999999985}, {'diff': 0.0009487639999999978}, {'diff': 0.0009488199999999995}, {'diff': 0.0009489170000000005}, {'diff': 0.0009488880000000019}, {...</msg>
<status status="PASS" starttime="20201029 18:17:32.998" endtime="20201029 18:17:33.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.006" level="INFO">${RESULT} = {'diff': [0.0009506530000000027, 0.0009489999999999985, 0.0009487639999999978, 0.0009488199999999995, 0.0009489170000000005, 0.0009488880000000019, 0.0009488880000000019, 0.0009488889999999944, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:17:33.002" endtime="20201029 18:17:33.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.011" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:33.010" endtime="20201029 18:17:33.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.013" level="INFO">VALUE: [0.0009506530000000027, 0.0009489999999999985, 0.0009487639999999978, 0.0009488199999999995, 0.0009489170000000005, 0.0009488880000000019, 0.0009488880000000019, 0.0009488889999999944, 0.0009488750000000018, 0.0009489030000000009, 0.0009489170000000005, 0.0009489030000000009, 0.0009490689999999968, 0.000949013999999998, 0.0009489449999999996, 0.0009489170000000005, 0.000949014000000005, 0.0009490419999999972, 0.0009489719999999993, 0.0009489579999999997, 0.0009489440000000002, 0.0009489579999999997, 0.0009490000000000054, 0.0009490000000000054, 0.0009489579999999997, 0.0009490280000000045, 0.0009490270000000051, 0.0009490280000000045, 0.000949013999999998, 0.0009489859999999989, 0.0009490280000000045, 0.0009489589999999992, 0.0009490280000000045, 0.0009490269999999912, 0.000949013999999998, 0.0009490280000000045, 0.0009489170000000074, 0.0009489440000000071, 0.0009488750000000018, 0.0009489579999999997, 0.0009489159999999941, 0.0009489300000000006, 0.0009490000000000054, 0.0009490000000000054, 0.0009489869999999984, 0.0009489030000000009, 0.0009489300000000006, 0.0009489310000000001, 0.0009489440000000071, 0.0009489440000000071]</msg>
<status status="PASS" starttime="20201029 18:17:33.012" endtime="20201029 18:17:33.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.007" endtime="20201029 18:17:33.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.556" endtime="20201029 18:17:33.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.534" endtime="20201029 18:17:33.015"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:33.017" endtime="20201029 18:17:33.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.016" endtime="20201029 18:17:33.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.045" endtime="20201029 18:17:33.155"></status>
</kw>
<msg timestamp="20201029 18:17:33.156" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.044" endtime="20201029 18:17:33.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.158" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.157" endtime="20201029 18:17:33.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.159" endtime="20201029 18:17:33.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.041" endtime="20201029 18:17:33.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.039" endtime="20201029 18:17:33.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.168" endtime="20201029 18:17:33.457"></status>
</kw>
<msg timestamp="20201029 18:17:33.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019162083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:33.167" endtime="20201029 18:17:33.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019162083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:33.461" endtime="20201029 18:17:33.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.469" endtime="20201029 18:17:33.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.164" endtime="20201029 18:17:33.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.162" endtime="20201029 18:17:33.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:33.475" level="INFO">${PHILIP_RES} = [{'diff': 0.0009914859999999998}, {'diff': 0.0009898200000000024}, {'diff': 0.0009898750000000012}, {'diff': 0.0009898749999999977}, {'diff': 0.0009898890000000007}, {'diff': 0.0009899589999999986}, {...</msg>
<status status="PASS" starttime="20201029 18:17:33.472" endtime="20201029 18:17:33.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.479" level="INFO">${RESULT} = {'diff': [0.0009914859999999998, 0.0009898200000000024, 0.0009898750000000012, 0.0009898749999999977, 0.0009898890000000007, 0.0009899589999999986, 0.0009899160000000004, 0.000989862000000001, 0.00098...</msg>
<status status="PASS" starttime="20201029 18:17:33.476" endtime="20201029 18:17:33.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.484" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:33.483" endtime="20201029 18:17:33.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.486" level="INFO">VALUE: [0.0009914859999999998, 0.0009898200000000024, 0.0009898750000000012, 0.0009898749999999977, 0.0009898890000000007, 0.0009899589999999986, 0.0009899160000000004, 0.000989862000000001, 0.000989847000000002, 0.000989846999999995, 0.0009897779999999967, 0.0009898200000000024, 0.0009897219999999984, 0.0009897639999999971, 0.000989735999999998, 0.0009898200000000024, 0.0009898750000000012, 0.0009898050000000033, 0.000989847000000002, 0.0009898329999999955, 0.0009898610000000016, 0.000989833999999995, 0.0009898889999999938, 0.0009898190000000029, 0.0009898610000000085, 0.0009898610000000085, 0.0009898329999999955, 0.0009898609999999947, 0.0009897639999999902, 0.0009898199999999885, 0.0009898340000000089, 0.0009897779999999967, 0.0009897909999999899, 0.0009898190000000029, 0.000989847000000002, 0.0009897779999999967, 0.0009898619999999941, 0.0009898190000000029, 0.0009897780000000106, 0.0009896939999999993, 0.0009898190000000029, 0.000989847000000002, 0.0009898340000000089, 0.0009898200000000024, 0.000989764000000004, 0.000989847000000002, 0.000989764000000004, 0.000989916999999993, 0.000989764000000004, 0.000989818999999989]</msg>
<status status="PASS" starttime="20201029 18:17:33.485" endtime="20201029 18:17:33.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.480" endtime="20201029 18:17:33.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.038" endtime="20201029 18:17:33.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.015" endtime="20201029 18:17:33.488"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:33.490" endtime="20201029 18:17:33.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.489" endtime="20201029 18:17:33.510"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.518" endtime="20201029 18:17:33.633"></status>
</kw>
<msg timestamp="20201029 18:17:33.634" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.516" endtime="20201029 18:17:33.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.639" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.636" endtime="20201029 18:17:33.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.641" endtime="20201029 18:17:33.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.514" endtime="20201029 18:17:33.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.512" endtime="20201029 18:17:33.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.665" endtime="20201029 18:17:33.961"></status>
</kw>
<msg timestamp="20201029 18:17:33.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01756825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:33.662" endtime="20201029 18:17:33.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01756825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:33.965" endtime="20201029 18:17:33.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.972" endtime="20201029 18:17:33.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.657" endtime="20201029 18:17:33.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.653" endtime="20201029 18:17:33.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:33.979" level="INFO">${PHILIP_RES} = [{'diff': 0.0010329169999999978}, {'diff': 0.0010314719999999986}, {'diff': 0.0010313890000000006}, {'diff': 0.0010314030000000002}, {'diff': 0.001031457999999999}, {'diff': 0.0010314719999999986}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:33.976" endtime="20201029 18:17:33.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.983" level="INFO">${RESULT} = {'diff': [0.0010329169999999978, 0.0010314719999999986, 0.0010313890000000006, 0.0010314030000000002, 0.001031457999999999, 0.0010314719999999986, 0.0010315140000000007, 0.001031486000000005, 0.001031...</msg>
<status status="PASS" starttime="20201029 18:17:33.980" endtime="20201029 18:17:33.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.987" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:33.986" endtime="20201029 18:17:33.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.989" level="INFO">VALUE: [0.0010329169999999978, 0.0010314719999999986, 0.0010313890000000006, 0.0010314030000000002, 0.001031457999999999, 0.0010314719999999986, 0.0010315140000000007, 0.001031486000000005, 0.0010314859999999981, 0.0010314030000000002, 0.0010314449999999989, 0.0010314439999999994, 0.0010314169999999998, 0.001031458000000006, 0.0010314719999999986, 0.0010314589999999985, 0.0010315269999999974, 0.0010315000000000046, 0.0010315140000000042, 0.0010314309999999993, 0.0010314589999999985, 0.0010314859999999981, 0.0010314589999999985, 0.0010314589999999985, 0.0010314309999999993, 0.001031375000000001, 0.0010314299999999998, 0.0010314030000000002, 0.001031457999999999, 0.0010314309999999993, 0.0010314299999999998, 0.0010314030000000002, 0.001031457999999999, 0.0010314309999999993, 0.0010314030000000002, 0.0010314309999999993, 0.0010314299999999998, 0.0010314299999999998, 0.0010315000000000046, 0.0010314030000000002, 0.0010314859999999981, 0.0010314309999999993, 0.0010314159999999933, 0.0010314870000000115, 0.0010314440000000064, 0.0010314439999999925, 0.0010314030000000002, 0.0010314720000000055, 0.0010314720000000055, 0.001031540999999997]</msg>
<status status="PASS" starttime="20201029 18:17:33.988" endtime="20201029 18:17:33.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.984" endtime="20201029 18:17:33.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.511" endtime="20201029 18:17:33.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.488" endtime="20201029 18:17:33.992"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:33.994" endtime="20201029 18:17:34.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.993" endtime="20201029 18:17:34.014"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.022" endtime="20201029 18:17:34.139"></status>
</kw>
<msg timestamp="20201029 18:17:34.139" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.021" endtime="20201029 18:17:34.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.142" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.140" endtime="20201029 18:17:34.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.143" endtime="20201029 18:17:34.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.018" endtime="20201029 18:17:34.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.016" endtime="20201029 18:17:34.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.152" endtime="20201029 18:17:34.445"></status>
</kw>
<msg timestamp="20201029 18:17:34.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017418556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.150" endtime="20201029 18:17:34.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017418556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.454" endtime="20201029 18:17:34.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.470" endtime="20201029 18:17:34.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.148" endtime="20201029 18:17:34.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.146" endtime="20201029 18:17:34.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:34.484" level="INFO">${PHILIP_RES} = [{'diff': 0.001075263}, {'diff': 0.0010737630000000019}, {'diff': 0.0010737079999999996}, {'diff': 0.0010738050000000006}, {'diff': 0.001073681}, {'diff': 0.0010737639999999979}, {'diff': 0.0010736810...</msg>
<status status="PASS" starttime="20201029 18:17:34.477" endtime="20201029 18:17:34.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.494" level="INFO">${RESULT} = {'diff': [0.001075263, 0.0010737630000000019, 0.0010737079999999996, 0.0010738050000000006, 0.001073681, 0.0010737639999999979, 0.0010736810000000034, 0.0010737500000000053, 0.0010737219999999992, 0.0...</msg>
<status status="PASS" starttime="20201029 18:17:34.486" endtime="20201029 18:17:34.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.502" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:34.501" endtime="20201029 18:17:34.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.507" level="INFO">VALUE: [0.001075263, 0.0010737630000000019, 0.0010737079999999996, 0.0010738050000000006, 0.001073681, 0.0010737639999999979, 0.0010736810000000034, 0.0010737500000000053, 0.0010737219999999992, 0.0010737079999999996, 0.0010736800000000005, 0.0010737639999999979, 0.001073776999999998, 0.0010738330000000032, 0.0010737779999999975, 0.0010738189999999967, 0.0010739170000000006, 0.001073903000000001, 0.0010738890000000015, 0.001073875000000002, 0.0010738750000000089, 0.001073846999999989, 0.0010738059999999966, 0.0010737370000000052, 0.0010737229999999987, 0.0010737359999999918, 0.0010738190000000036, 0.0010738329999999963, 0.001073709000000006, 0.0010738049999999971, 0.0010737499999999983, 0.0010737499999999983, 0.0010737909999999906, 0.0010738060000000105, 0.0010737359999999918, 0.0010737770000000119, 0.0010738060000000105, 0.0010737089999999921, 0.0010736949999999995, 0.0010736799999999935, 0.0010737780000000113, 0.0010737499999999983, 0.001073763999999991, 0.0010737499999999983, 0.001073792000000004, 0.0010737499999999983, 0.0010737499999999983, 0.0010737779999999975, 0.0010737219999999992, 0.0010736799999999935]</msg>
<status status="PASS" starttime="20201029 18:17:34.505" endtime="20201029 18:17:34.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.496" endtime="20201029 18:17:34.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.015" endtime="20201029 18:17:34.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.992" endtime="20201029 18:17:34.511"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:34.516" endtime="20201029 18:17:34.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.513" endtime="20201029 18:17:34.537"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.545" endtime="20201029 18:17:34.665"></status>
</kw>
<msg timestamp="20201029 18:17:34.666" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.543" endtime="20201029 18:17:34.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.668" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.667" endtime="20201029 18:17:34.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.669" endtime="20201029 18:17:34.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.541" endtime="20201029 18:17:34.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.539" endtime="20201029 18:17:34.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.678" endtime="20201029 18:17:34.968"></status>
</kw>
<msg timestamp="20201029 18:17:34.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01846975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:34.677" endtime="20201029 18:17:34.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01846975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:34.972" endtime="20201029 18:17:34.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.979" endtime="20201029 18:17:34.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.674" endtime="20201029 18:17:34.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.673" endtime="20201029 18:17:34.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:34.986" level="INFO">${PHILIP_RES} = [{'diff': 0.0011185420000000001}, {'diff': 0.0011169439999999982}, {'diff': 0.0011169719999999973}, {'diff': 0.001116902999999999}, {'diff': 0.001116917000000002}, {'diff': 0.0011169730000000003}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:34.983" endtime="20201029 18:17:34.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.990" level="INFO">${RESULT} = {'diff': [0.0011185420000000001, 0.0011169439999999982, 0.0011169719999999973, 0.001116902999999999, 0.001116917000000002, 0.0011169730000000003, 0.0011168749999999998, 0.0011169720000000008, 0.001116...</msg>
<status status="PASS" starttime="20201029 18:17:34.987" endtime="20201029 18:17:34.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.994" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:34.993" endtime="20201029 18:17:34.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.996" level="INFO">VALUE: [0.0011185420000000001, 0.0011169439999999982, 0.0011169719999999973, 0.001116902999999999, 0.001116917000000002, 0.0011169730000000003, 0.0011168749999999998, 0.0011169720000000008, 0.0011169299999999951, 0.001117027999999999, 0.0011169580000000012, 0.0011170409999999992, 0.001117027999999999, 0.001117027999999999, 0.0011169720000000008, 0.0011169720000000008, 0.0011171660000000028, 0.0011169720000000008, 0.0011170409999999992, 0.0011169730000000003, 0.0011169860000000004, 0.0011169720000000077, 0.001116888999999996, 0.0011169720000000077, 0.0011170139999999995, 0.0011170699999999978, 0.0011170830000000048, 0.0011170689999999983, 0.0011170699999999978, 0.0011170699999999978, 0.001116916999999995, 0.0011170549999999918, 0.0011170560000000052, 0.0011170000000000069, 0.0011170420000000125, 0.0011169590000000007, 0.0011170560000000052, 0.001116999999999993, 0.0011169580000000012, 0.0011171249999999966, 0.0011170139999999995, 0.0011170000000000069, 0.0011170700000000117, 0.001117097999999997, 0.0011170419999999986, 0.0011170139999999995, 0.0011170279999999921, 0.0011171250000000243, 0.0011170419999999848, 0.0011170000000000069]</msg>
<status status="PASS" starttime="20201029 18:17:34.995" endtime="20201029 18:17:34.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.991" endtime="20201029 18:17:34.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.537" endtime="20201029 18:17:34.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.512" endtime="20201029 18:17:34.998"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:35.001" endtime="20201029 18:17:35.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.999" endtime="20201029 18:17:35.021"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.029" endtime="20201029 18:17:35.153"></status>
</kw>
<msg timestamp="20201029 18:17:35.154" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.027" endtime="20201029 18:17:35.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.156" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.155" endtime="20201029 18:17:35.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.157" endtime="20201029 18:17:35.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.024" endtime="20201029 18:17:35.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.023" endtime="20201029 18:17:35.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.167" endtime="20201029 18:17:35.472"></status>
</kw>
<msg timestamp="20201029 18:17:35.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017571, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018733361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:35.165" endtime="20201029 18:17:35.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017571, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018733361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:35.476" endtime="20201029 18:17:35.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.484" endtime="20201029 18:17:35.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.163" endtime="20201029 18:17:35.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.161" endtime="20201029 18:17:35.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:35.490" level="INFO">${PHILIP_RES} = [{'diff': 0.0011623610000000006}, {'diff': 0.0011608190000000004}, {'diff': 0.00116082}, {'diff': 0.0011609580000000001}, {'diff': 0.0011608749999999987}, {'diff': 0.001160722999999999}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:17:35.487" endtime="20201029 18:17:35.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.494" level="INFO">${RESULT} = {'diff': [0.0011623610000000006, 0.0011608190000000004, 0.00116082, 0.0011609580000000001, 0.0011608749999999987, 0.001160722999999999, 0.0011606249999999985, 0.0011606799999999973, 0.0011607360000000...</msg>
<status status="PASS" starttime="20201029 18:17:35.491" endtime="20201029 18:17:35.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.498" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:35.497" endtime="20201029 18:17:35.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.501" level="INFO">VALUE: [0.0011623610000000006, 0.0011608190000000004, 0.00116082, 0.0011609580000000001, 0.0011608749999999987, 0.001160722999999999, 0.0011606249999999985, 0.0011606799999999973, 0.0011607360000000025, 0.0011606529999999976, 0.001160721999999996, 0.001160722000000003, 0.0011607079999999964, 0.0011605979999999988, 0.0011606950000000033, 0.001160737000000002, 0.0011606530000000045, 0.0011607640000000016, 0.0011607920000000008, 0.0011608200000000068, 0.0011608050000000009, 0.0011607080000000103, 0.0011607629999999952, 0.001160819999999993, 0.0011606670000000041, 0.0011607920000000077, 0.0011607359999999955, 0.0011606950000000033, 0.0011607360000000094, 0.0011606940000000038, 0.0011606799999999973, 0.0011607780000000012, 0.0011607919999999938, 0.0011607359999999955, 0.0011606110000000058, 0.001160610999999992, 0.0011607359999999955, 0.0011607780000000012, 0.0011608339999999995, 0.0011607780000000012, 0.0011607920000000077, 0.0011608060000000003, 0.00116069399999999, 0.0011607780000000012, 0.0011606810000000106, 0.0011606670000000041, 0.0011605970000000132, 0.0011606660000000046, 0.0011607499999999882, 0.0011606249999999985]</msg>
<status status="PASS" starttime="20201029 18:17:35.499" endtime="20201029 18:17:35.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.495" endtime="20201029 18:17:35.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.021" endtime="20201029 18:17:35.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.998" endtime="20201029 18:17:35.503"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:35.506" endtime="20201029 18:17:35.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.504" endtime="20201029 18:17:35.526"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.534" endtime="20201029 18:17:35.662"></status>
</kw>
<msg timestamp="20201029 18:17:35.662" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.532" endtime="20201029 18:17:35.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.665" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.663" endtime="20201029 18:17:35.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.666" endtime="20201029 18:17:35.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.530" endtime="20201029 18:17:35.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.528" endtime="20201029 18:17:35.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.675" endtime="20201029 18:17:35.964"></status>
</kw>
<msg timestamp="20201029 18:17:35.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017658361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018865403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.673" endtime="20201029 18:17:35.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017658361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018865403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.968" endtime="20201029 18:17:35.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.975" endtime="20201029 18:17:35.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.671" endtime="20201029 18:17:35.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.669" endtime="20201029 18:17:35.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:35.982" level="INFO">${PHILIP_RES} = [{'diff': 0.0012070419999999984}, {'diff': 0.0012054999999999982}, {'diff': 0.0012054449999999994}, {'diff': 0.0012054449999999994}, {'diff': 0.0012053890000000012}, {'diff': 0.0012054449999999994}, {...</msg>
<status status="PASS" starttime="20201029 18:17:35.978" endtime="20201029 18:17:35.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.986" level="INFO">${RESULT} = {'diff': [0.0012070419999999984, 0.0012054999999999982, 0.0012054449999999994, 0.0012054449999999994, 0.0012053890000000012, 0.0012054449999999994, 0.0012054859999999987, 0.001205444, 0.00120555599999...</msg>
<status status="PASS" starttime="20201029 18:17:35.983" endtime="20201029 18:17:35.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.991" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:35.990" endtime="20201029 18:17:35.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.993" level="INFO">VALUE: [0.0012070419999999984, 0.0012054999999999982, 0.0012054449999999994, 0.0012054449999999994, 0.0012053890000000012, 0.0012054449999999994, 0.0012054859999999987, 0.001205444, 0.0012055559999999965, 0.0012055129999999983, 0.0012054170000000003, 0.0012054579999999995, 0.0012055129999999983, 0.0012054859999999987, 0.0012053750000000016, 0.0012053890000000012, 0.0012054999999999982, 0.0012054020000000013, 0.0012053750000000016, 0.0012053890000000012, 0.0012052920000000106, 0.0012054579999999926, 0.001205459000000006, 0.001205430999999993, 0.0012054299999999935, 0.0012054449999999994, 0.0012053750000000085, 0.0012053469999999955, 0.0012054449999999994, 0.0012053749999999946, 0.0012053189999999964, 0.001205361000000002, 0.0012053750000000085, 0.001205361000000002, 0.0012053620000000015, 0.0012053480000000089, 0.0012053750000000085, 0.0012053749999999946, 0.0012054030000000077, 0.001205430999999993, 0.0012053470000000094, 0.0012054449999999994, 0.0012054999999999982, 0.001205471999999999, 0.001205472000000013, 0.0012054029999999938, 0.0012053750000000085, 0.0012054860000000056, 0.0012054580000000203, 0.0012055139999999909]</msg>
<status status="PASS" starttime="20201029 18:17:35.992" endtime="20201029 18:17:35.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.987" endtime="20201029 18:17:35.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.526" endtime="20201029 18:17:35.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.504" endtime="20201029 18:17:35.995"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:35.997" endtime="20201029 18:17:36.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.996" endtime="20201029 18:17:36.017"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.025" endtime="20201029 18:17:36.158"></status>
</kw>
<msg timestamp="20201029 18:17:36.159" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.024" endtime="20201029 18:17:36.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.164" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.161" endtime="20201029 18:17:36.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.166" endtime="20201029 18:17:36.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.021" endtime="20201029 18:17:36.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.019" endtime="20201029 18:17:36.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.186" endtime="20201029 18:17:36.482"></status>
</kw>
<msg timestamp="20201029 18:17:36.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018688597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:36.182" endtime="20201029 18:17:36.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018688597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:36.487" endtime="20201029 18:17:36.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.496" endtime="20201029 18:17:36.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.177" endtime="20201029 18:17:36.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.173" endtime="20201029 18:17:36.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:36.502" level="INFO">${PHILIP_RES} = [{'diff': 0.0012522780000000025}, {'diff': 0.0012506530000000009}, {'diff': 0.0012506800000000005}, {'diff': 0.0012506940000000001}, {'diff': 0.0012507079999999997}, {'diff': 0.001250680000000004}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:36.499" endtime="20201029 18:17:36.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.506" level="INFO">${RESULT} = {'diff': [0.0012522780000000025, 0.0012506530000000009, 0.0012506800000000005, 0.0012506940000000001, 0.0012507079999999997, 0.001250680000000004, 0.0012506249999999983, 0.0012505550000000004, 0.00125...</msg>
<status status="PASS" starttime="20201029 18:17:36.503" endtime="20201029 18:17:36.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.510" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:36.509" endtime="20201029 18:17:36.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.513" level="INFO">VALUE: [0.0012522780000000025, 0.0012506530000000009, 0.0012506800000000005, 0.0012506940000000001, 0.0012507079999999997, 0.001250680000000004, 0.0012506249999999983, 0.0012505550000000004, 0.0012505829999999996, 0.0012506109999999987, 0.0012506389999999978, 0.001250651999999998, 0.0012506250000000052, 0.0012506390000000048, 0.0012505699999999995, 0.0012505140000000012, 0.001250651999999998, 0.001250569, 0.0012506520000000049, 0.0012506249999999913, 0.0012505550000000004, 0.0012507500000000088, 0.0012506659999999975, 0.0012506250000000052, 0.0012505829999999996, 0.0012506389999999978, 0.0012507359999999884, 0.0012506250000000052, 0.0012506250000000052, 0.001250666999999997, 0.0012507219999999958, 0.0012507219999999958, 0.0012506389999999978, 0.0012506530000000043, 0.0012506250000000052, 0.0012506389999999978, 0.0012506109999999987, 0.0012507219999999958, 0.0012507229999999953, 0.0012506389999999978, 0.0012505700000000064, 0.0012505969999999922, 0.0012506249999999913, 0.0012507079999999893, 0.00125059700000002, 0.0012506250000000052, 0.0012505829999999996, 0.0012505140000000081, 0.0012506250000000052, 0.0012505550000000143]</msg>
<status status="PASS" starttime="20201029 18:17:36.511" endtime="20201029 18:17:36.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.507" endtime="20201029 18:17:36.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.018" endtime="20201029 18:17:36.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.995" endtime="20201029 18:17:36.515"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:36.517" endtime="20201029 18:17:36.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.516" endtime="20201029 18:17:36.537"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.545" endtime="20201029 18:17:36.681"></status>
</kw>
<msg timestamp="20201029 18:17:36.681" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.543" endtime="20201029 18:17:36.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.684" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.682" endtime="20201029 18:17:36.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.685" endtime="20201029 18:17:36.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.541" endtime="20201029 18:17:36.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.539" endtime="20201029 18:17:36.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.694" endtime="20201029 18:17:36.988"></status>
</kw>
<msg timestamp="20201029 18:17:36.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017421417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018719722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:36.693" endtime="20201029 18:17:36.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017421417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018719722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:36.996" endtime="20201029 18:17:37.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.014" endtime="20201029 18:17:37.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.691" endtime="20201029 18:17:37.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.689" endtime="20201029 18:17:37.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:37.027" level="INFO">${PHILIP_RES} = [{'diff': 0.0012983049999999996}, {'diff': 0.001296778000000002}, {'diff': 0.0012967639999999989}, {'diff': 0.001296776999999999}, {'diff': 0.0012966529999999983}, {'diff': 0.0012967229999999962}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:37.020" endtime="20201029 18:17:37.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:37.036" level="INFO">${RESULT} = {'diff': [0.0012983049999999996, 0.001296778000000002, 0.0012967639999999989, 0.001296776999999999, 0.0012966529999999983, 0.0012967229999999962, 0.0012968340000000037, 0.0012967500000000062, 0.001296...</msg>
<status status="PASS" starttime="20201029 18:17:37.029" endtime="20201029 18:17:37.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.044" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:37.042" endtime="20201029 18:17:37.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.049" level="INFO">VALUE: [0.0012983049999999996, 0.001296778000000002, 0.0012967639999999989, 0.001296776999999999, 0.0012966529999999983, 0.0012967229999999962, 0.0012968340000000037, 0.0012967500000000062, 0.0012967220000000002, 0.001296820000000004, 0.0012967369999999992, 0.0012967359999999997, 0.0012968330000000042, 0.001296681000000001, 0.0012967909999999985, 0.001296792000000005, 0.0012967359999999997, 0.0012967219999999932, 0.001296763999999992, 0.0012967359999999928, 0.001296792000000005, 0.0012967220000000002, 0.0012967640000000058, 0.0012968609999999964, 0.0012968329999999972, 0.0012968890000000094, 0.001296792000000005, 0.0012968190000000046, 0.001296903000000002, 0.0012968889999999955, 0.0012969169999999947, 0.0012968889999999955, 0.001296792000000005, 0.0012968189999999907, 0.0012967360000000067, 0.0012968329999999972, 0.0012967360000000067, 0.0012966799999999945, 0.0012967910000000055, 0.0012967359999999928, 0.0012967360000000067, 0.001296792000000005, 0.00129659800000001, 0.0012967080000000075, 0.0012966670000000013, 0.0012966250000000235, 0.0012966810000000217, 0.001296611000000003, 0.0012967910000000193, 0.0012966940000000149]</msg>
<status status="PASS" starttime="20201029 18:17:37.046" endtime="20201029 18:17:37.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.037" endtime="20201029 18:17:37.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.538" endtime="20201029 18:17:37.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.515" endtime="20201029 18:17:37.055"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:37.059" endtime="20201029 18:17:37.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.056" endtime="20201029 18:17:37.080"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.088" endtime="20201029 18:17:37.228"></status>
</kw>
<msg timestamp="20201029 18:17:37.229" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.087" endtime="20201029 18:17:37.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.231" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.230" endtime="20201029 18:17:37.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.232" endtime="20201029 18:17:37.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.084" endtime="20201029 18:17:37.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.082" endtime="20201029 18:17:37.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.241" endtime="20201029 18:17:37.531"></status>
</kw>
<msg timestamp="20201029 18:17:37.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019033861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:37.240" endtime="20201029 18:17:37.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019033861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:37.535" endtime="20201029 18:17:37.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.542" endtime="20201029 18:17:37.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.237" endtime="20201029 18:17:37.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.235" endtime="20201029 18:17:37.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:37.549" level="INFO">${PHILIP_RES} = [{'diff': 0.001345291999999998}, {'diff': 0.0013436110000000015}, {'diff': 0.0013436660000000003}, {'diff': 0.0013435549999999997}, {'diff': 0.0013436530000000002}, {'diff': 0.001343625000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:37.545" endtime="20201029 18:17:37.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:37.553" level="INFO">${RESULT} = {'diff': [0.001345291999999998, 0.0013436110000000015, 0.0013436660000000003, 0.0013435549999999997, 0.0013436530000000002, 0.001343625000000001, 0.0013436660000000003, 0.0013436390000000006, 0.001343...</msg>
<status status="PASS" starttime="20201029 18:17:37.550" endtime="20201029 18:17:37.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.558" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:37.556" endtime="20201029 18:17:37.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.560" level="INFO">VALUE: [0.001345291999999998, 0.0013436110000000015, 0.0013436660000000003, 0.0013435549999999997, 0.0013436530000000002, 0.001343625000000001, 0.0013436660000000003, 0.0013436390000000006, 0.0013436109999999946, 0.0013436110000000015, 0.0013436110000000015, 0.0013437089999999985, 0.0013437219999999986, 0.0013436110000000015, 0.0013436809999999993, 0.0013433890000000004, 0.0013435280000000036, 0.0013435829999999954, 0.0013435420000000031, 0.0013435549999999963, 0.0013434999999999975, 0.0013435559999999958, 0.0013435700000000023, 0.0013436109999999946, 0.0013434590000000052, 0.0013435410000000036, 0.0013435829999999954, 0.0013436520000000007, 0.0013436669999999928, 0.0013435560000000096, 0.0013436530000000002, 0.0013436110000000084, 0.001343625000000001, 0.0013436389999999937, 0.0013436530000000002, 0.001343694999999992, 0.0013436520000000007, 0.0013436669999999928, 0.001343723000000005, 0.0013436110000000084, 0.0013436390000000076, 0.0013436950000000059, 0.0013435700000000161, 0.0013436249999999872, 0.0013436390000000076, 0.001343707999999999, 0.0013437220000000194, 0.001343818999999996, 0.0013437500000000047, 0.0013437220000000194]</msg>
<status status="PASS" starttime="20201029 18:17:37.559" endtime="20201029 18:17:37.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.554" endtime="20201029 18:17:37.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.081" endtime="20201029 18:17:37.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.055" endtime="20201029 18:17:37.566"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:37.569" endtime="20201029 18:17:37.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.567" endtime="20201029 18:17:37.589"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.597" endtime="20201029 18:17:37.741"></status>
</kw>
<msg timestamp="20201029 18:17:37.741" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.595" endtime="20201029 18:17:37.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.744" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.742" endtime="20201029 18:17:37.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.745" endtime="20201029 18:17:37.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.593" endtime="20201029 18:17:37.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.591" endtime="20201029 18:17:37.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.753" endtime="20201029 18:17:38.057"></status>
</kw>
<msg timestamp="20201029 18:17:38.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018871083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:37.752" endtime="20201029 18:17:38.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018871083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.061" endtime="20201029 18:17:38.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.069" endtime="20201029 18:17:38.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.749" endtime="20201029 18:17:38.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.748" endtime="20201029 18:17:38.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:38.075" level="INFO">${PHILIP_RES} = [{'diff': 0.0013928050000000004}, {'diff': 0.0013913750000000003}, {'diff': 0.0013914159999999995}, {'diff': 0.0013913200000000014}, {'diff': 0.0013913750000000003}, {'diff': 0.0013913750000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:17:38.072" endtime="20201029 18:17:38.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.079" level="INFO">${RESULT} = {'diff': [0.0013928050000000004, 0.0013913750000000003, 0.0013914159999999995, 0.0013913200000000014, 0.0013913750000000003, 0.0013913750000000003, 0.001391319000000002, 0.001391319000000002, 0.001391...</msg>
<status status="PASS" starttime="20201029 18:17:38.076" endtime="20201029 18:17:38.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.083" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:38.082" endtime="20201029 18:17:38.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.086" level="INFO">VALUE: [0.0013928050000000004, 0.0013913750000000003, 0.0013914159999999995, 0.0013913200000000014, 0.0013913750000000003, 0.0013913750000000003, 0.001391319000000002, 0.001391319000000002, 0.0013912499999999967, 0.001391290999999996, 0.001391222999999997, 0.0013912370000000035, 0.001391334000000001, 0.001391290999999996, 0.0013912499999999967, 0.0013912219999999975, 0.0013913330000000015, 0.001391305999999995, 0.0013912779999999958, 0.0013912779999999958, 0.0013912080000000049, 0.0013912090000000044, 0.0013911949999999979, 0.0013913330000000085, 0.0013911659999999992, 0.0013912080000000049, 0.001391124999999993, 0.0013912640000000032, 0.0013912780000000097, 0.0013912910000000028, 0.0013912920000000023, 0.0013913060000000088, 0.001391333999999994, 0.0013912779999999958, 0.0013912499999999967, 0.0013912080000000049, 0.0013913049999999955, 0.0013913330000000085, 0.0013912920000000023, 0.0013914030000000133, 0.0013913329999999946, 0.0013912640000000032, 0.0013912219999999975, 0.0013912640000000032, 0.0013913469999999872, 0.001391277000000024, 0.001391262999999976, 0.0013911809999999913, 0.0013912499999999828, 0.0013912500000000105]</msg>
<status status="PASS" starttime="20201029 18:17:38.084" endtime="20201029 18:17:38.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.080" endtime="20201029 18:17:38.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.589" endtime="20201029 18:17:38.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.566" endtime="20201029 18:17:38.088"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:38.090" endtime="20201029 18:17:38.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.089" endtime="20201029 18:17:38.110"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.118" endtime="20201029 18:17:38.266"></status>
</kw>
<msg timestamp="20201029 18:17:38.266" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.116" endtime="20201029 18:17:38.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.269" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.268" endtime="20201029 18:17:38.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.270" endtime="20201029 18:17:38.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.114" endtime="20201029 18:17:38.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.112" endtime="20201029 18:17:38.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.282" endtime="20201029 18:17:38.572"></status>
</kw>
<msg timestamp="20201029 18:17:38.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017418597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018859861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.281" endtime="20201029 18:17:38.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017418597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018859861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.575" endtime="20201029 18:17:38.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.583" endtime="20201029 18:17:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.278" endtime="20201029 18:17:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.276" endtime="20201029 18:17:38.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:38.592" level="INFO">${PHILIP_RES} = [{'diff': 0.0014412639999999977}, {'diff': 0.001439652999999999}, {'diff': 0.0014396659999999992}, {'diff': 0.0014395839999999972}, {'diff': 0.0014396110000000004}, {'diff': 0.0014396799999999987}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:38.586" endtime="20201029 18:17:38.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.601" level="INFO">${RESULT} = {'diff': [0.0014412639999999977, 0.001439652999999999, 0.0014396659999999992, 0.0014395839999999972, 0.0014396110000000004, 0.0014396799999999987, 0.0014396809999999982, 0.0014395700000000011, 0.00143...</msg>
<status status="PASS" starttime="20201029 18:17:38.594" endtime="20201029 18:17:38.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.609" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:38.607" endtime="20201029 18:17:38.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.614" level="INFO">VALUE: [0.0014412639999999977, 0.001439652999999999, 0.0014396659999999992, 0.0014395839999999972, 0.0014396110000000004, 0.0014396799999999987, 0.0014396809999999982, 0.0014395700000000011, 0.0014396669999999986, 0.0014396669999999986, 0.0014395970000000008, 0.0014396950000000047, 0.0014396809999999982, 0.0014396949999999978, 0.0014397499999999966, 0.0014396519999999996, 0.0014397920000000092, 0.0014397639999999962, 0.0014399030000000063, 0.0014397639999999962, 0.0014398190000000088, 0.001439652999999999, 0.0014396809999999982, 0.0014396109999999934, 0.0014396939999999914, 0.0014396120000000068, 0.0014395829999999943, 0.0014397230000000039, 0.001439652999999999, 0.001439625, 0.0014396809999999982, 0.0014396950000000047, 0.0014395970000000008, 0.0014396390000000064, 0.0014397780000000027, 0.0014395279999999955, 0.001439443999999998, 0.0014394999999999963, 0.0014396809999999982, 0.0014395410000000164, 0.001439666000000006, 0.001439596999999987, 0.001439596999999987, 0.0014396799999999987, 0.0014397089999999835, 0.0014396809999999982, 0.001439653000000013, 0.0014396670000000056, 0.0014396670000000056, 0.0014396389999999926]</msg>
<status status="PASS" starttime="20201029 18:17:38.611" endtime="20201029 18:17:38.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.602" endtime="20201029 18:17:38.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.111" endtime="20201029 18:17:38.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.088" endtime="20201029 18:17:38.619"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:38.624" endtime="20201029 18:17:38.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.621" endtime="20201029 18:17:38.647"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.663" endtime="20201029 18:17:38.817"></status>
</kw>
<msg timestamp="20201029 18:17:38.818" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.660" endtime="20201029 18:17:38.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.823" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.820" endtime="20201029 18:17:38.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.825" endtime="20201029 18:17:38.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.655" endtime="20201029 18:17:38.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.651" endtime="20201029 18:17:38.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.844" endtime="20201029 18:17:39.144"></status>
</kw>
<msg timestamp="20201029 18:17:39.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030754347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:38.841" endtime="20201029 18:17:39.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030754347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:39.148" endtime="20201029 18:17:39.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.156" endtime="20201029 18:17:39.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.836" endtime="20201029 18:17:39.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.832" endtime="20201029 18:17:39.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:39.163" level="INFO">${PHILIP_RES} = [{'diff': 0.001490347000000003}, {'diff': 0.0014887639999999966}, {'diff': 0.0014887089999999978}, {'diff': 0.0014886800000000061}, {'diff': 0.0014886529999999995}, {'diff': 0.0014887359999999975}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:39.160" endtime="20201029 18:17:39.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.168" level="INFO">${RESULT} = {'diff': [0.001490347000000003, 0.0014887639999999966, 0.0014887089999999978, 0.0014886800000000061, 0.0014886529999999995, 0.0014887359999999975, 0.0014888199999999949, 0.0014888890000000002, 0.00148...</msg>
<status status="PASS" starttime="20201029 18:17:39.164" endtime="20201029 18:17:39.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.172" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:39.171" endtime="20201029 18:17:39.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.175" level="INFO">VALUE: [0.001490347000000003, 0.0014887639999999966, 0.0014887089999999978, 0.0014886800000000061, 0.0014886529999999995, 0.0014887359999999975, 0.0014888199999999949, 0.0014888890000000002, 0.0014887920000000027, 0.0014888890000000002, 0.001488861000000001, 0.0014889029999999998, 0.001488944000000006, 0.0014888049999999958, 0.0014888470000000015, 0.001488832999999995, 0.0014888750000000006, 0.001488860999999994, 0.001488958999999998, 0.001488860999999994, 0.0014889170000000063, 0.001488832999999995, 0.0014888190000000023, 0.0014889299999999994, 0.0014889450000000054, 0.0014888049999999958, 0.0014889719999999912, 0.001488848000000001, 0.0014887909999999893, 0.001488666999999999, 0.001488860999999994, 0.0014888190000000023, 0.0014888469999999876, 0.0014887919999999888, 0.0014887499999999831, 0.001488861000000008, 0.0014888609999999802, 0.0014888609999999802, 0.0014888330000000227, 0.0014887640000000035, 0.0014887919999999888, 0.0014888189999999746, 0.0014888750000000006, 0.0014888750000000006, 0.0014889580000000124, 0.0014889299999999994, 0.0014889450000000193, 0.0014889299999999994, 0.001488778000000024, 0.0014888609999999802]</msg>
<status status="PASS" starttime="20201029 18:17:39.173" endtime="20201029 18:17:39.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.169" endtime="20201029 18:17:39.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.648" endtime="20201029 18:17:39.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.620" endtime="20201029 18:17:39.176"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:39.179" endtime="20201029 18:17:39.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.177" endtime="20201029 18:17:39.199"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.207" endtime="20201029 18:17:39.363"></status>
</kw>
<msg timestamp="20201029 18:17:39.363" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.205" endtime="20201029 18:17:39.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.366" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.364" endtime="20201029 18:17:39.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.367" endtime="20201029 18:17:39.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.203" endtime="20201029 18:17:39.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.201" endtime="20201029 18:17:39.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.376" endtime="20201029 18:17:39.673"></status>
</kw>
<msg timestamp="20201029 18:17:39.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018983625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.374" endtime="20201029 18:17:39.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018983625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.682" endtime="20201029 18:17:39.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.699" endtime="20201029 18:17:39.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.372" endtime="20201029 18:17:39.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.370" endtime="20201029 18:17:39.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:39.712" level="INFO">${PHILIP_RES} = [{'diff': 0.0015401389999999994}, {'diff': 0.001538763999999998}, {'diff': 0.0015387370000000018}, {'diff': 0.001538653000000001}, {'diff': 0.001538569}, {'diff': 0.001538471999999999}, {'diff': 0.001...</msg>
<status status="PASS" starttime="20201029 18:17:39.706" endtime="20201029 18:17:39.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.721" level="INFO">${RESULT} = {'diff': [0.0015401389999999994, 0.001538763999999998, 0.0015387370000000018, 0.001538653000000001, 0.001538569, 0.001538471999999999, 0.0015386940000000002, 0.0015386940000000002, 0.00153865200000000...</msg>
<status status="PASS" starttime="20201029 18:17:39.714" endtime="20201029 18:17:39.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.730" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:39.728" endtime="20201029 18:17:39.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.734" level="INFO">VALUE: [0.0015401389999999994, 0.001538763999999998, 0.0015387370000000018, 0.001538653000000001, 0.001538569, 0.001538471999999999, 0.0015386940000000002, 0.0015386940000000002, 0.0015386520000000015, 0.0015386520000000015, 0.001538471999999999, 0.0015384999999999982, 0.0015384999999999982, 0.0015385420000000039, 0.001538583000000003, 0.001538653000000001, 0.0015386110000000092, 0.0015385559999999965, 0.0015385699999999891, 0.0015385139999999908, 0.0015384019999999943, 0.0015384170000000003, 0.0015383890000000011, 0.0015384309999999929, 0.0015384299999999934, 0.0015384579999999926, 0.0015385139999999908, 0.0015385269999999979, 0.0015384170000000003, 0.0015384579999999926, 0.0015384859999999917, 0.0015384729999999985, 0.0015384860000000056, 0.0015384860000000056, 0.0015385420000000039, 0.0015384860000000056, 0.0015385689999999896, 0.0015384029999999937, 0.0015383880000000016, 0.0015385690000000174, 0.0015384300000000073, 0.0015385140000000186, 0.0015384860000000056, 0.0015385420000000039, 0.0015385420000000039, 0.0015385970000000027, 0.0015385420000000039, 0.0015386109999999953, 0.001538653000000001, 0.001538777000000019]</msg>
<status status="PASS" starttime="20201029 18:17:39.732" endtime="20201029 18:17:39.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.723" endtime="20201029 18:17:39.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.199" endtime="20201029 18:17:39.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.177" endtime="20201029 18:17:39.739"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:39.743" endtime="20201029 18:17:39.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.741" endtime="20201029 18:17:39.764"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.772" endtime="20201029 18:17:39.932"></status>
</kw>
<msg timestamp="20201029 18:17:39.933" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.770" endtime="20201029 18:17:39.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.935" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.934" endtime="20201029 18:17:39.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.936" endtime="20201029 18:17:39.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.768" endtime="20201029 18:17:39.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.766" endtime="20201029 18:17:39.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.946" endtime="20201029 18:17:40.236"></status>
</kw>
<msg timestamp="20201029 18:17:40.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017469361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019060361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.945" endtime="20201029 18:17:40.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017469361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019060361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.240" endtime="20201029 18:17:40.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.248" endtime="20201029 18:17:40.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.942" endtime="20201029 18:17:40.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.940" endtime="20201029 18:17:40.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:40.254" level="INFO">${PHILIP_RES} = [{'diff': 0.0015910000000000021}, {'diff': 0.0015893049999999992}, {'diff': 0.0015893189999999988}, {'diff': 0.0015892220000000012}, {'diff': 0.0015892640000000034}, {'diff': 0.0015892080000000017}, {...</msg>
<status status="PASS" starttime="20201029 18:17:40.251" endtime="20201029 18:17:40.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.258" level="INFO">${RESULT} = {'diff': [0.0015910000000000021, 0.0015893049999999992, 0.0015893189999999988, 0.0015892220000000012, 0.0015892640000000034, 0.0015892080000000017, 0.0015891799999999956, 0.001589264, 0.00158936200000...</msg>
<status status="PASS" starttime="20201029 18:17:40.255" endtime="20201029 18:17:40.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.262" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:40.261" endtime="20201029 18:17:40.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.264" level="INFO">VALUE: [0.0015910000000000021, 0.0015893049999999992, 0.0015893189999999988, 0.0015892220000000012, 0.0015892640000000034, 0.0015892080000000017, 0.0015891799999999956, 0.001589264, 0.0015893620000000039, 0.0015894310000000023, 0.001589264, 0.0015893329999999983, 0.0015892500000000004, 0.001589264, 0.001589264, 0.0015891799999999956, 0.0015892220000000012, 0.0015892079999999947, 0.0015891249999999968, 0.0015891670000000024, 0.001589277, 0.001589264000000007, 0.001589277, 0.001589083000000005, 0.0015891950000000016, 0.0015892359999999939, 0.0015891670000000024, 0.0015890970000000115, 0.001589083000000005, 0.0015892219999999874, 0.001589194000000002, 0.0015890840000000045, 0.0015890969999999977, 0.0015892779999999995, 0.0015892370000000072, 0.001588971999999994, 0.0015890560000000054, 0.0015889450000000083, 0.0015888749999999896, 0.00158888900000001, 0.001588847999999976, 0.0015890279999999923, 0.001588971999999994, 0.001588971999999994, 0.0015889729999999935, 0.0015890550000000059, 0.0015890420000000127, 0.0015890970000000115, 0.001589098000000011, 0.0015890279999999923]</msg>
<status status="PASS" starttime="20201029 18:17:40.263" endtime="20201029 18:17:40.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.259" endtime="20201029 18:17:40.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.765" endtime="20201029 18:17:40.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.739" endtime="20201029 18:17:40.267"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:40.269" endtime="20201029 18:17:40.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.268" endtime="20201029 18:17:40.289"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.297" endtime="20201029 18:17:40.462"></status>
</kw>
<msg timestamp="20201029 18:17:40.463" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.295" endtime="20201029 18:17:40.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.468" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.465" endtime="20201029 18:17:40.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.470" endtime="20201029 18:17:40.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.293" endtime="20201029 18:17:40.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.291" endtime="20201029 18:17:40.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.489" endtime="20201029 18:17:40.786"></status>
</kw>
<msg timestamp="20201029 18:17:40.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017471375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019113306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.486" endtime="20201029 18:17:40.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017471375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019113306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.790" endtime="20201029 18:17:40.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.798" endtime="20201029 18:17:40.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.480" endtime="20201029 18:17:40.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.477" endtime="20201029 18:17:40.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:40.804" level="INFO">${PHILIP_RES} = [{'diff': 0.0016419309999999993}, {'diff': 0.001640388999999999}, {'diff': 0.0016403200000000007}, {'diff': 0.0016403330000000008}, {'diff': 0.0016402500000000028}, {'diff': 0.0016402500000000028}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:40.801" endtime="20201029 18:17:40.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.809" level="INFO">${RESULT} = {'diff': [0.0016419309999999993, 0.001640388999999999, 0.0016403200000000007, 0.0016403330000000008, 0.0016402500000000028, 0.0016402500000000028, 0.001640278000000002, 0.001640069000000001, 0.0016402...</msg>
<status status="PASS" starttime="20201029 18:17:40.805" endtime="20201029 18:17:40.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.813" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:40.812" endtime="20201029 18:17:40.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.815" level="INFO">VALUE: [0.0016419309999999993, 0.001640388999999999, 0.0016403200000000007, 0.0016403330000000008, 0.0016402500000000028, 0.0016402500000000028, 0.001640278000000002, 0.001640069000000001, 0.001640208000000004, 0.0016401809999999975, 0.0016403190000000012, 0.0016402640000000024, 0.0016401939999999976, 0.001640208000000004, 0.0016401249999999923, 0.0016401939999999976, 0.0016402219999999967, 0.001640166999999998, 0.001640084, 0.0016401249999999923, 0.0016402229999999962, 0.001640194999999997, 0.001640194999999997, 0.001640166999999998, 0.0016401810000000044, 0.0016401530000000053, 0.0016401109999999997, 0.001640194999999997, 0.001640278000000009, 0.001640208000000004, 0.0016404170000000051, 0.001640388999999992, 0.0016403190000000012, 0.0016402920000000015, 0.0016402919999999876, 0.0016402500000000098, 0.0016402640000000024, 0.0016402920000000154, 0.0016401810000000183, 0.001640277999999995, 0.0016403059999999803, 0.0016403329999999938, 0.001640306000000008, 0.0016403190000000012, 0.0016402500000000098, 0.0016403200000000007, 0.001640138999999985, 0.0016401940000000115, 0.0016403749999999995, 0.0016403470000000142]</msg>
<status status="PASS" starttime="20201029 18:17:40.814" endtime="20201029 18:17:40.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.810" endtime="20201029 18:17:40.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.290" endtime="20201029 18:17:40.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.267" endtime="20201029 18:17:40.817"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:40.820" endtime="20201029 18:17:40.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.818" endtime="20201029 18:17:40.840"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.848" endtime="20201029 18:17:41.017"></status>
</kw>
<msg timestamp="20201029 18:17:41.017" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.846" endtime="20201029 18:17:41.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.020" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.019" endtime="20201029 18:17:41.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.021" endtime="20201029 18:17:41.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.844" endtime="20201029 18:17:41.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.842" endtime="20201029 18:17:41.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.031" endtime="20201029 18:17:41.334"></status>
</kw>
<msg timestamp="20201029 18:17:41.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017594236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019288153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.029" endtime="20201029 18:17:41.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017594236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019288153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.343" endtime="20201029 18:17:41.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.361" endtime="20201029 18:17:41.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.026" endtime="20201029 18:17:41.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.024" endtime="20201029 18:17:41.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:41.372" level="INFO">${PHILIP_RES} = [{'diff': 0.0016939169999999996}, {'diff': 0.0016923609999999999}, {'diff': 0.001692486}, {'diff': 0.001692306000000001}, {'diff': 0.0016923329999999973}, {'diff': 0.0016923610000000033}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:17:41.369" endtime="20201029 18:17:41.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.376" level="INFO">${RESULT} = {'diff': [0.0016939169999999996, 0.0016923609999999999, 0.001692486, 0.001692306000000001, 0.0016923329999999973, 0.0016923610000000033, 0.0016923889999999955, 0.0016925129999999997, 0.001692472000000...</msg>
<status status="PASS" starttime="20201029 18:17:41.373" endtime="20201029 18:17:41.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.380" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:41.379" endtime="20201029 18:17:41.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.382" level="INFO">VALUE: [0.0016939169999999996, 0.0016923609999999999, 0.001692486, 0.001692306000000001, 0.0016923329999999973, 0.0016923610000000033, 0.0016923889999999955, 0.0016925129999999997, 0.0016924720000000004, 0.001692374999999996, 0.0016924159999999952, 0.0016923189999999977, 0.0016925559999999978, 0.001692375000000003, 0.001692374999999996, 0.001692402999999995, 0.0016923469999999968, 0.0016924440000000013, 0.0016922780000000054, 0.0016923890000000025, 0.0016922080000000006, 0.0016922359999999997, 0.0016923330000000042, 0.001692403000000009, 0.0016923340000000037, 0.0016922499999999924, 0.001692181000000001, 0.0016922230000000066, 0.001692194000000008, 0.0016922779999999915, 0.0016922639999999989, 0.001692276999999992, 0.0016922219999999932, 0.0016922910000000124, 0.0016923060000000045, 0.001692374999999996, 0.001692374999999996, 0.001692346999999983, 0.0016922639999999989, 0.0016922080000000006, 0.0016922779999999915, 0.0016923060000000045, 0.0016923610000000033, 0.0016922639999999989, 0.001692403000000009, 0.0016924449999999869, 0.0016924299999999948, 0.0016923889999999886, 0.001692514000000006, 0.0016926110000000105]</msg>
<status status="PASS" starttime="20201029 18:17:41.381" endtime="20201029 18:17:41.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.377" endtime="20201029 18:17:41.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.841" endtime="20201029 18:17:41.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.818" endtime="20201029 18:17:41.384"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:41.387" endtime="20201029 18:17:41.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.385" endtime="20201029 18:17:41.407"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.415" endtime="20201029 18:17:41.588"></status>
</kw>
<msg timestamp="20201029 18:17:41.588" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.413" endtime="20201029 18:17:41.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.591" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.589" endtime="20201029 18:17:41.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.592" endtime="20201029 18:17:41.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.411" endtime="20201029 18:17:41.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.409" endtime="20201029 18:17:41.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.601" endtime="20201029 18:17:41.892"></status>
</kw>
<msg timestamp="20201029 18:17:41.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019249611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.600" endtime="20201029 18:17:41.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019249611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.896" endtime="20201029 18:17:41.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.903" endtime="20201029 18:17:41.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.597" endtime="20201029 18:17:41.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.596" endtime="20201029 18:17:41.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:41.910" level="INFO">${PHILIP_RES} = [{'diff': 0.0017471249999999987}, {'diff': 0.001745486000000001}, {'diff': 0.0017454580000000018}, {'diff': 0.0017455829999999985}, {'diff': 0.001745611000000001}, {'diff': 0.001745471999999998}, {'di...</msg>
<status status="PASS" starttime="20201029 18:17:41.907" endtime="20201029 18:17:41.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.914" level="INFO">${RESULT} = {'diff': [0.0017471249999999987, 0.001745486000000001, 0.0017454580000000018, 0.0017455829999999985, 0.001745611000000001, 0.001745471999999998, 0.0017455550000000028, 0.0017455420000000027, 0.0017455...</msg>
<status status="PASS" starttime="20201029 18:17:41.911" endtime="20201029 18:17:41.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.918" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:41.917" endtime="20201029 18:17:41.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.920" level="INFO">VALUE: [0.0017471249999999987, 0.001745486000000001, 0.0017454580000000018, 0.0017455829999999985, 0.001745611000000001, 0.001745471999999998, 0.0017455550000000028, 0.0017455420000000027, 0.0017455550000000028, 0.001745611000000001, 0.001745611000000001, 0.0017457630000000043, 0.0017455840000000014, 0.0017457500000000042, 0.0017457499999999904, 0.001745722000000005, 0.0017457359999999977, 0.001745888000000001, 0.0017457079999999986, 0.001745777000000004, 0.0017456950000000054, 0.0017458060000000025, 0.0017457359999999977, 0.0017457780000000034, 0.0017456529999999998, 0.0017456799999999995, 0.001745708999999998, 0.0017457219999999912, 0.0017457359999999977, 0.0017455970000000015, 0.0017455559999999953, 0.0017455690000000024, 0.001745513000000018, 0.0017456109999999803, 0.0017456389999999933, 0.0017455700000000018, 0.0017456530000000137, 0.0017457640000000108, 0.001745680999999999, 0.0017457359999999977, 0.0017457359999999977, 0.001745722000000005, 0.0017456109999999803, 0.0017456250000000006, 0.0017455700000000018, 0.001745652999999986, 0.0017456799999999995, 0.0017457909999999965, 0.0017457369999999972, 0.0017458610000000152]</msg>
<status status="PASS" starttime="20201029 18:17:41.919" endtime="20201029 18:17:41.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.914" endtime="20201029 18:17:41.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.407" endtime="20201029 18:17:41.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.385" endtime="20201029 18:17:41.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.890" endtime="20201029 18:17:41.923"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:17.646" endtime="20201029 18:17:41.923" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:56.629" endtime="20201029 18:17:41.932"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.002" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:42.010" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:43.250" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:42.000" endtime="20201029 18:17:43.251"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.253" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:43.252" endtime="20201029 18:17:43.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.999" endtime="20201029 18:17:43.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:43.256" endtime="20201029 18:17:43.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.255" endtime="20201029 18:17:43.442"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.455" endtime="20201029 18:17:43.467"></status>
</kw>
<msg timestamp="20201029 18:17:43.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.453" endtime="20201029 18:17:43.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.469" endtime="20201029 18:17:43.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.473" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:43.471" endtime="20201029 18:17:43.473"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:43.451" endtime="20201029 18:17:43.474"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:43.449" endtime="20201029 18:17:43.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.448" endtime="20201029 18:17:43.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:43.480" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:43.479" endtime="20201029 18:17:43.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.476" endtime="20201029 18:17:43.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.447" endtime="20201029 18:17:43.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.446" endtime="20201029 18:17:43.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.482" endtime="20201029 18:17:43.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.445" endtime="20201029 18:17:43.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.484" endtime="20201029 18:17:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.443" endtime="20201029 18:17:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.998" endtime="20201029 18:17:43.487"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:43.492" endtime="20201029 18:17:43.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.491" endtime="20201029 18:17:43.512"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.525" endtime="20201029 18:17:43.537"></status>
</kw>
<msg timestamp="20201029 18:17:43.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.524" endtime="20201029 18:17:43.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.539" endtime="20201029 18:17:43.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.543" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:43.541" endtime="20201029 18:17:43.544"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:43.521" endtime="20201029 18:17:43.544"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:43.519" endtime="20201029 18:17:43.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.518" endtime="20201029 18:17:43.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:43.549" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:43.548" endtime="20201029 18:17:43.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.546" endtime="20201029 18:17:43.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.517" endtime="20201029 18:17:43.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.516" endtime="20201029 18:17:43.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.551" endtime="20201029 18:17:43.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.515" endtime="20201029 18:17:43.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.513" endtime="20201029 18:17:43.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.490" endtime="20201029 18:17:43.553"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.564" endtime="20201029 18:17:43.579"></status>
</kw>
<msg timestamp="20201029 18:17:43.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.562" endtime="20201029 18:17:43.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.581" endtime="20201029 18:17:43.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.583" endtime="20201029 18:17:43.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.558" endtime="20201029 18:17:43.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.556" endtime="20201029 18:17:43.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.592" endtime="20201029 18:17:43.897"></status>
</kw>
<msg timestamp="20201029 18:17:43.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063449181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063491472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.591" endtime="20201029 18:17:43.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063449181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063491472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.901" endtime="20201029 18:17:43.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.909" endtime="20201029 18:17:43.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.588" endtime="20201029 18:17:43.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.586" endtime="20201029 18:17:43.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.916" level="INFO">${RESULT} = [{'diff': 4.2290999999999856e-05}, {'diff': 4.16939999999949e-05}, {'diff': 4.1569000000005185e-05}, {'diff': 4.158399999999729e-05}, {'diff': 4.1582999999997816e-05}, {'diff': 4.1610999999996956e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:43.913" endtime="20201029 18:17:43.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:43.920" level="INFO">${ACCURACY} = {'diff': [4.2290999999999856e-05, 4.16939999999949e-05, 4.1569000000005185e-05, 4.158399999999729e-05, 4.1582999999997816e-05, 4.1610999999996956e-05, 4.1638999999996096e-05, 4.1611000000010834e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:17:43.917" endtime="20201029 18:17:43.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.925" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:17:43.924" endtime="20201029 18:17:43.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.928" level="INFO">VALUE: [4.2290999999999856e-05, 4.16939999999949e-05, 4.1569000000005185e-05, 4.158399999999729e-05, 4.1582999999997816e-05, 4.1610999999996956e-05, 4.1638999999996096e-05, 4.1611000000010834e-05, 4.158399999999729e-05, 4.1597000000004325e-05, 4.157000000000466e-05, 4.1569000000005185e-05, 4.1554999999998676e-05, 4.1569000000005185e-05, 4.1582999999997816e-05, 4.157000000000466e-05, 4.154199999999164e-05, 4.1583000000011694e-05, 4.156999999999078e-05, 4.158399999999729e-05, 4.1653000000002605e-05, 4.158399999999729e-05, 4.156999999999078e-05, 4.154099999999217e-05, 4.1555000000012554e-05, 4.158399999999729e-05, 4.157000000000466e-05, 4.1554999999998676e-05, 4.1583000000011694e-05, 4.161199999999643e-05, 4.156999999999078e-05, 4.15139999999925e-05, 4.15139999999925e-05, 4.1597000000004325e-05, 4.157000000000466e-05, 4.1639000000009974e-05, 4.159699999999045e-05, 4.154099999999217e-05, 4.1582999999997816e-05, 4.1569000000005185e-05, 4.1666999999995236e-05, 4.157000000000466e-05, 4.159699999999045e-05, 4.158399999999729e-05, 4.1582999999997816e-05, 4.1569000000005185e-05, 4.158399999999729e-05, 4.1583000000011694e-05, 4.152799999999901e-05, 4.152799999999901e-05]</msg>
<status status="PASS" starttime="20201029 18:17:43.926" endtime="20201029 18:17:43.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.921" endtime="20201029 18:17:43.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:43.932" endtime="20201029 18:17:43.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.931" endtime="20201029 18:17:43.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.930" endtime="20201029 18:17:43.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.555" endtime="20201029 18:17:43.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.554" endtime="20201029 18:17:43.953"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.961" endtime="20201029 18:17:43.977"></status>
</kw>
<msg timestamp="20201029 18:17:43.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.960" endtime="20201029 18:17:43.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.979" endtime="20201029 18:17:43.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.981" endtime="20201029 18:17:43.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.957" endtime="20201029 18:17:43.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.955" endtime="20201029 18:17:43.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.990" endtime="20201029 18:17:44.275"></status>
</kw>
<msg timestamp="20201029 18:17:44.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021118417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02116075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:43.988" endtime="20201029 18:17:44.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021118417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02116075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:44.280" endtime="20201029 18:17:44.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.288" endtime="20201029 18:17:44.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.986" endtime="20201029 18:17:44.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.984" endtime="20201029 18:17:44.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.294" level="INFO">${RESULT} = [{'diff': 4.2332999999998566e-05}, {'diff': 4.1582999999997816e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.1597000000000856e-05}, {'diff': 4.1555000000002146e-05}, {'diff': 4.1611000000000425e-0...</msg>
<status status="PASS" starttime="20201029 18:17:44.291" endtime="20201029 18:17:44.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:44.300" level="INFO">${ACCURACY} = {'diff': [4.2332999999998566e-05, 4.1582999999997816e-05, 4.158400000000076e-05, 4.1597000000000856e-05, 4.1555000000002146e-05, 4.1611000000000425e-05, 4.1611000000000425e-05, 4.1611000000000425e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:44.295" endtime="20201029 18:17:44.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.304" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:17:44.303" endtime="20201029 18:17:44.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.306" level="INFO">VALUE: [4.2332999999998566e-05, 4.1582999999997816e-05, 4.158400000000076e-05, 4.1597000000000856e-05, 4.1555000000002146e-05, 4.1611000000000425e-05, 4.1611000000000425e-05, 4.1611000000000425e-05, 4.156999999999772e-05, 4.1611000000000425e-05, 4.158400000000076e-05, 4.154200000000205e-05, 4.152800000000248e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.152799999999901e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4.158399999999729e-05, 4.1597000000000856e-05, 4.151399999999944e-05, 4.158400000000076e-05, 4.155599999999815e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4.155600000000162e-05, 4.1568999999998246e-05, 4.159800000000033e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.1597000000000856e-05, 4.156999999999772e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.151400000000291e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.1611000000000425e-05, 4.159800000000033e-05, 4.155599999999815e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1526999999999537e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.159800000000033e-05]</msg>
<status status="PASS" starttime="20201029 18:17:44.305" endtime="20201029 18:17:44.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.300" endtime="20201029 18:17:44.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:44.311" endtime="20201029 18:17:44.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.309" endtime="20201029 18:17:44.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.308" endtime="20201029 18:17:44.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.954" endtime="20201029 18:17:44.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.953" endtime="20201029 18:17:44.331"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.340" endtime="20201029 18:17:44.356"></status>
</kw>
<msg timestamp="20201029 18:17:44.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.338" endtime="20201029 18:17:44.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.357" endtime="20201029 18:17:44.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.360" endtime="20201029 18:17:44.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.336" endtime="20201029 18:17:44.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.334" endtime="20201029 18:17:44.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.371" endtime="20201029 18:17:44.656"></status>
</kw>
<msg timestamp="20201029 18:17:44.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021032583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.369" endtime="20201029 18:17:44.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021032583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.660" endtime="20201029 18:17:44.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.669" endtime="20201029 18:17:44.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.365" endtime="20201029 18:17:44.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.363" endtime="20201029 18:17:44.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.675" level="INFO">${RESULT} = [{'diff': 4.231999999999847e-05}, {'diff': 4.1569000000001716e-05}, {'diff': 4.1596999999997386e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.1583000000001286e-05...</msg>
<status status="PASS" starttime="20201029 18:17:44.672" endtime="20201029 18:17:44.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:44.679" level="INFO">${ACCURACY} = {'diff': [4.231999999999847e-05, 4.1569000000001716e-05, 4.1596999999997386e-05, 4.156999999999772e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.152800000000248e-05, 4.154200000000205e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:17:44.676" endtime="20201029 18:17:44.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.684" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:17:44.683" endtime="20201029 18:17:44.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.686" level="INFO">VALUE: [4.231999999999847e-05, 4.1569000000001716e-05, 4.1596999999997386e-05, 4.156999999999772e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.152800000000248e-05, 4.154200000000205e-05, 4.1597000000000856e-05, 4.1568999999998246e-05, 4.158400000000076e-05, 4.1582999999997816e-05, 4.157000000000119e-05, 4.151399999999944e-05, 4.1568999999998246e-05, 4.1582999999997816e-05, 4.1582999999997816e-05, 4.1611000000000425e-05, 4.159800000000033e-05, 4.158400000000076e-05, 4.159800000000033e-05, 4.1568999999998246e-05, 4.1569000000001716e-05, 4.1624999999999995e-05, 4.155600000000162e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.155599999999815e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.159800000000033e-05, 4.1583000000001286e-05, 4.154200000000205e-05, 4.1569000000001716e-05, 4.1555000000002146e-05, 4.155599999999815e-05, 4.1569000000001716e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4.1582999999997816e-05, 4.1596999999997386e-05, 4.1582999999997816e-05, 4.1568999999998246e-05, 4.155600000000162e-05, 4.155600000000162e-05, 4.156999999999772e-05, 4.1569000000001716e-05]</msg>
<status status="PASS" starttime="20201029 18:17:44.685" endtime="20201029 18:17:44.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.680" endtime="20201029 18:17:44.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:44.690" endtime="20201029 18:17:44.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.689" endtime="20201029 18:17:44.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.688" endtime="20201029 18:17:44.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.332" endtime="20201029 18:17:44.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.332" endtime="20201029 18:17:44.711"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.720" endtime="20201029 18:17:44.736"></status>
</kw>
<msg timestamp="20201029 18:17:44.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.718" endtime="20201029 18:17:44.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.738" endtime="20201029 18:17:44.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.741" endtime="20201029 18:17:44.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.715" endtime="20201029 18:17:44.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.713" endtime="20201029 18:17:44.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.749" endtime="20201029 18:17:45.035"></status>
</kw>
<msg timestamp="20201029 18:17:45.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.748" endtime="20201029 18:17:45.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.039" endtime="20201029 18:17:45.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.047" endtime="20201029 18:17:45.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.745" endtime="20201029 18:17:45.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.744" endtime="20201029 18:17:45.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.054" level="INFO">${RESULT} = [{'diff': 4.232000000000194e-05}, {'diff': 4.157000000000119e-05}, {'diff': 4.151399999999944e-05}, {'diff': 4.1569000000001716e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.1583000000001286e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:45.051" endtime="20201029 18:17:45.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:45.058" level="INFO">${ACCURACY} = {'diff': [4.232000000000194e-05, 4.157000000000119e-05, 4.151399999999944e-05, 4.1569000000001716e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 18:17:45.055" endtime="20201029 18:17:45.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.062" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:17:45.061" endtime="20201029 18:17:45.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.064" level="INFO">VALUE: [4.232000000000194e-05, 4.157000000000119e-05, 4.151399999999944e-05, 4.1569000000001716e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.159800000000033e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.1526999999999537e-05, 4.159800000000033e-05, 4.158400000000076e-05, 4.1611000000000425e-05, 4.154200000000205e-05, 4.157000000000119e-05, 4.1582999999997816e-05, 4.152799999999901e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.149999999999987e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.1597000000000856e-05, 4.1597000000000856e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.1582999999997816e-05, 4.154199999999858e-05, 4.149999999999987e-05, 4.154199999999858e-05, 4.155600000000162e-05, 4.1611000000000425e-05, 4.154199999999858e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.156999999999772e-05, 4.1582999999997816e-05, 4.1582999999997816e-05]</msg>
<status status="PASS" starttime="20201029 18:17:45.063" endtime="20201029 18:17:45.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.059" endtime="20201029 18:17:45.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:45.070" endtime="20201029 18:17:45.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.068" endtime="20201029 18:17:45.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.067" endtime="20201029 18:17:45.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.712" endtime="20201029 18:17:45.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.711" endtime="20201029 18:17:45.091"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.100" endtime="20201029 18:17:45.115"></status>
</kw>
<msg timestamp="20201029 18:17:45.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.097" endtime="20201029 18:17:45.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.118" endtime="20201029 18:17:45.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.121" endtime="20201029 18:17:45.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.095" endtime="20201029 18:17:45.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.093" endtime="20201029 18:17:45.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.134" endtime="20201029 18:17:45.420"></status>
</kw>
<msg timestamp="20201029 18:17:45.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.131" endtime="20201029 18:17:45.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.425" endtime="20201029 18:17:45.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.436" endtime="20201029 18:17:45.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.128" endtime="20201029 18:17:45.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.125" endtime="20201029 18:17:45.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.443" level="INFO">${RESULT} = [{'diff': 4.2319000000002466e-05}, {'diff': 4.157000000000119e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.154199999999858e-05}, {'diff': 4.154199999999858e-05}, {'diff': 4.158400000000076e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:45.440" endtime="20201029 18:17:45.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:45.449" level="INFO">${ACCURACY} = {'diff': [4.2319000000002466e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.154199999999858e-05, 4.154199999999858e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.165199999999966e-05, 4.16...</msg>
<status status="PASS" starttime="20201029 18:17:45.444" endtime="20201029 18:17:45.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.453" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:17:45.452" endtime="20201029 18:17:45.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.455" level="INFO">VALUE: [4.2319000000002466e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.154199999999858e-05, 4.154199999999858e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.165199999999966e-05, 4.1611000000000425e-05, 4.1596999999997386e-05, 4.158400000000076e-05, 4.1596999999997386e-05, 4.156999999999772e-05, 4.154199999999858e-05, 4.158400000000076e-05, 4.1582999999997816e-05, 4.158400000000076e-05, 4.152799999999901e-05, 4.1596999999997386e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.1624999999999995e-05, 4.1568999999998246e-05, 4.157000000000119e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.155599999999815e-05, 4.1555000000002146e-05, 4.158400000000076e-05, 4.155599999999815e-05, 4.1540999999999106e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1624999999999995e-05, 4.157000000000119e-05, 4.158400000000076e-05, 4.1596999999997386e-05, 4.1597000000000856e-05, 4.1624999999999995e-05, 4.1568999999998246e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.1611000000000425e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.154199999999858e-05, 4.1582999999997816e-05]</msg>
<status status="PASS" starttime="20201029 18:17:45.454" endtime="20201029 18:17:45.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.450" endtime="20201029 18:17:45.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:45.460" endtime="20201029 18:17:45.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.458" endtime="20201029 18:17:45.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.457" endtime="20201029 18:17:45.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.091" endtime="20201029 18:17:45.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.091" endtime="20201029 18:17:45.481"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.490" endtime="20201029 18:17:45.506"></status>
</kw>
<msg timestamp="20201029 18:17:45.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.489" endtime="20201029 18:17:45.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.507" endtime="20201029 18:17:45.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.510" endtime="20201029 18:17:45.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.486" endtime="20201029 18:17:45.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.483" endtime="20201029 18:17:45.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.519" endtime="20201029 18:17:45.807"></status>
</kw>
<msg timestamp="20201029 18:17:45.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.517" endtime="20201029 18:17:45.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.811" endtime="20201029 18:17:45.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.819" endtime="20201029 18:17:45.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.515" endtime="20201029 18:17:45.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.513" endtime="20201029 18:17:45.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.825" level="INFO">${RESULT} = [{'diff': 4.2402999999999885e-05}, {'diff': 4.1610999999996956e-05}, {'diff': 4.1624999999999995e-05}, {'diff': 4.158399999999729e-05}, {'diff': 4.1597000000000856e-05}, {'diff': 4.1583000000001286e-0...</msg>
<status status="PASS" starttime="20201029 18:17:45.822" endtime="20201029 18:17:45.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:45.830" level="INFO">${ACCURACY} = {'diff': [4.2402999999999885e-05, 4.1610999999996956e-05, 4.1624999999999995e-05, 4.158399999999729e-05, 4.1597000000000856e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.151399999999944e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:45.826" endtime="20201029 18:17:45.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.834" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:17:45.833" endtime="20201029 18:17:45.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.836" level="INFO">VALUE: [4.2402999999999885e-05, 4.1610999999996956e-05, 4.1624999999999995e-05, 4.158399999999729e-05, 4.1597000000000856e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.151399999999944e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.1638999999999565e-05, 4.156999999999772e-05, 4.1596999999997386e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.1582999999997816e-05, 4.159800000000033e-05, 4.1652999999999135e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.155600000000162e-05, 4.156999999999772e-05, 4.1583000000001286e-05, 4.155599999999815e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.157000000000119e-05, 4.158400000000076e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.155600000000162e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.158400000000076e-05, 4.1568999999998246e-05, 4.158400000000076e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.159800000000033e-05, 4.159800000000033e-05, 4.1638999999999565e-05, 4.1569000000001716e-05]</msg>
<status status="PASS" starttime="20201029 18:17:45.835" endtime="20201029 18:17:45.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.830" endtime="20201029 18:17:45.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:45.841" endtime="20201029 18:17:45.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.839" endtime="20201029 18:17:45.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.838" endtime="20201029 18:17:45.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.482" endtime="20201029 18:17:45.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.481" endtime="20201029 18:17:45.862"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.870" endtime="20201029 18:17:45.887"></status>
</kw>
<msg timestamp="20201029 18:17:45.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.869" endtime="20201029 18:17:45.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.889" endtime="20201029 18:17:45.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.891" endtime="20201029 18:17:45.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.866" endtime="20201029 18:17:45.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.864" endtime="20201029 18:17:45.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.900" endtime="20201029 18:17:46.186"></status>
</kw>
<msg timestamp="20201029 18:17:46.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.898" endtime="20201029 18:17:46.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.193" endtime="20201029 18:17:46.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.202" endtime="20201029 18:17:46.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.896" endtime="20201029 18:17:46.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.894" endtime="20201029 18:17:46.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.208" level="INFO">${RESULT} = [{'diff': 4.233399999999804e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.1568999999998246e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.1554999999998676e-05}, {'diff': 4.1597000000000856e-05...</msg>
<status status="PASS" starttime="20201029 18:17:46.205" endtime="20201029 18:17:46.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:46.213" level="INFO">${ACCURACY} = {'diff': [4.233399999999804e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.156999999999772e-05, 4.1554999999998676e-05, 4.1597000000000856e-05, 4.1611000000000425e-05, 4.158399999999729e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:17:46.209" endtime="20201029 18:17:46.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.217" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:17:46.216" endtime="20201029 18:17:46.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.219" level="INFO">VALUE: [4.233399999999804e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.156999999999772e-05, 4.1554999999998676e-05, 4.1597000000000856e-05, 4.1611000000000425e-05, 4.158399999999729e-05, 4.158400000000076e-05, 4.1569000000001716e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1582999999997816e-05, 4.1554999999998676e-05, 4.156999999999772e-05, 4.1568999999998246e-05, 4.1568999999998246e-05, 4.1569000000001716e-05, 4.1597000000000856e-05, 4.1526999999999537e-05, 4.157000000000119e-05, 4.1555000000002146e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.1568999999998246e-05, 4.158400000000076e-05, 4.1611000000000425e-05, 4.1582999999997816e-05, 4.158400000000076e-05, 4.1596999999997386e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.152800000000248e-05, 4.1582999999997816e-05, 4.158400000000076e-05, 4.149999999999987e-05, 4.158400000000076e-05, 4.155600000000162e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.151399999999944e-05, 4.1638999999999565e-05, 4.1624999999999995e-05, 4.156999999999772e-05, 4.157000000000119e-05, 4.1583000000001286e-05]</msg>
<status status="PASS" starttime="20201029 18:17:46.218" endtime="20201029 18:17:46.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.213" endtime="20201029 18:17:46.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:46.225" endtime="20201029 18:17:46.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.224" endtime="20201029 18:17:46.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.222" endtime="20201029 18:17:46.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.863" endtime="20201029 18:17:46.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.862" endtime="20201029 18:17:46.246"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.254" endtime="20201029 18:17:46.270"></status>
</kw>
<msg timestamp="20201029 18:17:46.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.253" endtime="20201029 18:17:46.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.272" endtime="20201029 18:17:46.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.274" endtime="20201029 18:17:46.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.250" endtime="20201029 18:17:46.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.248" endtime="20201029 18:17:46.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.284" endtime="20201029 18:17:46.569"></status>
</kw>
<msg timestamp="20201029 18:17:46.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021305319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.282" endtime="20201029 18:17:46.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021305319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.574" endtime="20201029 18:17:46.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.582" endtime="20201029 18:17:46.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.280" endtime="20201029 18:17:46.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.278" endtime="20201029 18:17:46.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.588" level="INFO">${RESULT} = [{'diff': 4.233400000000151e-05}, {'diff': 4.157000000000119e-05}, {'diff': 4.1582999999997816e-05}, {'diff': 4.1596999999997386e-05}, {'diff': 4.1554999999998676e-05}, {'diff': 4.158399999999729e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:46.585" endtime="20201029 18:17:46.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:46.593" level="INFO">${ACCURACY} = {'diff': [4.233400000000151e-05, 4.157000000000119e-05, 4.1582999999997816e-05, 4.1596999999997386e-05, 4.1554999999998676e-05, 4.158399999999729e-05, 4.159800000000033e-05, 4.1582999999997816e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:17:46.589" endtime="20201029 18:17:46.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.597" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:17:46.596" endtime="20201029 18:17:46.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.600" level="INFO">VALUE: [4.233400000000151e-05, 4.157000000000119e-05, 4.1582999999997816e-05, 4.1596999999997386e-05, 4.1554999999998676e-05, 4.158399999999729e-05, 4.159800000000033e-05, 4.1582999999997816e-05, 4.158400000000076e-05, 4.1638999999999565e-05, 4.1611000000000425e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.1624999999999995e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1569000000001716e-05, 4.152799999999901e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1554999999998676e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.1568999999998246e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.159800000000033e-05, 4.1554999999998676e-05, 4.1624999999999995e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.163800000000009e-05, 4.1569000000001716e-05, 4.1596999999997386e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.1597000000000856e-05, 4.152800000000248e-05, 4.155600000000162e-05, 4.1596999999997386e-05]</msg>
<status status="PASS" starttime="20201029 18:17:46.599" endtime="20201029 18:17:46.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.594" endtime="20201029 18:17:46.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:46.605" endtime="20201029 18:17:46.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.603" endtime="20201029 18:17:46.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.602" endtime="20201029 18:17:46.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.247" endtime="20201029 18:17:46.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.246" endtime="20201029 18:17:46.626"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.636" endtime="20201029 18:17:46.653"></status>
</kw>
<msg timestamp="20201029 18:17:46.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.634" endtime="20201029 18:17:46.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.655" endtime="20201029 18:17:46.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.659" endtime="20201029 18:17:46.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.630" endtime="20201029 18:17:46.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.628" endtime="20201029 18:17:46.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.670" endtime="20201029 18:17:46.959"></status>
</kw>
<msg timestamp="20201029 18:17:46.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.669" endtime="20201029 18:17:46.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.963" endtime="20201029 18:17:46.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.972" endtime="20201029 18:17:46.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.666" endtime="20201029 18:17:46.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.664" endtime="20201029 18:17:46.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.978" level="INFO">${RESULT} = [{'diff': 4.2346999999998136e-05}, {'diff': 4.1611000000000425e-05}, {'diff': 4.1624999999999995e-05}, {'diff': 4.1568999999998246e-05}, {'diff': 4.1597000000000856e-05}, {'diff': 4.1568999999998246e-...</msg>
<status status="PASS" starttime="20201029 18:17:46.975" endtime="20201029 18:17:46.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:46.982" level="INFO">${ACCURACY} = {'diff': [4.2346999999998136e-05, 4.1611000000000425e-05, 4.1624999999999995e-05, 4.1568999999998246e-05, 4.1597000000000856e-05, 4.1568999999998246e-05, 4.1597000000000856e-05, 4.1597000000000856e-05...</msg>
<status status="PASS" starttime="20201029 18:17:46.979" endtime="20201029 18:17:46.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.986" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:17:46.986" endtime="20201029 18:17:46.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.989" level="INFO">VALUE: [4.2346999999998136e-05, 4.1611000000000425e-05, 4.1624999999999995e-05, 4.1568999999998246e-05, 4.1597000000000856e-05, 4.1568999999998246e-05, 4.1597000000000856e-05, 4.1597000000000856e-05, 4.159799999999686e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.1611000000000425e-05, 4.158400000000076e-05, 4.156999999999772e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1624999999999995e-05, 4.1569000000001716e-05, 4.1569000000001716e-05, 4.163800000000009e-05, 4.158400000000076e-05, 4.158399999999729e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.152799999999901e-05, 4.1582999999997816e-05, 4.1611000000000425e-05, 4.157000000000119e-05, 4.16119999999999e-05, 4.156999999999772e-05, 4.1611000000000425e-05, 4.158400000000076e-05, 4.1597000000000856e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1596999999997386e-05, 4.156999999999772e-05, 4.157000000000119e-05, 4.157000000000119e-05, 4.1611000000000425e-05, 4.1596999999997386e-05, 4.1583000000001286e-05, 4.154200000000205e-05, 4.1540999999999106e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1582999999997816e-05, 4.1611000000000425e-05]</msg>
<status status="PASS" starttime="20201029 18:17:46.988" endtime="20201029 18:17:46.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.983" endtime="20201029 18:17:46.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:46.994" endtime="20201029 18:17:47.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.992" endtime="20201029 18:17:47.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.991" endtime="20201029 18:17:47.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.627" endtime="20201029 18:17:47.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.626" endtime="20201029 18:17:47.015"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.023" endtime="20201029 18:17:47.040"></status>
</kw>
<msg timestamp="20201029 18:17:47.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.021" endtime="20201029 18:17:47.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.041" endtime="20201029 18:17:47.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.044" endtime="20201029 18:17:47.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.019" endtime="20201029 18:17:47.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.017" endtime="20201029 18:17:47.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.053" endtime="20201029 18:17:47.339"></status>
</kw>
<msg timestamp="20201029 18:17:47.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.051" endtime="20201029 18:17:47.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.343" endtime="20201029 18:17:47.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.351" endtime="20201029 18:17:47.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.048" endtime="20201029 18:17:47.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.047" endtime="20201029 18:17:47.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.358" level="INFO">${RESULT} = [{'diff': 4.232000000000194e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.1597000000000856e-05}, {'diff': 4.1596999999997386e-05}, {'diff': 4.1611000000000425e-0...</msg>
<status status="PASS" starttime="20201029 18:17:47.354" endtime="20201029 18:17:47.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:47.362" level="INFO">${ACCURACY} = {'diff': [4.232000000000194e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1596999999997386e-05, 4.1611000000000425e-05, 4.1582999999997816e-05, 4.1597000000000856e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:47.359" endtime="20201029 18:17:47.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.366" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:17:47.365" endtime="20201029 18:17:47.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.368" level="INFO">VALUE: [4.232000000000194e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1596999999997386e-05, 4.1611000000000425e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.158399999999729e-05, 4.1624999999999995e-05, 4.1597000000000856e-05, 4.158399999999729e-05, 4.1611000000000425e-05, 4.1597000000000856e-05, 4.159800000000033e-05, 4.158400000000076e-05, 4.158399999999729e-05, 4.1583000000001286e-05, 4.158399999999729e-05, 4.159800000000033e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.158399999999729e-05, 4.1611000000000425e-05, 4.159799999999686e-05, 4.157000000000119e-05, 4.1596999999997386e-05, 4.159800000000033e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.16119999999999e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.1583000000001286e-05, 4.152799999999901e-05, 4.158400000000076e-05, 4.1597000000000856e-05, 4.159799999999686e-05, 4.1611000000000425e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1596999999997386e-05, 4.1582999999997816e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1652999999999135e-05, 4.1611000000000425e-05]</msg>
<status status="PASS" starttime="20201029 18:17:47.367" endtime="20201029 18:17:47.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.363" endtime="20201029 18:17:47.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:47.376" endtime="20201029 18:17:47.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.374" endtime="20201029 18:17:47.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.372" endtime="20201029 18:17:47.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.015" endtime="20201029 18:17:47.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.015" endtime="20201029 18:17:47.397"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.405" endtime="20201029 18:17:47.421"></status>
</kw>
<msg timestamp="20201029 18:17:47.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.404" endtime="20201029 18:17:47.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.423" endtime="20201029 18:17:47.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.425" endtime="20201029 18:17:47.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.401" endtime="20201029 18:17:47.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.399" endtime="20201029 18:17:47.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.434" endtime="20201029 18:17:47.719"></status>
</kw>
<msg timestamp="20201029 18:17:47.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021393347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.433" endtime="20201029 18:17:47.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021393347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.723" endtime="20201029 18:17:47.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.731" endtime="20201029 18:17:47.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.430" endtime="20201029 18:17:47.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.429" endtime="20201029 18:17:47.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.738" level="INFO">${RESULT} = [{'diff': 4.229199999999933e-05}, {'diff': 4.1695000000001314e-05}, {'diff': 4.183400000000101e-05}, {'diff': 4.1652999999999135e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.1723000000000454e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:47.735" endtime="20201029 18:17:47.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:47.743" level="INFO">${ACCURACY} = {'diff': [4.229199999999933e-05, 4.1695000000001314e-05, 4.183400000000101e-05, 4.1652999999999135e-05, 4.156999999999772e-05, 4.1723000000000454e-05, 4.1777000000003256e-05, 4.1611000000000425e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:17:47.739" endtime="20201029 18:17:47.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.747" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:17:47.746" endtime="20201029 18:17:47.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.750" level="INFO">VALUE: [4.229199999999933e-05, 4.1695000000001314e-05, 4.183400000000101e-05, 4.1652999999999135e-05, 4.156999999999772e-05, 4.1723000000000454e-05, 4.1777000000003256e-05, 4.1611000000000425e-05, 4.16119999999999e-05, 4.1624999999999995e-05, 4.2082999999998316e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1847000000001106e-05, 4.1596999999997386e-05, 4.1624999999999995e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.2097000000001356e-05, 4.1653000000002605e-05, 4.152800000000248e-05, 4.1666999999998705e-05, 4.213800000000059e-05, 4.1624999999999995e-05, 4.152799999999901e-05, 4.194399999999862e-05, 4.1597000000000856e-05, 4.156999999999772e-05, 4.175000000000012e-05, 4.1568999999998246e-05, 4.158400000000076e-05, 4.155600000000162e-05, 4.197200000000123e-05, 4.2082999999998316e-05, 4.1832999999998066e-05, 4.159800000000033e-05, 4.154199999999858e-05, 4.1596999999997386e-05, 4.1804999999998926e-05, 4.1583000000001286e-05, 4.1833000000001536e-05, 4.1818999999998496e-05, 4.1582999999997816e-05, 4.1667000000002175e-05, 4.1611000000000425e-05, 4.159800000000033e-05, 4.1582999999997816e-05, 4.176399999999969e-05, 4.1583000000001286e-05]</msg>
<status status="PASS" starttime="20201029 18:17:47.748" endtime="20201029 18:17:47.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.744" endtime="20201029 18:17:47.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:47.755" endtime="20201029 18:17:47.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.753" endtime="20201029 18:17:47.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.752" endtime="20201029 18:17:47.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.398" endtime="20201029 18:17:47.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.397" endtime="20201029 18:17:47.775"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.784" endtime="20201029 18:17:47.800"></status>
</kw>
<msg timestamp="20201029 18:17:47.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.782" endtime="20201029 18:17:47.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.801" endtime="20201029 18:17:47.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.804" endtime="20201029 18:17:47.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.780" endtime="20201029 18:17:47.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.778" endtime="20201029 18:17:47.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.813" endtime="20201029 18:17:48.099"></status>
</kw>
<msg timestamp="20201029 18:17:48.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.811" endtime="20201029 18:17:48.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.103" endtime="20201029 18:17:48.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.111" endtime="20201029 18:17:48.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.809" endtime="20201029 18:17:48.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.807" endtime="20201029 18:17:48.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.118" level="INFO">${RESULT} = [{'diff': 4.301400000000094e-05}, {'diff': 4.232000000000194e-05}, {'diff': 4.2597000000001856e-05}, {'diff': 4.233400000000151e-05}, {'diff': 4.293000000000005e-05}, {'diff': 4.2889000000000815e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:48.114" endtime="20201029 18:17:48.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:48.122" level="INFO">${ACCURACY} = {'diff': [4.301400000000094e-05, 4.232000000000194e-05, 4.2597000000001856e-05, 4.233400000000151e-05, 4.293000000000005e-05, 4.2889000000000815e-05, 4.241599999999998e-05, 4.251400000000044e-05, 4.24...</msg>
<status status="PASS" starttime="20201029 18:17:48.119" endtime="20201029 18:17:48.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.126" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:17:48.125" endtime="20201029 18:17:48.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.128" level="INFO">VALUE: [4.301400000000094e-05, 4.232000000000194e-05, 4.2597000000001856e-05, 4.233400000000151e-05, 4.293000000000005e-05, 4.2889000000000815e-05, 4.241599999999998e-05, 4.251400000000044e-05, 4.2458999999998165e-05, 4.2959000000002134e-05, 4.2139000000000065e-05, 4.2375000000000745e-05, 4.252800000000001e-05, 4.2861000000001676e-05, 4.252800000000001e-05, 4.2709000000001884e-05, 4.300000000000137e-05, 4.220800000000191e-05, 4.241599999999998e-05, 4.2846999999998636e-05, 4.305599999999965e-05, 4.258400000000176e-05, 4.283399999999854e-05, 4.2153000000003105e-05, 4.245799999999869e-05, 4.251300000000097e-05, 4.251400000000044e-05, 4.2139000000000065e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2625000000000995e-05, 4.250000000000087e-05, 4.25129999999975e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.233399999999804e-05, 4.2582999999998816e-05, 4.2458999999998165e-05, 4.304200000000008e-05, 4.2124999999997026e-05, 4.28059999999994e-05, 4.250000000000087e-05, 4.2125000000000495e-05, 4.29999999999979e-05, 4.2722999999997985e-05, 4.2916999999999955e-05, 4.252800000000001e-05, 4.247200000000173e-05, 4.2847000000002106e-05, 4.305599999999965e-05]</msg>
<status status="PASS" starttime="20201029 18:17:48.127" endtime="20201029 18:17:48.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.122" endtime="20201029 18:17:48.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:48.133" endtime="20201029 18:17:48.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.132" endtime="20201029 18:17:48.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.131" endtime="20201029 18:17:48.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.776" endtime="20201029 18:17:48.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.776" endtime="20201029 18:17:48.154"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.163" endtime="20201029 18:17:48.180"></status>
</kw>
<msg timestamp="20201029 18:17:48.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.161" endtime="20201029 18:17:48.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.181" endtime="20201029 18:17:48.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.183" endtime="20201029 18:17:48.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.159" endtime="20201029 18:17:48.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.156" endtime="20201029 18:17:48.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.192" endtime="20201029 18:17:48.479"></status>
</kw>
<msg timestamp="20201029 18:17:48.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.191" endtime="20201029 18:17:48.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.483" endtime="20201029 18:17:48.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.491" endtime="20201029 18:17:48.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.188" endtime="20201029 18:17:48.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.187" endtime="20201029 18:17:48.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.498" level="INFO">${RESULT} = [{'diff': 4.4055000000001177e-05}, {'diff': 4.3153000000000635e-05}, {'diff': 4.370799999999994e-05}, {'diff': 4.3167000000000205e-05}, {'diff': 4.3666999999997236e-05}, {'diff': 4.3582999999999816e-0...</msg>
<status status="PASS" starttime="20201029 18:17:48.494" endtime="20201029 18:17:48.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:48.502" level="INFO">${ACCURACY} = {'diff': [4.4055000000001177e-05, 4.3153000000000635e-05, 4.370799999999994e-05, 4.3167000000000205e-05, 4.3666999999997236e-05, 4.3582999999999816e-05, 4.3945000000000095e-05, 4.401399999999847e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:48.499" endtime="20201029 18:17:48.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.506" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:17:48.505" endtime="20201029 18:17:48.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.509" level="INFO">VALUE: [4.4055000000001177e-05, 4.3153000000000635e-05, 4.370799999999994e-05, 4.3167000000000205e-05, 4.3666999999997236e-05, 4.3582999999999816e-05, 4.3945000000000095e-05, 4.401399999999847e-05, 4.3181000000003245e-05, 4.320799999999944e-05, 4.383399999999954e-05, 4.3638999999998096e-05, 4.327800000000076e-05, 4.3945000000000095e-05, 4.377800000000126e-05, 4.401399999999847e-05, 4.3638999999998096e-05, 4.377700000000179e-05, 4.326399999999772e-05, 4.402799999999804e-05, 4.327799999999729e-05, 4.3152999999997166e-05, 4.345799999999969e-05, 4.374999999999865e-05, 4.392999999999758e-05, 4.326399999999772e-05, 4.358399999999929e-05, 4.369400000000037e-05, 4.358399999999929e-05, 4.405600000000065e-05, 4.3569000000000246e-05, 4.3332999999999566e-05, 4.3180999999999775e-05, 4.397199999999976e-05, 4.3653000000001135e-05, 4.3195000000002814e-05, 4.3945000000000095e-05, 4.39999999999989e-05, 4.4083000000000316e-05, 4.3318999999999996e-05, 4.376300000000222e-05, 4.3819000000000496e-05, 4.3180999999999775e-05, 4.3194999999999345e-05, 4.326400000000119e-05, 4.352800000000101e-05, 4.351399999999797e-05, 4.394400000000062e-05, 4.405599999999718e-05, 4.350000000000187e-05]</msg>
<status status="PASS" starttime="20201029 18:17:48.507" endtime="20201029 18:17:48.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.502" endtime="20201029 18:17:48.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:48.518" endtime="20201029 18:17:48.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.517" endtime="20201029 18:17:48.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.515" endtime="20201029 18:17:48.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.155" endtime="20201029 18:17:48.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.154" endtime="20201029 18:17:48.539"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.547" endtime="20201029 18:17:48.564"></status>
</kw>
<msg timestamp="20201029 18:17:48.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.546" endtime="20201029 18:17:48.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.565" endtime="20201029 18:17:48.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.568" endtime="20201029 18:17:48.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.543" endtime="20201029 18:17:48.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.541" endtime="20201029 18:17:48.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.576" endtime="20201029 18:17:48.863"></status>
</kw>
<msg timestamp="20201029 18:17:48.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:17:48.575" endtime="20201029 18:17:48.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:17:48.867" endtime="20201029 18:17:48.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.876" endtime="20201029 18:17:48.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.572" endtime="20201029 18:17:48.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.571" endtime="20201029 18:17:48.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.882" level="INFO">${RESULT} = [{'diff': 4.55000000000004e-05}, {'diff': 4.420800000000044e-05}, {'diff': 4.502799999999904e-05}, {'diff': 4.4445000000000595e-05}, {'diff': 4.49999999999999e-05}, {'diff': 4.4973000000000235e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:48.879" endtime="20201029 18:17:48.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:48.887" level="INFO">${ACCURACY} = {'diff': [4.55000000000004e-05, 4.420800000000044e-05, 4.502799999999904e-05, 4.4445000000000595e-05, 4.49999999999999e-05, 4.4973000000000235e-05, 4.4889000000002816e-05, 4.452799999999854e-05, 4.468...</msg>
<status status="PASS" starttime="20201029 18:17:48.883" endtime="20201029 18:17:48.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.891" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:17:48.890" endtime="20201029 18:17:48.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.894" level="INFO">VALUE: [4.55000000000004e-05, 4.420800000000044e-05, 4.502799999999904e-05, 4.4445000000000595e-05, 4.49999999999999e-05, 4.4973000000000235e-05, 4.4889000000002816e-05, 4.452799999999854e-05, 4.4681000000001275e-05, 4.46800000000018e-05, 4.46800000000018e-05, 4.469400000000137e-05, 4.4360999999999706e-05, 4.4610999999999956e-05, 4.450000000000287e-05, 4.407000000000022e-05, 4.431899999999753e-05, 4.426399999999872e-05, 4.4195000000000345e-05, 4.4666999999998236e-05, 4.481899999999803e-05, 4.4597000000000386e-05, 4.484800000000011e-05, 4.4569000000001247e-05, 4.4944999999997626e-05, 4.451399999999897e-05, 4.451400000000244e-05, 4.4319000000000996e-05, 4.444400000000112e-05, 4.4861000000000206e-05, 4.5083000000001316e-05, 4.505600000000165e-05, 4.508399999999732e-05, 4.4138999999998596e-05, 4.44999999999994e-05, 4.495799999999772e-05, 4.4639000000002566e-05, 4.4139000000002065e-05, 4.4402999999998416e-05, 4.4874999999999776e-05, 4.4374999999999276e-05, 4.477800000000226e-05, 4.4653000000002135e-05, 4.419400000000087e-05, 4.430499999999796e-05, 4.4666999999998236e-05, 4.506899999999828e-05, 4.501399999999947e-05, 4.4973000000000235e-05, 4.4833000000001066e-05]</msg>
<status status="PASS" starttime="20201029 18:17:48.892" endtime="20201029 18:17:48.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.888" endtime="20201029 18:17:48.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:48.899" endtime="20201029 18:17:48.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.897" endtime="20201029 18:17:48.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.896" endtime="20201029 18:17:48.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.540" endtime="20201029 18:17:48.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.539" endtime="20201029 18:17:48.919"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.928" endtime="20201029 18:17:48.944"></status>
</kw>
<msg timestamp="20201029 18:17:48.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.926" endtime="20201029 18:17:48.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.946" endtime="20201029 18:17:48.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.948" endtime="20201029 18:17:48.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.924" endtime="20201029 18:17:48.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.922" endtime="20201029 18:17:48.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.957" endtime="20201029 18:17:49.245"></status>
</kw>
<msg timestamp="20201029 18:17:49.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.955" endtime="20201029 18:17:49.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.249" endtime="20201029 18:17:49.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.257" endtime="20201029 18:17:49.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.953" endtime="20201029 18:17:49.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.951" endtime="20201029 18:17:49.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.264" level="INFO">${RESULT} = [{'diff': 4.5709000000001415e-05}, {'diff': 4.605499999999971e-05}, {'diff': 4.5611000000000956e-05}, {'diff': 4.51939999999984e-05}, {'diff': 4.5694999999998376e-05}, {'diff': 4.5889000000000346e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:49.260" endtime="20201029 18:17:49.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:49.268" level="INFO">${ACCURACY} = {'diff': [4.5709000000001415e-05, 4.605499999999971e-05, 4.5611000000000956e-05, 4.51939999999984e-05, 4.5694999999998376e-05, 4.5889000000000346e-05, 4.5111000000000456e-05, 4.551399999999997e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:17:49.265" endtime="20201029 18:17:49.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.272" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:17:49.271" endtime="20201029 18:17:49.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.274" level="INFO">VALUE: [4.5709000000001415e-05, 4.605499999999971e-05, 4.5611000000000956e-05, 4.51939999999984e-05, 4.5694999999998376e-05, 4.5889000000000346e-05, 4.5111000000000456e-05, 4.551399999999997e-05, 4.548600000000083e-05, 4.5111000000000456e-05, 4.576400000000022e-05, 4.5959000000001665e-05, 4.5459000000001165e-05, 4.5181000000001775e-05, 4.60000000000009e-05, 4.5625000000000526e-05, 4.570800000000194e-05, 4.586099999999774e-05, 4.58190000000025e-05, 4.601400000000047e-05, 4.5889000000000346e-05, 4.588800000000087e-05, 4.5138999999999596e-05, 4.513800000000012e-05, 4.5930999999999056e-05, 4.581899999999903e-05, 4.520800000000144e-05, 4.599999999999743e-05, 4.580499999999946e-05, 4.5625000000000526e-05, 4.541599999999951e-05, 4.5375000000000276e-05, 4.547199999999779e-05, 4.5138999999999596e-05, 4.5319999999998e-05, 4.567999999999933e-05, 4.5444999999998126e-05, 4.5639000000000096e-05, 4.58199999999985e-05, 4.5625000000000526e-05, 4.607000000000222e-05, 4.598599999999786e-05, 4.527799999999929e-05, 4.530499999999896e-05, 4.562499999999706e-05, 4.51939999999984e-05, 4.530599999999843e-05, 4.5402999999999416e-05, 4.601400000000047e-05, 4.60000000000009e-05]</msg>
<status status="PASS" starttime="20201029 18:17:49.273" endtime="20201029 18:17:49.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.269" endtime="20201029 18:17:49.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:49.279" endtime="20201029 18:17:49.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.278" endtime="20201029 18:17:49.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.277" endtime="20201029 18:17:49.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.920" endtime="20201029 18:17:49.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.920" endtime="20201029 18:17:49.300"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.309" endtime="20201029 18:17:49.326"></status>
</kw>
<msg timestamp="20201029 18:17:49.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.307" endtime="20201029 18:17:49.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.328" endtime="20201029 18:17:49.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.330" endtime="20201029 18:17:49.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.304" endtime="20201029 18:17:49.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.302" endtime="20201029 18:17:49.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.339" endtime="20201029 18:17:49.626"></status>
</kw>
<msg timestamp="20201029 18:17:49.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.338" endtime="20201029 18:17:49.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.630" endtime="20201029 18:17:49.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.638" endtime="20201029 18:17:49.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.335" endtime="20201029 18:17:49.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.334" endtime="20201029 18:17:49.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.645" level="INFO">${RESULT} = [{'diff': 4.737499999999881e-05}, {'diff': 4.698599999999886e-05}, {'diff': 4.644399999999965e-05}, {'diff': 4.677800000000079e-05}, {'diff': 4.656899999999978e-05}, {'diff': 4.655500000000021e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:49.642" endtime="20201029 18:17:49.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:49.649" level="INFO">${ACCURACY} = {'diff': [4.737499999999881e-05, 4.698599999999886e-05, 4.644399999999965e-05, 4.677800000000079e-05, 4.656899999999978e-05, 4.655500000000021e-05, 4.6861000000002206e-05, 4.66939999999999e-05, 4.6318...</msg>
<status status="PASS" starttime="20201029 18:17:49.646" endtime="20201029 18:17:49.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.653" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:17:49.652" endtime="20201029 18:17:49.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.656" level="INFO">VALUE: [4.737499999999881e-05, 4.698599999999886e-05, 4.644399999999965e-05, 4.677800000000079e-05, 4.656899999999978e-05, 4.655500000000021e-05, 4.6861000000002206e-05, 4.66939999999999e-05, 4.631899999999953e-05, 4.624999999999768e-05, 4.698599999999886e-05, 4.611099999999799e-05, 4.651400000000097e-05, 4.701400000000147e-05, 4.6416999999999986e-05, 4.705500000000071e-05, 4.652800000000054e-05, 4.704100000000114e-05, 4.656999999999925e-05, 4.6083000000002317e-05, 4.6375000000001276e-05, 4.706999999999975e-05, 4.6472999999998266e-05, 4.663899999999763e-05, 4.706900000000028e-05, 4.695799999999972e-05, 4.691600000000101e-05, 4.648599999999836e-05, 4.6680999999999806e-05, 4.6389000000000846e-05, 4.6861000000002206e-05, 4.612499999999756e-05, 4.675000000000165e-05, 4.626399999999725e-05, 4.648599999999836e-05, 4.709699999999942e-05, 4.617999999999983e-05, 4.681900000000003e-05, 4.691599999999754e-05, 4.656899999999978e-05, 4.68329999999996e-05, 4.612499999999756e-05, 4.6472999999998266e-05, 4.6153000000000166e-05, 4.6445000000002595e-05, 4.674999999999818e-05, 4.668000000000033e-05, 4.666599999999729e-05, 4.625000000000115e-05, 4.630599999999943e-05]</msg>
<status status="PASS" starttime="20201029 18:17:49.654" endtime="20201029 18:17:49.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.650" endtime="20201029 18:17:49.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:49.662" endtime="20201029 18:17:49.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.660" endtime="20201029 18:17:49.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.659" endtime="20201029 18:17:49.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.301" endtime="20201029 18:17:49.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.300" endtime="20201029 18:17:49.682"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.691" endtime="20201029 18:17:49.707"></status>
</kw>
<msg timestamp="20201029 18:17:49.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.689" endtime="20201029 18:17:49.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.709" endtime="20201029 18:17:49.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.711" endtime="20201029 18:17:49.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.687" endtime="20201029 18:17:49.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.685" endtime="20201029 18:17:49.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.720" endtime="20201029 18:17:50.005"></status>
</kw>
<msg timestamp="20201029 18:17:50.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021352472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.718" endtime="20201029 18:17:50.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021352472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.009" endtime="20201029 18:17:50.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.017" endtime="20201029 18:17:50.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.716" endtime="20201029 18:17:50.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.714" endtime="20201029 18:17:50.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:50.024" level="INFO">${RESULT} = [{'diff': 4.85139999999995e-05}, {'diff': 4.7611000000002957e-05}, {'diff': 4.772200000000004e-05}, {'diff': 4.730600000000043e-05}, {'diff': 4.779099999999842e-05}, {'diff': 4.799999999999943e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:50.020" endtime="20201029 18:17:50.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:50.029" level="INFO">${ACCURACY} = {'diff': [4.85139999999995e-05, 4.7611000000002957e-05, 4.772200000000004e-05, 4.730600000000043e-05, 4.779099999999842e-05, 4.799999999999943e-05, 4.7458999999999696e-05, 4.757000000000025e-05, 4.713...</msg>
<status status="PASS" starttime="20201029 18:17:50.025" endtime="20201029 18:17:50.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.033" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:17:50.032" endtime="20201029 18:17:50.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.035" level="INFO">VALUE: [4.85139999999995e-05, 4.7611000000002957e-05, 4.772200000000004e-05, 4.730600000000043e-05, 4.779099999999842e-05, 4.799999999999943e-05, 4.7458999999999696e-05, 4.757000000000025e-05, 4.713899999999813e-05, 4.7125000000002026e-05, 4.784700000000017e-05, 4.7417000000000986e-05, 4.75000000000024e-05, 4.786099999999974e-05, 4.747199999999979e-05, 4.7181000000000306e-05, 4.784700000000017e-05, 4.723600000000258e-05, 4.791599999999854e-05, 4.7875000000002776e-05, 4.784799999999964e-05, 4.783400000000007e-05, 4.71940000000004e-05, 4.744400000000065e-05, 4.7181000000000306e-05, 4.772200000000004e-05, 4.722199999999954e-05, 4.718000000000083e-05, 4.718000000000083e-05, 4.73330000000001e-05, 4.791599999999854e-05, 4.75269999999986e-05, 4.7625000000002526e-05, 4.783299999999713e-05, 4.804200000000161e-05, 4.7861000000003207e-05, 4.7625000000002526e-05, 4.768099999999734e-05, 4.761200000000243e-05, 4.799999999999943e-05, 4.741600000000151e-05, 4.808400000000032e-05, 4.767999999999786e-05, 4.73330000000001e-05, 4.780600000000093e-05, 4.773599999999961e-05, 4.723599999999911e-05, 4.726399999999825e-05, 4.791699999999802e-05, 4.7681000000000806e-05]</msg>
<status status="PASS" starttime="20201029 18:17:50.034" endtime="20201029 18:17:50.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.029" endtime="20201029 18:17:50.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.040" endtime="20201029 18:17:50.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.039" endtime="20201029 18:17:50.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.038" endtime="20201029 18:17:50.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.683" endtime="20201029 18:17:50.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.683" endtime="20201029 18:17:50.061"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.069" endtime="20201029 18:17:50.086"></status>
</kw>
<msg timestamp="20201029 18:17:50.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.068" endtime="20201029 18:17:50.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.087" endtime="20201029 18:17:50.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.090" endtime="20201029 18:17:50.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.065" endtime="20201029 18:17:50.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.063" endtime="20201029 18:17:50.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.098" endtime="20201029 18:17:50.388"></status>
</kw>
<msg timestamp="20201029 18:17:50.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021341208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.097" endtime="20201029 18:17:50.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021341208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.392" endtime="20201029 18:17:50.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.400" endtime="20201029 18:17:50.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.094" endtime="20201029 18:17:50.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.093" endtime="20201029 18:17:50.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:50.407" level="INFO">${RESULT} = [{'diff': 4.925000000000068e-05}, {'diff': 4.895800000000172e-05}, {'diff': 4.837499999999981e-05}, {'diff': 4.8417000000001986e-05}, {'diff': 4.827799999999882e-05}, {'diff': 4.869499999999791e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:50.404" endtime="20201029 18:17:50.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:50.411" level="INFO">${ACCURACY} = {'diff': [4.925000000000068e-05, 4.895800000000172e-05, 4.837499999999981e-05, 4.8417000000001986e-05, 4.827799999999882e-05, 4.869499999999791e-05, 4.824999999999968e-05, 4.888899999999988e-05, 4.837...</msg>
<status status="PASS" starttime="20201029 18:17:50.408" endtime="20201029 18:17:50.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.415" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:17:50.414" endtime="20201029 18:17:50.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.418" level="INFO">VALUE: [4.925000000000068e-05, 4.895800000000172e-05, 4.837499999999981e-05, 4.8417000000001986e-05, 4.827799999999882e-05, 4.869499999999791e-05, 4.824999999999968e-05, 4.888899999999988e-05, 4.837499999999981e-05, 4.823599999999664e-05, 4.834800000000014e-05, 4.847200000000079e-05, 4.8320000000001e-05, 4.859800000000039e-05, 4.807000000000075e-05, 4.808300000000085e-05, 4.8707999999998e-05, 4.863899999999963e-05, 4.861100000000049e-05, 4.854099999999917e-05, 4.897199999999782e-05, 4.830499999999849e-05, 4.900000000000043e-05, 4.868099999999834e-05, 4.894499999999816e-05, 4.890299999999945e-05, 4.848600000000036e-05, 4.891599999999954e-05, 4.833299999999763e-05, 4.855600000000168e-05, 4.848600000000036e-05, 4.859700000000092e-05, 4.888899999999988e-05, 4.855500000000221e-05, 4.844400000000165e-05, 4.829099999999892e-05, 4.8917000000002486e-05, 4.873600000000061e-05, 4.827699999999935e-05, 4.886100000000074e-05, 4.887500000000031e-05, 4.887500000000031e-05, 4.866699999999877e-05, 4.887500000000031e-05, 4.892999999999911e-05, 4.855599999999821e-05, 4.886200000000021e-05, 4.856999999999778e-05, 4.898600000000086e-05, 4.86529999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:17:50.416" endtime="20201029 18:17:50.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.412" endtime="20201029 18:17:50.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.422" endtime="20201029 18:17:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.421" endtime="20201029 18:17:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.420" endtime="20201029 18:17:50.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.062" endtime="20201029 18:17:50.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.061" endtime="20201029 18:17:50.443"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.452" endtime="20201029 18:17:50.469"></status>
</kw>
<msg timestamp="20201029 18:17:50.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.450" endtime="20201029 18:17:50.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.470" endtime="20201029 18:17:50.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.473" endtime="20201029 18:17:50.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.448" endtime="20201029 18:17:50.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.446" endtime="20201029 18:17:50.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.482" endtime="20201029 18:17:50.769"></status>
</kw>
<msg timestamp="20201029 18:17:50.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022130792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.480" endtime="20201029 18:17:50.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022130792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.773" endtime="20201029 18:17:50.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.781" endtime="20201029 18:17:50.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.478" endtime="20201029 18:17:50.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.476" endtime="20201029 18:17:50.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:50.788" level="INFO">${RESULT} = [{'diff': 5.055500000000074e-05}, {'diff': 4.91529999999997e-05}, {'diff': 5.004200000000014e-05}, {'diff': 4.931899999999906e-05}, {'diff': 4.937500000000081e-05}, {'diff': 4.961099999999802e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:50.785" endtime="20201029 18:17:50.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:50.792" level="INFO">${ACCURACY} = {'diff': [5.055500000000074e-05, 4.91529999999997e-05, 5.004200000000014e-05, 4.931899999999906e-05, 4.937500000000081e-05, 4.961099999999802e-05, 4.961099999999802e-05, 5.000000000000143e-05, 4.92500...</msg>
<status status="PASS" starttime="20201029 18:17:50.789" endtime="20201029 18:17:50.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.797" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:17:50.796" endtime="20201029 18:17:50.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.799" level="INFO">VALUE: [5.055500000000074e-05, 4.91529999999997e-05, 5.004200000000014e-05, 4.931899999999906e-05, 4.937500000000081e-05, 4.961099999999802e-05, 4.961099999999802e-05, 5.000000000000143e-05, 4.925000000000068e-05, 4.937500000000081e-05, 4.959699999999845e-05, 4.998599999999839e-05, 4.955599999999921e-05, 5.005500000000024e-05, 4.966600000000029e-05, 4.916699999999927e-05, 4.916599999999979e-05, 4.997199999999882e-05, 4.9473000000001266e-05, 4.938900000000038e-05, 4.925000000000068e-05, 4.961099999999802e-05, 4.974999999999771e-05, 4.925000000000068e-05, 4.911099999999752e-05, 4.904199999999914e-05, 4.962500000000106e-05, 4.9223000000001016e-05, 4.998599999999839e-05, 4.967999999999986e-05, 4.909699999999795e-05, 5.005600000000318e-05, 4.955499999999974e-05, 4.91529999999997e-05, 4.947200000000179e-05, 4.98469999999987e-05, 4.923600000000111e-05, 4.959800000000139e-05, 4.955499999999974e-05, 4.975000000000118e-05, 4.912500000000056e-05, 4.967999999999986e-05, 4.909800000000089e-05, 4.975000000000118e-05, 4.967999999999986e-05, 5.004100000000067e-05, 4.9137999999997184e-05, 4.925000000000068e-05, 4.919499999999841e-05, 4.930599999999896e-05]</msg>
<status status="PASS" starttime="20201029 18:17:50.798" endtime="20201029 18:17:50.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.793" endtime="20201029 18:17:50.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.805" endtime="20201029 18:17:50.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.803" endtime="20201029 18:17:50.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.802" endtime="20201029 18:17:50.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.444" endtime="20201029 18:17:50.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.443" endtime="20201029 18:17:50.826"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.834" endtime="20201029 18:17:50.850"></status>
</kw>
<msg timestamp="20201029 18:17:50.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.833" endtime="20201029 18:17:50.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.852" endtime="20201029 18:17:50.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.854" endtime="20201029 18:17:50.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.830" endtime="20201029 18:17:50.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.828" endtime="20201029 18:17:50.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.864" endtime="20201029 18:17:51.200"></status>
</kw>
<msg timestamp="20201029 18:17:51.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:50.862" endtime="20201029 18:17:51.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:51.204" endtime="20201029 18:17:51.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.212" endtime="20201029 18:17:51.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.859" endtime="20201029 18:17:51.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.858" endtime="20201029 18:17:51.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.219" level="INFO">${RESULT} = [{'diff': 5.086099999999927e-05}, {'diff': 5.073600000000261e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.026400000000125e-05}, {'diff': 5.025000000000168e-05}, {'diff': 5.098599999999939e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:51.216" endtime="20201029 18:17:51.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:51.224" level="INFO">${ACCURACY} = {'diff': [5.086099999999927e-05, 5.073600000000261e-05, 5.030599999999996e-05, 5.026400000000125e-05, 5.025000000000168e-05, 5.098599999999939e-05, 5.08469999999997e-05, 5.088899999999841e-05, 5.09450...</msg>
<status status="PASS" starttime="20201029 18:17:51.220" endtime="20201029 18:17:51.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.228" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:17:51.227" endtime="20201029 18:17:51.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.231" level="INFO">VALUE: [5.086099999999927e-05, 5.073600000000261e-05, 5.030599999999996e-05, 5.026400000000125e-05, 5.025000000000168e-05, 5.098599999999939e-05, 5.08469999999997e-05, 5.088899999999841e-05, 5.094500000000016e-05, 5.036100000000224e-05, 5.054200000000064e-05, 5.086099999999927e-05, 5.03469999999992e-05, 5.105600000000071e-05, 5.033299999999963e-05, 5.029200000000039e-05, 5.054200000000064e-05, 5.0665999999997824e-05, 5.01530000000007e-05, 5.041600000000104e-05, 5.058299999999988e-05, 5.059699999999945e-05, 5.111200000000246e-05, 5.027800000000082e-05, 5.066700000000077e-05, 5.048599999999889e-05, 5.029200000000039e-05, 5.058299999999988e-05, 5.062500000000206e-05, 5.104199999999767e-05, 5.0665999999997824e-05, 5.043100000000009e-05, 5.040300000000095e-05, 5.098599999999939e-05, 5.041700000000052e-05, 5.023600000000211e-05, 5.072199999999957e-05, 5.045799999999975e-05, 5.009699999999895e-05, 5.099999999999896e-05, 5.068000000000086e-05, 5.036099999999877e-05, 5.093100000000059e-05, 5.043100000000009e-05, 5.091699999999755e-05, 5.091700000000102e-05, 5.048600000000236e-05, 5.052699999999813e-05, 5.048599999999889e-05, 5.055500000000074e-05]</msg>
<status status="PASS" starttime="20201029 18:17:51.229" endtime="20201029 18:17:51.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.225" endtime="20201029 18:17:51.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.235" endtime="20201029 18:17:51.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.234" endtime="20201029 18:17:51.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.233" endtime="20201029 18:17:51.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.826" endtime="20201029 18:17:51.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.826" endtime="20201029 18:17:51.256"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.265" endtime="20201029 18:17:51.281"></status>
</kw>
<msg timestamp="20201029 18:17:51.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.263" endtime="20201029 18:17:51.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.283" endtime="20201029 18:17:51.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.285" endtime="20201029 18:17:51.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.261" endtime="20201029 18:17:51.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.259" endtime="20201029 18:17:51.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.294" endtime="20201029 18:17:51.581"></status>
</kw>
<msg timestamp="20201029 18:17:51.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021295667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.292" endtime="20201029 18:17:51.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021295667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.585" endtime="20201029 18:17:51.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.593" endtime="20201029 18:17:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.290" endtime="20201029 18:17:51.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.288" endtime="20201029 18:17:51.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.599" level="INFO">${RESULT} = [{'diff': 5.230600000000196e-05}, {'diff': 5.188900000000288e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.109699999999995e-05}, {'diff': 5.145900000000023e-05}, {'diff': 5.130600000000096e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:51.596" endtime="20201029 18:17:51.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:51.603" level="INFO">${ACCURACY} = {'diff': [5.230600000000196e-05, 5.188900000000288e-05, 5.115299999999823e-05, 5.109699999999995e-05, 5.145900000000023e-05, 5.130600000000096e-05, 5.152800000000207e-05, 5.11530000000017e-05, 5.12499...</msg>
<status status="PASS" starttime="20201029 18:17:51.600" endtime="20201029 18:17:51.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.608" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:17:51.607" endtime="20201029 18:17:51.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.610" level="INFO">VALUE: [5.230600000000196e-05, 5.188900000000288e-05, 5.115299999999823e-05, 5.109699999999995e-05, 5.145900000000023e-05, 5.130600000000096e-05, 5.152800000000207e-05, 5.11530000000017e-05, 5.124999999999921e-05, 5.198600000000039e-05, 5.109699999999995e-05, 5.162499999999959e-05, 5.15409999999987e-05, 5.129199999999792e-05, 5.113899999999866e-05, 5.16669999999983e-05, 5.122200000000007e-05, 5.20279999999991e-05, 5.180600000000146e-05, 5.191699999999855e-05, 5.129200000000139e-05, 5.136099999999977e-05, 5.108300000000038e-05, 5.154200000000164e-05, 5.165299999999873e-05, 5.181999999999756e-05, 5.155499999999827e-05, 5.158300000000088e-05, 5.1985999999996924e-05, 5.137499999999934e-05, 5.130499999999802e-05, 5.1207999999997034e-05, 5.180500000000199e-05, 5.143000000000161e-05, 5.123599999999964e-05, 5.161100000000002e-05, 5.141699999999805e-05, 5.201399999999953e-05, 5.173600000000014e-05, 5.161100000000002e-05, 5.155600000000121e-05, 5.123599999999964e-05, 5.20279999999991e-05, 5.150000000000293e-05, 5.1665999999998824e-05, 5.136199999999924e-05, 5.19730000000003e-05, 5.173699999999962e-05, 5.127800000000182e-05, 5.116700000000127e-05]</msg>
<status status="PASS" starttime="20201029 18:17:51.609" endtime="20201029 18:17:51.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.604" endtime="20201029 18:17:51.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.615" endtime="20201029 18:17:51.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.613" endtime="20201029 18:17:51.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.612" endtime="20201029 18:17:51.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.257" endtime="20201029 18:17:51.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.256" endtime="20201029 18:17:51.636"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.644" endtime="20201029 18:17:51.661"></status>
</kw>
<msg timestamp="20201029 18:17:51.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.643" endtime="20201029 18:17:51.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.663" endtime="20201029 18:17:51.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.665" endtime="20201029 18:17:51.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.640" endtime="20201029 18:17:51.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.638" endtime="20201029 18:17:51.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.674" endtime="20201029 18:17:51.960"></status>
</kw>
<msg timestamp="20201029 18:17:51.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.673" endtime="20201029 18:17:51.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.964" endtime="20201029 18:17:51.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.972" endtime="20201029 18:17:51.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.670" endtime="20201029 18:17:51.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.669" endtime="20201029 18:17:51.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.979" level="INFO">${RESULT} = [{'diff': 5.270900000000148e-05}, {'diff': 5.218000000000236e-05}, {'diff': 5.208299999999791e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.215299999999923e-05}, {'diff': 5.256900000000231e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:51.975" endtime="20201029 18:17:51.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:51.983" level="INFO">${ACCURACY} = {'diff': [5.270900000000148e-05, 5.218000000000236e-05, 5.208299999999791e-05, 5.26669999999993e-05, 5.215299999999923e-05, 5.256900000000231e-05, 5.305599999999924e-05, 5.247200000000132e-05, 5.23480...</msg>
<status status="PASS" starttime="20201029 18:17:51.980" endtime="20201029 18:17:51.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.987" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:17:51.986" endtime="20201029 18:17:51.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.990" level="INFO">VALUE: [5.270900000000148e-05, 5.218000000000236e-05, 5.208299999999791e-05, 5.26669999999993e-05, 5.215299999999923e-05, 5.256900000000231e-05, 5.305599999999924e-05, 5.247200000000132e-05, 5.234800000000067e-05, 5.254199999999917e-05, 5.256999999999831e-05, 5.304199999999967e-05, 5.282000000000203e-05, 5.279099999999995e-05, 5.212500000000009e-05, 5.220900000000098e-05, 5.279200000000289e-05, 5.2179999999998894e-05, 5.30410000000002e-05, 5.250000000000046e-05, 5.2971999999998354e-05, 5.30280000000001e-05, 5.247200000000132e-05, 5.25279999999996e-05, 5.2151999999999754e-05, 5.229199999999892e-05, 5.240299999999948e-05, 5.218099999999837e-05, 5.30280000000001e-05, 5.248600000000089e-05, 5.2207999999998034e-05, 5.237500000000034e-05, 5.236100000000077e-05, 5.23470000000012e-05, 5.284699999999823e-05, 5.262500000000059e-05, 5.261100000000102e-05, 5.258400000000135e-05, 5.227699999999988e-05, 5.300000000000096e-05, 5.240299999999948e-05, 5.254199999999917e-05, 5.2930000000003113e-05, 5.2151999999999754e-05, 5.223700000000012e-05, 5.265299999999973e-05, 5.25279999999996e-05, 5.284699999999823e-05, 5.209700000000095e-05, 5.2665999999999824e-05]</msg>
<status status="PASS" starttime="20201029 18:17:51.988" endtime="20201029 18:17:51.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.984" endtime="20201029 18:17:51.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.995" endtime="20201029 18:17:52.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.994" endtime="20201029 18:17:52.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.993" endtime="20201029 18:17:52.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.636" endtime="20201029 18:17:52.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.636" endtime="20201029 18:17:52.016"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.024" endtime="20201029 18:17:52.042"></status>
</kw>
<msg timestamp="20201029 18:17:52.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.023" endtime="20201029 18:17:52.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.044" endtime="20201029 18:17:52.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.047" endtime="20201029 18:17:52.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.020" endtime="20201029 18:17:52.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.018" endtime="20201029 18:17:52.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.061" endtime="20201029 18:17:52.347"></status>
</kw>
<msg timestamp="20201029 18:17:52.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021470194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:52.059" endtime="20201029 18:17:52.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021470194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:52.351" endtime="20201029 18:17:52.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.360" endtime="20201029 18:17:52.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.055" endtime="20201029 18:17:52.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.052" endtime="20201029 18:17:52.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:52.366" level="INFO">${RESULT} = [{'diff': 5.4444000000000714e-05}, {'diff': 5.329199999999992e-05}, {'diff': 5.311200000000099e-05}, {'diff': 5.356899999999984e-05}, {'diff': 5.320899999999851e-05}, {'diff': 5.36670000000003e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:52.363" endtime="20201029 18:17:52.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:52.372" level="INFO">${ACCURACY} = {'diff': [5.4444000000000714e-05, 5.329199999999992e-05, 5.311200000000099e-05, 5.356899999999984e-05, 5.320899999999851e-05, 5.36670000000003e-05, 5.358300000000288e-05, 5.3652000000001254e-05, 5.359...</msg>
<status status="PASS" starttime="20201029 18:17:52.367" endtime="20201029 18:17:52.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.376" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:17:52.375" endtime="20201029 18:17:52.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.379" level="INFO">VALUE: [5.4444000000000714e-05, 5.329199999999992e-05, 5.311200000000099e-05, 5.356899999999984e-05, 5.320899999999851e-05, 5.36670000000003e-05, 5.358300000000288e-05, 5.3652000000001254e-05, 5.359699999999898e-05, 5.388900000000141e-05, 5.35280000000006e-05, 5.33609999999983e-05, 5.308299999999891e-05, 5.313900000000066e-05, 5.359799999999845e-05, 5.404200000000067e-05, 5.401400000000153e-05, 5.373600000000214e-05, 5.361100000000202e-05, 5.309699999999848e-05, 5.40280000000011e-05, 5.384699999999923e-05, 5.368099999999987e-05, 5.40280000000011e-05, 5.390300000000098e-05, 5.30280000000001e-05, 5.400000000000196e-05, 5.404200000000067e-05, 5.3721999999999104e-05, 5.3457999999999284e-05, 5.397299999999883e-05, 5.3471999999998854e-05, 5.4013999999998064e-05, 5.327800000000035e-05, 5.313900000000066e-05, 5.319499999999894e-05, 5.3680000000000394e-05, 5.365300000000073e-05, 5.38340000000026e-05, 5.33470000000022e-05, 5.330500000000002e-05, 5.376400000000128e-05, 5.387499999999837e-05, 5.3166000000000324e-05, 5.334699999999873e-05, 5.394499999999969e-05, 5.32080000000025e-05, 5.344500000000266e-05, 5.313900000000066e-05, 5.390299999999751e-05]</msg>
<status status="PASS" starttime="20201029 18:17:52.378" endtime="20201029 18:17:52.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.373" endtime="20201029 18:17:52.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:52.384" endtime="20201029 18:17:52.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.382" endtime="20201029 18:17:52.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.381" endtime="20201029 18:17:52.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.017" endtime="20201029 18:17:52.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.016" endtime="20201029 18:17:52.405"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.413" endtime="20201029 18:17:52.430"></status>
</kw>
<msg timestamp="20201029 18:17:52.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.412" endtime="20201029 18:17:52.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.431" endtime="20201029 18:17:52.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.434" endtime="20201029 18:17:52.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.409" endtime="20201029 18:17:52.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.407" endtime="20201029 18:17:52.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.442" endtime="20201029 18:17:52.729"></status>
</kw>
<msg timestamp="20201029 18:17:52.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.441" endtime="20201029 18:17:52.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.733" endtime="20201029 18:17:52.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.741" endtime="20201029 18:17:52.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.439" endtime="20201029 18:17:52.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.437" endtime="20201029 18:17:52.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:52.747" level="INFO">${RESULT} = [{'diff': 5.501400000000253e-05}, {'diff': 5.5013999999999064e-05}, {'diff': 5.465299999999826e-05}, {'diff': 5.411100000000252e-05}, {'diff': 5.50280000000021e-05}, {'diff': 5.484700000000023e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:52.744" endtime="20201029 18:17:52.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:52.751" level="INFO">${ACCURACY} = {'diff': [5.501400000000253e-05, 5.5013999999999064e-05, 5.465299999999826e-05, 5.411100000000252e-05, 5.50280000000021e-05, 5.484700000000023e-05, 5.429099999999798e-05, 5.440300000000148e-05, 5.4596...</msg>
<status status="PASS" starttime="20201029 18:17:52.748" endtime="20201029 18:17:52.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.756" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:17:52.755" endtime="20201029 18:17:52.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.758" level="INFO">VALUE: [5.501400000000253e-05, 5.5013999999999064e-05, 5.465299999999826e-05, 5.411100000000252e-05, 5.50280000000021e-05, 5.484700000000023e-05, 5.429099999999798e-05, 5.440300000000148e-05, 5.459699999999998e-05, 5.4791999999997953e-05, 5.4971999999996884e-05, 5.427700000000188e-05, 5.476400000000228e-05, 5.490299999999851e-05, 5.4235999999999174e-05, 5.445899999999976e-05, 5.465300000000173e-05, 5.480500000000152e-05, 5.483400000000013e-05, 5.411099999999905e-05, 5.4513999999998564e-05, 5.433300000000016e-05, 5.480500000000152e-05, 5.4401999999998535e-05, 5.463899999999869e-05, 5.479099999999848e-05, 5.462500000000259e-05, 5.413900000000166e-05, 5.490299999999851e-05, 5.4137999999998715e-05, 5.463900000000216e-05, 5.5027999999998634e-05, 5.4944000000001214e-05, 5.4513999999998564e-05, 5.432000000000006e-05, 5.458300000000041e-05, 5.458300000000041e-05, 5.4513999999998564e-05, 5.45280000000016e-05, 5.493100000000112e-05, 5.408299999999991e-05, 5.420899999999951e-05, 5.458300000000041e-05, 5.479099999999848e-05, 5.4749999999999244e-05, 5.458300000000041e-05, 5.481900000000109e-05, 5.409700000000295e-05, 5.483400000000013e-05, 5.466699999999783e-05]</msg>
<status status="PASS" starttime="20201029 18:17:52.757" endtime="20201029 18:17:52.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.752" endtime="20201029 18:17:52.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:52.763" endtime="20201029 18:17:52.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.761" endtime="20201029 18:17:52.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.760" endtime="20201029 18:17:52.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.405" endtime="20201029 18:17:52.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.405" endtime="20201029 18:17:52.784"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.792" endtime="20201029 18:17:52.810"></status>
</kw>
<msg timestamp="20201029 18:17:52.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.791" endtime="20201029 18:17:52.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.811" endtime="20201029 18:17:52.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.814" endtime="20201029 18:17:52.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.788" endtime="20201029 18:17:52.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.786" endtime="20201029 18:17:52.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.823" endtime="20201029 18:17:53.108"></status>
</kw>
<msg timestamp="20201029 18:17:53.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.821" endtime="20201029 18:17:53.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.112" endtime="20201029 18:17:53.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.121" endtime="20201029 18:17:53.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.819" endtime="20201029 18:17:53.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.817" endtime="20201029 18:17:53.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:53.127" level="INFO">${RESULT} = [{'diff': 5.5986000000000924e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.508399999999691e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.544500000000119e-05}, {'diff': 5.538899999999944e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:53.124" endtime="20201029 18:17:53.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:53.131" level="INFO">${ACCURACY} = {'diff': [5.5986000000000924e-05, 5.5458000000001284e-05, 5.508399999999691e-05, 5.5722000000001104e-05, 5.544500000000119e-05, 5.538899999999944e-05, 5.5208000000001034e-05, 5.563899999999969e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:17:53.128" endtime="20201029 18:17:53.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.135" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:17:53.134" endtime="20201029 18:17:53.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.138" level="INFO">VALUE: [5.5986000000000924e-05, 5.5458000000001284e-05, 5.508399999999691e-05, 5.5722000000001104e-05, 5.544500000000119e-05, 5.538899999999944e-05, 5.5208000000001034e-05, 5.563899999999969e-05, 5.538899999999944e-05, 5.5194000000001464e-05, 5.5805999999998523e-05, 5.527699999999941e-05, 5.5887999999996996e-05, 5.588899999999994e-05, 5.584700000000123e-05, 5.5305999999998023e-05, 5.6000000000000494e-05, 5.540300000000248e-05, 5.6000000000000494e-05, 5.513899999999919e-05, 5.505600000000124e-05, 5.558300000000141e-05, 5.563899999999969e-05, 5.5763999999999814e-05, 5.551300000000009e-05, 5.5499999999999994e-05, 5.551300000000009e-05, 5.532000000000106e-05, 5.5694000000001964e-05, 5.527800000000235e-05, 5.5888000000000465e-05, 5.502699999999916e-05, 5.5137999999999715e-05, 5.5415999999999105e-05, 5.5249999999999744e-05, 5.55549999999988e-05, 5.538899999999944e-05, 5.5943999999998745e-05, 5.519500000000094e-05, 5.583299999999819e-05, 5.537499999999987e-05, 5.530499999999855e-05, 5.563899999999969e-05, 5.5387999999999965e-05, 5.593099999999865e-05, 5.6014000000000064e-05, 5.526400000000278e-05, 5.579099999999948e-05, 5.558299999999794e-05, 5.508399999999691e-05]</msg>
<status status="PASS" starttime="20201029 18:17:53.136" endtime="20201029 18:17:53.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.132" endtime="20201029 18:17:53.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.144" endtime="20201029 18:17:53.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.142" endtime="20201029 18:17:53.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.141" endtime="20201029 18:17:53.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.784" endtime="20201029 18:17:53.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.784" endtime="20201029 18:17:53.164"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.173" endtime="20201029 18:17:53.189"></status>
</kw>
<msg timestamp="20201029 18:17:53.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.171" endtime="20201029 18:17:53.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.191" endtime="20201029 18:17:53.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.193" endtime="20201029 18:17:53.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.169" endtime="20201029 18:17:53.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.167" endtime="20201029 18:17:53.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.202" endtime="20201029 18:17:53.488"></status>
</kw>
<msg timestamp="20201029 18:17:53.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021375819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:53.201" endtime="20201029 18:17:53.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021375819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:53.492" endtime="20201029 18:17:53.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.500" endtime="20201029 18:17:53.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.198" endtime="20201029 18:17:53.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.196" endtime="20201029 18:17:53.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:53.506" level="INFO">${RESULT} = [{'diff': 5.731900000000012e-05}, {'diff': 5.6208000000002034e-05}, {'diff': 5.6778000000000384e-05}, {'diff': 5.66809999999994e-05}, {'diff': 5.7013999999997594e-05}, {'diff': 5.654100000000023e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:53.503" endtime="20201029 18:17:53.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:53.511" level="INFO">${ACCURACY} = {'diff': [5.731900000000012e-05, 5.6208000000002034e-05, 5.6778000000000384e-05, 5.66809999999994e-05, 5.7013999999997594e-05, 5.654100000000023e-05, 5.6513999999997094e-05, 5.688899999999747e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:17:53.507" endtime="20201029 18:17:53.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.516" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:17:53.515" endtime="20201029 18:17:53.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.518" level="INFO">VALUE: [5.731900000000012e-05, 5.6208000000002034e-05, 5.6778000000000384e-05, 5.66809999999994e-05, 5.7013999999997594e-05, 5.654100000000023e-05, 5.6513999999997094e-05, 5.688899999999747e-05, 5.634699999999826e-05, 5.645900000000176e-05, 5.6693999999999495e-05, 5.609800000000095e-05, 5.662500000000112e-05, 5.631899999999912e-05, 5.6499999999997524e-05, 5.6457999999998815e-05, 5.6486000000001424e-05, 5.6457999999998815e-05, 5.634799999999773e-05, 5.608300000000191e-05, 5.6264000000000314e-05, 5.659699999999851e-05, 5.619499999999847e-05, 5.7028000000000634e-05, 5.7014000000001064e-05, 5.666699999999983e-05, 5.6750000000001244e-05, 5.694499999999922e-05, 5.6207999999998565e-05, 5.6207999999998565e-05, 5.60549999999993e-05, 5.627800000000335e-05, 5.605600000000224e-05, 5.6514000000000564e-05, 5.6207999999998565e-05, 5.613900000000019e-05, 5.6957999999999315e-05, 5.645899999999829e-05, 5.6250000000000744e-05, 5.636099999999783e-05, 5.6207999999998565e-05, 5.6277999999999884e-05, 5.6901999999997566e-05, 5.6207999999998565e-05, 5.6193999999998995e-05, 5.6236000000001174e-05, 5.638900000000044e-05, 5.6207999999998565e-05, 5.690299999999704e-05, 5.63610000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:17:53.517" endtime="20201029 18:17:53.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.512" endtime="20201029 18:17:53.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.528" endtime="20201029 18:17:53.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.526" endtime="20201029 18:17:53.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.525" endtime="20201029 18:17:53.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.165" endtime="20201029 18:17:53.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.165" endtime="20201029 18:17:53.548"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.557" endtime="20201029 18:17:53.574"></status>
</kw>
<msg timestamp="20201029 18:17:53.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.555" endtime="20201029 18:17:53.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.575" endtime="20201029 18:17:53.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.578" endtime="20201029 18:17:53.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.553" endtime="20201029 18:17:53.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.551" endtime="20201029 18:17:53.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.586" endtime="20201029 18:17:53.877"></status>
</kw>
<msg timestamp="20201029 18:17:53.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021337083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.585" endtime="20201029 18:17:53.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021337083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.881" endtime="20201029 18:17:53.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.889" endtime="20201029 18:17:53.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.582" endtime="20201029 18:17:53.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.581" endtime="20201029 18:17:53.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:53.895" level="INFO">${RESULT} = [{'diff': 5.829099999999851e-05}, {'diff': 5.7569999999999844e-05}, {'diff': 5.733400000000263e-05}, {'diff': 5.7721999999999635e-05}, {'diff': 5.708299999999944e-05}, {'diff': 5.73749999999984e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:53.892" endtime="20201029 18:17:53.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:53.899" level="INFO">${ACCURACY} = {'diff': [5.829099999999851e-05, 5.7569999999999844e-05, 5.733400000000263e-05, 5.7721999999999635e-05, 5.708299999999944e-05, 5.73749999999984e-05, 5.7014000000001064e-05, 5.787500000000237e-05, 5.75...</msg>
<status status="PASS" starttime="20201029 18:17:53.896" endtime="20201029 18:17:53.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.904" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:17:53.903" endtime="20201029 18:17:53.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.906" level="INFO">VALUE: [5.829099999999851e-05, 5.7569999999999844e-05, 5.733400000000263e-05, 5.7721999999999635e-05, 5.708299999999944e-05, 5.73749999999984e-05, 5.7014000000001064e-05, 5.787500000000237e-05, 5.754099999999776e-05, 5.761099999999908e-05, 5.7750000000002244e-05, 5.765299999999779e-05, 5.7694000000000495e-05, 5.7680000000000925e-05, 5.761200000000202e-05, 5.7499999999998525e-05, 5.791699999999761e-05, 5.7750000000002244e-05, 5.76810000000004e-05, 5.7735999999999205e-05, 5.707000000000281e-05, 5.720900000000251e-05, 5.736099999999883e-05, 5.7278000000000884e-05, 5.7333999999999163e-05, 5.708299999999944e-05, 5.780500000000105e-05, 5.73749999999984e-05, 5.731900000000012e-05, 5.7820000000000094e-05, 5.762499999999865e-05, 5.7556000000000274e-05, 5.7528000000001134e-05, 5.7929999999997706e-05, 5.788900000000194e-05, 5.7485999999998955e-05, 5.7429999999997206e-05, 5.7042000000000204e-05, 5.743100000000015e-05, 5.781899999999715e-05, 5.762499999999865e-05, 5.786099999999933e-05, 5.713899999999772e-05, 5.7319999999999593e-05, 5.7999999999999025e-05, 5.7402000000001535e-05, 5.7014000000001064e-05, 5.7985999999999455e-05, 5.709699999999901e-05, 5.7180000000000425e-05]</msg>
<status status="PASS" starttime="20201029 18:17:53.905" endtime="20201029 18:17:53.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.900" endtime="20201029 18:17:53.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.911" endtime="20201029 18:17:53.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.909" endtime="20201029 18:17:53.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.908" endtime="20201029 18:17:53.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.549" endtime="20201029 18:17:53.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.549" endtime="20201029 18:17:53.932"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.940" endtime="20201029 18:17:53.958"></status>
</kw>
<msg timestamp="20201029 18:17:53.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.939" endtime="20201029 18:17:53.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.959" endtime="20201029 18:17:53.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.962" endtime="20201029 18:17:53.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.936" endtime="20201029 18:17:53.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.934" endtime="20201029 18:17:53.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.970" endtime="20201029 18:17:54.256"></status>
</kw>
<msg timestamp="20201029 18:17:54.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.969" endtime="20201029 18:17:54.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.260" endtime="20201029 18:17:54.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.268" endtime="20201029 18:17:54.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.966" endtime="20201029 18:17:54.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.965" endtime="20201029 18:17:54.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.275" level="INFO">${RESULT} = [{'diff': 5.8819999999997624e-05}, {'diff': 5.8749999999999775e-05}, {'diff': 5.862499999999965e-05}, {'diff': 5.8556000000001274e-05}, {'diff': 5.8458000000000815e-05}, {'diff': 5.830499999999808e-05...</msg>
<status status="PASS" starttime="20201029 18:17:54.271" endtime="20201029 18:17:54.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:54.279" level="INFO">${ACCURACY} = {'diff': [5.8819999999997624e-05, 5.8749999999999775e-05, 5.862499999999965e-05, 5.8556000000001274e-05, 5.8458000000000815e-05, 5.830499999999808e-05, 5.830499999999808e-05, 5.8915999999999136e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:17:54.275" endtime="20201029 18:17:54.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.283" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:17:54.282" endtime="20201029 18:17:54.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.285" level="INFO">VALUE: [5.8819999999997624e-05, 5.8749999999999775e-05, 5.862499999999965e-05, 5.8556000000001274e-05, 5.8458000000000815e-05, 5.830499999999808e-05, 5.830499999999808e-05, 5.8915999999999136e-05, 5.8472000000000385e-05, 5.8194000000000995e-05, 5.838900000000244e-05, 5.8320000000000594e-05, 5.8444000000001245e-05, 5.840300000000201e-05, 5.902699999999969e-05, 5.883299999999772e-05, 5.838900000000244e-05, 5.8249999999999275e-05, 5.8570000000000844e-05, 5.830500000000155e-05, 5.8736000000000205e-05, 5.8429999999998206e-05, 5.858299999999747e-05, 5.8763999999999345e-05, 5.8277999999998414e-05, 5.891700000000208e-05, 5.8485999999999955e-05, 5.8887999999999996e-05, 5.816700000000133e-05, 5.8584000000000414e-05, 5.861100000000008e-05, 5.88749999999999e-05, 5.8194999999997e-05, 5.808300000000044e-05, 5.8194000000000995e-05, 5.844500000000072e-05, 5.8749999999999775e-05, 5.8749999999999775e-05, 5.8263999999998844e-05, 5.886100000000033e-05, 5.8194000000000995e-05, 5.838899999999897e-05, 5.8930000000002175e-05, 5.8736000000000205e-05, 5.8249999999999275e-05, 5.8694000000001495e-05, 5.8749999999999775e-05, 5.8416000000002105e-05, 5.8944000000001745e-05, 5.83749999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:17:54.284" endtime="20201029 18:17:54.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.279" endtime="20201029 18:17:54.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.291" endtime="20201029 18:17:54.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.290" endtime="20201029 18:17:54.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.288" endtime="20201029 18:17:54.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.932" endtime="20201029 18:17:54.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.932" endtime="20201029 18:17:54.312"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.320" endtime="20201029 18:17:54.337"></status>
</kw>
<msg timestamp="20201029 18:17:54.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.319" endtime="20201029 18:17:54.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.338" endtime="20201029 18:17:54.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.341" endtime="20201029 18:17:54.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.316" endtime="20201029 18:17:54.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.314" endtime="20201029 18:17:54.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.350" endtime="20201029 18:17:54.635"></status>
</kw>
<msg timestamp="20201029 18:17:54.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021296278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.348" endtime="20201029 18:17:54.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021296278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.640" endtime="20201029 18:17:54.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.648" endtime="20201029 18:17:54.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.346" endtime="20201029 18:17:54.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.344" endtime="20201029 18:17:54.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.655" level="INFO">${RESULT} = [{'diff': 6.031900000000312e-05}, {'diff': 5.96810000000024e-05}, {'diff': 5.943099999999868e-05}, {'diff': 5.9263999999999845e-05}, {'diff': 5.9056000000001774e-05}, {'diff': 5.912500000000015e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:54.652" endtime="20201029 18:17:54.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:54.660" level="INFO">${ACCURACY} = {'diff': [6.031900000000312e-05, 5.96810000000024e-05, 5.943099999999868e-05, 5.9263999999999845e-05, 5.9056000000001774e-05, 5.912500000000015e-05, 5.9430000000002675e-05, 5.9749999999997305e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 18:17:54.656" endtime="20201029 18:17:54.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.664" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:17:54.663" endtime="20201029 18:17:54.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.667" level="INFO">VALUE: [6.031900000000312e-05, 5.96810000000024e-05, 5.943099999999868e-05, 5.9263999999999845e-05, 5.9056000000001774e-05, 5.912500000000015e-05, 5.9430000000002675e-05, 5.9749999999997305e-05, 5.9764000000000345e-05, 5.9971999999998415e-05, 5.9736000000001205e-05, 5.962500000000065e-05, 5.9291999999998984e-05, 5.981900000000262e-05, 5.9527999999999665e-05, 5.948700000000043e-05, 5.980499999999958e-05, 5.9764000000000345e-05, 5.912500000000015e-05, 5.930499999999908e-05, 5.9472000000001385e-05, 5.90550000000023e-05, 5.988900000000047e-05, 5.95689999999989e-05, 5.9194999999998e-05, 5.963900000000022e-05, 5.93750000000004e-05, 5.987499999999743e-05, 5.936100000000083e-05, 5.9764000000000345e-05, 5.945900000000129e-05, 5.930499999999908e-05, 5.9791999999999484e-05, 5.9986000000001455e-05, 5.9429999999999206e-05, 5.9235999999997235e-05, 5.968099999999893e-05, 5.9555999999998804e-05, 5.98750000000009e-05, 5.96949999999985e-05, 5.9443999999998776e-05, 5.9722000000001635e-05, 5.919500000000147e-05, 5.986100000000133e-05, 5.981899999999915e-05, 5.9693999999999026e-05, 6.0000000000001025e-05, 5.93750000000004e-05, 5.962500000000065e-05, 5.9569999999998374e-05]</msg>
<status status="PASS" starttime="20201029 18:17:54.665" endtime="20201029 18:17:54.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.660" endtime="20201029 18:17:54.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.671" endtime="20201029 18:17:54.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.670" endtime="20201029 18:17:54.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.669" endtime="20201029 18:17:54.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.313" endtime="20201029 18:17:54.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.312" endtime="20201029 18:17:54.692"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.701" endtime="20201029 18:17:54.717"></status>
</kw>
<msg timestamp="20201029 18:17:54.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.699" endtime="20201029 18:17:54.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.719" endtime="20201029 18:17:54.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.721" endtime="20201029 18:17:54.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.696" endtime="20201029 18:17:54.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.694" endtime="20201029 18:17:54.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.730" endtime="20201029 18:17:55.018"></status>
</kw>
<msg timestamp="20201029 18:17:55.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021239278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021300222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.729" endtime="20201029 18:17:55.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021239278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021300222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.023" endtime="20201029 18:17:55.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.031" endtime="20201029 18:17:55.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.726" endtime="20201029 18:17:55.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.724" endtime="20201029 18:17:55.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.037" level="INFO">${RESULT} = [{'diff': 6.0944000000000276e-05}, {'diff': 6.083299999999972e-05}, {'diff': 6.0750000000001775e-05}, {'diff': 6.0430000000000206e-05}, {'diff': 6.0694000000000026e-05}, {'diff': 6.086099999999886e-05...</msg>
<status status="PASS" starttime="20201029 18:17:55.034" endtime="20201029 18:17:55.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:55.041" level="INFO">${ACCURACY} = {'diff': [6.0944000000000276e-05, 6.083299999999972e-05, 6.0750000000001775e-05, 6.0430000000000206e-05, 6.0694000000000026e-05, 6.086099999999886e-05, 6.094499999999975e-05, 6.086099999999886e-05, 6....</msg>
<status status="PASS" starttime="20201029 18:17:55.038" endtime="20201029 18:17:55.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.046" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:17:55.045" endtime="20201029 18:17:55.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.048" level="INFO">VALUE: [6.0944000000000276e-05, 6.083299999999972e-05, 6.0750000000001775e-05, 6.0430000000000206e-05, 6.0694000000000026e-05, 6.086099999999886e-05, 6.094499999999975e-05, 6.086099999999886e-05, 6.0056000000002774e-05, 6.019500000000247e-05, 6.0764000000001345e-05, 6.0333999999998694e-05, 6.0264000000000845e-05, 6.0569999999999374e-05, 6.038900000000097e-05, 6.0194999999999e-05, 6.079100000000101e-05, 6.0264000000000845e-05, 6.0806000000000054e-05, 6.08750000000019e-05, 6.087499999999843e-05, 6.0819999999999624e-05, 6.0721999999999166e-05, 6.08750000000019e-05, 6.090300000000104e-05, 6.040300000000054e-05, 6.0999999999998555e-05, 6.0500000000001525e-05, 6.029099999999704e-05, 6.0499999999998055e-05, 6.05689999999999e-05, 6.0819999999999624e-05, 6.0250000000001275e-05, 6.101299999999865e-05, 6.0944000000000276e-05, 6.015300000000029e-05, 6.081900000000015e-05, 6.062500000000165e-05, 6.0320000000002594e-05, 6.0305999999999554e-05, 6.059700000000251e-05, 6.0750000000001775e-05, 6.0443999999999776e-05, 6.0111999999997584e-05, 6.062500000000165e-05, 6.05689999999999e-05, 6.0236000000001705e-05, 6.06949999999995e-05, 6.0457999999999346e-05, 6.1000000000002025e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.047" endtime="20201029 18:17:55.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.042" endtime="20201029 18:17:55.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.053" endtime="20201029 18:17:55.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.051" endtime="20201029 18:17:55.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.050" endtime="20201029 18:17:55.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.693" endtime="20201029 18:17:55.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.692" endtime="20201029 18:17:55.074"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.082" endtime="20201029 18:17:55.100"></status>
</kw>
<msg timestamp="20201029 18:17:55.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.081" endtime="20201029 18:17:55.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.102" endtime="20201029 18:17:55.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.104" endtime="20201029 18:17:55.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.078" endtime="20201029 18:17:55.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.076" endtime="20201029 18:17:55.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.113" endtime="20201029 18:17:55.397"></status>
</kw>
<msg timestamp="20201029 18:17:55.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.111" endtime="20201029 18:17:55.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.402" endtime="20201029 18:17:55.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.410" endtime="20201029 18:17:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.109" endtime="20201029 18:17:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.107" endtime="20201029 18:17:55.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.417" level="INFO">${RESULT} = [{'diff': 6.191700000000161e-05}, {'diff': 6.14300000000012e-05}, {'diff': 6.112500000000215e-05}, {'diff': 6.106999999999987e-05}, {'diff': 6.149999999999906e-05}, {'diff': 6.161099999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:55.414" endtime="20201029 18:17:55.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:55.421" level="INFO">${ACCURACY} = {'diff': [6.191700000000161e-05, 6.14300000000012e-05, 6.112500000000215e-05, 6.106999999999987e-05, 6.149999999999906e-05, 6.161099999999961e-05, 6.198599999999999e-05, 6.168000000000146e-05, 6.10839...</msg>
<status status="PASS" starttime="20201029 18:17:55.418" endtime="20201029 18:17:55.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.426" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:17:55.425" endtime="20201029 18:17:55.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.428" level="INFO">VALUE: [6.191700000000161e-05, 6.14300000000012e-05, 6.112500000000215e-05, 6.106999999999987e-05, 6.149999999999906e-05, 6.161099999999961e-05, 6.198599999999999e-05, 6.168000000000146e-05, 6.108399999999944e-05, 6.187499999999943e-05, 6.17499999999993e-05, 6.126400000000184e-05, 6.162499999999918e-05, 6.119400000000053e-05, 6.126400000000184e-05, 6.180499999999811e-05, 6.1013999999998125e-05, 6.113899999999825e-05, 6.20140000000026e-05, 6.112499999999868e-05, 6.172200000000017e-05, 6.188799999999953e-05, 6.167999999999799e-05, 6.19439999999978e-05, 6.169499999999703e-05, 6.199999999999956e-05, 6.145800000000035e-05, 6.12499999999988e-05, 6.118000000000096e-05, 6.106999999999987e-05, 6.108299999999997e-05, 6.105599999999684e-05, 6.143100000000068e-05, 6.20279999999987e-05, 6.130500000000108e-05, 6.194500000000075e-05, 6.13889999999985e-05, 6.129099999999804e-05, 6.111100000000258e-05, 6.12499999999988e-05, 6.162499999999918e-05, 6.187499999999943e-05, 6.169400000000103e-05, 6.133300000000022e-05, 6.159700000000004e-05, 6.136099999999936e-05, 6.129100000000151e-05, 6.17499999999993e-05, 6.155599999999734e-05, 6.197299999999989e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.427" endtime="20201029 18:17:55.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.422" endtime="20201029 18:17:55.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.434" endtime="20201029 18:17:55.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.433" endtime="20201029 18:17:55.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.431" endtime="20201029 18:17:55.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.075" endtime="20201029 18:17:55.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.074" endtime="20201029 18:17:55.455"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.463" endtime="20201029 18:17:55.480"></status>
</kw>
<msg timestamp="20201029 18:17:55.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.462" endtime="20201029 18:17:55.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.482" endtime="20201029 18:17:55.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.484" endtime="20201029 18:17:55.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.459" endtime="20201029 18:17:55.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.457" endtime="20201029 18:17:55.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.493" endtime="20201029 18:17:55.779"></status>
</kw>
<msg timestamp="20201029 18:17:55.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.492" endtime="20201029 18:17:55.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.783" endtime="20201029 18:17:55.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.792" endtime="20201029 18:17:55.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.489" endtime="20201029 18:17:55.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.487" endtime="20201029 18:17:55.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.798" level="INFO">${RESULT} = [{'diff': 6.30699999999984e-05}, {'diff': 6.29300000000027e-05}, {'diff': 6.269399999999856e-05}, {'diff': 6.280499999999911e-05}, {'diff': 6.229199999999852e-05}, {'diff': 6.298599999999752e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:55.795" endtime="20201029 18:17:55.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:55.803" level="INFO">${ACCURACY} = {'diff': [6.30699999999984e-05, 6.29300000000027e-05, 6.269399999999856e-05, 6.280499999999911e-05, 6.229199999999852e-05, 6.298599999999752e-05, 6.280499999999911e-05, 6.219399999999806e-05, 6.263899...</msg>
<status status="PASS" starttime="20201029 18:17:55.799" endtime="20201029 18:17:55.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.807" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:17:55.806" endtime="20201029 18:17:55.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.810" level="INFO">VALUE: [6.30699999999984e-05, 6.29300000000027e-05, 6.269399999999856e-05, 6.280499999999911e-05, 6.229199999999852e-05, 6.298599999999752e-05, 6.280499999999911e-05, 6.219399999999806e-05, 6.263899999999975e-05, 6.273599999999727e-05, 6.272200000000117e-05, 6.218100000000143e-05, 6.262500000000018e-05, 6.262500000000018e-05, 6.231899999999818e-05, 6.279199999999902e-05, 6.231900000000165e-05, 6.282000000000162e-05, 6.219400000000153e-05, 6.20560000000013e-05, 6.258300000000147e-05, 6.233399999999722e-05, 6.212500000000315e-05, 6.261200000000008e-05, 6.20279999999987e-05, 6.261100000000061e-05, 6.262499999999671e-05, 6.236100000000036e-05, 6.22499999999998e-05, 6.250000000000006e-05, 6.248600000000049e-05, 6.291699999999914e-05, 6.261200000000008e-05, 6.226400000000284e-05, 6.248599999999702e-05, 6.284699999999782e-05, 6.236100000000036e-05, 6.263899999999975e-05, 6.263900000000322e-05, 6.270900000000107e-05, 6.245900000000082e-05, 6.241599999999917e-05, 6.270799999999813e-05, 6.306899999999893e-05, 6.212499999999968e-05, 6.27500000000003e-05, 6.219399999999806e-05, 6.244400000000178e-05, 6.29300000000027e-05, 6.287500000000043e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.809" endtime="20201029 18:17:55.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.804" endtime="20201029 18:17:55.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.815" endtime="20201029 18:17:55.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.813" endtime="20201029 18:17:55.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.812" endtime="20201029 18:17:55.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.456" endtime="20201029 18:17:55.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.455" endtime="20201029 18:17:55.835"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.844" endtime="20201029 18:17:55.861"></status>
</kw>
<msg timestamp="20201029 18:17:55.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.842" endtime="20201029 18:17:55.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.862" endtime="20201029 18:17:55.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.865" endtime="20201029 18:17:55.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.840" endtime="20201029 18:17:55.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.838" endtime="20201029 18:17:55.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.874" endtime="20201029 18:17:56.160"></status>
</kw>
<msg timestamp="20201029 18:17:56.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021276361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021340736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.872" endtime="20201029 18:17:56.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021276361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021340736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.164" endtime="20201029 18:17:56.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.172" endtime="20201029 18:17:56.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.870" endtime="20201029 18:17:56.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.868" endtime="20201029 18:17:56.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.179" level="INFO">${RESULT} = [{'diff': 6.437499999999846e-05}, {'diff': 6.315299999999982e-05}, {'diff': 6.362500000000118e-05}, {'diff': 6.362500000000118e-05}, {'diff': 6.305599999999884e-05}, {'diff': 6.332000000000212e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:56.176" endtime="20201029 18:17:56.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:56.183" level="INFO">${ACCURACY} = {'diff': [6.437499999999846e-05, 6.315299999999982e-05, 6.362500000000118e-05, 6.362500000000118e-05, 6.305599999999884e-05, 6.332000000000212e-05, 6.367999999999999e-05, 6.399999999999809e-05, 6.3791...</msg>
<status status="PASS" starttime="20201029 18:17:56.180" endtime="20201029 18:17:56.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.187" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:17:56.186" endtime="20201029 18:17:56.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.190" level="INFO">VALUE: [6.437499999999846e-05, 6.315299999999982e-05, 6.362500000000118e-05, 6.362500000000118e-05, 6.305599999999884e-05, 6.332000000000212e-05, 6.367999999999999e-05, 6.399999999999809e-05, 6.379100000000054e-05, 6.324999999999734e-05, 6.363899999999728e-05, 6.34439999999993e-05, 6.374999999999784e-05, 6.355599999999934e-05, 6.379100000000054e-05, 6.3889000000001e-05, 6.318099999999896e-05, 6.386099999999839e-05, 6.393000000000024e-05, 6.362500000000118e-05, 6.348599999999802e-05, 6.312500000000068e-05, 6.380500000000011e-05, 6.379200000000002e-05, 6.323599999999777e-05, 6.369399999999956e-05, 6.3195000000002e-05, 6.312500000000068e-05, 6.387499999999796e-05, 6.370799999999913e-05, 6.336099999999789e-05, 6.355599999999934e-05, 6.37219999999987e-05, 6.343100000000268e-05, 6.39159999999972e-05, 6.313800000000078e-05, 6.304200000000273e-05, 6.379200000000002e-05, 6.311099999999764e-05, 6.318099999999896e-05, 6.349999999999759e-05, 6.305599999999884e-05, 6.37639999999974e-05, 6.341699999999964e-05, 6.361100000000161e-05, 6.336100000000136e-05, 6.3195000000002e-05, 6.374999999999784e-05, 6.304199999999927e-05, 6.348700000000096e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.188" endtime="20201029 18:17:56.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.184" endtime="20201029 18:17:56.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.195" endtime="20201029 18:17:56.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.193" endtime="20201029 18:17:56.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.192" endtime="20201029 18:17:56.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.836" endtime="20201029 18:17:56.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.836" endtime="20201029 18:17:56.215"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.224" endtime="20201029 18:17:56.242"></status>
</kw>
<msg timestamp="20201029 18:17:56.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.222" endtime="20201029 18:17:56.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.243" endtime="20201029 18:17:56.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.246" endtime="20201029 18:17:56.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.220" endtime="20201029 18:17:56.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.218" endtime="20201029 18:17:56.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.255" endtime="20201029 18:17:56.541"></status>
</kw>
<msg timestamp="20201029 18:17:56.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.253" endtime="20201029 18:17:56.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.545" endtime="20201029 18:17:56.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.553" endtime="20201029 18:17:56.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.251" endtime="20201029 18:17:56.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.249" endtime="20201029 18:17:56.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.560" level="INFO">${RESULT} = [{'diff': 6.473599999999927e-05}, {'diff': 6.498599999999952e-05}, {'diff': 6.42630000000019e-05}, {'diff': 6.406899999999993e-05}, {'diff': 6.445899999999935e-05}, {'diff': 6.444499999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:56.557" endtime="20201029 18:17:56.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:56.564" level="INFO">${ACCURACY} = {'diff': [6.473599999999927e-05, 6.498599999999952e-05, 6.42630000000019e-05, 6.406899999999993e-05, 6.445899999999935e-05, 6.444499999999978e-05, 6.484699999999982e-05, 6.501399999999866e-05, 6.40829...</msg>
<status status="PASS" starttime="20201029 18:17:56.561" endtime="20201029 18:17:56.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.568" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:17:56.567" endtime="20201029 18:17:56.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.571" level="INFO">VALUE: [6.473599999999927e-05, 6.498599999999952e-05, 6.42630000000019e-05, 6.406899999999993e-05, 6.445899999999935e-05, 6.444499999999978e-05, 6.484699999999982e-05, 6.501399999999866e-05, 6.40829999999995e-05, 6.430600000000009e-05, 6.480600000000059e-05, 6.437500000000193e-05, 6.431999999999966e-05, 6.430600000000009e-05, 6.498599999999952e-05, 6.44440000000003e-05, 6.405599999999984e-05, 6.430500000000061e-05, 6.408300000000297e-05, 6.455500000000086e-05, 6.498599999999952e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.455600000000034e-05, 6.477800000000145e-05, 6.473600000000274e-05, 6.463900000000175e-05, 6.473600000000274e-05, 6.495899999999985e-05, 6.417999999999702e-05, 6.430500000000061e-05, 6.42500000000018e-05, 6.441699999999717e-05, 6.462499999999871e-05, 6.50280000000017e-05, 6.401399999999766e-05, 6.404200000000027e-05, 6.47769999999985e-05, 6.462499999999871e-05, 6.461199999999861e-05, 6.456900000000043e-05, 6.40829999999995e-05, 6.468100000000046e-05, 6.498699999999899e-05, 6.47219999999997e-05, 6.412500000000168e-05, 6.480500000000111e-05, 6.436099999999889e-05, 6.450000000000206e-05, 6.45699999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.569" endtime="20201029 18:17:56.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.565" endtime="20201029 18:17:56.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.576" endtime="20201029 18:17:56.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.575" endtime="20201029 18:17:56.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.574" endtime="20201029 18:17:56.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.216" endtime="20201029 18:17:56.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.216" endtime="20201029 18:17:56.597"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.605" endtime="20201029 18:17:56.623"></status>
</kw>
<msg timestamp="20201029 18:17:56.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.604" endtime="20201029 18:17:56.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.624" endtime="20201029 18:17:56.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.626" endtime="20201029 18:17:56.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.601" endtime="20201029 18:17:56.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.599" endtime="20201029 18:17:56.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.635" endtime="20201029 18:17:56.921"></status>
</kw>
<msg timestamp="20201029 18:17:56.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021303639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.634" endtime="20201029 18:17:56.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021303639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.925" endtime="20201029 18:17:56.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.933" endtime="20201029 18:17:56.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.631" endtime="20201029 18:17:56.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.630" endtime="20201029 18:17:56.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.940" level="INFO">${RESULT} = [{'diff': 6.655599999999887e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.524999999999934e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.534699999999685e-05}, {'diff': 6.512499999999921e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:56.936" endtime="20201029 18:17:56.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:56.944" level="INFO">${ACCURACY} = {'diff': [6.655599999999887e-05, 6.562499999999971e-05, 6.524999999999934e-05, 6.562499999999971e-05, 6.534699999999685e-05, 6.512499999999921e-05, 6.543100000000121e-05, 6.536099999999989e-05, 6.5679...</msg>
<status status="PASS" starttime="20201029 18:17:56.941" endtime="20201029 18:17:56.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.949" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:17:56.948" endtime="20201029 18:17:56.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.951" level="INFO">VALUE: [6.655599999999887e-05, 6.562499999999971e-05, 6.524999999999934e-05, 6.562499999999971e-05, 6.534699999999685e-05, 6.512499999999921e-05, 6.543100000000121e-05, 6.536099999999989e-05, 6.567999999999852e-05, 6.518099999999749e-05, 6.555499999999839e-05, 6.551399999999916e-05, 6.592999999999877e-05, 6.561100000000014e-05, 6.530600000000109e-05, 6.536099999999989e-05, 6.554200000000177e-05, 6.516700000000139e-05, 6.598600000000052e-05, 6.536099999999989e-05, 6.541699999999817e-05, 6.509700000000007e-05, 6.586100000000039e-05, 6.579200000000202e-05, 6.504200000000127e-05, 6.536099999999989e-05, 6.566699999999842e-05, 6.561100000000014e-05, 6.518100000000096e-05, 6.529100000000204e-05, 6.565299999999885e-05, 6.52639999999989e-05, 6.527799999999848e-05, 6.573600000000027e-05, 6.551399999999916e-05, 6.543100000000121e-05, 6.586100000000039e-05, 6.538799999999956e-05, 6.579200000000202e-05, 6.542999999999827e-05, 6.541699999999817e-05, 6.5583000000001e-05, 6.531900000000118e-05, 6.505600000000084e-05, 6.586100000000039e-05, 6.505500000000136e-05, 6.587499999999996e-05, 6.548600000000002e-05, 6.570800000000113e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.950" endtime="20201029 18:17:56.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.945" endtime="20201029 18:17:56.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.956" endtime="20201029 18:17:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.955" endtime="20201029 18:17:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.954" endtime="20201029 18:17:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.598" endtime="20201029 18:17:56.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.597" endtime="20201029 18:17:56.977"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.985" endtime="20201029 18:17:57.003"></status>
</kw>
<msg timestamp="20201029 18:17:57.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.984" endtime="20201029 18:17:57.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.004" endtime="20201029 18:17:57.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.006" endtime="20201029 18:17:57.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.981" endtime="20201029 18:17:57.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.979" endtime="20201029 18:17:57.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.015" endtime="20201029 18:17:57.304"></status>
</kw>
<msg timestamp="20201029 18:17:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021207097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.014" endtime="20201029 18:17:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021207097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.308" endtime="20201029 18:17:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.316" endtime="20201029 18:17:57.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.011" endtime="20201029 18:17:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.010" endtime="20201029 18:17:57.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.323" level="INFO">${RESULT} = [{'diff': 6.744499999999931e-05}, {'diff': 6.617999999999902e-05}, {'diff': 6.67359999999978e-05}, {'diff': 6.601399999999966e-05}, {'diff': 6.616699999999892e-05}, {'diff': 6.68619999999974e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:57.320" endtime="20201029 18:17:57.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:57.327" level="INFO">${ACCURACY} = {'diff': [6.744499999999931e-05, 6.617999999999902e-05, 6.67359999999978e-05, 6.601399999999966e-05, 6.616699999999892e-05, 6.68619999999974e-05, 6.611100000000064e-05, 6.636100000000089e-05, 6.654200...</msg>
<status status="PASS" starttime="20201029 18:17:57.324" endtime="20201029 18:17:57.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.331" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:17:57.330" endtime="20201029 18:17:57.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.334" level="INFO">VALUE: [6.744499999999931e-05, 6.617999999999902e-05, 6.67359999999978e-05, 6.601399999999966e-05, 6.616699999999892e-05, 6.68619999999974e-05, 6.611100000000064e-05, 6.636100000000089e-05, 6.654200000000277e-05, 6.630599999999862e-05, 6.608400000000098e-05, 6.642999999999927e-05, 6.691699999999967e-05, 6.636099999999742e-05, 6.693100000000271e-05, 6.687499999999749e-05, 6.654200000000277e-05, 6.619399999999859e-05, 6.668099999999899e-05, 6.686099999999792e-05, 6.700000000000109e-05, 6.658299999999853e-05, 6.623600000000077e-05, 6.690200000000063e-05, 6.680600000000259e-05, 6.683400000000173e-05, 6.642999999999927e-05, 6.611099999999717e-05, 6.686100000000139e-05, 6.661099999999767e-05, 6.655599999999887e-05, 6.632000000000166e-05, 6.692999999999977e-05, 6.65280000000032e-05, 6.617999999999902e-05, 6.645900000000135e-05, 6.634700000000132e-05, 6.606999999999794e-05, 6.65700000000019e-05, 6.648600000000102e-05, 6.67220000000017e-05, 6.695799999999891e-05, 6.623600000000077e-05, 6.686099999999792e-05, 6.619399999999859e-05, 6.684699999999835e-05, 6.643099999999874e-05, 6.648599999999755e-05, 6.684700000000182e-05, 6.666699999999942e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.332" endtime="20201029 18:17:57.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.328" endtime="20201029 18:17:57.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.339" endtime="20201029 18:17:57.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.337" endtime="20201029 18:17:57.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.336" endtime="20201029 18:17:57.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.978" endtime="20201029 18:17:57.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.977" endtime="20201029 18:17:57.359"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.368" endtime="20201029 18:17:57.386"></status>
</kw>
<msg timestamp="20201029 18:17:57.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.366" endtime="20201029 18:17:57.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.388" endtime="20201029 18:17:57.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.390" endtime="20201029 18:17:57.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.364" endtime="20201029 18:17:57.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.362" endtime="20201029 18:17:57.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.399" endtime="20201029 18:17:57.683"></status>
</kw>
<msg timestamp="20201029 18:17:57.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.397" endtime="20201029 18:17:57.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.688" endtime="20201029 18:17:57.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.696" endtime="20201029 18:17:57.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.395" endtime="20201029 18:17:57.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.393" endtime="20201029 18:17:57.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.702" level="INFO">${RESULT} = [{'diff': 6.841700000000117e-05}, {'diff': 6.718000000000002e-05}, {'diff': 6.716699999999992e-05}, {'diff': 6.701399999999719e-05}, {'diff': 6.791700000000067e-05}, {'diff': 6.716600000000045e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:57.699" endtime="20201029 18:17:57.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:57.706" level="INFO">${ACCURACY} = {'diff': [6.841700000000117e-05, 6.718000000000002e-05, 6.716699999999992e-05, 6.701399999999719e-05, 6.791700000000067e-05, 6.716600000000045e-05, 6.743099999999974e-05, 6.80420000000008e-05, 6.74860...</msg>
<status status="PASS" starttime="20201029 18:17:57.703" endtime="20201029 18:17:57.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.711" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:17:57.710" endtime="20201029 18:17:57.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.713" level="INFO">VALUE: [6.841700000000117e-05, 6.718000000000002e-05, 6.716699999999992e-05, 6.701399999999719e-05, 6.791700000000067e-05, 6.716600000000045e-05, 6.743099999999974e-05, 6.80420000000008e-05, 6.748600000000202e-05, 6.748700000000149e-05, 6.761099999999867e-05, 6.748600000000202e-05, 6.766600000000095e-05, 6.716699999999992e-05, 6.723600000000177e-05, 6.70969999999986e-05, 6.711200000000112e-05, 6.723600000000177e-05, 6.706900000000293e-05, 6.70419999999998e-05, 6.736099999999842e-05, 6.761100000000214e-05, 6.734799999999833e-05, 6.734700000000232e-05, 6.77220000000027e-05, 6.730500000000014e-05, 6.741700000000017e-05, 6.723600000000177e-05, 6.765300000000085e-05, 6.768099999999999e-05, 6.770899999999913e-05, 6.793000000000077e-05, 6.752800000000073e-05, 6.786099999999892e-05, 6.723600000000177e-05, 6.748599999999855e-05, 6.745800000000288e-05, 6.79030000000011e-05, 6.737500000000146e-05, 6.748600000000202e-05, 6.780600000000012e-05, 6.733399999999876e-05, 6.718000000000002e-05, 6.743000000000027e-05, 6.716699999999992e-05, 6.708400000000198e-05, 6.713800000000131e-05, 6.787499999999849e-05, 6.766700000000042e-05, 6.723699999999777e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.712" endtime="20201029 18:17:57.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.707" endtime="20201029 18:17:57.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.719" endtime="20201029 18:17:57.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.717" endtime="20201029 18:17:57.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.716" endtime="20201029 18:17:57.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.360" endtime="20201029 18:17:57.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.360" endtime="20201029 18:17:57.739"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.748" endtime="20201029 18:17:57.765"></status>
</kw>
<msg timestamp="20201029 18:17:57.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.746" endtime="20201029 18:17:57.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.767" endtime="20201029 18:17:57.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.769" endtime="20201029 18:17:57.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.744" endtime="20201029 18:17:57.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.742" endtime="20201029 18:17:57.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.778" endtime="20201029 18:17:58.063"></status>
</kw>
<msg timestamp="20201029 18:17:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.776" endtime="20201029 18:17:58.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.068" endtime="20201029 18:17:58.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.076" endtime="20201029 18:17:58.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.774" endtime="20201029 18:17:58.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.772" endtime="20201029 18:17:58.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.082" level="INFO">${RESULT} = [{'diff': 6.922200000000073e-05}, {'diff': 6.833300000000028e-05}, {'diff': 6.872200000000023e-05}, {'diff': 6.800000000000209e-05}, {'diff': 6.898600000000005e-05}, {'diff': 6.847199999999998e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:58.079" endtime="20201029 18:17:58.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:58.087" level="INFO">${ACCURACY} = {'diff': [6.922200000000073e-05, 6.833300000000028e-05, 6.872200000000023e-05, 6.800000000000209e-05, 6.898600000000005e-05, 6.847199999999998e-05, 6.82359999999993e-05, 6.856900000000096e-05, 6.89860...</msg>
<status status="PASS" starttime="20201029 18:17:58.083" endtime="20201029 18:17:58.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.091" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:17:58.090" endtime="20201029 18:17:58.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.094" level="INFO">VALUE: [6.922200000000073e-05, 6.833300000000028e-05, 6.872200000000023e-05, 6.800000000000209e-05, 6.898600000000005e-05, 6.847199999999998e-05, 6.82359999999993e-05, 6.856900000000096e-05, 6.898600000000005e-05, 6.82359999999993e-05, 6.899999999999962e-05, 6.891599999999873e-05, 6.87359999999998e-05, 6.848599999999955e-05, 6.884700000000035e-05, 6.877699999999903e-05, 6.804099999999785e-05, 6.883400000000026e-05, 6.82359999999993e-05, 6.818099999999702e-05, 6.848599999999955e-05, 6.877799999999851e-05, 6.813899999999831e-05, 6.808300000000003e-05, 6.879200000000155e-05, 6.868000000000152e-05, 6.884700000000035e-05, 6.887499999999949e-05, 6.811099999999917e-05, 6.830600000000062e-05, 6.811099999999917e-05, 6.87359999999998e-05, 6.848599999999955e-05, 6.874999999999937e-05, 6.894499999999734e-05, 6.868100000000099e-05, 6.893100000000124e-05, 6.898600000000005e-05, 6.816700000000092e-05, 6.898600000000005e-05, 6.861099999999967e-05, 6.829200000000105e-05, 6.82909999999981e-05, 6.879100000000207e-05, 6.818000000000102e-05, 6.87359999999998e-05, 6.827799999999801e-05, 6.89169999999982e-05, 6.861099999999967e-05, 6.82359999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.092" endtime="20201029 18:17:58.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.088" endtime="20201029 18:17:58.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.099" endtime="20201029 18:17:58.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.097" endtime="20201029 18:17:58.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.096" endtime="20201029 18:17:58.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.740" endtime="20201029 18:17:58.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.740" endtime="20201029 18:17:58.119"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.128" endtime="20201029 18:17:58.145"></status>
</kw>
<msg timestamp="20201029 18:17:58.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.126" endtime="20201029 18:17:58.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.147" endtime="20201029 18:17:58.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.149" endtime="20201029 18:17:58.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.124" endtime="20201029 18:17:58.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.122" endtime="20201029 18:17:58.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.158" endtime="20201029 18:17:58.445"></status>
</kw>
<msg timestamp="20201029 18:17:58.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02134275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:58.157" endtime="20201029 18:17:58.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02134275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:58.449" endtime="20201029 18:17:58.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.457" endtime="20201029 18:17:58.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.154" endtime="20201029 18:17:58.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.152" endtime="20201029 18:17:58.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.464" level="INFO">${RESULT} = [{'diff': 7.048599999999808e-05}, {'diff': 6.920899999999716e-05}, {'diff': 6.980499999999917e-05}, {'diff': 6.908300000000103e-05}, {'diff': 6.91109999999967e-05}, {'diff': 6.922200000000073e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:58.461" endtime="20201029 18:17:58.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:58.468" level="INFO">${ACCURACY} = {'diff': [7.048599999999808e-05, 6.920899999999716e-05, 6.980499999999917e-05, 6.908300000000103e-05, 6.91109999999967e-05, 6.922200000000073e-05, 6.919500000000106e-05, 6.979199999999908e-05, 6.92090...</msg>
<status status="PASS" starttime="20201029 18:17:58.465" endtime="20201029 18:17:58.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.473" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:17:58.472" endtime="20201029 18:17:58.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.475" level="INFO">VALUE: [7.048599999999808e-05, 6.920899999999716e-05, 6.980499999999917e-05, 6.908300000000103e-05, 6.91109999999967e-05, 6.922200000000073e-05, 6.919500000000106e-05, 6.979199999999908e-05, 6.920900000000063e-05, 6.934700000000085e-05, 6.987499999999702e-05, 6.918100000000149e-05, 6.938900000000303e-05, 6.927699999999953e-05, 6.984700000000135e-05, 6.995900000000138e-05, 6.926399999999944e-05, 6.941700000000217e-05, 6.922199999999726e-05, 6.933300000000128e-05, 6.947199999999751e-05, 6.927799999999901e-05, 6.941599999999923e-05, 6.927799999999901e-05, 6.983300000000178e-05, 6.927800000000248e-05, 6.915299999999888e-05, 6.90840000000005e-05, 6.911100000000017e-05, 6.983300000000178e-05, 6.977700000000003e-05, 6.923699999999977e-05, 6.926399999999944e-05, 6.994500000000181e-05, 7.001400000000019e-05, 6.995800000000191e-05, 6.961100000000067e-05, 6.977799999999951e-05, 6.984699999999788e-05, 6.97909999999996e-05, 6.958300000000153e-05, 6.95970000000011e-05, 6.945800000000141e-05, 6.990299999999963e-05, 6.984700000000135e-05, 6.934700000000085e-05, 6.988900000000006e-05, 6.927699999999953e-05, 7.002799999999976e-05, 6.988800000000059e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.474" endtime="20201029 18:17:58.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.469" endtime="20201029 18:17:58.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.480" endtime="20201029 18:17:58.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.479" endtime="20201029 18:17:58.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.478" endtime="20201029 18:17:58.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.120" endtime="20201029 18:17:58.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.120" endtime="20201029 18:17:58.501"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.509" endtime="20201029 18:17:58.528"></status>
</kw>
<msg timestamp="20201029 18:17:58.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.508" endtime="20201029 18:17:58.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.529" endtime="20201029 18:17:58.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.532" endtime="20201029 18:17:58.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.505" endtime="20201029 18:17:58.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.503" endtime="20201029 18:17:58.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.540" endtime="20201029 18:17:58.826"></status>
</kw>
<msg timestamp="20201029 18:17:58.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.539" endtime="20201029 18:17:58.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.830" endtime="20201029 18:17:58.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.839" endtime="20201029 18:17:58.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.536" endtime="20201029 18:17:58.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.535" endtime="20201029 18:17:58.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.845" level="INFO">${RESULT} = [{'diff': 7.090199999999769e-05}, {'diff': 7.077800000000051e-05}, {'diff': 7.049999999999765e-05}, {'diff': 7.020800000000216e-05}, {'diff': 7.062500000000124e-05}, {'diff': 7.023599999999783e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:58.842" endtime="20201029 18:17:58.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:58.849" level="INFO">${ACCURACY} = {'diff': [7.090199999999769e-05, 7.077800000000051e-05, 7.049999999999765e-05, 7.020800000000216e-05, 7.062500000000124e-05, 7.023599999999783e-05, 7.01109999999977e-05, 7.072199999999876e-05, 7.05689...</msg>
<status status="PASS" starttime="20201029 18:17:58.846" endtime="20201029 18:17:58.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.853" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:17:58.852" endtime="20201029 18:17:58.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.856" level="INFO">VALUE: [7.090199999999769e-05, 7.077800000000051e-05, 7.049999999999765e-05, 7.020800000000216e-05, 7.062500000000124e-05, 7.023599999999783e-05, 7.01109999999977e-05, 7.072199999999876e-05, 7.05689999999995e-05, 7.011100000000117e-05, 7.04169999999997e-05, 7.088800000000159e-05, 7.050000000000112e-05, 7.07360000000018e-05, 7.009800000000108e-05, 7.027700000000053e-05, 7.058299999999906e-05, 7.077800000000051e-05, 7.09170000000002e-05, 7.044399999999937e-05, 7.084700000000235e-05, 7.023599999999783e-05, 7.040200000000066e-05, 7.00559999999989e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.095799999999944e-05, 7.022200000000173e-05, 7.009800000000108e-05, 7.045800000000241e-05, 7.065300000000038e-05, 7.052700000000078e-05, 7.013900000000031e-05, 7.02360000000013e-05, 7.016699999999945e-05, 7.015299999999988e-05, 7.084699999999888e-05, 7.033299999999881e-05, 7.02360000000013e-05, 7.06109999999982e-05, 7.001400000000019e-05, 7.034699999999838e-05, 7.026400000000044e-05, 7.015299999999988e-05, 7.022200000000173e-05, 7.044399999999937e-05, 7.022199999999826e-05, 7.097199999999901e-05, 7.040300000000013e-05, 7.016599999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.854" endtime="20201029 18:17:58.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.850" endtime="20201029 18:17:58.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.868" endtime="20201029 18:17:58.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.866" endtime="20201029 18:17:58.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.865" endtime="20201029 18:17:58.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.502" endtime="20201029 18:17:58.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.501" endtime="20201029 18:17:58.889"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.897" endtime="20201029 18:17:58.914"></status>
</kw>
<msg timestamp="20201029 18:17:58.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.895" endtime="20201029 18:17:58.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.916" endtime="20201029 18:17:58.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.918" endtime="20201029 18:17:58.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.893" endtime="20201029 18:17:58.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.891" endtime="20201029 18:17:58.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.927" endtime="20201029 18:17:59.214"></status>
</kw>
<msg timestamp="20201029 18:17:59.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021275028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.926" endtime="20201029 18:17:59.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021275028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.218" endtime="20201029 18:17:59.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.226" endtime="20201029 18:17:59.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.923" endtime="20201029 18:17:59.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.921" endtime="20201029 18:17:59.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.232" level="INFO">${RESULT} = [{'diff': 7.241599999999876e-05}, {'diff': 7.138900000000156e-05}, {'diff': 7.154200000000083e-05}, {'diff': 7.134799999999886e-05}, {'diff': 7.108299999999956e-05}, {'diff': 7.177799999999804e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:59.229" endtime="20201029 18:17:59.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:59.237" level="INFO">${ACCURACY} = {'diff': [7.241599999999876e-05, 7.138900000000156e-05, 7.154200000000083e-05, 7.134799999999886e-05, 7.108299999999956e-05, 7.177799999999804e-05, 7.127800000000101e-05, 7.152799999999779e-05, 7.1153...</msg>
<status status="PASS" starttime="20201029 18:17:59.233" endtime="20201029 18:17:59.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.242" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:17:59.241" endtime="20201029 18:17:59.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.244" level="INFO">VALUE: [7.241599999999876e-05, 7.138900000000156e-05, 7.154200000000083e-05, 7.134799999999886e-05, 7.108299999999956e-05, 7.177799999999804e-05, 7.127800000000101e-05, 7.152799999999779e-05, 7.115300000000088e-05, 7.151399999999822e-05, 7.126400000000144e-05, 7.126399999999797e-05, 7.179199999999761e-05, 7.115200000000141e-05, 7.138900000000156e-05, 7.134700000000285e-05, 7.136099999999895e-05, 7.165299999999791e-05, 7.138899999999809e-05, 7.156999999999997e-05, 7.147199999999951e-05, 7.1069e-05, 7.190199999999869e-05, 7.159699999999963e-05, 7.116700000000045e-05, 7.151400000000169e-05, 7.100000000000162e-05, 7.156999999999997e-05, 7.168000000000105e-05, 7.122200000000273e-05, 7.193100000000077e-05, 7.173599999999933e-05, 7.170800000000019e-05, 7.129099999999763e-05, 7.101400000000119e-05, 7.19170000000012e-05, 7.102799999999729e-05, 7.191699999999773e-05, 7.104199999999686e-05, 7.10840000000025e-05, 7.145799999999994e-05, 7.115300000000088e-05, 7.197200000000001e-05, 7.152699999999831e-05, 7.165299999999791e-05, 7.187499999999902e-05, 7.113899999999784e-05, 7.098599999999858e-05, 7.17360000000028e-05, 7.136100000000242e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.243" endtime="20201029 18:17:59.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.238" endtime="20201029 18:17:59.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.249" endtime="20201029 18:17:59.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.248" endtime="20201029 18:17:59.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.246" endtime="20201029 18:17:59.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.889" endtime="20201029 18:17:59.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.889" endtime="20201029 18:17:59.270"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.278" endtime="20201029 18:17:59.296"></status>
</kw>
<msg timestamp="20201029 18:17:59.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.277" endtime="20201029 18:17:59.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.297" endtime="20201029 18:17:59.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.300" endtime="20201029 18:17:59.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.274" endtime="20201029 18:17:59.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.272" endtime="20201029 18:17:59.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.309" endtime="20201029 18:17:59.596"></status>
</kw>
<msg timestamp="20201029 18:17:59.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021446556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.307" endtime="20201029 18:17:59.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021446556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.600" endtime="20201029 18:17:59.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.608" endtime="20201029 18:17:59.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.304" endtime="20201029 18:17:59.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.303" endtime="20201029 18:17:59.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.614" level="INFO">${RESULT} = [{'diff': 7.311200000000018e-05}, {'diff': 7.270900000000066e-05}, {'diff': 7.227699999999906e-05}, {'diff': 7.215300000000188e-05}, {'diff': 7.290299999999916e-05}, {'diff': 7.219500000000059e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:59.611" endtime="20201029 18:17:59.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:59.619" level="INFO">${ACCURACY} = {'diff': [7.311200000000018e-05, 7.270900000000066e-05, 7.227699999999906e-05, 7.215300000000188e-05, 7.290299999999916e-05, 7.219500000000059e-05, 7.290299999999916e-05, 7.212499999999927e-05, 7.2513...</msg>
<status status="PASS" starttime="20201029 18:17:59.615" endtime="20201029 18:17:59.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.623" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:17:59.622" endtime="20201029 18:17:59.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.625" level="INFO">VALUE: [7.311200000000018e-05, 7.270900000000066e-05, 7.227699999999906e-05, 7.215300000000188e-05, 7.290299999999916e-05, 7.219500000000059e-05, 7.290299999999916e-05, 7.212499999999927e-05, 7.251399999999922e-05, 7.198600000000305e-05, 7.208400000000004e-05, 7.205499999999795e-05, 7.238899999999909e-05, 7.220800000000069e-05, 7.218000000000155e-05, 7.213900000000231e-05, 7.207000000000047e-05, 7.270800000000119e-05, 7.229200000000158e-05, 7.209799999999961e-05, 7.258300000000106e-05, 7.284699999999741e-05, 7.231900000000124e-05, 7.295800000000144e-05, 7.290300000000263e-05, 7.290299999999916e-05, 7.290299999999916e-05, 7.269500000000109e-05, 7.234700000000038e-05, 7.294500000000134e-05, 7.240299999999866e-05, 7.213899999999884e-05, 7.283299999999784e-05, 7.229200000000158e-05, 7.295899999999744e-05, 7.263899999999934e-05, 7.257000000000097e-05, 7.231900000000124e-05, 7.204200000000133e-05, 7.259699999999716e-05, 7.234700000000038e-05, 7.227799999999854e-05, 7.220800000000069e-05, 7.262499999999977e-05, 7.252799999999879e-05, 7.245800000000094e-05, 7.258400000000054e-05, 7.240300000000213e-05, 7.279199999999861e-05, 7.258300000000106e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.624" endtime="20201029 18:17:59.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.619" endtime="20201029 18:17:59.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.630" endtime="20201029 18:17:59.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.629" endtime="20201029 18:17:59.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.628" endtime="20201029 18:17:59.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.271" endtime="20201029 18:17:59.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.270" endtime="20201029 18:17:59.651"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.659" endtime="20201029 18:17:59.678"></status>
</kw>
<msg timestamp="20201029 18:17:59.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.658" endtime="20201029 18:17:59.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.679" endtime="20201029 18:17:59.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.682" endtime="20201029 18:17:59.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.655" endtime="20201029 18:17:59.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.653" endtime="20201029 18:17:59.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.691" endtime="20201029 18:17:59.976"></status>
</kw>
<msg timestamp="20201029 18:17:59.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.689" endtime="20201029 18:17:59.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.980" endtime="20201029 18:17:59.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.988" endtime="20201029 18:17:59.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.686" endtime="20201029 18:17:59.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.685" endtime="20201029 18:17:59.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.995" level="INFO">${RESULT} = [{'diff': 7.395900000000191e-05}, {'diff': 7.342999999999933e-05}, {'diff': 7.391600000000026e-05}, {'diff': 7.352799999999979e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.333400000000129e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:59.992" endtime="20201029 18:17:59.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:59.999" level="INFO">${ACCURACY} = {'diff': [7.395900000000191e-05, 7.342999999999933e-05, 7.391600000000026e-05, 7.352799999999979e-05, 7.316699999999898e-05, 7.333400000000129e-05, 7.340299999999966e-05, 7.383300000000231e-05, 7.3598...</msg>
<status status="PASS" starttime="20201029 18:17:59.996" endtime="20201029 18:17:59.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.003" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:18:00.002" endtime="20201029 18:18:00.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.005" level="INFO">VALUE: [7.395900000000191e-05, 7.342999999999933e-05, 7.391600000000026e-05, 7.352799999999979e-05, 7.316699999999898e-05, 7.333400000000129e-05, 7.340299999999966e-05, 7.383300000000231e-05, 7.359800000000111e-05, 7.304199999999886e-05, 7.383299999999884e-05, 7.390300000000016e-05, 7.397299999999801e-05, 7.377800000000004e-05, 7.345899999999794e-05, 7.377800000000004e-05, 7.386100000000145e-05, 7.366699999999948e-05, 7.338800000000062e-05, 7.333299999999834e-05, 7.307000000000147e-05, 7.300000000000015e-05, 7.387500000000102e-05, 7.379199999999961e-05, 7.395800000000244e-05, 7.302799999999929e-05, 7.345899999999794e-05, 7.384699999999841e-05, 7.322300000000073e-05, 7.383400000000179e-05, 7.302799999999929e-05, 7.352799999999979e-05, 7.322200000000126e-05, 7.369399999999915e-05, 7.338900000000009e-05, 7.302699999999981e-05, 7.395799999999897e-05, 7.377800000000004e-05, 7.344499999999837e-05, 7.369400000000262e-05, 7.34439999999989e-05, 7.383399999999832e-05, 7.369499999999862e-05, 7.301399999999972e-05, 7.319500000000159e-05, 7.379100000000013e-05, 7.377800000000004e-05, 7.376400000000047e-05, 7.377800000000004e-05, 7.365200000000044e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.004" endtime="20201029 18:18:00.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.000" endtime="20201029 18:18:00.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.011" endtime="20201029 18:18:00.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.010" endtime="20201029 18:18:00.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.009" endtime="20201029 18:18:00.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.652" endtime="20201029 18:18:00.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.651" endtime="20201029 18:18:00.032"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.040" endtime="20201029 18:18:00.058"></status>
</kw>
<msg timestamp="20201029 18:18:00.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.039" endtime="20201029 18:18:00.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.060" endtime="20201029 18:18:00.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.062" endtime="20201029 18:18:00.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.036" endtime="20201029 18:18:00.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.034" endtime="20201029 18:18:00.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.071" endtime="20201029 18:18:00.357"></status>
</kw>
<msg timestamp="20201029 18:18:00.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.069" endtime="20201029 18:18:00.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.361" endtime="20201029 18:18:00.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.369" endtime="20201029 18:18:00.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.067" endtime="20201029 18:18:00.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.065" endtime="20201029 18:18:00.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.375" level="INFO">${RESULT} = [{'diff': 7.524999999999893e-05}, {'diff': 7.426400000000097e-05}, {'diff': 7.451400000000122e-05}, {'diff': 7.436100000000195e-05}, {'diff': 7.409699999999866e-05}, {'diff': 7.468000000000058e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:00.372" endtime="20201029 18:18:00.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:00.380" level="INFO">${ACCURACY} = {'diff': [7.524999999999893e-05, 7.426400000000097e-05, 7.451400000000122e-05, 7.436100000000195e-05, 7.409699999999866e-05, 7.468000000000058e-05, 7.472199999999929e-05, 7.470799999999972e-05, 7.4889...</msg>
<status status="PASS" starttime="20201029 18:18:00.376" endtime="20201029 18:18:00.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.384" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:18:00.383" endtime="20201029 18:18:00.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.387" level="INFO">VALUE: [7.524999999999893e-05, 7.426400000000097e-05, 7.451400000000122e-05, 7.436100000000195e-05, 7.409699999999866e-05, 7.468000000000058e-05, 7.472199999999929e-05, 7.470799999999972e-05, 7.488900000000159e-05, 7.476400000000147e-05, 7.47370000000018e-05, 7.433399999999882e-05, 7.461099999999873e-05, 7.408400000000204e-05, 7.46249999999983e-05, 7.45829999999996e-05, 7.477800000000104e-05, 7.497300000000248e-05, 7.458300000000306e-05, 7.445799999999947e-05, 7.433299999999934e-05, 7.443000000000033e-05, 7.458400000000254e-05, 7.420900000000216e-05, 7.477799999999757e-05, 7.463800000000187e-05, 7.434699999999891e-05, 7.486100000000245e-05, 7.415200000000094e-05, 7.402800000000029e-05, 7.420799999999922e-05, 7.484800000000236e-05, 7.479200000000061e-05, 7.476400000000147e-05, 7.445799999999947e-05, 7.40829999999991e-05, 7.454100000000088e-05, 7.491700000000073e-05, 7.495799999999997e-05, 7.429200000000011e-05, 7.415300000000041e-05, 7.40829999999991e-05, 7.480600000000018e-05, 7.483400000000279e-05, 7.4069999999999e-05, 7.426400000000097e-05, 7.449999999999818e-05, 7.497199999999954e-05, 7.472199999999929e-05, 7.45829999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.386" endtime="20201029 18:18:00.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.381" endtime="20201029 18:18:00.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.392" endtime="20201029 18:18:00.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.390" endtime="20201029 18:18:00.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.389" endtime="20201029 18:18:00.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.033" endtime="20201029 18:18:00.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.032" endtime="20201029 18:18:00.412"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.421" endtime="20201029 18:18:00.439"></status>
</kw>
<msg timestamp="20201029 18:18:00.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.419" endtime="20201029 18:18:00.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.440" endtime="20201029 18:18:00.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.443" endtime="20201029 18:18:00.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.417" endtime="20201029 18:18:00.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.415" endtime="20201029 18:18:00.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.451" endtime="20201029 18:18:00.742"></status>
</kw>
<msg timestamp="20201029 18:18:00.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021321486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.450" endtime="20201029 18:18:00.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021321486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.746" endtime="20201029 18:18:00.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.754" endtime="20201029 18:18:00.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.447" endtime="20201029 18:18:00.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.446" endtime="20201029 18:18:00.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.760" level="INFO">${RESULT} = [{'diff': 7.619500000000112e-05}, {'diff': 7.509699999999966e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.569399999999768e-05}, {'diff': 7.561099999999973e-05}, {'diff': 7.572200000000029e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:00.757" endtime="20201029 18:18:00.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:00.764" level="INFO">${ACCURACY} = {'diff': [7.619500000000112e-05, 7.509699999999966e-05, 7.549999999999918e-05, 7.569399999999768e-05, 7.561099999999973e-05, 7.572200000000029e-05, 7.513899999999837e-05, 7.569400000000115e-05, 7.5264...</msg>
<status status="PASS" starttime="20201029 18:18:00.761" endtime="20201029 18:18:00.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.769" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:18:00.768" endtime="20201029 18:18:00.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.771" level="INFO">VALUE: [7.619500000000112e-05, 7.509699999999966e-05, 7.549999999999918e-05, 7.569399999999768e-05, 7.561099999999973e-05, 7.572200000000029e-05, 7.513899999999837e-05, 7.569400000000115e-05, 7.526400000000197e-05, 7.549999999999918e-05, 7.5763999999999e-05, 7.518000000000108e-05, 7.579100000000213e-05, 7.588899999999912e-05, 7.519500000000012e-05, 7.504200000000086e-05, 7.522199999999979e-05, 7.551399999999875e-05, 7.56110000000032e-05, 7.593099999999783e-05, 7.498600000000258e-05, 7.540300000000166e-05, 7.507e-05, 7.537499999999905e-05, 7.518100000000055e-05, 7.522299999999926e-05, 7.579200000000161e-05, 7.549999999999918e-05, 7.536099999999948e-05, 7.577800000000204e-05, 7.555500000000145e-05, 7.594399999999793e-05, 7.583299999999737e-05, 7.568100000000105e-05, 7.569400000000115e-05, 7.59449999999974e-05, 7.533399999999982e-05, 7.518099999999708e-05, 7.520800000000022e-05, 7.542999999999786e-05, 7.520800000000022e-05, 7.50830000000001e-05, 7.505600000000043e-05, 7.569400000000115e-05, 7.541600000000176e-05, 7.529199999999764e-05, 7.588899999999912e-05, 7.54440000000009e-05, 7.515300000000141e-05, 7.579099999999866e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.770" endtime="20201029 18:18:00.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.765" endtime="20201029 18:18:00.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.776" endtime="20201029 18:18:00.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.774" endtime="20201029 18:18:00.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.773" endtime="20201029 18:18:00.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.413" endtime="20201029 18:18:00.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.413" endtime="20201029 18:18:00.796"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.805" endtime="20201029 18:18:00.824"></status>
</kw>
<msg timestamp="20201029 18:18:00.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.803" endtime="20201029 18:18:00.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.825" endtime="20201029 18:18:00.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.828" endtime="20201029 18:18:00.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.801" endtime="20201029 18:18:00.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.799" endtime="20201029 18:18:00.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.836" endtime="20201029 18:18:01.124"></status>
</kw>
<msg timestamp="20201029 18:18:01.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.835" endtime="20201029 18:18:01.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.128" endtime="20201029 18:18:01.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.136" endtime="20201029 18:18:01.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.832" endtime="20201029 18:18:01.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.831" endtime="20201029 18:18:01.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.143" level="INFO">${RESULT} = [{'diff': 7.744399999999943e-05}, {'diff': 7.63189999999983e-05}, {'diff': 7.608400000000057e-05}, {'diff': 7.613899999999937e-05}, {'diff': 7.684700000000141e-05}, {'diff': 7.636100000000048e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:01.139" endtime="20201029 18:18:01.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:01.147" level="INFO">${ACCURACY} = {'diff': [7.744399999999943e-05, 7.63189999999983e-05, 7.608400000000057e-05, 7.613899999999937e-05, 7.684700000000141e-05, 7.636100000000048e-05, 7.63189999999983e-05, 7.665299999999944e-05, 7.638900...</msg>
<status status="PASS" starttime="20201029 18:18:01.143" endtime="20201029 18:18:01.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.151" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:18:01.150" endtime="20201029 18:18:01.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.153" level="INFO">VALUE: [7.744399999999943e-05, 7.63189999999983e-05, 7.608400000000057e-05, 7.613899999999937e-05, 7.684700000000141e-05, 7.636100000000048e-05, 7.63189999999983e-05, 7.665299999999944e-05, 7.63890000000031e-05, 7.605599999999796e-05, 7.655600000000193e-05, 7.66250000000003e-05, 7.688900000000012e-05, 7.651399999999975e-05, 7.618099999999808e-05, 7.69029999999997e-05, 7.655600000000193e-05, 7.66250000000003e-05, 7.627800000000254e-05, 7.644500000000137e-05, 7.637500000000005e-05, 7.679200000000261e-05, 7.669500000000162e-05, 7.61249999999998e-05, 7.669500000000162e-05, 7.6764e-05, 7.648700000000008e-05, 7.608400000000057e-05, 7.655600000000193e-05, 7.609700000000066e-05, 7.675000000000043e-05, 7.68189999999988e-05, 7.599999999999968e-05, 7.694500000000187e-05, 7.624999999999993e-05, 7.620900000000069e-05, 7.633300000000134e-05, 7.663899999999987e-05, 7.66250000000003e-05, 7.648600000000061e-05, 7.6457999999998e-05, 7.6764e-05, 7.666699999999901e-05, 7.656899999999855e-05, 7.619400000000165e-05, 7.683299999999837e-05, 7.656899999999855e-05, 7.66380000000004e-05, 7.613899999999937e-05, 7.668099999999858e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.152" endtime="20201029 18:18:01.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.147" endtime="20201029 18:18:01.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.159" endtime="20201029 18:18:01.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.158" endtime="20201029 18:18:01.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.156" endtime="20201029 18:18:01.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.797" endtime="20201029 18:18:01.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.797" endtime="20201029 18:18:01.180"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.188" endtime="20201029 18:18:01.206"></status>
</kw>
<msg timestamp="20201029 18:18:01.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.187" endtime="20201029 18:18:01.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.208" endtime="20201029 18:18:01.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.210" endtime="20201029 18:18:01.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.184" endtime="20201029 18:18:01.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.182" endtime="20201029 18:18:01.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.219" endtime="20201029 18:18:01.506"></status>
</kw>
<msg timestamp="20201029 18:18:01.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02133975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021418181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:01.218" endtime="20201029 18:18:01.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02133975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021418181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:01.510" endtime="20201029 18:18:01.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.518" endtime="20201029 18:18:01.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.215" endtime="20201029 18:18:01.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.213" endtime="20201029 18:18:01.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.525" level="INFO">${RESULT} = [{'diff': 7.843100000000033e-05}, {'diff': 7.725000000000093e-05}, {'diff': 7.779100000000067e-05}, {'diff': 7.734700000000191e-05}, {'diff': 7.720799999999875e-05}, {'diff': 7.743099999999933e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:01.522" endtime="20201029 18:18:01.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:01.530" level="INFO">${ACCURACY} = {'diff': [7.843100000000033e-05, 7.725000000000093e-05, 7.779100000000067e-05, 7.734700000000191e-05, 7.720799999999875e-05, 7.743099999999933e-05, 7.730499999999974e-05, 7.779199999999667e-05, 7.7541...</msg>
<status status="PASS" starttime="20201029 18:18:01.526" endtime="20201029 18:18:01.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.534" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:18:01.533" endtime="20201029 18:18:01.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.536" level="INFO">VALUE: [7.843100000000033e-05, 7.725000000000093e-05, 7.779100000000067e-05, 7.734700000000191e-05, 7.720799999999875e-05, 7.743099999999933e-05, 7.730499999999974e-05, 7.779199999999667e-05, 7.754100000000042e-05, 7.722200000000179e-05, 7.719399999999918e-05, 7.791700000000026e-05, 7.761100000000173e-05, 7.719499999999865e-05, 7.773599999999839e-05, 7.725000000000093e-05, 7.787500000000155e-05, 7.77909999999972e-05, 7.773599999999839e-05, 7.730599999999921e-05, 7.791700000000026e-05, 7.742999999999986e-05, 7.751399999999728e-05, 7.737499999999758e-05, 7.755599999999946e-05, 7.784800000000189e-05, 7.737500000000105e-05, 7.779100000000067e-05, 7.711200000000071e-05, 7.754100000000042e-05, 7.748600000000161e-05, 7.791600000000079e-05, 7.709700000000166e-05, 7.698600000000111e-05, 7.700000000000068e-05, 7.787500000000155e-05, 7.698600000000111e-05, 7.698599999999764e-05, 7.79310000000033e-05, 7.711200000000071e-05, 7.706899999999905e-05, 7.751400000000075e-05, 7.768000000000011e-05, 7.76250000000013e-05, 7.711100000000123e-05, 7.754100000000042e-05, 7.737500000000105e-05, 7.795899999999897e-05, 7.77909999999972e-05, 7.701400000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.535" endtime="20201029 18:18:01.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.531" endtime="20201029 18:18:01.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.541" endtime="20201029 18:18:01.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.540" endtime="20201029 18:18:01.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.539" endtime="20201029 18:18:01.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.181" endtime="20201029 18:18:01.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.180" endtime="20201029 18:18:01.562"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.571" endtime="20201029 18:18:01.588"></status>
</kw>
<msg timestamp="20201029 18:18:01.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.569" endtime="20201029 18:18:01.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.590" endtime="20201029 18:18:01.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.592" endtime="20201029 18:18:01.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.566" endtime="20201029 18:18:01.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.564" endtime="20201029 18:18:01.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.601" endtime="20201029 18:18:01.889"></status>
</kw>
<msg timestamp="20201029 18:18:01.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021521444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.600" endtime="20201029 18:18:01.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021521444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.893" endtime="20201029 18:18:01.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.901" endtime="20201029 18:18:01.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.597" endtime="20201029 18:18:01.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.595" endtime="20201029 18:18:01.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.908" level="INFO">${RESULT} = [{'diff': 7.938799999999968e-05}, {'diff': 7.830600000000021e-05}, {'diff': 7.893099999999736e-05}, {'diff': 7.854200000000089e-05}, {'diff': 7.824999999999846e-05}, {'diff': 7.894400000000093e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:01.904" endtime="20201029 18:18:01.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:01.912" level="INFO">${ACCURACY} = {'diff': [7.938799999999968e-05, 7.830600000000021e-05, 7.893099999999736e-05, 7.854200000000089e-05, 7.824999999999846e-05, 7.894400000000093e-05, 7.848599999999914e-05, 7.892999999999789e-05, 7.8110...</msg>
<status status="PASS" starttime="20201029 18:18:01.909" endtime="20201029 18:18:01.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.916" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:18:01.915" endtime="20201029 18:18:01.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.918" level="INFO">VALUE: [7.938799999999968e-05, 7.830600000000021e-05, 7.893099999999736e-05, 7.854200000000089e-05, 7.824999999999846e-05, 7.894400000000093e-05, 7.848599999999914e-05, 7.892999999999789e-05, 7.811099999999876e-05, 7.868000000000111e-05, 7.847199999999957e-05, 7.819400000000018e-05, 7.80969999999992e-05, 7.849999999999871e-05, 7.854200000000089e-05, 7.837499999999858e-05, 7.880500000000124e-05, 7.800000000000168e-05, 7.811099999999876e-05, 7.877699999999863e-05, 7.873599999999939e-05, 7.855600000000046e-05, 7.800000000000168e-05, 7.862499999999883e-05, 7.830600000000021e-05, 7.838900000000162e-05, 7.873599999999939e-05, 7.811099999999876e-05, 7.823599999999889e-05, 7.861099999999926e-05, 7.818100000000008e-05, 7.836099999999901e-05, 7.863900000000187e-05, 7.818000000000061e-05, 7.84169999999973e-05, 7.873600000000286e-05, 7.817999999999714e-05, 7.848699999999861e-05, 7.805500000000049e-05, 7.874999999999896e-05, 7.850000000000218e-05, 7.826299999999856e-05, 7.886099999999951e-05, 7.838899999999815e-05, 7.869499999999668e-05, 7.873599999999939e-05, 7.840200000000172e-05, 7.80839999999991e-05, 7.823699999999836e-05, 7.880600000000071e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.917" endtime="20201029 18:18:01.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.912" endtime="20201029 18:18:01.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.923" endtime="20201029 18:18:01.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.922" endtime="20201029 18:18:01.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.921" endtime="20201029 18:18:01.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.563" endtime="20201029 18:18:01.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.562" endtime="20201029 18:18:01.944"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.952" endtime="20201029 18:18:01.971"></status>
</kw>
<msg timestamp="20201029 18:18:01.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.951" endtime="20201029 18:18:01.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.973" endtime="20201029 18:18:01.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.975" endtime="20201029 18:18:01.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.948" endtime="20201029 18:18:01.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.946" endtime="20201029 18:18:01.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.984" endtime="20201029 18:18:02.270"></status>
</kw>
<msg timestamp="20201029 18:18:02.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.983" endtime="20201029 18:18:02.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.274" endtime="20201029 18:18:02.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.283" endtime="20201029 18:18:02.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.980" endtime="20201029 18:18:02.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.978" endtime="20201029 18:18:02.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.289" level="INFO">${RESULT} = [{'diff': 8.041599999999982e-05}, {'diff': 7.95970000000007e-05}, {'diff': 7.993099999999836e-05}, {'diff': 7.951399999999928e-05}, {'diff': 7.973600000000039e-05}, {'diff': 7.972200000000082e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:02.286" endtime="20201029 18:18:02.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:02.293" level="INFO">${ACCURACY} = {'diff': [8.041599999999982e-05, 7.95970000000007e-05, 7.993099999999836e-05, 7.951399999999928e-05, 7.973600000000039e-05, 7.972200000000082e-05, 7.916600000000204e-05, 7.948599999999667e-05, 7.98340...</msg>
<status status="PASS" starttime="20201029 18:18:02.290" endtime="20201029 18:18:02.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.297" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:18:02.296" endtime="20201029 18:18:02.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.300" level="INFO">VALUE: [8.041599999999982e-05, 7.95970000000007e-05, 7.993099999999836e-05, 7.951399999999928e-05, 7.973600000000039e-05, 7.972200000000082e-05, 7.916600000000204e-05, 7.948599999999667e-05, 7.983400000000085e-05, 7.961100000000026e-05, 7.930600000000121e-05, 7.924999999999946e-05, 7.986100000000051e-05, 7.924999999999946e-05, 7.968000000000211e-05, 7.900000000000268e-05, 7.968099999999811e-05, 7.922200000000032e-05, 7.955599999999799e-05, 7.93190000000013e-05, 7.919399999999771e-05, 7.949999999999971e-05, 7.934700000000044e-05, 7.916700000000151e-05, 7.965299999999897e-05, 7.965200000000297e-05, 7.954100000000242e-05, 7.926399999999903e-05, 7.991700000000226e-05, 7.898599999999964e-05, 7.94030000000022e-05, 7.904199999999792e-05, 7.969499999999768e-05, 7.904100000000192e-05, 7.919500000000065e-05, 7.984700000000094e-05, 7.919400000000118e-05, 7.908300000000063e-05, 7.966599999999907e-05, 7.988899999999965e-05, 7.979199999999867e-05, 7.986100000000051e-05, 7.992999999999889e-05, 7.974999999999996e-05, 7.949999999999971e-05, 7.972200000000082e-05, 7.923599999999989e-05, 7.973600000000039e-05, 7.924999999999946e-05, 7.905500000000149e-05]</msg>
<status status="PASS" starttime="20201029 18:18:02.299" endtime="20201029 18:18:02.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.294" endtime="20201029 18:18:02.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.306" endtime="20201029 18:18:02.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.304" endtime="20201029 18:18:02.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.303" endtime="20201029 18:18:02.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.945" endtime="20201029 18:18:02.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.944" endtime="20201029 18:18:02.326"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.335" endtime="20201029 18:18:02.353"></status>
</kw>
<msg timestamp="20201029 18:18:02.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.333" endtime="20201029 18:18:02.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.354" endtime="20201029 18:18:02.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.357" endtime="20201029 18:18:02.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.331" endtime="20201029 18:18:02.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.329" endtime="20201029 18:18:02.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.365" endtime="20201029 18:18:02.651"></status>
</kw>
<msg timestamp="20201029 18:18:02.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.364" endtime="20201029 18:18:02.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.655" endtime="20201029 18:18:02.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.664" endtime="20201029 18:18:02.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.361" endtime="20201029 18:18:02.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.360" endtime="20201029 18:18:02.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.670" level="INFO">${RESULT} = [{'diff': 8.090300000000022e-05}, {'diff': 8.042999999999939e-05}, {'diff': 8.09169999999998e-05}, {'diff': 8.012500000000033e-05}, {'diff': 8.079200000000314e-05}, {'diff': 8.044399999999896e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:02.667" endtime="20201029 18:18:02.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:02.675" level="INFO">${ACCURACY} = {'diff': [8.090300000000022e-05, 8.042999999999939e-05, 8.09169999999998e-05, 8.012500000000033e-05, 8.079200000000314e-05, 8.044399999999896e-05, 7.998700000000011e-05, 8.086100000000151e-05, 8.08059...</msg>
<status status="PASS" starttime="20201029 18:18:02.671" endtime="20201029 18:18:02.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.679" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:18:02.678" endtime="20201029 18:18:02.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.682" level="INFO">VALUE: [8.090300000000022e-05, 8.042999999999939e-05, 8.09169999999998e-05, 8.012500000000033e-05, 8.079200000000314e-05, 8.044399999999896e-05, 7.998700000000011e-05, 8.086100000000151e-05, 8.080599999999924e-05, 7.998700000000011e-05, 8.059800000000117e-05, 8.023599999999742e-05, 8.070799999999878e-05, 7.993000000000236e-05, 8.034699999999798e-05, 8.005599999999849e-05, 8.09169999999998e-05, 8.008300000000163e-05, 8.061100000000126e-05, 8.070799999999878e-05, 8.081899999999934e-05, 8.03329999999984e-05, 8.054099999999995e-05, 8.019399999999871e-05, 8.07780000000001e-05, 8.019500000000165e-05, 8.016699999999904e-05, 8.012500000000033e-05, 8.030499999999927e-05, 8.087500000000108e-05, 8.025000000000046e-05, 8.005599999999849e-05, 8.076400000000053e-05, 8.066699999999954e-05, 8.048600000000114e-05, 8.023600000000089e-05, 8.05970000000017e-05, 8.02779999999996e-05, 8.048599999999767e-05, 8.029199999999917e-05, 8.084700000000195e-05, 8.061100000000126e-05, 8.040299999999972e-05, 8.02779999999996e-05, 8.055600000000246e-05, 8.070799999999878e-05, 8.04169999999993e-05, 8.009699999999773e-05, 8.065299999999997e-05, 8.04719999999981e-05]</msg>
<status status="PASS" starttime="20201029 18:18:02.680" endtime="20201029 18:18:02.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.676" endtime="20201029 18:18:02.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.687" endtime="20201029 18:18:02.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.685" endtime="20201029 18:18:02.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.684" endtime="20201029 18:18:02.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.327" endtime="20201029 18:18:02.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.327" endtime="20201029 18:18:02.707"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.716" endtime="20201029 18:18:02.734"></status>
</kw>
<msg timestamp="20201029 18:18:02.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.714" endtime="20201029 18:18:02.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.735" endtime="20201029 18:18:02.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.738" endtime="20201029 18:18:02.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.712" endtime="20201029 18:18:02.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.710" endtime="20201029 18:18:02.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.747" endtime="20201029 18:18:03.033"></status>
</kw>
<msg timestamp="20201029 18:18:03.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02138575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:02.745" endtime="20201029 18:18:03.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02138575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:03.037" endtime="20201029 18:18:03.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.046" endtime="20201029 18:18:03.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.743" endtime="20201029 18:18:03.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.741" endtime="20201029 18:18:03.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.052" level="INFO">${RESULT} = [{'diff': 8.213899999999844e-05}, {'diff': 8.177799999999763e-05}, {'diff': 8.12780000000006e-05}, {'diff': 8.119399999999971e-05}, {'diff': 8.175000000000196e-05}, {'diff': 8.097200000000207e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:03.049" endtime="20201029 18:18:03.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:03.056" level="INFO">${ACCURACY} = {'diff': [8.213899999999844e-05, 8.177799999999763e-05, 8.12780000000006e-05, 8.119399999999971e-05, 8.175000000000196e-05, 8.097200000000207e-05, 8.159699999999923e-05, 8.17910000000012e-05, 8.190300...</msg>
<status status="PASS" starttime="20201029 18:18:03.053" endtime="20201029 18:18:03.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.060" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:18:03.059" endtime="20201029 18:18:03.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.063" level="INFO">VALUE: [8.213899999999844e-05, 8.177799999999763e-05, 8.12780000000006e-05, 8.119399999999971e-05, 8.175000000000196e-05, 8.097200000000207e-05, 8.159699999999923e-05, 8.17910000000012e-05, 8.190300000000122e-05, 8.104099999999698e-05, 8.119499999999918e-05, 8.116700000000004e-05, 8.166700000000054e-05, 8.099999999999774e-05, 8.10840000000021e-05, 8.158399999999913e-05, 8.134699999999898e-05, 8.17780000000011e-05, 8.108300000000263e-05, 8.122199999999885e-05, 8.109800000000167e-05, 8.154200000000042e-05, 8.11390000000009e-05, 8.174999999999849e-05, 8.155599999999999e-05, 8.095799999999903e-05, 8.094499999999893e-05, 8.12780000000006e-05, 8.158299999999966e-05, 8.155599999999999e-05, 8.172199999999935e-05, 8.1458999999999e-05, 8.111100000000177e-05, 8.118099999999961e-05, 8.11390000000009e-05, 8.190299999999776e-05, 8.140300000000072e-05, 8.109699999999873e-05, 8.173599999999892e-05, 8.176300000000206e-05, 8.120799999999928e-05, 8.172199999999935e-05, 8.140300000000072e-05, 8.190199999999828e-05, 8.166700000000054e-05, 8.184699999999948e-05, 8.09450000000024e-05, 8.170799999999978e-05, 8.124999999999799e-05, 8.156900000000009e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.061" endtime="20201029 18:18:03.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.057" endtime="20201029 18:18:03.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.068" endtime="20201029 18:18:03.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.066" endtime="20201029 18:18:03.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.065" endtime="20201029 18:18:03.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.708" endtime="20201029 18:18:03.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.708" endtime="20201029 18:18:03.088"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.097" endtime="20201029 18:18:03.116"></status>
</kw>
<msg timestamp="20201029 18:18:03.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.095" endtime="20201029 18:18:03.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.117" endtime="20201029 18:18:03.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.120" endtime="20201029 18:18:03.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.093" endtime="20201029 18:18:03.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.091" endtime="20201029 18:18:03.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.129" endtime="20201029 18:18:03.414"></status>
</kw>
<msg timestamp="20201029 18:18:03.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.127" endtime="20201029 18:18:03.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.418" endtime="20201029 18:18:03.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.426" endtime="20201029 18:18:03.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.125" endtime="20201029 18:18:03.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.123" endtime="20201029 18:18:03.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.432" level="INFO">${RESULT} = [{'diff': 8.317999999999867e-05}, {'diff': 8.197200000000307e-05}, {'diff': 8.277799999999863e-05}, {'diff': 8.282000000000081e-05}, {'diff': 8.290199999999928e-05}, {'diff': 8.256899999999762e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:03.429" endtime="20201029 18:18:03.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:03.436" level="INFO">${ACCURACY} = {'diff': [8.317999999999867e-05, 8.197200000000307e-05, 8.277799999999863e-05, 8.282000000000081e-05, 8.290199999999928e-05, 8.256899999999762e-05, 8.240299999999826e-05, 8.226399999999856e-05, 8.2459...</msg>
<status status="PASS" starttime="20201029 18:18:03.433" endtime="20201029 18:18:03.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.441" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:18:03.440" endtime="20201029 18:18:03.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.443" level="INFO">VALUE: [8.317999999999867e-05, 8.197200000000307e-05, 8.277799999999863e-05, 8.282000000000081e-05, 8.290199999999928e-05, 8.256899999999762e-05, 8.240299999999826e-05, 8.226399999999856e-05, 8.2459e-05, 8.201399999999831e-05, 8.28330000000009e-05, 8.259700000000023e-05, 8.245800000000053e-05, 8.19719999999996e-05, 8.234699999999998e-05, 8.256999999999709e-05, 8.286100000000005e-05, 8.280500000000177e-05, 8.245800000000053e-05, 8.258400000000013e-05, 8.245800000000053e-05, 8.193100000000036e-05, 8.288900000000265e-05, 8.234699999999998e-05, 8.21659999999981e-05, 8.194399999999699e-05, 8.204200000000092e-05, 8.233399999999988e-05, 8.254200000000142e-05, 8.27919999999982e-05, 8.266700000000154e-05, 8.272299999999982e-05, 8.219400000000071e-05, 8.240300000000172e-05, 8.266700000000154e-05, 8.222199999999985e-05, 8.234699999999998e-05, 8.240200000000225e-05, 8.220899999999975e-05, 8.240299999999826e-05, 8.26659999999986e-05, 8.29170000000018e-05, 8.195800000000003e-05, 8.252799999999838e-05, 8.19719999999996e-05, 8.2459e-05, 8.204100000000145e-05, 8.247299999999957e-05, 8.200000000000221e-05, 8.23330000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.442" endtime="20201029 18:18:03.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.437" endtime="20201029 18:18:03.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.449" endtime="20201029 18:18:03.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.447" endtime="20201029 18:18:03.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.446" endtime="20201029 18:18:03.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.089" endtime="20201029 18:18:03.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.089" endtime="20201029 18:18:03.470"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.478" endtime="20201029 18:18:03.496"></status>
</kw>
<msg timestamp="20201029 18:18:03.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.476" endtime="20201029 18:18:03.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.498" endtime="20201029 18:18:03.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.500" endtime="20201029 18:18:03.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.474" endtime="20201029 18:18:03.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.472" endtime="20201029 18:18:03.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.509" endtime="20201029 18:18:03.795"></status>
</kw>
<msg timestamp="20201029 18:18:03.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021307597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.507" endtime="20201029 18:18:03.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021307597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.799" endtime="20201029 18:18:03.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.807" endtime="20201029 18:18:03.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.505" endtime="20201029 18:18:03.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.503" endtime="20201029 18:18:03.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.814" level="INFO">${RESULT} = [{'diff': 8.394499999999847e-05}, {'diff': 8.373600000000092e-05}, {'diff': 8.322199999999738e-05}, {'diff': 8.327699999999966e-05}, {'diff': 8.327799999999913e-05}, {'diff': 8.377699999999669e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:03.811" endtime="20201029 18:18:03.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:03.819" level="INFO">${ACCURACY} = {'diff': [8.394499999999847e-05, 8.373600000000092e-05, 8.322199999999738e-05, 8.327699999999966e-05, 8.327799999999913e-05, 8.377699999999669e-05, 8.351399999999981e-05, 8.388900000000019e-05, 8.3915...</msg>
<status status="PASS" starttime="20201029 18:18:03.815" endtime="20201029 18:18:03.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.823" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:18:03.822" endtime="20201029 18:18:03.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.825" level="INFO">VALUE: [8.394499999999847e-05, 8.373600000000092e-05, 8.322199999999738e-05, 8.327699999999966e-05, 8.327799999999913e-05, 8.377699999999669e-05, 8.351399999999981e-05, 8.388900000000019e-05, 8.391599999999985e-05, 8.39170000000028e-05, 8.368099999999865e-05, 8.384700000000148e-05, 8.336099999999708e-05, 8.302799999999888e-05, 8.33330000000014e-05, 8.390299999999976e-05, 8.300000000000321e-05, 8.34170000000023e-05, 8.367999999999917e-05, 8.379099999999973e-05, 8.36659999999996e-05, 8.351399999999981e-05, 8.352799999999938e-05, 8.381900000000234e-05, 8.380599999999877e-05, 8.334700000000098e-05, 8.298600000000017e-05, 8.363899999999994e-05, 8.363800000000046e-05, 8.359700000000123e-05, 8.352799999999938e-05, 8.359699999999776e-05, 8.372200000000135e-05, 8.376400000000006e-05, 8.373600000000092e-05, 8.369499999999822e-05, 8.297199999999713e-05, 8.3152999999999e-05, 8.320800000000128e-05, 8.377799999999963e-05, 8.319500000000118e-05, 8.36529999999995e-05, 8.34170000000023e-05, 8.301399999999931e-05, 8.32910000000027e-05, 8.390299999999976e-05, 8.327799999999913e-05, 8.363899999999994e-05, 8.365200000000003e-05, 8.308299999999769e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.824" endtime="20201029 18:18:03.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.820" endtime="20201029 18:18:03.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.830" endtime="20201029 18:18:03.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.829" endtime="20201029 18:18:03.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.828" endtime="20201029 18:18:03.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.470" endtime="20201029 18:18:03.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.470" endtime="20201029 18:18:03.851"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.860" endtime="20201029 18:18:03.878"></status>
</kw>
<msg timestamp="20201029 18:18:03.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.858" endtime="20201029 18:18:03.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.879" endtime="20201029 18:18:03.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.882" endtime="20201029 18:18:03.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.855" endtime="20201029 18:18:03.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.853" endtime="20201029 18:18:03.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.891" endtime="20201029 18:18:04.180"></status>
</kw>
<msg timestamp="20201029 18:18:04.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.889" endtime="20201029 18:18:04.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.184" endtime="20201029 18:18:04.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.192" endtime="20201029 18:18:04.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.886" endtime="20201029 18:18:04.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.885" endtime="20201029 18:18:04.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.199" level="INFO">${RESULT} = [{'diff': 8.512500000000187e-05}, {'diff': 8.46249999999979e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.483399999999891e-05}, {'diff': 8.488900000000119e-05}, {'diff': 8.451400000000081e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:04.195" endtime="20201029 18:18:04.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:04.203" level="INFO">${ACCURACY} = {'diff': [8.512500000000187e-05, 8.46249999999979e-05, 8.433299999999894e-05, 8.483399999999891e-05, 8.488900000000119e-05, 8.451400000000081e-05, 8.437499999999765e-05, 8.458400000000213e-05, 8.46109...</msg>
<status status="PASS" starttime="20201029 18:18:04.200" endtime="20201029 18:18:04.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.207" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:18:04.206" endtime="20201029 18:18:04.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.210" level="INFO">VALUE: [8.512500000000187e-05, 8.46249999999979e-05, 8.433299999999894e-05, 8.483399999999891e-05, 8.488900000000119e-05, 8.451400000000081e-05, 8.437499999999765e-05, 8.458400000000213e-05, 8.461099999999833e-05, 8.488800000000171e-05, 8.395800000000203e-05, 8.394399999999899e-05, 8.475000000000149e-05, 8.408299999999869e-05, 8.488900000000119e-05, 8.422199999999838e-05, 8.472300000000182e-05, 8.44309999999994e-05, 8.450000000000124e-05, 8.488900000000119e-05, 8.426400000000056e-05, 8.458399999999866e-05, 8.413900000000044e-05, 8.469399999999974e-05, 8.459699999999876e-05, 8.488899999999772e-05, 8.451400000000081e-05, 8.445799999999906e-05, 8.409699999999826e-05, 8.458400000000213e-05, 8.455500000000005e-05, 8.402700000000041e-05, 8.431899999999937e-05, 8.400000000000074e-05, 8.469499999999922e-05, 8.431999999999884e-05, 8.422200000000185e-05, 8.402799999999988e-05, 8.419399999999924e-05, 8.444499999999897e-05, 8.431999999999884e-05, 8.476399999999759e-05, 8.4153e-05, 8.451400000000081e-05, 8.426400000000056e-05, 8.470899999999879e-05, 8.413900000000044e-05, 8.397199999999813e-05, 8.395899999999804e-05, 8.413900000000044e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.208" endtime="20201029 18:18:04.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.203" endtime="20201029 18:18:04.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.221" endtime="20201029 18:18:04.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.220" endtime="20201029 18:18:04.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.218" endtime="20201029 18:18:04.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.852" endtime="20201029 18:18:04.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.851" endtime="20201029 18:18:04.242"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.250" endtime="20201029 18:18:04.269"></status>
</kw>
<msg timestamp="20201029 18:18:04.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.249" endtime="20201029 18:18:04.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.271" endtime="20201029 18:18:04.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.273" endtime="20201029 18:18:04.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.246" endtime="20201029 18:18:04.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.244" endtime="20201029 18:18:04.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.282" endtime="20201029 18:18:04.569"></status>
</kw>
<msg timestamp="20201029 18:18:04.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.281" endtime="20201029 18:18:04.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.573" endtime="20201029 18:18:04.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.581" endtime="20201029 18:18:04.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.278" endtime="20201029 18:18:04.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.276" endtime="20201029 18:18:04.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.588" level="INFO">${RESULT} = [{'diff': 8.640300000000226e-05}, {'diff': 8.513900000000144e-05}, {'diff': 8.533399999999941e-05}, {'diff': 8.501399999999784e-05}, {'diff': 8.588900000000219e-05}, {'diff': 8.590299999999829e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:04.584" endtime="20201029 18:18:04.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:04.592" level="INFO">${ACCURACY} = {'diff': [8.640300000000226e-05, 8.513900000000144e-05, 8.533399999999941e-05, 8.501399999999784e-05, 8.588900000000219e-05, 8.590299999999829e-05, 8.545800000000006e-05, 8.518100000000015e-05, 8.5889...</msg>
<status status="PASS" starttime="20201029 18:18:04.589" endtime="20201029 18:18:04.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.596" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:18:04.595" endtime="20201029 18:18:04.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.598" level="INFO">VALUE: [8.640300000000226e-05, 8.513900000000144e-05, 8.533399999999941e-05, 8.501399999999784e-05, 8.588900000000219e-05, 8.590299999999829e-05, 8.545800000000006e-05, 8.518100000000015e-05, 8.588900000000219e-05, 8.563899999999847e-05, 8.499999999999827e-05, 8.524999999999852e-05, 8.509699999999926e-05, 8.594400000000099e-05, 8.583399999999991e-05, 8.588899999999872e-05, 8.549999999999877e-05, 8.501399999999784e-05, 8.554200000000095e-05, 8.557000000000009e-05, 8.495899999999904e-05, 8.501399999999784e-05, 8.56799999999977e-05, 8.522199999999938e-05, 8.530600000000027e-05, 8.563900000000194e-05, 8.523599999999895e-05, 8.590300000000176e-05, 8.549999999999877e-05, 8.545800000000006e-05, 8.56530000000015e-05, 8.538899999999822e-05, 8.572199999999988e-05, 8.543000000000092e-05, 8.569500000000022e-05, 8.494399999999999e-05, 8.512500000000187e-05, 8.501400000000131e-05, 8.518100000000015e-05, 8.505600000000002e-05, 8.533299999999994e-05, 8.495799999999956e-05, 8.572199999999988e-05, 8.53189999999969e-05, 8.558300000000019e-05, 8.569400000000074e-05, 8.559699999999976e-05, 8.582000000000034e-05, 8.551400000000181e-05, 8.551399999999834e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.597" endtime="20201029 18:18:04.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.593" endtime="20201029 18:18:04.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.604" endtime="20201029 18:18:04.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.603" endtime="20201029 18:18:04.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.602" endtime="20201029 18:18:04.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.243" endtime="20201029 18:18:04.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.242" endtime="20201029 18:18:04.625"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.633" endtime="20201029 18:18:04.652"></status>
</kw>
<msg timestamp="20201029 18:18:04.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.632" endtime="20201029 18:18:04.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.653" endtime="20201029 18:18:04.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.656" endtime="20201029 18:18:04.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.629" endtime="20201029 18:18:04.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.627" endtime="20201029 18:18:04.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.664" endtime="20201029 18:18:04.949"></status>
</kw>
<msg timestamp="20201029 18:18:04.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.663" endtime="20201029 18:18:04.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.953" endtime="20201029 18:18:04.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.961" endtime="20201029 18:18:04.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.660" endtime="20201029 18:18:04.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.659" endtime="20201029 18:18:04.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.968" level="INFO">${RESULT} = [{'diff': 8.700000000000027e-05}, {'diff': 8.597200000000013e-05}, {'diff': 8.595900000000004e-05}, {'diff': 8.633299999999747e-05}, {'diff': 8.659700000000076e-05}, {'diff': 8.619400000000124e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:04.965" endtime="20201029 18:18:04.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:04.973" level="INFO">${ACCURACY} = {'diff': [8.700000000000027e-05, 8.597200000000013e-05, 8.595900000000004e-05, 8.633299999999747e-05, 8.659700000000076e-05, 8.619400000000124e-05, 8.636100000000008e-05, 8.644500000000097e-05, 8.6805...</msg>
<status status="PASS" starttime="20201029 18:18:04.969" endtime="20201029 18:18:04.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.977" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:18:04.976" endtime="20201029 18:18:04.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.980" level="INFO">VALUE: [8.700000000000027e-05, 8.597200000000013e-05, 8.595900000000004e-05, 8.633299999999747e-05, 8.659700000000076e-05, 8.619400000000124e-05, 8.636100000000008e-05, 8.644500000000097e-05, 8.68050000000023e-05, 8.633300000000094e-05, 8.66530000000025e-05, 8.675000000000002e-05, 8.622200000000038e-05, 8.638899999999922e-05, 8.647200000000063e-05, 8.59859999999997e-05, 8.66249999999999e-05, 8.633300000000094e-05, 8.676400000000306e-05, 8.658300000000119e-05, 8.613899999999897e-05, 8.627799999999866e-05, 8.66530000000025e-05, 8.602699999999894e-05, 8.672200000000088e-05, 8.691599999999938e-05, 8.670799999999784e-05, 8.631900000000137e-05, 8.651399999999934e-05, 8.620900000000029e-05, 8.690299999999929e-05, 8.606899999999765e-05, 8.61669999999981e-05, 8.626400000000256e-05, 8.640299999999879e-05, 8.676399999999959e-05, 8.644399999999802e-05, 8.687500000000015e-05, 8.609699999999679e-05, 8.619500000000072e-05, 8.626400000000256e-05, 8.644500000000097e-05, 8.688899999999972e-05, 8.676399999999959e-05, 8.652800000000238e-05, 8.670800000000131e-05, 8.654199999999848e-05, 8.656899999999815e-05, 8.599999999999927e-05, 8.688899999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.978" endtime="20201029 18:18:04.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.974" endtime="20201029 18:18:04.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.985" endtime="20201029 18:18:05.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.983" endtime="20201029 18:18:05.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.982" endtime="20201029 18:18:05.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.626" endtime="20201029 18:18:05.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.625" endtime="20201029 18:18:05.005"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.014" endtime="20201029 18:18:05.032"></status>
</kw>
<msg timestamp="20201029 18:18:05.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.012" endtime="20201029 18:18:05.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.034" endtime="20201029 18:18:05.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.036" endtime="20201029 18:18:05.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.010" endtime="20201029 18:18:05.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.008" endtime="20201029 18:18:05.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.045" endtime="20201029 18:18:05.332"></status>
</kw>
<msg timestamp="20201029 18:18:05.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021349361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021437222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.043" endtime="20201029 18:18:05.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021349361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021437222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.336" endtime="20201029 18:18:05.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.344" endtime="20201029 18:18:05.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.041" endtime="20201029 18:18:05.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.039" endtime="20201029 18:18:05.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.351" level="INFO">${RESULT} = [{'diff': 8.786099999999811e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.719399999999877e-05}, {'diff': 8.700000000000027e-05}, {'diff': 8.71799999999992e-05}, {'diff': 8.761099999999786e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:05.348" endtime="20201029 18:18:05.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:05.355" level="INFO">${ACCURACY} = {'diff': [8.786099999999811e-05, 8.759700000000176e-05, 8.719399999999877e-05, 8.700000000000027e-05, 8.71799999999992e-05, 8.761099999999786e-05, 8.740300000000326e-05, 8.688899999999972e-05, 8.74169...</msg>
<status status="PASS" starttime="20201029 18:18:05.352" endtime="20201029 18:18:05.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.359" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:18:05.358" endtime="20201029 18:18:05.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.362" level="INFO">VALUE: [8.786099999999811e-05, 8.759700000000176e-05, 8.719399999999877e-05, 8.700000000000027e-05, 8.71799999999992e-05, 8.761099999999786e-05, 8.740300000000326e-05, 8.688899999999972e-05, 8.741699999999936e-05, 8.706899999999865e-05, 8.744500000000197e-05, 8.786100000000158e-05, 8.76250000000009e-05, 8.74860000000012e-05, 8.713899999999997e-05, 8.748599999999773e-05, 8.71250000000004e-05, 8.744400000000249e-05, 8.731900000000237e-05, 8.723599999999748e-05, 8.742999999999945e-05, 8.750000000000077e-05, 8.719399999999877e-05, 8.750000000000077e-05, 8.707000000000159e-05, 8.705499999999908e-05, 8.700000000000027e-05, 8.788799999999777e-05, 8.750000000000077e-05, 8.737500000000065e-05, 8.744399999999902e-05, 8.773599999999798e-05, 8.786100000000158e-05, 8.775000000000102e-05, 8.775000000000102e-05, 8.69310000000019e-05, 8.73189999999989e-05, 8.783299999999897e-05, 8.752799999999991e-05, 8.790300000000029e-05, 8.738900000000022e-05, 8.69860000000007e-05, 8.78189999999994e-05, 8.76799999999997e-05, 8.719499999999825e-05, 8.784699999999854e-05, 8.787500000000115e-05, 8.784699999999854e-05, 8.706999999999812e-05, 8.76669999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:18:05.360" endtime="20201029 18:18:05.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.356" endtime="20201029 18:18:05.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.366" endtime="20201029 18:18:05.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.365" endtime="20201029 18:18:05.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.364" endtime="20201029 18:18:05.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.006" endtime="20201029 18:18:05.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.006" endtime="20201029 18:18:05.387"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.396" endtime="20201029 18:18:05.415"></status>
</kw>
<msg timestamp="20201029 18:18:05.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.394" endtime="20201029 18:18:05.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.417" endtime="20201029 18:18:05.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.419" endtime="20201029 18:18:05.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.392" endtime="20201029 18:18:05.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.390" endtime="20201029 18:18:05.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.428" endtime="20201029 18:18:05.714"></status>
</kw>
<msg timestamp="20201029 18:18:05.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022266708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.426" endtime="20201029 18:18:05.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022266708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.718" endtime="20201029 18:18:05.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.726" endtime="20201029 18:18:05.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.424" endtime="20201029 18:18:05.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.422" endtime="20201029 18:18:05.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.733" level="INFO">${RESULT} = [{'diff': 8.898599999999923e-05}, {'diff': 8.81800000000002e-05}, {'diff': 8.823599999999848e-05}, {'diff': 8.858400000000266e-05}, {'diff': 8.875000000000202e-05}, {'diff': 8.88060000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:05.730" endtime="20201029 18:18:05.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:05.737" level="INFO">${ACCURACY} = {'diff': [8.898599999999923e-05, 8.81800000000002e-05, 8.823599999999848e-05, 8.858400000000266e-05, 8.875000000000202e-05, 8.88060000000003e-05, 8.837499999999818e-05, 8.833399999999894e-05, 8.794499...</msg>
<status status="PASS" starttime="20201029 18:18:05.734" endtime="20201029 18:18:05.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.741" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:18:05.740" endtime="20201029 18:18:05.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.743" level="INFO">VALUE: [8.898599999999923e-05, 8.81800000000002e-05, 8.823599999999848e-05, 8.858400000000266e-05, 8.875000000000202e-05, 8.88060000000003e-05, 8.837499999999818e-05, 8.833399999999894e-05, 8.7944999999999e-05, 8.801400000000084e-05, 8.83059999999998e-05, 8.861099999999886e-05, 8.861100000000233e-05, 8.813900000000097e-05, 8.83189999999999e-05, 8.861099999999886e-05, 8.84999999999983e-05, 8.886200000000205e-05, 8.879199999999726e-05, 8.793099999999943e-05, 8.805599999999955e-05, 8.86250000000019e-05, 8.831999999999937e-05, 8.86800000000007e-05, 8.836100000000208e-05, 8.869400000000027e-05, 8.81389999999975e-05, 8.841700000000036e-05, 8.843099999999993e-05, 8.861099999999886e-05, 8.827800000000066e-05, 8.836099999999861e-05, 8.84999999999983e-05, 8.852700000000144e-05, 8.879200000000073e-05, 8.858399999999919e-05, 8.886100000000258e-05, 8.886099999999911e-05, 8.844400000000002e-05, 8.88060000000003e-05, 8.84449999999995e-05, 8.800000000000127e-05, 8.838799999999827e-05, 8.875000000000202e-05, 8.865300000000104e-05, 8.855499999999711e-05, 8.829200000000023e-05, 8.850000000000177e-05, 8.843099999999993e-05, 8.83059999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:18:05.742" endtime="20201029 18:18:05.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.738" endtime="20201029 18:18:05.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.749" endtime="20201029 18:18:05.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.748" endtime="20201029 18:18:05.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.747" endtime="20201029 18:18:05.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.388" endtime="20201029 18:18:05.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.388" endtime="20201029 18:18:05.770"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.778" endtime="20201029 18:18:05.797"></status>
</kw>
<msg timestamp="20201029 18:18:05.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.777" endtime="20201029 18:18:05.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.798" endtime="20201029 18:18:05.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.801" endtime="20201029 18:18:05.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.774" endtime="20201029 18:18:05.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.772" endtime="20201029 18:18:05.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.810" endtime="20201029 18:18:06.095"></status>
</kw>
<msg timestamp="20201029 18:18:06.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.808" endtime="20201029 18:18:06.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.100" endtime="20201029 18:18:06.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.108" endtime="20201029 18:18:06.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.805" endtime="20201029 18:18:06.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.804" endtime="20201029 18:18:06.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.114" level="INFO">${RESULT} = [{'diff': 9.043100000000193e-05}, {'diff': 8.893100000000043e-05}, {'diff': 8.986100000000011e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.950000000000277e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:06.111" endtime="20201029 18:18:06.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:06.119" level="INFO">${ACCURACY} = {'diff': [9.043100000000193e-05, 8.893100000000043e-05, 8.986100000000011e-05, 8.934700000000004e-05, 8.973599999999998e-05, 8.950000000000277e-05, 8.987499999999968e-05, 8.956900000000115e-05, 8.9819...</msg>
<status status="PASS" starttime="20201029 18:18:06.115" endtime="20201029 18:18:06.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.123" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:18:06.123" endtime="20201029 18:18:06.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.126" level="INFO">VALUE: [9.043100000000193e-05, 8.893100000000043e-05, 8.986100000000011e-05, 8.934700000000004e-05, 8.973599999999998e-05, 8.950000000000277e-05, 8.987499999999968e-05, 8.956900000000115e-05, 8.98190000000014e-05, 8.891600000000138e-05, 8.900000000000227e-05, 8.897299999999914e-05, 8.918099999999721e-05, 8.941699999999789e-05, 8.941600000000188e-05, 8.961099999999986e-05, 8.929099999999829e-05, 8.937499999999918e-05, 8.936099999999961e-05, 8.911099999999936e-05, 8.937499999999918e-05, 8.967999999999823e-05, 8.912499999999893e-05, 8.923599999999948e-05, 8.936099999999961e-05, 8.936199999999908e-05, 8.920800000000034e-05, 8.948599999999973e-05, 8.954200000000148e-05, 8.962499999999943e-05, 8.967999999999823e-05, 8.905600000000055e-05, 8.923599999999948e-05, 8.955500000000158e-05, 8.912499999999893e-05, 8.923599999999948e-05, 8.958300000000072e-05, 8.959700000000029e-05, 8.902799999999794e-05, 8.974999999999955e-05, 8.91670000000011e-05, 8.990299999999882e-05, 8.981899999999793e-05, 8.934700000000004e-05, 8.96939999999978e-05, 8.954200000000148e-05, 8.977800000000216e-05, 8.919400000000077e-05, 8.968100000000118e-05, 8.942999999999798e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.125" endtime="20201029 18:18:06.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.120" endtime="20201029 18:18:06.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.131" endtime="20201029 18:18:06.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.129" endtime="20201029 18:18:06.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.128" endtime="20201029 18:18:06.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.771" endtime="20201029 18:18:06.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.770" endtime="20201029 18:18:06.151"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.160" endtime="20201029 18:18:06.178"></status>
</kw>
<msg timestamp="20201029 18:18:06.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.158" endtime="20201029 18:18:06.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.180" endtime="20201029 18:18:06.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.182" endtime="20201029 18:18:06.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.156" endtime="20201029 18:18:06.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.154" endtime="20201029 18:18:06.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.191" endtime="20201029 18:18:06.478"></status>
</kw>
<msg timestamp="20201029 18:18:06.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021311347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.190" endtime="20201029 18:18:06.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021311347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.482" endtime="20201029 18:18:06.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.490" endtime="20201029 18:18:06.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.187" endtime="20201029 18:18:06.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.185" endtime="20201029 18:18:06.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.497" level="INFO">${RESULT} = [{'diff': 9.061099999999739e-05}, {'diff': 8.991699999999839e-05}, {'diff': 9.018099999999821e-05}, {'diff': 9.008300000000122e-05}, {'diff': 9.026399999999962e-05}, {'diff': 9.017999999999873e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:06.494" endtime="20201029 18:18:06.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:06.501" level="INFO">${ACCURACY} = {'diff': [9.061099999999739e-05, 8.991699999999839e-05, 9.018099999999821e-05, 9.008300000000122e-05, 9.026399999999962e-05, 9.017999999999873e-05, 9.061100000000086e-05, 9.004199999999851e-05, 9.0875...</msg>
<status status="PASS" starttime="20201029 18:18:06.498" endtime="20201029 18:18:06.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.505" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:18:06.504" endtime="20201029 18:18:06.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.507" level="INFO">VALUE: [9.061099999999739e-05, 8.991699999999839e-05, 9.018099999999821e-05, 9.008300000000122e-05, 9.026399999999962e-05, 9.017999999999873e-05, 9.061100000000086e-05, 9.004199999999851e-05, 9.087500000000068e-05, 9.047199999999769e-05, 9.051399999999987e-05, 9.086100000000111e-05, 9.056900000000215e-05, 9.080599999999883e-05, 9.087500000000068e-05, 9.019499999999778e-05, 8.992999999999848e-05, 9.01389999999995e-05, 9.066599999999966e-05, 9.038899999999975e-05, 9.061100000000086e-05, 9.0639e-05, 9.04450000000015e-05, 9.030499999999886e-05, 9.009700000000079e-05, 9.030599999999833e-05, 8.990300000000229e-05, 9.074999999999708e-05, 9.018099999999821e-05, 9.051399999999987e-05, 9.004199999999851e-05, 9.023699999999996e-05, 9.086100000000111e-05, 9.04870000000002e-05, 9.038899999999975e-05, 9.018100000000168e-05, 9.025000000000005e-05, 9.034700000000104e-05, 9.030499999999886e-05, 9.086200000000058e-05, 9.022200000000091e-05, 9.025000000000005e-05, 9.079199999999926e-05, 9.052699999999997e-05, 9.002800000000241e-05, 9.080499999999936e-05, 9.08190000000024e-05, 9.037499999999671e-05, 9.061100000000086e-05, 9.080500000000283e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.506" endtime="20201029 18:18:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.502" endtime="20201029 18:18:06.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.512" endtime="20201029 18:18:06.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.511" endtime="20201029 18:18:06.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.510" endtime="20201029 18:18:06.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.152" endtime="20201029 18:18:06.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.152" endtime="20201029 18:18:06.533"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.542" endtime="20201029 18:18:06.561"></status>
</kw>
<msg timestamp="20201029 18:18:06.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.540" endtime="20201029 18:18:06.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.562" endtime="20201029 18:18:06.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.565" endtime="20201029 18:18:06.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.538" endtime="20201029 18:18:06.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.535" endtime="20201029 18:18:06.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.575" endtime="20201029 18:18:06.860"></status>
</kw>
<msg timestamp="20201029 18:18:06.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.573" endtime="20201029 18:18:06.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.864" endtime="20201029 18:18:06.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.873" endtime="20201029 18:18:06.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.570" endtime="20201029 18:18:06.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.568" endtime="20201029 18:18:06.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.879" level="INFO">${RESULT} = [{'diff': 9.156899999999968e-05}, {'diff': 9.187499999999821e-05}, {'diff': 9.123600000000148e-05}, {'diff': 9.16939999999998e-05}, {'diff': 9.168000000000023e-05}, {'diff': 9.123600000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:06.876" endtime="20201029 18:18:06.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:06.883" level="INFO">${ACCURACY} = {'diff': [9.156899999999968e-05, 9.187499999999821e-05, 9.123600000000148e-05, 9.16939999999998e-05, 9.168000000000023e-05, 9.123600000000148e-05, 9.126400000000062e-05, 9.186099999999864e-05, 9.10000...</msg>
<status status="PASS" starttime="20201029 18:18:06.880" endtime="20201029 18:18:06.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.888" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:18:06.886" endtime="20201029 18:18:06.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.890" level="INFO">VALUE: [9.156899999999968e-05, 9.187499999999821e-05, 9.123600000000148e-05, 9.16939999999998e-05, 9.168000000000023e-05, 9.123600000000148e-05, 9.126400000000062e-05, 9.186099999999864e-05, 9.10000000000008e-05, 9.141699999999989e-05, 9.11520000000006e-05, 9.105499999999961e-05, 9.104199999999951e-05, 9.162499999999796e-05, 9.111100000000136e-05, 9.174999999999808e-05, 9.10000000000008e-05, 9.143099999999946e-05, 9.105499999999961e-05, 9.155599999999958e-05, 9.187499999999821e-05, 9.123599999999801e-05, 9.098600000000123e-05, 9.123600000000148e-05, 9.131899999999943e-05, 9.143099999999946e-05, 9.101400000000037e-05, 9.13199999999989e-05, 9.094499999999853e-05, 9.098599999999776e-05, 9.112500000000093e-05, 9.090299999999982e-05, 9.127800000000019e-05, 9.180599999999983e-05, 9.099999999999733e-05, 9.148600000000173e-05, 9.105599999999908e-05, 9.099999999999733e-05, 9.161100000000186e-05, 9.187500000000168e-05, 9.123599999999801e-05, 9.104100000000004e-05, 9.156899999999968e-05, 9.104199999999951e-05, 9.130599999999933e-05, 9.173699999999799e-05, 9.116699999999964e-05, 9.101400000000037e-05, 9.145800000000259e-05, 9.184699999999907e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.889" endtime="20201029 18:18:06.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.884" endtime="20201029 18:18:06.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.896" endtime="20201029 18:18:06.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.894" endtime="20201029 18:18:06.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.893" endtime="20201029 18:18:06.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.534" endtime="20201029 18:18:06.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.533" endtime="20201029 18:18:06.916"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.925" endtime="20201029 18:18:06.943"></status>
</kw>
<msg timestamp="20201029 18:18:06.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.923" endtime="20201029 18:18:06.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.945" endtime="20201029 18:18:06.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.947" endtime="20201029 18:18:06.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.921" endtime="20201029 18:18:06.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.919" endtime="20201029 18:18:06.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.956" endtime="20201029 18:18:07.242"></status>
</kw>
<msg timestamp="20201029 18:18:07.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021334917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.955" endtime="20201029 18:18:07.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021334917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.246" endtime="20201029 18:18:07.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.254" endtime="20201029 18:18:07.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.952" endtime="20201029 18:18:07.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.950" endtime="20201029 18:18:07.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.260" level="INFO">${RESULT} = [{'diff': 9.277799999999822e-05}, {'diff': 9.223699999999849e-05}, {'diff': 9.231900000000043e-05}, {'diff': 9.224999999999858e-05}, {'diff': 9.269500000000028e-05}, {'diff': 9.240199999999837e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:07.257" endtime="20201029 18:18:07.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:07.265" level="INFO">${ACCURACY} = {'diff': [9.277799999999822e-05, 9.223699999999849e-05, 9.231900000000043e-05, 9.224999999999858e-05, 9.269500000000028e-05, 9.240199999999837e-05, 9.286100000000311e-05, 9.20000000000018e-05, 9.24019...</msg>
<status status="PASS" starttime="20201029 18:18:07.261" endtime="20201029 18:18:07.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.270" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:18:07.269" endtime="20201029 18:18:07.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.272" level="INFO">VALUE: [9.277799999999822e-05, 9.223699999999849e-05, 9.231900000000043e-05, 9.224999999999858e-05, 9.269500000000028e-05, 9.240199999999837e-05, 9.286100000000311e-05, 9.20000000000018e-05, 9.240199999999837e-05, 9.252800000000144e-05, 9.286099999999964e-05, 9.281900000000093e-05, 9.230600000000033e-05, 9.198599999999876e-05, 9.261099999999939e-05, 9.272199999999994e-05, 9.269499999999681e-05, 9.198599999999876e-05, 9.268100000000071e-05, 9.26529999999981e-05, 9.190300000000082e-05, 9.252800000000144e-05, 9.27079999999969e-05, 9.211099999999889e-05, 9.195800000000309e-05, 9.205600000000008e-05, 9.262499999999896e-05, 9.212499999999846e-05, 9.199999999999833e-05, 9.231900000000043e-05, 9.1945000000003e-05, 9.230600000000033e-05, 9.201400000000137e-05, 9.234699999999957e-05, 9.254199999999754e-05, 9.201400000000137e-05, 9.249999999999883e-05, 9.245800000000012e-05, 9.279199999999779e-05, 9.230500000000086e-05, 9.243000000000098e-05, 9.191600000000091e-05, 9.243100000000046e-05, 9.255500000000111e-05, 9.241700000000089e-05, 9.205500000000061e-05, 9.248599999999926e-05, 9.231900000000043e-05, 9.217999999999726e-05, 9.212499999999846e-05]</msg>
<status status="PASS" starttime="20201029 18:18:07.271" endtime="20201029 18:18:07.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.266" endtime="20201029 18:18:07.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.277" endtime="20201029 18:18:07.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.275" endtime="20201029 18:18:07.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.274" endtime="20201029 18:18:07.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.917" endtime="20201029 18:18:07.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.917" endtime="20201029 18:18:07.298"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.306" endtime="20201029 18:18:07.325"></status>
</kw>
<msg timestamp="20201029 18:18:07.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.305" endtime="20201029 18:18:07.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.326" endtime="20201029 18:18:07.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.329" endtime="20201029 18:18:07.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.302" endtime="20201029 18:18:07.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.300" endtime="20201029 18:18:07.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.338" endtime="20201029 18:18:07.627"></status>
</kw>
<msg timestamp="20201029 18:18:07.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.336" endtime="20201029 18:18:07.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.631" endtime="20201029 18:18:07.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.639" endtime="20201029 18:18:07.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.334" endtime="20201029 18:18:07.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.332" endtime="20201029 18:18:07.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.646" level="INFO">${RESULT} = [{'diff': 9.366699999999867e-05}, {'diff': 9.293000000000148e-05}, {'diff': 9.344500000000103e-05}, {'diff': 9.326399999999915e-05}, {'diff': 9.323600000000001e-05}, {'diff': 9.311099999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:07.643" endtime="20201029 18:18:07.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:07.650" level="INFO">${ACCURACY} = {'diff': [9.366699999999867e-05, 9.293000000000148e-05, 9.344500000000103e-05, 9.326399999999915e-05, 9.323600000000001e-05, 9.311099999999989e-05, 9.387500000000021e-05, 9.311099999999989e-05, 9.3486...</msg>
<status status="PASS" starttime="20201029 18:18:07.647" endtime="20201029 18:18:07.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.654" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:18:07.653" endtime="20201029 18:18:07.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.656" level="INFO">VALUE: [9.366699999999867e-05, 9.293000000000148e-05, 9.344500000000103e-05, 9.326399999999915e-05, 9.323600000000001e-05, 9.311099999999989e-05, 9.387500000000021e-05, 9.311099999999989e-05, 9.348600000000026e-05, 9.375000000000008e-05, 9.293100000000096e-05, 9.369500000000128e-05, 9.301400000000237e-05, 9.387500000000021e-05, 9.344400000000155e-05, 9.373699999999999e-05, 9.379099999999932e-05, 9.361100000000039e-05, 9.330500000000186e-05, 9.358300000000125e-05, 9.359800000000029e-05, 9.362499999999996e-05, 9.349999999999983e-05, 9.298599999999976e-05, 9.387500000000021e-05, 9.299999999999933e-05, 9.355599999999811e-05, 9.320800000000087e-05, 9.344400000000155e-05, 9.309700000000032e-05, 9.299999999999933e-05, 9.352799999999897e-05, 9.305600000000108e-05, 9.372200000000094e-05, 9.301400000000237e-05, 9.384700000000107e-05, 9.329199999999829e-05, 9.313899999999903e-05, 9.354099999999907e-05, 9.356900000000168e-05, 9.336100000000014e-05, 9.344399999999808e-05, 9.359700000000082e-05, 9.293100000000096e-05, 9.384700000000107e-05, 9.359800000000029e-05, 9.331900000000143e-05, 9.34859999999968e-05, 9.316699999999817e-05, 9.309700000000032e-05]</msg>
<status status="PASS" starttime="20201029 18:18:07.655" endtime="20201029 18:18:07.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.651" endtime="20201029 18:18:07.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.661" endtime="20201029 18:18:07.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.660" endtime="20201029 18:18:07.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.659" endtime="20201029 18:18:07.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.298" endtime="20201029 18:18:07.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.298" endtime="20201029 18:18:07.682"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.691" endtime="20201029 18:18:07.710"></status>
</kw>
<msg timestamp="20201029 18:18:07.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.689" endtime="20201029 18:18:07.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.712" endtime="20201029 18:18:07.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.714" endtime="20201029 18:18:07.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.686" endtime="20201029 18:18:07.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.684" endtime="20201029 18:18:07.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.723" endtime="20201029 18:18:08.010"></status>
</kw>
<msg timestamp="20201029 18:18:08.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022152861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.721" endtime="20201029 18:18:08.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022152861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.014" endtime="20201029 18:18:08.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.022" endtime="20201029 18:18:08.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.719" endtime="20201029 18:18:08.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.717" endtime="20201029 18:18:08.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.028" level="INFO">${RESULT} = [{'diff': 9.522199999999897e-05}, {'diff': 9.473600000000151e-05}, {'diff': 9.433299999999853e-05}, {'diff': 9.408300000000175e-05}, {'diff': 9.39590000000011e-05}, {'diff': 9.429199999999929e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:08.025" endtime="20201029 18:18:08.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:08.032" level="INFO">${ACCURACY} = {'diff': [9.522199999999897e-05, 9.473600000000151e-05, 9.433299999999853e-05, 9.408300000000175e-05, 9.39590000000011e-05, 9.429199999999929e-05, 9.46530000000001e-05, 9.426400000000015e-05, 9.409700...</msg>
<status status="PASS" starttime="20201029 18:18:08.029" endtime="20201029 18:18:08.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.037" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:18:08.036" endtime="20201029 18:18:08.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.039" level="INFO">VALUE: [9.522199999999897e-05, 9.473600000000151e-05, 9.433299999999853e-05, 9.408300000000175e-05, 9.39590000000011e-05, 9.429199999999929e-05, 9.46530000000001e-05, 9.426400000000015e-05, 9.409700000000132e-05, 9.480599999999936e-05, 9.404199999999904e-05, 9.430599999999886e-05, 9.472200000000194e-05, 9.422299999999745e-05, 9.42079999999984e-05, 9.452799999999997e-05, 9.43469999999981e-05, 9.44720000000017e-05, 9.416699999999917e-05, 9.463900000000053e-05, 9.404199999999904e-05, 9.44859999999978e-05, 9.45270000000005e-05, 9.481900000000293e-05, 9.447199999999822e-05, 9.404199999999904e-05, 9.391700000000239e-05, 9.473599999999804e-05, 9.404099999999957e-05, 9.429099999999982e-05, 9.422200000000144e-05, 9.447300000000117e-05, 9.429199999999929e-05, 9.430600000000233e-05, 9.422300000000092e-05, 9.455600000000258e-05, 9.411099999999742e-05, 9.402799999999947e-05, 9.416700000000264e-05, 9.404199999999904e-05, 9.44859999999978e-05, 9.416699999999917e-05, 9.42079999999984e-05, 9.472199999999847e-05, 9.454200000000301e-05, 9.46660000000002e-05, 9.459699999999835e-05, 9.477800000000022e-05, 9.458300000000225e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.038" endtime="20201029 18:18:08.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.033" endtime="20201029 18:18:08.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.045" endtime="20201029 18:18:08.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.043" endtime="20201029 18:18:08.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.042" endtime="20201029 18:18:08.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.683" endtime="20201029 18:18:08.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.682" endtime="20201029 18:18:08.066"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.074" endtime="20201029 18:18:08.093"></status>
</kw>
<msg timestamp="20201029 18:18:08.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.073" endtime="20201029 18:18:08.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.094" endtime="20201029 18:18:08.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.097" endtime="20201029 18:18:08.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.070" endtime="20201029 18:18:08.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.068" endtime="20201029 18:18:08.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.105" endtime="20201029 18:18:08.392"></status>
</kw>
<msg timestamp="20201029 18:18:08.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.104" endtime="20201029 18:18:08.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.396" endtime="20201029 18:18:08.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.404" endtime="20201029 18:18:08.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.101" endtime="20201029 18:18:08.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.100" endtime="20201029 18:18:08.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.413" level="INFO">${RESULT} = [{'diff': 9.61530000000016e-05}, {'diff': 9.555499999999717e-05}, {'diff': 9.570899999999938e-05}, {'diff': 9.497199999999872e-05}, {'diff': 9.529100000000082e-05}, {'diff': 9.540299999999738e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:08.408" endtime="20201029 18:18:08.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:08.418" level="INFO">${ACCURACY} = {'diff': [9.61530000000016e-05, 9.555499999999717e-05, 9.570899999999938e-05, 9.497199999999872e-05, 9.529100000000082e-05, 9.540299999999738e-05, 9.522199999999897e-05, 9.538900000000128e-05, 9.58889...</msg>
<status status="PASS" starttime="20201029 18:18:08.414" endtime="20201029 18:18:08.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.422" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:18:08.421" endtime="20201029 18:18:08.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.425" level="INFO">VALUE: [9.61530000000016e-05, 9.555499999999717e-05, 9.570899999999938e-05, 9.497199999999872e-05, 9.529100000000082e-05, 9.540299999999738e-05, 9.522199999999897e-05, 9.538900000000128e-05, 9.588899999999831e-05, 9.538900000000128e-05, 9.508299999999928e-05, 9.56530000000011e-05, 9.55270000000015e-05, 9.509699999999885e-05, 9.505599999999961e-05, 9.536100000000214e-05, 9.555500000000064e-05, 9.559699999999935e-05, 9.541600000000094e-05, 9.555600000000011e-05, 9.53469999999991e-05, 9.565299999999763e-05, 9.527800000000072e-05, 9.501399999999743e-05, 9.583300000000003e-05, 9.508299999999928e-05, 9.509699999999885e-05, 9.554199999999707e-05, 9.509800000000179e-05, 9.502699999999753e-05, 9.577799999999775e-05, 9.573599999999904e-05, 9.555600000000011e-05, 9.490300000000035e-05, 9.516599999999723e-05, 9.552800000000097e-05, 9.490300000000035e-05, 9.559699999999935e-05, 9.547199999999922e-05, 9.579200000000079e-05, 9.51530000000006e-05, 9.540300000000085e-05, 9.513899999999756e-05, 9.52079999999994e-05, 9.54729999999987e-05, 9.506999999999918e-05, 9.522299999999845e-05, 9.490200000000087e-05, 9.526400000000115e-05, 9.577700000000175e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.423" endtime="20201029 18:18:08.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.419" endtime="20201029 18:18:08.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.430" endtime="20201029 18:18:08.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.428" endtime="20201029 18:18:08.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.427" endtime="20201029 18:18:08.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.066" endtime="20201029 18:18:08.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.066" endtime="20201029 18:18:08.450"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.459" endtime="20201029 18:18:08.478"></status>
</kw>
<msg timestamp="20201029 18:18:08.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.457" endtime="20201029 18:18:08.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.479" endtime="20201029 18:18:08.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.482" endtime="20201029 18:18:08.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.455" endtime="20201029 18:18:08.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.453" endtime="20201029 18:18:08.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.490" endtime="20201029 18:18:08.777"></status>
</kw>
<msg timestamp="20201029 18:18:08.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.489" endtime="20201029 18:18:08.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.781" endtime="20201029 18:18:08.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.789" endtime="20201029 18:18:08.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.486" endtime="20201029 18:18:08.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.485" endtime="20201029 18:18:08.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.796" level="INFO">${RESULT} = [{'diff': 9.690299999999888e-05}, {'diff': 9.64019999999989e-05}, {'diff': 9.605500000000114e-05}, {'diff': 9.629199999999782e-05}, {'diff': 9.67080000000009e-05}, {'diff': 9.63470000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:08.792" endtime="20201029 18:18:08.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:08.800" level="INFO">${ACCURACY} = {'diff': [9.690299999999888e-05, 9.64019999999989e-05, 9.605500000000114e-05, 9.629199999999782e-05, 9.67080000000009e-05, 9.63470000000001e-05, 9.640200000000237e-05, 9.622199999999997e-05, 9.6527999...</msg>
<status status="PASS" starttime="20201029 18:18:08.796" endtime="20201029 18:18:08.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.804" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:18:08.803" endtime="20201029 18:18:08.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.806" level="INFO">VALUE: [9.690299999999888e-05, 9.64019999999989e-05, 9.605500000000114e-05, 9.629199999999782e-05, 9.67080000000009e-05, 9.63470000000001e-05, 9.640200000000237e-05, 9.622199999999997e-05, 9.65279999999985e-05, 9.68470000000006e-05, 9.599999999999886e-05, 9.64019999999989e-05, 9.659700000000035e-05, 9.645800000000065e-05, 9.640299999999838e-05, 9.590200000000187e-05, 9.636099999999967e-05, 9.66530000000021e-05, 9.663899999999906e-05, 9.604199999999757e-05, 9.597199999999972e-05, 9.67920000000018e-05, 9.669499999999734e-05, 9.681900000000146e-05, 9.66660000000022e-05, 9.591600000000144e-05, 9.672200000000047e-05, 9.615200000000212e-05, 9.606900000000071e-05, 9.636100000000314e-05, 9.655500000000164e-05, 9.600000000000233e-05, 9.613900000000203e-05, 9.601399999999843e-05, 9.609799999999932e-05, 9.654100000000207e-05, 9.622199999999997e-05, 9.604200000000104e-05, 9.636099999999967e-05, 9.654200000000154e-05, 9.673600000000004e-05, 9.679099999999885e-05, 9.64859999999998e-05, 9.640299999999838e-05, 9.591700000000092e-05, 9.591699999999745e-05, 9.640299999999838e-05, 9.666700000000167e-05, 9.604199999999757e-05, 9.641600000000194e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.805" endtime="20201029 18:18:08.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.800" endtime="20201029 18:18:08.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.811" endtime="20201029 18:18:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.810" endtime="20201029 18:18:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.809" endtime="20201029 18:18:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.451" endtime="20201029 18:18:08.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.451" endtime="20201029 18:18:08.832"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.840" endtime="20201029 18:18:08.860"></status>
</kw>
<msg timestamp="20201029 18:18:08.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.839" endtime="20201029 18:18:08.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.862" endtime="20201029 18:18:08.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.864" endtime="20201029 18:18:08.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.836" endtime="20201029 18:18:08.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.834" endtime="20201029 18:18:08.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.873" endtime="20201029 18:18:09.159"></status>
</kw>
<msg timestamp="20201029 18:18:09.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.871" endtime="20201029 18:18:09.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.163" endtime="20201029 18:18:09.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.171" endtime="20201029 18:18:09.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.869" endtime="20201029 18:18:09.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.867" endtime="20201029 18:18:09.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.178" level="INFO">${RESULT} = [{'diff': 9.792999999999955e-05}, {'diff': 9.769400000000233e-05}, {'diff': 9.75279999999995e-05}, {'diff': 9.727799999999925e-05}, {'diff': 9.740299999999938e-05}, {'diff': 9.772299999999748e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:09.174" endtime="20201029 18:18:09.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:09.182" level="INFO">${ACCURACY} = {'diff': [9.792999999999955e-05, 9.769400000000233e-05, 9.75279999999995e-05, 9.727799999999925e-05, 9.740299999999938e-05, 9.772299999999748e-05, 9.688899999999931e-05, 9.733300000000153e-05, 9.75970...</msg>
<status status="PASS" starttime="20201029 18:18:09.179" endtime="20201029 18:18:09.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.186" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:18:09.185" endtime="20201029 18:18:09.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.188" level="INFO">VALUE: [9.792999999999955e-05, 9.769400000000233e-05, 9.75279999999995e-05, 9.727799999999925e-05, 9.740299999999938e-05, 9.772299999999748e-05, 9.688899999999931e-05, 9.733300000000153e-05, 9.759700000000135e-05, 9.777799999999975e-05, 9.734699999999763e-05, 9.772200000000147e-05, 9.733300000000153e-05, 9.754199999999907e-05, 9.722200000000097e-05, 9.741699999999895e-05, 9.78609999999977e-05, 9.716599999999923e-05, 9.693100000000149e-05, 9.718000000000226e-05, 9.729199999999882e-05, 9.765299999999963e-05, 9.777799999999975e-05, 9.690300000000235e-05, 9.693100000000149e-05, 9.759699999999788e-05, 9.730499999999892e-05, 9.782000000000193e-05, 9.786100000000117e-05, 9.777800000000322e-05, 9.759800000000082e-05, 9.761100000000092e-05, 9.727799999999925e-05, 9.768099999999877e-05, 9.765299999999963e-05, 9.729199999999882e-05, 9.705600000000161e-05, 9.723600000000054e-05, 9.751399999999993e-05, 9.759700000000135e-05, 9.73609999999972e-05, 9.779099999999985e-05, 9.733299999999806e-05, 9.691700000000192e-05, 9.701299999999996e-05, 9.73470000000011e-05, 9.722200000000097e-05, 9.705600000000161e-05, 9.720900000000088e-05, 9.709700000000085e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.187" endtime="20201029 18:18:09.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.182" endtime="20201029 18:18:09.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.194" endtime="20201029 18:18:09.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.193" endtime="20201029 18:18:09.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.191" endtime="20201029 18:18:09.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.833" endtime="20201029 18:18:09.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.832" endtime="20201029 18:18:09.215"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.223" endtime="20201029 18:18:09.242"></status>
</kw>
<msg timestamp="20201029 18:18:09.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.222" endtime="20201029 18:18:09.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.244" endtime="20201029 18:18:09.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.246" endtime="20201029 18:18:09.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.219" endtime="20201029 18:18:09.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.217" endtime="20201029 18:18:09.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.255" endtime="20201029 18:18:09.540"></status>
</kw>
<msg timestamp="20201029 18:18:09.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021326125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.253" endtime="20201029 18:18:09.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021326125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.544" endtime="20201029 18:18:09.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.553" endtime="20201029 18:18:09.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.251" endtime="20201029 18:18:09.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.249" endtime="20201029 18:18:09.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.559" level="INFO">${RESULT} = [{'diff': 9.84999999999979e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.85280000000005e-05}, {'diff': 9.845900000000213e-05}, {'diff': 9.852700000000103e-05}, {'diff': 9.886100000000217e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:09.556" endtime="20201029 18:18:09.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:09.564" level="INFO">${ACCURACY} = {'diff': [9.84999999999979e-05, 9.884699999999913e-05, 9.85280000000005e-05, 9.845900000000213e-05, 9.852700000000103e-05, 9.886100000000217e-05, 9.811099999999795e-05, 9.797199999999825e-05, 9.844500...</msg>
<status status="PASS" starttime="20201029 18:18:09.560" endtime="20201029 18:18:09.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.568" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:18:09.567" endtime="20201029 18:18:09.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.571" level="INFO">VALUE: [9.84999999999979e-05, 9.884699999999913e-05, 9.85280000000005e-05, 9.845900000000213e-05, 9.852700000000103e-05, 9.886100000000217e-05, 9.811099999999795e-05, 9.797199999999825e-05, 9.844500000000256e-05, 9.869399999999987e-05, 9.838900000000081e-05, 9.847200000000222e-05, 9.863899999999759e-05, 9.826300000000121e-05, 9.851300000000146e-05, 9.859699999999888e-05, 9.795799999999869e-05, 9.854200000000007e-05, 9.827800000000025e-05, 9.833299999999906e-05, 9.850000000000136e-05, 9.870899999999891e-05, 9.865200000000116e-05, 9.795799999999869e-05, 9.876400000000118e-05, 9.794399999999912e-05, 9.841699999999995e-05, 9.873599999999857e-05, 9.78609999999977e-05, 9.859799999999835e-05, 9.832000000000243e-05, 9.881899999999999e-05, 9.8028e-05, 9.795799999999869e-05, 9.808299999999881e-05, 9.874999999999814e-05, 9.80410000000001e-05, 9.844399999999962e-05, 9.858299999999931e-05, 9.838900000000081e-05, 9.82219999999985e-05, 9.845800000000265e-05, 9.844399999999962e-05, 9.833299999999906e-05, 9.875000000000161e-05, 9.836100000000167e-05, 9.851399999999746e-05, 9.84999999999979e-05, 9.86670000000002e-05, 9.813900000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.569" endtime="20201029 18:18:09.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.565" endtime="20201029 18:18:09.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.580" endtime="20201029 18:18:09.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.578" endtime="20201029 18:18:09.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.577" endtime="20201029 18:18:09.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.216" endtime="20201029 18:18:09.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.215" endtime="20201029 18:18:09.600"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.609" endtime="20201029 18:18:09.628"></status>
</kw>
<msg timestamp="20201029 18:18:09.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.607" endtime="20201029 18:18:09.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.629" endtime="20201029 18:18:09.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.632" endtime="20201029 18:18:09.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.605" endtime="20201029 18:18:09.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.603" endtime="20201029 18:18:09.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.641" endtime="20201029 18:18:09.928"></status>
</kw>
<msg timestamp="20201029 18:18:09.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.639" endtime="20201029 18:18:09.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.932" endtime="20201029 18:18:09.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.940" endtime="20201029 18:18:09.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.637" endtime="20201029 18:18:09.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.635" endtime="20201029 18:18:09.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.946" level="INFO">${RESULT} = [{'diff': 9.952699999999856e-05}, {'diff': 9.9722e-05}, {'diff': 9.909699999999938e-05}, {'diff': 9.955500000000117e-05}, {'diff': 9.915300000000113e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.9...</msg>
<status status="PASS" starttime="20201029 18:18:09.943" endtime="20201029 18:18:09.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:09.950" level="INFO">${ACCURACY} = {'diff': [9.952699999999856e-05, 9.9722e-05, 9.909699999999938e-05, 9.955500000000117e-05, 9.915300000000113e-05, 9.934699999999963e-05, 9.947299999999923e-05, 9.959699999999988e-05, 9.954099999999813...</msg>
<status status="PASS" starttime="20201029 18:18:09.947" endtime="20201029 18:18:09.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.955" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:18:09.954" endtime="20201029 18:18:09.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.957" level="INFO">VALUE: [9.952699999999856e-05, 9.9722e-05, 9.909699999999938e-05, 9.955500000000117e-05, 9.915300000000113e-05, 9.934699999999963e-05, 9.947299999999923e-05, 9.959699999999988e-05, 9.954099999999813e-05, 9.976399999999871e-05, 9.908299999999981e-05, 9.965199999999869e-05, 9.948599999999932e-05, 9.89999999999984e-05, 9.947299999999923e-05, 9.9028000000001e-05, 9.9028000000001e-05, 9.970799999999697e-05, 9.934800000000257e-05, 9.929100000000135e-05, 9.941700000000095e-05, 9.95419999999976e-05, 9.975000000000261e-05, 9.944400000000062e-05, 9.970800000000044e-05, 9.933300000000006e-05, 9.987499999999927e-05, 9.901400000000143e-05, 9.9722e-05, 9.915300000000113e-05, 9.887500000000174e-05, 9.963899999999859e-05, 9.981900000000099e-05, 9.940300000000138e-05, 9.912499999999852e-05, 9.911099999999895e-05, 9.924999999999864e-05, 9.958399999999978e-05, 9.962499999999902e-05, 9.909700000000285e-05, 9.976400000000218e-05, 9.969400000000087e-05, 9.966699999999773e-05, 9.908299999999981e-05, 9.945800000000019e-05, 9.9028000000001e-05, 9.908299999999981e-05, 9.9028000000001e-05, 9.952699999999856e-05, 9.956900000000074e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.956" endtime="20201029 18:18:09.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.951" endtime="20201029 18:18:09.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.962" endtime="20201029 18:18:09.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.960" endtime="20201029 18:18:09.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.959" endtime="20201029 18:18:09.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.601" endtime="20201029 18:18:09.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.601" endtime="20201029 18:18:09.983"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.991" endtime="20201029 18:18:10.011"></status>
</kw>
<msg timestamp="20201029 18:18:10.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.990" endtime="20201029 18:18:10.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.013" endtime="20201029 18:18:10.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.015" endtime="20201029 18:18:10.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.987" endtime="20201029 18:18:10.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.985" endtime="20201029 18:18:10.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.024" endtime="20201029 18:18:10.310"></status>
</kw>
<msg timestamp="20201029 18:18:10.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.022" endtime="20201029 18:18:10.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.314" endtime="20201029 18:18:10.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.322" endtime="20201029 18:18:10.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.020" endtime="20201029 18:18:10.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.018" endtime="20201029 18:18:10.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.328" level="INFO">${RESULT} = [{'diff': 0.00010120799999999847}, {'diff': 0.00010027799999999878}, {'diff': 9.987499999999927e-05}, {'diff': 0.00010019500000000084}, {'diff': 0.00010026399999999921}, {'diff': 9.99999999999994e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:10.325" endtime="20201029 18:18:10.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:10.332" level="INFO">${ACCURACY} = {'diff': [0.00010120799999999847, 0.00010027799999999878, 9.987499999999927e-05, 0.00010019500000000084, 0.00010026399999999921, 9.99999999999994e-05, 0.00010045800000000119, 0.00010001400000000243, 0...</msg>
<status status="PASS" starttime="20201029 18:18:10.329" endtime="20201029 18:18:10.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.336" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:18:10.335" endtime="20201029 18:18:10.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.339" level="INFO">VALUE: [0.00010120799999999847, 0.00010027799999999878, 9.987499999999927e-05, 0.00010019500000000084, 0.00010026399999999921, 9.99999999999994e-05, 0.00010045800000000119, 0.00010001400000000243, 0.00010069499999999787, 0.00010072299999999701, 9.990300000000188e-05, 0.00010086099999999723, 0.00010076399999999971, 0.00010040300000000238, 0.00010084700000000113, 0.00010040199999999944, 0.00010058299999999784, 0.00010038899999999934, 0.00010012499999999952, 0.00010081899999999852, 0.00010051399999999946, 0.00010045800000000119, 9.988900000000231e-05, 9.995800000000069e-05, 0.00010051399999999946, 0.00010027800000000225, 0.00010084700000000113, 0.00010063899999999959, 0.00010082000000000146, 0.00010034700000000063, 0.00010012499999999952, 0.00010070799999999797, 0.00010015299999999866, 0.00010030500000000192, 0.0001000410000000021, 0.00010051399999999946, 0.00010040299999999891, 0.00010015199999999919, 0.00010070800000000144, 0.00010054099999999913, 0.0001008060000000019, 0.00010024999999999964, 9.988899999999884e-05, 0.00010001399999999896, 9.988900000000231e-05, 0.00010031899999999802, 0.00010040300000000238, 0.0001004999999999999, 9.988899999999884e-05, 0.00010083300000000156]</msg>
<status status="PASS" starttime="20201029 18:18:10.337" endtime="20201029 18:18:10.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.333" endtime="20201029 18:18:10.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.345" endtime="20201029 18:18:10.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.343" endtime="20201029 18:18:10.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.342" endtime="20201029 18:18:10.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.983" endtime="20201029 18:18:10.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.983" endtime="20201029 18:18:10.365"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.374" endtime="20201029 18:18:10.393"></status>
</kw>
<msg timestamp="20201029 18:18:10.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.372" endtime="20201029 18:18:10.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.394" endtime="20201029 18:18:10.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.397" endtime="20201029 18:18:10.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.370" endtime="20201029 18:18:10.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.368" endtime="20201029 18:18:10.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.405" endtime="20201029 18:18:10.691"></status>
</kw>
<msg timestamp="20201029 18:18:10.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021264028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021365847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.404" endtime="20201029 18:18:10.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021264028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021365847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.695" endtime="20201029 18:18:10.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.703" endtime="20201029 18:18:10.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.401" endtime="20201029 18:18:10.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.400" endtime="20201029 18:18:10.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.709" level="INFO">${RESULT} = [{'diff': 0.00010181899999999952}, {'diff': 0.00010140299999999991}, {'diff': 0.00010090300000000288}, {'diff': 0.00010161099999999798}, {'diff': 0.0001011939999999989}, {'diff': 0.0001010139999999999...</msg>
<status status="PASS" starttime="20201029 18:18:10.706" endtime="20201029 18:18:10.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:10.714" level="INFO">${ACCURACY} = {'diff': [0.00010181899999999952, 0.00010140299999999991, 0.00010090300000000288, 0.00010161099999999798, 0.0001011939999999989, 0.00010101399999999996, 0.00010122199999999804, 0.00010113900000000009,...</msg>
<status status="PASS" starttime="20201029 18:18:10.710" endtime="20201029 18:18:10.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.718" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:18:10.717" endtime="20201029 18:18:10.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.721" level="INFO">VALUE: [0.00010181899999999952, 0.00010140299999999991, 0.00010090300000000288, 0.00010161099999999798, 0.0001011939999999989, 0.00010101399999999996, 0.00010122199999999804, 0.00010113900000000009, 0.00010151400000000046, 0.0001013480000000011, 0.00010084700000000113, 0.00010161100000000145, 0.00010170799999999897, 0.00010120799999999847, 0.00010126400000000021, 0.00010106999999999824, 0.00010152800000000003, 0.00010087500000000027, 0.00010175000000000115, 0.00010098600000000083, 0.00010109700000000138, 0.00010152800000000003, 0.00010183300000000256, 0.00010109699999999791, 0.00010154100000000013, 0.00010159700000000188, 0.00010127700000000031, 0.00010172199999999854, 0.00010109799999999738, 0.00010145900000000166, 0.00010094399999999865, 0.00010134699999999816, 0.00010144399999999915, 0.00010120800000000194, 0.00010151400000000046, 0.0001016939999999994, 0.00010130599999999892, 0.00010145799999999872, 0.00010144499999999862, 0.00010101399999999996, 0.00010116599999999976, 0.00010159700000000188, 0.000101513999999997, 0.0001010000000000004, 0.0001015549999999997, 0.00010176400000000071, 0.00010140299999999991, 0.00010165300000000016, 0.00010095800000000169, 0.00010148600000000133]</msg>
<status status="PASS" starttime="20201029 18:18:10.720" endtime="20201029 18:18:10.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.715" endtime="20201029 18:18:10.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.726" endtime="20201029 18:18:10.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.724" endtime="20201029 18:18:10.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.723" endtime="20201029 18:18:10.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.366" endtime="20201029 18:18:10.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.366" endtime="20201029 18:18:10.746"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.755" endtime="20201029 18:18:10.774"></status>
</kw>
<msg timestamp="20201029 18:18:10.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.753" endtime="20201029 18:18:10.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.775" endtime="20201029 18:18:10.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.778" endtime="20201029 18:18:10.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.751" endtime="20201029 18:18:10.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.749" endtime="20201029 18:18:10.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.786" endtime="20201029 18:18:11.075"></status>
</kw>
<msg timestamp="20201029 18:18:11.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021240986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.785" endtime="20201029 18:18:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021240986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.079" endtime="20201029 18:18:11.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.087" endtime="20201029 18:18:11.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.782" endtime="20201029 18:18:11.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.781" endtime="20201029 18:18:11.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.093" level="INFO">${RESULT} = [{'diff': 0.00010294500000000012}, {'diff': 0.00010219499999999937}, {'diff': 0.00010258299999999984}, {'diff': 0.00010276399999999825}, {'diff': 0.0001026940000000004}, {'diff': 0.0001026530000000011...</msg>
<status status="PASS" starttime="20201029 18:18:11.090" endtime="20201029 18:18:11.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:11.097" level="INFO">${ACCURACY} = {'diff': [0.00010294500000000012, 0.00010219499999999937, 0.00010258299999999984, 0.00010276399999999825, 0.0001026940000000004, 0.00010265300000000116, 0.00010272199999999954, 0.00010220899999999894,...</msg>
<status status="PASS" starttime="20201029 18:18:11.094" endtime="20201029 18:18:11.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.102" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:18:11.101" endtime="20201029 18:18:11.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.104" level="INFO">VALUE: [0.00010294500000000012, 0.00010219499999999937, 0.00010258299999999984, 0.00010276399999999825, 0.0001026940000000004, 0.00010265300000000116, 0.00010272199999999954, 0.00010220899999999894, 0.00010277799999999782, 0.00010245799999999972, 0.00010240200000000144, 0.00010252800000000103, 0.00010248599999999886, 0.00010201400000000097, 0.00010209699999999891, 0.00010197199999999879, 0.00010187500000000127, 0.00010202700000000106, 0.00010195799999999922, 0.00010213900000000109, 0.00010209700000000238, 0.00010225000000000165, 0.00010194500000000259, 0.00010194499999999912, 0.00010238899999999787, 0.00010202800000000053, 0.00010206999999999924, 0.00010234699999999916, 0.0001021939999999999, 0.00010198600000000183, 0.00010222199999999904, 0.0001021939999999999, 0.00010238899999999787, 0.00010249999999999843, 0.00010197199999999879, 0.00010270799999999997, 0.00010281900000000052, 0.00010241700000000048, 0.0001023480000000021, 0.0001023749999999983, 0.00010193000000000008, 0.00010190300000000041, 0.00010256999999999974, 0.000102722000000003, 0.00010234700000000263, 0.00010275000000000215, 0.00010195799999999922, 0.00010279200000000085, 0.00010281900000000052, 0.000102416000000001]</msg>
<status status="PASS" starttime="20201029 18:18:11.103" endtime="20201029 18:18:11.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.098" endtime="20201029 18:18:11.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.109" endtime="20201029 18:18:11.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.107" endtime="20201029 18:18:11.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.106" endtime="20201029 18:18:11.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.747" endtime="20201029 18:18:11.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.747" endtime="20201029 18:18:11.130"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.138" endtime="20201029 18:18:11.158"></status>
</kw>
<msg timestamp="20201029 18:18:11.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.136" endtime="20201029 18:18:11.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.159" endtime="20201029 18:18:11.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.162" endtime="20201029 18:18:11.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.134" endtime="20201029 18:18:11.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.132" endtime="20201029 18:18:11.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.171" endtime="20201029 18:18:11.456"></status>
</kw>
<msg timestamp="20201029 18:18:11.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.169" endtime="20201029 18:18:11.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.460" endtime="20201029 18:18:11.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.468" endtime="20201029 18:18:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.167" endtime="20201029 18:18:11.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.165" endtime="20201029 18:18:11.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.474" level="INFO">${RESULT} = [{'diff': 0.00010431900000000202}, {'diff': 0.0001036810000000013}, {'diff': 0.00010368099999999783}, {'diff': 0.00010293100000000055}, {'diff': 0.0001032359999999996}, {'diff': 0.00010363799999999965...</msg>
<status status="PASS" starttime="20201029 18:18:11.471" endtime="20201029 18:18:11.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:11.478" level="INFO">${ACCURACY} = {'diff': [0.00010431900000000202, 0.0001036810000000013, 0.00010368099999999783, 0.00010293100000000055, 0.0001032359999999996, 0.00010363799999999965, 0.00010345799999999725, 0.00010342999999999811, ...</msg>
<status status="PASS" starttime="20201029 18:18:11.475" endtime="20201029 18:18:11.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.482" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:18:11.481" endtime="20201029 18:18:11.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.485" level="INFO">VALUE: [0.00010431900000000202, 0.0001036810000000013, 0.00010368099999999783, 0.00010293100000000055, 0.0001032359999999996, 0.00010363799999999965, 0.00010345799999999725, 0.00010342999999999811, 0.0001035689999999978, 0.00010338900000000234, 0.00010284799999999913, 0.0001030139999999985, 0.00010336099999999973, 0.0001031810000000008, 0.00010372200000000054, 0.00010304100000000163, 0.00010338900000000234, 0.0001034870000000028, 0.00010348599999999986, 0.00010320800000000047, 0.0001037360000000001, 0.00010379199999999839, 0.00010366700000000173, 0.0001036810000000013, 0.00010315300000000166, 0.0001036949999999974, 0.00010322200000000004, 0.00010330599999999746, 0.00010377699999999934, 0.00010309799999999938, 0.00010340299999999844, 0.00010358299999999737, 0.00010357000000000074, 0.00010333400000000006, 0.00010362499999999955, 0.0001033200000000005, 0.00010358400000000031, 0.00010365299999999869, 0.00010341700000000148, 0.00010295899999999969, 0.00010302799999999807, 0.00010320800000000047, 0.000103513999999999, 0.00010390299999999894, 0.00010322299999999951, 0.00010358300000000084, 0.00010290299999999794, 0.00010330500000000145, 0.00010312499999999905, 0.000103820000000001]</msg>
<status status="PASS" starttime="20201029 18:18:11.483" endtime="20201029 18:18:11.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.479" endtime="20201029 18:18:11.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.491" endtime="20201029 18:18:11.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.489" endtime="20201029 18:18:11.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.488" endtime="20201029 18:18:11.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.130" endtime="20201029 18:18:11.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.130" endtime="20201029 18:18:11.511"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.520" endtime="20201029 18:18:11.539"></status>
</kw>
<msg timestamp="20201029 18:18:11.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.518" endtime="20201029 18:18:11.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.540" endtime="20201029 18:18:11.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.543" endtime="20201029 18:18:11.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.516" endtime="20201029 18:18:11.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.514" endtime="20201029 18:18:11.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.551" endtime="20201029 18:18:11.838"></status>
</kw>
<msg timestamp="20201029 18:18:11.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.550" endtime="20201029 18:18:11.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.842" endtime="20201029 18:18:11.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.850" endtime="20201029 18:18:11.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.548" endtime="20201029 18:18:11.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.546" endtime="20201029 18:18:11.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.856" level="INFO">${RESULT} = [{'diff': 0.00010488900000000037}, {'diff': 0.00010476400000000025}, {'diff': 0.00010462499999999708}, {'diff': 0.00010431899999999855}, {'diff': 0.00010419399999999843}, {'diff': 0.000104138999999999...</msg>
<status status="PASS" starttime="20201029 18:18:11.853" endtime="20201029 18:18:11.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:11.861" level="INFO">${ACCURACY} = {'diff': [0.00010488900000000037, 0.00010476400000000025, 0.00010462499999999708, 0.00010431899999999855, 0.00010419399999999843, 0.00010413899999999962, 0.00010469500000000187, 0.00010388899999999937...</msg>
<status status="PASS" starttime="20201029 18:18:11.857" endtime="20201029 18:18:11.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.865" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:18:11.864" endtime="20201029 18:18:11.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.868" level="INFO">VALUE: [0.00010488900000000037, 0.00010476400000000025, 0.00010462499999999708, 0.00010431899999999855, 0.00010419399999999843, 0.00010413899999999962, 0.00010469500000000187, 0.00010388899999999937, 0.00010425000000000018, 0.00010462499999999708, 0.00010444400000000215, 0.00010426300000000027, 0.00010416700000000223, 0.00010462500000000055, 0.00010399999999999993, 0.00010431900000000202, 0.00010483299999999862, 0.00010416699999999876, 0.0001045689999999988, 0.000104820000000002, 0.00010390300000000241, 0.00010466699999999926, 0.00010388900000000284, 0.00010476400000000025, 0.00010466599999999979, 0.00010486099999999776, 0.00010426399999999975, 0.00010468099999999883, 0.000104207999999998, 0.0001040139999999995, 0.00010476300000000077, 0.00010458300000000184, 0.00010409700000000091, 0.00010461100000000098, 0.00010463900000000012, 0.00010425000000000018, 0.00010458299999999837, 0.00010465299999999969, 0.00010391699999999851, 0.00010431900000000202, 0.00010461100000000098, 0.00010411100000000048, 0.00010395900000000069, 0.0001043750000000003, 0.00010408300000000134, 0.00010481999999999853, 0.0001045559999999987, 0.00010427699999999984, 0.00010420800000000147, 0.00010433299999999812]</msg>
<status status="PASS" starttime="20201029 18:18:11.867" endtime="20201029 18:18:11.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.862" endtime="20201029 18:18:11.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.873" endtime="20201029 18:18:11.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.871" endtime="20201029 18:18:11.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.870" endtime="20201029 18:18:11.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.512" endtime="20201029 18:18:11.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.512" endtime="20201029 18:18:11.893"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.902" endtime="20201029 18:18:11.921"></status>
</kw>
<msg timestamp="20201029 18:18:11.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.901" endtime="20201029 18:18:11.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.923" endtime="20201029 18:18:11.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.925" endtime="20201029 18:18:11.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.898" endtime="20201029 18:18:11.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.896" endtime="20201029 18:18:11.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.934" endtime="20201029 18:18:12.220"></status>
</kw>
<msg timestamp="20201029 18:18:12.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021469931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.932" endtime="20201029 18:18:12.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021469931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.224" endtime="20201029 18:18:12.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.232" endtime="20201029 18:18:12.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.930" endtime="20201029 18:18:12.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.928" endtime="20201029 18:18:12.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.238" level="INFO">${RESULT} = [{'diff': 0.00010549999999999796}, {'diff': 0.00010580499999999701}, {'diff': 0.00010556900000000327}, {'diff': 0.00010562499999999808}, {'diff': 0.00010561100000000198}, {'diff': 0.000105181000000002...</msg>
<status status="PASS" starttime="20201029 18:18:12.235" endtime="20201029 18:18:12.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:12.242" level="INFO">${ACCURACY} = {'diff': [0.00010549999999999796, 0.00010580499999999701, 0.00010556900000000327, 0.00010562499999999808, 0.00010561100000000198, 0.0001051810000000028, 0.0001057079999999995, 0.0001058339999999991, 0...</msg>
<status status="PASS" starttime="20201029 18:18:12.239" endtime="20201029 18:18:12.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.246" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:18:12.245" endtime="20201029 18:18:12.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.249" level="INFO">VALUE: [0.00010549999999999796, 0.00010580499999999701, 0.00010556900000000327, 0.00010562499999999808, 0.00010561100000000198, 0.0001051810000000028, 0.0001057079999999995, 0.0001058339999999991, 0.00010493100000000255, 0.00010506999999999878, 0.00010566600000000079, 0.00010527799999999685, 0.00010552800000000057, 0.00010501300000000102, 0.00010565299999999722, 0.00010559800000000188, 0.00010495800000000222, 0.00010545900000000219, 0.00010577800000000082, 0.00010548599999999839, 0.0001055559999999997, 0.00010545899999999872, 0.00010517999999999986, 0.00010531999999999903, 0.00010583299999999962, 0.00010580500000000048, 0.00010527799999999685, 0.00010488900000000037, 0.0001053750000000013, 0.00010580599999999996, 0.00010576400000000125, 0.00010533300000000259, 0.00010573599999999864, 0.00010525000000000118, 0.0001048750000000008, 0.0001057079999999995, 0.00010486100000000123, 0.00010527800000000032, 0.0001050140000000005, 0.00010495800000000222, 0.00010580500000000048, 0.00010538900000000087, 0.00010513900000000062, 0.00010563900000000112, 0.00010556999999999928, 0.00010568000000000036, 0.00010566599999999732, 0.00010568000000000036, 0.00010526400000000075, 0.00010491600000000004]</msg>
<status status="PASS" starttime="20201029 18:18:12.248" endtime="20201029 18:18:12.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.243" endtime="20201029 18:18:12.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.254" endtime="20201029 18:18:12.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.252" endtime="20201029 18:18:12.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.251" endtime="20201029 18:18:12.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.894" endtime="20201029 18:18:12.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.894" endtime="20201029 18:18:12.274"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.283" endtime="20201029 18:18:12.303"></status>
</kw>
<msg timestamp="20201029 18:18:12.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.281" endtime="20201029 18:18:12.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.305" endtime="20201029 18:18:12.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.307" endtime="20201029 18:18:12.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.279" endtime="20201029 18:18:12.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.277" endtime="20201029 18:18:12.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.316" endtime="20201029 18:18:12.601"></status>
</kw>
<msg timestamp="20201029 18:18:12.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.314" endtime="20201029 18:18:12.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.606" endtime="20201029 18:18:12.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.614" endtime="20201029 18:18:12.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.312" endtime="20201029 18:18:12.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.310" endtime="20201029 18:18:12.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.620" level="INFO">${RESULT} = [{'diff': 0.00010691700000000151}, {'diff': 0.00010617999999999739}, {'diff': 0.0001063750000000023}, {'diff': 0.00010654199999999767}, {'diff': 0.00010652800000000157}, {'diff': 0.0001066249999999990...</msg>
<status status="PASS" starttime="20201029 18:18:12.617" endtime="20201029 18:18:12.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:12.624" level="INFO">${ACCURACY} = {'diff': [0.00010691700000000151, 0.00010617999999999739, 0.0001063750000000023, 0.00010654199999999767, 0.00010652800000000157, 0.00010662499999999908, 0.00010593000000000061, 0.00010623599999999914,...</msg>
<status status="PASS" starttime="20201029 18:18:12.621" endtime="20201029 18:18:12.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.629" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:18:12.628" endtime="20201029 18:18:12.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.631" level="INFO">VALUE: [0.00010691700000000151, 0.00010617999999999739, 0.0001063750000000023, 0.00010654199999999767, 0.00010652800000000157, 0.00010662499999999908, 0.00010593000000000061, 0.00010623599999999914, 0.00010655500000000123, 0.00010627800000000132, 0.00010605500000000073, 0.00010668100000000083, 0.00010643100000000058, 0.00010612500000000205, 0.00010618100000000033, 0.00010676399999999878, 0.00010618100000000033, 0.00010661099999999951, 0.00010604199999999717, 0.00010662499999999908, 0.00010650000000000243, 0.0001062499999999987, 0.00010641700000000101, 0.00010648599999999939, 0.00010680499999999801, 0.0001063889999999984, 0.00010599999999999846, 0.00010663900000000212, 0.00010649999999999896, 0.00010651399999999853, 0.00010629199999999742, 0.00010652800000000157, 0.00010613799999999868, 0.00010643000000000111, 0.00010655500000000123, 0.0001062360000000026, 0.00010612500000000205, 0.00010626400000000175, 0.0001063339999999996, 0.0001058620000000017, 0.00010588799999999843, 0.0001065690000000008, 0.00010611099999999901, 0.00010645800000000025, 0.00010619400000000043, 0.00010601399999999803, 0.00010629200000000089, 0.00010584700000000266, 0.00010652800000000157, 0.00010644500000000015]</msg>
<status status="PASS" starttime="20201029 18:18:12.630" endtime="20201029 18:18:12.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.625" endtime="20201029 18:18:12.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.637" endtime="20201029 18:18:12.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.636" endtime="20201029 18:18:12.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.635" endtime="20201029 18:18:12.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.275" endtime="20201029 18:18:12.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.275" endtime="20201029 18:18:12.658"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.668" endtime="20201029 18:18:12.687"></status>
</kw>
<msg timestamp="20201029 18:18:12.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.666" endtime="20201029 18:18:12.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.689" endtime="20201029 18:18:12.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.691" endtime="20201029 18:18:12.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.663" endtime="20201029 18:18:12.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.661" endtime="20201029 18:18:12.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.700" endtime="20201029 18:18:13.005"></status>
</kw>
<msg timestamp="20201029 18:18:13.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.699" endtime="20201029 18:18:13.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.009" endtime="20201029 18:18:13.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.017" endtime="20201029 18:18:13.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.696" endtime="20201029 18:18:13.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.694" endtime="20201029 18:18:13.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.023" level="INFO">${RESULT} = [{'diff': 0.0001077500000000002}, {'diff': 0.0001077500000000002}, {'diff': 0.00010762500000000008}, {'diff': 0.00010772200000000107}, {'diff': 0.00010713899999999915}, {'diff': 0.0001068750000000028}...</msg>
<status status="PASS" starttime="20201029 18:18:13.020" endtime="20201029 18:18:13.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:13.028" level="INFO">${ACCURACY} = {'diff': [0.0001077500000000002, 0.0001077500000000002, 0.00010762500000000008, 0.00010772200000000107, 0.00010713899999999915, 0.0001068750000000028, 0.00010711100000000001, 0.00010773600000000064, 0...</msg>
<status status="PASS" starttime="20201029 18:18:13.024" endtime="20201029 18:18:13.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.032" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:18:13.031" endtime="20201029 18:18:13.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.035" level="INFO">VALUE: [0.0001077500000000002, 0.0001077500000000002, 0.00010762500000000008, 0.00010772200000000107, 0.00010713899999999915, 0.0001068750000000028, 0.00010711100000000001, 0.00010773600000000064, 0.00010780499999999901, 0.00010733300000000112, 0.00010777800000000282, 0.0001068750000000028, 0.00010776399999999978, 0.00010744500000000115, 0.00010755599999999824, 0.00010699999999999946, 0.00010723600000000014, 0.0001072499999999997, 0.00010749999999999996, 0.00010699999999999946, 0.00010768100000000183, 0.00010762500000000008, 0.00010718099999999786, 0.00010711199999999949, 0.00010687499999999933, 0.00010742999999999864, 0.00010734800000000017, 0.00010699999999999946, 0.0001077500000000002, 0.0001070829999999974, 0.00010712499999999958, 0.00010737499999999983, 0.0001075279999999991, 0.00010749999999999996, 0.00010704099999999869, 0.00010768000000000236, 0.00010776399999999978, 0.00010761100000000051, 0.00010732000000000103, 0.00010741700000000201, 0.00010705599999999774, 0.0001068750000000028, 0.00010744500000000115, 0.00010773600000000064, 0.00010748699999999986, 0.00010761100000000051, 0.00010687499999999933, 0.0001077630000000003, 0.0001072499999999997, 0.00010686099999999976]</msg>
<status status="PASS" starttime="20201029 18:18:13.033" endtime="20201029 18:18:13.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.029" endtime="20201029 18:18:13.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.040" endtime="20201029 18:18:13.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.038" endtime="20201029 18:18:13.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.037" endtime="20201029 18:18:13.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.659" endtime="20201029 18:18:13.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.659" endtime="20201029 18:18:13.060"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.069" endtime="20201029 18:18:13.088"></status>
</kw>
<msg timestamp="20201029 18:18:13.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.067" endtime="20201029 18:18:13.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.090" endtime="20201029 18:18:13.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.092" endtime="20201029 18:18:13.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.065" endtime="20201029 18:18:13.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.063" endtime="20201029 18:18:13.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.101" endtime="20201029 18:18:13.387"></status>
</kw>
<msg timestamp="20201029 18:18:13.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02137975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:13.100" endtime="20201029 18:18:13.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02137975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:13.391" endtime="20201029 18:18:13.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.399" endtime="20201029 18:18:13.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.097" endtime="20201029 18:18:13.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.095" endtime="20201029 18:18:13.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.406" level="INFO">${RESULT} = [{'diff': 0.00010912499999999811}, {'diff': 0.00010801400000000003}, {'diff': 0.00010876400000000078}, {'diff': 0.00010863899999999718}, {'diff': 0.00010795900000000122}, {'diff': 0.000107902999999999...</msg>
<status status="PASS" starttime="20201029 18:18:13.403" endtime="20201029 18:18:13.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:13.410" level="INFO">${ACCURACY} = {'diff': [0.00010912499999999811, 0.00010801400000000003, 0.00010876400000000078, 0.00010863899999999718, 0.00010795900000000122, 0.00010790299999999947, 0.00010874999999999774, 0.00010807000000000178...</msg>
<status status="PASS" starttime="20201029 18:18:13.407" endtime="20201029 18:18:13.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.414" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:18:13.413" endtime="20201029 18:18:13.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.416" level="INFO">VALUE: [0.00010912499999999811, 0.00010801400000000003, 0.00010876400000000078, 0.00010863899999999718, 0.00010795900000000122, 0.00010790299999999947, 0.00010874999999999774, 0.00010807000000000178, 0.00010818100000000233, 0.00010874999999999774, 0.00010847199999999835, 0.0001082500000000007, 0.00010881899999999958, 0.00010813900000000015, 0.00010804199999999917, 0.00010869399999999946, 0.00010795899999999775, 0.00010809700000000144, 0.00010867999999999989, 0.00010820799999999853, 0.00010822200000000157, 0.00010868000000000336, 0.00010842999999999964, 0.00010843099999999911, 0.00010880599999999949, 0.00010798599999999742, 0.00010812500000000058, 0.00010876399999999731, 0.0001078889999999999, 0.00010844399999999921, 0.00010808399999999788, 0.0001080829999999984, 0.00010862500000000108, 0.00010816700000000276, 0.00010812500000000058, 0.00010818100000000233, 0.00010862500000000108, 0.00010834700000000169, 0.00010787500000000033, 0.00010806899999999883, 0.00010831999999999856, 0.00010874999999999774, 0.0001082500000000007, 0.00010830599999999899, 0.00010850000000000096, 0.00010817999999999939, 0.00010880599999999949, 0.00010873700000000111, 0.00010805599999999874, 0.00010836100000000126]</msg>
<status status="PASS" starttime="20201029 18:18:13.415" endtime="20201029 18:18:13.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.410" endtime="20201029 18:18:13.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.421" endtime="20201029 18:18:13.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.420" endtime="20201029 18:18:13.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.419" endtime="20201029 18:18:13.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.061" endtime="20201029 18:18:13.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.061" endtime="20201029 18:18:13.442"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.451" endtime="20201029 18:18:13.471"></status>
</kw>
<msg timestamp="20201029 18:18:13.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.449" endtime="20201029 18:18:13.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.472" endtime="20201029 18:18:13.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.475" endtime="20201029 18:18:13.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.446" endtime="20201029 18:18:13.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.444" endtime="20201029 18:18:13.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.484" endtime="20201029 18:18:13.769"></status>
</kw>
<msg timestamp="20201029 18:18:13.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:13.482" endtime="20201029 18:18:13.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:13.773" endtime="20201029 18:18:13.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.781" endtime="20201029 18:18:13.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.480" endtime="20201029 18:18:13.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.478" endtime="20201029 18:18:13.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.788" level="INFO">${RESULT} = [{'diff': 0.00011011099999999954}, {'diff': 0.00010948599999999892}, {'diff': 0.00010916599999999735}, {'diff': 0.00010947199999999935}, {'diff': 0.00010961100000000251}, {'diff': 0.000109416000000001...</msg>
<status status="PASS" starttime="20201029 18:18:13.784" endtime="20201029 18:18:13.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:13.791" level="INFO">${ACCURACY} = {'diff': [0.00011011099999999954, 0.00010948599999999892, 0.00010916599999999735, 0.00010947199999999935, 0.00010961100000000251, 0.00010941600000000107, 0.00010891600000000057, 0.00010909699999999897...</msg>
<status status="PASS" starttime="20201029 18:18:13.789" endtime="20201029 18:18:13.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.796" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:18:13.795" endtime="20201029 18:18:13.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.798" level="INFO">VALUE: [0.00011011099999999954, 0.00010948599999999892, 0.00010916599999999735, 0.00010947199999999935, 0.00010961100000000251, 0.00010941600000000107, 0.00010891600000000057, 0.00010909699999999897, 0.00010893000000000014, 0.00010980500000000101, 0.00010906899999999983, 0.00010905599999999974, 0.00010913899999999768, 0.00010936100000000226, 0.00010948600000000239, 0.00010937499999999836, 0.00010962499999999861, 0.00010980500000000101, 0.00010886099999999829, 0.00010974999999999874, 0.00010926400000000128, 0.00010924999999999824, 0.0001090280000000006, 0.00010918099999999986, 0.00010895800000000275, 0.00010950000000000196, 0.00010911099999999854, 0.00010904100000000069, 0.00010916700000000029, 0.00010938899999999793, 0.00010898600000000189, 0.00010961099999999904, 0.00010947199999999935, 0.00010954200000000067, 0.00010968000000000089, 0.0001090280000000006, 0.0001093890000000014, 0.0001095699999999998, 0.00010886100000000176, 0.00010936099999999879, 0.00010951400000000153, 0.00010959700000000294, 0.00010894400000000318, 0.0001093340000000026, 0.00010949999999999849, 0.00010937499999999836, 0.00010912499999999811, 0.00010981900000000058, 0.00010968100000000036, 0.00010894499999999918]</msg>
<status status="PASS" starttime="20201029 18:18:13.797" endtime="20201029 18:18:13.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.792" endtime="20201029 18:18:13.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.804" endtime="20201029 18:18:13.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.802" endtime="20201029 18:18:13.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.801" endtime="20201029 18:18:13.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.443" endtime="20201029 18:18:13.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.442" endtime="20201029 18:18:13.825"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.833" endtime="20201029 18:18:13.852"></status>
</kw>
<msg timestamp="20201029 18:18:13.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.832" endtime="20201029 18:18:13.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.854" endtime="20201029 18:18:13.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.856" endtime="20201029 18:18:13.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.829" endtime="20201029 18:18:13.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.827" endtime="20201029 18:18:13.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.865" endtime="20201029 18:18:14.150"></status>
</kw>
<msg timestamp="20201029 18:18:14.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.864" endtime="20201029 18:18:14.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.154" endtime="20201029 18:18:14.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.162" endtime="20201029 18:18:14.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.861" endtime="20201029 18:18:14.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.860" endtime="20201029 18:18:14.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.169" level="INFO">${RESULT} = [{'diff': 0.0001105419999999982}, {'diff': 0.00011013899999999868}, {'diff': 0.00011005600000000074}, {'diff': 0.00011068100000000136}, {'diff': 0.00011023699999999914}, {'diff': 0.0001103749999999993...</msg>
<status status="PASS" starttime="20201029 18:18:14.166" endtime="20201029 18:18:14.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:14.174" level="INFO">${ACCURACY} = {'diff': [0.0001105419999999982, 0.00011013899999999868, 0.00011005600000000074, 0.00011068100000000136, 0.00011023699999999914, 0.00011037499999999936, 0.00011070800000000103, 0.00010984699999999972,...</msg>
<status status="PASS" starttime="20201029 18:18:14.170" endtime="20201029 18:18:14.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.178" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:18:14.177" endtime="20201029 18:18:14.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.180" level="INFO">VALUE: [0.0001105419999999982, 0.00011013899999999868, 0.00011005600000000074, 0.00011068100000000136, 0.00011023699999999914, 0.00011037499999999936, 0.00011070800000000103, 0.00010984699999999972, 0.000109902999999998, 0.000109902999999998, 0.0001102220000000001, 0.00011055600000000124, 0.00010981900000000058, 0.00011079199999999845, 0.00011077800000000235, 0.00011029199999999795, 0.00010991600000000157, 0.00010988799999999896, 0.00011049999999999949, 0.00011054200000000167, 0.00010984699999999972, 0.00011059700000000047, 0.00011018100000000086, 0.00011070800000000103, 0.00011065200000000275, 0.00011061100000000004, 0.00011052699999999915, 0.00011041600000000207, 0.0001102220000000001, 0.00011049999999999949, 0.00011015300000000172, 0.00011059700000000047, 0.00011015299999999825, 0.0001099159999999981, 0.00011073699999999964, 0.00011068100000000136, 0.00011024999999999924, 0.00010986099999999929, 0.00011047299999999982, 0.00010997299999999932, 0.00011076299999999983, 0.00011031900000000108, 0.00011019500000000043, 0.00011061100000000004, 0.00011022199999999663, 0.00011074999999999974, 0.00011061100000000004, 0.00011020800000000053, 0.00011047200000000035, 0.00011001400000000203]</msg>
<status status="PASS" starttime="20201029 18:18:14.179" endtime="20201029 18:18:14.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.175" endtime="20201029 18:18:14.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.185" endtime="20201029 18:18:14.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.184" endtime="20201029 18:18:14.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.183" endtime="20201029 18:18:14.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.826" endtime="20201029 18:18:14.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.825" endtime="20201029 18:18:14.206"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.214" endtime="20201029 18:18:14.234"></status>
</kw>
<msg timestamp="20201029 18:18:14.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.213" endtime="20201029 18:18:14.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.235" endtime="20201029 18:18:14.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.238" endtime="20201029 18:18:14.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.210" endtime="20201029 18:18:14.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.208" endtime="20201029 18:18:14.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.247" endtime="20201029 18:18:14.536"></status>
</kw>
<msg timestamp="20201029 18:18:14.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.245" endtime="20201029 18:18:14.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.540" endtime="20201029 18:18:14.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.548" endtime="20201029 18:18:14.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.243" endtime="20201029 18:18:14.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.241" endtime="20201029 18:18:14.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.554" level="INFO">${RESULT} = [{'diff': 0.00011158299999999843}, {'diff': 0.00011176400000000031}, {'diff': 0.00011138899999999993}, {'diff': 0.00011149999999999702}, {'diff': 0.00011097200000000085}, {'diff': 0.000111028000000002...</msg>
<status status="PASS" starttime="20201029 18:18:14.551" endtime="20201029 18:18:14.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:14.558" level="INFO">${ACCURACY} = {'diff': [0.00011158299999999843, 0.00011176400000000031, 0.00011138899999999993, 0.00011149999999999702, 0.00011097200000000085, 0.0001110280000000026, 0.00011176399999999684, 0.00011129099999999947,...</msg>
<status status="PASS" starttime="20201029 18:18:14.555" endtime="20201029 18:18:14.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.562" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:18:14.561" endtime="20201029 18:18:14.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.565" level="INFO">VALUE: [0.00011158299999999843, 0.00011176400000000031, 0.00011138899999999993, 0.00011149999999999702, 0.00011097200000000085, 0.0001110280000000026, 0.00011176399999999684, 0.00011129099999999947, 0.00011091699999999857, 0.00011125000000000024, 0.0001115280000000031, 0.00011158400000000138, 0.00011172199999999813, 0.00011117999999999892, 0.00011098600000000042, 0.0001110969999999975, 0.00011145899999999778, 0.00011109700000000097, 0.0001117220000000016, 0.00011086100000000029, 0.00011111100000000054, 0.00011166700000000279, 0.00011136100000000079, 0.00011104100000000269, 0.00011145800000000178, 0.00011098600000000042, 0.00011108299999999793, 0.00011144500000000168, 0.00011106900000000183, 0.00011142999999999917, 0.00011144400000000221, 0.00011134700000000122, 0.00011136100000000079, 0.0001115549999999993, 0.0001110419999999987, 0.00011136100000000079, 0.00011147200000000135, 0.00011123600000000067, 0.00011083299999999768, 0.00011173600000000117, 0.00011163900000000018, 0.000110902999999999, 0.00011163800000000071, 0.00011127800000000285, 0.0001109159999999991, 0.00011115299999999925, 0.00011172300000000107, 0.00011161100000000104, 0.0001114159999999996, 0.00011102799999999913]</msg>
<status status="PASS" starttime="20201029 18:18:14.563" endtime="20201029 18:18:14.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.559" endtime="20201029 18:18:14.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.570" endtime="20201029 18:18:14.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.568" endtime="20201029 18:18:14.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.567" endtime="20201029 18:18:14.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.207" endtime="20201029 18:18:14.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.206" endtime="20201029 18:18:14.590"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.599" endtime="20201029 18:18:14.619"></status>
</kw>
<msg timestamp="20201029 18:18:14.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.597" endtime="20201029 18:18:14.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.621" endtime="20201029 18:18:14.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.623" endtime="20201029 18:18:14.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.595" endtime="20201029 18:18:14.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.593" endtime="20201029 18:18:14.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.632" endtime="20201029 18:18:14.918"></status>
</kw>
<msg timestamp="20201029 18:18:14.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.630" endtime="20201029 18:18:14.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.922" endtime="20201029 18:18:14.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.930" endtime="20201029 18:18:14.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.628" endtime="20201029 18:18:14.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.626" endtime="20201029 18:18:14.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.936" level="INFO">${RESULT} = [{'diff': 0.00011290299999999753}, {'diff': 0.00011211100000000154}, {'diff': 0.00011179099999999997}, {'diff': 0.00011206899999999936}, {'diff': 0.00011209700000000197}, {'diff': 0.000112083000000002...</msg>
<status status="PASS" starttime="20201029 18:18:14.933" endtime="20201029 18:18:14.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:14.940" level="INFO">${ACCURACY} = {'diff': [0.00011290299999999753, 0.00011211100000000154, 0.00011179099999999997, 0.00011206899999999936, 0.00011209700000000197, 0.0001120830000000024, 0.0001122229999999981, 0.00011266700000000032, ...</msg>
<status status="PASS" starttime="20201029 18:18:14.937" endtime="20201029 18:18:14.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.944" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:18:14.943" endtime="20201029 18:18:14.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.946" level="INFO">VALUE: [0.00011290299999999753, 0.00011211100000000154, 0.00011179099999999997, 0.00011206899999999936, 0.00011209700000000197, 0.0001120830000000024, 0.0001122229999999981, 0.00011266700000000032, 0.00011206900000000283, 0.00011190200000000053, 0.0001124030000000005, 0.00011251399999999759, 0.00011197199999999838, 0.00011237500000000136, 0.00011197199999999838, 0.00011212500000000111, 0.00011220800000000253, 0.00011277800000000088, 0.00011268099999999989, 0.0001120830000000024, 0.00011240199999999756, 0.00011265200000000128, 0.0001127359999999987, 0.00011201400000000056, 0.00011211099999999807, 0.00011244399999999974, 0.0001120700000000023, 0.00011277699999999793, 0.00011197199999999838, 0.00011251400000000106, 0.000111903, 0.00011275000000000174, 0.00011229100000000047, 0.00011236100000000179, 0.00011269399999999999, 0.00011258299999999943, 0.00011241700000000007, 0.00011202800000000013, 0.00011216699999999982, 0.00011266700000000032, 0.0001122770000000009, 0.00011222300000000157, 0.0001120969999999985, 0.00011202800000000013, 0.0001120969999999985, 0.00011277799999999741, 0.00011279200000000045, 0.000112209000000002, 0.0001125420000000002, 0.00011248600000000192]</msg>
<status status="PASS" starttime="20201029 18:18:14.945" endtime="20201029 18:18:14.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.941" endtime="20201029 18:18:14.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.956" endtime="20201029 18:18:14.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.955" endtime="20201029 18:18:14.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.954" endtime="20201029 18:18:14.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.591" endtime="20201029 18:18:14.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.591" endtime="20201029 18:18:14.977"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.985" endtime="20201029 18:18:15.005"></status>
</kw>
<msg timestamp="20201029 18:18:15.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.984" endtime="20201029 18:18:15.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.006" endtime="20201029 18:18:15.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.009" endtime="20201029 18:18:15.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.981" endtime="20201029 18:18:15.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.979" endtime="20201029 18:18:15.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.018" endtime="20201029 18:18:15.303"></status>
</kw>
<msg timestamp="20201029 18:18:15.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021157056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021270556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.016" endtime="20201029 18:18:15.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021157056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021270556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.307" endtime="20201029 18:18:15.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.315" endtime="20201029 18:18:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.014" endtime="20201029 18:18:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.012" endtime="20201029 18:18:15.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.322" level="INFO">${RESULT} = [{'diff': 0.00011349999999999902}, {'diff': 0.00011344400000000074}, {'diff': 0.00011319400000000049}, {'diff': 0.00011376399999999884}, {'diff': 0.00011358399999999991}, {'diff': 0.000113138999999998...</msg>
<status status="PASS" starttime="20201029 18:18:15.319" endtime="20201029 18:18:15.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.326" level="INFO">${ACCURACY} = {'diff': [0.00011349999999999902, 0.00011344400000000074, 0.00011319400000000049, 0.00011376399999999884, 0.00011358399999999991, 0.00011313899999999821, 0.000113597, 0.0001135420000000012, 0.00011319...</msg>
<status status="PASS" starttime="20201029 18:18:15.323" endtime="20201029 18:18:15.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.331" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.330" endtime="20201029 18:18:15.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.333" level="INFO">VALUE: [0.00011349999999999902, 0.00011344400000000074, 0.00011319400000000049, 0.00011376399999999884, 0.00011358399999999991, 0.00011313899999999821, 0.000113597, 0.0001135420000000012, 0.00011319499999999996, 0.00011329200000000095, 0.00011297199999999938, 0.00011301400000000156, 0.00011313899999999821, 0.00011338900000000193, 0.00011358399999999991, 0.00011370800000000056, 0.00011377800000000188, 0.00011320800000000006, 0.000112903000000001, 0.00011291700000000057, 0.00011363899999999871, 0.00011326399999999834, 0.00011316600000000135, 0.00011304199999999723, 0.00011343000000000117, 0.00011316599999999788, 0.00011324999999999877, 0.0001132359999999992, 0.00011327800000000138, 0.00011349999999999902, 0.00011377799999999841, 0.0001130969999999995, 0.00011345800000000031, 0.00011363900000000218, 0.00011333300000000018, 0.00011341700000000107, 0.00011350000000000249, 0.00011365300000000175, 0.00011295799999999981, 0.0001128749999999984, 0.00011376399999999884, 0.00011284700000000272, 0.00011324999999999877, 0.00011369400000000099, 0.00011295899999999928, 0.00011320800000000006, 0.00011368000000000142, 0.0001135420000000012, 0.00011340299999999803, 0.0001130420000000007]</msg>
<status status="PASS" starttime="20201029 18:18:15.332" endtime="20201029 18:18:15.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.327" endtime="20201029 18:18:15.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.338" endtime="20201029 18:18:15.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.337" endtime="20201029 18:18:15.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.335" endtime="20201029 18:18:15.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.978" endtime="20201029 18:18:15.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.977" endtime="20201029 18:18:15.359"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.367" endtime="20201029 18:18:15.387"></status>
</kw>
<msg timestamp="20201029 18:18:15.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.366" endtime="20201029 18:18:15.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.388" endtime="20201029 18:18:15.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.391" endtime="20201029 18:18:15.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.363" endtime="20201029 18:18:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.361" endtime="20201029 18:18:15.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.400" endtime="20201029 18:18:15.687"></status>
</kw>
<msg timestamp="20201029 18:18:15.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021257944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.398" endtime="20201029 18:18:15.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021257944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.691" endtime="20201029 18:18:15.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.699" endtime="20201029 18:18:15.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.396" endtime="20201029 18:18:15.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.394" endtime="20201029 18:18:15.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.706" level="INFO">${RESULT} = [{'diff': 0.00011452799999999916}, {'diff': 0.00011427800000000238}, {'diff': 0.00011454099999999925}, {'diff': 0.00011384799999999973}, {'diff': 0.00011477799999999941}, {'diff': 0.000114486000000000...</msg>
<status status="PASS" starttime="20201029 18:18:15.703" endtime="20201029 18:18:15.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.710" level="INFO">${ACCURACY} = {'diff': [0.00011452799999999916, 0.00011427800000000238, 0.00011454099999999925, 0.00011384799999999973, 0.00011477799999999941, 0.00011448600000000045, 0.00011394499999999724, 0.00011384700000000025...</msg>
<status status="PASS" starttime="20201029 18:18:15.707" endtime="20201029 18:18:15.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.715" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.714" endtime="20201029 18:18:15.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.717" level="INFO">VALUE: [0.00011452799999999916, 0.00011427800000000238, 0.00011454099999999925, 0.00011384799999999973, 0.00011477799999999941, 0.00011448600000000045, 0.00011394499999999724, 0.00011384700000000025, 0.00011397200000000038, 0.00011429200000000195, 0.00011407000000000084, 0.00011431999999999762, 0.00011457000000000134, 0.00011465199999999981, 0.00011451399999999959, 0.00011404199999999823, 0.00011455600000000177, 0.0001140970000000005, 0.0001140970000000005, 0.00011398599999999995, 0.0001139169999999981, 0.00011465299999999928, 0.00011384700000000025, 0.00011415299999999878, 0.0001147360000000007, 0.00011451399999999959, 0.0001140970000000005, 0.00011416700000000182, 0.00011472200000000113, 0.00011433300000000118, 0.00011416700000000182, 0.00011400000000000299, 0.00011399999999999952, 0.00011455600000000177, 0.00011440299999999903, 0.00011408299999999746, 0.00011419400000000149, 0.000113903000000002, 0.00011457000000000134, 0.00011406999999999737, 0.00011444499999999774, 0.00011440299999999903, 0.00011402799999999866, 0.00011383400000000016, 0.00011408300000000093, 0.00011466700000000232, 0.00011395800000000081, 0.00011447199999999741, 0.00011476300000000036, 0.00011452799999999916]</msg>
<status status="PASS" starttime="20201029 18:18:15.716" endtime="20201029 18:18:15.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.711" endtime="20201029 18:18:15.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.722" endtime="20201029 18:18:15.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.721" endtime="20201029 18:18:15.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.720" endtime="20201029 18:18:15.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.360" endtime="20201029 18:18:15.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.359" endtime="20201029 18:18:15.743"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.751" endtime="20201029 18:18:15.772"></status>
</kw>
<msg timestamp="20201029 18:18:15.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.750" endtime="20201029 18:18:15.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.773" endtime="20201029 18:18:15.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.776" endtime="20201029 18:18:15.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.747" endtime="20201029 18:18:15.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.745" endtime="20201029 18:18:15.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.785" endtime="20201029 18:18:16.070"></status>
</kw>
<msg timestamp="20201029 18:18:16.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.783" endtime="20201029 18:18:16.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.074" endtime="20201029 18:18:16.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.082" endtime="20201029 18:18:16.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.781" endtime="20201029 18:18:16.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.779" endtime="20201029 18:18:16.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.089" level="INFO">${RESULT} = [{'diff': 0.00011626300000000186}, {'diff': 0.00011522200000000163}, {'diff': 0.00011545799999999884}, {'diff': 0.00011545799999999884}, {'diff': 0.00011537499999999742}, {'diff': 0.000115778000000000...</msg>
<status status="PASS" starttime="20201029 18:18:16.085" endtime="20201029 18:18:16.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.092" level="INFO">${ACCURACY} = {'diff': [0.00011626300000000186, 0.00011522200000000163, 0.00011545799999999884, 0.00011545799999999884, 0.00011537499999999742, 0.00011577800000000041, 0.0001155559999999993, 0.00011527799999999991,...</msg>
<status status="PASS" starttime="20201029 18:18:16.089" endtime="20201029 18:18:16.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.097" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.096" endtime="20201029 18:18:16.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.099" level="INFO">VALUE: [0.00011626300000000186, 0.00011522200000000163, 0.00011545799999999884, 0.00011545799999999884, 0.00011537499999999742, 0.00011577800000000041, 0.0001155559999999993, 0.00011527799999999991, 0.0001148750000000004, 0.0001149299999999992, 0.00011545799999999884, 0.00011526400000000034, 0.00011558299999999896, 0.0001149160000000031, 0.00011484799999999726, 0.00011533299999999871, 0.00011515199999999684, 0.00011506999999999837, 0.00011486099999999735, 0.00011572199999999866, 0.00011508299999999846, 0.00011569400000000299, 0.00011544399999999927, 0.00011484700000000125, 0.00011526400000000034, 0.00011486100000000082, 0.00011505499999999932, 0.00011497199999999791, 0.00011540300000000003, 0.00011533299999999871, 0.00011520900000000153, 0.00011488800000000049, 0.00011509800000000098, 0.00011575000000000127, 0.00011495900000000128, 0.00011552800000000016, 0.00011551399999999712, 0.0001153750000000009, 0.00011555499999999982, 0.00011533300000000218, 0.00011548599999999798, 0.00011563800000000124, 0.00011490299999999953, 0.00011573599999999823, 0.00011517999999999945, 0.00011538900000000046, 0.0001157629999999979, 0.00011536199999999733, 0.00011576400000000084, 0.00011490299999999953]</msg>
<status status="PASS" starttime="20201029 18:18:16.098" endtime="20201029 18:18:16.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.093" endtime="20201029 18:18:16.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.105" endtime="20201029 18:18:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.103" endtime="20201029 18:18:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.102" endtime="20201029 18:18:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.744" endtime="20201029 18:18:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.743" endtime="20201029 18:18:16.126"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.134" endtime="20201029 18:18:16.154"></status>
</kw>
<msg timestamp="20201029 18:18:16.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.132" endtime="20201029 18:18:16.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.155" endtime="20201029 18:18:16.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.158" endtime="20201029 18:18:16.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.130" endtime="20201029 18:18:16.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.128" endtime="20201029 18:18:16.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.166" endtime="20201029 18:18:16.452"></status>
</kw>
<msg timestamp="20201029 18:18:16.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021188875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021305875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.165" endtime="20201029 18:18:16.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021188875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021305875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.456" endtime="20201029 18:18:16.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.464" endtime="20201029 18:18:16.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.162" endtime="20201029 18:18:16.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.161" endtime="20201029 18:18:16.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.470" level="INFO">${RESULT} = [{'diff': 0.00011699999999999905}, {'diff': 0.00011618099999999992}, {'diff': 0.00011615300000000078}, {'diff': 0.00011613900000000121}, {'diff': 0.00011609699999999903}, {'diff': 0.000116319000000000...</msg>
<status status="PASS" starttime="20201029 18:18:16.467" endtime="20201029 18:18:16.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.475" level="INFO">${ACCURACY} = {'diff': [0.00011699999999999905, 0.00011618099999999992, 0.00011615300000000078, 0.00011613900000000121, 0.00011609699999999903, 0.00011631900000000014, 0.00011657000000000334, 0.00011644499999999974...</msg>
<status status="PASS" starttime="20201029 18:18:16.471" endtime="20201029 18:18:16.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.480" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.479" endtime="20201029 18:18:16.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.482" level="INFO">VALUE: [0.00011699999999999905, 0.00011618099999999992, 0.00011615300000000078, 0.00011613900000000121, 0.00011609699999999903, 0.00011631900000000014, 0.00011657000000000334, 0.00011644499999999974, 0.0001165690000000004, 0.00011620899999999906, 0.0001159170000000001, 0.00011647299999999888, 0.00011638900000000146, 0.00011619500000000296, 0.00011588900000000096, 0.00011583300000000268, 0.00011595900000000228, 0.00011590300000000053, 0.00011654200000000073, 0.0001164170000000006, 0.00011677799999999794, 0.00011602800000000066, 0.00011647299999999888, 0.00011599999999999805, 0.00011645799999999984, 0.0001166109999999991, 0.00011626399999999787, 0.00011634800000000223, 0.00011587499999999792, 0.000116388999999998, 0.00011651399999999812, 0.00011597199999999891, 0.00011602700000000118, 0.00011597200000000238, 0.00011618099999999992, 0.0001165690000000004, 0.00011651400000000159, 0.00011630600000000005, 0.00011594499999999924, 0.00011630500000000057, 0.00011620899999999906, 0.00011631900000000014, 0.00011644499999999974, 0.0001164170000000006, 0.00011595899999999881, 0.00011608400000000241, 0.00011594399999999977, 0.00011659699999999953, 0.0001159300000000002, 0.00011676399999999837]</msg>
<status status="PASS" starttime="20201029 18:18:16.481" endtime="20201029 18:18:16.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.476" endtime="20201029 18:18:16.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.487" endtime="20201029 18:18:16.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.485" endtime="20201029 18:18:16.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.484" endtime="20201029 18:18:16.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.126" endtime="20201029 18:18:16.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.126" endtime="20201029 18:18:16.508"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.516" endtime="20201029 18:18:16.536"></status>
</kw>
<msg timestamp="20201029 18:18:16.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.515" endtime="20201029 18:18:16.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.537" endtime="20201029 18:18:16.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.540" endtime="20201029 18:18:16.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.512" endtime="20201029 18:18:16.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.510" endtime="20201029 18:18:16.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.549" endtime="20201029 18:18:16.836"></status>
</kw>
<msg timestamp="20201029 18:18:16.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.547" endtime="20201029 18:18:16.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.840" endtime="20201029 18:18:16.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.848" endtime="20201029 18:18:16.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.545" endtime="20201029 18:18:16.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.543" endtime="20201029 18:18:16.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.855" level="INFO">${RESULT} = [{'diff': 0.00011756899999999793}, {'diff': 0.00011773600000000023}, {'diff': 0.00011733300000000071}, {'diff': 0.00011679199999999751}, {'diff': 0.00011727800000000191}, {'diff': 0.000116903000000001...</msg>
<status status="PASS" starttime="20201029 18:18:16.852" endtime="20201029 18:18:16.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.859" level="INFO">${ACCURACY} = {'diff': [0.00011756899999999793, 0.00011773600000000023, 0.00011733300000000071, 0.00011679199999999751, 0.00011727800000000191, 0.00011690300000000153, 0.00011695799999999687, 0.0001175829999999975,...</msg>
<status status="PASS" starttime="20201029 18:18:16.856" endtime="20201029 18:18:16.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.863" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.862" endtime="20201029 18:18:16.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.865" level="INFO">VALUE: [0.00011756899999999793, 0.00011773600000000023, 0.00011733300000000071, 0.00011679199999999751, 0.00011727800000000191, 0.00011690300000000153, 0.00011695799999999687, 0.0001175829999999975, 0.00011777699999999947, 0.00011732000000000062, 0.00011759700000000053, 0.00011770900000000056, 0.00011731999999999715, 0.00011713900000000221, 0.00011757000000000087, 0.00011712499999999917, 0.00011738900000000246, 0.00011693100000000067, 0.00011763799999999977, 0.00011757000000000087, 0.00011751400000000259, 0.00011707000000000037, 0.00011732000000000062, 0.00011713899999999874, 0.00011757000000000087, 0.0001174170000000016, 0.00011729200000000148, 0.00011726399999999887, 0.00011745800000000084, 0.00011690299999999806, 0.00011733300000000071, 0.00011701399999999862, 0.00011732000000000062, 0.0001173049999999981, 0.00011745900000000031, 0.00011720800000000059, 0.000117388999999999, 0.00011768099999999795, 0.00011688900000000196, 0.00011749999999999955, 0.00011747200000000041, 0.00011708300000000046, 0.00011684699999999978, 0.00011713899999999874, 0.00011752800000000216, 0.00011708300000000046, 0.00011684700000000325, 0.0001172499999999993, 0.00011706899999999743, 0.00011727699999999897]</msg>
<status status="PASS" starttime="20201029 18:18:16.864" endtime="20201029 18:18:16.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.860" endtime="20201029 18:18:16.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.870" endtime="20201029 18:18:16.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.869" endtime="20201029 18:18:16.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.868" endtime="20201029 18:18:16.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.509" endtime="20201029 18:18:16.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.508" endtime="20201029 18:18:16.891"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.899" endtime="20201029 18:18:16.920"></status>
</kw>
<msg timestamp="20201029 18:18:16.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.898" endtime="20201029 18:18:16.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.922" endtime="20201029 18:18:16.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.924" endtime="20201029 18:18:16.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.895" endtime="20201029 18:18:16.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.893" endtime="20201029 18:18:16.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.933" endtime="20201029 18:18:17.218"></status>
</kw>
<msg timestamp="20201029 18:18:17.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.931" endtime="20201029 18:18:17.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.222" endtime="20201029 18:18:17.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.230" endtime="20201029 18:18:17.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.929" endtime="20201029 18:18:17.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.927" endtime="20201029 18:18:17.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.236" level="INFO">${RESULT} = [{'diff': 0.00011837500000000042}, {'diff': 0.00011836100000000085}, {'diff': 0.00011879100000000004}, {'diff': 0.00011869399999999905}, {'diff': 0.00011862500000000067}, {'diff': 0.000118596999999998...</msg>
<status status="PASS" starttime="20201029 18:18:17.233" endtime="20201029 18:18:17.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.240" level="INFO">${ACCURACY} = {'diff': [0.00011837500000000042, 0.00011836100000000085, 0.00011879100000000004, 0.00011869399999999905, 0.00011862500000000067, 0.00011859699999999807, 0.00011826399999999987, 0.00011866599999999991...</msg>
<status status="PASS" starttime="20201029 18:18:17.237" endtime="20201029 18:18:17.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.244" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.243" endtime="20201029 18:18:17.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.247" level="INFO">VALUE: [0.00011837500000000042, 0.00011836100000000085, 0.00011879100000000004, 0.00011869399999999905, 0.00011862500000000067, 0.00011859699999999807, 0.00011826399999999987, 0.00011866599999999991, 0.00011823600000000073, 0.00011800000000000005, 0.000118389, 0.00011787499999999992, 0.00011847199999999794, 0.00011843100000000217, 0.00011879200000000298, 0.00011856899999999893, 0.00011829199999999901, 0.00011802800000000266, 0.00011823600000000073, 0.00011819400000000202, 0.00011854199999999926, 0.00011831900000000214, 0.00011833399999999772, 0.00011845800000000184, 0.0001179300000000022, 0.00011863900000000024, 0.00011862500000000067, 0.00011831900000000214, 0.00011873599999999776, 0.0001187500000000008, 0.00011844500000000174, 0.00011877799999999994, 0.00011806899999999843, 0.00011818100000000192, 0.00011856899999999893, 0.00011845799999999837, 0.00011783400000000069, 0.00011869399999999905, 0.0001185690000000024, 0.00011816700000000235, 0.00011802799999999919, 0.00011780600000000155, 0.0001184300000000027, 0.00011795800000000134, 0.00011786199999999983, 0.00011862500000000067, 0.00011823599999999726, 0.0001182500000000003, 0.00011819399999999855, 0.00011805599999999833]</msg>
<status status="PASS" starttime="20201029 18:18:17.245" endtime="20201029 18:18:17.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.241" endtime="20201029 18:18:17.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.252" endtime="20201029 18:18:17.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.251" endtime="20201029 18:18:17.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.250" endtime="20201029 18:18:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.892" endtime="20201029 18:18:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.891" endtime="20201029 18:18:17.273"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.282" endtime="20201029 18:18:17.301"></status>
</kw>
<msg timestamp="20201029 18:18:17.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.280" endtime="20201029 18:18:17.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.303" endtime="20201029 18:18:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.305" endtime="20201029 18:18:17.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.278" endtime="20201029 18:18:17.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.276" endtime="20201029 18:18:17.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.314" endtime="20201029 18:18:17.601"></status>
</kw>
<msg timestamp="20201029 18:18:17.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021261667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021381611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.313" endtime="20201029 18:18:17.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021261667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021381611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.605" endtime="20201029 18:18:17.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.613" endtime="20201029 18:18:17.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.310" endtime="20201029 18:18:17.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.309" endtime="20201029 18:18:17.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.619" level="INFO">${RESULT} = [{'diff': 0.00011994399999999683}, {'diff': 0.0001197500000000018}, {'diff': 0.00011965300000000081}, {'diff': 0.00011974999999999833}, {'diff': 0.00011958399999999897}, {'diff': 0.0001190140000000006...</msg>
<status status="PASS" starttime="20201029 18:18:17.616" endtime="20201029 18:18:17.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.624" level="INFO">${ACCURACY} = {'diff': [0.00011994399999999683, 0.0001197500000000018, 0.00011965300000000081, 0.00011974999999999833, 0.00011958399999999897, 0.00011901400000000062, 0.00011894499999999877, 0.00011932000000000262,...</msg>
<status status="PASS" starttime="20201029 18:18:17.620" endtime="20201029 18:18:17.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.628" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.627" endtime="20201029 18:18:17.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.631" level="INFO">VALUE: [0.00011994399999999683, 0.0001197500000000018, 0.00011965300000000081, 0.00011974999999999833, 0.00011958399999999897, 0.00011901400000000062, 0.00011894499999999877, 0.00011932000000000262, 0.00011945799999999937, 0.00011966699999999691, 0.0001196249999999982, 0.00011974999999999833, 0.0001194439999999998, 0.00011969499999999952, 0.00011917999999999998, 0.00011917999999999998, 0.00011894499999999877, 0.0001192500000000013, 0.00011882000000000212, 0.00011974999999999833, 0.00011949999999999808, 0.00011922199999999869, 0.00011888800000000102, 0.00011926400000000087, 0.00011930599999999958, 0.00011916699999999988, 0.00011956899999999993, 0.00011979199999999704, 0.00011968000000000048, 0.0001190699999999989, 0.00011955599999999983, 0.00011897199999999844, 0.0001190699999999989, 0.00011962500000000167, 0.00011916699999999988, 0.00011976400000000137, 0.00011931899999999968, 0.00011936099999999839, 0.00011974999999999833, 0.00011904200000000323, 0.00011912500000000117, 0.0001191110000000016, 0.0001194309999999997, 0.00011881999999999865, 0.00011900000000000105, 0.00011905599999999933, 0.00011923599999999826, 0.00011898700000000095, 0.0001191249999999977, 0.00011937500000000142]</msg>
<status status="PASS" starttime="20201029 18:18:17.629" endtime="20201029 18:18:17.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.625" endtime="20201029 18:18:17.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.635" endtime="20201029 18:18:17.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.634" endtime="20201029 18:18:17.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.633" endtime="20201029 18:18:17.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.274" endtime="20201029 18:18:17.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.273" endtime="20201029 18:18:17.656"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.665" endtime="20201029 18:18:17.684"></status>
</kw>
<msg timestamp="20201029 18:18:17.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.663" endtime="20201029 18:18:17.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.686" endtime="20201029 18:18:17.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.688" endtime="20201029 18:18:17.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.661" endtime="20201029 18:18:17.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.659" endtime="20201029 18:18:17.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.697" endtime="20201029 18:18:17.986"></status>
</kw>
<msg timestamp="20201029 18:18:17.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021332972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.696" endtime="20201029 18:18:17.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021332972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.990" endtime="20201029 18:18:17.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.998" endtime="20201029 18:18:18.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.693" endtime="20201029 18:18:18.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.691" endtime="20201029 18:18:18.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.004" level="INFO">${RESULT} = [{'diff': 0.00012083299999999728}, {'diff': 0.00012052699999999875}, {'diff': 0.00012001400000000162}, {'diff': 0.0001207639999999989}, {'diff': 0.0001200699999999999}, {'diff': 0.0001201249999999987}...</msg>
<status status="PASS" starttime="20201029 18:18:18.001" endtime="20201029 18:18:18.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.008" level="INFO">${ACCURACY} = {'diff': [0.00012083299999999728, 0.00012052699999999875, 0.00012001400000000162, 0.0001207639999999989, 0.0001200699999999999, 0.0001201249999999987, 0.00012030600000000058, 0.0001199310000000002, 0....</msg>
<status status="PASS" starttime="20201029 18:18:18.005" endtime="20201029 18:18:18.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.013" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.012" endtime="20201029 18:18:18.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.015" level="INFO">VALUE: [0.00012083299999999728, 0.00012052699999999875, 0.00012001400000000162, 0.0001207639999999989, 0.0001200699999999999, 0.0001201249999999987, 0.00012030600000000058, 0.0001199310000000002, 0.00012034699999999982, 0.00011999999999999858, 0.00012000000000000205, 0.00012017999999999751, 0.0001204440000000008, 0.00012001299999999868, 0.00012054099999999832, 0.00012033300000000025, 0.00012044500000000027, 0.00012005600000000033, 0.00011979099999999757, 0.00012059799999999954, 0.00011999999999999858, 0.00012044500000000027, 0.00012023599999999926, 0.00012041700000000113, 0.00012065199999999887, 0.00012027799999999797, 0.00012049999999999908, 0.00012074999999999933, 0.00011999999999999858, 0.00012008399999999947, 0.00012043000000000123, 0.00012037499999999896, 0.00012045800000000037, 0.0001207639999999989, 0.00012001399999999815, 0.00012044399999999733, 0.00012020800000000012, 0.00012020800000000012, 0.00011998600000000248, 0.00012044500000000027, 0.00012030600000000058, 0.00012055499999999789, 0.00012045800000000037, 0.00012037499999999896, 0.00012033299999999678, 0.00011994499999999977, 0.00012051400000000212, 0.0001202500000000023, 0.00012074999999999933, 0.00012024999999999883]</msg>
<status status="PASS" starttime="20201029 18:18:18.014" endtime="20201029 18:18:18.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.009" endtime="20201029 18:18:18.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.020" endtime="20201029 18:18:18.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.019" endtime="20201029 18:18:18.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.017" endtime="20201029 18:18:18.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.657" endtime="20201029 18:18:18.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.656" endtime="20201029 18:18:18.041"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.049" endtime="20201029 18:18:18.070"></status>
</kw>
<msg timestamp="20201029 18:18:18.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.048" endtime="20201029 18:18:18.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.071" endtime="20201029 18:18:18.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.074" endtime="20201029 18:18:18.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.045" endtime="20201029 18:18:18.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.043" endtime="20201029 18:18:18.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.083" endtime="20201029 18:18:18.370"></status>
</kw>
<msg timestamp="20201029 18:18:18.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.081" endtime="20201029 18:18:18.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.374" endtime="20201029 18:18:18.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.383" endtime="20201029 18:18:18.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.079" endtime="20201029 18:18:18.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.077" endtime="20201029 18:18:18.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.389" level="INFO">${RESULT} = [{'diff': 0.00012194500000000177}, {'diff': 0.00012091599999999869}, {'diff': 0.00012102700000000272}, {'diff': 0.00012083399999999675}, {'diff': 0.00012097200000000044}, {'diff': 0.000121374999999999...</msg>
<status status="PASS" starttime="20201029 18:18:18.386" endtime="20201029 18:18:18.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.393" level="INFO">${ACCURACY} = {'diff': [0.00012194500000000177, 0.00012091599999999869, 0.00012102700000000272, 0.00012083399999999675, 0.00012097200000000044, 0.00012137499999999996, 0.00012175000000000033, 0.00012106900000000143...</msg>
<status status="PASS" starttime="20201029 18:18:18.390" endtime="20201029 18:18:18.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.398" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.397" endtime="20201029 18:18:18.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.400" level="INFO">VALUE: [0.00012194500000000177, 0.00012091599999999869, 0.00012102700000000272, 0.00012083399999999675, 0.00012097200000000044, 0.00012137499999999996, 0.00012175000000000033, 0.00012106900000000143, 0.00012163899999999978, 0.00012111100000000014, 0.00012150000000000008, 0.0001214440000000018, 0.00012093000000000173, 0.00012126400000000287, 0.00012102699999999925, 0.00012156900000000193, 0.00012081900000000118, 0.0001210969999999971, 0.00012154099999999932, 0.00012112500000000317, 0.00012090300000000206, 0.00012144500000000127, 0.00012148699999999998, 0.00012119500000000102, 0.00012106900000000143, 0.00012155499999999889, 0.00012080600000000108, 0.00012165299999999934, 0.0001217639999999999, 0.00012138899999999953, 0.00012080600000000108, 0.00012130599999999811, 0.00012105600000000133, 0.00012133299999999778, 0.00012163899999999978, 0.00012098600000000001, 0.00012105500000000186, 0.00012144500000000127, 0.00012141700000000213, 0.0001215700000000014, 0.00012123600000000026, 0.0001208189999999977, 0.00012111100000000014, 0.00012087499999999946, 0.00012091599999999869, 0.00012094399999999783, 0.00012137499999999996, 0.00012102799999999872, 0.00012116600000000241, 0.00012156900000000193]</msg>
<status status="PASS" starttime="20201029 18:18:18.399" endtime="20201029 18:18:18.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.394" endtime="20201029 18:18:18.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.406" endtime="20201029 18:18:18.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.404" endtime="20201029 18:18:18.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.403" endtime="20201029 18:18:18.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.042" endtime="20201029 18:18:18.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.041" endtime="20201029 18:18:18.427"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.435" endtime="20201029 18:18:18.455"></status>
</kw>
<msg timestamp="20201029 18:18:18.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.434" endtime="20201029 18:18:18.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.457" endtime="20201029 18:18:18.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.459" endtime="20201029 18:18:18.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.431" endtime="20201029 18:18:18.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.429" endtime="20201029 18:18:18.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.468" endtime="20201029 18:18:18.769"></status>
</kw>
<msg timestamp="20201029 18:18:18.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.467" endtime="20201029 18:18:18.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.773" endtime="20201029 18:18:18.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.781" endtime="20201029 18:18:18.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.464" endtime="20201029 18:18:18.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.462" endtime="20201029 18:18:18.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.788" level="INFO">${RESULT} = [{'diff': 0.00012294399999999983}, {'diff': 0.00012245800000000237}, {'diff': 0.00012200000000000058}, {'diff': 0.00012219400000000255}, {'diff': 0.00012181999999999818}, {'diff': 0.000122652000000000...</msg>
<status status="PASS" starttime="20201029 18:18:18.785" endtime="20201029 18:18:18.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.793" level="INFO">${ACCURACY} = {'diff': [0.00012294399999999983, 0.00012245800000000237, 0.00012200000000000058, 0.00012219400000000255, 0.00012181999999999818, 0.00012265200000000087, 0.00012250000000000108, 0.00012277800000000047...</msg>
<status status="PASS" starttime="20201029 18:18:18.789" endtime="20201029 18:18:18.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.797" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.796" endtime="20201029 18:18:18.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.800" level="INFO">VALUE: [0.00012294399999999983, 0.00012245800000000237, 0.00012200000000000058, 0.00012219400000000255, 0.00012181999999999818, 0.00012265200000000087, 0.00012250000000000108, 0.00012277800000000047, 0.00012225000000000083, 0.00012275000000000133, 0.00012201400000000015, 0.00012229199999999954, 0.0001223059999999991, 0.00012188900000000003, 0.00012200000000000058, 0.00012224999999999736, 0.00012198599999999754, 0.00012223600000000126, 0.00012205599999999886, 0.00012236100000000139, 0.0001222229999999977, 0.000122083000000002, 0.00012200000000000058, 0.00012237500000000096, 0.0001227640000000009, 0.00012230600000000258, 0.0001222640000000004, 0.00012225000000000083, 0.00012224999999999736, 0.00012181900000000218, 0.00012170800000000162, 0.0001224160000000002, 0.00012265300000000035, 0.00012190200000000012, 0.00012197300000000091, 0.00012262499999999774, 0.00012216699999999941, 0.0001224030000000001, 0.00012219499999999855, 0.00012236099999999792, 0.00012181999999999818, 0.00012227799999999997, 0.0001219029999999996, 0.00012229100000000007, 0.0001223189999999992, 0.00012252800000000022, 0.00012262499999999774, 0.00012194399999999883, 0.00012220800000000212, 0.00012268099999999948]</msg>
<status status="PASS" starttime="20201029 18:18:18.798" endtime="20201029 18:18:18.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.794" endtime="20201029 18:18:18.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.804" endtime="20201029 18:18:18.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.803" endtime="20201029 18:18:18.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.802" endtime="20201029 18:18:18.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.428" endtime="20201029 18:18:18.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.427" endtime="20201029 18:18:18.825"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.834" endtime="20201029 18:18:18.853"></status>
</kw>
<msg timestamp="20201029 18:18:18.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.832" endtime="20201029 18:18:18.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.855" endtime="20201029 18:18:18.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.858" endtime="20201029 18:18:18.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.830" endtime="20201029 18:18:18.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.828" endtime="20201029 18:18:18.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.866" endtime="20201029 18:18:19.153"></status>
</kw>
<msg timestamp="20201029 18:18:19.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021292333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021415903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.865" endtime="20201029 18:18:19.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021292333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021415903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.157" endtime="20201029 18:18:19.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.165" endtime="20201029 18:18:19.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.862" endtime="20201029 18:18:19.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.861" endtime="20201029 18:18:19.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.171" level="INFO">${RESULT} = [{'diff': 0.00012356999999999993}, {'diff': 0.00012298699999999801}, {'diff': 0.00012279200000000004}, {'diff': 0.0001228189999999997}, {'diff': 0.00012287499999999799}, {'diff': 0.0001235000000000020...</msg>
<status status="PASS" starttime="20201029 18:18:19.168" endtime="20201029 18:18:19.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:19.175" level="INFO">${ACCURACY} = {'diff': [0.00012356999999999993, 0.00012298699999999801, 0.00012279200000000004, 0.0001228189999999997, 0.00012287499999999799, 0.00012350000000000208, 0.00012369500000000005, 0.0001234999999999986, ...</msg>
<status status="PASS" starttime="20201029 18:18:19.172" endtime="20201029 18:18:19.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.179" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:18:19.178" endtime="20201029 18:18:19.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.182" level="INFO">VALUE: [0.00012356999999999993, 0.00012298699999999801, 0.00012279200000000004, 0.0001228189999999997, 0.00012287499999999799, 0.00012350000000000208, 0.00012369500000000005, 0.0001234999999999986, 0.00012281999999999918, 0.0001230969999999991, 0.00012318099999999998, 0.00012347200000000294, 0.0001234999999999986, 0.0001235420000000008, 0.00012287500000000146, 0.0001233060000000001, 0.00012287500000000146, 0.00012348599999999904, 0.0001231120000000016, 0.00012324999999999836, 0.00012365300000000135, 0.0001236380000000023, 0.00012344400000000033, 0.00012302700000000125, 0.0001230420000000003, 0.00012293099999999973, 0.00012331999999999968, 0.00012308299999999953, 0.00012319499999999955, 0.00012352700000000175, 0.00012288900000000103, 0.00012347299999999894, 0.0001231800000000005, 0.0001229160000000007, 0.00012365299999999788, 0.00012325000000000183, 0.00012337500000000196, 0.00012324999999999836, 0.00012337500000000196, 0.00012279200000000004, 0.00012361099999999917, 0.00012319400000000008, 0.00012355500000000089, 0.0001228059999999996, 0.0001228189999999997, 0.00012304199999999682, 0.0001231800000000005, 0.00012333299999999978, 0.00012312499999999824, 0.00012305599999999986]</msg>
<status status="PASS" starttime="20201029 18:18:19.180" endtime="20201029 18:18:19.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.176" endtime="20201029 18:18:19.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.187" endtime="20201029 18:18:19.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.185" endtime="20201029 18:18:19.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.184" endtime="20201029 18:18:19.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.826" endtime="20201029 18:18:19.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.825" endtime="20201029 18:18:19.207"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.216" endtime="20201029 18:18:19.237"></status>
</kw>
<msg timestamp="20201029 18:18:19.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.214" endtime="20201029 18:18:19.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.239" endtime="20201029 18:18:19.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.241" endtime="20201029 18:18:19.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.212" endtime="20201029 18:18:19.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.210" endtime="20201029 18:18:19.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.250" endtime="20201029 18:18:19.536"></status>
</kw>
<msg timestamp="20201029 18:18:19.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.248" endtime="20201029 18:18:19.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.540" endtime="20201029 18:18:19.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.548" endtime="20201029 18:18:19.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.246" endtime="20201029 18:18:19.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.244" endtime="20201029 18:18:19.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.554" level="INFO">${RESULT} = [{'diff': 0.00012517999999999904}, {'diff': 0.0001240970000000001}, {'diff': 0.00012437499999999949}, {'diff': 0.00012462499999999974}, {'diff': 0.0001241939999999976}, {'diff': 0.00012406900000000096...</msg>
<status status="PASS" starttime="20201029 18:18:19.551" endtime="20201029 18:18:19.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:19.558" level="INFO">${ACCURACY} = {'diff': [0.00012517999999999904, 0.0001240970000000001, 0.00012437499999999949, 0.00012462499999999974, 0.0001241939999999976, 0.00012406900000000096, 0.00012436099999999992, 0.00012377800000000147, ...</msg>
<status status="PASS" starttime="20201029 18:18:19.555" endtime="20201029 18:18:19.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.563" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:18:19.562" endtime="20201029 18:18:19.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.565" level="INFO">VALUE: [0.00012517999999999904, 0.0001240970000000001, 0.00012437499999999949, 0.00012462499999999974, 0.0001241939999999976, 0.00012406900000000096, 0.00012436099999999992, 0.00012377800000000147, 0.00012443000000000176, 0.000124084, 0.00012472199999999725, 0.00012380500000000114, 0.0001245420000000018, 0.00012437499999999949, 0.00012394399999999736, 0.0001245420000000018, 0.00012468099999999802, 0.00012470799999999768, 0.00012455499999999842, 0.00012472200000000072, 0.00012398599999999954, 0.00012418100000000099, 0.00012467999999999854, 0.00012461100000000017, 0.00012454199999999832, 0.00012384799999999932, 0.00012415300000000185, 0.0001242359999999998, 0.00012441599999999872, 0.00012436099999999992, 0.0001241250000000027, 0.00012415299999999838, 0.00012455500000000189, 0.00012419400000000108, 0.00012415200000000237, 0.00012386099999999942, 0.0001242359999999998, 0.00012407000000000043, 0.00012438899999999906, 0.00012402799999999825, 0.00012440299999999863, 0.000124680000000002, 0.00012443100000000124, 0.00012438899999999906, 0.00012412499999999924, 0.0001239999999999991, 0.00012454199999999832, 0.00012386099999999942, 0.00012456900000000146, 0.000124680000000002]</msg>
<status status="PASS" starttime="20201029 18:18:19.564" endtime="20201029 18:18:19.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.559" endtime="20201029 18:18:19.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.571" endtime="20201029 18:18:19.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.569" endtime="20201029 18:18:19.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.568" endtime="20201029 18:18:19.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.208" endtime="20201029 18:18:19.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.208" endtime="20201029 18:18:19.592"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.600" endtime="20201029 18:18:19.620"></status>
</kw>
<msg timestamp="20201029 18:18:19.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.598" endtime="20201029 18:18:19.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.622" endtime="20201029 18:18:19.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.624" endtime="20201029 18:18:19.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.596" endtime="20201029 18:18:19.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.594" endtime="20201029 18:18:19.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.633" endtime="20201029 18:18:19.919"></status>
</kw>
<msg timestamp="20201029 18:18:19.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:19.631" endtime="20201029 18:18:19.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:19.923" endtime="20201029 18:18:19.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.931" endtime="20201029 18:18:19.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.629" endtime="20201029 18:18:19.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.627" endtime="20201029 18:18:19.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.937" level="INFO">${RESULT} = [{'diff': 0.00012543100000000224}, {'diff': 0.0001250000000000001}, {'diff': 0.00012487499999999999}, {'diff': 0.00012561100000000117}, {'diff': 0.00012529199999999907}, {'diff': 0.0001248610000000004...</msg>
<status status="PASS" starttime="20201029 18:18:19.934" endtime="20201029 18:18:19.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:19.942" level="INFO">${ACCURACY} = {'diff': [0.00012543100000000224, 0.0001250000000000001, 0.00012487499999999999, 0.00012561100000000117, 0.00012529199999999907, 0.00012486100000000042, 0.00012480499999999867, 0.00012498600000000054,...</msg>
<status status="PASS" starttime="20201029 18:18:19.938" endtime="20201029 18:18:19.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.946" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:18:19.945" endtime="20201029 18:18:19.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.949" level="INFO">VALUE: [0.00012543100000000224, 0.0001250000000000001, 0.00012487499999999999, 0.00012561100000000117, 0.00012529199999999907, 0.00012486100000000042, 0.00012480499999999867, 0.00012498600000000054, 0.00012554099999999985, 0.00012520799999999818, 0.0001252360000000008, 0.0001250559999999984, 0.00012516699999999895, 0.0001249450000000013, 0.00012544399999999886, 0.00012490299999999913, 0.00012555499999999942, 0.0001253060000000021, 0.00012572199999999825, 0.00012477699999999953, 0.00012477800000000247, 0.00012530599999999864, 0.0001256390000000003, 0.00012487499999999999, 0.00012569500000000206, 0.00012556999999999846, 0.00012577699999999706, 0.00012551400000000018, 0.0001250550000000024, 0.00012552700000000028, 0.00012490299999999913, 0.00012541599999999972, 0.00012509800000000057, 0.00012572299999999773, 0.00012481899999999824, 0.00012493099999999827, 0.00012562500000000074, 0.00012484699999999738, 0.00012531899999999874, 0.0001250559999999984, 0.00012522200000000122, 0.00012554099999999985, 0.00012490299999999913, 0.0001253190000000022, 0.0001252360000000008, 0.00012572200000000172, 0.0001251519999999999, 0.00012525000000000036, 0.00012507000000000143, 0.00012499999999999664]</msg>
<status status="PASS" starttime="20201029 18:18:19.948" endtime="20201029 18:18:19.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.943" endtime="20201029 18:18:19.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.958" endtime="20201029 18:18:19.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.956" endtime="20201029 18:18:19.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.955" endtime="20201029 18:18:19.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.592" endtime="20201029 18:18:19.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.592" endtime="20201029 18:18:19.979"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.987" endtime="20201029 18:18:20.008"></status>
</kw>
<msg timestamp="20201029 18:18:20.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.986" endtime="20201029 18:18:20.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.009" endtime="20201029 18:18:20.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.012" endtime="20201029 18:18:20.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.983" endtime="20201029 18:18:20.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.981" endtime="20201029 18:18:20.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.020" endtime="20201029 18:18:20.307"></status>
</kw>
<msg timestamp="20201029 18:18:20.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021414097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.019" endtime="20201029 18:18:20.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021414097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.311" endtime="20201029 18:18:20.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.319" endtime="20201029 18:18:20.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.016" endtime="20201029 18:18:20.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.015" endtime="20201029 18:18:20.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.325" level="INFO">${RESULT} = [{'diff': 0.00012687499999999852}, {'diff': 0.00012612500000000124}, {'diff': 0.00012588900000000056}, {'diff': 0.00012590300000000013}, {'diff': 0.00012618099999999952}, {'diff': 0.000126318999999999...</msg>
<status status="PASS" starttime="20201029 18:18:20.322" endtime="20201029 18:18:20.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.329" level="INFO">${ACCURACY} = {'diff': [0.00012687499999999852, 0.00012612500000000124, 0.00012588900000000056, 0.00012590300000000013, 0.00012618099999999952, 0.00012631899999999974, 0.00012663899999999784, 0.00012637500000000149...</msg>
<status status="PASS" starttime="20201029 18:18:20.326" endtime="20201029 18:18:20.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.334" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.333" endtime="20201029 18:18:20.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.336" level="INFO">VALUE: [0.00012687499999999852, 0.00012612500000000124, 0.00012588900000000056, 0.00012590300000000013, 0.00012618099999999952, 0.00012631899999999974, 0.00012663899999999784, 0.00012637500000000149, 0.00012672199999999925, 0.00012590200000000065, 0.00012595799999999893, 0.00012612499999999777, 0.00012584800000000132, 0.00012658299999999956, 0.0001265559999999999, 0.00012666700000000045, 0.00012625000000000136, 0.00012613899999999734, 0.00012649999999999814, 0.00012611100000000167, 0.00012594399999999936, 0.0001262499999999979, 0.00012594400000000283, 0.00012629200000000007, 0.00012672199999999925, 0.00012606999999999896, 0.00012587500000000099, 0.00012619499999999909, 0.00012638900000000106, 0.000126569, 0.00012625000000000136, 0.00012634700000000235, 0.00012630599999999964, 0.0001259299999999998, 0.00012663899999999784, 0.00012630500000000017, 0.00012623599999999832, 0.00012583399999999828, 0.00012673599999999882, 0.0001261109999999982, 0.00012637500000000149, 0.00012662500000000174, 0.0001261109999999982, 0.00012587499999999752, 0.00012602799999999678, 0.0001262780000000005, 0.0001267360000000023, 0.00012640300000000063, 0.00012586100000000142, 0.00012630500000000017]</msg>
<status status="PASS" starttime="20201029 18:18:20.335" endtime="20201029 18:18:20.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.330" endtime="20201029 18:18:20.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.341" endtime="20201029 18:18:20.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.339" endtime="20201029 18:18:20.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.338" endtime="20201029 18:18:20.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.980" endtime="20201029 18:18:20.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.979" endtime="20201029 18:18:20.362"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.370" endtime="20201029 18:18:20.391"></status>
</kw>
<msg timestamp="20201029 18:18:20.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.369" endtime="20201029 18:18:20.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.393" endtime="20201029 18:18:20.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.395" endtime="20201029 18:18:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.366" endtime="20201029 18:18:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.364" endtime="20201029 18:18:20.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.404" endtime="20201029 18:18:20.690"></status>
</kw>
<msg timestamp="20201029 18:18:20.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:20.402" endtime="20201029 18:18:20.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:20.694" endtime="20201029 18:18:20.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.702" endtime="20201029 18:18:20.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.400" endtime="20201029 18:18:20.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.398" endtime="20201029 18:18:20.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.708" level="INFO">${RESULT} = [{'diff': 0.00012794400000000136}, {'diff': 0.00012704100000000135}, {'diff': 0.00012717999999999757}, {'diff': 0.00012737499999999902}, {'diff': 0.00012736099999999945}, {'diff': 0.000126931000000000...</msg>
<status status="PASS" starttime="20201029 18:18:20.705" endtime="20201029 18:18:20.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.712" level="INFO">${ACCURACY} = {'diff': [0.00012794400000000136, 0.00012704100000000135, 0.00012717999999999757, 0.00012737499999999902, 0.00012736099999999945, 0.00012693100000000027, 0.0001274170000000012, 0.000127472, 0.00012741...</msg>
<status status="PASS" starttime="20201029 18:18:20.709" endtime="20201029 18:18:20.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.717" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.716" endtime="20201029 18:18:20.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.719" level="INFO">VALUE: [0.00012794400000000136, 0.00012704100000000135, 0.00012717999999999757, 0.00012737499999999902, 0.00012736099999999945, 0.00012693100000000027, 0.0001274170000000012, 0.000127472, 0.0001274170000000012, 0.0001271109999999992, 0.00012680600000000014, 0.00012687500000000199, 0.00012729200000000107, 0.0001272910000000016, 0.0001270139999999982, 0.0001272499999999989, 0.00012765300000000188, 0.00012736099999999945, 0.00012722199999999975, 0.00012759700000000013, 0.00012740300000000163, 0.00012690200000000165, 0.00012717999999999757, 0.00012708300000000006, 0.0001273620000000024, 0.00012749999999999914, 0.00012683399999999928, 0.00012709699999999963, 0.0001269719999999995, 0.00012686099999999895, 0.00012734699999999988, 0.00012767999999999807, 0.00012762499999999927, 0.00012686099999999895, 0.00012702800000000125, 0.00012720800000000018, 0.00012727799999999803, 0.00012709699999999963, 0.00012756899999999752, 0.00012727699999999856, 0.000126778000000001, 0.00012723599999999932, 0.0001273200000000002, 0.00012687500000000199, 0.00012726399999999846, 0.0001269719999999995, 0.00012690199999999818, 0.00012679200000000057, 0.00012765300000000188, 0.00012709699999999963]</msg>
<status status="PASS" starttime="20201029 18:18:20.718" endtime="20201029 18:18:20.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.713" endtime="20201029 18:18:20.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.725" endtime="20201029 18:18:20.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.723" endtime="20201029 18:18:20.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.722" endtime="20201029 18:18:20.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.362" endtime="20201029 18:18:20.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.362" endtime="20201029 18:18:20.745"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.755" endtime="20201029 18:18:20.776"></status>
</kw>
<msg timestamp="20201029 18:18:20.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.753" endtime="20201029 18:18:20.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.778" endtime="20201029 18:18:20.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.781" endtime="20201029 18:18:20.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.750" endtime="20201029 18:18:20.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.748" endtime="20201029 18:18:20.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.791" endtime="20201029 18:18:21.097"></status>
</kw>
<msg timestamp="20201029 18:18:21.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.789" endtime="20201029 18:18:21.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.101" endtime="20201029 18:18:21.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.109" endtime="20201029 18:18:21.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.787" endtime="20201029 18:18:21.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.784" endtime="20201029 18:18:21.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.116" level="INFO">${RESULT} = [{'diff': 0.00012873600000000082}, {'diff': 0.00012780599999999767}, {'diff': 0.00012862500000000027}, {'diff': 0.00012804199999999835}, {'diff': 0.00012872200000000125}, {'diff': 0.000127917000000001...</msg>
<status status="PASS" starttime="20201029 18:18:21.113" endtime="20201029 18:18:21.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.121" level="INFO">${ACCURACY} = {'diff': [0.00012873600000000082, 0.00012780599999999767, 0.00012862500000000027, 0.00012804199999999835, 0.00012872200000000125, 0.0001279170000000017, 0.00012851300000000024, 0.00012866700000000245,...</msg>
<status status="PASS" starttime="20201029 18:18:21.117" endtime="20201029 18:18:21.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.125" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.124" endtime="20201029 18:18:21.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.128" level="INFO">VALUE: [0.00012873600000000082, 0.00012780599999999767, 0.00012862500000000027, 0.00012804199999999835, 0.00012872200000000125, 0.0001279170000000017, 0.00012851300000000024, 0.00012866700000000245, 0.0001282369999999998, 0.00012836100000000045, 0.00012872199999999778, 0.00012830599999999817, 0.00012807000000000096, 0.00012804199999999835, 0.0001282919999999986, 0.00012872300000000073, 0.00012854199999999885, 0.00012836199999999992, 0.00012807000000000096, 0.00012792999999999832, 0.0001286529999999994, 0.00012830599999999817, 0.00012797199999999703, 0.00012866699999999898, 0.00012831899999999827, 0.00012822200000000075, 0.0001281110000000002, 0.00012836099999999698, 0.00012791600000000222, 0.00012852799999999928, 0.00012842999999999882, 0.00012866699999999898, 0.0001282919999999986, 0.00012784799999999985, 0.00012834700000000088, 0.00012805599999999792, 0.00012786199999999942, 0.00012848600000000057, 0.0001281940000000016, 0.00012816700000000195, 0.00012809699999999716, 0.00012823599999999685, 0.00012834700000000088, 0.00012848600000000057, 0.00012854099999999938, 0.00012823600000000032, 0.0001283889999999996, 0.0001285139999999997, 0.00012836099999999698, 0.00012802800000000225]</msg>
<status status="PASS" starttime="20201029 18:18:21.126" endtime="20201029 18:18:21.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.121" endtime="20201029 18:18:21.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.132" endtime="20201029 18:18:21.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.131" endtime="20201029 18:18:21.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.130" endtime="20201029 18:18:21.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.746" endtime="20201029 18:18:21.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.746" endtime="20201029 18:18:21.153"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.162" endtime="20201029 18:18:21.182"></status>
</kw>
<msg timestamp="20201029 18:18:21.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.160" endtime="20201029 18:18:21.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.184" endtime="20201029 18:18:21.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.186" endtime="20201029 18:18:21.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.158" endtime="20201029 18:18:21.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.156" endtime="20201029 18:18:21.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.195" endtime="20201029 18:18:21.484"></status>
</kw>
<msg timestamp="20201029 18:18:21.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.194" endtime="20201029 18:18:21.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.489" endtime="20201029 18:18:21.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.497" endtime="20201029 18:18:21.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.191" endtime="20201029 18:18:21.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.189" endtime="20201029 18:18:21.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.503" level="INFO">${RESULT} = [{'diff': 0.00012959700000000213}, {'diff': 0.00012954199999999985}, {'diff': 0.00012904099999999988}, {'diff': 0.00012918100000000252}, {'diff': 0.0001296110000000017}, {'diff': 0.0001295270000000008...</msg>
<status status="PASS" starttime="20201029 18:18:21.500" endtime="20201029 18:18:21.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.507" level="INFO">${ACCURACY} = {'diff': [0.00012959700000000213, 0.00012954199999999985, 0.00012904099999999988, 0.00012918100000000252, 0.0001296110000000017, 0.0001295270000000008, 0.00012954199999999985, 0.0001295140000000007, 0...</msg>
<status status="PASS" starttime="20201029 18:18:21.504" endtime="20201029 18:18:21.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.511" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.510" endtime="20201029 18:18:21.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.514" level="INFO">VALUE: [0.00012959700000000213, 0.00012954199999999985, 0.00012904099999999988, 0.00012918100000000252, 0.0001296110000000017, 0.0001295270000000008, 0.00012954199999999985, 0.0001295140000000007, 0.00012915200000000043, 0.0001289170000000027, 0.00012891699999999923, 0.00012913899999999687, 0.00012922200000000175, 0.00012898600000000107, 0.00012940300000000016, 0.00012902799999999978, 0.00012884700000000138, 0.0001291379999999974, 0.0001288469999999979, 0.000129166, 0.0001288049999999992, 0.00012912500000000077, 0.00012927800000000003, 0.00012945799999999896, 0.00012922300000000123, 0.00012950000000000114, 0.00012969500000000259, 0.00012883400000000128, 0.00012904199999999935, 0.00012940300000000016, 0.00012936100000000145, 0.0001296110000000017, 0.00012881899999999877, 0.0001290829999999986, 0.00012891599999999975, 0.00012916699999999948, 0.00012880500000000267, 0.0001293469999999984, 0.0001292500000000009, 0.00012947199999999853, 0.0001287500000000004, 0.00012966699999999998, 0.00012972200000000225, 0.00012972300000000173, 0.00012973599999999835, 0.00012908400000000153, 0.00012890299999999966, 0.0001296530000000004, 0.00012922200000000175, 0.00012963899999999737]</msg>
<status status="PASS" starttime="20201029 18:18:21.513" endtime="20201029 18:18:21.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.508" endtime="20201029 18:18:21.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.519" endtime="20201029 18:18:21.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.518" endtime="20201029 18:18:21.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.516" endtime="20201029 18:18:21.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.154" endtime="20201029 18:18:21.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.153" endtime="20201029 18:18:21.540"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.548" endtime="20201029 18:18:21.570"></status>
</kw>
<msg timestamp="20201029 18:18:21.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.547" endtime="20201029 18:18:21.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.571" endtime="20201029 18:18:21.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.574" endtime="20201029 18:18:21.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.544" endtime="20201029 18:18:21.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.542" endtime="20201029 18:18:21.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.583" endtime="20201029 18:18:21.869"></status>
</kw>
<msg timestamp="20201029 18:18:21.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.581" endtime="20201029 18:18:21.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.873" endtime="20201029 18:18:21.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.881" endtime="20201029 18:18:21.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.579" endtime="20201029 18:18:21.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.577" endtime="20201029 18:18:21.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.887" level="INFO">${RESULT} = [{'diff': 0.00013079199999999763}, {'diff': 0.000130472000000003}, {'diff': 0.0001302089999999992}, {'diff': 0.0001299859999999986}, {'diff': 0.00013023599999999885}, {'diff': 0.00012973599999999835},...</msg>
<status status="PASS" starttime="20201029 18:18:21.884" endtime="20201029 18:18:21.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.891" level="INFO">${ACCURACY} = {'diff': [0.00013079199999999763, 0.000130472000000003, 0.0001302089999999992, 0.0001299859999999986, 0.00013023599999999885, 0.00012973599999999835, 0.00013004100000000088, 0.00013013900000000134, 0....</msg>
<status status="PASS" starttime="20201029 18:18:21.888" endtime="20201029 18:18:21.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.896" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.895" endtime="20201029 18:18:21.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.898" level="INFO">VALUE: [0.00013079199999999763, 0.000130472000000003, 0.0001302089999999992, 0.0001299859999999986, 0.00013023599999999885, 0.00012973599999999835, 0.00013004100000000088, 0.00013013900000000134, 0.00012981899999999977, 0.00013029199999999713, 0.00013066700000000098, 0.00013072199999999978, 0.0001301530000000009, 0.00013002800000000078, 0.00013016700000000048, 0.0001305270000000018, 0.00013036100000000245, 0.00013002800000000078, 0.00013047199999999953, 0.00013048600000000257, 0.00013040300000000116, 0.0001298890000000011, 0.00013037500000000202, 0.00013009699999999916, 0.00013000000000000164, 0.00013008399999999906, 0.00013019400000000014, 0.00013072199999999978, 0.0001301530000000009, 0.00013008399999999906, 0.0001306119999999987, 0.0001307080000000002, 0.00012980599999999967, 0.00012983299999999934, 0.00013037499999999855, 0.00012988799999999814, 0.0001307080000000002, 0.00013061099999999923, 0.0001299590000000024, 0.00013063899999999837, 0.00012976400000000096, 0.00013047199999999953, 0.00013063899999999837, 0.00013034700000000288, 0.00012991700000000023, 0.0001307080000000002, 0.00013016700000000048, 0.00013016700000000048, 0.0001305270000000018, 0.00013011099999999873]</msg>
<status status="PASS" starttime="20201029 18:18:21.897" endtime="20201029 18:18:21.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.892" endtime="20201029 18:18:21.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.904" endtime="20201029 18:18:21.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.903" endtime="20201029 18:18:21.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.901" endtime="20201029 18:18:21.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.541" endtime="20201029 18:18:21.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.540" endtime="20201029 18:18:21.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.554" endtime="20201029 18:18:21.925"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:43.487" endtime="20201029 18:18:21.925" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.932" endtime="20201029 18:18:21.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.931" endtime="20201029 18:18:21.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.965" endtime="20201029 18:18:21.977"></status>
</kw>
<msg timestamp="20201029 18:18:21.978" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.964" endtime="20201029 18:18:21.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.979" endtime="20201029 18:18:21.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.983" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:21.981" endtime="20201029 18:18:21.984"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:21.961" endtime="20201029 18:18:21.984"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:21.959" endtime="20201029 18:18:21.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.957" endtime="20201029 18:18:21.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:21.989" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:21.988" endtime="20201029 18:18:21.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.986" endtime="20201029 18:18:21.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.956" endtime="20201029 18:18:21.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.956" endtime="20201029 18:18:21.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.991" endtime="20201029 18:18:21.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.954" endtime="20201029 18:18:21.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.953" endtime="20201029 18:18:21.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.929" endtime="20201029 18:18:21.993"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.004" endtime="20201029 18:18:22.020"></status>
</kw>
<msg timestamp="20201029 18:18:22.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.002" endtime="20201029 18:18:22.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.022" endtime="20201029 18:18:22.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.025" endtime="20201029 18:18:22.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.998" endtime="20201029 18:18:22.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.996" endtime="20201029 18:18:22.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.034" endtime="20201029 18:18:22.319"></status>
</kw>
<msg timestamp="20201029 18:18:22.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063851431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063927306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.033" endtime="20201029 18:18:22.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063851431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063927306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.324" endtime="20201029 18:18:22.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.332" endtime="20201029 18:18:22.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.030" endtime="20201029 18:18:22.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.028" endtime="20201029 18:18:22.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.338" level="INFO">${RESULT} = [{'diff': 7.587500000000302e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.544399999999396e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.544400000000784e-05}, {'diff': 7.545899999999994e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:22.335" endtime="20201029 18:18:22.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:22.343" level="INFO">${ACCURACY} = {'diff': [7.587500000000302e-05, 7.543000000000133e-05, 7.544399999999396e-05, 7.545800000000047e-05, 7.544400000000784e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.54719999999931e-05, 7.54729...</msg>
<status status="PASS" starttime="20201029 18:18:22.339" endtime="20201029 18:18:22.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.348" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:18:22.347" endtime="20201029 18:18:22.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.350" level="INFO">VALUE: [7.587500000000302e-05, 7.543000000000133e-05, 7.544399999999396e-05, 7.545800000000047e-05, 7.544400000000784e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.54719999999931e-05, 7.547299999999257e-05, 7.541700000000817e-05, 7.541599999999482e-05, 7.536100000000989e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.551400000001263e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.54160000000087e-05, 7.54310000000008e-05, 7.538899999999515e-05, 7.538799999999568e-05, 7.536100000000989e-05, 7.544499999999343e-05, 7.54310000000008e-05, 7.543000000000133e-05, 7.543000000000133e-05, 7.541599999999482e-05, 7.54169999999943e-05, 7.544500000000731e-05, 7.548599999999961e-05, 7.544500000000731e-05, 7.537500000000252e-05, 7.54310000000008e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.544499999999343e-05, 7.54169999999943e-05, 7.545800000000047e-05, 7.551399999999875e-05, 7.544399999999396e-05, 7.543000000000133e-05, 7.543099999998693e-05, 7.544399999999396e-05, 7.545800000000047e-05, 7.544500000000731e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.540300000000166e-05, 7.545800000000047e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.349" endtime="20201029 18:18:22.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.343" endtime="20201029 18:18:22.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.355" endtime="20201029 18:18:22.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.353" endtime="20201029 18:18:22.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.352" endtime="20201029 18:18:22.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.995" endtime="20201029 18:18:22.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.994" endtime="20201029 18:18:22.375"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.384" endtime="20201029 18:18:22.401"></status>
</kw>
<msg timestamp="20201029 18:18:22.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.383" endtime="20201029 18:18:22.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.403" endtime="20201029 18:18:22.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.405" endtime="20201029 18:18:22.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.380" endtime="20201029 18:18:22.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.378" endtime="20201029 18:18:22.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.414" endtime="20201029 18:18:22.701"></status>
</kw>
<msg timestamp="20201029 18:18:22.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.413" endtime="20201029 18:18:22.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.705" endtime="20201029 18:18:22.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.713" endtime="20201029 18:18:22.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.410" endtime="20201029 18:18:22.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.408" endtime="20201029 18:18:22.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.720" level="INFO">${RESULT} = [{'diff': 7.580600000000118e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.54029999999982e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.545800000000047e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:22.717" endtime="20201029 18:18:22.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:22.725" level="INFO">${ACCURACY} = {'diff': [7.580600000000118e-05, 7.54440000000009e-05, 7.54029999999982e-05, 7.54440000000009e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.54029999999982e-05, 7.543099999...</msg>
<status status="PASS" starttime="20201029 18:18:22.721" endtime="20201029 18:18:22.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.729" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:18:22.728" endtime="20201029 18:18:22.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.732" level="INFO">VALUE: [7.580600000000118e-05, 7.54440000000009e-05, 7.54029999999982e-05, 7.54440000000009e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.54029999999982e-05, 7.543099999999733e-05, 7.54440000000009e-05, 7.538899999999862e-05, 7.54440000000009e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.548600000000308e-05, 7.543000000000133e-05, 7.542999999999786e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.541700000000123e-05, 7.542999999999786e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.540200000000219e-05, 7.54440000000009e-05, 7.544399999999743e-05, 7.545899999999994e-05, 7.538899999999862e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.537500000000252e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.543000000000133e-05, 7.538899999999862e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.542999999999786e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.731" endtime="20201029 18:18:22.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.726" endtime="20201029 18:18:22.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.736" endtime="20201029 18:18:22.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.735" endtime="20201029 18:18:22.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.734" endtime="20201029 18:18:22.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.376" endtime="20201029 18:18:22.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.376" endtime="20201029 18:18:22.757"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.766" endtime="20201029 18:18:22.783"></status>
</kw>
<msg timestamp="20201029 18:18:22.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.765" endtime="20201029 18:18:22.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.785" endtime="20201029 18:18:22.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.787" endtime="20201029 18:18:22.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.762" endtime="20201029 18:18:22.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.760" endtime="20201029 18:18:22.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.796" endtime="20201029 18:18:23.084"></status>
</kw>
<msg timestamp="20201029 18:18:23.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.795" endtime="20201029 18:18:23.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.088" endtime="20201029 18:18:23.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.096" endtime="20201029 18:18:23.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.792" endtime="20201029 18:18:23.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.790" endtime="20201029 18:18:23.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.103" level="INFO">${RESULT} = [{'diff': 7.586099999999998e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.542999999999786e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.54310000000008e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:23.100" endtime="20201029 18:18:23.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.107" level="INFO">${ACCURACY} = {'diff': [7.586099999999998e-05, 7.54310000000008e-05, 7.542999999999786e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.5445000...</msg>
<status status="PASS" starttime="20201029 18:18:23.104" endtime="20201029 18:18:23.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.112" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.111" endtime="20201029 18:18:23.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.114" level="INFO">VALUE: [7.586099999999998e-05, 7.54310000000008e-05, 7.542999999999786e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.54449999999969e-05, 7.536100000000295e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.545899999999994e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.545800000000047e-05, 7.542999999999786e-05, 7.536099999999948e-05, 7.543000000000133e-05, 7.536099999999948e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.541699999999776e-05, 7.543000000000133e-05, 7.543099999999733e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.551399999999875e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.541599999999829e-05, 7.54310000000008e-05, 7.538899999999862e-05, 7.543000000000133e-05, 7.549999999999918e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.544399999999743e-05, 7.541599999999829e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.113" endtime="20201029 18:18:23.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.108" endtime="20201029 18:18:23.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.119" endtime="20201029 18:18:23.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.117" endtime="20201029 18:18:23.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.116" endtime="20201029 18:18:23.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.758" endtime="20201029 18:18:23.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.757" endtime="20201029 18:18:23.140"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.149" endtime="20201029 18:18:23.166"></status>
</kw>
<msg timestamp="20201029 18:18:23.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.147" endtime="20201029 18:18:23.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.168" endtime="20201029 18:18:23.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.170" endtime="20201029 18:18:23.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.144" endtime="20201029 18:18:23.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.142" endtime="20201029 18:18:23.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.179" endtime="20201029 18:18:23.465"></status>
</kw>
<msg timestamp="20201029 18:18:23.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023036833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023112708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.178" endtime="20201029 18:18:23.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023036833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023112708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.470" endtime="20201029 18:18:23.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.478" endtime="20201029 18:18:23.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.175" endtime="20201029 18:18:23.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.173" endtime="20201029 18:18:23.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.485" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.541599999999829e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.542999999999786e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:23.481" endtime="20201029 18:18:23.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.489" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.543000000000133e-05, 7.541700000000123e-05, 7.541599999999829e-05, 7.541700000000123e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.543100...</msg>
<status status="PASS" starttime="20201029 18:18:23.486" endtime="20201029 18:18:23.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.493" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.492" endtime="20201029 18:18:23.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.496" level="INFO">VALUE: [7.587499999999955e-05, 7.543000000000133e-05, 7.541700000000123e-05, 7.541599999999829e-05, 7.541700000000123e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.545899999999994e-05, 7.538899999999862e-05, 7.54310000000008e-05, 7.540200000000219e-05, 7.541700000000123e-05, 7.541600000000176e-05, 7.541699999999776e-05, 7.543099999999733e-05, 7.541700000000123e-05, 7.543099999999733e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.541700000000123e-05, 7.548599999999961e-05, 7.543099999999733e-05, 7.541699999999776e-05, 7.54440000000009e-05, 7.541599999999829e-05, 7.536200000000243e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.551400000000222e-05, 7.54440000000009e-05, 7.540199999999872e-05, 7.54440000000009e-05, 7.538899999999862e-05, 7.541700000000123e-05, 7.537500000000252e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.542999999999786e-05, 7.541599999999829e-05, 7.541700000000123e-05, 7.538899999999862e-05, 7.54440000000009e-05, 7.538899999999862e-05, 7.542999999999786e-05, 7.543000000000133e-05, 7.545899999999994e-05, 7.54440000000009e-05, 7.53890000000021e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.494" endtime="20201029 18:18:23.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.490" endtime="20201029 18:18:23.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.501" endtime="20201029 18:18:23.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.500" endtime="20201029 18:18:23.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.499" endtime="20201029 18:18:23.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.141" endtime="20201029 18:18:23.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.140" endtime="20201029 18:18:23.522"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.531" endtime="20201029 18:18:23.548"></status>
</kw>
<msg timestamp="20201029 18:18:23.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.529" endtime="20201029 18:18:23.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.549" endtime="20201029 18:18:23.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.552" endtime="20201029 18:18:23.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.527" endtime="20201029 18:18:23.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.525" endtime="20201029 18:18:23.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.561" endtime="20201029 18:18:23.846"></status>
</kw>
<msg timestamp="20201029 18:18:23.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.559" endtime="20201029 18:18:23.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.851" endtime="20201029 18:18:23.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.859" endtime="20201029 18:18:23.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.556" endtime="20201029 18:18:23.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.555" endtime="20201029 18:18:23.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.865" level="INFO">${RESULT} = [{'diff': 7.586099999999998e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.541699999999776e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.541699999999776e-05}, {'diff': 7.541700000000123e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:23.862" endtime="20201029 18:18:23.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.870" level="INFO">${ACCURACY} = {'diff': [7.586099999999998e-05, 7.54310000000008e-05, 7.541699999999776e-05, 7.544500000000037e-05, 7.541699999999776e-05, 7.541700000000123e-05, 7.541700000000123e-05, 7.543099999999733e-05, 7.54440...</msg>
<status status="PASS" starttime="20201029 18:18:23.866" endtime="20201029 18:18:23.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.875" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.874" endtime="20201029 18:18:23.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.877" level="INFO">VALUE: [7.586099999999998e-05, 7.54310000000008e-05, 7.541699999999776e-05, 7.544500000000037e-05, 7.541699999999776e-05, 7.541700000000123e-05, 7.541700000000123e-05, 7.543099999999733e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.547200000000004e-05, 7.544500000000037e-05, 7.534699999999991e-05, 7.544500000000037e-05, 7.541600000000176e-05, 7.541700000000123e-05, 7.545899999999994e-05, 7.549999999999918e-05, 7.54310000000008e-05, 7.540300000000166e-05, 7.54449999999969e-05, 7.544500000000037e-05, 7.544399999999743e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.543000000000133e-05, 7.543000000000133e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.543099999999733e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.54029999999982e-05, 7.541700000000123e-05, 7.54440000000009e-05, 7.542999999999786e-05, 7.543000000000133e-05, 7.540300000000166e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.545899999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.876" endtime="20201029 18:18:23.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.871" endtime="20201029 18:18:23.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.882" endtime="20201029 18:18:23.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.881" endtime="20201029 18:18:23.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.880" endtime="20201029 18:18:23.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.523" endtime="20201029 18:18:23.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.523" endtime="20201029 18:18:23.903"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.912" endtime="20201029 18:18:23.929"></status>
</kw>
<msg timestamp="20201029 18:18:23.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.910" endtime="20201029 18:18:23.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.930" endtime="20201029 18:18:23.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.933" endtime="20201029 18:18:23.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.908" endtime="20201029 18:18:23.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.906" endtime="20201029 18:18:23.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.942" endtime="20201029 18:18:24.227"></status>
</kw>
<msg timestamp="20201029 18:18:24.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.940" endtime="20201029 18:18:24.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.231" endtime="20201029 18:18:24.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.240" endtime="20201029 18:18:24.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.938" endtime="20201029 18:18:24.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.936" endtime="20201029 18:18:24.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.246" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.543099999999733e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.543099999999733e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:24.243" endtime="20201029 18:18:24.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:24.250" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.547200000000004e-05, 7.545899999999994e-05, 7.543099999999733e-05, 7.543000000000133e-05, 7.543099999999733e-05, 7.544399999999743e-05, 7.549999999999918e-05, 7.5431...</msg>
<status status="PASS" starttime="20201029 18:18:24.247" endtime="20201029 18:18:24.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.255" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:18:24.254" endtime="20201029 18:18:24.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.257" level="INFO">VALUE: [7.587499999999955e-05, 7.547200000000004e-05, 7.545899999999994e-05, 7.543099999999733e-05, 7.543000000000133e-05, 7.543099999999733e-05, 7.544399999999743e-05, 7.549999999999918e-05, 7.54310000000008e-05, 7.542999999999786e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.551299999999928e-05, 7.54440000000009e-05, 7.540300000000166e-05, 7.54310000000008e-05, 7.54449999999969e-05, 7.537499999999905e-05, 7.540300000000166e-05, 7.547200000000004e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.542999999999786e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.541699999999776e-05, 7.54440000000009e-05, 7.551400000000222e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.536099999999948e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.256" endtime="20201029 18:18:24.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.251" endtime="20201029 18:18:24.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.262" endtime="20201029 18:18:24.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.261" endtime="20201029 18:18:24.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.260" endtime="20201029 18:18:24.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.904" endtime="20201029 18:18:24.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.903" endtime="20201029 18:18:24.283"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.292" endtime="20201029 18:18:24.309"></status>
</kw>
<msg timestamp="20201029 18:18:24.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.290" endtime="20201029 18:18:24.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.311" endtime="20201029 18:18:24.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.313" endtime="20201029 18:18:24.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.288" endtime="20201029 18:18:24.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.285" endtime="20201029 18:18:24.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.322" endtime="20201029 18:18:24.608"></status>
</kw>
<msg timestamp="20201029 18:18:24.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.321" endtime="20201029 18:18:24.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.612" endtime="20201029 18:18:24.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.621" endtime="20201029 18:18:24.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.318" endtime="20201029 18:18:24.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.316" endtime="20201029 18:18:24.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.627" level="INFO">${RESULT} = [{'diff': 7.590200000000269e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.544399999999743e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.544500000000037e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:24.624" endtime="20201029 18:18:24.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:24.631" level="INFO">${ACCURACY} = {'diff': [7.590200000000269e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.538799999999915e-05, 7.545800000000047e-05, 7.54309...</msg>
<status status="PASS" starttime="20201029 18:18:24.628" endtime="20201029 18:18:24.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.636" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:18:24.635" endtime="20201029 18:18:24.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.638" level="INFO">VALUE: [7.590200000000269e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.538799999999915e-05, 7.545800000000047e-05, 7.543099999999733e-05, 7.54440000000009e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.54029999999982e-05, 7.545899999999994e-05, 7.545899999999994e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.538899999999862e-05, 7.54310000000008e-05, 7.544399999999743e-05, 7.548599999999961e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.544500000000037e-05, 7.547299999999951e-05, 7.543000000000133e-05, 7.54029999999982e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.547200000000004e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.54029999999982e-05, 7.541700000000123e-05, 7.537499999999905e-05, 7.541699999999776e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.551399999999875e-05, 7.550000000000265e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.54310000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.637" endtime="20201029 18:18:24.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.632" endtime="20201029 18:18:24.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.646" endtime="20201029 18:18:24.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.645" endtime="20201029 18:18:24.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.643" endtime="20201029 18:18:24.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.284" endtime="20201029 18:18:24.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.283" endtime="20201029 18:18:24.667"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.676" endtime="20201029 18:18:24.692"></status>
</kw>
<msg timestamp="20201029 18:18:24.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.674" endtime="20201029 18:18:24.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.694" endtime="20201029 18:18:24.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.696" endtime="20201029 18:18:24.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.672" endtime="20201029 18:18:24.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.670" endtime="20201029 18:18:24.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.705" endtime="20201029 18:18:24.991"></status>
</kw>
<msg timestamp="20201029 18:18:24.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.704" endtime="20201029 18:18:24.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.995" endtime="20201029 18:18:25.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.004" endtime="20201029 18:18:25.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.701" endtime="20201029 18:18:25.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.700" endtime="20201029 18:18:25.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.010" level="INFO">${RESULT} = [{'diff': 7.586099999999998e-05}, {'diff': 7.542999999999786e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.540199999999872e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:25.007" endtime="20201029 18:18:25.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.070" level="INFO">${ACCURACY} = {'diff': [7.586099999999998e-05, 7.542999999999786e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.540199999999872e-05, 7.54310000000008e-05, 7.542999999999786e-05, 7.544400...</msg>
<status status="PASS" starttime="20201029 18:18:25.011" endtime="20201029 18:18:25.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.078" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.077" endtime="20201029 18:18:25.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.081" level="INFO">VALUE: [7.586099999999998e-05, 7.542999999999786e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.540199999999872e-05, 7.54310000000008e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.543000000000133e-05, 7.54029999999982e-05, 7.54440000000009e-05, 7.541600000000176e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.540300000000166e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.541700000000123e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.551399999999875e-05, 7.541700000000123e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.548599999999961e-05, 7.541599999999829e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.537499999999905e-05, 7.54440000000009e-05, 7.5457999999997e-05, 7.5457999999997e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.541699999999776e-05, 7.545800000000047e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.080" endtime="20201029 18:18:25.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.071" endtime="20201029 18:18:25.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.091" endtime="20201029 18:18:25.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.089" endtime="20201029 18:18:25.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.088" endtime="20201029 18:18:25.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.668" endtime="20201029 18:18:25.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.668" endtime="20201029 18:18:25.111"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.120" endtime="20201029 18:18:25.137"></status>
</kw>
<msg timestamp="20201029 18:18:25.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.118" endtime="20201029 18:18:25.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.138" endtime="20201029 18:18:25.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.141" endtime="20201029 18:18:25.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.116" endtime="20201029 18:18:25.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.114" endtime="20201029 18:18:25.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.150" endtime="20201029 18:18:25.437"></status>
</kw>
<msg timestamp="20201029 18:18:25.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.149" endtime="20201029 18:18:25.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.441" endtime="20201029 18:18:25.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.449" endtime="20201029 18:18:25.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.146" endtime="20201029 18:18:25.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.145" endtime="20201029 18:18:25.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.456" level="INFO">${RESULT} = [{'diff': 7.588799999999965e-05}, {'diff': 7.537500000000252e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.54440000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:25.453" endtime="20201029 18:18:25.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.460" level="INFO">${ACCURACY} = {'diff': [7.588799999999965e-05, 7.537500000000252e-05, 7.545899999999994e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.54440000000009e-05, 7.543099999999733e-05, 7.545800000000047e-05, 7.542999...</msg>
<status status="PASS" starttime="20201029 18:18:25.457" endtime="20201029 18:18:25.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.465" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.463" endtime="20201029 18:18:25.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.467" level="INFO">VALUE: [7.588799999999965e-05, 7.537500000000252e-05, 7.545899999999994e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.54440000000009e-05, 7.543099999999733e-05, 7.545800000000047e-05, 7.542999999999786e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.547200000000004e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.544399999999743e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.547200000000004e-05, 7.545899999999994e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54449999999969e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.549999999999918e-05, 7.545899999999994e-05, 7.537499999999905e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.547200000000004e-05, 7.544399999999743e-05, 7.543000000000133e-05, 7.545800000000047e-05, 7.537500000000252e-05, 7.545899999999994e-05, 7.545800000000047e-05, 7.548599999999961e-05, 7.541599999999829e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.549999999999918e-05, 7.551399999999875e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.544399999999743e-05, 7.545899999999994e-05, 7.544399999999743e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.466" endtime="20201029 18:18:25.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.461" endtime="20201029 18:18:25.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.472" endtime="20201029 18:18:25.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.471" endtime="20201029 18:18:25.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.470" endtime="20201029 18:18:25.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.112" endtime="20201029 18:18:25.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.112" endtime="20201029 18:18:25.493"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.502" endtime="20201029 18:18:25.519"></status>
</kw>
<msg timestamp="20201029 18:18:25.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.500" endtime="20201029 18:18:25.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.520" endtime="20201029 18:18:25.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.523" endtime="20201029 18:18:25.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.498" endtime="20201029 18:18:25.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.495" endtime="20201029 18:18:25.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.531" endtime="20201029 18:18:25.818"></status>
</kw>
<msg timestamp="20201029 18:18:25.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.530" endtime="20201029 18:18:25.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.823" endtime="20201029 18:18:25.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.831" endtime="20201029 18:18:25.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.527" endtime="20201029 18:18:25.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.526" endtime="20201029 18:18:25.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.837" level="INFO">${RESULT} = [{'diff': 7.586099999999998e-05}, {'diff': 7.54449999999969e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.543000000000133e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:25.834" endtime="20201029 18:18:25.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.842" level="INFO">${ACCURACY} = {'diff': [7.586099999999998e-05, 7.54449999999969e-05, 7.543000000000133e-05, 7.54440000000009e-05, 7.547200000000004e-05, 7.543000000000133e-05, 7.541600000000176e-05, 7.543000000000133e-05, 7.538899...</msg>
<status status="PASS" starttime="20201029 18:18:25.838" endtime="20201029 18:18:25.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.847" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.846" endtime="20201029 18:18:25.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.850" level="INFO">VALUE: [7.586099999999998e-05, 7.54449999999969e-05, 7.543000000000133e-05, 7.54440000000009e-05, 7.547200000000004e-05, 7.543000000000133e-05, 7.541600000000176e-05, 7.543000000000133e-05, 7.538899999999862e-05, 7.544500000000037e-05, 7.542999999999786e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.547200000000004e-05, 7.54449999999969e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.541700000000123e-05, 7.541599999999829e-05, 7.54310000000008e-05, 7.543000000000133e-05, 7.548599999999961e-05, 7.54440000000009e-05, 7.540200000000219e-05, 7.552800000000179e-05, 7.544500000000037e-05, 7.541700000000123e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.543000000000133e-05, 7.547299999999951e-05, 7.543099999999733e-05, 7.544500000000037e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.538899999999862e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.541600000000176e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.54440000000009e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.848" endtime="20201029 18:18:25.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.843" endtime="20201029 18:18:25.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.855" endtime="20201029 18:18:25.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.854" endtime="20201029 18:18:25.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.852" endtime="20201029 18:18:25.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.494" endtime="20201029 18:18:25.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.493" endtime="20201029 18:18:25.876"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.885" endtime="20201029 18:18:25.902"></status>
</kw>
<msg timestamp="20201029 18:18:25.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.883" endtime="20201029 18:18:25.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.903" endtime="20201029 18:18:25.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.906" endtime="20201029 18:18:25.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.881" endtime="20201029 18:18:25.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.879" endtime="20201029 18:18:25.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.915" endtime="20201029 18:18:26.201"></status>
</kw>
<msg timestamp="20201029 18:18:26.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.913" endtime="20201029 18:18:26.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.205" endtime="20201029 18:18:26.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.213" endtime="20201029 18:18:26.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.911" endtime="20201029 18:18:26.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.909" endtime="20201029 18:18:26.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.220" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.587499999999955e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.587499999999955e-05}, {'diff': 7.556900000000102e-05}, {'diff': 7.541699999999776e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:26.217" endtime="20201029 18:18:26.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:26.231" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.587499999999955e-05, 7.543000000000133e-05, 7.587499999999955e-05, 7.556900000000102e-05, 7.541699999999776e-05, 7.549999999999918e-05, 7.556900000000102e-05, 7.5679...</msg>
<status status="PASS" starttime="20201029 18:18:26.223" endtime="20201029 18:18:26.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.242" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:18:26.240" endtime="20201029 18:18:26.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.246" level="INFO">VALUE: [7.587499999999955e-05, 7.587499999999955e-05, 7.543000000000133e-05, 7.587499999999955e-05, 7.556900000000102e-05, 7.541699999999776e-05, 7.549999999999918e-05, 7.556900000000102e-05, 7.567999999999811e-05, 7.541699999999776e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.544399999999743e-05, 7.551400000000222e-05, 7.551399999999875e-05, 7.547200000000004e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.569500000000062e-05, 7.548699999999908e-05, 7.547200000000004e-05, 7.555600000000093e-05, 7.556900000000102e-05, 7.545800000000047e-05, 7.5763999999999e-05, 7.588899999999912e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.540300000000166e-05, 7.547200000000004e-05, 7.541699999999776e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.551399999999875e-05, 7.548599999999961e-05, 7.594500000000087e-05, 7.573599999999986e-05, 7.5763999999999e-05, 7.548599999999961e-05, 7.549999999999918e-05, 7.544500000000037e-05, 7.572200000000029e-05, 7.59310000000013e-05, 7.543099999999733e-05, 7.548599999999961e-05, 7.581900000000127e-05, 7.580499999999823e-05, 7.563899999999887e-05, 7.54310000000008e-05, 7.579100000000213e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.244" endtime="20201029 18:18:26.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.234" endtime="20201029 18:18:26.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.256" endtime="20201029 18:18:26.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.253" endtime="20201029 18:18:26.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.251" endtime="20201029 18:18:26.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.877" endtime="20201029 18:18:26.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.876" endtime="20201029 18:18:26.279"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.293" endtime="20201029 18:18:26.313"></status>
</kw>
<msg timestamp="20201029 18:18:26.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.290" endtime="20201029 18:18:26.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.314" endtime="20201029 18:18:26.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.318" endtime="20201029 18:18:26.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.286" endtime="20201029 18:18:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.283" endtime="20201029 18:18:26.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.328" endtime="20201029 18:18:26.616"></status>
</kw>
<msg timestamp="20201029 18:18:26.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03147575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031551569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:26.326" endtime="20201029 18:18:26.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03147575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031551569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:26.620" endtime="20201029 18:18:26.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.629" endtime="20201029 18:18:26.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.323" endtime="20201029 18:18:26.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.321" endtime="20201029 18:18:26.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.635" level="INFO">${RESULT} = [{'diff': 7.581900000000474e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.563900000000234e-05}, {'diff': 7.551299999999928e-05}, {'diff': 7.524999999999893e-05}, {'diff': 7.54440000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:26.632" endtime="20201029 18:18:26.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:26.639" level="INFO">${ACCURACY} = {'diff': [7.581900000000474e-05, 7.54440000000009e-05, 7.563900000000234e-05, 7.551299999999928e-05, 7.524999999999893e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.55690000000045e-05, 7.5444000...</msg>
<status status="PASS" starttime="20201029 18:18:26.636" endtime="20201029 18:18:26.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.643" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:18:26.642" endtime="20201029 18:18:26.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.646" level="INFO">VALUE: [7.581900000000474e-05, 7.54440000000009e-05, 7.563900000000234e-05, 7.551299999999928e-05, 7.524999999999893e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.55690000000045e-05, 7.54440000000009e-05, 7.559700000000363e-05, 7.550000000000612e-05, 7.555499999999798e-05, 7.558400000000354e-05, 7.562500000000277e-05, 7.524999999999893e-05, 7.551399999999875e-05, 7.599999999999968e-05, 7.544500000000037e-05, 7.549999999999918e-05, 7.563900000000234e-05, 7.544500000000037e-05, 7.547200000000004e-05, 7.55839999999966e-05, 7.562500000000277e-05, 7.55839999999966e-05, 7.54440000000009e-05, 7.562499999999583e-05, 7.555500000000492e-05, 7.547200000000004e-05, 7.561099999999626e-05, 7.55969999999967e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.549999999999918e-05, 7.544500000000037e-05, 7.558300000000406e-05, 7.545899999999994e-05, 7.524999999999893e-05, 7.526400000000544e-05, 7.550000000000612e-05, 7.554199999999789e-05, 7.52639999999985e-05, 7.558300000000406e-05, 7.599999999999968e-05, 7.555599999999746e-05, 7.555499999999798e-05, 7.549999999999918e-05, 7.561099999999626e-05, 7.554100000000535e-05, 7.542999999999439e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.644" endtime="20201029 18:18:26.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.640" endtime="20201029 18:18:26.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.651" endtime="20201029 18:18:26.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.650" endtime="20201029 18:18:26.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.649" endtime="20201029 18:18:26.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.280" endtime="20201029 18:18:26.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.279" endtime="20201029 18:18:26.672"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.681" endtime="20201029 18:18:26.698"></status>
</kw>
<msg timestamp="20201029 18:18:26.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.679" endtime="20201029 18:18:26.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.699" endtime="20201029 18:18:26.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.702" endtime="20201029 18:18:26.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.676" endtime="20201029 18:18:26.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.674" endtime="20201029 18:18:26.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.711" endtime="20201029 18:18:26.995"></status>
</kw>
<msg timestamp="20201029 18:18:26.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021590139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.709" endtime="20201029 18:18:26.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021590139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.000" endtime="20201029 18:18:27.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.008" endtime="20201029 18:18:27.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.707" endtime="20201029 18:18:27.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.705" endtime="20201029 18:18:27.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.014" level="INFO">${RESULT} = [{'diff': 7.60830000000011e-05}, {'diff': 0.00010063800000000012}, {'diff': 0.00010069500000000134}, {'diff': 7.566699999999801e-05}, {'diff': 0.00010059700000000088}, {'diff': 7.566600000000201e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:27.011" endtime="20201029 18:18:27.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.019" level="INFO">${ACCURACY} = {'diff': [7.60830000000011e-05, 0.00010063800000000012, 0.00010069500000000134, 7.566699999999801e-05, 0.00010059700000000088, 7.566600000000201e-05, 0.00010058399999999731, 7.561099999999973e-05, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:27.015" endtime="20201029 18:18:27.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.024" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.023" endtime="20201029 18:18:27.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.026" level="INFO">VALUE: [7.60830000000011e-05, 0.00010063800000000012, 0.00010069500000000134, 7.566699999999801e-05, 0.00010059700000000088, 7.566600000000201e-05, 0.00010058399999999731, 7.561099999999973e-05, 0.00010058299999999784, 7.569500000000062e-05, 7.574999999999943e-05, 7.574999999999943e-05, 7.55830000000006e-05, 0.00010058299999999784, 0.00010069500000000134, 7.569399999999768e-05, 7.55830000000006e-05, 0.00010063899999999959, 7.562500000000277e-05, 7.56249999999993e-05, 7.567999999999811e-05, 7.559700000000016e-05, 7.583399999999685e-05, 7.566600000000201e-05, 7.555600000000093e-05, 7.574999999999943e-05, 7.563899999999887e-05, 7.569500000000062e-05, 7.580600000000118e-05, 7.563900000000234e-05, 0.00010055599999999817, 0.00010070800000000144, 0.00010070800000000144, 0.000100722000000001, 0.00010072199999999754, 7.561099999999973e-05, 7.55830000000006e-05, 7.56249999999993e-05, 0.00010059699999999741, 7.570900000000019e-05, 0.00010059700000000088, 7.577800000000204e-05, 7.568000000000158e-05, 7.56249999999993e-05, 0.00010058400000000078, 7.576400000000247e-05, 0.00010059700000000088, 7.568100000000105e-05, 7.55830000000006e-05, 0.00010061100000000045]</msg>
<status status="PASS" starttime="20201029 18:18:27.025" endtime="20201029 18:18:27.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.020" endtime="20201029 18:18:27.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.031" endtime="20201029 18:18:27.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.029" endtime="20201029 18:18:27.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.028" endtime="20201029 18:18:27.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.673" endtime="20201029 18:18:27.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.672" endtime="20201029 18:18:27.052"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.060" endtime="20201029 18:18:27.078"></status>
</kw>
<msg timestamp="20201029 18:18:27.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.058" endtime="20201029 18:18:27.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.080" endtime="20201029 18:18:27.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.082" endtime="20201029 18:18:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.056" endtime="20201029 18:18:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.054" endtime="20201029 18:18:27.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.093" endtime="20201029 18:18:27.397"></status>
</kw>
<msg timestamp="20201029 18:18:27.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021436764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.091" endtime="20201029 18:18:27.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021436764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.406" endtime="20201029 18:18:27.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.421" endtime="20201029 18:18:27.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.087" endtime="20201029 18:18:27.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.085" endtime="20201029 18:18:27.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.428" level="INFO">${RESULT} = [{'diff': 0.00010102799999999953}, {'diff': 0.00010068100000000177}, {'diff': 0.00010070799999999797}, {'diff': 0.00010072199999999754}, {'diff': 0.00010076399999999971}, {'diff': 0.000100709000000000...</msg>
<status status="PASS" starttime="20201029 18:18:27.425" endtime="20201029 18:18:27.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.432" level="INFO">${ACCURACY} = {'diff': [0.00010102799999999953, 0.00010068100000000177, 0.00010070799999999797, 0.00010072199999999754, 0.00010076399999999971, 0.00010070900000000091, 0.00010069499999999787, 0.00010070900000000091...</msg>
<status status="PASS" starttime="20201029 18:18:27.429" endtime="20201029 18:18:27.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.436" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.435" endtime="20201029 18:18:27.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.439" level="INFO">VALUE: [0.00010102799999999953, 0.00010068100000000177, 0.00010070799999999797, 0.00010072199999999754, 0.00010076399999999971, 0.00010070900000000091, 0.00010069499999999787, 0.00010070900000000091, 0.00010070900000000091, 0.00010072199999999754, 0.0001006939999999984, 0.00010070799999999797, 0.0001006939999999984, 0.00010070900000000091, 0.00010066699999999873, 0.00010076399999999971, 0.00010070799999999797, 0.00010072199999999754, 0.00010070800000000144, 0.00010069400000000187, 0.00010070799999999797, 0.000100722000000001, 0.00010072300000000048, 0.00010076399999999971, 0.00010070800000000144, 0.00010070800000000144, 0.00010072199999999754, 0.00010070800000000144, 0.00010070900000000091, 0.000100722000000001, 0.00010070799999999797, 0.00010072300000000048, 0.00010070800000000144, 0.00010070800000000144, 0.00010070799999999797, 0.00010069500000000134, 0.00010062500000000002, 0.00010073600000000058, 0.0001007359999999971, 0.0001006809999999983, 0.00010070799999999797, 0.00010070899999999744, 0.00010070800000000144, 0.00010070799999999797, 0.00010075000000000014, 0.00010076399999999971, 0.00010070799999999797, 0.00010072199999999754, 0.00010070800000000144, 0.00010070899999999744]</msg>
<status status="PASS" starttime="20201029 18:18:27.437" endtime="20201029 18:18:27.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.433" endtime="20201029 18:18:27.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.443" endtime="20201029 18:18:27.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.442" endtime="20201029 18:18:27.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.441" endtime="20201029 18:18:27.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.052" endtime="20201029 18:18:27.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.052" endtime="20201029 18:18:27.464"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.473" endtime="20201029 18:18:27.492"></status>
</kw>
<msg timestamp="20201029 18:18:27.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.471" endtime="20201029 18:18:27.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.493" endtime="20201029 18:18:27.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.496" endtime="20201029 18:18:27.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.469" endtime="20201029 18:18:27.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.467" endtime="20201029 18:18:27.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.505" endtime="20201029 18:18:27.790"></status>
</kw>
<msg timestamp="20201029 18:18:27.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.503" endtime="20201029 18:18:27.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.794" endtime="20201029 18:18:27.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.802" endtime="20201029 18:18:27.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.501" endtime="20201029 18:18:27.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.499" endtime="20201029 18:18:27.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.809" level="INFO">${RESULT} = [{'diff': 0.00010106899999999877}, {'diff': 0.000100722000000001}, {'diff': 0.0001006800000000023}, {'diff': 0.00010065299999999916}, {'diff': 0.00010070799999999797}, {'diff': 0.00010069500000000134}...</msg>
<status status="PASS" starttime="20201029 18:18:27.806" endtime="20201029 18:18:27.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.813" level="INFO">${ACCURACY} = {'diff': [0.00010106899999999877, 0.000100722000000001, 0.0001006800000000023, 0.00010065299999999916, 0.00010070799999999797, 0.00010069500000000134, 0.0001006809999999983, 0.0001006809999999983, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:27.810" endtime="20201029 18:18:27.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.817" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.816" endtime="20201029 18:18:27.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.820" level="INFO">VALUE: [0.00010106899999999877, 0.000100722000000001, 0.0001006800000000023, 0.00010065299999999916, 0.00010070799999999797, 0.00010069500000000134, 0.0001006809999999983, 0.0001006809999999983, 0.000100722000000001, 0.00010070900000000091, 0.000100722000000001, 0.000100722000000001, 0.00010070799999999797, 0.0001007359999999971, 0.00010073600000000058, 0.00010070900000000091, 0.00010070800000000144, 0.00010072199999999754, 0.00010070800000000144, 0.00010070800000000144, 0.00010070799999999797, 0.0001006939999999984, 0.000100722000000001, 0.00010070900000000091, 0.0001006670000000022, 0.00010067999999999883, 0.00010070800000000144, 0.000100722000000001, 0.000100722000000001, 0.000100722000000001, 0.00010065299999999916, 0.00010070800000000144, 0.00010070800000000144, 0.00010070900000000091, 0.000100722000000001, 0.0001006939999999984, 0.00010070800000000144, 0.000100722000000001, 0.0001006800000000023, 0.00010070800000000144, 0.00010073600000000058, 0.000100722000000001, 0.000100722000000001, 0.0001007359999999971, 0.00010072300000000048, 0.00010073600000000058, 0.00010065299999999916, 0.00010070800000000144, 0.00010070800000000144, 0.00010069500000000134]</msg>
<status status="PASS" starttime="20201029 18:18:27.818" endtime="20201029 18:18:27.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.813" endtime="20201029 18:18:27.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.825" endtime="20201029 18:18:27.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.824" endtime="20201029 18:18:27.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.823" endtime="20201029 18:18:27.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.465" endtime="20201029 18:18:27.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.464" endtime="20201029 18:18:27.846"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.854" endtime="20201029 18:18:27.873"></status>
</kw>
<msg timestamp="20201029 18:18:27.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.853" endtime="20201029 18:18:27.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.874" endtime="20201029 18:18:27.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.877" endtime="20201029 18:18:27.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.850" endtime="20201029 18:18:27.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.848" endtime="20201029 18:18:27.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.887" endtime="20201029 18:18:28.174"></status>
</kw>
<msg timestamp="20201029 18:18:28.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.885" endtime="20201029 18:18:28.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.178" endtime="20201029 18:18:28.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.186" endtime="20201029 18:18:28.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.882" endtime="20201029 18:18:28.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.880" endtime="20201029 18:18:28.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.192" level="INFO">${RESULT} = [{'diff': 0.00010102700000000006}, {'diff': 0.00010072199999999754}, {'diff': 0.00010073600000000058}, {'diff': 0.00010073700000000005}, {'diff': 0.00010073600000000058}, {'diff': 0.000100723000000000...</msg>
<status status="PASS" starttime="20201029 18:18:28.189" endtime="20201029 18:18:28.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.197" level="INFO">${ACCURACY} = {'diff': [0.00010102700000000006, 0.00010072199999999754, 0.00010073600000000058, 0.00010073700000000005, 0.00010073600000000058, 0.00010072300000000048, 0.0001006670000000022, 0.00010073600000000058,...</msg>
<status status="PASS" starttime="20201029 18:18:28.193" endtime="20201029 18:18:28.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.201" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.200" endtime="20201029 18:18:28.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.203" level="INFO">VALUE: [0.00010102700000000006, 0.00010072199999999754, 0.00010073600000000058, 0.00010073700000000005, 0.00010073600000000058, 0.00010072300000000048, 0.0001006670000000022, 0.00010073600000000058, 0.00010070800000000144, 0.00010072199999999754, 0.0001006670000000022, 0.000100722000000001, 0.0001006809999999983, 0.00010070800000000144, 0.00010072199999999754, 0.000100722000000001, 0.00010070900000000091, 0.00010075000000000014, 0.00010072199999999754, 0.000100722000000001, 0.00010072299999999701, 0.00010072199999999754, 0.00010070800000000144, 0.00010070900000000091, 0.000100722000000001, 0.00010072199999999754, 0.00010072300000000048, 0.00010070799999999797, 0.00010070900000000091, 0.00010070800000000144, 0.00010070800000000144, 0.00010076399999999971, 0.00010070800000000144, 0.00010072199999999754, 0.00010070799999999797, 0.000100722000000001, 0.00010070900000000091, 0.0001007359999999971, 0.000100722000000001, 0.00010073600000000058, 0.00010073600000000058, 0.00010070800000000144, 0.00010070799999999797, 0.00010077799999999928, 0.00010070899999999744, 0.000100722000000001, 0.00010070800000000144, 0.00010073600000000058, 0.00010073600000000058, 0.00010073700000000005]</msg>
<status status="PASS" starttime="20201029 18:18:28.202" endtime="20201029 18:18:28.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.198" endtime="20201029 18:18:28.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.210" endtime="20201029 18:18:28.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.208" endtime="20201029 18:18:28.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.206" endtime="20201029 18:18:28.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.847" endtime="20201029 18:18:28.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.846" endtime="20201029 18:18:28.231"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.239" endtime="20201029 18:18:28.257"></status>
</kw>
<msg timestamp="20201029 18:18:28.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.238" endtime="20201029 18:18:28.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.259" endtime="20201029 18:18:28.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.261" endtime="20201029 18:18:28.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.235" endtime="20201029 18:18:28.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.233" endtime="20201029 18:18:28.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.270" endtime="20201029 18:18:28.559"></status>
</kw>
<msg timestamp="20201029 18:18:28.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.269" endtime="20201029 18:18:28.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.563" endtime="20201029 18:18:28.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.571" endtime="20201029 18:18:28.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.266" endtime="20201029 18:18:28.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.264" endtime="20201029 18:18:28.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.578" level="INFO">${RESULT} = [{'diff': 0.00010102799999999953}, {'diff': 0.000100722000000001}, {'diff': 0.00010070800000000144}, {'diff': 0.00010073600000000058}, {'diff': 0.00010070800000000144}, {'diff': 0.000100722000000001},...</msg>
<status status="PASS" starttime="20201029 18:18:28.574" endtime="20201029 18:18:28.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.582" level="INFO">${ACCURACY} = {'diff': [0.00010102799999999953, 0.000100722000000001, 0.00010070800000000144, 0.00010073600000000058, 0.00010070800000000144, 0.000100722000000001, 0.00010076399999999971, 0.000100722000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:28.579" endtime="20201029 18:18:28.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.586" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.585" endtime="20201029 18:18:28.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.588" level="INFO">VALUE: [0.00010102799999999953, 0.000100722000000001, 0.00010070800000000144, 0.00010073600000000058, 0.00010070800000000144, 0.000100722000000001, 0.00010076399999999971, 0.000100722000000001, 0.00010072199999999754, 0.00010069500000000134, 0.00010073600000000058, 0.000100722000000001, 0.0001006800000000023, 0.00010069500000000134, 0.00010070799999999797, 0.00010069400000000187, 0.00010070900000000091, 0.00010076399999999971, 0.00010073600000000058, 0.0001007359999999971, 0.00010070900000000091, 0.00010070799999999797, 0.00010076399999999971, 0.00010069400000000187, 0.00010073600000000058, 0.00010070899999999744, 0.00010073600000000058, 0.00010076399999999971, 0.00010066600000000273, 0.00010066599999999926, 0.000100722000000001, 0.00010070900000000091, 0.00010072199999999754, 0.00010070799999999797, 0.000100722000000001, 0.00010070800000000144, 0.00010075000000000014, 0.00010072199999999754, 0.00010073600000000058, 0.00010073700000000005, 0.00010072300000000048, 0.000100722000000001, 0.00010070899999999744, 0.00010070800000000144, 0.000100722000000001, 0.00010070800000000144, 0.00010070800000000144, 0.00010072300000000048, 0.000100722000000001, 0.00010073600000000058]</msg>
<status status="PASS" starttime="20201029 18:18:28.587" endtime="20201029 18:18:28.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.582" endtime="20201029 18:18:28.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.593" endtime="20201029 18:18:28.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.592" endtime="20201029 18:18:28.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.591" endtime="20201029 18:18:28.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.231" endtime="20201029 18:18:28.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.231" endtime="20201029 18:18:28.614"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.622" endtime="20201029 18:18:28.641"></status>
</kw>
<msg timestamp="20201029 18:18:28.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.621" endtime="20201029 18:18:28.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.643" endtime="20201029 18:18:28.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.645" endtime="20201029 18:18:28.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.618" endtime="20201029 18:18:28.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.616" endtime="20201029 18:18:28.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.654" endtime="20201029 18:18:28.940"></status>
</kw>
<msg timestamp="20201029 18:18:28.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.652" endtime="20201029 18:18:28.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.944" endtime="20201029 18:18:28.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.952" endtime="20201029 18:18:28.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.650" endtime="20201029 18:18:28.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.648" endtime="20201029 18:18:28.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.959" level="INFO">${RESULT} = [{'diff': 0.00010109699999999791}, {'diff': 0.00010070899999999744}, {'diff': 0.000100722000000001}, {'diff': 0.00010073600000000058}, {'diff': 0.00010070899999999744}, {'diff': 0.00010069400000000187...</msg>
<status status="PASS" starttime="20201029 18:18:28.956" endtime="20201029 18:18:28.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.963" level="INFO">${ACCURACY} = {'diff': [0.00010109699999999791, 0.00010070899999999744, 0.000100722000000001, 0.00010073600000000058, 0.00010070899999999744, 0.00010069400000000187, 0.00010063899999999959, 0.00010075000000000014, ...</msg>
<status status="PASS" starttime="20201029 18:18:28.960" endtime="20201029 18:18:28.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.967" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.966" endtime="20201029 18:18:28.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.969" level="INFO">VALUE: [0.00010109699999999791, 0.00010070899999999744, 0.000100722000000001, 0.00010073600000000058, 0.00010070899999999744, 0.00010069400000000187, 0.00010063899999999959, 0.00010075000000000014, 0.00010072300000000048, 0.000100722000000001, 0.0001006800000000023, 0.00010070800000000144, 0.00010070800000000144, 0.0001006670000000022, 0.00010070900000000091, 0.00010066699999999873, 0.00010072199999999754, 0.00010072300000000048, 0.0001006809999999983, 0.00010070800000000144, 0.00010073600000000058, 0.000100722000000001, 0.00010072199999999754, 0.00010073600000000058, 0.00010067999999999883, 0.0001006809999999983, 0.000100722000000001, 0.000100722000000001, 0.00010073600000000058, 0.0001006939999999984, 0.00010069500000000134, 0.000100722000000001, 0.00010073600000000058, 0.00010070800000000144, 0.00010070800000000144, 0.000100722000000001, 0.00010070900000000091, 0.00010070800000000144, 0.00010070900000000091, 0.00010070799999999797, 0.000100722000000001, 0.00010072199999999754, 0.00010066599999999926, 0.000100722000000001, 0.00010079199999999885, 0.00010072300000000048, 0.00010072300000000048, 0.0001006809999999983, 0.00010070899999999744, 0.00010070899999999744]</msg>
<status status="PASS" starttime="20201029 18:18:28.968" endtime="20201029 18:18:28.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.964" endtime="20201029 18:18:28.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.975" endtime="20201029 18:18:28.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.974" endtime="20201029 18:18:28.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.973" endtime="20201029 18:18:28.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.615" endtime="20201029 18:18:28.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.614" endtime="20201029 18:18:28.996"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.004" endtime="20201029 18:18:29.023"></status>
</kw>
<msg timestamp="20201029 18:18:29.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.003" endtime="20201029 18:18:29.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.024" endtime="20201029 18:18:29.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.027" endtime="20201029 18:18:29.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.000" endtime="20201029 18:18:29.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.998" endtime="20201029 18:18:29.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.035" endtime="20201029 18:18:29.321"></status>
</kw>
<msg timestamp="20201029 18:18:29.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:29.034" endtime="20201029 18:18:29.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:29.325" endtime="20201029 18:18:29.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.333" endtime="20201029 18:18:29.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.031" endtime="20201029 18:18:29.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.030" endtime="20201029 18:18:29.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.340" level="INFO">${RESULT} = [{'diff': 0.00010105600000000214}, {'diff': 0.00010076399999999971}, {'diff': 0.00010072300000000048}, {'diff': 0.00010065299999999916}, {'diff': 0.00010070800000000144}, {'diff': 0.000100694999999997...</msg>
<status status="PASS" starttime="20201029 18:18:29.337" endtime="20201029 18:18:29.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:29.345" level="INFO">${ACCURACY} = {'diff': [0.00010105600000000214, 0.00010076399999999971, 0.00010072300000000048, 0.00010065299999999916, 0.00010070800000000144, 0.00010069499999999787, 0.00010070800000000144, 0.00010070800000000144...</msg>
<status status="PASS" starttime="20201029 18:18:29.341" endtime="20201029 18:18:29.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.349" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:18:29.348" endtime="20201029 18:18:29.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.351" level="INFO">VALUE: [0.00010105600000000214, 0.00010076399999999971, 0.00010072300000000048, 0.00010065299999999916, 0.00010070800000000144, 0.00010069499999999787, 0.00010070800000000144, 0.00010070800000000144, 0.00010068100000000177, 0.00010069400000000187, 0.00010070799999999797, 0.000100722000000001, 0.00010069400000000187, 0.00010069499999999787, 0.00010070800000000144, 0.00010072199999999754, 0.000100722000000001, 0.000100722000000001, 0.00010066599999999926, 0.00010070800000000144, 0.00010079199999999885, 0.0001006670000000022, 0.0001007359999999971, 0.000100722000000001, 0.000100722000000001, 0.00010069400000000187, 0.00010073600000000058, 0.000100722000000001, 0.00010076399999999971, 0.00010072300000000048, 0.00010070800000000144, 0.00010070800000000144, 0.00010076300000000024, 0.00010069500000000134, 0.00010070799999999797, 0.00010070900000000091, 0.000100722000000001, 0.00010075000000000014, 0.00010068100000000177, 0.0001006939999999984, 0.00010075000000000014, 0.00010073600000000058, 0.00010070900000000091, 0.00010070799999999797, 0.00010070899999999744, 0.00010073600000000058, 0.00010072300000000048, 0.00010065299999999916, 0.00010072199999999754, 0.00010072300000000048]</msg>
<status status="PASS" starttime="20201029 18:18:29.350" endtime="20201029 18:18:29.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.345" endtime="20201029 18:18:29.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.356" endtime="20201029 18:18:29.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.355" endtime="20201029 18:18:29.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.354" endtime="20201029 18:18:29.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.997" endtime="20201029 18:18:29.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.996" endtime="20201029 18:18:29.377"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.385" endtime="20201029 18:18:29.403"></status>
</kw>
<msg timestamp="20201029 18:18:29.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.384" endtime="20201029 18:18:29.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.405" endtime="20201029 18:18:29.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.407" endtime="20201029 18:18:29.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.381" endtime="20201029 18:18:29.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.379" endtime="20201029 18:18:29.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.416" endtime="20201029 18:18:29.723"></status>
</kw>
<msg timestamp="20201029 18:18:29.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.415" endtime="20201029 18:18:29.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.727" endtime="20201029 18:18:29.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.735" endtime="20201029 18:18:29.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.412" endtime="20201029 18:18:29.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.410" endtime="20201029 18:18:29.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.742" level="INFO">${RESULT} = [{'diff': 0.00010108300000000181}, {'diff': 0.000100722000000001}, {'diff': 0.000100722000000001}, {'diff': 0.0001008060000000019}, {'diff': 0.00010070800000000144}, {'diff': 0.00010073600000000058}, ...</msg>
<status status="PASS" starttime="20201029 18:18:29.738" endtime="20201029 18:18:29.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:29.745" level="INFO">${ACCURACY} = {'diff': [0.00010108300000000181, 0.000100722000000001, 0.000100722000000001, 0.0001008060000000019, 0.00010070800000000144, 0.00010073600000000058, 0.00010088899999999984, 0.00010076399999999971, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:29.743" endtime="20201029 18:18:29.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.750" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:18:29.749" endtime="20201029 18:18:29.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.752" level="INFO">VALUE: [0.00010108300000000181, 0.000100722000000001, 0.000100722000000001, 0.0001008060000000019, 0.00010070800000000144, 0.00010073600000000058, 0.00010088899999999984, 0.00010076399999999971, 0.00010082000000000146, 0.00010083300000000156, 0.00010083300000000156, 0.000100722000000001, 0.00010094399999999865, 0.00010086099999999723, 0.00010075000000000014, 0.0001006939999999984, 0.00010080599999999842, 0.000100722000000001, 0.000100722000000001, 0.00010072300000000048, 0.00010070900000000091, 0.00010076399999999971, 0.00010083299999999809, 0.00010072300000000048, 0.00010076300000000024, 0.00010077799999999928, 0.00010070900000000091, 0.00010084699999999766, 0.00010081899999999852, 0.00010077699999999981, 0.00010077799999999928, 0.00010076399999999971, 0.00010095900000000116, 0.00010070800000000144, 0.00010069500000000134, 0.0001006939999999984, 0.00010070799999999797, 0.00010070799999999797, 0.00010076399999999971, 0.0001007359999999971, 0.00010070800000000144, 0.00010076300000000024, 0.00010070799999999797, 0.00010087500000000027, 0.00010090299999999941, 0.00010070799999999797, 0.00010093099999999855, 0.00010073600000000058, 0.00010076399999999971, 0.00010076399999999971]</msg>
<status status="PASS" starttime="20201029 18:18:29.751" endtime="20201029 18:18:29.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.746" endtime="20201029 18:18:29.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.757" endtime="20201029 18:18:29.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.756" endtime="20201029 18:18:29.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.755" endtime="20201029 18:18:29.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.378" endtime="20201029 18:18:29.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.377" endtime="20201029 18:18:29.778"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.787" endtime="20201029 18:18:29.807"></status>
</kw>
<msg timestamp="20201029 18:18:29.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.785" endtime="20201029 18:18:29.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.808" endtime="20201029 18:18:29.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.811" endtime="20201029 18:18:29.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.783" endtime="20201029 18:18:29.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.781" endtime="20201029 18:18:29.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.820" endtime="20201029 18:18:30.105"></status>
</kw>
<msg timestamp="20201029 18:18:30.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.818" endtime="20201029 18:18:30.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.109" endtime="20201029 18:18:30.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.117" endtime="20201029 18:18:30.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.815" endtime="20201029 18:18:30.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.814" endtime="20201029 18:18:30.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.124" level="INFO">${RESULT} = [{'diff': 0.00011634799999999876}, {'diff': 0.00011613900000000121}, {'diff': 0.00011615200000000131}, {'diff': 0.00011616600000000088}, {'diff': 0.00011613899999999774}, {'diff': 0.000116153000000000...</msg>
<status status="PASS" starttime="20201029 18:18:30.121" endtime="20201029 18:18:30.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.128" level="INFO">${ACCURACY} = {'diff': [0.00011634799999999876, 0.00011613900000000121, 0.00011615200000000131, 0.00011616600000000088, 0.00011613899999999774, 0.00011615300000000078, 0.00011616700000000035, 0.00011605500000000032...</msg>
<status status="PASS" starttime="20201029 18:18:30.125" endtime="20201029 18:18:30.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.132" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.131" endtime="20201029 18:18:30.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.135" level="INFO">VALUE: [0.00011634799999999876, 0.00011613900000000121, 0.00011615200000000131, 0.00011616600000000088, 0.00011613899999999774, 0.00011615300000000078, 0.00011616700000000035, 0.00011605500000000032, 0.00011616700000000035, 0.00011613899999999774, 0.00011613899999999774, 0.00011615300000000078, 0.00011622199999999916, 0.00011613900000000121, 0.00011615299999999731, 0.00011611200000000155, 0.00011612500000000164, 0.00011613799999999827, 0.00011613899999999774, 0.00011615199999999784, 0.00011613900000000121, 0.00011616600000000088, 0.00011613899999999774, 0.00011615300000000078, 0.00011615300000000078, 0.00011611100000000207, 0.00011613899999999774, 0.00011612500000000164, 0.00011615300000000078, 0.00011615300000000078, 0.00011613900000000121, 0.00011618000000000045, 0.00011613899999999774, 0.00011613900000000121, 0.00011601400000000109, 0.00011616700000000035, 0.0001161109999999986, 0.00011613900000000121, 0.00011616700000000035, 0.00011598599999999848, 0.00010113900000000009, 0.00011594399999999977, 0.00011618099999999992, 0.00011613900000000121, 0.00011618099999999992, 0.00011615300000000078, 0.00011613799999999827, 0.00011613900000000121, 0.00011615300000000078, 0.0001160689999999999]</msg>
<status status="PASS" starttime="20201029 18:18:30.134" endtime="20201029 18:18:30.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.129" endtime="20201029 18:18:30.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.147" endtime="20201029 18:18:30.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.145" endtime="20201029 18:18:30.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.144" endtime="20201029 18:18:30.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.779" endtime="20201029 18:18:30.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.779" endtime="20201029 18:18:30.168"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.176" endtime="20201029 18:18:30.195"></status>
</kw>
<msg timestamp="20201029 18:18:30.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.175" endtime="20201029 18:18:30.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.197" endtime="20201029 18:18:30.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.199" endtime="20201029 18:18:30.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.172" endtime="20201029 18:18:30.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.170" endtime="20201029 18:18:30.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.208" endtime="20201029 18:18:30.493"></status>
</kw>
<msg timestamp="20201029 18:18:30.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.207" endtime="20201029 18:18:30.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.498" endtime="20201029 18:18:30.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.506" endtime="20201029 18:18:30.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.204" endtime="20201029 18:18:30.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.202" endtime="20201029 18:18:30.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.512" level="INFO">${RESULT} = [{'diff': 0.00011633399999999919}, {'diff': 0.00011615300000000078}, {'diff': 0.00011619400000000002}, {'diff': 0.00011618099999999992}, {'diff': 0.00011615300000000078}, {'diff': 0.000116180999999999...</msg>
<status status="PASS" starttime="20201029 18:18:30.509" endtime="20201029 18:18:30.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.517" level="INFO">${ACCURACY} = {'diff': [0.00011633399999999919, 0.00011615300000000078, 0.00011619400000000002, 0.00011618099999999992, 0.00011615300000000078, 0.00011618099999999992, 0.00011615300000000078, 0.00011613800000000174...</msg>
<status status="PASS" starttime="20201029 18:18:30.513" endtime="20201029 18:18:30.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.522" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.521" endtime="20201029 18:18:30.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.524" level="INFO">VALUE: [0.00011633399999999919, 0.00011615300000000078, 0.00011619400000000002, 0.00011618099999999992, 0.00011615300000000078, 0.00011618099999999992, 0.00011615300000000078, 0.00011613800000000174, 0.00011615299999999731, 0.00011615300000000078, 0.00011615300000000078, 0.0001161109999999986, 0.00011615300000000078, 0.00011613899999999774, 0.00011613900000000121, 0.00011618099999999992, 0.00011615200000000131, 0.00011612500000000164, 0.00011615200000000131, 0.00011616700000000035, 0.00011613900000000121, 0.00011615199999999784, 0.00011609699999999903, 0.00011615300000000078, 0.00011613899999999774, 0.00011615300000000078, 0.00011616699999999688, 0.00011618099999999992, 0.00011613900000000121, 0.00011616599999999741, 0.00011615300000000078, 0.00011619400000000002, 0.00011615300000000078, 0.00011612499999999817, 0.00011615300000000078, 0.00011618000000000045, 0.00011616700000000035, 0.00011609699999999903, 0.00011615299999999731, 0.00011616700000000035, 0.00011620900000000253, 0.00011616700000000035, 0.00011615300000000078, 0.00011613900000000121, 0.00011619400000000002, 0.00011618099999999992, 0.00011616700000000035, 0.00011616700000000035, 0.00011616699999999688, 0.00011615299999999731]</msg>
<status status="PASS" starttime="20201029 18:18:30.523" endtime="20201029 18:18:30.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.518" endtime="20201029 18:18:30.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.529" endtime="20201029 18:18:30.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.527" endtime="20201029 18:18:30.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.526" endtime="20201029 18:18:30.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.169" endtime="20201029 18:18:30.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.168" endtime="20201029 18:18:30.550"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.563" endtime="20201029 18:18:30.583"></status>
</kw>
<msg timestamp="20201029 18:18:30.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.561" endtime="20201029 18:18:30.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.586" endtime="20201029 18:18:30.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.589" endtime="20201029 18:18:30.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.558" endtime="20201029 18:18:30.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.553" endtime="20201029 18:18:30.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.598" endtime="20201029 18:18:30.886"></status>
</kw>
<msg timestamp="20201029 18:18:30.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027717167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027833514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.597" endtime="20201029 18:18:30.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027717167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027833514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.890" endtime="20201029 18:18:30.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.898" endtime="20201029 18:18:30.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.594" endtime="20201029 18:18:30.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.593" endtime="20201029 18:18:30.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.904" level="INFO">${RESULT} = [{'diff': 0.00011634699999999928}, {'diff': 0.00011613900000000121}, {'diff': 0.00011622199999999916}, {'diff': 0.00011617999999999698}, {'diff': 0.00011620899999999906}, {'diff': 0.000116223000000002...</msg>
<status status="PASS" starttime="20201029 18:18:30.901" endtime="20201029 18:18:30.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.908" level="INFO">${ACCURACY} = {'diff': [0.00011634699999999928, 0.00011613900000000121, 0.00011622199999999916, 0.00011617999999999698, 0.00011620899999999906, 0.0001162230000000021, 0.00011622200000000263, 0.00011613900000000121,...</msg>
<status status="PASS" starttime="20201029 18:18:30.905" endtime="20201029 18:18:30.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.912" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.912" endtime="20201029 18:18:30.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.918" level="INFO">VALUE: [0.00011634699999999928, 0.00011613900000000121, 0.00011622199999999916, 0.00011617999999999698, 0.00011620899999999906, 0.0001162230000000021, 0.00011622200000000263, 0.00011613900000000121, 0.00011615300000000078, 0.00011608299999999946, 0.00011613900000000121, 0.00011615300000000078, 0.00011613899999999774, 0.00011613900000000121, 0.00011619400000000002, 0.00011620899999999906, 0.00011615299999999731, 0.00011615199999999784, 0.00011613899999999774, 0.00011616700000000035, 0.00011615300000000078, 0.00011609800000000198, 0.00011616700000000035, 0.00011622200000000263, 0.00011615300000000078, 0.00011616700000000382, 0.00011611100000000207, 0.000116082999999996, 0.00011615300000000078, 0.00011615300000000078, 0.00011615300000000078, 0.00011616700000000035, 0.00011613900000000121, 0.00011616600000000088, 0.00011616700000000035, 0.00011618000000000045, 0.00011615299999999384, 0.0001161249999999947, 0.00011615300000000078, 0.00011622199999999916, 0.00011613899999999427, 0.00011615300000000078, 0.00011616600000000088, 0.00011611099999999513, 0.00011615200000000131, 0.00011618099999999992, 0.00011613900000000121, 0.0001161379999999948, 0.0001161249999999947, 0.00011615300000000078]</msg>
<status status="PASS" starttime="20201029 18:18:30.914" endtime="20201029 18:18:30.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.909" endtime="20201029 18:18:30.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.923" endtime="20201029 18:18:30.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.922" endtime="20201029 18:18:30.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.920" endtime="20201029 18:18:30.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.551" endtime="20201029 18:18:30.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.550" endtime="20201029 18:18:30.944"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.953" endtime="20201029 18:18:30.973"></status>
</kw>
<msg timestamp="20201029 18:18:30.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.951" endtime="20201029 18:18:30.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.974" endtime="20201029 18:18:30.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.977" endtime="20201029 18:18:30.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.949" endtime="20201029 18:18:30.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.947" endtime="20201029 18:18:30.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.986" endtime="20201029 18:18:31.287"></status>
</kw>
<msg timestamp="20201029 18:18:31.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.984" endtime="20201029 18:18:31.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.292" endtime="20201029 18:18:31.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.300" endtime="20201029 18:18:31.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.982" endtime="20201029 18:18:31.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.980" endtime="20201029 18:18:31.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.306" level="INFO">${RESULT} = [{'diff': 0.00011634799999999876}, {'diff': 0.00011613900000000121}, {'diff': 0.00011612500000000164}, {'diff': 0.0001160970000000025}, {'diff': 0.00011615200000000131}, {'diff': 0.0001161940000000000...</msg>
<status status="PASS" starttime="20201029 18:18:31.303" endtime="20201029 18:18:31.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:31.310" level="INFO">${ACCURACY} = {'diff': [0.00011634799999999876, 0.00011613900000000121, 0.00011612500000000164, 0.0001160970000000025, 0.00011615200000000131, 0.00011619400000000002, 0.00011613799999999827, 0.00011613900000000121,...</msg>
<status status="PASS" starttime="20201029 18:18:31.307" endtime="20201029 18:18:31.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.315" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:18:31.314" endtime="20201029 18:18:31.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.318" level="INFO">VALUE: [0.00011634799999999876, 0.00011613900000000121, 0.00011612500000000164, 0.0001160970000000025, 0.00011615200000000131, 0.00011619400000000002, 0.00011613799999999827, 0.00011613900000000121, 0.00011616700000000035, 0.00011615200000000131, 0.00011613900000000121, 0.00011616600000000088, 0.00011612500000000164, 0.00011617999999999698, 0.00011615300000000078, 0.00011615300000000078, 0.00011613900000000121, 0.00011613800000000174, 0.00011615299999999731, 0.00011611100000000207, 0.00011615300000000078, 0.00011613900000000121, 0.00011622200000000263, 0.00011613800000000174, 0.00011615300000000078, 0.00011613800000000174, 0.00011612499999999817, 0.00011615299999999731, 0.00011615300000000078, 0.00011615300000000078, 0.00011615300000000078, 0.00011615300000000078, 0.00011613899999999774, 0.00011615300000000078, 0.00011615300000000078, 0.00011616700000000035, 0.00011616700000000035, 0.00011615300000000078, 0.00011615300000000078, 0.00011616699999999688, 0.00011616700000000035, 0.00011615199999999784, 0.00011618099999999992, 0.00011618099999999992, 0.00011615300000000078, 0.00011613900000000121, 0.00011616700000000035, 0.00011609699999999903, 0.00011619400000000002, 0.00011613900000000121]</msg>
<status status="PASS" starttime="20201029 18:18:31.316" endtime="20201029 18:18:31.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.311" endtime="20201029 18:18:31.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.323" endtime="20201029 18:18:31.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.321" endtime="20201029 18:18:31.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.320" endtime="20201029 18:18:31.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.945" endtime="20201029 18:18:31.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.945" endtime="20201029 18:18:31.344"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.352" endtime="20201029 18:18:31.371"></status>
</kw>
<msg timestamp="20201029 18:18:31.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.351" endtime="20201029 18:18:31.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.373" endtime="20201029 18:18:31.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.375" endtime="20201029 18:18:31.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.348" endtime="20201029 18:18:31.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.346" endtime="20201029 18:18:31.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.384" endtime="20201029 18:18:31.670"></status>
</kw>
<msg timestamp="20201029 18:18:31.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.383" endtime="20201029 18:18:31.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.674" endtime="20201029 18:18:31.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.682" endtime="20201029 18:18:31.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.380" endtime="20201029 18:18:31.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.378" endtime="20201029 18:18:31.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.689" level="INFO">${RESULT} = [{'diff': 0.00011634699999999928}, {'diff': 0.00011618000000000045}, {'diff': 0.00011616700000000035}, {'diff': 0.00011615300000000078}, {'diff': 0.00011619400000000002}, {'diff': 0.000116221999999999...</msg>
<status status="PASS" starttime="20201029 18:18:31.685" endtime="20201029 18:18:31.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:31.693" level="INFO">${ACCURACY} = {'diff': [0.00011634699999999928, 0.00011618000000000045, 0.00011616700000000035, 0.00011615300000000078, 0.00011619400000000002, 0.00011622199999999916, 0.00011618000000000045, 0.00011613799999999827...</msg>
<status status="PASS" starttime="20201029 18:18:31.690" endtime="20201029 18:18:31.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.698" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:18:31.697" endtime="20201029 18:18:31.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.700" level="INFO">VALUE: [0.00011634699999999928, 0.00011618000000000045, 0.00011616700000000035, 0.00011615300000000078, 0.00011619400000000002, 0.00011622199999999916, 0.00011618000000000045, 0.00011613799999999827, 0.00011616700000000035, 0.00011613899999999774, 0.00011613800000000174, 0.00011612500000000164, 0.00011620799999999959, 0.00011613900000000121, 0.00011616700000000035, 0.00011612500000000164, 0.00011613899999999774, 0.00011612500000000164, 0.00011619400000000002, 0.00011612499999999817, 0.00011613900000000121, 0.00011612499999999817, 0.00011608399999999894, 0.00011613899999999774, 0.00011613900000000121, 0.00011620800000000306, 0.00011620800000000306, 0.00011613900000000121, 0.00011612500000000164, 0.00011618099999999992, 0.00011619400000000002, 0.00011620900000000253, 0.00011613900000000121, 0.00011613900000000121, 0.00011615299999999731, 0.00011615200000000131, 0.00011613899999999774, 0.00011613900000000121, 0.00011613900000000121, 0.00011612499999999817, 0.00011613899999999774, 0.00011613900000000121, 0.00011622200000000263, 0.00011613900000000121, 0.00011622200000000263, 0.00011612500000000164, 0.00011613900000000121, 0.00011613900000000121, 0.00011612500000000164, 0.00011615299999999731]</msg>
<status status="PASS" starttime="20201029 18:18:31.699" endtime="20201029 18:18:31.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.694" endtime="20201029 18:18:31.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.705" endtime="20201029 18:18:31.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.704" endtime="20201029 18:18:31.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.703" endtime="20201029 18:18:31.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.345" endtime="20201029 18:18:31.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.344" endtime="20201029 18:18:31.726"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.735" endtime="20201029 18:18:31.753"></status>
</kw>
<msg timestamp="20201029 18:18:31.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.733" endtime="20201029 18:18:31.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.755" endtime="20201029 18:18:31.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.758" endtime="20201029 18:18:31.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.730" endtime="20201029 18:18:31.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.728" endtime="20201029 18:18:31.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.766" endtime="20201029 18:18:32.058"></status>
</kw>
<msg timestamp="20201029 18:18:32.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.765" endtime="20201029 18:18:32.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.062" endtime="20201029 18:18:32.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.070" endtime="20201029 18:18:32.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.762" endtime="20201029 18:18:32.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.761" endtime="20201029 18:18:32.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.076" level="INFO">${RESULT} = [{'diff': 0.00011634699999999928}, {'diff': 0.00011611100000000207}, {'diff': 0.00011606999999999937}, {'diff': 0.00011612499999999817}, {'diff': 0.00011613900000000121}, {'diff': 0.000116125000000001...</msg>
<status status="PASS" starttime="20201029 18:18:32.073" endtime="20201029 18:18:32.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.080" level="INFO">${ACCURACY} = {'diff': [0.00011634699999999928, 0.00011611100000000207, 0.00011606999999999937, 0.00011612499999999817, 0.00011613900000000121, 0.00011612500000000164, 0.00011612499999999817, 0.00011618099999999992...</msg>
<status status="PASS" starttime="20201029 18:18:32.077" endtime="20201029 18:18:32.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.085" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.084" endtime="20201029 18:18:32.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.087" level="INFO">VALUE: [0.00011634699999999928, 0.00011611100000000207, 0.00011606999999999937, 0.00011612499999999817, 0.00011613900000000121, 0.00011612500000000164, 0.00011612499999999817, 0.00011618099999999992, 0.00011609699999999903, 0.00011612499999999817, 0.00011612500000000164, 0.00011612499999999817, 0.00011612499999999817, 0.00011612500000000164, 0.00011613900000000121, 0.00011618000000000045, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.0001161109999999986, 0.00011619400000000002, 0.00011615200000000131, 0.00011615200000000131, 0.00011613899999999774, 0.00011615300000000078, 0.00011613900000000121, 0.00011616600000000088, 0.00011616600000000088, 0.00011612499999999817, 0.00011613899999999774, 0.00011612500000000164, 0.00011611100000000207, 0.00011611100000000207, 0.00011620799999999959, 0.00011616700000000035, 0.00011605600000000327, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011612499999999817, 0.00011612499999999817, 0.00011620799999999959, 0.00011619499999999949, 0.00011615199999999784, 0.00011616700000000035, 0.00011613899999999774, 0.00011615300000000078, 0.00011613899999999774]</msg>
<status status="PASS" starttime="20201029 18:18:32.086" endtime="20201029 18:18:32.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.081" endtime="20201029 18:18:32.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.092" endtime="20201029 18:18:32.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.091" endtime="20201029 18:18:32.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.089" endtime="20201029 18:18:32.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.727" endtime="20201029 18:18:32.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.726" endtime="20201029 18:18:32.113"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.121" endtime="20201029 18:18:32.141"></status>
</kw>
<msg timestamp="20201029 18:18:32.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.120" endtime="20201029 18:18:32.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.143" endtime="20201029 18:18:32.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.145" endtime="20201029 18:18:32.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.117" endtime="20201029 18:18:32.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.115" endtime="20201029 18:18:32.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.154" endtime="20201029 18:18:32.440"></status>
</kw>
<msg timestamp="20201029 18:18:32.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.153" endtime="20201029 18:18:32.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.444" endtime="20201029 18:18:32.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.453" endtime="20201029 18:18:32.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.150" endtime="20201029 18:18:32.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.149" endtime="20201029 18:18:32.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.460" level="INFO">${RESULT} = [{'diff': 0.00011631900000000014}, {'diff': 0.00011612499999999817}, {'diff': 0.00011613899999999774}, {'diff': 0.00011612500000000164}, {'diff': 0.00011615199999999784}, {'diff': 0.000116125000000001...</msg>
<status status="PASS" starttime="20201029 18:18:32.457" endtime="20201029 18:18:32.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.464" level="INFO">${ACCURACY} = {'diff': [0.00011631900000000014, 0.00011612499999999817, 0.00011613899999999774, 0.00011612500000000164, 0.00011615199999999784, 0.00011612500000000164, 0.00011612500000000164, 0.00011615300000000078...</msg>
<status status="PASS" starttime="20201029 18:18:32.461" endtime="20201029 18:18:32.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.468" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.467" endtime="20201029 18:18:32.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.471" level="INFO">VALUE: [0.00011631900000000014, 0.00011612499999999817, 0.00011613899999999774, 0.00011612500000000164, 0.00011615199999999784, 0.00011612500000000164, 0.00011612500000000164, 0.00011615300000000078, 0.00011613900000000121, 0.00011615300000000078, 0.0001161109999999986, 0.00011619400000000002, 0.00011618099999999992, 0.00011613900000000121, 0.00011612500000000164, 0.00011612499999999817, 0.0001160689999999999, 0.00011616600000000088, 0.00011613900000000121, 0.00011612500000000164, 0.00011613900000000121, 0.00011615199999999784, 0.00011616600000000088, 0.00011613900000000121, 0.00011615300000000078, 0.00011620799999999959, 0.00011613900000000121, 0.00011618000000000045, 0.00011615300000000078, 0.00011615300000000078, 0.00011616600000000088, 0.00011611100000000207, 0.00011613899999999774, 0.00011612499999999817, 0.00011613899999999774, 0.00011616700000000035, 0.00011613900000000121, 0.00011608299999999946, 0.00011612500000000164, 0.00011612499999999817, 0.00011616700000000035, 0.00011615200000000131, 0.00011619499999999949, 0.0001160559999999998, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613800000000174, 0.0001161109999999986, 0.00011612499999999817]</msg>
<status status="PASS" starttime="20201029 18:18:32.469" endtime="20201029 18:18:32.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.465" endtime="20201029 18:18:32.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.476" endtime="20201029 18:18:32.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.475" endtime="20201029 18:18:32.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.474" endtime="20201029 18:18:32.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.114" endtime="20201029 18:18:32.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.113" endtime="20201029 18:18:32.497"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.506" endtime="20201029 18:18:32.525"></status>
</kw>
<msg timestamp="20201029 18:18:32.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.504" endtime="20201029 18:18:32.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.526" endtime="20201029 18:18:32.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.529" endtime="20201029 18:18:32.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.502" endtime="20201029 18:18:32.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.500" endtime="20201029 18:18:32.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.538" endtime="20201029 18:18:32.824"></status>
</kw>
<msg timestamp="20201029 18:18:32.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:32.536" endtime="20201029 18:18:32.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:32.828" endtime="20201029 18:18:32.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.836" endtime="20201029 18:18:32.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.534" endtime="20201029 18:18:32.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.532" endtime="20201029 18:18:32.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.843" level="INFO">${RESULT} = [{'diff': 0.00011633299999999971}, {'diff': 0.00011613900000000121}, {'diff': 0.00011613900000000121}, {'diff': 0.00011613900000000121}, {'diff': 0.00011613900000000121}, {'diff': 0.000116139000000001...</msg>
<status status="PASS" starttime="20201029 18:18:32.839" endtime="20201029 18:18:32.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.847" level="INFO">${ACCURACY} = {'diff': [0.00011633299999999971, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011615300000000078...</msg>
<status status="PASS" starttime="20201029 18:18:32.844" endtime="20201029 18:18:32.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.852" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.851" endtime="20201029 18:18:32.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.854" level="INFO">VALUE: [0.00011633299999999971, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011615300000000078, 0.00011619400000000002, 0.00011615200000000131, 0.00011615300000000078, 0.00011616599999999741, 0.00011606999999999937, 0.00011611199999999808, 0.00011613800000000174, 0.00011618000000000045, 0.00011620799999999959, 0.00011615200000000131, 0.00011616700000000035, 0.00011622200000000263, 0.00011615300000000078, 0.00011613900000000121, 0.00011619499999999949, 0.00011612500000000164, 0.00011615300000000078, 0.00011615199999999784, 0.00011613900000000121, 0.00011615300000000078, 0.00011613800000000174, 0.00011608399999999894, 0.00011613900000000121, 0.00011613900000000121, 0.00011612500000000164, 0.00011616600000000088, 0.00011615200000000131, 0.00011613900000000121, 0.0001161109999999986, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011612500000000164, 0.00011616700000000035, 0.00011613899999999774, 0.00011615300000000078, 0.00011612499999999817, 0.00011613899999999774, 0.00011612500000000164, 0.00011615300000000078, 0.00011612500000000164]</msg>
<status status="PASS" starttime="20201029 18:18:32.853" endtime="20201029 18:18:32.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.848" endtime="20201029 18:18:32.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.859" endtime="20201029 18:18:32.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.858" endtime="20201029 18:18:32.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.857" endtime="20201029 18:18:32.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.498" endtime="20201029 18:18:32.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.498" endtime="20201029 18:18:32.880"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.889" endtime="20201029 18:18:32.908"></status>
</kw>
<msg timestamp="20201029 18:18:32.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.887" endtime="20201029 18:18:32.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.910" endtime="20201029 18:18:32.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.912" endtime="20201029 18:18:32.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.885" endtime="20201029 18:18:32.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.883" endtime="20201029 18:18:32.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.921" endtime="20201029 18:18:33.208"></status>
</kw>
<msg timestamp="20201029 18:18:33.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.919" endtime="20201029 18:18:33.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.212" endtime="20201029 18:18:33.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.220" endtime="20201029 18:18:33.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.917" endtime="20201029 18:18:33.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.915" endtime="20201029 18:18:33.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.226" level="INFO">${RESULT} = [{'diff': 0.00011631900000000014}, {'diff': 0.00011612500000000164}, {'diff': 0.00011613899999999774}, {'diff': 0.00011611199999999808}, {'diff': 0.00011613900000000121}, {'diff': 0.000116195000000002...</msg>
<status status="PASS" starttime="20201029 18:18:33.223" endtime="20201029 18:18:33.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.230" level="INFO">${ACCURACY} = {'diff': [0.00011631900000000014, 0.00011612500000000164, 0.00011613899999999774, 0.00011611199999999808, 0.00011613900000000121, 0.00011619500000000296, 0.00011616600000000088, 0.0001161109999999986,...</msg>
<status status="PASS" starttime="20201029 18:18:33.228" endtime="20201029 18:18:33.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.235" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.234" endtime="20201029 18:18:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.237" level="INFO">VALUE: [0.00011631900000000014, 0.00011612500000000164, 0.00011613899999999774, 0.00011611199999999808, 0.00011613900000000121, 0.00011619500000000296, 0.00011616600000000088, 0.0001161109999999986, 0.00011613900000000121, 0.00011612500000000164, 0.00011613900000000121, 0.0001161109999999986, 0.00011612500000000164, 0.00011612500000000164, 0.0001161109999999986, 0.00011611100000000207, 0.00011612500000000164, 0.00011611100000000207, 0.00011615300000000078, 0.00011613899999999774, 0.00011615299999999731, 0.00011615299999999731, 0.00011616700000000035, 0.00011612499999999817, 0.00011613800000000174, 0.00011620899999999906, 0.00011615299999999731, 0.0001161109999999986, 0.00011615300000000078, 0.00011617999999999698, 0.00011616700000000035, 0.00011612500000000164, 0.00011612500000000164, 0.0001160689999999999, 0.00011619400000000002, 0.00011613900000000121, 0.00011615300000000078, 0.00011618000000000045, 0.00011620800000000306, 0.00011613800000000174, 0.00011618099999999992, 0.00011612500000000164, 0.00011612499999999817, 0.00011615200000000131, 0.00011613900000000121, 0.00011613899999999774, 0.00011613799999999827, 0.00011612500000000164, 0.00011620799999999959, 0.00011612500000000164]</msg>
<status status="PASS" starttime="20201029 18:18:33.236" endtime="20201029 18:18:33.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.231" endtime="20201029 18:18:33.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.242" endtime="20201029 18:18:33.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.241" endtime="20201029 18:18:33.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.240" endtime="20201029 18:18:33.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.881" endtime="20201029 18:18:33.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.880" endtime="20201029 18:18:33.263"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.272" endtime="20201029 18:18:33.292"></status>
</kw>
<msg timestamp="20201029 18:18:33.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.270" endtime="20201029 18:18:33.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.293" endtime="20201029 18:18:33.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.296" endtime="20201029 18:18:33.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.268" endtime="20201029 18:18:33.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.265" endtime="20201029 18:18:33.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.305" endtime="20201029 18:18:33.591"></status>
</kw>
<msg timestamp="20201029 18:18:33.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.303" endtime="20201029 18:18:33.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.595" endtime="20201029 18:18:33.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.603" endtime="20201029 18:18:33.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.301" endtime="20201029 18:18:33.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.299" endtime="20201029 18:18:33.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.609" level="INFO">${RESULT} = [{'diff': 0.00011629200000000048}, {'diff': 0.00011612500000000164}, {'diff': 0.00011611100000000207}, {'diff': 0.00011613900000000121}, {'diff': 0.00011615299999999731}, {'diff': 0.000116068999999999...</msg>
<status status="PASS" starttime="20201029 18:18:33.606" endtime="20201029 18:18:33.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.613" level="INFO">${ACCURACY} = {'diff': [0.00011629200000000048, 0.00011612500000000164, 0.00011611100000000207, 0.00011613900000000121, 0.00011615299999999731, 0.0001160689999999999, 0.0001161109999999986, 0.00011612499999999817, ...</msg>
<status status="PASS" starttime="20201029 18:18:33.610" endtime="20201029 18:18:33.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.618" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.617" endtime="20201029 18:18:33.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.620" level="INFO">VALUE: [0.00011629200000000048, 0.00011612500000000164, 0.00011611100000000207, 0.00011613900000000121, 0.00011615299999999731, 0.0001160689999999999, 0.0001161109999999986, 0.00011612499999999817, 0.00011612500000000164, 0.00011612499999999817, 0.00011616700000000035, 0.00011606999999999937, 0.0001161109999999986, 0.00011618099999999992, 0.00011611100000000207, 0.00011611100000000207, 0.00011613900000000121, 0.00011612499999999817, 0.00011612500000000164, 0.00011613900000000121, 0.00011613900000000121, 0.00011613899999999774, 0.00011609699999999903, 0.00011616700000000035, 0.00011612500000000164, 0.0001160689999999999, 0.00011616700000000035, 0.00011612499999999817, 0.00011615200000000131, 0.00011613800000000174, 0.00011615300000000078, 0.0001161109999999986, 0.00011616700000000035, 0.00011616700000000035, 0.00011615300000000078, 0.00011613899999999774, 0.00011616700000000035, 0.00011612499999999817, 0.00011613899999999774, 0.00011613900000000121, 0.00011613900000000121, 0.00011612500000000164, 0.00011615300000000078, 0.0001161109999999986, 0.00011613900000000121, 0.00011613899999999774, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011612500000000164]</msg>
<status status="PASS" starttime="20201029 18:18:33.619" endtime="20201029 18:18:33.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.614" endtime="20201029 18:18:33.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.626" endtime="20201029 18:18:33.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.624" endtime="20201029 18:18:33.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.623" endtime="20201029 18:18:33.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.264" endtime="20201029 18:18:33.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.263" endtime="20201029 18:18:33.646"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.655" endtime="20201029 18:18:33.674"></status>
</kw>
<msg timestamp="20201029 18:18:33.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.653" endtime="20201029 18:18:33.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.676" endtime="20201029 18:18:33.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.678" endtime="20201029 18:18:33.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.651" endtime="20201029 18:18:33.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.649" endtime="20201029 18:18:33.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.687" endtime="20201029 18:18:33.972"></status>
</kw>
<msg timestamp="20201029 18:18:33.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.685" endtime="20201029 18:18:33.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.976" endtime="20201029 18:18:33.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.985" endtime="20201029 18:18:33.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.683" endtime="20201029 18:18:33.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.681" endtime="20201029 18:18:33.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.991" level="INFO">${RESULT} = [{'diff': 0.00011631900000000014}, {'diff': 0.00011612499999999817}, {'diff': 0.00011612499999999817}, {'diff': 0.00011612499999999817}, {'diff': 0.0001161109999999986}, {'diff': 0.0001162079999999995...</msg>
<status status="PASS" starttime="20201029 18:18:33.988" endtime="20201029 18:18:33.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.996" level="INFO">${ACCURACY} = {'diff': [0.00011631900000000014, 0.00011612499999999817, 0.00011612499999999817, 0.00011612499999999817, 0.0001161109999999986, 0.00011620799999999959, 0.00011613900000000121, 0.00011616600000000088,...</msg>
<status status="PASS" starttime="20201029 18:18:33.992" endtime="20201029 18:18:33.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.000" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.999" endtime="20201029 18:18:34.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.003" level="INFO">VALUE: [0.00011631900000000014, 0.00011612499999999817, 0.00011612499999999817, 0.00011612499999999817, 0.0001161109999999986, 0.00011620799999999959, 0.00011613900000000121, 0.00011616600000000088, 0.00011612499999999817, 0.00011613900000000121, 0.00011613900000000121, 0.0001160689999999999, 0.00011613899999999774, 0.00011613900000000121, 0.00011613899999999774, 0.00011613900000000121, 0.00011613900000000121, 0.00011612500000000164, 0.00011613799999999827, 0.00011613800000000174, 0.00011613900000000121, 0.00011615199999999784, 0.00011620799999999959, 0.00011612500000000164, 0.00011616700000000035, 0.00011615300000000078, 0.0001161109999999986, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011620799999999959, 0.00011612500000000164, 0.00011613800000000174, 0.0001160559999999998, 0.0001161109999999986, 0.00011613900000000121, 0.00011613900000000121, 0.00011612500000000164, 0.00011611100000000207, 0.00011618099999999992, 0.00011613899999999774, 0.00011616700000000035, 0.00011608399999999894, 0.00011613900000000121, 0.00011612499999999817, 0.00011612500000000164, 0.00011612500000000164, 0.00011612500000000164, 0.00011613899999999774, 0.0001161109999999986]</msg>
<status status="PASS" starttime="20201029 18:18:34.002" endtime="20201029 18:18:34.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.997" endtime="20201029 18:18:34.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.008" endtime="20201029 18:18:34.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.006" endtime="20201029 18:18:34.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.005" endtime="20201029 18:18:34.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.647" endtime="20201029 18:18:34.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.647" endtime="20201029 18:18:34.029"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.037" endtime="20201029 18:18:34.056"></status>
</kw>
<msg timestamp="20201029 18:18:34.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.036" endtime="20201029 18:18:34.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.058" endtime="20201029 18:18:34.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.060" endtime="20201029 18:18:34.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.033" endtime="20201029 18:18:34.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.031" endtime="20201029 18:18:34.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.069" endtime="20201029 18:18:34.356"></status>
</kw>
<msg timestamp="20201029 18:18:34.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.068" endtime="20201029 18:18:34.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.360" endtime="20201029 18:18:34.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.368" endtime="20201029 18:18:34.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.065" endtime="20201029 18:18:34.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.064" endtime="20201029 18:18:34.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.375" level="INFO">${RESULT} = [{'diff': 0.00011632000000000309}, {'diff': 0.00011612500000000164}, {'diff': 0.00011613900000000121}, {'diff': 0.00011618000000000045}, {'diff': 0.00011613900000000121}, {'diff': 0.000116194999999999...</msg>
<status status="PASS" starttime="20201029 18:18:34.372" endtime="20201029 18:18:34.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:34.379" level="INFO">${ACCURACY} = {'diff': [0.00011632000000000309, 0.00011612500000000164, 0.00011613900000000121, 0.00011618000000000045, 0.00011613900000000121, 0.00011619499999999949, 0.00011613900000000121, 0.00011612500000000164...</msg>
<status status="PASS" starttime="20201029 18:18:34.376" endtime="20201029 18:18:34.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.383" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:18:34.382" endtime="20201029 18:18:34.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.385" level="INFO">VALUE: [0.00011632000000000309, 0.00011612500000000164, 0.00011613900000000121, 0.00011618000000000045, 0.00011613900000000121, 0.00011619499999999949, 0.00011613900000000121, 0.00011612500000000164, 0.00011615300000000078, 0.00011615299999999731, 0.00011613900000000121, 0.00011608299999999946, 0.00011613900000000121, 0.00011612499999999817, 0.0001161109999999986, 0.0001160689999999999, 0.00011613800000000174, 0.00011611100000000207, 0.00011615300000000078, 0.00011612500000000164, 0.00011612500000000164, 0.00011612500000000164, 0.00011613899999999774, 0.00011613900000000121, 0.00011620900000000253, 0.00011613900000000121, 0.0001161109999999986, 0.00011613900000000121, 0.00011612500000000164, 0.00011612500000000164, 0.00011612500000000164, 0.00011613900000000121, 0.00011609699999999903, 0.00011609799999999851, 0.00011620799999999959, 0.00011619400000000002, 0.00011612500000000164, 0.00011618099999999992, 0.00011618099999999992, 0.00011615300000000078, 0.00011612499999999817, 0.00011611100000000207, 0.0001161109999999986, 0.00011619400000000002, 0.00011612499999999817, 0.00011613899999999774, 0.00011616700000000035, 0.00011615199999999784, 0.00011612499999999817, 0.00011611100000000207]</msg>
<status status="PASS" starttime="20201029 18:18:34.384" endtime="20201029 18:18:34.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.380" endtime="20201029 18:18:34.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.390" endtime="20201029 18:18:34.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.389" endtime="20201029 18:18:34.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.388" endtime="20201029 18:18:34.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.030" endtime="20201029 18:18:34.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.029" endtime="20201029 18:18:34.411"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.420" endtime="20201029 18:18:34.440"></status>
</kw>
<msg timestamp="20201029 18:18:34.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.418" endtime="20201029 18:18:34.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.441" endtime="20201029 18:18:34.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.444" endtime="20201029 18:18:34.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.416" endtime="20201029 18:18:34.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.414" endtime="20201029 18:18:34.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.453" endtime="20201029 18:18:34.738"></status>
</kw>
<msg timestamp="20201029 18:18:34.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.451" endtime="20201029 18:18:34.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.742" endtime="20201029 18:18:34.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.751" endtime="20201029 18:18:34.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.449" endtime="20201029 18:18:34.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.447" endtime="20201029 18:18:34.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.757" level="INFO">${RESULT} = [{'diff': 0.00011633299999999971}, {'diff': 0.00011616700000000035}, {'diff': 0.00011613899999999774}, {'diff': 0.00011613899999999774}, {'diff': 0.00011613799999999827}, {'diff': 0.000116151999999997...</msg>
<status status="PASS" starttime="20201029 18:18:34.754" endtime="20201029 18:18:34.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:34.761" level="INFO">${ACCURACY} = {'diff': [0.00011633299999999971, 0.00011616700000000035, 0.00011613899999999774, 0.00011613899999999774, 0.00011613799999999827, 0.00011615199999999784, 0.00011613900000000121, 0.00011613800000000174...</msg>
<status status="PASS" starttime="20201029 18:18:34.758" endtime="20201029 18:18:34.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.765" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:18:34.764" endtime="20201029 18:18:34.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.769" level="INFO">VALUE: [0.00011633299999999971, 0.00011616700000000035, 0.00011613899999999774, 0.00011613899999999774, 0.00011613799999999827, 0.00011615199999999784, 0.00011613900000000121, 0.00011613800000000174, 0.00011615299999999731, 0.00011613899999999774, 0.00011615200000000131, 0.00011619400000000002, 0.00011623599999999873, 0.00011620799999999959, 0.00011613900000000121, 0.00011609699999999903, 0.00011612500000000164, 0.00011615200000000131, 0.00011613900000000121, 0.00011615300000000078, 0.00011615300000000078, 0.00011613800000000174, 0.00011613899999999774, 0.00011615300000000078, 0.00011612499999999817, 0.00011620899999999906, 0.00011615300000000078, 0.00011616599999999741, 0.00011615300000000078, 0.00011617999999999698, 0.00011618000000000045, 0.00011613900000000121, 0.00011615300000000078, 0.00011615300000000078, 0.00011613900000000121, 0.00011609699999999903, 0.00011613799999999827, 0.00011615300000000078, 0.00011616600000000088, 0.00011616600000000088, 0.00011615300000000078, 0.00011612500000000164, 0.00011620799999999959, 0.00011622199999999916, 0.00011615300000000078, 0.00011613900000000121, 0.00011613800000000174, 0.00011615199999999784, 0.00011606999999999937, 0.00011613899999999774]</msg>
<status status="PASS" starttime="20201029 18:18:34.766" endtime="20201029 18:18:34.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.762" endtime="20201029 18:18:34.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.774" endtime="20201029 18:18:34.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.772" endtime="20201029 18:18:34.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.771" endtime="20201029 18:18:34.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.412" endtime="20201029 18:18:34.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.412" endtime="20201029 18:18:34.794"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.803" endtime="20201029 18:18:34.822"></status>
</kw>
<msg timestamp="20201029 18:18:34.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.801" endtime="20201029 18:18:34.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.823" endtime="20201029 18:18:34.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.826" endtime="20201029 18:18:34.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.799" endtime="20201029 18:18:34.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.797" endtime="20201029 18:18:34.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.835" endtime="20201029 18:18:35.121"></status>
</kw>
<msg timestamp="20201029 18:18:35.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.833" endtime="20201029 18:18:35.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.125" endtime="20201029 18:18:35.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.133" endtime="20201029 18:18:35.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.831" endtime="20201029 18:18:35.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.829" endtime="20201029 18:18:35.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.140" level="INFO">${RESULT} = [{'diff': 0.00011631999999999962}, {'diff': 0.00011613899999999774}, {'diff': 0.00011613799999999827}, {'diff': 0.00011616699999999688}, {'diff': 0.00011616700000000035}, {'diff': 0.000116167000000000...</msg>
<status status="PASS" starttime="20201029 18:18:35.136" endtime="20201029 18:18:35.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.144" level="INFO">${ACCURACY} = {'diff': [0.00011631999999999962, 0.00011613899999999774, 0.00011613799999999827, 0.00011616699999999688, 0.00011616700000000035, 0.00011616700000000035, 0.00011615300000000078, 0.00011615199999999784...</msg>
<status status="PASS" starttime="20201029 18:18:35.141" endtime="20201029 18:18:35.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.149" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.148" endtime="20201029 18:18:35.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.151" level="INFO">VALUE: [0.00011631999999999962, 0.00011613899999999774, 0.00011613799999999827, 0.00011616699999999688, 0.00011616700000000035, 0.00011616700000000035, 0.00011615300000000078, 0.00011615199999999784, 0.00011615300000000078, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011616599999999741, 0.00011613900000000121, 0.00011615200000000131, 0.00011615300000000078, 0.00011620799999999959, 0.00011612499999999817, 0.0001160689999999999, 0.00011612500000000164, 0.00011615299999999731, 0.00011615300000000078, 0.00011615300000000078, 0.00011612500000000164, 0.00011615299999999731, 0.00011615200000000131, 0.00011616700000000035, 0.00011616599999999741, 0.00011616700000000035, 0.00011613800000000174, 0.00011613899999999774, 0.00011620900000000253, 0.00011609699999999903, 0.00011615300000000078, 0.00011613899999999774, 0.00011615300000000078, 0.00011615300000000078, 0.00011615300000000078, 0.00011613900000000121, 0.00011613900000000121, 0.00011612499999999817, 0.00011612500000000164, 0.00011613899999999774, 0.00011612500000000164, 0.00011616600000000088, 0.0001160689999999999, 0.00011615300000000078, 0.00011609699999999903, 0.00011615300000000078, 0.00011613900000000121]</msg>
<status status="PASS" starttime="20201029 18:18:35.150" endtime="20201029 18:18:35.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.145" endtime="20201029 18:18:35.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.160" endtime="20201029 18:18:35.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.159" endtime="20201029 18:18:35.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.158" endtime="20201029 18:18:35.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.795" endtime="20201029 18:18:35.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.795" endtime="20201029 18:18:35.181"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.190" endtime="20201029 18:18:35.209"></status>
</kw>
<msg timestamp="20201029 18:18:35.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.188" endtime="20201029 18:18:35.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.210" endtime="20201029 18:18:35.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.213" endtime="20201029 18:18:35.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.185" endtime="20201029 18:18:35.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.183" endtime="20201029 18:18:35.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.222" endtime="20201029 18:18:35.512"></status>
</kw>
<msg timestamp="20201029 18:18:35.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.220" endtime="20201029 18:18:35.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.516" endtime="20201029 18:18:35.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.524" endtime="20201029 18:18:35.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.218" endtime="20201029 18:18:35.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.216" endtime="20201029 18:18:35.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.531" level="INFO">${RESULT} = [{'diff': 0.00011629200000000048}, {'diff': 0.00011615199999999784}, {'diff': 0.00011619400000000002}, {'diff': 0.00011613899999999774}, {'diff': 0.00011613900000000121}, {'diff': 0.000116153000000000...</msg>
<status status="PASS" starttime="20201029 18:18:35.527" endtime="20201029 18:18:35.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.534" level="INFO">${ACCURACY} = {'diff': [0.00011629200000000048, 0.00011615199999999784, 0.00011619400000000002, 0.00011613899999999774, 0.00011613900000000121, 0.00011615300000000078, 0.00011615299999999731, 0.00011613899999999774...</msg>
<status status="PASS" starttime="20201029 18:18:35.532" endtime="20201029 18:18:35.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.539" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.538" endtime="20201029 18:18:35.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.541" level="INFO">VALUE: [0.00011629200000000048, 0.00011615199999999784, 0.00011619400000000002, 0.00011613899999999774, 0.00011613900000000121, 0.00011615300000000078, 0.00011615299999999731, 0.00011613899999999774, 0.00011616700000000035, 0.0001161109999999986, 0.00011620799999999959, 0.00011615300000000078, 0.00011618000000000045, 0.00011613899999999774, 0.00011612500000000164, 0.00011613900000000121, 0.00011613900000000121, 0.00011615199999999784, 0.00011616700000000035, 0.00011613899999999774, 0.00011613899999999774, 0.00011619499999999949, 0.00011616699999999688, 0.00011612499999999817, 0.00011618000000000045, 0.00011615299999999731, 0.00011615200000000131, 0.00011615300000000078, 0.00011613900000000121, 0.00011612500000000164, 0.00011615299999999731, 0.00011613900000000121, 0.00011617999999999698, 0.00011620900000000253, 0.00011616600000000088, 0.00011613899999999774, 0.00011616700000000035, 0.00011616700000000035, 0.00011613799999999827, 0.00011613899999999774, 0.00011613899999999774, 0.00011613900000000121, 0.00011615200000000131, 0.00011616700000000035, 0.00011613900000000121, 0.00011608299999999946, 0.00011615299999999731, 0.00011615199999999784, 0.00011615300000000078, 0.00011613900000000121]</msg>
<status status="PASS" starttime="20201029 18:18:35.540" endtime="20201029 18:18:35.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.535" endtime="20201029 18:18:35.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.546" endtime="20201029 18:18:35.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.545" endtime="20201029 18:18:35.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.544" endtime="20201029 18:18:35.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.182" endtime="20201029 18:18:35.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.181" endtime="20201029 18:18:35.567"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.576" endtime="20201029 18:18:35.596"></status>
</kw>
<msg timestamp="20201029 18:18:35.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.574" endtime="20201029 18:18:35.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.597" endtime="20201029 18:18:35.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.600" endtime="20201029 18:18:35.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.572" endtime="20201029 18:18:35.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.570" endtime="20201029 18:18:35.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.609" endtime="20201029 18:18:35.894"></status>
</kw>
<msg timestamp="20201029 18:18:35.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.607" endtime="20201029 18:18:35.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.898" endtime="20201029 18:18:35.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.906" endtime="20201029 18:18:35.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.605" endtime="20201029 18:18:35.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.603" endtime="20201029 18:18:35.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.913" level="INFO">${RESULT} = [{'diff': 0.00011631900000000014}, {'diff': 0.00011729200000000148}, {'diff': 0.00011612500000000164}, {'diff': 0.0001160689999999999}, {'diff': 0.00011612499999999817}, {'diff': 0.0001161110000000020...</msg>
<status status="PASS" starttime="20201029 18:18:35.910" endtime="20201029 18:18:35.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.917" level="INFO">${ACCURACY} = {'diff': [0.00011631900000000014, 0.00011729200000000148, 0.00011612500000000164, 0.0001160689999999999, 0.00011612499999999817, 0.00011611100000000207, 0.00011612500000000164, 0.00011613900000000121,...</msg>
<status status="PASS" starttime="20201029 18:18:35.914" endtime="20201029 18:18:35.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.921" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.920" endtime="20201029 18:18:35.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.924" level="INFO">VALUE: [0.00011631900000000014, 0.00011729200000000148, 0.00011612500000000164, 0.0001160689999999999, 0.00011612499999999817, 0.00011611100000000207, 0.00011612500000000164, 0.00011613900000000121, 0.00011613900000000121, 0.00011727799999999844, 0.00011737499999999942, 0.00011762499999999967, 0.0001177499999999998, 0.00011756899999999793, 0.00011609799999999851, 0.00011613900000000121, 0.00011615300000000078, 0.00011625000000000177, 0.00011736099999999985, 0.00011768099999999795, 0.00011613799999999827, 0.00011755500000000182, 0.00011612500000000164, 0.00011734700000000028, 0.00011733299999999725, 0.00011749999999999955, 0.00011726400000000234, 0.0001175560000000013, 0.0001176110000000001, 0.00011737499999999942, 0.00011620799999999959, 0.00011613899999999774, 0.00011613900000000121, 0.00011623700000000167, 0.00011629200000000048, 0.00011627800000000091, 0.00011709700000000003, 0.00011613899999999774, 0.00011731899999999768, 0.00011719499999999702, 0.00011749999999999955, 0.00011744400000000127, 0.00011626400000000134, 0.00011615300000000078, 0.00011731900000000114, 0.00011738800000000299, 0.00011613899999999774, 0.0001172499999999993, 0.00011757000000000087, 0.0001162230000000021]</msg>
<status status="PASS" starttime="20201029 18:18:35.922" endtime="20201029 18:18:35.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.918" endtime="20201029 18:18:35.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.929" endtime="20201029 18:18:35.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.928" endtime="20201029 18:18:35.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.927" endtime="20201029 18:18:35.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.568" endtime="20201029 18:18:35.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.567" endtime="20201029 18:18:35.950"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.959" endtime="20201029 18:18:35.978"></status>
</kw>
<msg timestamp="20201029 18:18:35.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.957" endtime="20201029 18:18:35.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.979" endtime="20201029 18:18:35.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.982" endtime="20201029 18:18:35.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.955" endtime="20201029 18:18:35.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.953" endtime="20201029 18:18:35.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.991" endtime="20201029 18:18:36.277"></status>
</kw>
<msg timestamp="20201029 18:18:36.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.990" endtime="20201029 18:18:36.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.281" endtime="20201029 18:18:36.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.289" endtime="20201029 18:18:36.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.987" endtime="20201029 18:18:36.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.985" endtime="20201029 18:18:36.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.295" level="INFO">${RESULT} = [{'diff': 0.00011870800000000209}, {'diff': 0.00011802799999999919}, {'diff': 0.00011850000000000055}, {'diff': 0.00011826399999999987}, {'diff': 0.00011783300000000121}, {'diff': 0.000118707999999998...</msg>
<status status="PASS" starttime="20201029 18:18:36.292" endtime="20201029 18:18:36.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:36.300" level="INFO">${ACCURACY} = {'diff': [0.00011870800000000209, 0.00011802799999999919, 0.00011850000000000055, 0.00011826399999999987, 0.00011783300000000121, 0.00011870799999999862, 0.00011837500000000042, 0.00011802799999999919...</msg>
<status status="PASS" starttime="20201029 18:18:36.296" endtime="20201029 18:18:36.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.305" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:18:36.304" endtime="20201029 18:18:36.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.307" level="INFO">VALUE: [0.00011870800000000209, 0.00011802799999999919, 0.00011850000000000055, 0.00011826399999999987, 0.00011783300000000121, 0.00011870799999999862, 0.00011837500000000042, 0.00011802799999999919, 0.0001186249999999972, 0.00011831899999999868, 0.00011795900000000081, 0.00011819400000000202, 0.00011795800000000134, 0.00011837500000000042, 0.00011876400000000037, 0.00011827799999999944, 0.00011795799999999787, 0.00011790299999999906, 0.00011837500000000042, 0.00011851400000000012, 0.0001186110000000011, 0.00011855500000000282, 0.00011873600000000123, 0.00011847200000000141, 0.00011831899999999868, 0.00011827799999999944, 0.00011790299999999906, 0.00011840299999999956, 0.00011847200000000141, 0.00011829200000000248, 0.00011782000000000112, 0.00011797199999999744, 0.00011840299999999956, 0.00011801399999999962, 0.0001185829999999985, 0.00011820800000000159, 0.00011836100000000085, 0.0001185699999999984, 0.0001178889999999995, 0.00011779099999999904, 0.00011769499999999752, 0.00011812500000000017, 0.0001181950000000015, 0.00011870799999999862, 0.00011784700000000078, 0.00011877799999999994, 0.00011815299999999931, 0.00011781900000000164, 0.00011832000000000162, 0.00011818100000000192]</msg>
<status status="PASS" starttime="20201029 18:18:36.306" endtime="20201029 18:18:36.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.301" endtime="20201029 18:18:36.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.312" endtime="20201029 18:18:36.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.311" endtime="20201029 18:18:36.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.309" endtime="20201029 18:18:36.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.951" endtime="20201029 18:18:36.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.950" endtime="20201029 18:18:36.333"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.341" endtime="20201029 18:18:36.361"></status>
</kw>
<msg timestamp="20201029 18:18:36.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.340" endtime="20201029 18:18:36.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.362" endtime="20201029 18:18:36.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.365" endtime="20201029 18:18:36.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.337" endtime="20201029 18:18:36.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.335" endtime="20201029 18:18:36.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.373" endtime="20201029 18:18:36.660"></status>
</kw>
<msg timestamp="20201029 18:18:36.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.372" endtime="20201029 18:18:36.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.664" endtime="20201029 18:18:36.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.672" endtime="20201029 18:18:36.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.369" endtime="20201029 18:18:36.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.368" endtime="20201029 18:18:36.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.679" level="INFO">${RESULT} = [{'diff': 0.0001192500000000013}, {'diff': 0.00011900000000000105}, {'diff': 0.00011884700000000178}, {'diff': 0.00011923599999999826}, {'diff': 0.00011966699999999691}, {'diff': 0.0001189870000000009...</msg>
<status status="PASS" starttime="20201029 18:18:36.676" endtime="20201029 18:18:36.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:36.683" level="INFO">${ACCURACY} = {'diff': [0.0001192500000000013, 0.00011900000000000105, 0.00011884700000000178, 0.00011923599999999826, 0.00011966699999999691, 0.00011898700000000095, 0.00011917999999999998, 0.0001194309999999997, ...</msg>
<status status="PASS" starttime="20201029 18:18:36.680" endtime="20201029 18:18:36.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.687" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:18:36.686" endtime="20201029 18:18:36.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.690" level="INFO">VALUE: [0.0001192500000000013, 0.00011900000000000105, 0.00011884700000000178, 0.00011923599999999826, 0.00011966699999999691, 0.00011898700000000095, 0.00011917999999999998, 0.0001194309999999997, 0.0001196249999999982, 0.00011952800000000069, 0.00011901400000000062, 0.00011898600000000148, 0.00011884699999999832, 0.00011955599999999983, 0.0001191249999999977, 0.00011891699999999963, 0.00011900000000000105, 0.00011907000000000237, 0.00011877700000000047, 0.0001194309999999997, 0.00011886100000000135, 0.00011955599999999983, 0.00011887499999999745, 0.00011898699999999748, 0.0001193050000000001, 0.00011895800000000234, 0.00011937499999999795, 0.0001196249999999982, 0.0001193050000000001, 0.00011929100000000054, 0.00011947199999999894, 0.00011956899999999993, 0.00011937500000000142, 0.00011919499999999902, 0.00011926400000000087, 0.000119082999999999, 0.00011962500000000167, 0.00011929200000000001, 0.00011926400000000087, 0.00011951400000000112, 0.00011890200000000059, 0.00011954200000000026, 0.0001191379999999978, 0.00011919399999999955, 0.00011895800000000234, 0.00011956899999999993, 0.00011919400000000302, 0.00011920799999999912, 0.00011974999999999833, 0.00011894499999999877]</msg>
<status status="PASS" starttime="20201029 18:18:36.688" endtime="20201029 18:18:36.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.684" endtime="20201029 18:18:36.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.695" endtime="20201029 18:18:36.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.693" endtime="20201029 18:18:36.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.692" endtime="20201029 18:18:36.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.334" endtime="20201029 18:18:36.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.333" endtime="20201029 18:18:36.715"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.724" endtime="20201029 18:18:36.744"></status>
</kw>
<msg timestamp="20201029 18:18:36.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.722" endtime="20201029 18:18:36.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.746" endtime="20201029 18:18:36.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.748" endtime="20201029 18:18:36.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.720" endtime="20201029 18:18:36.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.718" endtime="20201029 18:18:36.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.757" endtime="20201029 18:18:37.042"></status>
</kw>
<msg timestamp="20201029 18:18:37.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.755" endtime="20201029 18:18:37.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.046" endtime="20201029 18:18:37.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.054" endtime="20201029 18:18:37.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.753" endtime="20201029 18:18:37.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.751" endtime="20201029 18:18:37.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.061" level="INFO">${RESULT} = [{'diff': 0.00012044399999999733}, {'diff': 0.00012024999999999883}, {'diff': 0.00012047199999999994}, {'diff': 0.00012018099999999698}, {'diff': 0.00011998600000000248}, {'diff': 0.000119875000000001...</msg>
<status status="PASS" starttime="20201029 18:18:37.058" endtime="20201029 18:18:37.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.065" level="INFO">${ACCURACY} = {'diff': [0.00012044399999999733, 0.00012024999999999883, 0.00012047199999999994, 0.00012018099999999698, 0.00011998600000000248, 0.00011987500000000192, 0.00012048599999999951, 0.00012011200000000208...</msg>
<status status="PASS" starttime="20201029 18:18:37.062" endtime="20201029 18:18:37.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.069" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.068" endtime="20201029 18:18:37.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.072" level="INFO">VALUE: [0.00012044399999999733, 0.00012024999999999883, 0.00012047199999999994, 0.00012018099999999698, 0.00011998600000000248, 0.00011987500000000192, 0.00012048599999999951, 0.00012011200000000208, 0.00011986100000000235, 0.00012030599999999711, 0.00012036099999999939, 0.0001202639999999984, 0.00012031900000000068, 0.00011991700000000063, 0.00012049999999999908, 0.00011987500000000192, 0.00012004199999999729, 0.00012043000000000123, 0.0001204310000000007, 0.00011995799999999987, 0.00012036099999999939, 0.00012036099999999939, 0.0001199310000000002, 0.00012018100000000045, 0.00011968099999999995, 0.00012023599999999926, 0.00012048599999999951, 0.00012049999999999908, 0.00012012500000000217, 0.00012047199999999994, 0.00012055600000000083, 0.00012069400000000105, 0.00011977800000000094, 0.0001198890000000015, 0.00012066699999999791, 0.00012024999999999883, 0.00011998599999999901, 0.00011969400000000005, 0.0001205700000000004, 0.00012015200000000184, 0.00012068000000000148, 0.00012032000000000015, 0.00012065300000000181, 0.00012073600000000323, 0.0001201249999999987, 0.00012031900000000068, 0.00011977800000000094, 0.00011990300000000106, 0.00012040300000000156, 0.0001206249999999992]</msg>
<status status="PASS" starttime="20201029 18:18:37.070" endtime="20201029 18:18:37.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.066" endtime="20201029 18:18:37.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.078" endtime="20201029 18:18:37.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.076" endtime="20201029 18:18:37.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.075" endtime="20201029 18:18:37.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.716" endtime="20201029 18:18:37.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.716" endtime="20201029 18:18:37.098"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.107" endtime="20201029 18:18:37.126"></status>
</kw>
<msg timestamp="20201029 18:18:37.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.105" endtime="20201029 18:18:37.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.128" endtime="20201029 18:18:37.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.130" endtime="20201029 18:18:37.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.103" endtime="20201029 18:18:37.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.101" endtime="20201029 18:18:37.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.139" endtime="20201029 18:18:37.425"></status>
</kw>
<msg timestamp="20201029 18:18:37.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.138" endtime="20201029 18:18:37.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.429" endtime="20201029 18:18:37.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.437" endtime="20201029 18:18:37.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.135" endtime="20201029 18:18:37.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.133" endtime="20201029 18:18:37.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.443" level="INFO">${RESULT} = [{'diff': 0.00012180499999999914}, {'diff': 0.00012102799999999872}, {'diff': 0.00012066699999999791}, {'diff': 0.00012111199999999961}, {'diff': 0.00012111100000000014}, {'diff': 0.000121236000000000...</msg>
<status status="PASS" starttime="20201029 18:18:37.440" endtime="20201029 18:18:37.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.448" level="INFO">${ACCURACY} = {'diff': [0.00012180499999999914, 0.00012102799999999872, 0.00012066699999999791, 0.00012111199999999961, 0.00012111100000000014, 0.00012123600000000026, 0.00012123600000000026, 0.00012069500000000052...</msg>
<status status="PASS" starttime="20201029 18:18:37.444" endtime="20201029 18:18:37.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.453" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.452" endtime="20201029 18:18:37.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.455" level="INFO">VALUE: [0.00012180499999999914, 0.00012102799999999872, 0.00012066699999999791, 0.00012111199999999961, 0.00012111100000000014, 0.00012123600000000026, 0.00012123600000000026, 0.00012069500000000052, 0.00012091699999999816, 0.00012086099999999989, 0.00012161100000000064, 0.00012147200000000094, 0.00012116700000000188, 0.00012156899999999846, 0.00012136100000000039, 0.00012136100000000039, 0.00012122200000000069, 0.00012147199999999747, 0.00012098600000000001, 0.00012165199999999987, 0.00012147300000000041, 0.00012065299999999834, 0.00012070800000000062, 0.0001211249999999997, 0.00012152799999999922, 0.00012129099999999907, 0.00012079199999999804, 0.00012109700000000057, 0.00012142999999999876, 0.00012123599999999679, 0.00012154199999999879, 0.00012080599999999761, 0.00012081999999999718, 0.0001216250000000002, 0.00012115299999999884, 0.00012143099999999823, 0.00012124999999999983, 0.00012161100000000064, 0.0001213050000000021, 0.00012156899999999846, 0.00012165199999999987, 0.00012134800000000029, 0.00012101399999999915, 0.00012120800000000112, 0.00012083300000000075, 0.0001214310000000017, 0.00012145900000000084, 0.00012072200000000019, 0.00012118099999999798, 0.00012104100000000229]</msg>
<status status="PASS" starttime="20201029 18:18:37.454" endtime="20201029 18:18:37.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.449" endtime="20201029 18:18:37.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.460" endtime="20201029 18:18:37.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.459" endtime="20201029 18:18:37.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.457" endtime="20201029 18:18:37.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.099" endtime="20201029 18:18:37.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.099" endtime="20201029 18:18:37.481"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.489" endtime="20201029 18:18:37.509"></status>
</kw>
<msg timestamp="20201029 18:18:37.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.488" endtime="20201029 18:18:37.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.510" endtime="20201029 18:18:37.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.513" endtime="20201029 18:18:37.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.485" endtime="20201029 18:18:37.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.483" endtime="20201029 18:18:37.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.522" endtime="20201029 18:18:37.811"></status>
</kw>
<msg timestamp="20201029 18:18:37.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.520" endtime="20201029 18:18:37.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.815" endtime="20201029 18:18:37.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.823" endtime="20201029 18:18:37.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.518" endtime="20201029 18:18:37.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.516" endtime="20201029 18:18:37.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.830" level="INFO">${RESULT} = [{'diff': 0.0001226250000000012}, {'diff': 0.0001224030000000001}, {'diff': 0.00012201400000000015}, {'diff': 0.0001221250000000007}, {'diff': 0.0001226250000000012}, {'diff': 0.00012243099999999923},...</msg>
<status status="PASS" starttime="20201029 18:18:37.826" endtime="20201029 18:18:37.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.834" level="INFO">${ACCURACY} = {'diff': [0.0001226250000000012, 0.0001224030000000001, 0.00012201400000000015, 0.0001221250000000007, 0.0001226250000000012, 0.00012243099999999923, 0.00012212499999999724, 0.00012256899999999946, 0....</msg>
<status status="PASS" starttime="20201029 18:18:37.831" endtime="20201029 18:18:37.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.838" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.837" endtime="20201029 18:18:37.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.840" level="INFO">VALUE: [0.0001226250000000012, 0.0001224030000000001, 0.00012201400000000015, 0.0001221250000000007, 0.0001226250000000012, 0.00012243099999999923, 0.00012212499999999724, 0.00012256899999999946, 0.00012186099999999742, 0.00012204199999999929, 0.00012263900000000078, 0.0001222220000000017, 0.00012211099999999767, 0.00012223600000000126, 0.00012193099999999873, 0.00012248599999999804, 0.00012262499999999774, 0.00012247200000000194, 0.00012180600000000208, 0.0001224860000000015, 0.00012216699999999941, 0.00012179199999999904, 0.00012244399999999933, 0.00012223600000000126, 0.00012180499999999914, 0.00012204199999999929, 0.00012223600000000126, 0.00012187500000000046, 0.00012219399999999908, 0.00012202799999999972, 0.00012194399999999883, 0.00012175000000000033, 0.00012233400000000172, 0.00012170800000000162, 0.00012231900000000268, 0.0001223059999999991, 0.0001224310000000027, 0.00012230499999999964, 0.00012176299999999696, 0.00012236099999999792, 0.00012219499999999855, 0.00012188800000000055, 0.00012248699999999751, 0.00012186100000000089, 0.00012225000000000083, 0.00012194399999999883, 0.00012256999999999893, 0.00012169399999999858, 0.0001224160000000002, 0.00012237500000000096]</msg>
<status status="PASS" starttime="20201029 18:18:37.839" endtime="20201029 18:18:37.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.834" endtime="20201029 18:18:37.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.845" endtime="20201029 18:18:37.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.844" endtime="20201029 18:18:37.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.843" endtime="20201029 18:18:37.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.482" endtime="20201029 18:18:37.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.481" endtime="20201029 18:18:37.866"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.874" endtime="20201029 18:18:37.895"></status>
</kw>
<msg timestamp="20201029 18:18:37.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.873" endtime="20201029 18:18:37.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.896" endtime="20201029 18:18:37.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.899" endtime="20201029 18:18:37.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.870" endtime="20201029 18:18:37.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.868" endtime="20201029 18:18:37.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.908" endtime="20201029 18:18:38.195"></status>
</kw>
<msg timestamp="20201029 18:18:38.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.906" endtime="20201029 18:18:38.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.199" endtime="20201029 18:18:38.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.207" endtime="20201029 18:18:38.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.903" endtime="20201029 18:18:38.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.902" endtime="20201029 18:18:38.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.213" level="INFO">${RESULT} = [{'diff': 0.00012350000000000208}, {'diff': 0.00012298599999999854}, {'diff': 0.00012302700000000125}, {'diff': 0.00012268099999999948}, {'diff': 0.0001234030000000011}, {'diff': 0.0001231670000000004...</msg>
<status status="PASS" starttime="20201029 18:18:38.210" endtime="20201029 18:18:38.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:38.218" level="INFO">${ACCURACY} = {'diff': [0.00012350000000000208, 0.00012298599999999854, 0.00012302700000000125, 0.00012268099999999948, 0.0001234030000000011, 0.00012316700000000042, 0.00012304100000000082, 0.00012329200000000054,...</msg>
<status status="PASS" starttime="20201029 18:18:38.214" endtime="20201029 18:18:38.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.227" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:18:38.225" endtime="20201029 18:18:38.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.233" level="INFO">VALUE: [0.00012350000000000208, 0.00012298599999999854, 0.00012302700000000125, 0.00012268099999999948, 0.0001234030000000011, 0.00012316700000000042, 0.00012304100000000082, 0.00012329200000000054, 0.00012327800000000097, 0.00012352799999999775, 0.00012290200000000112, 0.00012270799999999915, 0.00012316700000000042, 0.00012316700000000042, 0.0001231800000000005, 0.00012268099999999948, 0.00012329100000000107, 0.00012354199999999732, 0.00012268, 0.00012361099999999917, 0.00012280500000000014, 0.0001228189999999997, 0.0001235559999999969, 0.00012355499999999742, 0.00012305500000000039, 0.00012287500000000146, 0.00012354099999999785, 0.00012343100000000023, 0.0001231800000000005, 0.00012337499999999849, 0.0001228059999999996, 0.00012300000000000158, 0.00012298599999999854, 0.00012355500000000089, 0.00012341700000000067, 0.00012291700000000017, 0.00012354100000000132, 0.0001229030000000006, 0.00012315299999999738, 0.00012358300000000003, 0.00012311099999999867, 0.00012322199999999922, 0.00012361099999999917, 0.00012352799999999775, 0.00012305599999999986, 0.000122986000000002, 0.0001234999999999986, 0.00012323700000000173, 0.00012316599999999747, 0.00012316699999999695]</msg>
<status status="PASS" starttime="20201029 18:18:38.229" endtime="20201029 18:18:38.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.219" endtime="20201029 18:18:38.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.243" endtime="20201029 18:18:38.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.240" endtime="20201029 18:18:38.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.238" endtime="20201029 18:18:38.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.867" endtime="20201029 18:18:38.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.866" endtime="20201029 18:18:38.268"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.286" endtime="20201029 18:18:38.309"></status>
</kw>
<msg timestamp="20201029 18:18:38.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.283" endtime="20201029 18:18:38.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.313" endtime="20201029 18:18:38.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.319" endtime="20201029 18:18:38.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.277" endtime="20201029 18:18:38.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.273" endtime="20201029 18:18:38.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.328" endtime="20201029 18:18:38.614"></status>
</kw>
<msg timestamp="20201029 18:18:38.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035419278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035543861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.326" endtime="20201029 18:18:38.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035419278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035543861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.618" endtime="20201029 18:18:38.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.626" endtime="20201029 18:18:38.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.324" endtime="20201029 18:18:38.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.322" endtime="20201029 18:18:38.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.633" level="INFO">${RESULT} = [{'diff': 0.0001245830000000045}, {'diff': 0.00012398599999999954}, {'diff': 0.00012444400000000133}, {'diff': 0.00012447200000000047}, {'diff': 0.0001240559999999974}, {'diff': 0.00012391700000000117...</msg>
<status status="PASS" starttime="20201029 18:18:38.629" endtime="20201029 18:18:38.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:38.637" level="INFO">${ACCURACY} = {'diff': [0.0001245830000000045, 0.00012398599999999954, 0.00012444400000000133, 0.00012447200000000047, 0.0001240559999999974, 0.00012391700000000117, 0.00012386099999999595, 0.00012384699999999638, ...</msg>
<status status="PASS" starttime="20201029 18:18:38.634" endtime="20201029 18:18:38.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.642" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:18:38.641" endtime="20201029 18:18:38.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.644" level="INFO">VALUE: [0.0001245830000000045, 0.00012398599999999954, 0.00012444400000000133, 0.00012447200000000047, 0.0001240559999999974, 0.00012391700000000117, 0.00012386099999999595, 0.00012384699999999638, 0.00012436199999999592, 0.00012436100000000339, 0.00012376299999999896, 0.00012434699999999688, 0.00012381900000000418, 0.00012393000000000126, 0.00012452699999999928, 0.00012387500000000246, 0.00012461100000000364, 0.00012433300000000425, 0.00012466700000000192, 0.00012391700000000117, 0.00012365300000000135, 0.00012386100000000289, 0.0001239580000000004, 0.00012398599999999954, 0.00012404099999999835, 0.00012405600000000433, 0.0001242370000000062, 0.00012386100000000289, 0.00012397199999999997, 0.0001244160000000022, 0.00012405600000000433, 0.00012401399999999868, 0.00012411100000000314, 0.00012409700000000357, 0.00012438899999999559, 0.00012387499999999552, 0.00012393100000000074, 0.00012394400000000083, 0.00012380600000000408, 0.00012436099999999645, 0.0001236250000000022, 0.00012408400000000347, 0.00012424999999999936, 0.00012420800000000065, 0.00012401400000000562, 0.00012434699999999688, 0.00012381900000000418, 0.00012393000000000126, 0.00012430600000000458, 0.00012429199999999807]</msg>
<status status="PASS" starttime="20201029 18:18:38.643" endtime="20201029 18:18:38.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.638" endtime="20201029 18:18:38.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.649" endtime="20201029 18:18:38.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.648" endtime="20201029 18:18:38.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.647" endtime="20201029 18:18:38.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.270" endtime="20201029 18:18:38.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.269" endtime="20201029 18:18:38.670"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.679" endtime="20201029 18:18:38.698"></status>
</kw>
<msg timestamp="20201029 18:18:38.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.677" endtime="20201029 18:18:38.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.700" endtime="20201029 18:18:38.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.702" endtime="20201029 18:18:38.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.675" endtime="20201029 18:18:38.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.673" endtime="20201029 18:18:38.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.711" endtime="20201029 18:18:38.999"></status>
</kw>
<msg timestamp="20201029 18:18:39.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.710" endtime="20201029 18:18:39.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.004" endtime="20201029 18:18:39.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.012" endtime="20201029 18:18:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.707" endtime="20201029 18:18:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.705" endtime="20201029 18:18:39.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.018" level="INFO">${RESULT} = [{'diff': 0.00012484700000000085}, {'diff': 0.0001250420000000023}, {'diff': 0.00012493099999999827}, {'diff': 0.00012551400000000018}, {'diff': 0.00012498599999999707}, {'diff': 0.0001247909999999991...</msg>
<status status="PASS" starttime="20201029 18:18:39.015" endtime="20201029 18:18:39.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.022" level="INFO">${ACCURACY} = {'diff': [0.00012484700000000085, 0.0001250420000000023, 0.00012493099999999827, 0.00012551400000000018, 0.00012498599999999707, 0.0001247909999999991, 0.00012523599999999732, 0.00012480499999999867, ...</msg>
<status status="PASS" starttime="20201029 18:18:39.019" endtime="20201029 18:18:39.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.027" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.026" endtime="20201029 18:18:39.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.029" level="INFO">VALUE: [0.00012484700000000085, 0.0001250420000000023, 0.00012493099999999827, 0.00012551400000000018, 0.00012498599999999707, 0.0001247909999999991, 0.00012523599999999732, 0.00012480499999999867, 0.00012487499999999999, 0.00012562500000000074, 0.00012519500000000156, 0.00012547200000000147, 0.0001255559999999989, 0.0001254299999999993, 0.00012538900000000006, 0.00012504099999999935, 0.00012498599999999707, 0.0001252360000000008, 0.00012537500000000049, 0.0001254450000000018, 0.00012519400000000208, 0.0001256520000000004, 0.00012547200000000147, 0.00012534699999999788, 0.0001252360000000008, 0.00012543100000000224, 0.00012561100000000117, 0.00012474999999999986, 0.00012505600000000186, 0.00012507000000000143, 0.0001250559999999984, 0.00012480499999999867, 0.00012511100000000067, 0.00012476399999999943, 0.0001250970000000011, 0.00012504199999999882, 0.00012558300000000203, 0.00012537500000000049, 0.0001254589999999979, 0.00012520799999999818, 0.00012491700000000217, 0.00012483300000000128, 0.00012474999999999986, 0.00012568099999999902, 0.00012486100000000042, 0.00012525000000000036, 0.00012501399999999968, 0.0001247360000000003, 0.00012486100000000042, 0.00012504099999999935]</msg>
<status status="PASS" starttime="20201029 18:18:39.028" endtime="20201029 18:18:39.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.023" endtime="20201029 18:18:39.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.035" endtime="20201029 18:18:39.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.033" endtime="20201029 18:18:39.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.032" endtime="20201029 18:18:39.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.671" endtime="20201029 18:18:39.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.670" endtime="20201029 18:18:39.056"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.064" endtime="20201029 18:18:39.085"></status>
</kw>
<msg timestamp="20201029 18:18:39.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.063" endtime="20201029 18:18:39.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.086" endtime="20201029 18:18:39.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.089" endtime="20201029 18:18:39.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.060" endtime="20201029 18:18:39.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.058" endtime="20201029 18:18:39.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.098" endtime="20201029 18:18:39.383"></status>
</kw>
<msg timestamp="20201029 18:18:39.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.096" endtime="20201029 18:18:39.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.387" endtime="20201029 18:18:39.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.396" endtime="20201029 18:18:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.094" endtime="20201029 18:18:39.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.092" endtime="20201029 18:18:39.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.402" level="INFO">${RESULT} = [{'diff': 0.00012605499999999992}, {'diff': 0.00012634699999999888}, {'diff': 0.00012602800000000025}, {'diff': 0.00012602800000000025}, {'diff': 0.00012584800000000132}, {'diff': 0.000126347000000002...</msg>
<status status="PASS" starttime="20201029 18:18:39.399" endtime="20201029 18:18:39.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.406" level="INFO">${ACCURACY} = {'diff': [0.00012605499999999992, 0.00012634699999999888, 0.00012602800000000025, 0.00012602800000000025, 0.00012584800000000132, 0.00012634700000000235, 0.0001261520000000009, 0.000126471999999999, 0...</msg>
<status status="PASS" starttime="20201029 18:18:39.403" endtime="20201029 18:18:39.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.410" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.409" endtime="20201029 18:18:39.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.413" level="INFO">VALUE: [0.00012605499999999992, 0.00012634699999999888, 0.00012602800000000025, 0.00012602800000000025, 0.00012584800000000132, 0.00012634700000000235, 0.0001261520000000009, 0.000126471999999999, 0.00012637499999999802, 0.00012609699999999863, 0.00012654200000000032, 0.00012618000000000004, 0.00012601400000000068, 0.00012609699999999863, 0.00012629200000000007, 0.0001267499999999984, 0.00012586100000000142, 0.00012612500000000124, 0.00012634699999999888, 0.00012602800000000025, 0.0001264300000000003, 0.00012648599999999857, 0.0001259299999999998, 0.00012601400000000068, 0.00012572200000000172, 0.0001259719999999985, 0.0001261109999999982, 0.00012580599999999914, 0.00012602700000000078, 0.00012648600000000204, 0.00012623700000000126, 0.0001260000000000011, 0.00012612500000000124, 0.00012658299999999956, 0.00012638900000000106, 0.00012586100000000142, 0.00012572200000000172, 0.00012656999999999946, 0.00012640300000000063, 0.00012647200000000247, 0.00012576400000000043, 0.00012566699999999945, 0.00012626400000000093, 0.00012626400000000093, 0.000126084000000002, 0.0001261390000000008, 0.00012586100000000142, 0.00012648600000000204, 0.00012643099999999977, 0.000126471999999999]</msg>
<status status="PASS" starttime="20201029 18:18:39.412" endtime="20201029 18:18:39.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.407" endtime="20201029 18:18:39.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.419" endtime="20201029 18:18:39.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.417" endtime="20201029 18:18:39.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.416" endtime="20201029 18:18:39.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.057" endtime="20201029 18:18:39.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.056" endtime="20201029 18:18:39.439"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.448" endtime="20201029 18:18:39.468"></status>
</kw>
<msg timestamp="20201029 18:18:39.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.446" endtime="20201029 18:18:39.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.469" endtime="20201029 18:18:39.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.472" endtime="20201029 18:18:39.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.444" endtime="20201029 18:18:39.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.442" endtime="20201029 18:18:39.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.481" endtime="20201029 18:18:39.765"></status>
</kw>
<msg timestamp="20201029 18:18:39.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.479" endtime="20201029 18:18:39.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.770" endtime="20201029 18:18:39.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.778" endtime="20201029 18:18:39.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.476" endtime="20201029 18:18:39.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.475" endtime="20201029 18:18:39.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.784" level="INFO">${RESULT} = [{'diff': 0.0001275560000000009}, {'diff': 0.0001271529999999979}, {'diff': 0.00012683400000000275}, {'diff': 0.0001275269999999988}, {'diff': 0.00012722299999999923}, {'diff': 0.00012669499999999959}...</msg>
<status status="PASS" starttime="20201029 18:18:39.781" endtime="20201029 18:18:39.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.789" level="INFO">${ACCURACY} = {'diff': [0.0001275560000000009, 0.0001271529999999979, 0.00012683400000000275, 0.0001275269999999988, 0.00012722299999999923, 0.00012669499999999959, 0.000126778000000001, 0.0001270000000000021, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:39.785" endtime="20201029 18:18:39.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.794" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.793" endtime="20201029 18:18:39.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.796" level="INFO">VALUE: [0.0001275560000000009, 0.0001271529999999979, 0.00012683400000000275, 0.0001275269999999988, 0.00012722299999999923, 0.00012669499999999959, 0.000126778000000001, 0.0001270000000000021, 0.00012702800000000125, 0.00012737499999999902, 0.00012747299999999948, 0.00012683399999999928, 0.00012691599999999775, 0.00012748599999999957, 0.00012704200000000082, 0.00012704100000000135, 0.00012697200000000297, 0.000126778000000001, 0.0001268329999999998, 0.0001271940000000006, 0.00012719399999999714, 0.00012741600000000172, 0.00012749999999999914, 0.00012758300000000056, 0.000126778000000001, 0.00012690300000000113, 0.0001266940000000001, 0.0001274300000000013, 0.0001268879999999986, 0.00012676399999999796, 0.00012741599999999825, 0.00012762499999999927, 0.00012695799999999993, 0.00012743100000000077, 0.00012691599999999775, 0.00012670799999999968, 0.00012751400000000218, 0.00012740300000000163, 0.0001268879999999986, 0.00012708300000000006, 0.00012676400000000143, 0.00012679200000000057, 0.0001269170000000007, 0.00012752800000000175, 0.0001272369999999988, 0.00012718100000000052, 0.00012741599999999825, 0.0001272499999999989, 0.0001271529999999979, 0.0001276109999999997]</msg>
<status status="PASS" starttime="20201029 18:18:39.795" endtime="20201029 18:18:39.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.790" endtime="20201029 18:18:39.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.801" endtime="20201029 18:18:39.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.800" endtime="20201029 18:18:39.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.798" endtime="20201029 18:18:39.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.440" endtime="20201029 18:18:39.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.440" endtime="20201029 18:18:39.822"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.830" endtime="20201029 18:18:39.850"></status>
</kw>
<msg timestamp="20201029 18:18:39.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.829" endtime="20201029 18:18:39.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.851" endtime="20201029 18:18:39.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.854" endtime="20201029 18:18:39.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.826" endtime="20201029 18:18:39.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.824" endtime="20201029 18:18:39.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.863" endtime="20201029 18:18:40.150"></status>
</kw>
<msg timestamp="20201029 18:18:40.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.861" endtime="20201029 18:18:40.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.154" endtime="20201029 18:18:40.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.162" endtime="20201029 18:18:40.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.859" endtime="20201029 18:18:40.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.857" endtime="20201029 18:18:40.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.168" level="INFO">${RESULT} = [{'diff': 0.0001280269999999993}, {'diff': 0.0001279720000000005}, {'diff': 0.000128165999999999}, {'diff': 0.0001280560000000014}, {'diff': 0.00012816699999999848}, {'diff': 0.0001277369999999993}, {...</msg>
<status status="PASS" starttime="20201029 18:18:40.165" endtime="20201029 18:18:40.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.172" level="INFO">${ACCURACY} = {'diff': [0.0001280269999999993, 0.0001279720000000005, 0.000128165999999999, 0.0001280560000000014, 0.00012816699999999848, 0.0001277369999999993, 0.00012772200000000025, 0.000128472000000001, 0.0001...</msg>
<status status="PASS" starttime="20201029 18:18:40.169" endtime="20201029 18:18:40.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.177" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.176" endtime="20201029 18:18:40.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.179" level="INFO">VALUE: [0.0001280269999999993, 0.0001279720000000005, 0.000128165999999999, 0.0001280560000000014, 0.00012816699999999848, 0.0001277369999999993, 0.00012772200000000025, 0.000128472000000001, 0.00012812499999999977, 0.0001277919999999981, 0.0001276940000000011, 0.00012766699999999798, 0.0001283469999999974, 0.00012873600000000082, 0.0001280690000000015, 0.0001283469999999974, 0.00012766699999999798, 0.00012826399999999946, 0.00012777799999999853, 0.00012772299999999973, 0.00012804200000000182, 0.0001281529999999989, 0.00012834700000000088, 0.0001281529999999989, 0.00012840299999999916, 0.00012834800000000035, 0.00012795800000000093, 0.00012813899999999934, 0.00012820800000000118, 0.00012781900000000124, 0.00012858400000000103, 0.00012854200000000232, 0.0001281940000000016, 0.00012852799999999928, 0.00012770800000000068, 0.00012852799999999928, 0.0001280269999999993, 0.00012784700000000038, 0.00012795800000000093, 0.00012859699999999766, 0.00012854199999999885, 0.0001286529999999994, 0.0001280269999999993, 0.00012833400000000078, 0.00012795799999999746, 0.00012823600000000032, 0.00012815199999999943, 0.00012844499999999787, 0.00012827799999999903, 0.00012773599999999982]</msg>
<status status="PASS" starttime="20201029 18:18:40.178" endtime="20201029 18:18:40.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.173" endtime="20201029 18:18:40.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.189" endtime="20201029 18:18:40.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.188" endtime="20201029 18:18:40.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.186" endtime="20201029 18:18:40.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.823" endtime="20201029 18:18:40.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.822" endtime="20201029 18:18:40.210"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.219" endtime="20201029 18:18:40.239"></status>
</kw>
<msg timestamp="20201029 18:18:40.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.217" endtime="20201029 18:18:40.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.241" endtime="20201029 18:18:40.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.243" endtime="20201029 18:18:40.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.214" endtime="20201029 18:18:40.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.212" endtime="20201029 18:18:40.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.252" endtime="20201029 18:18:40.539"></status>
</kw>
<msg timestamp="20201029 18:18:40.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02281475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:40.251" endtime="20201029 18:18:40.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02281475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:40.543" endtime="20201029 18:18:40.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.551" endtime="20201029 18:18:40.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.248" endtime="20201029 18:18:40.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.246" endtime="20201029 18:18:40.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.558" level="INFO">${RESULT} = [{'diff': 0.00012937500000000102}, {'diff': 0.000129263000000001}, {'diff': 0.00012891699999999923}, {'diff': 0.00012933299999999884}, {'diff': 0.0001288339999999978}, {'diff': 0.00012895800000000193}...</msg>
<status status="PASS" starttime="20201029 18:18:40.555" endtime="20201029 18:18:40.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.562" level="INFO">${ACCURACY} = {'diff': [0.00012937500000000102, 0.000129263000000001, 0.00012891699999999923, 0.00012933299999999884, 0.0001288339999999978, 0.00012895800000000193, 0.00012933299999999884, 0.00012941600000000025, 0...</msg>
<status status="PASS" starttime="20201029 18:18:40.559" endtime="20201029 18:18:40.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.566" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.565" endtime="20201029 18:18:40.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.569" level="INFO">VALUE: [0.00012937500000000102, 0.000129263000000001, 0.00012891699999999923, 0.00012933299999999884, 0.0001288339999999978, 0.00012895800000000193, 0.00012933299999999884, 0.00012941600000000025, 0.0001290829999999986, 0.00012904200000000282, 0.0001290980000000011, 0.00012862500000000027, 0.00012941600000000025, 0.0001295140000000007, 0.00012959699999999866, 0.00012963900000000084, 0.00012898600000000107, 0.0001288200000000017, 0.00012922200000000175, 0.00012913900000000034, 0.00012872199999999778, 0.00012890300000000313, 0.00012947199999999853, 0.00012909700000000163, 0.00012961099999999823, 0.00012922199999999828, 0.00012894499999999837, 0.00012908400000000153, 0.00012873600000000082, 0.0001287079999999982, 0.00012902799999999978, 0.0001286659999999995, 0.00012886100000000095, 0.00012948600000000157, 0.0001295270000000008, 0.00012955599999999942, 0.00012900000000000064, 0.0001292919999999996, 0.0001295140000000007, 0.00012933400000000178, 0.00012927700000000056, 0.00012947199999999853, 0.00012902799999999978, 0.0001287919999999991, 0.0001295980000000016, 0.00012865300000000288, 0.00012942999999999982, 0.00012879099999999963, 0.0001292079999999987, 0.00012945800000000243]</msg>
<status status="PASS" starttime="20201029 18:18:40.567" endtime="20201029 18:18:40.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.563" endtime="20201029 18:18:40.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.574" endtime="20201029 18:18:40.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.573" endtime="20201029 18:18:40.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.572" endtime="20201029 18:18:40.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.211" endtime="20201029 18:18:40.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.210" endtime="20201029 18:18:40.595"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.604" endtime="20201029 18:18:40.626"></status>
</kw>
<msg timestamp="20201029 18:18:40.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.602" endtime="20201029 18:18:40.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.628" endtime="20201029 18:18:40.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.631" endtime="20201029 18:18:40.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.600" endtime="20201029 18:18:40.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.598" endtime="20201029 18:18:40.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.648" endtime="20201029 18:18:40.936"></status>
</kw>
<msg timestamp="20201029 18:18:40.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.646" endtime="20201029 18:18:40.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.940" endtime="20201029 18:18:40.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.948" endtime="20201029 18:18:40.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.643" endtime="20201029 18:18:40.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.638" endtime="20201029 18:18:40.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.955" level="INFO">${RESULT} = [{'diff': 0.0001305140000000017}, {'diff': 0.00012977700000000106}, {'diff': 0.00012990300000000066}, {'diff': 0.0001303469999999994}, {'diff': 0.00013057}, {'diff': 0.0001301799999999971}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:18:40.951" endtime="20201029 18:18:40.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.959" level="INFO">${ACCURACY} = {'diff': [0.0001305140000000017, 0.00012977700000000106, 0.00012990300000000066, 0.0001303469999999994, 0.00013057, 0.0001301799999999971, 0.00013059700000000313, 0.0001305140000000017, 0.000130542000...</msg>
<status status="PASS" starttime="20201029 18:18:40.956" endtime="20201029 18:18:40.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.964" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.963" endtime="20201029 18:18:40.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.967" level="INFO">VALUE: [0.0001305140000000017, 0.00012977700000000106, 0.00012990300000000066, 0.0001303469999999994, 0.00013057, 0.0001301799999999971, 0.00013059700000000313, 0.0001305140000000017, 0.00013054200000000085, 0.0001305270000000018, 0.00012966699999999998, 0.0001305830000000001, 0.0001297920000000001, 0.00012963900000000084, 0.00013005599999999992, 0.0001304029999999977, 0.00013005599999999992, 0.00013033299999999984, 0.00013066700000000098, 0.00013055600000000042, 0.00012981999999999924, 0.0001296530000000004, 0.00012997199999999903, 0.0001297500000000014, 0.0001303050000000007, 0.00013038899999999812, 0.00013023600000000232, 0.00012972299999999826, 0.0001305830000000001, 0.00012997199999999903, 0.00013054100000000138, 0.00013013899999999787, 0.0001298890000000011, 0.000130166999999997, 0.00012983299999999934, 0.00013027799999999756, 0.0001301110000000022, 0.00013050000000000214, 0.0001305830000000001, 0.0001299859999999986, 0.00013004100000000088, 0.0001298469999999989, 0.00013034799999999888, 0.00013016700000000048, 0.00013013899999999787, 0.00012981899999999977, 0.0001297920000000001, 0.00012983299999999934, 0.00012977800000000053, 0.00013051399999999824]</msg>
<status status="PASS" starttime="20201029 18:18:40.965" endtime="20201029 18:18:40.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.960" endtime="20201029 18:18:40.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.972" endtime="20201029 18:18:40.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.970" endtime="20201029 18:18:40.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.969" endtime="20201029 18:18:40.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.596" endtime="20201029 18:18:40.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.595" endtime="20201029 18:18:40.993"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.002" endtime="20201029 18:18:41.022"></status>
</kw>
<msg timestamp="20201029 18:18:41.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.000" endtime="20201029 18:18:41.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.023" endtime="20201029 18:18:41.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.026" endtime="20201029 18:18:41.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.997" endtime="20201029 18:18:41.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.995" endtime="20201029 18:18:41.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.037" endtime="20201029 18:18:41.325"></status>
</kw>
<msg timestamp="20201029 18:18:41.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.035" endtime="20201029 18:18:41.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.330" endtime="20201029 18:18:41.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.338" endtime="20201029 18:18:41.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.032" endtime="20201029 18:18:41.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.030" endtime="20201029 18:18:41.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.344" level="INFO">${RESULT} = [{'diff': 0.00013154200000000185}, {'diff': 0.00013086099999999948}, {'diff': 0.00013072299999999926}, {'diff': 0.00013094500000000037}, {'diff': 0.00013113899999999887}, {'diff': 0.000130875000000002...</msg>
<status status="PASS" starttime="20201029 18:18:41.341" endtime="20201029 18:18:41.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.348" level="INFO">${ACCURACY} = {'diff': [0.00013154200000000185, 0.00013086099999999948, 0.00013072299999999926, 0.00013094500000000037, 0.00013113899999999887, 0.00013087500000000252, 0.00013145900000000044, 0.00013149999999999967...</msg>
<status status="PASS" starttime="20201029 18:18:41.345" endtime="20201029 18:18:41.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.353" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.352" endtime="20201029 18:18:41.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.355" level="INFO">VALUE: [0.00013154200000000185, 0.00013086099999999948, 0.00013072299999999926, 0.00013094500000000037, 0.00013113899999999887, 0.00013087500000000252, 0.00013145900000000044, 0.00013149999999999967, 0.00013140199999999921, 0.00013113899999999887, 0.00013082000000000024, 0.00013088899999999862, 0.0001310700000000005, 0.0001308469999999999, 0.00013065199999999846, 0.00013158400000000056, 0.00013132000000000074, 0.00013113899999999887, 0.00013087500000000252, 0.0001307080000000002, 0.00013124999999999942, 0.00013066700000000098, 0.00013094500000000037, 0.0001306379999999989, 0.00013077800000000153, 0.0001315279999999988, 0.00013069500000000012, 0.00013092999999999785, 0.00013143000000000182, 0.000131473, 0.00013133300000000084, 0.0001311530000000019, 0.00013115199999999896, 0.00013090199999999871, 0.0001308469999999999, 0.00013158299999999762, 0.00013151399999999924, 0.00013084799999999938, 0.00013163899999999937, 0.00013126299999999952, 0.00013163899999999937, 0.0001311249999999993, 0.0001306530000000014, 0.00013111099999999973, 0.00013122200000000028, 0.00013122200000000028, 0.00013130600000000117, 0.0001315279999999988, 0.00013108400000000006, 0.0001315279999999988]</msg>
<status status="PASS" starttime="20201029 18:18:41.354" endtime="20201029 18:18:41.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.349" endtime="20201029 18:18:41.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.360" endtime="20201029 18:18:41.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.359" endtime="20201029 18:18:41.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.357" endtime="20201029 18:18:41.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.994" endtime="20201029 18:18:41.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.993" endtime="20201029 18:18:41.381"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.389" endtime="20201029 18:18:41.410"></status>
</kw>
<msg timestamp="20201029 18:18:41.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.388" endtime="20201029 18:18:41.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.412" endtime="20201029 18:18:41.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.414" endtime="20201029 18:18:41.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.385" endtime="20201029 18:18:41.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.383" endtime="20201029 18:18:41.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.423" endtime="20201029 18:18:41.709"></status>
</kw>
<msg timestamp="20201029 18:18:41.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.421" endtime="20201029 18:18:41.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.713" endtime="20201029 18:18:41.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.721" endtime="20201029 18:18:41.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.419" endtime="20201029 18:18:41.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.417" endtime="20201029 18:18:41.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.727" level="INFO">${RESULT} = [{'diff': 0.00013219500000000162}, {'diff': 0.00013243099999999883}, {'diff': 0.00013177800000000253}, {'diff': 0.00013247200000000153}, {'diff': 0.00013177800000000253}, {'diff': 0.000132458999999997...</msg>
<status status="PASS" starttime="20201029 18:18:41.724" endtime="20201029 18:18:41.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.731" level="INFO">${ACCURACY} = {'diff': [0.00013219500000000162, 0.00013243099999999883, 0.00013177800000000253, 0.00013247200000000153, 0.00013177800000000253, 0.00013245899999999797, 0.00013170799999999774, 0.00013211100000000073...</msg>
<status status="PASS" starttime="20201029 18:18:41.728" endtime="20201029 18:18:41.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.736" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.735" endtime="20201029 18:18:41.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.739" level="INFO">VALUE: [0.00013219500000000162, 0.00013243099999999883, 0.00013177800000000253, 0.00013247200000000153, 0.00013177800000000253, 0.00013245899999999797, 0.00013170799999999774, 0.00013211100000000073, 0.00013220799999999824, 0.0001324029999999997, 0.00013215299999999944, 0.00013208299999999812, 0.00013165299999999894, 0.00013238900000000012, 0.0001318470000000009, 0.00013247200000000153, 0.00013213899999999987, 0.00013194500000000137, 0.00013182000000000124, 0.00013238900000000012, 0.00013213899999999987, 0.00013208400000000106, 0.00013174999999999992, 0.00013173600000000035, 0.00013245800000000196, 0.00013156999999999752, 0.00013197200000000103, 0.00013191599999999928, 0.0001324029999999997, 0.00013172200000000078, 0.00013241599999999978, 0.0001318470000000009, 0.00013163899999999937, 0.0001321250000000003, 0.00013172300000000026, 0.00013251400000000024, 0.00013163899999999937, 0.00013206900000000202, 0.00013169400000000164, 0.00013233299999999837, 0.00013245800000000196, 0.00013259700000000166, 0.00013244500000000187, 0.00013194500000000137, 0.0001322219999999978, 0.00013268000000000307, 0.00013181900000000177, 0.00013245899999999797, 0.00013213899999999987, 0.00013200000000000017]</msg>
<status status="PASS" starttime="20201029 18:18:41.737" endtime="20201029 18:18:41.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.732" endtime="20201029 18:18:41.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.744" endtime="20201029 18:18:41.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.743" endtime="20201029 18:18:41.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.741" endtime="20201029 18:18:41.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.382" endtime="20201029 18:18:41.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.381" endtime="20201029 18:18:41.765"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.773" endtime="20201029 18:18:41.793"></status>
</kw>
<msg timestamp="20201029 18:18:41.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.772" endtime="20201029 18:18:41.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.795" endtime="20201029 18:18:41.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.797" endtime="20201029 18:18:41.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.769" endtime="20201029 18:18:41.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.767" endtime="20201029 18:18:41.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.806" endtime="20201029 18:18:42.093"></status>
</kw>
<msg timestamp="20201029 18:18:42.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:41.805" endtime="20201029 18:18:42.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:42.097" endtime="20201029 18:18:42.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.105" endtime="20201029 18:18:42.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.802" endtime="20201029 18:18:42.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.801" endtime="20201029 18:18:42.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.112" level="INFO">${RESULT} = [{'diff': 0.00013333299999999937}, {'diff': 0.00013312499999999783}, {'diff': 0.00013266700000000298}, {'diff': 0.0001330969999999987}, {'diff': 0.0001331380000000014}, {'diff': 0.000132957999999999},...</msg>
<status status="PASS" starttime="20201029 18:18:42.109" endtime="20201029 18:18:42.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.117" level="INFO">${ACCURACY} = {'diff': [0.00013333299999999937, 0.00013312499999999783, 0.00013266700000000298, 0.0001330969999999987, 0.0001331380000000014, 0.000132957999999999, 0.0001330280000000003, 0.0001334030000000007, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:42.113" endtime="20201029 18:18:42.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.121" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.120" endtime="20201029 18:18:42.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.124" level="INFO">VALUE: [0.00013333299999999937, 0.00013312499999999783, 0.00013266700000000298, 0.0001330969999999987, 0.0001331380000000014, 0.000132957999999999, 0.0001330280000000003, 0.0001334030000000007, 0.0001327640000000005, 0.00013336100000000198, 0.00013266700000000298, 0.00013333299999999937, 0.00013308299999999912, 0.00013291699999999976, 0.0001335280000000008, 0.00013276299999999755, 0.00013270899999999822, 0.0001330410000000004, 0.0001335410000000009, 0.00013295899999999847, 0.00013265299999999994, 0.00013293000000000332, 0.00013363900000000137, 0.0001333470000000024, 0.0001329030000000002, 0.00013306899999999955, 0.00013263900000000037, 0.00013301400000000074, 0.00013270899999999822, 0.0001328189999999993, 0.00013351400000000124, 0.00013320899999999872, 0.0001330839999999986, 0.00013290200000000071, 0.00013348599999999863, 0.00013283299999999887, 0.00013358299999999962, 0.00013281999999999877, 0.00013340200000000121, 0.000133167, 0.0001329030000000002, 0.00013263900000000037, 0.00013319500000000262, 0.00013270799999999874, 0.00013287500000000105, 0.00013333299999999937, 0.0001327640000000005, 0.0001327770000000006, 0.00013359800000000213, 0.00013300000000000117]</msg>
<status status="PASS" starttime="20201029 18:18:42.122" endtime="20201029 18:18:42.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.118" endtime="20201029 18:18:42.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.129" endtime="20201029 18:18:42.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.127" endtime="20201029 18:18:42.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.126" endtime="20201029 18:18:42.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.766" endtime="20201029 18:18:42.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.765" endtime="20201029 18:18:42.149"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.158" endtime="20201029 18:18:42.178"></status>
</kw>
<msg timestamp="20201029 18:18:42.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.156" endtime="20201029 18:18:42.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.179" endtime="20201029 18:18:42.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.182" endtime="20201029 18:18:42.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.154" endtime="20201029 18:18:42.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.152" endtime="20201029 18:18:42.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.191" endtime="20201029 18:18:42.480"></status>
</kw>
<msg timestamp="20201029 18:18:42.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.189" endtime="20201029 18:18:42.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.484" endtime="20201029 18:18:42.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.493" endtime="20201029 18:18:42.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.187" endtime="20201029 18:18:42.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.185" endtime="20201029 18:18:42.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.499" level="INFO">${RESULT} = [{'diff': 0.00013426299999999905}, {'diff': 0.00013401400000000174}, {'diff': 0.0001337090000000027}, {'diff': 0.00013387499999999858}, {'diff': 0.0001343190000000008}, {'diff': 0.00013426399999999852...</msg>
<status status="PASS" starttime="20201029 18:18:42.496" endtime="20201029 18:18:42.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.503" level="INFO">${ACCURACY} = {'diff': [0.00013426299999999905, 0.00013401400000000174, 0.0001337090000000027, 0.00013387499999999858, 0.0001343190000000008, 0.00013426399999999852, 0.00013413900000000187, 0.000134167000000001, 0....</msg>
<status status="PASS" starttime="20201029 18:18:42.500" endtime="20201029 18:18:42.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.507" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.506" endtime="20201029 18:18:42.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.510" level="INFO">VALUE: [0.00013426299999999905, 0.00013401400000000174, 0.0001337090000000027, 0.00013387499999999858, 0.0001343190000000008, 0.00013426399999999852, 0.00013413900000000187, 0.000134167000000001, 0.00013437499999999908, 0.0001339449999999999, 0.00013404200000000088, 0.00013455599999999748, 0.00013433300000000037, 0.00013443100000000083, 0.00013408300000000012, 0.00013458300000000062, 0.0001344999999999992, 0.0001338340000000028, 0.00013427800000000156, 0.00013388900000000162, 0.0001340280000000013, 0.00013444400000000092, 0.00013383299999999987, 0.00013431899999999733, 0.0001344860000000031, 0.0001338340000000028, 0.00013363900000000137, 0.00013407000000000002, 0.00013356900000000005, 0.00013397199999999956, 0.00013433399999999984, 0.00013422199999999981, 0.00013419400000000067, 0.00013411099999999926, 0.00013387499999999858, 0.00013413900000000187, 0.00013401400000000174, 0.0001344030000000017, 0.00013363900000000137, 0.00013434699999999994, 0.0001341809999999971, 0.00013418100000000058, 0.00013408300000000012, 0.0001336389999999979, 0.00013394400000000042, 0.00013370799999999974, 0.00013412499999999883, 0.00013450000000000267, 0.00013387500000000205, 0.00013369400000000017]</msg>
<status status="PASS" starttime="20201029 18:18:42.509" endtime="20201029 18:18:42.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.504" endtime="20201029 18:18:42.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.515" endtime="20201029 18:18:42.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.513" endtime="20201029 18:18:42.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.512" endtime="20201029 18:18:42.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.150" endtime="20201029 18:18:42.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.150" endtime="20201029 18:18:42.536"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.544" endtime="20201029 18:18:42.565"></status>
</kw>
<msg timestamp="20201029 18:18:42.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.543" endtime="20201029 18:18:42.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.567" endtime="20201029 18:18:42.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.569" endtime="20201029 18:18:42.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.540" endtime="20201029 18:18:42.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.538" endtime="20201029 18:18:42.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.578" endtime="20201029 18:18:42.865"></status>
</kw>
<msg timestamp="20201029 18:18:42.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.576" endtime="20201029 18:18:42.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.869" endtime="20201029 18:18:42.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.877" endtime="20201029 18:18:42.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.574" endtime="20201029 18:18:42.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.572" endtime="20201029 18:18:42.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.884" level="INFO">${RESULT} = [{'diff': 0.00013530599999999823}, {'diff': 0.00013511100000000026}, {'diff': 0.00013483300000000087}, {'diff': 0.00013524999999999995}, {'diff': 0.00013487500000000305}, {'diff': 0.000134874999999999...</msg>
<status status="PASS" starttime="20201029 18:18:42.880" endtime="20201029 18:18:42.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.888" level="INFO">${ACCURACY} = {'diff': [0.00013530599999999823, 0.00013511100000000026, 0.00013483300000000087, 0.00013524999999999995, 0.00013487500000000305, 0.00013487499999999958, 0.00013517999999999863, 0.00013537500000000008...</msg>
<status status="PASS" starttime="20201029 18:18:42.885" endtime="20201029 18:18:42.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.893" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.892" endtime="20201029 18:18:42.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.895" level="INFO">VALUE: [0.00013530599999999823, 0.00013511100000000026, 0.00013483300000000087, 0.00013524999999999995, 0.00013487500000000305, 0.00013487499999999958, 0.00013517999999999863, 0.00013537500000000008, 0.0001349999999999997, 0.00013524999999999995, 0.00013537500000000008, 0.0001351939999999982, 0.00013462499999999933, 0.0001354580000000015, 0.0001347909999999987, 0.00013557000000000152, 0.00013532000000000127, 0.00013511100000000026, 0.00013544399999999845, 0.00013490199999999924, 0.00013462499999999933, 0.00013466699999999804, 0.0001350280000000023, 0.00013504099999999894, 0.00013484700000000044, 0.0001350840000000006, 0.00013522200000000081, 0.0001351809999999981, 0.00013484700000000044, 0.00013519499999999768, 0.00013554099999999944, 0.0001346250000000028, 0.00013524999999999995, 0.0001355000000000002, 0.0001354169999999988, 0.0001351389999999994, 0.00013559699999999772, 0.00013542999999999888, 0.00013476399999999902, 0.00013561100000000076, 0.00013523600000000038, 0.00013534700000000094, 0.00013557000000000152, 0.00013479200000000163, 0.00013501399999999927, 0.00013561100000000076, 0.00013473599999999988, 0.00013541700000000226, 0.00013541700000000226, 0.00013555500000000248]</msg>
<status status="PASS" starttime="20201029 18:18:42.894" endtime="20201029 18:18:42.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.889" endtime="20201029 18:18:42.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.901" endtime="20201029 18:18:42.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.900" endtime="20201029 18:18:42.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.899" endtime="20201029 18:18:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.537" endtime="20201029 18:18:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.536" endtime="20201029 18:18:42.922"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.931" endtime="20201029 18:18:42.951"></status>
</kw>
<msg timestamp="20201029 18:18:42.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.929" endtime="20201029 18:18:42.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.952" endtime="20201029 18:18:42.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.955" endtime="20201029 18:18:42.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.927" endtime="20201029 18:18:42.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.924" endtime="20201029 18:18:42.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.964" endtime="20201029 18:18:43.250"></status>
</kw>
<msg timestamp="20201029 18:18:43.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.962" endtime="20201029 18:18:43.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.255" endtime="20201029 18:18:43.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.263" endtime="20201029 18:18:43.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.960" endtime="20201029 18:18:43.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.958" endtime="20201029 18:18:43.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.269" level="INFO">${RESULT} = [{'diff': 0.00013617999999999963}, {'diff': 0.00013575000000000045}, {'diff': 0.00013659699999999872}, {'diff': 0.00013584700000000144}, {'diff': 0.00013567999999999913}, {'diff': 0.000136570000000002...</msg>
<status status="PASS" starttime="20201029 18:18:43.266" endtime="20201029 18:18:43.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.274" level="INFO">${ACCURACY} = {'diff': [0.00013617999999999963, 0.00013575000000000045, 0.00013659699999999872, 0.00013584700000000144, 0.00013567999999999913, 0.00013657000000000252, 0.00013566699999999904, 0.00013648600000000163...</msg>
<status status="PASS" starttime="20201029 18:18:43.270" endtime="20201029 18:18:43.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.279" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.278" endtime="20201029 18:18:43.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.281" level="INFO">VALUE: [0.00013617999999999963, 0.00013575000000000045, 0.00013659699999999872, 0.00013584700000000144, 0.00013567999999999913, 0.00013657000000000252, 0.00013566699999999904, 0.00013648600000000163, 0.0001365000000000012, 0.00013590299999999972, 0.00013630599999999923, 0.0001365419999999999, 0.0001363610000000015, 0.00013586099999999754, 0.00013638900000000065, 0.00013570799999999827, 0.00013598600000000113, 0.00013611200000000073, 0.0001363480000000014, 0.00013561100000000076, 0.00013575000000000045, 0.000136555, 0.00013643099999999936, 0.00013638800000000117, 0.000135554999999999, 0.00013612500000000083, 0.00013562500000000033, 0.0001360130000000008, 0.00013644499999999893, 0.0001356389999999999, 0.00013616699999999954, 0.00013587500000000058, 0.00013590299999999972, 0.00013598600000000113, 0.00013652800000000034, 0.00013599999999999723, 0.00013648599999999816, 0.0001356109999999973, 0.00013565299999999947, 0.00013569499999999818, 0.00013568100000000208, 0.0001366109999999983, 0.00013586099999999754, 0.0001359450000000019, 0.00013598599999999766, 0.00013573700000000036, 0.0001365419999999999, 0.0001362780000000001, 0.00013630599999999923, 0.00013617999999999963]</msg>
<status status="PASS" starttime="20201029 18:18:43.280" endtime="20201029 18:18:43.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.275" endtime="20201029 18:18:43.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.286" endtime="20201029 18:18:43.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.284" endtime="20201029 18:18:43.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.283" endtime="20201029 18:18:43.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.923" endtime="20201029 18:18:43.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.922" endtime="20201029 18:18:43.307"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.315" endtime="20201029 18:18:43.335"></status>
</kw>
<msg timestamp="20201029 18:18:43.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.314" endtime="20201029 18:18:43.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.337" endtime="20201029 18:18:43.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.339" endtime="20201029 18:18:43.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.311" endtime="20201029 18:18:43.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.309" endtime="20201029 18:18:43.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.348" endtime="20201029 18:18:43.635"></status>
</kw>
<msg timestamp="20201029 18:18:43.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.347" endtime="20201029 18:18:43.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.639" endtime="20201029 18:18:43.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.647" endtime="20201029 18:18:43.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.344" endtime="20201029 18:18:43.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.342" endtime="20201029 18:18:43.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.654" level="INFO">${RESULT} = [{'diff': 0.00013708399999999912}, {'diff': 0.00013762500000000233}, {'diff': 0.0001373749999999986}, {'diff': 0.0001368329999999994}, {'diff': 0.00013715300000000097}, {'diff': 0.0001371940000000002}...</msg>
<status status="PASS" starttime="20201029 18:18:43.651" endtime="20201029 18:18:43.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.658" level="INFO">${ACCURACY} = {'diff': [0.00013708399999999912, 0.00013762500000000233, 0.0001373749999999986, 0.0001368329999999994, 0.00013715300000000097, 0.0001371940000000002, 0.00013744400000000045, 0.00013705499999999704, 0...</msg>
<status status="PASS" starttime="20201029 18:18:43.655" endtime="20201029 18:18:43.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.662" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.661" endtime="20201029 18:18:43.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.665" level="INFO">VALUE: [0.00013708399999999912, 0.00013762500000000233, 0.0001373749999999986, 0.0001368329999999994, 0.00013715300000000097, 0.0001371940000000002, 0.00013744400000000045, 0.00013705499999999704, 0.00013762499999999886, 0.0001368749999999981, 0.0001371810000000001, 0.00013674999999999798, 0.0001370550000000005, 0.000137555000000001, 0.00013699999999999823, 0.00013668000000000013, 0.00013706900000000008, 0.00013679200000000016, 0.0001370000000000017, 0.0001376810000000006, 0.0001374170000000008, 0.00013688899999999768, 0.0001375000000000022, 0.00013699999999999823, 0.00013725000000000195, 0.0001373610000000025, 0.0001374309999999969, 0.00013730600000000023, 0.00013694499999999943, 0.00013708299999999965, 0.0001373749999999986, 0.0001373329999999999, 0.00013693000000000038, 0.00013722299999999882, 0.00013699999999999823, 0.00013741600000000131, 0.000137555000000001, 0.00013693099999999986, 0.00013669500000000265, 0.0001368749999999981, 0.00013665300000000047, 0.00013680599999999973, 0.00013748599999999916, 0.00013693000000000038, 0.00013740300000000122, 0.00013727700000000162, 0.00013698699999999814, 0.00013713899999999793, 0.0001368749999999981, 0.00013731900000000033]</msg>
<status status="PASS" starttime="20201029 18:18:43.663" endtime="20201029 18:18:43.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.659" endtime="20201029 18:18:43.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.670" endtime="20201029 18:18:43.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.668" endtime="20201029 18:18:43.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.667" endtime="20201029 18:18:43.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.308" endtime="20201029 18:18:43.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.307" endtime="20201029 18:18:43.691"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.699" endtime="20201029 18:18:43.720"></status>
</kw>
<msg timestamp="20201029 18:18:43.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.698" endtime="20201029 18:18:43.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.722" endtime="20201029 18:18:43.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.724" endtime="20201029 18:18:43.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.695" endtime="20201029 18:18:43.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.693" endtime="20201029 18:18:43.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.733" endtime="20201029 18:18:44.018"></status>
</kw>
<msg timestamp="20201029 18:18:44.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.731" endtime="20201029 18:18:44.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.022" endtime="20201029 18:18:44.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.030" endtime="20201029 18:18:44.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.729" endtime="20201029 18:18:44.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.727" endtime="20201029 18:18:44.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.036" level="INFO">${RESULT} = [{'diff': 0.0001387919999999987}, {'diff': 0.0001381109999999998}, {'diff': 0.00013798599999999966}, {'diff': 0.0001378749999999991}, {'diff': 0.00013780500000000126}, {'diff': 0.00013805600000000098}...</msg>
<status status="PASS" starttime="20201029 18:18:44.033" endtime="20201029 18:18:44.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.040" level="INFO">${ACCURACY} = {'diff': [0.0001387919999999987, 0.0001381109999999998, 0.00013798599999999966, 0.0001378749999999991, 0.00013780500000000126, 0.00013805600000000098, 0.00013780500000000126, 0.00013825000000000295, 0...</msg>
<status status="PASS" starttime="20201029 18:18:44.037" endtime="20201029 18:18:44.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.045" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.044" endtime="20201029 18:18:44.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.047" level="INFO">VALUE: [0.0001387919999999987, 0.0001381109999999998, 0.00013798599999999966, 0.0001378749999999991, 0.00013780500000000126, 0.00013805600000000098, 0.00013780500000000126, 0.00013825000000000295, 0.00013786099999999954, 0.0001384309999999979, 0.00013843100000000136, 0.00013762499999999886, 0.00013781900000000083, 0.00013809700000000022, 0.0001375979999999992, 0.00013836100000000004, 0.00013812499999999936, 0.0001379720000000001, 0.0001377780000000016, 0.00013779099999999822, 0.00013804199999999794, 0.00013792999999999792, 0.00013786099999999954, 0.0001383749999999996, 0.00013773600000000288, 0.000138555000000002, 0.0001381109999999998, 0.00013790300000000172, 0.00013855499999999854, 0.00013848600000000016, 0.00013779099999999822, 0.00013772199999999984, 0.00013829099999999872, 0.0001380979999999997, 0.00013833299999999743, 0.0001378749999999991, 0.00013857000000000105, 0.000137861999999999, 0.00013773599999999941, 0.00013799999999999923, 0.00013799999999999923, 0.00013777799999999812, 0.0001378200000000003, 0.00013762499999999886, 0.00013845799999999756, 0.00013757000000000005, 0.0001384720000000006, 0.00013823700000000286, 0.00013805499999999804, 0.0001381659999999986]</msg>
<status status="PASS" starttime="20201029 18:18:44.046" endtime="20201029 18:18:44.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.041" endtime="20201029 18:18:44.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.053" endtime="20201029 18:18:44.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.052" endtime="20201029 18:18:44.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.050" endtime="20201029 18:18:44.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.691" endtime="20201029 18:18:44.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.691" endtime="20201029 18:18:44.074"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.082" endtime="20201029 18:18:44.103"></status>
</kw>
<msg timestamp="20201029 18:18:44.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.081" endtime="20201029 18:18:44.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.104" endtime="20201029 18:18:44.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.107" endtime="20201029 18:18:44.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.078" endtime="20201029 18:18:44.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.076" endtime="20201029 18:18:44.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.117" endtime="20201029 18:18:44.403"></status>
</kw>
<msg timestamp="20201029 18:18:44.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.115" endtime="20201029 18:18:44.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.407" endtime="20201029 18:18:44.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.415" endtime="20201029 18:18:44.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.112" endtime="20201029 18:18:44.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.110" endtime="20201029 18:18:44.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.421" level="INFO">${RESULT} = [{'diff': 0.00013922200000000134}, {'diff': 0.00013904099999999947}, {'diff': 0.00013952799999999987}, {'diff': 0.00013920800000000177}, {'diff': 0.0001394859999999977}, {'diff': 0.0001395969999999982...</msg>
<status status="PASS" starttime="20201029 18:18:44.418" endtime="20201029 18:18:44.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.426" level="INFO">${ACCURACY} = {'diff': [0.00013922200000000134, 0.00013904099999999947, 0.00013952799999999987, 0.00013920800000000177, 0.0001394859999999977, 0.00013959699999999825, 0.00013883299999999793, 0.00013881899999999836,...</msg>
<status status="PASS" starttime="20201029 18:18:44.422" endtime="20201029 18:18:44.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.431" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.430" endtime="20201029 18:18:44.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.433" level="INFO">VALUE: [0.00013922200000000134, 0.00013904099999999947, 0.00013952799999999987, 0.00013920800000000177, 0.0001394859999999977, 0.00013959699999999825, 0.00013883299999999793, 0.00013881899999999836, 0.00013958299999999868, 0.0001392919999999992, 0.00013902799999999937, 0.0001389720000000011, 0.00013909700000000122, 0.00013877699999999965, 0.00013870800000000127, 0.00013895799999999806, 0.00013938900000000018, 0.0001386659999999991, 0.00013947199999999813, 0.00013883400000000087, 0.0001395140000000003, 0.00013941699999999932, 0.0001389170000000023, 0.00013891699999999882, 0.00013913899999999993, 0.00013904199999999894, 0.00013888899999999968, 0.0001386110000000003, 0.00013884700000000097, 0.00013873600000000041, 0.00013873600000000041, 0.00013891599999999935, 0.000139346999999998, 0.0001394720000000016, 0.0001394170000000028, 0.00013944499999999846, 0.0001386659999999991, 0.0001389720000000011, 0.00013891699999999882, 0.00013904199999999894, 0.00013866700000000204, 0.0001389720000000011, 0.0001388469999999975, 0.0001387910000000027, 0.0001387919999999987, 0.00013949999999999727, 0.00013904100000000294, 0.00013912500000000036, 0.00013923599999999745, 0.00013886100000000054]</msg>
<status status="PASS" starttime="20201029 18:18:44.432" endtime="20201029 18:18:44.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.427" endtime="20201029 18:18:44.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.438" endtime="20201029 18:18:44.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.437" endtime="20201029 18:18:44.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.435" endtime="20201029 18:18:44.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.075" endtime="20201029 18:18:44.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.074" endtime="20201029 18:18:44.459"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.468" endtime="20201029 18:18:44.488"></status>
</kw>
<msg timestamp="20201029 18:18:44.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.466" endtime="20201029 18:18:44.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.489" endtime="20201029 18:18:44.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.492" endtime="20201029 18:18:44.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.463" endtime="20201029 18:18:44.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.461" endtime="20201029 18:18:44.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.501" endtime="20201029 18:18:44.788"></status>
</kw>
<msg timestamp="20201029 18:18:44.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:44.499" endtime="20201029 18:18:44.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:44.792" endtime="20201029 18:18:44.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.801" endtime="20201029 18:18:44.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.497" endtime="20201029 18:18:44.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.495" endtime="20201029 18:18:44.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.807" level="INFO">${RESULT} = [{'diff': 0.000140653000000001}, {'diff': 0.00013958399999999815}, {'diff': 0.00014052800000000087}, {'diff': 0.00013994399999999949}, {'diff': 0.00014054200000000044}, {'diff': 0.0001398750000000011}...</msg>
<status status="PASS" starttime="20201029 18:18:44.804" endtime="20201029 18:18:44.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.811" level="INFO">${ACCURACY} = {'diff': [0.000140653000000001, 0.00013958399999999815, 0.00014052800000000087, 0.00013994399999999949, 0.00014054200000000044, 0.0001398750000000011, 0.00014008399999999865, 0.00013966699999999957, 0...</msg>
<status status="PASS" starttime="20201029 18:18:44.808" endtime="20201029 18:18:44.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.815" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.814" endtime="20201029 18:18:44.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.818" level="INFO">VALUE: [0.000140653000000001, 0.00013958399999999815, 0.00014052800000000087, 0.00013994399999999949, 0.00014054200000000044, 0.0001398750000000011, 0.00014008399999999865, 0.00013966699999999957, 0.00014004199999999994, 0.00014019399999999974, 0.00013994399999999949, 0.0001404309999999999, 0.00014033400000000237, 0.00013995799999999906, 0.00014061099999999882, 0.00014041700000000032, 0.0001398049999999998, 0.00013997199999999863, 0.0001396660000000001, 0.00014024999999999802, 0.00014052800000000087, 0.00014023600000000191, 0.0001401119999999978, 0.00014002800000000037, 0.00014055500000000054, 0.0001399859999999982, 0.00014018099999999964, 0.0001400980000000017, 0.0001398049999999998, 0.00013991699999999982, 0.0001403339999999989, 0.0001402920000000002, 0.00014055500000000054, 0.0001396110000000013, 0.00014058300000000315, 0.00014045799999999956, 0.00013962500000000086, 0.00014038900000000118, 0.00013999999999999777, 0.00014016700000000007, 0.00014009699999999875, 0.00013984700000000197, 0.0001400980000000017, 0.0001400689999999996, 0.00014004199999999994, 0.00014047199999999913, 0.0001405409999999975, 0.00014041700000000032, 0.00013973600000000141, 0.0001397919999999997]</msg>
<status status="PASS" starttime="20201029 18:18:44.817" endtime="20201029 18:18:44.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.812" endtime="20201029 18:18:44.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.823" endtime="20201029 18:18:44.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.821" endtime="20201029 18:18:44.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.820" endtime="20201029 18:18:44.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.460" endtime="20201029 18:18:44.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.459" endtime="20201029 18:18:44.844"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.852" endtime="20201029 18:18:44.874"></status>
</kw>
<msg timestamp="20201029 18:18:44.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.851" endtime="20201029 18:18:44.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.875" endtime="20201029 18:18:44.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.878" endtime="20201029 18:18:44.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.848" endtime="20201029 18:18:44.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.846" endtime="20201029 18:18:44.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.887" endtime="20201029 18:18:45.173"></status>
</kw>
<msg timestamp="20201029 18:18:45.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022915403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.885" endtime="20201029 18:18:45.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022915403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.177" endtime="20201029 18:18:45.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.185" endtime="20201029 18:18:45.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.883" endtime="20201029 18:18:45.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.881" endtime="20201029 18:18:45.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.192" level="INFO">${RESULT} = [{'diff': 0.0001416249999999994}, {'diff': 0.00014115299999999803}, {'diff': 0.00014083400000000287}, {'diff': 0.00014133300000000043}, {'diff': 0.00014113899999999846}, {'diff': 0.0001405839999999991...</msg>
<status status="PASS" starttime="20201029 18:18:45.189" endtime="20201029 18:18:45.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.196" level="INFO">${ACCURACY} = {'diff': [0.0001416249999999994, 0.00014115299999999803, 0.00014083400000000287, 0.00014133300000000043, 0.00014113899999999846, 0.00014058399999999915, 0.00014077799999999766, 0.00014140300000000175,...</msg>
<status status="PASS" starttime="20201029 18:18:45.193" endtime="20201029 18:18:45.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.200" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.199" endtime="20201029 18:18:45.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.203" level="INFO">VALUE: [0.0001416249999999994, 0.00014115299999999803, 0.00014083400000000287, 0.00014133300000000043, 0.00014113899999999846, 0.00014058399999999915, 0.00014077799999999766, 0.00014140300000000175, 0.00014059699999999925, 0.00014134799999999947, 0.00014088900000000168, 0.00014101399999999834, 0.00014152800000000187, 0.00014152699999999893, 0.00014074999999999852, 0.00014116700000000107, 0.00014104200000000094, 0.00014104199999999747, 0.0001415409999999985, 0.00014059799999999872, 0.0001411530000000015, 0.00014108399999999965, 0.0001408469999999995, 0.0001413889999999987, 0.00014133300000000043, 0.00014059700000000272, 0.00014115199999999856, 0.0001409859999999992, 0.00014151399999999884, 0.00014148699999999917, 0.00014126399999999859, 0.00014151399999999884, 0.00014149999999999927, 0.00014116599999999813, 0.0001406249999999984, 0.0001408469999999995, 0.000140653000000001, 0.0001412920000000012, 0.0001410279999999979, 0.00014072199999999938, 0.00014145900000000003, 0.0001406949999999997, 0.00014058299999999968, 0.0001408050000000008, 0.00014122199999999988, 0.00014104100000000147, 0.0001415140000000023, 0.00014150000000000273, 0.00014149999999999927, 0.00014113900000000193]</msg>
<status status="PASS" starttime="20201029 18:18:45.201" endtime="20201029 18:18:45.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.197" endtime="20201029 18:18:45.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.213" endtime="20201029 18:18:45.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.211" endtime="20201029 18:18:45.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.210" endtime="20201029 18:18:45.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.845" endtime="20201029 18:18:45.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.844" endtime="20201029 18:18:45.234"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.242" endtime="20201029 18:18:45.262"></status>
</kw>
<msg timestamp="20201029 18:18:45.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.241" endtime="20201029 18:18:45.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.264" endtime="20201029 18:18:45.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.266" endtime="20201029 18:18:45.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.238" endtime="20201029 18:18:45.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.236" endtime="20201029 18:18:45.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.275" endtime="20201029 18:18:45.561"></status>
</kw>
<msg timestamp="20201029 18:18:45.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.274" endtime="20201029 18:18:45.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.565" endtime="20201029 18:18:45.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.573" endtime="20201029 18:18:45.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.271" endtime="20201029 18:18:45.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.270" endtime="20201029 18:18:45.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.579" level="INFO">${RESULT} = [{'diff': 0.00014207000000000108}, {'diff': 0.00014190300000000225}, {'diff': 0.00014173599999999995}, {'diff': 0.0001425409999999995}, {'diff': 0.000142138}, {'diff': 0.00014177799999999866}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:18:45.576" endtime="20201029 18:18:45.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.584" level="INFO">${ACCURACY} = {'diff': [0.00014207000000000108, 0.00014190300000000225, 0.00014173599999999995, 0.0001425409999999995, 0.000142138, 0.00014177799999999866, 0.00014254200000000244, 0.00014258400000000115, 0.00014231...</msg>
<status status="PASS" starttime="20201029 18:18:45.580" endtime="20201029 18:18:45.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.589" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.588" endtime="20201029 18:18:45.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.591" level="INFO">VALUE: [0.00014207000000000108, 0.00014190300000000225, 0.00014173599999999995, 0.0001425409999999995, 0.000142138, 0.00014177799999999866, 0.00014254200000000244, 0.00014258400000000115, 0.0001423189999999984, 0.00014241699999999885, 0.00014177800000000212, 0.00014163899999999896, 0.0001425409999999995, 0.00014209700000000075, 0.0001424019999999998, 0.00014166599999999863, 0.00014233299999999796, 0.00014247199999999766, 0.00014186100000000007, 0.00014250000000000027, 0.00014240299999999928, 0.0001423889999999997, 0.0001423189999999984, 0.00014240300000000275, 0.00014205599999999804, 0.000142347000000001, 0.00014258300000000168, 0.0001418059999999978, 0.0001425279999999994, 0.00014195900000000053, 0.0001423059999999983, 0.00014250000000000027, 0.00014241599999999938, 0.00014218099999999817, 0.00014245800000000156, 0.00014211100000000032, 0.0001418470000000005, 0.000142347000000001, 0.0001421669999999986, 0.00014254100000000297, 0.00014186100000000007, 0.0001416249999999994, 0.00014247200000000113, 0.00014240299999999928, 0.0001419730000000001, 0.00014186100000000007, 0.00014161099999999982, 0.0001416799999999982, 0.00014222200000000088, 0.00014207000000000108]</msg>
<status status="PASS" starttime="20201029 18:18:45.590" endtime="20201029 18:18:45.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.585" endtime="20201029 18:18:45.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.596" endtime="20201029 18:18:45.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.595" endtime="20201029 18:18:45.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.593" endtime="20201029 18:18:45.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.235" endtime="20201029 18:18:45.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.234" endtime="20201029 18:18:45.617"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.625" endtime="20201029 18:18:45.646"></status>
</kw>
<msg timestamp="20201029 18:18:45.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.624" endtime="20201029 18:18:45.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.647" endtime="20201029 18:18:45.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.650" endtime="20201029 18:18:45.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.621" endtime="20201029 18:18:45.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.619" endtime="20201029 18:18:45.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.659" endtime="20201029 18:18:45.948"></status>
</kw>
<msg timestamp="20201029 18:18:45.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.657" endtime="20201029 18:18:45.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.952" endtime="20201029 18:18:45.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.960" endtime="20201029 18:18:45.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.655" endtime="20201029 18:18:45.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.653" endtime="20201029 18:18:45.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.967" level="INFO">${RESULT} = [{'diff': 0.00014341600000000038}, {'diff': 0.00014325000000000102}, {'diff': 0.0001434999999999978}, {'diff': 0.00014351400000000084}, {'diff': 0.00014336200000000104}, {'diff': 0.0001431530000000000...</msg>
<status status="PASS" starttime="20201029 18:18:45.963" endtime="20201029 18:18:45.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.971" level="INFO">${ACCURACY} = {'diff': [0.00014341600000000038, 0.00014325000000000102, 0.0001434999999999978, 0.00014351400000000084, 0.00014336200000000104, 0.00014315300000000003, 0.00014309699999999828, 0.00014329199999999973,...</msg>
<status status="PASS" starttime="20201029 18:18:45.968" endtime="20201029 18:18:45.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.975" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.974" endtime="20201029 18:18:45.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.977" level="INFO">VALUE: [0.00014341600000000038, 0.00014325000000000102, 0.0001434999999999978, 0.00014351400000000084, 0.00014336200000000104, 0.00014315300000000003, 0.00014309699999999828, 0.00014329199999999973, 0.0001431669999999996, 0.00014269399999999877, 0.00014341699999999985, 0.00014359699999999878, 0.0001427920000000027, 0.0001429860000000012, 0.00014273600000000095, 0.000143444999999999, 0.00014324999999999755, 0.00014315300000000003, 0.00014325000000000102, 0.00014312499999999742, 0.00014306999999999861, 0.00014304199999999948, 0.00014266700000000257, 0.00014323600000000145, 0.00014354199999999998, 0.00014343099999999942, 0.00014333300000000243, 0.00014324999999999755, 0.00014333399999999843, 0.00014288800000000074, 0.0001428189999999989, 0.00014324999999999755, 0.00014279199999999923, 0.0001431799999999997, 0.00014291699999999935, 0.0001429860000000012, 0.00014347199999999866, 0.00014259700000000125, 0.00014266599999999963, 0.00014291699999999935, 0.00014305499999999957, 0.0001426250000000004, 0.0001428470000000015, 0.00014276400000000009, 0.00014348599999999823, 0.00014279099999999975, 0.00014304199999999948, 0.00014292999999999945, 0.00014284699999999803, 0.00014307000000000208]</msg>
<status status="PASS" starttime="20201029 18:18:45.976" endtime="20201029 18:18:45.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.971" endtime="20201029 18:18:45.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.982" endtime="20201029 18:18:46.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.981" endtime="20201029 18:18:46.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.980" endtime="20201029 18:18:46.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.618" endtime="20201029 18:18:46.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.617" endtime="20201029 18:18:46.003"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.012" endtime="20201029 18:18:46.033"></status>
</kw>
<msg timestamp="20201029 18:18:46.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.010" endtime="20201029 18:18:46.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.034" endtime="20201029 18:18:46.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.037" endtime="20201029 18:18:46.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.008" endtime="20201029 18:18:46.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.006" endtime="20201029 18:18:46.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.046" endtime="20201029 18:18:46.331"></status>
</kw>
<msg timestamp="20201029 18:18:46.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.044" endtime="20201029 18:18:46.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.335" endtime="20201029 18:18:46.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.343" endtime="20201029 18:18:46.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.042" endtime="20201029 18:18:46.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.040" endtime="20201029 18:18:46.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.350" level="INFO">${RESULT} = [{'diff': 0.00014386100000000207}, {'diff': 0.00014406900000000014}, {'diff': 0.00014429200000000073}, {'diff': 0.00014454200000000098}, {'diff': 0.00014367999999999673}, {'diff': 0.000144596999999999...</msg>
<status status="PASS" starttime="20201029 18:18:46.347" endtime="20201029 18:18:46.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.354" level="INFO">${ACCURACY} = {'diff': [0.00014386100000000207, 0.00014406900000000014, 0.00014429200000000073, 0.00014454200000000098, 0.00014367999999999673, 0.00014459699999999978, 0.0001444029999999978, 0.00014443100000000042,...</msg>
<status status="PASS" starttime="20201029 18:18:46.351" endtime="20201029 18:18:46.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.358" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.357" endtime="20201029 18:18:46.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.361" level="INFO">VALUE: [0.00014386100000000207, 0.00014406900000000014, 0.00014429200000000073, 0.00014454200000000098, 0.00014367999999999673, 0.00014459699999999978, 0.0001444029999999978, 0.00014443100000000042, 0.0001440280000000009, 0.00014423599999999898, 0.00014448700000000217, 0.0001445419999999975, 0.00014426399999999812, 0.00014411100000000232, 0.00014451399999999837, 0.0001435829999999992, 0.00014379200000000023, 0.00014433299999999996, 0.0001444020000000018, 0.00014363900000000096, 0.00014452700000000193, 0.00014359799999999825, 0.00014365300000000053, 0.0001438890000000012, 0.00014412499999999842, 0.0001445830000000002, 0.0001436670000000001, 0.0001441670000000006, 0.0001435829999999992, 0.00014434699999999953, 0.00014377800000000066, 0.0001438890000000012, 0.00014445800000000009, 0.00014395799999999959, 0.0001439029999999973, 0.0001437089999999988, 0.00014434699999999953, 0.00014416699999999713, 0.00014379200000000023, 0.00014401400000000134, 0.0001440280000000009, 0.00014365300000000053, 0.00014445800000000009, 0.00014384699999999903, 0.00014400000000000177, 0.00014459799999999925, 0.00014394400000000002, 0.00014415299999999756, 0.0001440280000000009, 0.00014370799999999934]</msg>
<status status="PASS" starttime="20201029 18:18:46.359" endtime="20201029 18:18:46.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.355" endtime="20201029 18:18:46.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.366" endtime="20201029 18:18:46.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.365" endtime="20201029 18:18:46.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.364" endtime="20201029 18:18:46.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.004" endtime="20201029 18:18:46.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.003" endtime="20201029 18:18:46.387"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.396" endtime="20201029 18:18:46.416"></status>
</kw>
<msg timestamp="20201029 18:18:46.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.394" endtime="20201029 18:18:46.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.418" endtime="20201029 18:18:46.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.420" endtime="20201029 18:18:46.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.392" endtime="20201029 18:18:46.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.390" endtime="20201029 18:18:46.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.429" endtime="20201029 18:18:46.714"></status>
</kw>
<msg timestamp="20201029 18:18:46.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.428" endtime="20201029 18:18:46.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.719" endtime="20201029 18:18:46.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.727" endtime="20201029 18:18:46.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.425" endtime="20201029 18:18:46.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.423" endtime="20201029 18:18:46.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.733" level="INFO">${RESULT} = [{'diff': 0.00014520800000000084}, {'diff': 0.0001447089999999998}, {'diff': 0.00014523599999999998}, {'diff': 0.0001448479999999995}, {'diff': 0.00014490199999999884}, {'diff': 0.0001448060000000008}...</msg>
<status status="PASS" starttime="20201029 18:18:46.730" endtime="20201029 18:18:46.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.738" level="INFO">${ACCURACY} = {'diff': [0.00014520800000000084, 0.0001447089999999998, 0.00014523599999999998, 0.0001448479999999995, 0.00014490199999999884, 0.0001448060000000008, 0.0001446939999999973, 0.00014493099999999745, 0....</msg>
<status status="PASS" starttime="20201029 18:18:46.734" endtime="20201029 18:18:46.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.743" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.742" endtime="20201029 18:18:46.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.745" level="INFO">VALUE: [0.00014520800000000084, 0.0001447089999999998, 0.00014523599999999998, 0.0001448479999999995, 0.00014490199999999884, 0.0001448060000000008, 0.0001446939999999973, 0.00014493099999999745, 0.00014488899999999874, 0.00014476400000000209, 0.00014472300000000285, 0.00014495900000000006, 0.00014541699999999838, 0.000145041999999998, 0.00014556900000000164, 0.00014554099999999903, 0.00014473599999999948, 0.00014512499999999942, 0.00014487499999999917, 0.0001450830000000007, 0.00014498599999999973, 0.0001450280000000019, 0.00014516600000000213, 0.00014530500000000182, 0.0001452220000000004, 0.00014548600000000023, 0.00014515299999999856, 0.0001453890000000027, 0.00014502799999999844, 0.0001454999999999998, 0.00014516699999999813, 0.00014490300000000178, 0.0001455830000000012, 0.00014484700000000003, 0.00014469500000000024, 0.00014497200000000016, 0.0001446800000000012, 0.0001453610000000001, 0.0001450280000000019, 0.00014461099999999935, 0.00014519500000000074, 0.0001448060000000008, 0.00014545900000000056, 0.0001454159999999989, 0.0001454719999999972, 0.0001450280000000019, 0.0001455419999999985, 0.00014520800000000084, 0.0001454029999999988, 0.00014490300000000178]</msg>
<status status="PASS" starttime="20201029 18:18:46.744" endtime="20201029 18:18:46.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.739" endtime="20201029 18:18:46.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.750" endtime="20201029 18:18:46.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.748" endtime="20201029 18:18:46.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.747" endtime="20201029 18:18:46.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.388" endtime="20201029 18:18:46.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.388" endtime="20201029 18:18:46.771"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.779" endtime="20201029 18:18:46.800"></status>
</kw>
<msg timestamp="20201029 18:18:46.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.778" endtime="20201029 18:18:46.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.801" endtime="20201029 18:18:46.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.804" endtime="20201029 18:18:46.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.775" endtime="20201029 18:18:46.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.773" endtime="20201029 18:18:46.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.813" endtime="20201029 18:18:47.100"></status>
</kw>
<msg timestamp="20201029 18:18:47.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.811" endtime="20201029 18:18:47.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.104" endtime="20201029 18:18:47.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.112" endtime="20201029 18:18:47.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.809" endtime="20201029 18:18:47.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.807" endtime="20201029 18:18:47.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.119" level="INFO">${RESULT} = [{'diff': 0.00014643099999999895}, {'diff': 0.00014654100000000003}, {'diff': 0.00014602799999999944}, {'diff': 0.00014595900000000106}, {'diff': 0.00014562499999999992}, {'diff': 0.000146250000000000...</msg>
<status status="PASS" starttime="20201029 18:18:47.116" endtime="20201029 18:18:47.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.123" level="INFO">${ACCURACY} = {'diff': [0.00014643099999999895, 0.00014654100000000003, 0.00014602799999999944, 0.00014595900000000106, 0.00014562499999999992, 0.00014625000000000055, 0.00014619500000000174, 0.0001462770000000002,...</msg>
<status status="PASS" starttime="20201029 18:18:47.120" endtime="20201029 18:18:47.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.127" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.126" endtime="20201029 18:18:47.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.130" level="INFO">VALUE: [0.00014643099999999895, 0.00014654100000000003, 0.00014602799999999944, 0.00014595900000000106, 0.00014562499999999992, 0.00014625000000000055, 0.00014619500000000174, 0.0001462770000000002, 0.00014591699999999888, 0.00014594399999999855, 0.00014588899999999974, 0.00014625000000000055, 0.00014577799999999919, 0.00014591699999999888, 0.00014577800000000266, 0.00014651400000000037, 0.0001456389999999995, 0.000146445000000002, 0.00014576399999999962, 0.00014572300000000038, 0.00014641699999999938, 0.0001458060000000018, 0.00014576399999999962, 0.00014593099999999845, 0.00014651400000000037, 0.00014559700000000078, 0.00014651400000000037, 0.00014623600000000098, 0.00014611100000000085, 0.0001465419999999995, 0.00014590300000000278, 0.0001459029999999993, 0.00014601399999999987, 0.00014633300000000196, 0.00014581899999999842, 0.0001461939999999988, 0.00014652799999999994, 0.00014602799999999944, 0.00014651400000000037, 0.0001460969999999978, 0.00014623600000000098, 0.00014625000000000055, 0.00014616599999999966, 0.0001463749999999972, 0.0001459029999999993, 0.00014597200000000116, 0.00014649999999999733, 0.0001460000000000003, 0.00014583300000000146, 0.00014597300000000063]</msg>
<status status="PASS" starttime="20201029 18:18:47.128" endtime="20201029 18:18:47.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.124" endtime="20201029 18:18:47.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.134" endtime="20201029 18:18:47.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.133" endtime="20201029 18:18:47.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.132" endtime="20201029 18:18:47.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.772" endtime="20201029 18:18:47.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.771" endtime="20201029 18:18:47.155"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.164" endtime="20201029 18:18:47.186"></status>
</kw>
<msg timestamp="20201029 18:18:47.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.163" endtime="20201029 18:18:47.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.187" endtime="20201029 18:18:47.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.190" endtime="20201029 18:18:47.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.160" endtime="20201029 18:18:47.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.158" endtime="20201029 18:18:47.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.199" endtime="20201029 18:18:47.485"></status>
</kw>
<msg timestamp="20201029 18:18:47.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023305486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023452986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.197" endtime="20201029 18:18:47.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023305486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023452986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.489" endtime="20201029 18:18:47.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.497" endtime="20201029 18:18:47.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.195" endtime="20201029 18:18:47.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.193" endtime="20201029 18:18:47.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.504" level="INFO">${RESULT} = [{'diff': 0.00014749999999999833}, {'diff': 0.00014751400000000137}, {'diff': 0.0001471809999999997}, {'diff': 0.0001469160000000004}, {'diff': 0.00014712500000000142}, {'diff': 0.0001474030000000008}...</msg>
<status status="PASS" starttime="20201029 18:18:47.500" endtime="20201029 18:18:47.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.508" level="INFO">${ACCURACY} = {'diff': [0.00014749999999999833, 0.00014751400000000137, 0.0001471809999999997, 0.0001469160000000004, 0.00014712500000000142, 0.0001474030000000008, 0.00014669500000000224, 0.0001473329999999995, 0....</msg>
<status status="PASS" starttime="20201029 18:18:47.505" endtime="20201029 18:18:47.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.512" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.511" endtime="20201029 18:18:47.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.515" level="INFO">VALUE: [0.00014749999999999833, 0.00014751400000000137, 0.0001471809999999997, 0.0001469160000000004, 0.00014712500000000142, 0.0001474030000000008, 0.00014669500000000224, 0.0001473329999999995, 0.00014734700000000253, 0.00014720899999999884, 0.00014730599999999983, 0.00014684700000000203, 0.0001465969999999983, 0.00014665300000000006, 0.00014676400000000062, 0.0001466939999999993, 0.00014687500000000117, 0.0001466390000000005, 0.00014691699999999988, 0.00014704099999999706, 0.00014676400000000062, 0.00014726399999999765, 0.0001474580000000031, 0.0001469030000000003, 0.0001474030000000008, 0.0001468749999999977, 0.00014684700000000203, 0.0001469030000000003, 0.00014720800000000284, 0.0001471520000000011, 0.00014683399999999847, 0.00014738900000000124, 0.0001471939999999998, 0.0001471939999999998, 0.0001465419999999995, 0.00014744400000000005, 0.00014730599999999983, 0.00014738899999999777, 0.000147348000000002, 0.00014745799999999962, 0.00014666699999999963, 0.00014706899999999967, 0.00014662499999999745, 0.0001466939999999993, 0.00014745799999999962, 0.00014708299999999924, 0.0001472770000000012, 0.000147445000000003, 0.0001473749999999982, 0.00014702800000000044]</msg>
<status status="PASS" starttime="20201029 18:18:47.513" endtime="20201029 18:18:47.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.509" endtime="20201029 18:18:47.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.520" endtime="20201029 18:18:47.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.519" endtime="20201029 18:18:47.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.518" endtime="20201029 18:18:47.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.156" endtime="20201029 18:18:47.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.156" endtime="20201029 18:18:47.541"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.550" endtime="20201029 18:18:47.570"></status>
</kw>
<msg timestamp="20201029 18:18:47.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.548" endtime="20201029 18:18:47.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.572" endtime="20201029 18:18:47.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.574" endtime="20201029 18:18:47.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.546" endtime="20201029 18:18:47.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.544" endtime="20201029 18:18:47.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.583" endtime="20201029 18:18:47.870"></status>
</kw>
<msg timestamp="20201029 18:18:47.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.582" endtime="20201029 18:18:47.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.874" endtime="20201029 18:18:47.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.882" endtime="20201029 18:18:47.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.579" endtime="20201029 18:18:47.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.578" endtime="20201029 18:18:47.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.889" level="INFO">${RESULT} = [{'diff': 0.0001483749999999992}, {'diff': 0.00014817999999999776}, {'diff': 0.00014798599999999926}, {'diff': 0.00014852799999999847}, {'diff': 0.00014813899999999852}, {'diff': 0.0001485139999999989...</msg>
<status status="PASS" starttime="20201029 18:18:47.885" endtime="20201029 18:18:47.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.894" level="INFO">${ACCURACY} = {'diff': [0.0001483749999999992, 0.00014817999999999776, 0.00014798599999999926, 0.00014852799999999847, 0.00014813899999999852, 0.0001485139999999989, 0.0001481529999999981, 0.00014780499999999738, 0...</msg>
<status status="PASS" starttime="20201029 18:18:47.890" endtime="20201029 18:18:47.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.899" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.898" endtime="20201029 18:18:47.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.901" level="INFO">VALUE: [0.0001483749999999992, 0.00014817999999999776, 0.00014798599999999926, 0.00014852799999999847, 0.00014813899999999852, 0.0001485139999999989, 0.0001481529999999981, 0.00014780499999999738, 0.0001482909999999983, 0.00014851400000000237, 0.00014840299999999834, 0.00014822199999999994, 0.00014761099999999888, 0.0001480969999999998, 0.00014795800000000012, 0.00014802800000000144, 0.00014836099999999963, 0.0001483749999999992, 0.00014788899999999827, 0.0001479169999999974, 0.00014772199999999944, 0.00014795800000000012, 0.00014765199999999812, 0.00014770899999999934, 0.0001483610000000031, 0.00014763899999999802, 0.0001475969999999993, 0.00014804100000000153, 0.00014758400000000269, 0.00014783399999999947, 0.00014838899999999877, 0.0001480269999999985, 0.00014766700000000063, 0.00014780500000000085, 0.00014794399999999708, 0.00014809799999999929, 0.0001479030000000013, 0.0001481529999999981, 0.0001479719999999997, 0.00014777699999999824, 0.00014836099999999963, 0.00014809799999999929, 0.00014820800000000037, 0.00014784699999999956, 0.00014845799999999715, 0.00014770799999999987, 0.0001482919999999978, 0.00014849999999999933, 0.00014822300000000288, 0.00014788900000000174]</msg>
<status status="PASS" starttime="20201029 18:18:47.900" endtime="20201029 18:18:47.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.895" endtime="20201029 18:18:47.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.906" endtime="20201029 18:18:47.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.904" endtime="20201029 18:18:47.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.903" endtime="20201029 18:18:47.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.542" endtime="20201029 18:18:47.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.541" endtime="20201029 18:18:47.927"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.935" endtime="20201029 18:18:47.956"></status>
</kw>
<msg timestamp="20201029 18:18:47.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.934" endtime="20201029 18:18:47.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.957" endtime="20201029 18:18:47.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.960" endtime="20201029 18:18:47.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.931" endtime="20201029 18:18:47.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.929" endtime="20201029 18:18:47.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.969" endtime="20201029 18:18:48.266"></status>
</kw>
<msg timestamp="20201029 18:18:48.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.967" endtime="20201029 18:18:48.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.276" endtime="20201029 18:18:48.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.294" endtime="20201029 18:18:48.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.965" endtime="20201029 18:18:48.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.963" endtime="20201029 18:18:48.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.307" level="INFO">${RESULT} = [{'diff': 0.00014874999999999958}, {'diff': 0.00014957000000000165}, {'diff': 0.0001490550000000021}, {'diff': 0.00014931900000000192}, {'diff': 0.00014869500000000077}, {'diff': 0.0001487499999999995...</msg>
<status status="PASS" starttime="20201029 18:18:48.301" endtime="20201029 18:18:48.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.317" level="INFO">${ACCURACY} = {'diff': [0.00014874999999999958, 0.00014957000000000165, 0.0001490550000000021, 0.00014931900000000192, 0.00014869500000000077, 0.00014874999999999958, 0.000148736, 0.00014956900000000217, 0.00014937...</msg>
<status status="PASS" starttime="20201029 18:18:48.311" endtime="20201029 18:18:48.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.323" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.322" endtime="20201029 18:18:48.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.325" level="INFO">VALUE: [0.00014874999999999958, 0.00014957000000000165, 0.0001490550000000021, 0.00014931900000000192, 0.00014869500000000077, 0.00014874999999999958, 0.000148736, 0.00014956900000000217, 0.00014937499999999673, 0.00014877800000000219, 0.00014919399999999833, 0.0001487919999999983, 0.00014895800000000112, 0.00014866700000000163, 0.0001485689999999977, 0.00014883400000000047, 0.00014895800000000112, 0.00014956900000000217, 0.00014897300000000016, 0.0001493200000000014, 0.00014943000000000248, 0.00014865300000000206, 0.00014940199999999987, 0.00014919500000000127, 0.00014931900000000192, 0.00014863899999999902, 0.00014901400000000287, 0.0001488749999999997, 0.00014870800000000087, 0.00014880599999999786, 0.00014902700000000296, 0.00014893000000000198, 0.000149429999999999, 0.0001495139999999999, 0.00014867999999999826, 0.00014930500000000235, 0.0001494859999999973, 0.00014894499999999755, 0.0001489859999999968, 0.00014948699999999676, 0.00014936100000000063, 0.0001490550000000021, 0.00014890199999999937, 0.00014931900000000192, 0.00014934700000000106, 0.00014912499999999995, 0.0001489859999999968, 0.00014931899999999845, 0.00014937499999999673, 0.0001491949999999978]</msg>
<status status="PASS" starttime="20201029 18:18:48.324" endtime="20201029 18:18:48.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.319" endtime="20201029 18:18:48.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.330" endtime="20201029 18:18:48.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.328" endtime="20201029 18:18:48.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.327" endtime="20201029 18:18:48.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.928" endtime="20201029 18:18:48.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.927" endtime="20201029 18:18:48.351"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.359" endtime="20201029 18:18:48.381"></status>
</kw>
<msg timestamp="20201029 18:18:48.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.358" endtime="20201029 18:18:48.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.382" endtime="20201029 18:18:48.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.385" endtime="20201029 18:18:48.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.355" endtime="20201029 18:18:48.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.353" endtime="20201029 18:18:48.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.394" endtime="20201029 18:18:48.679"></status>
</kw>
<msg timestamp="20201029 18:18:48.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.392" endtime="20201029 18:18:48.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.683" endtime="20201029 18:18:48.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.691" endtime="20201029 18:18:48.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.390" endtime="20201029 18:18:48.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.388" endtime="20201029 18:18:48.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.697" level="INFO">${RESULT} = [{'diff': 0.00015019399999999933}, {'diff': 0.00015044399999999958}, {'diff': 0.00015018099999999923}, {'diff': 0.00015052800000000047}, {'diff': 0.00015041600000000044}, {'diff': 0.000149790999999999...</msg>
<status status="PASS" starttime="20201029 18:18:48.694" endtime="20201029 18:18:48.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.701" level="INFO">${ACCURACY} = {'diff': [0.00015019399999999933, 0.00015044399999999958, 0.00015018099999999923, 0.00015052800000000047, 0.00015041600000000044, 0.0001497909999999998, 0.00015027800000000022, 0.0001498750000000007, ...</msg>
<status status="PASS" starttime="20201029 18:18:48.698" endtime="20201029 18:18:48.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.705" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.704" endtime="20201029 18:18:48.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.708" level="INFO">VALUE: [0.00015019399999999933, 0.00015044399999999958, 0.00015018099999999923, 0.00015052800000000047, 0.00015041600000000044, 0.0001497909999999998, 0.00015027800000000022, 0.0001498750000000007, 0.00014984700000000156, 0.0001504859999999983, 0.00015043, 0.00014977799999999972, 0.00015018099999999923, 0.00014969500000000177, 0.00015026399999999718, 0.00015016700000000313, 0.00015013900000000052, 0.00014956999999999818, 0.00015000000000000083, 0.00014994500000000202, 0.00014990200000000037, 0.0001502499999999976, 0.0001505140000000009, 0.00015008300000000224, 0.00015009800000000129, 0.00014998600000000126, 0.00015012499999999748, 0.0001504169999999999, 0.00015023599999999804, 0.0001497909999999998, 0.0001496949999999983, 0.00015056999999999918, 0.00015043099999999948, 0.00014994399999999908, 0.00014999999999999736, 0.0001503750000000012, 0.00014955600000000208, 0.00014967999999999926, 0.0001504720000000022, 0.0001502499999999976, 0.00015017999999999976, 0.00015008400000000172, 0.00014994400000000255, 0.0001500689999999992, 0.00015011100000000138, 0.0001505140000000009, 0.0001500140000000004, 0.00015008399999999825, 0.00015036100000000163, 0.00014999999999999736]</msg>
<status status="PASS" starttime="20201029 18:18:48.706" endtime="20201029 18:18:48.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.702" endtime="20201029 18:18:48.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.714" endtime="20201029 18:18:48.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.712" endtime="20201029 18:18:48.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.711" endtime="20201029 18:18:48.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.352" endtime="20201029 18:18:48.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.351" endtime="20201029 18:18:48.734"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.743" endtime="20201029 18:18:48.763"></status>
</kw>
<msg timestamp="20201029 18:18:48.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.741" endtime="20201029 18:18:48.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.765" endtime="20201029 18:18:48.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.767" endtime="20201029 18:18:48.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.739" endtime="20201029 18:18:48.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.737" endtime="20201029 18:18:48.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.776" endtime="20201029 18:18:49.072"></status>
</kw>
<msg timestamp="20201029 18:18:49.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.775" endtime="20201029 18:18:49.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.081" endtime="20201029 18:18:49.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.099" endtime="20201029 18:18:49.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.772" endtime="20201029 18:18:49.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.771" endtime="20201029 18:18:49.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.112" level="INFO">${RESULT} = [{'diff': 0.00015080500000000038}, {'diff': 0.0001514859999999993}, {'diff': 0.000150736000000002}, {'diff': 0.00015090300000000084}, {'diff': 0.0001513750000000022}, {'diff': 0.00015073599999999854},...</msg>
<status status="PASS" starttime="20201029 18:18:49.106" endtime="20201029 18:18:49.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.123" level="INFO">${ACCURACY} = {'diff': [0.00015080500000000038, 0.0001514859999999993, 0.000150736000000002, 0.00015090300000000084, 0.0001513750000000022, 0.00015073599999999854, 0.00015149999999999886, 0.00015109799999999882, 0....</msg>
<status status="PASS" starttime="20201029 18:18:49.114" endtime="20201029 18:18:49.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.130" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.129" endtime="20201029 18:18:49.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.133" level="INFO">VALUE: [0.00015080500000000038, 0.0001514859999999993, 0.000150736000000002, 0.00015090300000000084, 0.0001513750000000022, 0.00015073599999999854, 0.00015149999999999886, 0.00015109799999999882, 0.00015137499999999873, 0.000150736000000002, 0.00015136100000000263, 0.00015093099999999998, 0.00015098600000000226, 0.00015154200000000104, 0.00015116700000000066, 0.00015075000000000158, 0.00015094400000000008, 0.00015108299999999977, 0.00015106999999999968, 0.0001511530000000011, 0.0001507920000000003, 0.0001514590000000031, 0.00015115199999999815, 0.00015122199999999947, 0.00015066700000000016, 0.00015066700000000016, 0.0001514729999999992, 0.00015116700000000066, 0.00015123599999999904, 0.00015059699999999884, 0.0001514859999999993, 0.00015094499999999955, 0.0001506949999999993, 0.0001505559999999996, 0.0001510970000000028, 0.0001510970000000028, 0.0001509729999999987, 0.00015100000000000183, 0.0001511530000000011, 0.00015068099999999973, 0.00015062500000000145, 0.0001507499999999981, 0.0001509170000000004, 0.00015119399999999686, 0.00015133300000000002, 0.00015080500000000038, 0.00015111100000000238, 0.00015141600000000144, 0.00015152800000000147, 0.00015123599999999904]</msg>
<status status="PASS" starttime="20201029 18:18:49.131" endtime="20201029 18:18:49.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.124" endtime="20201029 18:18:49.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.138" endtime="20201029 18:18:49.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.136" endtime="20201029 18:18:49.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.135" endtime="20201029 18:18:49.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.735" endtime="20201029 18:18:49.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.735" endtime="20201029 18:18:49.158"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.167" endtime="20201029 18:18:49.188"></status>
</kw>
<msg timestamp="20201029 18:18:49.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.165" endtime="20201029 18:18:49.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.189" endtime="20201029 18:18:49.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.192" endtime="20201029 18:18:49.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.163" endtime="20201029 18:18:49.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.161" endtime="20201029 18:18:49.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.201" endtime="20201029 18:18:49.490"></status>
</kw>
<msg timestamp="20201029 18:18:49.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.199" endtime="20201029 18:18:49.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.494" endtime="20201029 18:18:49.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.502" endtime="20201029 18:18:49.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.196" endtime="20201029 18:18:49.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.195" endtime="20201029 18:18:49.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.508" level="INFO">${RESULT} = [{'diff': 0.00015216700000000166}, {'diff': 0.00015177799999999825}, {'diff': 0.0001524730000000002}, {'diff': 0.00015176399999999868}, {'diff': 0.00015169399999999736}, {'diff': 0.0001516810000000007...</msg>
<status status="PASS" starttime="20201029 18:18:49.505" endtime="20201029 18:18:49.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.512" level="INFO">${ACCURACY} = {'diff': [0.00015216700000000166, 0.00015177799999999825, 0.0001524730000000002, 0.00015176399999999868, 0.00015169399999999736, 0.00015168100000000073, 0.00015162499999999898, 0.00015159699999999984,...</msg>
<status status="PASS" starttime="20201029 18:18:49.509" endtime="20201029 18:18:49.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.517" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.516" endtime="20201029 18:18:49.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.519" level="INFO">VALUE: [0.00015216700000000166, 0.00015177799999999825, 0.0001524730000000002, 0.00015176399999999868, 0.00015169399999999736, 0.00015168100000000073, 0.00015162499999999898, 0.00015159699999999984, 0.00015231999999999746, 0.00015237499999999973, 0.00015212499999999948, 0.00015165299999999812, 0.00015194499999999708, 0.00015195800000000065, 0.00015166599999999822, 0.00015227800000000222, 0.00015177800000000172, 0.00015168000000000126, 0.0001522369999999995, 0.00015205599999999764, 0.00015238900000000277, 0.00015194400000000108, 0.00015205599999999764, 0.00015236199999999964, 0.0001524860000000003, 0.0001518470000000001, 0.00015209700000000034, 0.00015209799999999982, 0.00015254199999999857, 0.00015234800000000007, 0.00015195900000000012, 0.0001517910000000018, 0.00015230500000000188, 0.00015215200000000262, 0.00015238799999999983, 0.00015177800000000172, 0.000152527999999999, 0.00015163899999999855, 0.00015201399999999893, 0.0001516950000000003, 0.00015249999999999986, 0.00015190299999999837, 0.00015173599999999954, 0.0001516109999999994, 0.000151834, 0.00015234699999999712, 0.00015199999999999936, 0.00015183300000000052, 0.00015163899999999855, 0.00015190299999999837]</msg>
<status status="PASS" starttime="20201029 18:18:49.518" endtime="20201029 18:18:49.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.513" endtime="20201029 18:18:49.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.524" endtime="20201029 18:18:49.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.523" endtime="20201029 18:18:49.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.521" endtime="20201029 18:18:49.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.159" endtime="20201029 18:18:49.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.159" endtime="20201029 18:18:49.545"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.553" endtime="20201029 18:18:49.575"></status>
</kw>
<msg timestamp="20201029 18:18:49.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.552" endtime="20201029 18:18:49.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.576" endtime="20201029 18:18:49.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.579" endtime="20201029 18:18:49.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.549" endtime="20201029 18:18:49.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.547" endtime="20201029 18:18:49.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.588" endtime="20201029 18:18:49.872"></status>
</kw>
<msg timestamp="20201029 18:18:49.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:49.586" endtime="20201029 18:18:49.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:49.876" endtime="20201029 18:18:49.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.884" endtime="20201029 18:18:49.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.584" endtime="20201029 18:18:49.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.582" endtime="20201029 18:18:49.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.891" level="INFO">${RESULT} = [{'diff': 0.0001528889999999998}, {'diff': 0.00015358399999999828}, {'diff': 0.0001533890000000003}, {'diff': 0.00015333300000000202}, {'diff': 0.00015355499999999966}, {'diff': 0.00015265299999999912...</msg>
<status status="PASS" starttime="20201029 18:18:49.887" endtime="20201029 18:18:49.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.894" level="INFO">${ACCURACY} = {'diff': [0.0001528889999999998, 0.00015358399999999828, 0.0001533890000000003, 0.00015333300000000202, 0.00015355499999999966, 0.00015265299999999912, 0.00015263900000000302, 0.0001534860000000013, 0...</msg>
<status status="PASS" starttime="20201029 18:18:49.892" endtime="20201029 18:18:49.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.899" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.898" endtime="20201029 18:18:49.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.901" level="INFO">VALUE: [0.0001528889999999998, 0.00015358399999999828, 0.0001533890000000003, 0.00015333300000000202, 0.00015355499999999966, 0.00015265299999999912, 0.00015263900000000302, 0.0001534860000000013, 0.0001526119999999999, 0.00015281899999999848, 0.00015323600000000104, 0.0001526950000000013, 0.00015277799999999925, 0.00015313900000000005, 0.0001531110000000009, 0.00015290299999999937, 0.00015283299999999805, 0.00015313900000000005, 0.00015337500000000073, 0.00015290299999999937, 0.00015331999999999846, 0.00015344500000000205, 0.00015320900000000137, 0.0001530560000000021, 0.00015280499999999891, 0.0001534439999999991, 0.0001532370000000005, 0.00015256899999999823, 0.00015283300000000152, 0.00015258300000000127, 0.0001529439999999986, 0.00015313900000000005, 0.0001528059999999984, 0.0001527500000000001, 0.00015284699999999762, 0.00015301399999999993, 0.00015327799999999975, 0.00015287500000000023, 0.00015287499999999676, 0.0001533059999999989, 0.0001528059999999984, 0.0001533890000000003, 0.00015280600000000186, 0.0001529860000000008, 0.00015262499999999998, 0.00015301399999999993, 0.0001529730000000007, 0.00015344500000000205, 0.00015327799999999975, 0.00015281999999999796]</msg>
<status status="PASS" starttime="20201029 18:18:49.900" endtime="20201029 18:18:49.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.895" endtime="20201029 18:18:49.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.907" endtime="20201029 18:18:49.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.905" endtime="20201029 18:18:49.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.904" endtime="20201029 18:18:49.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.546" endtime="20201029 18:18:49.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.545" endtime="20201029 18:18:49.928"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.936" endtime="20201029 18:18:49.957"></status>
</kw>
<msg timestamp="20201029 18:18:49.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.934" endtime="20201029 18:18:49.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.958" endtime="20201029 18:18:49.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.961" endtime="20201029 18:18:49.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.932" endtime="20201029 18:18:49.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.930" endtime="20201029 18:18:49.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.970" endtime="20201029 18:18:50.255"></status>
</kw>
<msg timestamp="20201029 18:18:50.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.968" endtime="20201029 18:18:50.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.259" endtime="20201029 18:18:50.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.267" endtime="20201029 18:18:50.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.966" endtime="20201029 18:18:50.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.964" endtime="20201029 18:18:50.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.273" level="INFO">${RESULT} = [{'diff': 0.00015394499999999908}, {'diff': 0.0001539309999999995}, {'diff': 0.00015409699999999887}, {'diff': 0.00015381899999999948}, {'diff': 0.00015393000000000004}, {'diff': 0.0001538750000000012...</msg>
<status status="PASS" starttime="20201029 18:18:50.270" endtime="20201029 18:18:50.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.278" level="INFO">${ACCURACY} = {'diff': [0.00015394499999999908, 0.0001539309999999995, 0.00015409699999999887, 0.00015381899999999948, 0.00015393000000000004, 0.00015387500000000123, 0.00015391600000000047, 0.00015363900000000055,...</msg>
<status status="PASS" starttime="20201029 18:18:50.274" endtime="20201029 18:18:50.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.282" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.281" endtime="20201029 18:18:50.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.285" level="INFO">VALUE: [0.00015394499999999908, 0.0001539309999999995, 0.00015409699999999887, 0.00015381899999999948, 0.00015393000000000004, 0.00015387500000000123, 0.00015391600000000047, 0.00015363900000000055, 0.0001539999999999979, 0.00015423599999999857, 0.0001536669999999997, 0.00015361099999999794, 0.0001540699999999992, 0.0001536799999999998, 0.00015401300000000145, 0.00015418099999999976, 0.0001541800000000003, 0.00015440300000000087, 0.00015369399999999936, 0.00015354199999999957, 0.00015387500000000123, 0.0001537219999999985, 0.00015386100000000166, 0.00015436100000000216, 0.0001540690000000032, 0.00015405599999999964, 0.0001541950000000028, 0.00015444499999999958, 0.00015387499999999776, 0.00015387500000000123, 0.0001542500000000016, 0.00015405599999999964, 0.00015455500000000066, 0.00015398599999999832, 0.00015373600000000154, 0.00015355599999999914, 0.00015379199999999982, 0.0001539439999999996, 0.0001542500000000016, 0.00015412500000000148, 0.00015419399999999986, 0.00015369399999999936, 0.0001536669999999997, 0.00015429200000000032, 0.0001545829999999998, 0.00015387500000000123, 0.00015363899999999708, 0.00015356899999999923, 0.00015438799999999836, 0.00015419499999999933]</msg>
<status status="PASS" starttime="20201029 18:18:50.283" endtime="20201029 18:18:50.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.279" endtime="20201029 18:18:50.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.294" endtime="20201029 18:18:50.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.292" endtime="20201029 18:18:50.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.291" endtime="20201029 18:18:50.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.929" endtime="20201029 18:18:50.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.928" endtime="20201029 18:18:50.315"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.323" endtime="20201029 18:18:50.344"></status>
</kw>
<msg timestamp="20201029 18:18:50.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.322" endtime="20201029 18:18:50.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.345" endtime="20201029 18:18:50.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.348" endtime="20201029 18:18:50.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.319" endtime="20201029 18:18:50.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.317" endtime="20201029 18:18:50.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.356" endtime="20201029 18:18:50.644"></status>
</kw>
<msg timestamp="20201029 18:18:50.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.355" endtime="20201029 18:18:50.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.648" endtime="20201029 18:18:50.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.656" endtime="20201029 18:18:50.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.353" endtime="20201029 18:18:50.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.351" endtime="20201029 18:18:50.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.663" level="INFO">${RESULT} = [{'diff': 0.00015555500000000166}, {'diff': 0.000155222}, {'diff': 0.00015497299999999922}, {'diff': 0.0001553890000000023}, {'diff': 0.00015541600000000197}, {'diff': 0.00015533400000000003}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:18:50.660" endtime="20201029 18:18:50.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.667" level="INFO">${ACCURACY} = {'diff': [0.00015555500000000166, 0.000155222, 0.00015497299999999922, 0.0001553890000000023, 0.00015541600000000197, 0.00015533400000000003, 0.00015486100000000266, 0.00015495800000000018, 0.00015502...</msg>
<status status="PASS" starttime="20201029 18:18:50.664" endtime="20201029 18:18:50.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.671" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.670" endtime="20201029 18:18:50.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.673" level="INFO">VALUE: [0.00015555500000000166, 0.000155222, 0.00015497299999999922, 0.0001553890000000023, 0.00015541600000000197, 0.00015533400000000003, 0.00015486100000000266, 0.00015495800000000018, 0.0001550280000000015, 0.00015474999999999864, 0.0001553890000000023, 0.00015547299999999972, 0.00015500000000000236, 0.0001554999999999994, 0.00015491600000000147, 0.00015512499999999901, 0.00015476400000000168, 0.0001549440000000006, 0.00015513899999999858, 0.00015558400000000028, 0.00015469400000000036, 0.0001551379999999991, 0.00015505600000000064, 0.00015484699999999962, 0.00015497199999999975, 0.0001545829999999998, 0.00015466699999999722, 0.00015455600000000014, 0.00015476400000000168, 0.00015537499999999926, 0.00015512499999999901, 0.0001550830000000003, 0.00015543099999999754, 0.00015494500000000008, 0.00015481899999999701, 0.00015495800000000018, 0.00015463900000000155, 0.00015490300000000137, 0.000155431000000001, 0.00015537499999999926, 0.00015469499999999983, 0.00015545800000000068, 0.00015516699999999772, 0.0001547639999999982, 0.0001552639999999987, 0.00015515300000000162, 0.00015487499999999876, 0.000155528000000002, 0.00015469400000000036, 0.00015472299999999897]</msg>
<status status="PASS" starttime="20201029 18:18:50.672" endtime="20201029 18:18:50.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.668" endtime="20201029 18:18:50.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.678" endtime="20201029 18:18:50.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.677" endtime="20201029 18:18:50.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.676" endtime="20201029 18:18:50.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.315" endtime="20201029 18:18:50.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.315" endtime="20201029 18:18:50.699"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.707" endtime="20201029 18:18:50.729"></status>
</kw>
<msg timestamp="20201029 18:18:50.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.706" endtime="20201029 18:18:50.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.731" endtime="20201029 18:18:50.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.733" endtime="20201029 18:18:50.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.703" endtime="20201029 18:18:50.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.701" endtime="20201029 18:18:50.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.742" endtime="20201029 18:18:51.028"></status>
</kw>
<msg timestamp="20201029 18:18:51.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.741" endtime="20201029 18:18:51.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.032" endtime="20201029 18:18:51.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.040" endtime="20201029 18:18:51.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.738" endtime="20201029 18:18:51.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.736" endtime="20201029 18:18:51.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.046" level="INFO">${RESULT} = [{'diff': 0.00015576299999999974}, {'diff': 0.00015629199999999885}, {'diff': 0.00015647200000000125}, {'diff': 0.00015572199999999703}, {'diff': 0.0001563890000000033}, {'diff': 0.0001563610000000007...</msg>
<status status="PASS" starttime="20201029 18:18:51.043" endtime="20201029 18:18:51.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.050" level="INFO">${ACCURACY} = {'diff': [0.00015576299999999974, 0.00015629199999999885, 0.00015647200000000125, 0.00015572199999999703, 0.0001563890000000033, 0.0001563610000000007, 0.00015640300000000287, 0.00015615299999999915, ...</msg>
<status status="PASS" starttime="20201029 18:18:51.047" endtime="20201029 18:18:51.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.055" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.054" endtime="20201029 18:18:51.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.057" level="INFO">VALUE: [0.00015576299999999974, 0.00015629199999999885, 0.00015647200000000125, 0.00015572199999999703, 0.0001563890000000033, 0.0001563610000000007, 0.00015640300000000287, 0.00015615299999999915, 0.0001560419999999986, 0.00015568100000000126, 0.00015605500000000216, 0.00015634700000000112, 0.00015588899999999933, 0.0001562639999999997, 0.00015559700000000037, 0.00015637500000000026, 0.00015634700000000112, 0.00015648599999999735, 0.00015566599999999875, 0.00015570800000000093, 0.0001559999999999999, 0.0001559310000000015, 0.00015597200000000075, 0.0001557090000000004, 0.0001558890000000028, 0.00015625000000000014, 0.00015654200000000257, 0.00015637500000000026, 0.0001564440000000021, 0.00015581899999999801, 0.00015576299999999974, 0.00015597200000000075, 0.00015626300000000024, 0.00015605600000000164, 0.00015612500000000001, 0.00015631899999999851, 0.00015606900000000173, 0.00015588899999999933, 0.00015561099999999994, 0.0001559999999999999, 0.00015619499999999786, 0.0001563890000000033, 0.00015637500000000026, 0.00015641699999999897, 0.00015582000000000096, 0.00015633400000000103, 0.0001559999999999999, 0.0001557639999999992, 0.0001560830000000013, 0.00015638899999999983]</msg>
<status status="PASS" starttime="20201029 18:18:51.056" endtime="20201029 18:18:51.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.051" endtime="20201029 18:18:51.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.063" endtime="20201029 18:18:51.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.061" endtime="20201029 18:18:51.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.060" endtime="20201029 18:18:51.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.700" endtime="20201029 18:18:51.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.699" endtime="20201029 18:18:51.083"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.092" endtime="20201029 18:18:51.113"></status>
</kw>
<msg timestamp="20201029 18:18:51.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.091" endtime="20201029 18:18:51.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.115" endtime="20201029 18:18:51.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.117" endtime="20201029 18:18:51.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.088" endtime="20201029 18:18:51.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.086" endtime="20201029 18:18:51.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.126" endtime="20201029 18:18:51.412"></status>
</kw>
<msg timestamp="20201029 18:18:51.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:51.124" endtime="20201029 18:18:51.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:51.416" endtime="20201029 18:18:51.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.424" endtime="20201029 18:18:51.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.122" endtime="20201029 18:18:51.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.120" endtime="20201029 18:18:51.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.431" level="INFO">${RESULT} = [{'diff': 0.00015715300000000015}, {'diff': 0.0001572640000000007}, {'diff': 0.00015687500000000076}, {'diff': 0.00015745900000000215}, {'diff': 0.00015744399999999964}, {'diff': 0.0001567640000000002...</msg>
<status status="PASS" starttime="20201029 18:18:51.428" endtime="20201029 18:18:51.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.435" level="INFO">${ACCURACY} = {'diff': [0.00015715300000000015, 0.0001572640000000007, 0.00015687500000000076, 0.00015745900000000215, 0.00015744399999999964, 0.0001567640000000002, 0.00015751400000000096, 0.0001571939999999994, 0...</msg>
<status status="PASS" starttime="20201029 18:18:51.432" endtime="20201029 18:18:51.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.440" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.439" endtime="20201029 18:18:51.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.442" level="INFO">VALUE: [0.00015715300000000015, 0.0001572640000000007, 0.00015687500000000076, 0.00015745900000000215, 0.00015744399999999964, 0.0001567640000000002, 0.00015751400000000096, 0.0001571939999999994, 0.00015693099999999904, 0.00015690200000000043, 0.00015717999999999982, 0.00015748599999999835, 0.00015723600000000157, 0.00015693099999999904, 0.00015661100000000094, 0.00015699999999999742, 0.0001567640000000002, 0.00015663900000000008, 0.00015677799999999978, 0.0001567220000000015, 0.0001569029999999999, 0.0001573610000000017, 0.00015654099999999962, 0.00015673600000000107, 0.00015744399999999964, 0.0001572359999999981, 0.00015747199999999878, 0.00015712499999999754, 0.0001568610000000012, 0.00015711100000000144, 0.00015652799999999953, 0.00015717999999999982, 0.00015711100000000144, 0.0001574030000000004, 0.00015665200000000018, 0.00015711100000000144, 0.000156916, 0.00015709700000000187, 0.00015675000000000064, 0.00015662500000000051, 0.0001569029999999999, 0.00015669499999999836, 0.00015679199999999935, 0.00015716600000000025, 0.00015661200000000042, 0.00015688900000000033, 0.00015666699999999922, 0.00015712500000000101, 0.00015736099999999822, 0.0001570000000000009]</msg>
<status status="PASS" starttime="20201029 18:18:51.441" endtime="20201029 18:18:51.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.436" endtime="20201029 18:18:51.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.447" endtime="20201029 18:18:51.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.445" endtime="20201029 18:18:51.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.444" endtime="20201029 18:18:51.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.084" endtime="20201029 18:18:51.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.084" endtime="20201029 18:18:51.468"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.476" endtime="20201029 18:18:51.497"></status>
</kw>
<msg timestamp="20201029 18:18:51.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.475" endtime="20201029 18:18:51.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.499" endtime="20201029 18:18:51.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.501" endtime="20201029 18:18:51.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.472" endtime="20201029 18:18:51.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.470" endtime="20201029 18:18:51.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.510" endtime="20201029 18:18:51.797"></status>
</kw>
<msg timestamp="20201029 18:18:51.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.508" endtime="20201029 18:18:51.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.801" endtime="20201029 18:18:51.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.809" endtime="20201029 18:18:51.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.506" endtime="20201029 18:18:51.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.504" endtime="20201029 18:18:51.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.816" level="INFO">${RESULT} = [{'diff': 0.0001585000000000024}, {'diff': 0.00015761100000000194}, {'diff': 0.00015832}, {'diff': 0.00015813900000000158}, {'diff': 0.00015763900000000108}, {'diff': 0.00015795899999999918}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:18:51.813" endtime="20201029 18:18:51.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.820" level="INFO">${ACCURACY} = {'diff': [0.0001585000000000024, 0.00015761100000000194, 0.00015832, 0.00015813900000000158, 0.00015763900000000108, 0.00015795899999999918, 0.00015775000000000164, 0.00015811099999999897, 0.000158125...</msg>
<status status="PASS" starttime="20201029 18:18:51.817" endtime="20201029 18:18:51.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.824" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.823" endtime="20201029 18:18:51.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.826" level="INFO">VALUE: [0.0001585000000000024, 0.00015761100000000194, 0.00015832, 0.00015813900000000158, 0.00015763900000000108, 0.00015795899999999918, 0.00015775000000000164, 0.00015811099999999897, 0.00015812500000000201, 0.00015775000000000164, 0.00015844400000000064, 0.00015763799999999814, 0.00015755599999999967, 0.0001578610000000022, 0.0001584169999999975, 0.00015770799999999946, 0.00015765300000000065, 0.00015797299999999875, 0.00015795900000000265, 0.0001576939999999999, 0.00015847199999999978, 0.00015844400000000064, 0.00015794400000000014, 0.00015841700000000097, 0.00015827800000000128, 0.00015766599999999728, 0.00015797199999999928, 0.00015772199999999903, 0.00015836099999999922, 0.00015848599999999935, 0.0001580969999999994, 0.00015758299999999933, 0.00015772199999999903, 0.00015848600000000282, 0.00015787500000000176, 0.00015836099999999922, 0.00015786099999999872, 0.00015751400000000096, 0.00015768100000000326, 0.0001581810000000003, 0.0001578749999999983, 0.00015812499999999854, 0.00015768000000000032, 0.00015806900000000026, 0.00015755599999999967, 0.000157916000000001, 0.00015831899999999705, 0.0001577359999999986, 0.00015795899999999918, 0.00015829200000000085]</msg>
<status status="PASS" starttime="20201029 18:18:51.825" endtime="20201029 18:18:51.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.821" endtime="20201029 18:18:51.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.831" endtime="20201029 18:18:51.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.830" endtime="20201029 18:18:51.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.829" endtime="20201029 18:18:51.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.469" endtime="20201029 18:18:51.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.468" endtime="20201029 18:18:51.852"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.861" endtime="20201029 18:18:51.882"></status>
</kw>
<msg timestamp="20201029 18:18:51.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.859" endtime="20201029 18:18:51.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.884" endtime="20201029 18:18:51.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.886" endtime="20201029 18:18:51.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.856" endtime="20201029 18:18:51.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.854" endtime="20201029 18:18:51.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.895" endtime="20201029 18:18:52.179"></status>
</kw>
<msg timestamp="20201029 18:18:52.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.894" endtime="20201029 18:18:52.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.184" endtime="20201029 18:18:52.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.192" endtime="20201029 18:18:52.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.891" endtime="20201029 18:18:52.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.890" endtime="20201029 18:18:52.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.198" level="INFO">${RESULT} = [{'diff': 0.0001589719999999968}, {'diff': 0.00015912499999999954}, {'diff': 0.00015933300000000108}, {'diff': 0.00015927699999999934}, {'diff': 0.00015924999999999967}, {'diff': 0.0001585409999999981...</msg>
<status status="PASS" starttime="20201029 18:18:52.195" endtime="20201029 18:18:52.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.202" level="INFO">${ACCURACY} = {'diff': [0.0001589719999999968, 0.00015912499999999954, 0.00015933300000000108, 0.00015927699999999934, 0.00015924999999999967, 0.00015854099999999816, 0.00015867999999999785, 0.00015929200000000185,...</msg>
<status status="PASS" starttime="20201029 18:18:52.199" endtime="20201029 18:18:52.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.206" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.205" endtime="20201029 18:18:52.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.209" level="INFO">VALUE: [0.0001589719999999968, 0.00015912499999999954, 0.00015933300000000108, 0.00015927699999999934, 0.00015924999999999967, 0.00015854099999999816, 0.00015867999999999785, 0.00015929200000000185, 0.000158916000000002, 0.00015916599999999878, 0.00015861099999999947, 0.00015908300000000083, 0.00015879200000000135, 0.00015918000000000182, 0.0001594169999999985, 0.0001594160000000025, 0.00015852800000000153, 0.00015933300000000108, 0.0001590420000000016, 0.00015880600000000092, 0.00015911099999999997, 0.00015948600000000035, 0.00015944399999999817, 0.0001595139999999995, 0.00015949999999999992, 0.0001586810000000008, 0.00015899999999999942, 0.00015917999999999835, 0.00015881900000000101, 0.00015924999999999967, 0.0001586940000000009, 0.00015945900000000068, 0.0001590420000000016, 0.00015857000000000024, 0.00015918099999999782, 0.000159320000000001, 0.00015904199999999813, 0.0001592360000000001, 0.0001594580000000012, 0.00015869399999999742, 0.0001593749999999998, 0.000158916999999998, 0.0001590550000000017, 0.0001593749999999998, 0.00015898599999999985, 0.00015934700000000065, 0.00015916600000000225, 0.00015929200000000185, 0.00015899999999999942, 0.0001590689999999978]</msg>
<status status="PASS" starttime="20201029 18:18:52.207" endtime="20201029 18:18:52.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.203" endtime="20201029 18:18:52.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.214" endtime="20201029 18:18:52.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.213" endtime="20201029 18:18:52.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.212" endtime="20201029 18:18:52.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.853" endtime="20201029 18:18:52.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.852" endtime="20201029 18:18:52.235"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.244" endtime="20201029 18:18:52.265"></status>
</kw>
<msg timestamp="20201029 18:18:52.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.242" endtime="20201029 18:18:52.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.266" endtime="20201029 18:18:52.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.269" endtime="20201029 18:18:52.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.240" endtime="20201029 18:18:52.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.238" endtime="20201029 18:18:52.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.278" endtime="20201029 18:18:52.569"></status>
</kw>
<msg timestamp="20201029 18:18:52.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.276" endtime="20201029 18:18:52.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.573" endtime="20201029 18:18:52.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.581" endtime="20201029 18:18:52.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.274" endtime="20201029 18:18:52.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.272" endtime="20201029 18:18:52.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.587" level="INFO">${RESULT} = [{'diff': 0.00016019500000000186}, {'diff': 0.00015997200000000128}, {'diff': 0.00016052700000000059}, {'diff': 0.00016040299999999993}, {'diff': 0.00016034700000000165}, {'diff': 0.000160277999999999...</msg>
<status status="PASS" starttime="20201029 18:18:52.584" endtime="20201029 18:18:52.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.592" level="INFO">${ACCURACY} = {'diff': [0.00016019500000000186, 0.00015997200000000128, 0.00016052700000000059, 0.00016040299999999993, 0.00016034700000000165, 0.0001602779999999998, 0.0001596940000000019, 0.00015966699999999875, ...</msg>
<status status="PASS" starttime="20201029 18:18:52.588" endtime="20201029 18:18:52.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.597" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.596" endtime="20201029 18:18:52.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.599" level="INFO">VALUE: [0.00016019500000000186, 0.00015997200000000128, 0.00016052700000000059, 0.00016040299999999993, 0.00016034700000000165, 0.0001602779999999998, 0.0001596940000000019, 0.00015966699999999875, 0.0001599719999999978, 0.0001601940000000024, 0.00016007000000000174, 0.0001604299999999996, 0.00015993099999999857, 0.00016000000000000042, 0.000159610999999997, 0.00016006999999999827, 0.0001597360000000006, 0.0001604299999999996, 0.0001604719999999983, 0.00016043099999999907, 0.0001601520000000002, 0.0001603750000000008, 0.0001595970000000009, 0.00016030600000000242, 0.00016036099999999776, 0.0001605550000000032, 0.00016048600000000135, 0.00015998599999999738, 0.00015968099999999832, 0.00016048600000000135, 0.00016047299999999778, 0.00015976399999999974, 0.00016011199999999698, 0.00016030600000000242, 0.00016018000000000282, 0.00016005600000000217, 0.00015998599999999738, 0.00015981900000000202, 0.00015962500000000004, 0.00016029200000000285, 0.00015986100000000072, 0.00015988899999999986, 0.00015975000000000017, 0.00015975000000000017, 0.00016050000000000092, 0.00016041600000000003, 0.0001605140000000005, 0.00016050000000000092, 0.00015980500000000245, 0.00016008300000000183]</msg>
<status status="PASS" starttime="20201029 18:18:52.598" endtime="20201029 18:18:52.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.593" endtime="20201029 18:18:52.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.604" endtime="20201029 18:18:52.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.602" endtime="20201029 18:18:52.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.601" endtime="20201029 18:18:52.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.236" endtime="20201029 18:18:52.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.235" endtime="20201029 18:18:52.625"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.633" endtime="20201029 18:18:52.654"></status>
</kw>
<msg timestamp="20201029 18:18:52.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.632" endtime="20201029 18:18:52.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.656" endtime="20201029 18:18:52.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.658" endtime="20201029 18:18:52.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.629" endtime="20201029 18:18:52.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.627" endtime="20201029 18:18:52.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.667" endtime="20201029 18:18:52.960"></status>
</kw>
<msg timestamp="20201029 18:18:52.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:52.666" endtime="20201029 18:18:52.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:52.964" endtime="20201029 18:18:52.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.972" endtime="20201029 18:18:52.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.663" endtime="20201029 18:18:52.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.661" endtime="20201029 18:18:52.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.979" level="INFO">${RESULT} = [{'diff': 0.0001614170000000005}, {'diff': 0.00016081999999999902}, {'diff': 0.0001610279999999971}, {'diff': 0.00016126399999999777}, {'diff': 0.000160610999999998}, {'diff': 0.00016155499999999726},...</msg>
<status status="PASS" starttime="20201029 18:18:52.976" endtime="20201029 18:18:52.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.983" level="INFO">${ACCURACY} = {'diff': [0.0001614170000000005, 0.00016081999999999902, 0.0001610279999999971, 0.00016126399999999777, 0.000160610999999998, 0.00016155499999999726, 0.00016148599999999888, 0.0001612910000000009, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:52.980" endtime="20201029 18:18:52.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.987" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.986" endtime="20201029 18:18:52.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.989" level="INFO">VALUE: [0.0001614170000000005, 0.00016081999999999902, 0.0001610279999999971, 0.00016126399999999777, 0.000160610999999998, 0.00016155499999999726, 0.00016148599999999888, 0.0001612910000000009, 0.00016129200000000038, 0.00016105500000000023, 0.00016123599999999863, 0.0001608620000000012, 0.00016097200000000228, 0.00016080599999999945, 0.00016063900000000061, 0.00016080599999999945, 0.00016136100000000222, 0.00016116600000000078, 0.00016104100000000066, 0.00016099999999999795, 0.0001606810000000028, 0.00016130599999999995, 0.00016079199999999988, 0.00016091600000000053, 0.00016115300000000068, 0.00016061100000000147, 0.00016080499999999998, 0.0001614170000000005, 0.00016054199999999963, 0.00016122299999999853, 0.00016122199999999906, 0.0001604719999999983, 0.00016075000000000117, 0.00016091600000000053, 0.00016050000000000092, 0.0001607910000000004, 0.00016136099999999876, 0.00016118000000000035, 0.000160707999999999, 0.00016130599999999995, 0.00016097200000000228, 0.00016111100000000197, 0.00016116600000000078, 0.00016152800000000106, 0.0001605140000000005, 0.00016073599999999813, 0.00016059699999999844, 0.00016148600000000235, 0.0001608339999999986, 0.00016129200000000038]</msg>
<status status="PASS" starttime="20201029 18:18:52.988" endtime="20201029 18:18:52.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.983" endtime="20201029 18:18:52.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.994" endtime="20201029 18:18:53.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.993" endtime="20201029 18:18:53.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.992" endtime="20201029 18:18:53.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.626" endtime="20201029 18:18:53.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.625" endtime="20201029 18:18:53.015"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.024" endtime="20201029 18:18:53.046"></status>
</kw>
<msg timestamp="20201029 18:18:53.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.022" endtime="20201029 18:18:53.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.047" endtime="20201029 18:18:53.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.050" endtime="20201029 18:18:53.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.020" endtime="20201029 18:18:53.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.018" endtime="20201029 18:18:53.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.059" endtime="20201029 18:18:53.343"></status>
</kw>
<msg timestamp="20201029 18:18:53.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.057" endtime="20201029 18:18:53.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.348" endtime="20201029 18:18:53.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.356" endtime="20201029 18:18:53.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.055" endtime="20201029 18:18:53.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.053" endtime="20201029 18:18:53.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.362" level="INFO">${RESULT} = [{'diff': 0.00016254199999999816}, {'diff': 0.00016205599999999723}, {'diff': 0.00016180600000000045}, {'diff': 0.00016158299999999987}, {'diff': 0.000161610999999999}, {'diff': 0.00016216700000000125...</msg>
<status status="PASS" starttime="20201029 18:18:53.359" endtime="20201029 18:18:53.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.366" level="INFO">${ACCURACY} = {'diff': [0.00016254199999999816, 0.00016205599999999723, 0.00016180600000000045, 0.00016158299999999987, 0.000161610999999999, 0.00016216700000000125, 0.00016237499999999933, 0.00016154100000000116, ...</msg>
<status status="PASS" starttime="20201029 18:18:53.363" endtime="20201029 18:18:53.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.371" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.370" endtime="20201029 18:18:53.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.373" level="INFO">VALUE: [0.00016254199999999816, 0.00016205599999999723, 0.00016180600000000045, 0.00016158299999999987, 0.000161610999999999, 0.00016216700000000125, 0.00016237499999999933, 0.00016154100000000116, 0.00016158299999999987, 0.00016156999999999977, 0.0001624309999999976, 0.00016233300000000062, 0.00016172299999999903, 0.00016218100000000082, 0.00016223599999999963, 0.00016197299999999928, 0.0001616949999999999, 0.00016152699999999812, 0.0001622499999999992, 0.0001622499999999992, 0.00016186099999999926, 0.00016158299999999987, 0.00016254100000000216, 0.00016204200000000113, 0.00016211200000000245, 0.00016226400000000224, 0.00016180500000000098, 0.00016241699999999804, 0.00016245800000000074, 0.00016172199999999956, 0.0001623889999999989, 0.00016238799999999942, 0.00016204200000000113, 0.0001618750000000023, 0.00016217999999999788, 0.0001618750000000023, 0.00016194400000000067, 0.00016194400000000067, 0.00016241599999999856, 0.00016243100000000107, 0.00016159699999999944, 0.0001622499999999992, 0.00016248599999999988, 0.00016175000000000217, 0.00016168100000000032, 0.00016204200000000113, 0.00016190299999999797, 0.0001617769999999949, 0.00016234700000000019, 0.00016184699999999969]</msg>
<status status="PASS" starttime="20201029 18:18:53.372" endtime="20201029 18:18:53.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.367" endtime="20201029 18:18:53.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.379" endtime="20201029 18:18:53.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.377" endtime="20201029 18:18:53.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.376" endtime="20201029 18:18:53.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.016" endtime="20201029 18:18:53.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.015" endtime="20201029 18:18:53.399"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.410" endtime="20201029 18:18:53.431"></status>
</kw>
<msg timestamp="20201029 18:18:53.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.408" endtime="20201029 18:18:53.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.433" endtime="20201029 18:18:53.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.435" endtime="20201029 18:18:53.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.405" endtime="20201029 18:18:53.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.403" endtime="20201029 18:18:53.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.444" endtime="20201029 18:18:53.729"></status>
</kw>
<msg timestamp="20201029 18:18:53.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.443" endtime="20201029 18:18:53.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.733" endtime="20201029 18:18:53.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.741" endtime="20201029 18:18:53.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.440" endtime="20201029 18:18:53.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.438" endtime="20201029 18:18:53.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.748" level="INFO">${RESULT} = [{'diff': 0.00016313899999999965}, {'diff': 0.00016299999999999995}, {'diff': 0.00016268000000000185}, {'diff': 0.00016279200000000188}, {'diff': 0.00016283299999999765}, {'diff': 0.000162709000000000...</msg>
<status status="PASS" starttime="20201029 18:18:53.745" endtime="20201029 18:18:53.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.753" level="INFO">${ACCURACY} = {'diff': [0.00016313899999999965, 0.00016299999999999995, 0.00016268000000000185, 0.00016279200000000188, 0.00016283299999999765, 0.00016270900000000046, 0.00016291599999999906, 0.0001625140000000025,...</msg>
<status status="PASS" starttime="20201029 18:18:53.749" endtime="20201029 18:18:53.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.757" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.756" endtime="20201029 18:18:53.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.759" level="INFO">VALUE: [0.00016313899999999965, 0.00016299999999999995, 0.00016268000000000185, 0.00016279200000000188, 0.00016283299999999765, 0.00016270900000000046, 0.00016291599999999906, 0.0001625140000000025, 0.0001626659999999988, 0.00016317999999999888, 0.0001632080000000015, 0.00016272200000000056, 0.00016298600000000038, 0.00016287499999999983, 0.00016337500000000033, 0.00016279200000000188, 0.00016298600000000038, 0.00016284700000000069, 0.00016344500000000164, 0.00016298600000000038, 0.00016291600000000253, 0.00016265300000000218, 0.0001634720000000013, 0.00016313899999999965, 0.0001627219999999971, 0.00016252699999999912, 0.00016312500000000008, 0.00016276400000000274, 0.0001633889999999999, 0.000162611, 0.00016281899999999808, 0.00016298600000000038, 0.00016286100000000026, 0.00016337500000000033, 0.00016323599999999716, 0.0001628889999999994, 0.00016266699999999829, 0.00016318100000000182, 0.00016272300000000003, 0.0001630409999999992, 0.00016322200000000106, 0.00016350000000000392, 0.0001628340000000006, 0.00016331900000000205, 0.00016326400000000324, 0.00016252800000000206, 0.00016297300000000375, 0.0001632769999999964, 0.00016316699999999879, 0.0001634580000000052]</msg>
<status status="PASS" starttime="20201029 18:18:53.758" endtime="20201029 18:18:53.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.753" endtime="20201029 18:18:53.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.764" endtime="20201029 18:18:53.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.763" endtime="20201029 18:18:53.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.762" endtime="20201029 18:18:53.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.400" endtime="20201029 18:18:53.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.400" endtime="20201029 18:18:53.785"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.794" endtime="20201029 18:18:53.815"></status>
</kw>
<msg timestamp="20201029 18:18:53.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.792" endtime="20201029 18:18:53.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.816" endtime="20201029 18:18:53.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.819" endtime="20201029 18:18:53.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.790" endtime="20201029 18:18:53.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.787" endtime="20201029 18:18:53.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.828" endtime="20201029 18:18:54.115"></status>
</kw>
<msg timestamp="20201029 18:18:54.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.826" endtime="20201029 18:18:54.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.119" endtime="20201029 18:18:54.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.127" endtime="20201029 18:18:54.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.824" endtime="20201029 18:18:54.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.822" endtime="20201029 18:18:54.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.133" level="INFO">${RESULT} = [{'diff': 0.00016398600000000138}, {'diff': 0.00016454200000000016}, {'diff': 0.00016441700000000004}, {'diff': 0.00016370799999999852}, {'diff': 0.00016420799999999902}, {'diff': 0.000164291999999999...</msg>
<status status="PASS" starttime="20201029 18:18:54.130" endtime="20201029 18:18:54.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.137" level="INFO">${ACCURACY} = {'diff': [0.00016398600000000138, 0.00016454200000000016, 0.00016441700000000004, 0.00016370799999999852, 0.00016420799999999902, 0.0001642919999999999, 0.00016445899999999875, 0.0001639439999999992, ...</msg>
<status status="PASS" starttime="20201029 18:18:54.134" endtime="20201029 18:18:54.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.142" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.141" endtime="20201029 18:18:54.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.144" level="INFO">VALUE: [0.00016398600000000138, 0.00016454200000000016, 0.00016441700000000004, 0.00016370799999999852, 0.00016420799999999902, 0.0001642919999999999, 0.00016445899999999875, 0.0001639439999999992, 0.00016362500000000058, 0.0001635560000000022, 0.00016365200000000024, 0.00016365299999999972, 0.00016430599999999948, 0.0001642500000000012, 0.00016436099999999829, 0.00016383300000000212, 0.00016429100000000044, 0.00016362500000000058, 0.00016393100000000257, 0.00016362500000000058, 0.00016386099999999779, 0.00016379099999999994, 0.0001644859999999984, 0.00016390299999999997, 0.0001639720000000018, 0.0001644859999999984, 0.000163708000000002, 0.0001644309999999996, 0.00016349999999999698, 0.00016416699999999979, 0.0001640829999999989, 0.00016386099999999779, 0.00016359700000000144, 0.00016441600000000056, 0.0001637919999999994, 0.00016391600000000006, 0.00016386100000000126, 0.00016448600000000188, 0.00016362500000000058, 0.0001639720000000018, 0.00016366699999999929, 0.00016397300000000128, 0.00016429100000000044, 0.0001636659999999998, 0.00016391699999999954, 0.00016391600000000006, 0.00016361099999999754, 0.00016433399999999862, 0.00016448700000000135, 0.00016441600000000056]</msg>
<status status="PASS" starttime="20201029 18:18:54.143" endtime="20201029 18:18:54.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.138" endtime="20201029 18:18:54.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.149" endtime="20201029 18:18:54.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.148" endtime="20201029 18:18:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.146" endtime="20201029 18:18:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.786" endtime="20201029 18:18:54.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.785" endtime="20201029 18:18:54.170"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.178" endtime="20201029 18:18:54.201"></status>
</kw>
<msg timestamp="20201029 18:18:54.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.177" endtime="20201029 18:18:54.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.203" endtime="20201029 18:18:54.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.206" endtime="20201029 18:18:54.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.174" endtime="20201029 18:18:54.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.172" endtime="20201029 18:18:54.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.215" endtime="20201029 18:18:54.499"></status>
</kw>
<msg timestamp="20201029 18:18:54.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.213" endtime="20201029 18:18:54.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.503" endtime="20201029 18:18:54.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.511" endtime="20201029 18:18:54.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.210" endtime="20201029 18:18:54.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.209" endtime="20201029 18:18:54.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.518" level="INFO">${RESULT} = [{'diff': 0.00016555600000000073}, {'diff': 0.00016480599999999998}, {'diff': 0.0001654310000000006}, {'diff': 0.0001649859999999989}, {'diff': 0.00016480599999999998}, {'diff': 0.00016484699999999922...</msg>
<status status="PASS" starttime="20201029 18:18:54.515" endtime="20201029 18:18:54.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.522" level="INFO">${ACCURACY} = {'diff': [0.00016555600000000073, 0.00016480599999999998, 0.0001654310000000006, 0.0001649859999999989, 0.00016480599999999998, 0.00016484699999999922, 0.0001650410000000012, 0.00016469399999999995, 0...</msg>
<status status="PASS" starttime="20201029 18:18:54.519" endtime="20201029 18:18:54.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.526" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.525" endtime="20201029 18:18:54.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.529" level="INFO">VALUE: [0.00016555600000000073, 0.00016480599999999998, 0.0001654310000000006, 0.0001649859999999989, 0.00016480599999999998, 0.00016484699999999922, 0.0001650410000000012, 0.00016469399999999995, 0.00016547199999999984, 0.00016511099999999904, 0.00016555600000000073, 0.00016459700000000244, 0.0001650829999999999, 0.00016487500000000183, 0.00016512500000000208, 0.00016509699999999947, 0.00016488899999999793, 0.00016527700000000187, 0.00016466700000000029, 0.00016527700000000187, 0.00016545800000000027, 0.00016505500000000076, 0.0001647500000000017, 0.00016522300000000253, 0.0001647500000000017, 0.00016551400000000202, 0.00016543000000000113, 0.0001654859999999994, 0.00016548600000000288, 0.00016487499999999836, 0.00016534699999999972, 0.00016477799999999737, 0.00016469399999999995, 0.00016534699999999972, 0.00016502699999999815, 0.0001645980000000019, 0.0001654859999999994, 0.00016534700000000319, 0.00016508399999999937, 0.00016520800000000002, 0.00016495800000000324, 0.00016509799999999894, 0.00016498600000000238, 0.00016479100000000094, 0.0001653890000000019, 0.0001652639999999983, 0.0001648890000000014, 0.00016519499999999993, 0.00016495799999999977, 0.00016508300000000337]</msg>
<status status="PASS" starttime="20201029 18:18:54.527" endtime="20201029 18:18:54.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.523" endtime="20201029 18:18:54.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.534" endtime="20201029 18:18:54.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.533" endtime="20201029 18:18:54.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.532" endtime="20201029 18:18:54.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.171" endtime="20201029 18:18:54.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.170" endtime="20201029 18:18:54.555"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.564" endtime="20201029 18:18:54.585"></status>
</kw>
<msg timestamp="20201029 18:18:54.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.562" endtime="20201029 18:18:54.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.587" endtime="20201029 18:18:54.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.589" endtime="20201029 18:18:54.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.560" endtime="20201029 18:18:54.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.558" endtime="20201029 18:18:54.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.598" endtime="20201029 18:18:54.902"></status>
</kw>
<msg timestamp="20201029 18:18:54.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.596" endtime="20201029 18:18:54.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.906" endtime="20201029 18:18:54.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.914" endtime="20201029 18:18:54.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.594" endtime="20201029 18:18:54.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.592" endtime="20201029 18:18:54.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.921" level="INFO">${RESULT} = [{'diff': 0.0001659020000000025}, {'diff': 0.00016640199999999952}, {'diff': 0.0001659029999999985}, {'diff': 0.00016563899999999868}, {'diff': 0.00016595800000000077}, {'diff': 0.0001658479999999997}...</msg>
<status status="PASS" starttime="20201029 18:18:54.918" endtime="20201029 18:18:54.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.926" level="INFO">${ACCURACY} = {'diff': [0.0001659020000000025, 0.00016640199999999952, 0.0001659029999999985, 0.00016563899999999868, 0.00016595800000000077, 0.0001658479999999997, 0.00016645900000000075, 0.0001656799999999979, 0....</msg>
<status status="PASS" starttime="20201029 18:18:54.922" endtime="20201029 18:18:54.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.930" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.929" endtime="20201029 18:18:54.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.933" level="INFO">VALUE: [0.0001659020000000025, 0.00016640199999999952, 0.0001659029999999985, 0.00016563899999999868, 0.00016595800000000077, 0.0001658479999999997, 0.00016645900000000075, 0.0001656799999999979, 0.0001660830000000009, 0.00016620800000000102, 0.0001657220000000001, 0.00016609799999999994, 0.00016559699999999997, 0.00016651399999999955, 0.00016591700000000154, 0.0001662090000000005, 0.00016591699999999807, 0.00016627799999999887, 0.00016601399999999905, 0.00016556999999999683, 0.0001664579999999978, 0.00016569500000000043, 0.00016580499999999804, 0.0001664159999999991, 0.00016638899999999943, 0.00016647199999999737, 0.00016559700000000344, 0.00016633299999999768, 0.00016647199999999737, 0.00016633400000000062, 0.00016629100000000244, 0.00016577799999999837, 0.0001659029999999985, 0.0001662920000000019, 0.00016602799999999862, 0.00016586099999999979, 0.0001654859999999994, 0.00016577700000000237, 0.00016613899999999918, 0.00016599999999999948, 0.0001661249999999996, 0.00016641699999999857, 0.00016570800000000052, 0.00016602799999999862, 0.0001660700000000008, 0.00016641699999999857, 0.0001662920000000019, 0.00016602799999999862, 0.00016602799999999862, 0.0001656249999999991]</msg>
<status status="PASS" starttime="20201029 18:18:54.931" endtime="20201029 18:18:54.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.927" endtime="20201029 18:18:54.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.938" endtime="20201029 18:18:54.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.936" endtime="20201029 18:18:54.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.935" endtime="20201029 18:18:54.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.556" endtime="20201029 18:18:54.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.555" endtime="20201029 18:18:54.959"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.967" endtime="20201029 18:18:54.989"></status>
</kw>
<msg timestamp="20201029 18:18:54.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.965" endtime="20201029 18:18:54.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.990" endtime="20201029 18:18:54.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.993" endtime="20201029 18:18:54.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.963" endtime="20201029 18:18:54.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.961" endtime="20201029 18:18:54.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.002" endtime="20201029 18:18:55.288"></status>
</kw>
<msg timestamp="20201029 18:18:55.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.000" endtime="20201029 18:18:55.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.293" endtime="20201029 18:18:55.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.301" endtime="20201029 18:18:55.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.998" endtime="20201029 18:18:55.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.996" endtime="20201029 18:18:55.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.307" level="INFO">${RESULT} = [{'diff': 0.0001674440000000027}, {'diff': 0.00016723600000000116}, {'diff': 0.00016733299999999868}, {'diff': 0.00016744500000000218}, {'diff': 0.0001669860000000009}, {'diff': 0.00016719499999999846...</msg>
<status status="PASS" starttime="20201029 18:18:55.304" endtime="20201029 18:18:55.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.311" level="INFO">${ACCURACY} = {'diff': [0.0001674440000000027, 0.00016723600000000116, 0.00016733299999999868, 0.00016744500000000218, 0.0001669860000000009, 0.00016719499999999846, 0.0001669310000000021, 0.00016691699999999907, 0...</msg>
<status status="PASS" starttime="20201029 18:18:55.308" endtime="20201029 18:18:55.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.316" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.315" endtime="20201029 18:18:55.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.318" level="INFO">VALUE: [0.0001674440000000027, 0.00016723600000000116, 0.00016733299999999868, 0.00016744500000000218, 0.0001669860000000009, 0.00016719499999999846, 0.0001669310000000021, 0.00016691699999999907, 0.00016687500000000036, 0.00016716599999999984, 0.00016679099999999947, 0.00016661100000000054, 0.00016729199999999944, 0.0001665549999999988, 0.00016719500000000193, 0.00016761099999999807, 0.0001668610000000008, 0.00016683299999999818, 0.0001669860000000009, 0.00016682000000000155, 0.00016655599999999826, 0.0001669860000000009, 0.00016730499999999954, 0.0001666250000000001, 0.00016651400000000302, 0.00016713900000000018, 0.00016694500000000168, 0.0001674999999999975, 0.00016729199999999944, 0.0001665830000000014, 0.0001673610000000013, 0.00016725000000000073, 0.00016702799999999962, 0.00016680600000000198, 0.00016670799999999805, 0.00016742999999999966, 0.00016751399999999708, 0.00016676400000000327, 0.00016713900000000018, 0.00016675000000000023, 0.00016711100000000104, 0.0001667220000000011, 0.00016687500000000036, 0.0001674999999999975, 0.00016691699999999907, 0.0001671799999999994, 0.00016719500000000193, 0.00016669400000000195, 0.0001667639999999998, 0.0001669310000000021]</msg>
<status status="PASS" starttime="20201029 18:18:55.317" endtime="20201029 18:18:55.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.312" endtime="20201029 18:18:55.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.329" endtime="20201029 18:18:55.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.328" endtime="20201029 18:18:55.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.326" endtime="20201029 18:18:55.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.959" endtime="20201029 18:18:55.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.959" endtime="20201029 18:18:55.350"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.359" endtime="20201029 18:18:55.381"></status>
</kw>
<msg timestamp="20201029 18:18:55.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.357" endtime="20201029 18:18:55.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.383" endtime="20201029 18:18:55.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.385" endtime="20201029 18:18:55.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.355" endtime="20201029 18:18:55.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.353" endtime="20201029 18:18:55.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.394" endtime="20201029 18:18:55.681"></status>
</kw>
<msg timestamp="20201029 18:18:55.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.393" endtime="20201029 18:18:55.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.685" endtime="20201029 18:18:55.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.693" endtime="20201029 18:18:55.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.390" endtime="20201029 18:18:55.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.389" endtime="20201029 18:18:55.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.700" level="INFO">${RESULT} = [{'diff': 0.00016818099999999989}, {'diff': 0.00016837500000000186}, {'diff': 0.00016801399999999758}, {'diff': 0.0001675830000000024}, {'diff': 0.00016765300000000025}, {'diff': 0.0001679589999999987...</msg>
<status status="PASS" starttime="20201029 18:18:55.697" endtime="20201029 18:18:55.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.704" level="INFO">${ACCURACY} = {'diff': [0.00016818099999999989, 0.00016837500000000186, 0.00016801399999999758, 0.0001675830000000024, 0.00016765300000000025, 0.00016795899999999878, 0.00016798599999999844, 0.00016769500000000243,...</msg>
<status status="PASS" starttime="20201029 18:18:55.701" endtime="20201029 18:18:55.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.708" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.707" endtime="20201029 18:18:55.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.711" level="INFO">VALUE: [0.00016818099999999989, 0.00016837500000000186, 0.00016801399999999758, 0.0001675830000000024, 0.00016765300000000025, 0.00016795899999999878, 0.00016798599999999844, 0.00016769500000000243, 0.0001683610000000023, 0.00016784799999999822, 0.00016775000000000123, 0.0001675129999999976, 0.00016798700000000139, 0.00016750000000000098, 0.00016766699999999982, 0.0001679449999999992, 0.00016765300000000025, 0.00016777800000000037, 0.00016801400000000105, 0.00016827800000000087, 0.00016843000000000066, 0.000168403000000001, 0.0001684860000000024, 0.0001683749999999984, 0.00016819499999999946, 0.00016815299999999728, 0.0001684299999999972, 0.00016783299999999918, 0.00016762499999999764, 0.00016783299999999918, 0.0001675830000000024, 0.00016765200000000077, 0.00016774999999999776, 0.00016756899999999936, 0.0001677640000000008, 0.00016830500000000054, 0.00016833399999999915, 0.00016851399999999808, 0.00016750000000000098, 0.000168306, 0.00016787500000000136, 0.0001682779999999974, 0.00016750000000000098, 0.00016833399999999915, 0.0001682229999999986, 0.0001675969999999985, 0.00016840300000000447, 0.00016787500000000483, 0.0001682220000000026, 0.0001683190000000001]</msg>
<status status="PASS" starttime="20201029 18:18:55.709" endtime="20201029 18:18:55.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.705" endtime="20201029 18:18:55.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.716" endtime="20201029 18:18:55.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.715" endtime="20201029 18:18:55.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.714" endtime="20201029 18:18:55.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.351" endtime="20201029 18:18:55.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.351" endtime="20201029 18:18:55.737"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.746" endtime="20201029 18:18:55.767"></status>
</kw>
<msg timestamp="20201029 18:18:55.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.744" endtime="20201029 18:18:55.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.769" endtime="20201029 18:18:55.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.771" endtime="20201029 18:18:55.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.742" endtime="20201029 18:18:55.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.740" endtime="20201029 18:18:55.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.780" endtime="20201029 18:18:56.066"></status>
</kw>
<msg timestamp="20201029 18:18:56.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.779" endtime="20201029 18:18:56.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.070" endtime="20201029 18:18:56.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.078" endtime="20201029 18:18:56.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.776" endtime="20201029 18:18:56.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.775" endtime="20201029 18:18:56.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.085" level="INFO">${RESULT} = [{'diff': 0.00016879200000000094}, {'diff': 0.0001689580000000003}, {'diff': 0.00016873600000000266}, {'diff': 0.00016915299999999828}, {'diff': 0.00016934700000000025}, {'diff': 0.0001692499999999992...</msg>
<status status="PASS" starttime="20201029 18:18:56.082" endtime="20201029 18:18:56.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.090" level="INFO">${ACCURACY} = {'diff': [0.00016879200000000094, 0.0001689580000000003, 0.00016873600000000266, 0.00016915299999999828, 0.00016934700000000025, 0.00016924999999999926, 0.00016933400000000015, 0.00016875000000000223,...</msg>
<status status="PASS" starttime="20201029 18:18:56.086" endtime="20201029 18:18:56.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.094" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.093" endtime="20201029 18:18:56.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.096" level="INFO">VALUE: [0.00016879200000000094, 0.0001689580000000003, 0.00016873600000000266, 0.00016915299999999828, 0.00016934700000000025, 0.00016924999999999926, 0.00016933400000000015, 0.00016875000000000223, 0.00016876399999999833, 0.00016933300000000068, 0.00016933300000000068, 0.00016869499999999996, 0.00016944399999999776, 0.00016890199999999855, 0.00016952799999999865, 0.00016948700000000289, 0.0001686250000000021, 0.00016947200000000037, 0.00016869499999999996, 0.00016862499999999864, 0.00016944400000000123, 0.00016904099999999825, 0.00016943099999999767, 0.00016869400000000048, 0.00016874999999999876, 0.00016852799999999765, 0.00016930599999999754, 0.00016888900000000193, 0.0001691389999999987, 0.00016851399999999808, 0.00016851399999999808, 0.0001691389999999987, 0.00016940199999999905, 0.0001689580000000003, 0.0001685969999999995, 0.00016919500000000046, 0.00016926399999999883, 0.0001691800000000014, 0.00016884699999999975, 0.00016938899999999896, 0.00016948599999999994, 0.00016911199999999904, 0.00016918100000000089, 0.00016938899999999896, 0.00016930500000000154, 0.00016906900000000086, 0.0001687640000000018, 0.00016876299999999886, 0.00016918100000000089, 0.0001688329999999967]</msg>
<status status="PASS" starttime="20201029 18:18:56.095" endtime="20201029 18:18:56.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.090" endtime="20201029 18:18:56.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.101" endtime="20201029 18:18:56.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.100" endtime="20201029 18:18:56.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.099" endtime="20201029 18:18:56.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.738" endtime="20201029 18:18:56.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.737" endtime="20201029 18:18:56.122"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.131" endtime="20201029 18:18:56.152"></status>
</kw>
<msg timestamp="20201029 18:18:56.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.129" endtime="20201029 18:18:56.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.154" endtime="20201029 18:18:56.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.156" endtime="20201029 18:18:56.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.127" endtime="20201029 18:18:56.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.125" endtime="20201029 18:18:56.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.165" endtime="20201029 18:18:56.455"></status>
</kw>
<msg timestamp="20201029 18:18:56.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02175575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219265, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:56.164" endtime="20201029 18:18:56.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02175575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219265, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:56.459" endtime="20201029 18:18:56.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.468" endtime="20201029 18:18:56.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.161" endtime="20201029 18:18:56.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.160" endtime="20201029 18:18:56.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.474" level="INFO">${RESULT} = [{'diff': 0.00017075000000000076}, {'diff': 0.0001700840000000009}, {'diff': 0.0001699580000000013}, {'diff': 0.00017023599999999722}, {'diff': 0.00017040200000000005}, {'diff': 0.00016984800000000022...</msg>
<status status="PASS" starttime="20201029 18:18:56.471" endtime="20201029 18:18:56.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.478" level="INFO">${ACCURACY} = {'diff': [0.00017075000000000076, 0.0001700840000000009, 0.0001699580000000013, 0.00017023599999999722, 0.00017040200000000005, 0.00016984800000000022, 0.00016995900000000078, 0.00017038899999999996, ...</msg>
<status status="PASS" starttime="20201029 18:18:56.475" endtime="20201029 18:18:56.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.482" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.481" endtime="20201029 18:18:56.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.485" level="INFO">VALUE: [0.00017075000000000076, 0.0001700840000000009, 0.0001699580000000013, 0.00017023599999999722, 0.00017040200000000005, 0.00016984800000000022, 0.00016995900000000078, 0.00017038899999999996, 0.00016968099999999792, 0.0001702779999999994, 0.00016986100000000032, 0.000169693999999998, 0.0001705840000000014, 0.0001704719999999979, 0.0001697779999999989, 0.00016972199999999715, 0.0001700689999999984, 0.00016952799999999865, 0.00017033300000000168, 0.00017033300000000168, 0.00016977699999999943, 0.00017009699999999753, 0.0001703750000000004, 0.00016983300000000118, 0.0001703190000000021, 0.00016957000000000083, 0.00016965300000000225, 0.0001697230000000001, 0.00017030599999999854, 0.00016993100000000164, 0.000170097000000001, 0.00017044499999999824, 0.00017018100000000189, 0.00017004100000000272, 0.00016962499999999964, 0.00016965300000000225, 0.00017016699999999885, 0.00016982000000000108, 0.00016965300000000225, 0.00017051400000000008, 0.00016972200000000062, 0.00016966599999999887, 0.00016966700000000182, 0.0001704169999999991, 0.00016952799999999865, 0.00017, 0.0001701389999999997, 0.00016984700000000075, 0.0001696389999999992, 0.00017034699999999778]</msg>
<status status="PASS" starttime="20201029 18:18:56.483" endtime="20201029 18:18:56.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.479" endtime="20201029 18:18:56.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.490" endtime="20201029 18:18:56.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.488" endtime="20201029 18:18:56.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.487" endtime="20201029 18:18:56.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.123" endtime="20201029 18:18:56.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.122" endtime="20201029 18:18:56.511"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.519" endtime="20201029 18:18:56.542"></status>
</kw>
<msg timestamp="20201029 18:18:56.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.518" endtime="20201029 18:18:56.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.544" endtime="20201029 18:18:56.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.546" endtime="20201029 18:18:56.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.515" endtime="20201029 18:18:56.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.513" endtime="20201029 18:18:56.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.555" endtime="20201029 18:18:56.841"></status>
</kw>
<msg timestamp="20201029 18:18:56.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.554" endtime="20201029 18:18:56.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.845" endtime="20201029 18:18:56.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.853" endtime="20201029 18:18:56.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.551" endtime="20201029 18:18:56.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.549" endtime="20201029 18:18:56.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.860" level="INFO">${RESULT} = [{'diff': 0.00017130500000000007}, {'diff': 0.0001712499999999978}, {'diff': 0.00017109699999999853}, {'diff': 0.00017075000000000076}, {'diff': 0.00017102800000000015}, {'diff': 0.000170693999999999}...</msg>
<status status="PASS" starttime="20201029 18:18:56.857" endtime="20201029 18:18:56.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.864" level="INFO">${ACCURACY} = {'diff': [0.00017130500000000007, 0.0001712499999999978, 0.00017109699999999853, 0.00017075000000000076, 0.00017102800000000015, 0.000170693999999999, 0.00017058300000000193, 0.00017144499999999924, 0...</msg>
<status status="PASS" starttime="20201029 18:18:56.861" endtime="20201029 18:18:56.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.868" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.867" endtime="20201029 18:18:56.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.871" level="INFO">VALUE: [0.00017130500000000007, 0.0001712499999999978, 0.00017109699999999853, 0.00017075000000000076, 0.00017102800000000015, 0.000170693999999999, 0.00017058300000000193, 0.00017144499999999924, 0.0001708199999999986, 0.0001713750000000014, 0.00017070799999999858, 0.00017136099999999835, 0.00017144400000000323, 0.000171097999999998, 0.00017131899999999964, 0.00017088900000000046, 0.00017145799999999933, 0.00017144399999999976, 0.00017122199999999865, 0.00017090300000000003, 0.0001708750000000009, 0.0001709169999999996, 0.00017126400000000083, 0.00017101400000000058, 0.00017069400000000248, 0.00017144499999999924, 0.00017052799999999965, 0.00017136100000000182, 0.00017144499999999924, 0.0001713329999999992, 0.00017088900000000046, 0.00017138900000000096, 0.00017088900000000046, 0.00017125000000000126, 0.0001709299999999997, 0.00017130599999999954, 0.0001707499999999973, 0.00017072199999999815, 0.00017082000000000208, 0.00017130500000000007, 0.00017066599999999987, 0.00017104100000000025, 0.00017120799999999908, 0.00017062499999999717, 0.00017105599999999582, 0.0001712090000000055, 0.0001705550000000028, 0.00017068099999999892, 0.0001708049999999961, 0.00017094399999999926]</msg>
<status status="PASS" starttime="20201029 18:18:56.869" endtime="20201029 18:18:56.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.865" endtime="20201029 18:18:56.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.876" endtime="20201029 18:18:56.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.875" endtime="20201029 18:18:56.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.874" endtime="20201029 18:18:56.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.512" endtime="20201029 18:18:56.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.511" endtime="20201029 18:18:56.897"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.906" endtime="20201029 18:18:56.928"></status>
</kw>
<msg timestamp="20201029 18:18:56.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.904" endtime="20201029 18:18:56.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.929" endtime="20201029 18:18:56.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.932" endtime="20201029 18:18:56.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.902" endtime="20201029 18:18:56.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.900" endtime="20201029 18:18:56.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.941" endtime="20201029 18:18:57.226"></status>
</kw>
<msg timestamp="20201029 18:18:57.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.939" endtime="20201029 18:18:57.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.230" endtime="20201029 18:18:57.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.238" endtime="20201029 18:18:57.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.937" endtime="20201029 18:18:57.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.935" endtime="20201029 18:18:57.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.244" level="INFO">${RESULT} = [{'diff': 0.00017262499999999917}, {'diff': 0.00017198599999999897}, {'diff': 0.00017212499999999867}, {'diff': 0.00017198599999999897}, {'diff': 0.0001722499999999988}, {'diff': 0.0001725139999999986...</msg>
<status status="PASS" starttime="20201029 18:18:57.241" endtime="20201029 18:18:57.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.249" level="INFO">${ACCURACY} = {'diff': [0.00017262499999999917, 0.00017198599999999897, 0.00017212499999999867, 0.00017198599999999897, 0.0001722499999999988, 0.0001725139999999986, 0.00017176399999999786, 0.0001723200000000001, 0...</msg>
<status status="PASS" starttime="20201029 18:18:57.245" endtime="20201029 18:18:57.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.254" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.253" endtime="20201029 18:18:57.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.256" level="INFO">VALUE: [0.00017262499999999917, 0.00017198599999999897, 0.00017212499999999867, 0.00017198599999999897, 0.0001722499999999988, 0.0001725139999999986, 0.00017176399999999786, 0.0001723200000000001, 0.00017151400000000108, 0.0001715689999999999, 0.00017180600000000004, 0.00017217999999999747, 0.00017187499999999842, 0.0001720690000000004, 0.00017186100000000232, 0.0001721529999999978, 0.00017168000000000044, 0.00017162499999999817, 0.00017198599999999897, 0.00017243100000000067, 0.0001719589999999993, 0.00017183399999999918, 0.0001717780000000009, 0.00017234699999999978, 0.00017194400000000026, 0.00017212499999999867, 0.00017186099999999885, 0.00017218100000000042, 0.0001715559999999998, 0.00017168000000000044, 0.0001715559999999998, 0.00017212500000000214, 0.00017173700000000167, 0.0001724300000000012, 0.00017240299999999806, 0.00017168099999999992, 0.0001722369999999987, 0.000172000000000002, 0.00017199999999999854, 0.00017230600000000054, 0.00017161200000000154, 0.00017176400000000133, 0.00017184700000000275, 0.00017241699999999763, 0.00017254200000000122, 0.00017180600000000004, 0.00017168099999999992, 0.00017162500000000164, 0.00017236100000000282, 0.0001723190000000041]</msg>
<status status="PASS" starttime="20201029 18:18:57.255" endtime="20201029 18:18:57.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.250" endtime="20201029 18:18:57.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.261" endtime="20201029 18:18:57.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.260" endtime="20201029 18:18:57.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.258" endtime="20201029 18:18:57.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.898" endtime="20201029 18:18:57.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.898" endtime="20201029 18:18:57.282"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.291" endtime="20201029 18:18:57.313"></status>
</kw>
<msg timestamp="20201029 18:18:57.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.289" endtime="20201029 18:18:57.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.314" endtime="20201029 18:18:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.317" endtime="20201029 18:18:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.286" endtime="20201029 18:18:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.284" endtime="20201029 18:18:57.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.326" endtime="20201029 18:18:57.613"></status>
</kw>
<msg timestamp="20201029 18:18:57.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.324" endtime="20201029 18:18:57.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.617" endtime="20201029 18:18:57.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.626" endtime="20201029 18:18:57.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.322" endtime="20201029 18:18:57.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.320" endtime="20201029 18:18:57.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.632" level="INFO">${RESULT} = [{'diff': 0.00017348600000000047}, {'diff': 0.00017311200000000304}, {'diff': 0.00017311099999999663}, {'diff': 0.00017279200000000147}, {'diff': 0.0001729300000000017}, {'diff': 0.0001725140000000020...</msg>
<status status="PASS" starttime="20201029 18:18:57.629" endtime="20201029 18:18:57.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.636" level="INFO">${ACCURACY} = {'diff': [0.00017348600000000047, 0.00017311200000000304, 0.00017311099999999663, 0.00017279200000000147, 0.0001729300000000017, 0.00017251400000000208, 0.00017279200000000147, 0.00017302800000000215,...</msg>
<status status="PASS" starttime="20201029 18:18:57.633" endtime="20201029 18:18:57.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.641" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.640" endtime="20201029 18:18:57.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.643" level="INFO">VALUE: [0.00017348600000000047, 0.00017311200000000304, 0.00017311099999999663, 0.00017279200000000147, 0.0001729300000000017, 0.00017251400000000208, 0.00017279200000000147, 0.00017302800000000215, 0.00017245800000000033, 0.00017279200000000147, 0.0001734309999999982, 0.00017248599999999947, 0.00017293100000000117, 0.00017286099999999985, 0.0001732499999999998, 0.0001730829999999975, 0.00017331900000000164, 0.00017337499999999992, 0.0001730699999999974, 0.0001731529999999988, 0.00017248600000000294, 0.0001725560000000008, 0.00017268100000000092, 0.00017284700000000028, 0.00017270800000000058, 0.0001725699999999969, 0.00017254200000000122, 0.00017336100000000035, 0.00017251400000000208, 0.0001733049999999986, 0.00017356899999999842, 0.0001732499999999998, 0.00017277699999999896, 0.00017270900000000006, 0.0001732369999999997, 0.00017287499999999942, 0.00017268100000000092, 0.0001732499999999998, 0.00017288900000000246, 0.0001729300000000017, 0.00017287499999999942, 0.00017315300000000228, 0.00017330600000000154, 0.00017254200000000122, 0.00017340299999999906, 0.00017251400000000208, 0.00017304099999999878, 0.0001733049999999986, 0.00017286099999999638, 0.00017255600000000426]</msg>
<status status="PASS" starttime="20201029 18:18:57.642" endtime="20201029 18:18:57.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.637" endtime="20201029 18:18:57.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.648" endtime="20201029 18:18:57.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.646" endtime="20201029 18:18:57.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.645" endtime="20201029 18:18:57.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.283" endtime="20201029 18:18:57.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.282" endtime="20201029 18:18:57.669"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.677" endtime="20201029 18:18:57.700"></status>
</kw>
<msg timestamp="20201029 18:18:57.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.676" endtime="20201029 18:18:57.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.702" endtime="20201029 18:18:57.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.704" endtime="20201029 18:18:57.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.673" endtime="20201029 18:18:57.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.671" endtime="20201029 18:18:57.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.713" endtime="20201029 18:18:57.998"></status>
</kw>
<msg timestamp="20201029 18:18:58.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.712" endtime="20201029 18:18:58.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.002" endtime="20201029 18:18:58.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.010" endtime="20201029 18:18:58.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.709" endtime="20201029 18:18:58.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.708" endtime="20201029 18:18:58.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.017" level="INFO">${RESULT} = [{'diff': 0.00017412500000000067}, {'diff': 0.00017376399999999986}, {'diff': 0.00017374999999999682}, {'diff': 0.0001738049999999991}, {'diff': 0.00017376399999999986}, {'diff': 0.0001745000000000010...</msg>
<status status="PASS" starttime="20201029 18:18:58.014" endtime="20201029 18:18:58.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.021" level="INFO">${ACCURACY} = {'diff': [0.00017412500000000067, 0.00017376399999999986, 0.00017374999999999682, 0.0001738049999999991, 0.00017376399999999986, 0.00017450000000000104, 0.00017436099999999788, 0.0001736950000000015, ...</msg>
<status status="PASS" starttime="20201029 18:18:58.018" endtime="20201029 18:18:58.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.025" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.024" endtime="20201029 18:18:58.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.028" level="INFO">VALUE: [0.00017412500000000067, 0.00017376399999999986, 0.00017374999999999682, 0.0001738049999999991, 0.00017376399999999986, 0.00017450000000000104, 0.00017436099999999788, 0.0001736950000000015, 0.0001738049999999991, 0.0001742089999999981, 0.00017377799999999943, 0.00017397199999999793, 0.0001735980000000005, 0.00017409700000000153, 0.00017444400000000276, 0.00017373600000000072, 0.00017348600000000047, 0.00017400000000000054, 0.00017400000000000054, 0.00017411099999999763, 0.00017362500000000017, 0.00017415200000000033, 0.00017406899999999892, 0.00017412500000000067, 0.000173889, 0.00017387500000000042, 0.00017441699999999963, 0.00017412500000000067, 0.00017373599999999725, 0.0001740699999999984, 0.0001736950000000015, 0.0001735560000000018, 0.0001742919999999995, 0.00017412500000000067, 0.00017386099999999738, 0.00017383299999999824, 0.00017376399999999986, 0.0001736110000000006, 0.00017430599999999907, 0.00017362500000000017, 0.00017433299999999874, 0.00017394499999999827, 0.0001738330000000017, 0.00017359700000000103, 0.000173582999999998, 0.000174195000000002, 0.00017381899999999867, 0.00017415300000000328, 0.0001742500000000008, 0.00017444399999999582]</msg>
<status status="PASS" starttime="20201029 18:18:58.026" endtime="20201029 18:18:58.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.022" endtime="20201029 18:18:58.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.033" endtime="20201029 18:18:58.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.032" endtime="20201029 18:18:58.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.031" endtime="20201029 18:18:58.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.670" endtime="20201029 18:18:58.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.669" endtime="20201029 18:18:58.054"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.063" endtime="20201029 18:18:58.085"></status>
</kw>
<msg timestamp="20201029 18:18:58.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.061" endtime="20201029 18:18:58.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.086" endtime="20201029 18:18:58.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.089" endtime="20201029 18:18:58.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.059" endtime="20201029 18:18:58.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.057" endtime="20201029 18:18:58.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.098" endtime="20201029 18:18:58.383"></status>
</kw>
<msg timestamp="20201029 18:18:58.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.096" endtime="20201029 18:18:58.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.387" endtime="20201029 18:18:58.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.395" endtime="20201029 18:18:58.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.094" endtime="20201029 18:18:58.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.092" endtime="20201029 18:18:58.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.403" level="INFO">${RESULT} = [{'diff': 0.00017536200000000182}, {'diff': 0.00017448600000000147}, {'diff': 0.00017530600000000007}, {'diff': 0.00017550000000000204}, {'diff': 0.00017450000000000104}, {'diff': 0.000174818999999999...</msg>
<status status="PASS" starttime="20201029 18:18:58.399" endtime="20201029 18:18:58.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.408" level="INFO">${ACCURACY} = {'diff': [0.00017536200000000182, 0.00017448600000000147, 0.00017530600000000007, 0.00017550000000000204, 0.00017450000000000104, 0.00017481899999999967, 0.00017536099999999888, 0.00017516700000000038...</msg>
<status status="PASS" starttime="20201029 18:18:58.404" endtime="20201029 18:18:58.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.412" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.411" endtime="20201029 18:18:58.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.415" level="INFO">VALUE: [0.00017536200000000182, 0.00017448600000000147, 0.00017530600000000007, 0.00017550000000000204, 0.00017450000000000104, 0.00017481899999999967, 0.00017536099999999888, 0.00017516700000000038, 0.00017447199999999843, 0.00017454100000000028, 0.0001749859999999985, 0.0001746660000000004, 0.00017536199999999835, 0.00017523599999999875, 0.00017466699999999988, 0.00017449999999999757, 0.0001747500000000013, 0.00017518099999999995, 0.00017455599999999932, 0.0001752500000000018, 0.00017472299999999816, 0.00017493000000000022, 0.00017545799999999986, 0.00017522199999999918, 0.00017533299999999974, 0.0001751249999999982, 0.00017527800000000093, 0.0001754029999999976, 0.00017537499999999845, 0.000175098000000002, 0.00017522199999999918, 0.00017459700000000203, 0.000174889000000001, 0.00017519499999999952, 0.00017533299999999974, 0.00017534700000000278, 0.00017474999999999782, 0.00017472199999999868, 0.0001751110000000021, 0.000175195000000003, 0.0001746249999999977, 0.00017462500000000117, 0.0001745140000000006, 0.00017486099999999838, 0.00017522199999999918, 0.00017537500000000192, 0.0001744720000000019, 0.00017491600000000412, 0.00017455599999999932, 0.0001752920000000005]</msg>
<status status="PASS" starttime="20201029 18:18:58.413" endtime="20201029 18:18:58.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.409" endtime="20201029 18:18:58.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.422" endtime="20201029 18:18:58.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.419" endtime="20201029 18:18:58.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.417" endtime="20201029 18:18:58.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.055" endtime="20201029 18:18:58.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.054" endtime="20201029 18:18:58.447"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.465" endtime="20201029 18:18:58.490"></status>
</kw>
<msg timestamp="20201029 18:18:58.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.462" endtime="20201029 18:18:58.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.493" endtime="20201029 18:18:58.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.498" endtime="20201029 18:18:58.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.456" endtime="20201029 18:18:58.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.452" endtime="20201029 18:18:58.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.517" endtime="20201029 18:18:58.805"></status>
</kw>
<msg timestamp="20201029 18:18:58.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035714833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035891361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.514" endtime="20201029 18:18:58.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035714833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035891361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.809" endtime="20201029 18:18:58.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.817" endtime="20201029 18:18:58.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.508" endtime="20201029 18:18:58.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.505" endtime="20201029 18:18:58.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.823" level="INFO">${RESULT} = [{'diff': 0.00017652799999999524}, {'diff': 0.00017566700000000435}, {'diff': 0.0001758050000000011}, {'diff': 0.00017622200000000365}, {'diff': 0.00017636099999999988}, {'diff': 0.0001763060000000010...</msg>
<status status="PASS" starttime="20201029 18:18:58.820" endtime="20201029 18:18:58.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.827" level="INFO">${ACCURACY} = {'diff': [0.00017652799999999524, 0.00017566700000000435, 0.0001758050000000011, 0.00017622200000000365, 0.00017636099999999988, 0.00017630600000000107, 0.0001760700000000004, 0.00017593100000000417, ...</msg>
<status status="PASS" starttime="20201029 18:18:58.824" endtime="20201029 18:18:58.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.832" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.831" endtime="20201029 18:18:58.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.834" level="INFO">VALUE: [0.00017652799999999524, 0.00017566700000000435, 0.0001758050000000011, 0.00017622200000000365, 0.00017636099999999988, 0.00017630600000000107, 0.0001760700000000004, 0.00017593100000000417, 0.00017658299999999405, 0.00017566700000000435, 0.00017636099999999988, 0.00017594500000000374, 0.00017555500000000085, 0.00017548599999999553, 0.00017586099999999938, 0.00017601399999999517, 0.00017629199999999456, 0.00017558399999999946, 0.00017586099999999938, 0.000175583, 0.0001759029999999981, 0.00017644500000000424, 0.000176277999999995, 0.00017638900000000596, 0.00017563899999999827, 0.0001756249999999987, 0.0001757779999999945, 0.0001763199999999937, 0.00017572199999999621, 0.00017555600000000032, 0.00017626399999999542, 0.00017586199999999885, 0.0001759999999999956, 0.0001757500000000023, 0.00017588899999999852, 0.00017563899999999827, 0.00017647199999999696, 0.00017631899999999423, 0.00017600000000000254, 0.0001755699999999999, 0.00017561099999999913, 0.0001763050000000016, 0.00017588899999999852, 0.0001757779999999945, 0.00017601399999999517, 0.00017629100000000203, 0.0001764170000000051, 0.0001759449999999968, 0.00017641599999999868, 0.00017559699999999956]</msg>
<status status="PASS" starttime="20201029 18:18:58.833" endtime="20201029 18:18:58.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.828" endtime="20201029 18:18:58.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.839" endtime="20201029 18:18:58.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.838" endtime="20201029 18:18:58.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.836" endtime="20201029 18:18:58.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.449" endtime="20201029 18:18:58.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.447" endtime="20201029 18:18:58.860"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.868" endtime="20201029 18:18:58.891"></status>
</kw>
<msg timestamp="20201029 18:18:58.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.867" endtime="20201029 18:18:58.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.893" endtime="20201029 18:18:58.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.895" endtime="20201029 18:18:58.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.864" endtime="20201029 18:18:58.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.862" endtime="20201029 18:18:58.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.904" endtime="20201029 18:18:59.189"></status>
</kw>
<msg timestamp="20201029 18:18:59.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:58.902" endtime="20201029 18:18:59.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:59.193" endtime="20201029 18:18:59.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.201" endtime="20201029 18:18:59.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.900" endtime="20201029 18:18:59.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.898" endtime="20201029 18:18:59.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.208" level="INFO">${RESULT} = [{'diff': 0.00017747199999999796}, {'diff': 0.00017684800000000028}, {'diff': 0.00017745800000000186}, {'diff': 0.00017656999999999742}, {'diff': 0.00017681999999999767}, {'diff': 0.000177125000000000...</msg>
<status status="PASS" starttime="20201029 18:18:59.204" endtime="20201029 18:18:59.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.212" level="INFO">${ACCURACY} = {'diff': [0.00017747199999999796, 0.00017684800000000028, 0.00017745800000000186, 0.00017656999999999742, 0.00017681999999999767, 0.0001771250000000002, 0.00017692999999999875, 0.0001773189999999987, ...</msg>
<status status="PASS" starttime="20201029 18:18:59.209" endtime="20201029 18:18:59.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.216" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.215" endtime="20201029 18:18:59.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.219" level="INFO">VALUE: [0.00017747199999999796, 0.00017684800000000028, 0.00017745800000000186, 0.00017656999999999742, 0.00017681999999999767, 0.0001771250000000002, 0.00017692999999999875, 0.0001773189999999987, 0.0001770969999999976, 0.00017708299999999802, 0.0001773470000000013, 0.00017736200000000035, 0.00017751400000000014, 0.0001771530000000028, 0.00017651399999999914, 0.00017686100000000038, 0.00017665299999999884, 0.0001767639999999994, 0.00017651399999999914, 0.00017661100000000013, 0.00017725000000000032, 0.0001766249999999997, 0.0001766530000000023, 0.00017647200000000043, 0.00017652799999999871, 0.00017684699999999734, 0.00017665299999999884, 0.00017713899999999977, 0.0001771250000000002, 0.00017708400000000096, 0.00017684699999999734, 0.00017658400000000046, 0.00017713899999999977, 0.00017709700000000106, 0.00017733299999999827, 0.00017740200000000012, 0.00017706999999999792, 0.00017741699999999916, 0.00017734699999999784, 0.0001771250000000002, 0.00017659800000000003, 0.00017674999999999982, 0.00017713899999999977, 0.0001770700000000014, 0.00017726399999999642, 0.00017708400000000096, 0.00017711100000000063, 0.00017713899999999977, 0.0001774449999999983, 0.0001770830000000015]</msg>
<status status="PASS" starttime="20201029 18:18:59.217" endtime="20201029 18:18:59.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.212" endtime="20201029 18:18:59.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.224" endtime="20201029 18:18:59.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.222" endtime="20201029 18:18:59.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.221" endtime="20201029 18:18:59.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.861" endtime="20201029 18:18:59.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.860" endtime="20201029 18:18:59.248"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.265" endtime="20201029 18:18:59.292"></status>
</kw>
<msg timestamp="20201029 18:18:59.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.262" endtime="20201029 18:18:59.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.295" endtime="20201029 18:18:59.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.300" endtime="20201029 18:18:59.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.257" endtime="20201029 18:18:59.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.253" endtime="20201029 18:18:59.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.319" endtime="20201029 18:18:59.606"></status>
</kw>
<msg timestamp="20201029 18:18:59.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035204653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035382736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.316" endtime="20201029 18:18:59.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035204653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035382736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.610" endtime="20201029 18:18:59.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.618" endtime="20201029 18:18:59.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.310" endtime="20201029 18:18:59.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.307" endtime="20201029 18:18:59.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.624" level="INFO">${RESULT} = [{'diff': 0.00017808299999999555}, {'diff': 0.00017809699999999512}, {'diff': 0.00017813900000000077}, {'diff': 0.00017748599999999753}, {'diff': 0.00017765200000000037}, {'diff': 0.000178430000000000...</msg>
<status status="PASS" starttime="20201029 18:18:59.621" endtime="20201029 18:18:59.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.629" level="INFO">${ACCURACY} = {'diff': [0.00017808299999999555, 0.00017809699999999512, 0.00017813900000000077, 0.00017748599999999753, 0.00017765200000000037, 0.00017843000000000026, 0.00017793099999999923, 0.0001784030000000006,...</msg>
<status status="PASS" starttime="20201029 18:18:59.625" endtime="20201029 18:18:59.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.633" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.632" endtime="20201029 18:18:59.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.636" level="INFO">VALUE: [0.00017808299999999555, 0.00017809699999999512, 0.00017813900000000077, 0.00017748599999999753, 0.00017765200000000037, 0.00017843000000000026, 0.00017793099999999923, 0.0001784030000000006, 0.00017752799999999624, 0.00017772199999999821, 0.0001782920000000035, 0.0001776120000000006, 0.00017809700000000206, 0.00017826399999999742, 0.00017813900000000077, 0.00017831900000000317, 0.00017770799999999864, 0.0001782500000000048, 0.0001784030000000006, 0.00017752800000000318, 0.00017772200000000515, 0.00017815300000000034, 0.00017815200000000087, 0.0001779030000000001, 0.00017787500000000095, 0.00017765299999999984, 0.00017847199999999896, 0.00017788900000000052, 0.00017797300000000488, 0.00017744399999999882, 0.00017818099999999948, 0.00017791600000000019, 0.00017847299999999844, 0.00017772199999999821, 0.0001774449999999983, 0.00017819399999999957, 0.00017819499999999905, 0.00017756999999999495, 0.00017758400000000146, 0.00017836100000000188, 0.00017747199999999796, 0.00017850000000000504, 0.0001777909999999966, 0.0001779579999999989, 0.00017813899999999383, 0.000178195000000006, 0.00017802799999999674, 0.00017833300000000274, 0.00017786100000000138, 0.0001781669999999999]</msg>
<status status="PASS" starttime="20201029 18:18:59.635" endtime="20201029 18:18:59.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.630" endtime="20201029 18:18:59.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.641" endtime="20201029 18:18:59.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.639" endtime="20201029 18:18:59.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.638" endtime="20201029 18:18:59.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.250" endtime="20201029 18:18:59.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.248" endtime="20201029 18:18:59.661"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.670" endtime="20201029 18:18:59.692"></status>
</kw>
<msg timestamp="20201029 18:18:59.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.668" endtime="20201029 18:18:59.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.693" endtime="20201029 18:18:59.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.696" endtime="20201029 18:18:59.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.666" endtime="20201029 18:18:59.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.664" endtime="20201029 18:18:59.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.705" endtime="20201029 18:18:59.993"></status>
</kw>
<msg timestamp="20201029 18:18:59.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.703" endtime="20201029 18:18:59.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.997" endtime="20201029 18:19:00.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.005" endtime="20201029 18:19:00.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.701" endtime="20201029 18:19:00.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.699" endtime="20201029 18:19:00.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.011" level="INFO">${RESULT} = [{'diff': 0.0001791670000000009}, {'diff': 0.00017845899999999887}, {'diff': 0.0001791250000000022}, {'diff': 0.00017888900000000152}, {'diff': 0.00017951399999999867}, {'diff': 0.00017867999999999704...</msg>
<status status="PASS" starttime="20201029 18:19:00.008" endtime="20201029 18:19:00.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.015" level="INFO">${ACCURACY} = {'diff': [0.0001791670000000009, 0.00017845899999999887, 0.0001791250000000022, 0.00017888900000000152, 0.00017951399999999867, 0.00017867999999999704, 0.0001786670000000004, 0.0001786800000000005, 0....</msg>
<status status="PASS" starttime="20201029 18:19:00.012" endtime="20201029 18:19:00.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.019" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.018" endtime="20201029 18:19:00.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.022" level="INFO">VALUE: [0.0001791670000000009, 0.00017845899999999887, 0.0001791250000000022, 0.00017888900000000152, 0.00017951399999999867, 0.00017867999999999704, 0.0001786670000000004, 0.0001786800000000005, 0.0001792640000000019, 0.00017941700000000116, 0.0001794169999999977, 0.00017868099999999998, 0.00017908300000000002, 0.000179180000000001, 0.00017911099999999916, 0.00017861100000000213, 0.00017869400000000008, 0.00017856899999999995, 0.00017911100000000263, 0.00017868099999999998, 0.00017863900000000127, 0.00017943100000000073, 0.00017880500000000063, 0.00017897200000000293, 0.00017880500000000063, 0.000179180000000001, 0.0001793060000000006, 0.00017898599999999903, 0.0001789999999999986, 0.0001786670000000004, 0.0001789999999999986, 0.00017940299999999812, 0.00017937499999999898, 0.0001789869999999985, 0.00017854200000000028, 0.0001785410000000008, 0.00017918100000000048, 0.0001790410000000013, 0.00017852800000000071, 0.00017905600000000035, 0.00017869499999999955, 0.00017848599999999853, 0.00017902800000000121, 0.00017850000000000157, 0.00017898599999999903, 0.00017854200000000028, 0.00017856899999999995, 0.00017936100000000288, 0.00017859800000000203, 0.00017855600000000332]</msg>
<status status="PASS" starttime="20201029 18:19:00.021" endtime="20201029 18:19:00.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.016" endtime="20201029 18:19:00.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.027" endtime="20201029 18:19:00.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.025" endtime="20201029 18:19:00.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.024" endtime="20201029 18:19:00.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.662" endtime="20201029 18:19:00.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.662" endtime="20201029 18:19:00.047"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.056" endtime="20201029 18:19:00.079"></status>
</kw>
<msg timestamp="20201029 18:19:00.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.054" endtime="20201029 18:19:00.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.080" endtime="20201029 18:19:00.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.083" endtime="20201029 18:19:00.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.052" endtime="20201029 18:19:00.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.050" endtime="20201029 18:19:00.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.092" endtime="20201029 18:19:00.377"></status>
</kw>
<msg timestamp="20201029 18:19:00.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.090" endtime="20201029 18:19:00.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.381" endtime="20201029 18:19:00.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.389" endtime="20201029 18:19:00.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.088" endtime="20201029 18:19:00.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.086" endtime="20201029 18:19:00.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.396" level="INFO">${RESULT} = [{'diff': 0.00018005600000000135}, {'diff': 0.00018037499999999998}, {'diff': 0.00018034700000000084}, {'diff': 0.00017998600000000003}, {'diff': 0.00018040299999999912}, {'diff': 0.000180193999999998...</msg>
<status status="PASS" starttime="20201029 18:19:00.393" endtime="20201029 18:19:00.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.400" level="INFO">${ACCURACY} = {'diff': [0.00018005600000000135, 0.00018037499999999998, 0.00018034700000000084, 0.00017998600000000003, 0.00018040299999999912, 0.0001801939999999981, 0.00017955500000000138, 0.00017963900000000227,...</msg>
<status status="PASS" starttime="20201029 18:19:00.397" endtime="20201029 18:19:00.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.404" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.403" endtime="20201029 18:19:00.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.406" level="INFO">VALUE: [0.00018005600000000135, 0.00018037499999999998, 0.00018034700000000084, 0.00017998600000000003, 0.00018040299999999912, 0.0001801939999999981, 0.00017955500000000138, 0.00017963900000000227, 0.00017972200000000021, 0.00017968100000000098, 0.0001794450000000003, 0.00017987499999999948, 0.0001800410000000023, 0.00018019400000000158, 0.00018006899999999798, 0.00018019400000000158, 0.00018001399999999917, 0.000179584, 0.0001794999999999991, 0.00017947199999999996, 0.00017974999999999935, 0.00018001399999999917, 0.00018038899999999955, 0.00017977800000000196, 0.00018037499999999998, 0.00018038899999999955, 0.0001794999999999991, 0.00017961099999999966, 0.00018037499999999998, 0.0001800840000000005, 0.00017961099999999966, 0.00017968100000000098, 0.00017987499999999948, 0.00017962499999999923, 0.00018025000000000332, 0.0001802909999999991, 0.00018019400000000158, 0.00018037499999999998, 0.0001798060000000011, 0.00017962499999999923, 0.00017995799999999743, 0.00017962499999999923, 0.00018000000000000307, 0.00018020800000000115, 0.00017961100000000313, 0.0001803329999999978, 0.00018004099999999884, 0.00017938900000000202, 0.00017948599999999953, 0.00017965300000000184]</msg>
<status status="PASS" starttime="20201029 18:19:00.405" endtime="20201029 18:19:00.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.400" endtime="20201029 18:19:00.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.417" endtime="20201029 18:19:00.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.416" endtime="20201029 18:19:00.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.414" endtime="20201029 18:19:00.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.048" endtime="20201029 18:19:00.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.048" endtime="20201029 18:19:00.438"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.446" endtime="20201029 18:19:00.469"></status>
</kw>
<msg timestamp="20201029 18:19:00.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.445" endtime="20201029 18:19:00.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.470" endtime="20201029 18:19:00.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.472" endtime="20201029 18:19:00.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.442" endtime="20201029 18:19:00.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.440" endtime="20201029 18:19:00.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.481" endtime="20201029 18:19:00.767"></status>
</kw>
<msg timestamp="20201029 18:19:00.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.480" endtime="20201029 18:19:00.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.771" endtime="20201029 18:19:00.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.779" endtime="20201029 18:19:00.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.477" endtime="20201029 18:19:00.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.476" endtime="20201029 18:19:00.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.786" level="INFO">${RESULT} = [{'diff': 0.00018137500000000098}, {'diff': 0.00018088900000000005}, {'diff': 0.0001809580000000019}, {'diff': 0.00018130499999999966}, {'diff': 0.00018104200000000278}, {'diff': 0.0001813480000000013...</msg>
<status status="PASS" starttime="20201029 18:19:00.782" endtime="20201029 18:19:00.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.790" level="INFO">${ACCURACY} = {'diff': [0.00018137500000000098, 0.00018088900000000005, 0.0001809580000000019, 0.00018130499999999966, 0.00018104200000000278, 0.00018134800000000131, 0.0001808190000000022, 0.00018123599999999782, ...</msg>
<status status="PASS" starttime="20201029 18:19:00.786" endtime="20201029 18:19:00.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.795" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.794" endtime="20201029 18:19:00.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.797" level="INFO">VALUE: [0.00018137500000000098, 0.00018088900000000005, 0.0001809580000000019, 0.00018130499999999966, 0.00018104200000000278, 0.00018134800000000131, 0.0001808190000000022, 0.00018123599999999782, 0.0001808610000000009, 0.00018048599999999707, 0.00018084699999999787, 0.00018129199999999956, 0.0001811939999999991, 0.0001813060000000026, 0.00018061100000000066, 0.00018143099999999926, 0.0001811520000000004, 0.0001808199999999982, 0.0001814169999999997, 0.00018123599999999782, 0.0001805000000000001, 0.0001806519999999999, 0.0001811390000000003, 0.0001805130000000002, 0.0001808060000000021, 0.00018069400000000208, 0.00018043099999999826, 0.00018138800000000108, 0.00018056900000000195, 0.00018094400000000233, 0.00018140300000000012, 0.00018125000000000085, 0.00018088900000000005, 0.0001804589999999974, 0.00018143099999999926, 0.0001805000000000001, 0.00018091599999999972, 0.00018057000000000142, 0.0001811939999999991, 0.00018066699999999894, 0.00018075000000000035, 0.0001813610000000014, 0.00018077800000000296, 0.0001809589999999979, 0.00018087500000000048, 0.00018124999999999739, 0.00018088900000000005, 0.0001810139999999967, 0.00018093100000000223, 0.00018112499999999726]</msg>
<status status="PASS" starttime="20201029 18:19:00.796" endtime="20201029 18:19:00.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.791" endtime="20201029 18:19:00.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.802" endtime="20201029 18:19:00.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.800" endtime="20201029 18:19:00.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.799" endtime="20201029 18:19:00.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.439" endtime="20201029 18:19:00.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.438" endtime="20201029 18:19:00.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.994" endtime="20201029 18:19:00.823"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:21.927" endtime="20201029 18:19:00.823" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:41.956" endtime="20201029 18:19:00.827"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.879" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:19:00.888" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:19:02.037" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:19:00.878" endtime="20201029 18:19:02.038"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.041" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:19:02.039" endtime="20201029 18:19:02.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.877" endtime="20201029 18:19:02.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.044" endtime="20201029 18:19:02.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.042" endtime="20201029 18:19:02.284"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.296" endtime="20201029 18:19:02.309"></status>
</kw>
<msg timestamp="20201029 18:19:02.310" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.295" endtime="20201029 18:19:02.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.312" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.311" endtime="20201029 18:19:02.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.315" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:02.313" endtime="20201029 18:19:02.316"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:02.292" endtime="20201029 18:19:02.316"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:02.290" endtime="20201029 18:19:02.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.289" endtime="20201029 18:19:02.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:02.321" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:02.320" endtime="20201029 18:19:02.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.318" endtime="20201029 18:19:02.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.288" endtime="20201029 18:19:02.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.288" endtime="20201029 18:19:02.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.323" endtime="20201029 18:19:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.286" endtime="20201029 18:19:02.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.325" endtime="20201029 18:19:02.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.285" endtime="20201029 18:19:02.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.875" endtime="20201029 18:19:02.328"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.333" endtime="20201029 18:19:02.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.332" endtime="20201029 18:19:02.353"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.366" endtime="20201029 18:19:02.379"></status>
</kw>
<msg timestamp="20201029 18:19:02.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.364" endtime="20201029 18:19:02.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.380" endtime="20201029 18:19:02.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:02.383" endtime="20201029 18:19:02.386"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:02.362" endtime="20201029 18:19:02.387"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:02.360" endtime="20201029 18:19:02.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.359" endtime="20201029 18:19:02.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:02.391" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:02.390" endtime="20201029 18:19:02.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.388" endtime="20201029 18:19:02.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.358" endtime="20201029 18:19:02.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.357" endtime="20201029 18:19:02.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.393" endtime="20201029 18:19:02.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.356" endtime="20201029 18:19:02.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.354" endtime="20201029 18:19:02.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.331" endtime="20201029 18:19:02.395"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.404" endtime="20201029 18:19:08.499"></status>
</kw>
<msg timestamp="20201029 18:19:08.500" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.402" endtime="20201029 18:19:08.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.505" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.502" endtime="20201029 18:19:08.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.507" endtime="20201029 18:19:08.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.399" endtime="20201029 18:19:08.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.398" endtime="20201029 18:19:08.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.518" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:19:08.514" endtime="20201029 18:19:08.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.529" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:08.527" endtime="20201029 18:19:08.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.533" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:08.531" endtime="20201029 18:19:08.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.520" endtime="20201029 18:19:08.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.545" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:08.542" endtime="20201029 18:19:08.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.551" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:08.548" endtime="20201029 18:19:08.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.536" endtime="20201029 18:19:08.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.564" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:08.561" endtime="20201029 18:19:08.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.570" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:19:08.567" endtime="20201029 18:19:08.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.555" endtime="20201029 18:19:08.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.590" endtime="20201029 18:19:08.894"></status>
</kw>
<msg timestamp="20201029 18:19:08.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061425069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161092069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.586" endtime="20201029 18:19:08.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061425069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161092069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.898" endtime="20201029 18:19:08.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.906" endtime="20201029 18:19:08.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.579" endtime="20201029 18:19:08.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.574" endtime="20201029 18:19:08.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:08.913" level="INFO">${FILTERED} = [{'diff': 0.099667}, {'diff': 0.099566458}, {'diff': 0.09958756899999999}, {'diff': 0.099588222}, {'diff': 0.09959019400000008}, {'diff': 0.09959099999999999}, {'diff': 0.09959340299999997}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:19:08.910" endtime="20201029 18:19:08.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.916" level="INFO">${RESULT} = {'diff': [0.099667, 0.099566458, 0.09958756899999999, 0.099588222, 0.09959019400000008, 0.09959099999999999, 0.09959340299999997, 0.09958761100000002, 0.09958547200000001, 0.09959126399999996, 0.09959...</msg>
<status status="PASS" starttime="20201029 18:19:08.914" endtime="20201029 18:19:08.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.921" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:08.920" endtime="20201029 18:19:08.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.923" level="INFO">VALUE: [0.099667, 0.099566458, 0.09958756899999999, 0.099588222, 0.09959019400000008, 0.09959099999999999, 0.09959340299999997, 0.09958761100000002, 0.09958547200000001, 0.09959126399999996, 0.09959384699999996, 0.09959377800000002, 0.09960109700000008, 0.09960119499999998, 0.09960362499999986, 0.09960418000000004, 0.09960187500000006, 0.09960054200000013, 0.09960265199999996, 0.09960449999999987, 0.0996026940000001, 0.09960023600000012, 0.09959470899999978, 0.09959651399999991, 0.0996001940000002, 0.09959583299999997, 0.09958893000000035, 0.09958641700000026, 0.09958536099999993, 0.0995857499999997, 0.09957915299999964, 0.09958058299999983, 0.09957766700000015, 0.09958458299999995, 0.09957976299999993, 0.0995817080000001, 0.09957998600000018, 0.09958286099999958, 0.09958462499999987, 0.0995834719999995, 0.09958698600000027, 0.09958305500000009, 0.09958098600000032, 0.09958497199999972, 0.09958876399999994, 0.09959079100000068, 0.09959198600000008, 0.09959175000000009, 0.09959192999999988, 0.09958545799999996, 0.09958308299999974]</msg>
<status status="PASS" starttime="20201029 18:19:08.922" endtime="20201029 18:19:08.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.917" endtime="20201029 18:19:08.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.396" endtime="20201029 18:19:08.924"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:02.328" endtime="20201029 18:19:08.925" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.931" endtime="20201029 18:19:08.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.930" endtime="20201029 18:19:08.951"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.965" endtime="20201029 18:19:08.977"></status>
</kw>
<msg timestamp="20201029 18:19:08.978" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.963" endtime="20201029 18:19:08.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.979" endtime="20201029 18:19:08.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.983" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:08.981" endtime="20201029 18:19:08.983"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:08.961" endtime="20201029 18:19:08.984"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:08.959" endtime="20201029 18:19:08.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.956" endtime="20201029 18:19:08.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:08.988" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:08.988" endtime="20201029 18:19:08.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.985" endtime="20201029 18:19:08.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.956" endtime="20201029 18:19:08.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.955" endtime="20201029 18:19:08.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.990" endtime="20201029 18:19:08.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.954" endtime="20201029 18:19:08.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.952" endtime="20201029 18:19:08.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.929" endtime="20201029 18:19:08.993"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.001" endtime="20201029 18:19:15.096"></status>
</kw>
<msg timestamp="20201029 18:19:15.097" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.999" endtime="20201029 18:19:15.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.102" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.099" endtime="20201029 18:19:15.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.104" endtime="20201029 18:19:15.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.997" endtime="20201029 18:19:15.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.995" endtime="20201029 18:19:15.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.115" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:19:15.111" endtime="20201029 18:19:15.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.127" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:15.124" endtime="20201029 18:19:15.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.133" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:15.130" endtime="20201029 18:19:15.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.118" endtime="20201029 18:19:15.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.148" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:15.143" endtime="20201029 18:19:15.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.153" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:15.151" endtime="20201029 18:19:15.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.137" endtime="20201029 18:19:15.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.162" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:15.161" endtime="20201029 18:19:15.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.165" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:19:15.164" endtime="20201029 18:19:15.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.157" endtime="20201029 18:19:15.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.172" endtime="20201029 18:19:15.468"></status>
</kw>
<msg timestamp="20201029 18:19:15.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060876375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160625375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.170" endtime="20201029 18:19:15.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060876375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160625375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.472" endtime="20201029 18:19:15.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.480" endtime="20201029 18:19:15.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.168" endtime="20201029 18:19:15.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.166" endtime="20201029 18:19:15.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:15.486" level="INFO">${FILTERED} = [{'diff': 0.09974899999999998}, {'diff': 0.09950418000000003}, {'diff': 0.09958250000000002}, {'diff': 0.09958604200000004}, {'diff': 0.09957384700000005}, {'diff': 0.0995792780000001}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201029 18:19:15.483" endtime="20201029 18:19:15.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.490" level="INFO">${RESULT} = {'diff': [0.09974899999999998, 0.09950418000000003, 0.09958250000000002, 0.09958604200000004, 0.09957384700000005, 0.0995792780000001, 0.09957470899999998, 0.099582375, 0.099583639, 0.0995812919999999...</msg>
<status status="PASS" starttime="20201029 18:19:15.487" endtime="20201029 18:19:15.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.495" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:15.494" endtime="20201029 18:19:15.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.497" level="INFO">VALUE: [0.09974899999999998, 0.09950418000000003, 0.09958250000000002, 0.09958604200000004, 0.09957384700000005, 0.0995792780000001, 0.09957470899999998, 0.099582375, 0.099583639, 0.09958129199999999, 0.09958540299999985, 0.099582528, 0.09957963899999989, 0.09957562499999995, 0.09958398599999985, 0.09957850000000001, 0.09958293100000004, 0.09957491699999999, 0.0995712230000001, 0.0995718339999998, 0.09957308300000012, 0.09957569399999988, 0.09957058299999977, 0.099572722, 0.09957184699999999, 0.09956537500000007, 0.09956755599999978, 0.09956643099999996, 0.09957882000000007, 0.09958394399999992, 0.09957515299999997, 0.09957232000000005, 0.09957823600000015, 0.09958644400000027, 0.09958854200000022, 0.09958362500000018, 0.09958837500000017, 0.09959119499999991, 0.09959073699999976, 0.09959276399999961, 0.09959098599999994, 0.09959420900000016, 0.09959601400000029, 0.09959043099999931, 0.09959565299999973, 0.09959413899999969, 0.09959763899999974, 0.0995927089999995, 0.09959091699999956, 0.09958995900000023, 0.09959124999999958]</msg>
<status status="PASS" starttime="20201029 18:19:15.496" endtime="20201029 18:19:15.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.491" endtime="20201029 18:19:15.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.993" endtime="20201029 18:19:15.499"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:08.926" endtime="20201029 18:19:15.500" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.506" endtime="20201029 18:19:15.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.504" endtime="20201029 18:19:15.526"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.539" endtime="20201029 18:19:15.551"></status>
</kw>
<msg timestamp="20201029 18:19:15.551" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.537" endtime="20201029 18:19:15.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.552" endtime="20201029 18:19:15.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.556" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:15.555" endtime="20201029 18:19:15.557"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:15.534" endtime="20201029 18:19:15.557"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:15.532" endtime="20201029 18:19:15.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.531" endtime="20201029 18:19:15.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:15.562" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:15.561" endtime="20201029 18:19:15.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.559" endtime="20201029 18:19:15.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.530" endtime="20201029 18:19:15.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.530" endtime="20201029 18:19:15.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.564" endtime="20201029 18:19:15.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.528" endtime="20201029 18:19:15.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.527" endtime="20201029 18:19:15.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.503" endtime="20201029 18:19:15.566"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.577" endtime="20201029 18:19:21.670"></status>
</kw>
<msg timestamp="20201029 18:19:21.671" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.573" endtime="20201029 18:19:21.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.672" endtime="20201029 18:19:21.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.674" endtime="20201029 18:19:21.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.570" endtime="20201029 18:19:21.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.568" endtime="20201029 18:19:21.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.680" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:19:21.677" endtime="20201029 18:19:21.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.684" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:21.683" endtime="20201029 18:19:21.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.685" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:21.685" endtime="20201029 18:19:21.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.680" endtime="20201029 18:19:21.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.690" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:21.689" endtime="20201029 18:19:21.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.692" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:21.691" endtime="20201029 18:19:21.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.687" endtime="20201029 18:19:21.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.697" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:21.696" endtime="20201029 18:19:21.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.699" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:19:21.698" endtime="20201029 18:19:21.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.694" endtime="20201029 18:19:21.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.706" endtime="20201029 18:19:22.015"></status>
</kw>
<msg timestamp="20201029 18:19:22.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062992903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163053667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.704" endtime="20201029 18:19:22.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062992903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163053667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.024" endtime="20201029 18:19:22.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.042" endtime="20201029 18:19:22.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.702" endtime="20201029 18:19:22.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.700" endtime="20201029 18:19:22.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:22.052" level="INFO">${FILTERED} = [{'diff': 0.10006076400000001}, {'diff': 0.09921472199999998}, {'diff': 0.099583333}, {'diff': 0.09958072299999998}, {'diff': 0.09958579199999995}, {'diff': 0.09958983399999999}, {'diff': 0.0995940560...</msg>
<status status="PASS" starttime="20201029 18:19:22.049" endtime="20201029 18:19:22.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.057" level="INFO">${RESULT} = {'diff': [0.10006076400000001, 0.09921472199999998, 0.099583333, 0.09958072299999998, 0.09958579199999995, 0.09958983399999999, 0.09959405600000004, 0.09959302800000003, 0.09959925000000003, 0.0996059...</msg>
<status status="PASS" starttime="20201029 18:19:22.053" endtime="20201029 18:19:22.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.061" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:22.060" endtime="20201029 18:19:22.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.063" level="INFO">VALUE: [0.10006076400000001, 0.09921472199999998, 0.099583333, 0.09958072299999998, 0.09958579199999995, 0.09958983399999999, 0.09959405600000004, 0.09959302800000003, 0.09959925000000003, 0.09960595900000002, 0.09960084699999983, 0.09961136100000001, 0.09960695799999986, 0.09960430499999995, 0.09959644400000012, 0.09959377800000002, 0.09959645900000003, 0.09959720900000013, 0.09960063899999994, 0.09959744400000003, 0.09960055499999987, 0.09960434700000009, 0.09960623600000007, 0.09960397300000023, 0.09960223599999996, 0.09959405599999993, 0.09958709700000012, 0.09958373600000003, 0.09958751400000043, 0.09959306899999998, 0.09959237499999984, 0.09959211200000029, 0.09959100000000021, 0.09958965200000014, 0.09959397300000017, 0.09959208399999975, 0.09959626399999966, 0.09959612500000015, 0.09959615300000024, 0.09958730500000046, 0.09958473599999973, 0.0995896519999997, 0.09959005500000018, 0.09959723600000014, 0.09959445800000033, 0.09959909800000055, 0.09958979199999973, 0.09958401400000039, 0.09957725000000028, 0.09956648599999962, 0.09957512499999943]</msg>
<status status="PASS" starttime="20201029 18:19:22.062" endtime="20201029 18:19:22.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.058" endtime="20201029 18:19:22.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.567" endtime="20201029 18:19:22.065"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:15.501" endtime="20201029 18:19:22.065" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.072" endtime="20201029 18:19:22.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.070" endtime="20201029 18:19:22.092"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.109" endtime="20201029 18:19:22.122"></status>
</kw>
<msg timestamp="20201029 18:19:22.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.106" endtime="20201029 18:19:22.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.126" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.124" endtime="20201029 18:19:22.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.131" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:22.128" endtime="20201029 18:19:22.132"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:22.103" endtime="20201029 18:19:22.133"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:22.099" endtime="20201029 18:19:22.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.097" endtime="20201029 18:19:22.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:22.137" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:22.136" endtime="20201029 18:19:22.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.134" endtime="20201029 18:19:22.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.096" endtime="20201029 18:19:22.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.095" endtime="20201029 18:19:22.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.139" endtime="20201029 18:19:22.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.094" endtime="20201029 18:19:22.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.092" endtime="20201029 18:19:22.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.069" endtime="20201029 18:19:22.141"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.149" endtime="20201029 18:19:28.245"></status>
</kw>
<msg timestamp="20201029 18:19:28.246" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.148" endtime="20201029 18:19:28.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.249" endtime="20201029 18:19:28.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.254" endtime="20201029 18:19:28.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.145" endtime="20201029 18:19:28.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.143" endtime="20201029 18:19:28.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.265" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:19:28.261" endtime="20201029 18:19:28.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.273" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:28.271" endtime="20201029 18:19:28.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.277" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:28.275" endtime="20201029 18:19:28.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.266" endtime="20201029 18:19:28.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.287" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:28.285" endtime="20201029 18:19:28.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.291" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:28.289" endtime="20201029 18:19:28.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.280" endtime="20201029 18:19:28.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.301" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:28.298" endtime="20201029 18:19:28.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.303" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:19:28.302" endtime="20201029 18:19:28.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.294" endtime="20201029 18:19:28.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.311" endtime="20201029 18:19:28.609"></status>
</kw>
<msg timestamp="20201029 18:19:28.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069171611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1694205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:28.309" endtime="20201029 18:19:28.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069171611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1694205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:28.613" endtime="20201029 18:19:28.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.621" endtime="20201029 18:19:28.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.307" endtime="20201029 18:19:28.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.305" endtime="20201029 18:19:28.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:28.627" level="INFO">${FILTERED} = [{'diff': 0.10024888900000001}, {'diff': 0.09978883300000002}, {'diff': 0.098817292}, {'diff': 0.09958922200000003}, {'diff': 0.09958458299999995}, {'diff': 0.09958902700000005}, {'diff': 0.0995884310...</msg>
<status status="PASS" starttime="20201029 18:19:28.624" endtime="20201029 18:19:28.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.631" level="INFO">${RESULT} = {'diff': [0.10024888900000001, 0.09978883300000002, 0.098817292, 0.09958922200000003, 0.09958458299999995, 0.09958902700000005, 0.09958843100000003, 0.09958784700000001, 0.09959113900000005, 0.0995916...</msg>
<status status="PASS" starttime="20201029 18:19:28.628" endtime="20201029 18:19:28.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.635" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:28.634" endtime="20201029 18:19:28.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.638" level="INFO">VALUE: [0.10024888900000001, 0.09978883300000002, 0.098817292, 0.09958922200000003, 0.09958458299999995, 0.09958902700000005, 0.09958843100000003, 0.09958784700000001, 0.09959113900000005, 0.09959161099999991, 0.09959154199999998, 0.099586972, 0.09959206900000006, 0.0995878750000001, 0.09958466600000015, 0.09958972199999994, 0.099582222, 0.09958484700000003, 0.09958916600000012, 0.09959298599999977, 0.09958525000000007, 0.09958718000000033, 0.09959359700000014, 0.09959613899999997, 0.0995871949999998, 0.09957583399999992, 0.09957440300000009, 0.09958963799999987, 0.09958909699999996, 0.09958897199999983, 0.09958511100000011, 0.099595125, 0.09959333300000006, 0.09960012500000026, 0.09959666600000006, 0.099603514, 0.09959845900000008, 0.09960008300000034, 0.09959841699999972, 0.09959863900000032, 0.09959945900000022, 0.09959956899999955, 0.09960262500000017, 0.09959649999999964, 0.09959568100000027, 0.09959068099999957, 0.09958937499999987, 0.09959856899999942, 0.09959997200000004, 0.09960355599999993, 0.09960327800000002]</msg>
<status status="PASS" starttime="20201029 18:19:28.636" endtime="20201029 18:19:28.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.632" endtime="20201029 18:19:28.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.142" endtime="20201029 18:19:28.639"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:22.067" endtime="20201029 18:19:28.640" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.646" endtime="20201029 18:19:28.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.645" endtime="20201029 18:19:28.666"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.680" endtime="20201029 18:19:28.692"></status>
</kw>
<msg timestamp="20201029 18:19:28.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.678" endtime="20201029 18:19:28.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.693" endtime="20201029 18:19:28.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.698" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:28.696" endtime="20201029 18:19:28.698"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:28.676" endtime="20201029 18:19:28.699"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:28.672" endtime="20201029 18:19:28.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.671" endtime="20201029 18:19:28.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:28.704" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:28.703" endtime="20201029 18:19:28.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.701" endtime="20201029 18:19:28.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.670" endtime="20201029 18:19:28.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.670" endtime="20201029 18:19:28.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.705" endtime="20201029 18:19:28.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.669" endtime="20201029 18:19:28.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.667" endtime="20201029 18:19:28.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.643" endtime="20201029 18:19:28.708"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.716" endtime="20201029 18:19:34.812"></status>
</kw>
<msg timestamp="20201029 18:19:34.813" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.714" endtime="20201029 18:19:34.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.815" endtime="20201029 18:19:34.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.821" endtime="20201029 18:19:34.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.712" endtime="20201029 18:19:34.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.710" endtime="20201029 18:19:34.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.831" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:19:34.827" endtime="20201029 18:19:34.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.840" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:34.838" endtime="20201029 18:19:34.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.844" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:34.842" endtime="20201029 18:19:34.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.833" endtime="20201029 18:19:34.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.853" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:34.851" endtime="20201029 18:19:34.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.858" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:34.856" endtime="20201029 18:19:34.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.847" endtime="20201029 18:19:34.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.867" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:34.865" endtime="20201029 18:19:34.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.874" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:19:34.870" endtime="20201029 18:19:34.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.860" endtime="20201029 18:19:34.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.889" endtime="20201029 18:19:35.190"></status>
</kw>
<msg timestamp="20201029 18:19:35.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061238833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.886" endtime="20201029 18:19:35.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061238833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.194" endtime="20201029 18:19:35.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.202" endtime="20201029 18:19:35.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.880" endtime="20201029 18:19:35.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.877" endtime="20201029 18:19:35.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:35.208" level="INFO">${FILTERED} = [{'diff': 0.10053247300000001}, {'diff': 0.09984049999999997}, {'diff': 0.09849216699999996}, {'diff': 0.099588389}, {'diff': 0.09959583299999997}, {'diff': 0.099598458}, {'diff': 0.09959309699999996}...</msg>
<status status="PASS" starttime="20201029 18:19:35.205" endtime="20201029 18:19:35.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.212" level="INFO">${RESULT} = {'diff': [0.10053247300000001, 0.09984049999999997, 0.09849216699999996, 0.099588389, 0.09959583299999997, 0.099598458, 0.09959309699999996, 0.09959751400000005, 0.09959134699999994, 0.099595069999999...</msg>
<status status="PASS" starttime="20201029 18:19:35.209" endtime="20201029 18:19:35.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.216" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:35.215" endtime="20201029 18:19:35.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.220" level="INFO">VALUE: [0.10053247300000001, 0.09984049999999997, 0.09849216699999996, 0.099588389, 0.09959583299999997, 0.099598458, 0.09959309699999996, 0.09959751400000005, 0.09959134699999994, 0.0995950699999999, 0.09959204199999983, 0.09959381999999994, 0.09958755499999983, 0.09958488899999995, 0.09958005599999997, 0.09957972299999995, 0.09958480599999997, 0.0995807500000001, 0.099590222, 0.09958473600000017, 0.09958566699999993, 0.09959016700000012, 0.09959130599999977, 0.09959216699999995, 0.09959634700000031, 0.0995976810000001, 0.09959338900000025, 0.09958959700000003, 0.09959052700000015, 0.09959076399999978, 0.09959138900000042, 0.09959616700000007, 0.09959016600000004, 0.09958683300000004, 0.09959227799999981, 0.09959212500000003, 0.09959240199999986, 0.09959043000000012, 0.09959005600000026, 0.09958912499999961, 0.09958490200000014, 0.09958629199999969, 0.09958250000000035, 0.09958392999999965, 0.09959306899999998, 0.09959476399999989, 0.09958988899999976, 0.09958661100000032, 0.09959438899999995, 0.09959659699999968, 0.09959712500000073]</msg>
<status status="PASS" starttime="20201029 18:19:35.218" endtime="20201029 18:19:35.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.213" endtime="20201029 18:19:35.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.708" endtime="20201029 18:19:35.221"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:28.641" endtime="20201029 18:19:35.222" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.228" endtime="20201029 18:19:35.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.227" endtime="20201029 18:19:35.248"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.261" endtime="20201029 18:19:35.273"></status>
</kw>
<msg timestamp="20201029 18:19:35.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.259" endtime="20201029 18:19:35.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.274" endtime="20201029 18:19:35.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.279" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:35.277" endtime="20201029 18:19:35.279"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:35.257" endtime="20201029 18:19:35.280"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:35.254" endtime="20201029 18:19:35.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.253" endtime="20201029 18:19:35.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:35.284" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:35.283" endtime="20201029 18:19:35.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.281" endtime="20201029 18:19:35.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.252" endtime="20201029 18:19:35.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.252" endtime="20201029 18:19:35.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.286" endtime="20201029 18:19:35.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.250" endtime="20201029 18:19:35.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.249" endtime="20201029 18:19:35.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.225" endtime="20201029 18:19:35.288"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.297" endtime="20201029 18:19:41.394"></status>
</kw>
<msg timestamp="20201029 18:19:41.395" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.295" endtime="20201029 18:19:41.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.400" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.397" endtime="20201029 18:19:41.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.403" endtime="20201029 18:19:41.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.292" endtime="20201029 18:19:41.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.290" endtime="20201029 18:19:41.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.413" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:19:41.409" endtime="20201029 18:19:41.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.422" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:41.420" endtime="20201029 18:19:41.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.426" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:41.424" endtime="20201029 18:19:41.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.415" endtime="20201029 18:19:41.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.436" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:41.434" endtime="20201029 18:19:41.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.440" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:41.438" endtime="20201029 18:19:41.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.429" endtime="20201029 18:19:41.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.449" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:41.447" endtime="20201029 18:19:41.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.453" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:19:41.452" endtime="20201029 18:19:41.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.443" endtime="20201029 18:19:41.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.468" endtime="20201029 18:19:41.770"></status>
</kw>
<msg timestamp="20201029 18:19:41.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061146222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162029208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.465" endtime="20201029 18:19:41.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061146222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162029208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.774" endtime="20201029 18:19:41.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.783" endtime="20201029 18:19:41.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.460" endtime="20201029 18:19:41.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.456" endtime="20201029 18:19:41.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:41.789" level="INFO">${FILTERED} = [{'diff': 0.10088298600000001}, {'diff': 0.09980592999999999}, {'diff': 0.098132944}, {'diff': 0.10136634700000002}, {'diff': 0.09779898600000003}, {'diff': 0.099578681}, {'diff': 0.0995810279999999},...</msg>
<status status="PASS" starttime="20201029 18:19:41.786" endtime="20201029 18:19:41.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.795" level="INFO">${RESULT} = {'diff': [0.10088298600000001, 0.09980592999999999, 0.098132944, 0.10136634700000002, 0.09779898600000003, 0.099578681, 0.0995810279999999, 0.09957992999999998, 0.09958609699999998, 0.0995848889999999...</msg>
<status status="PASS" starttime="20201029 18:19:41.790" endtime="20201029 18:19:41.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.799" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:41.798" endtime="20201029 18:19:41.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.801" level="INFO">VALUE: [0.10088298600000001, 0.09980592999999999, 0.098132944, 0.10136634700000002, 0.09779898600000003, 0.099578681, 0.0995810279999999, 0.09957992999999998, 0.09958609699999998, 0.09958488899999995, 0.09958795900000017, 0.09959001400000012, 0.09958897200000005, 0.09959038900000006, 0.09958218099999994, 0.09958741699999996, 0.09960497200000007, 0.09960770900000004, 0.099610639, 0.09960670800000004, 0.09961052799999992, 0.09960488900000009, 0.09960452699999989, 0.09960229200000015, 0.09960043099999982, 0.09959790300000027, 0.09960030500000006, 0.09959955500000017, 0.09959455499999992, 0.09960091599999998, 0.09960076399999984, 0.09960411099999966, 0.09959761099999964, 0.09959849999999992, 0.09959577699999977, 0.09959224999999972, 0.09959937499999993, 0.09959782000000006, 0.09959194499999979, 0.09958863900000026, 0.09958292999999951, 0.09958650000000002, 0.09959149999999983, 0.09959261099999939, 0.09959626399999966, 0.0995965140000008, 0.09959534700000017, 0.09959713900000011, 0.09959795799999949, 0.09959462499999994, 0.09959380599999967]</msg>
<status status="PASS" starttime="20201029 18:19:41.800" endtime="20201029 18:19:41.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.796" endtime="20201029 18:19:41.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.289" endtime="20201029 18:19:41.803"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:35.223" endtime="20201029 18:19:41.804" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:19:00.835" endtime="20201029 18:19:41.810"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:16:54.446" endtime="20201029 18:19:41.843"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
