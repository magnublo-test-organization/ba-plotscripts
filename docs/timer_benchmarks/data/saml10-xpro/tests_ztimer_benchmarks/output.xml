<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:53:51.271" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.845" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:51.853" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:53.074" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:51.844" endtime="20201030 15:53:53.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.078" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:53:53.077" endtime="20201030 15:53:53.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.842" endtime="20201030 15:53:53.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:53.083" endtime="20201030 15:53:53.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.081" endtime="20201030 15:53:53.270"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.283" endtime="20201030 15:53:53.296"></status>
</kw>
<msg timestamp="20201030 15:53:53.296" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.282" endtime="20201030 15:53:53.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.297" endtime="20201030 15:53:53.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.302" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:53.300" endtime="20201030 15:53:53.302"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:53.279" endtime="20201030 15:53:53.303"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:53.277" endtime="20201030 15:53:53.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.276" endtime="20201030 15:53:53.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:53.308" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:53.307" endtime="20201030 15:53:53.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.305" endtime="20201030 15:53:53.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.275" endtime="20201030 15:53:53.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.274" endtime="20201030 15:53:53.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.310" endtime="20201030 15:53:53.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.273" endtime="20201030 15:53:53.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.313" endtime="20201030 15:53:53.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.271" endtime="20201030 15:53:53.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.840" endtime="20201030 15:53:53.315"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:53.321" endtime="20201030 15:53:53.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.320" endtime="20201030 15:53:53.341"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.355" endtime="20201030 15:53:53.367"></status>
</kw>
<msg timestamp="20201030 15:53:53.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.353" endtime="20201030 15:53:53.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.369" endtime="20201030 15:53:53.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.373" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:53.371" endtime="20201030 15:53:53.373"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:53.351" endtime="20201030 15:53:53.374"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:53.348" endtime="20201030 15:53:53.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.346" endtime="20201030 15:53:53.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:53.379" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:53.378" endtime="20201030 15:53:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.376" endtime="20201030 15:53:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.346" endtime="20201030 15:53:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.345" endtime="20201030 15:53:53.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.380" endtime="20201030 15:53:53.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.344" endtime="20201030 15:53:53.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.342" endtime="20201030 15:53:53.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.319" endtime="20201030 15:53:53.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.391" endtime="20201030 15:53:53.399"></status>
</kw>
<msg timestamp="20201030 15:53:53.399" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.388" endtime="20201030 15:53:53.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.402" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.401" endtime="20201030 15:53:53.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.403" endtime="20201030 15:53:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.385" endtime="20201030 15:53:53.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.384" endtime="20201030 15:53:53.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.409" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:53:53.408" endtime="20201030 15:53:53.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.411" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:53:53.410" endtime="20201030 15:53:53.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.406" endtime="20201030 15:53:53.412"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:53.316" endtime="20201030 15:53:53.413" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:51.382" endtime="20201030 15:53:53.415"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.466" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:53.474" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:54.669" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:53.465" endtime="20201030 15:53:54.671"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.676" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:53:54.673" endtime="20201030 15:53:54.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.464" endtime="20201030 15:53:54.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:54.682" endtime="20201030 15:53:54.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.679" endtime="20201030 15:53:54.908"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.920" endtime="20201030 15:53:54.933"></status>
</kw>
<msg timestamp="20201030 15:53:54.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.919" endtime="20201030 15:53:54.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.934" endtime="20201030 15:53:54.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.939" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:54.937" endtime="20201030 15:53:54.939"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:54.916" endtime="20201030 15:53:54.940"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:54.914" endtime="20201030 15:53:54.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.913" endtime="20201030 15:53:54.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:54.944" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:54.943" endtime="20201030 15:53:54.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.941" endtime="20201030 15:53:54.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.912" endtime="20201030 15:53:54.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.911" endtime="20201030 15:53:54.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.946" endtime="20201030 15:53:54.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.910" endtime="20201030 15:53:54.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.948" endtime="20201030 15:53:54.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.909" endtime="20201030 15:53:54.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.462" endtime="20201030 15:53:54.951"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:54.957" endtime="20201030 15:53:54.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.955" endtime="20201030 15:53:54.977"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.990" endtime="20201030 15:53:55.002"></status>
</kw>
<msg timestamp="20201030 15:53:55.003" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.989" endtime="20201030 15:53:55.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.004" endtime="20201030 15:53:55.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.009" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:55.007" endtime="20201030 15:53:55.009"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:54.986" endtime="20201030 15:53:55.010"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:54.984" endtime="20201030 15:53:55.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.983" endtime="20201030 15:53:55.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:55.014" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:55.013" endtime="20201030 15:53:55.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.011" endtime="20201030 15:53:55.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.982" endtime="20201030 15:53:55.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.981" endtime="20201030 15:53:55.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.016" endtime="20201030 15:53:55.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.980" endtime="20201030 15:53:55.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.978" endtime="20201030 15:53:55.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.954" endtime="20201030 15:53:55.018"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.027" endtime="20201030 15:53:55.038"></status>
</kw>
<msg timestamp="20201030 15:53:55.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.025" endtime="20201030 15:53:55.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.041" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.040" endtime="20201030 15:53:55.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.042" endtime="20201030 15:53:55.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.023" endtime="20201030 15:53:55.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.021" endtime="20201030 15:53:55.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.051" endtime="20201030 15:53:55.342"></status>
</kw>
<msg timestamp="20201030 15:53:55.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060532528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060533778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.049" endtime="20201030 15:53:55.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060532528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060533778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.346" endtime="20201030 15:53:55.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.356" endtime="20201030 15:53:55.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.047" endtime="20201030 15:53:55.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.045" endtime="20201030 15:53:55.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:55.363" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1940000000029705e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1809999999959353e-06}, {'diff': 1.1939999999960316e-...</msg>
<status status="PASS" starttime="20201030 15:53:55.360" endtime="20201030 15:53:55.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:55.369" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2500000000012501e-06, 1.1810000000028742e-06, 1.1940000000029705e-06, 1.1800000000034006e-06, 1.1809999999959353e-06, 1.1939999999960316e-06, 1.1800000000034006e-06, 1.1810000000028742e-06...</msg>
<status status="PASS" starttime="20201030 15:53:55.364" endtime="20201030 15:53:55.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.374" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:55.372" endtime="20201030 15:53:55.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.377" level="INFO">VALUE: [1.2500000000012501e-06, 1.1810000000028742e-06, 1.1940000000029705e-06, 1.1800000000034006e-06, 1.1809999999959353e-06, 1.1939999999960316e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.2500000000012501e-06, 1.1249999999976557e-06, 1.2080000000025404e-06, 1.1800000000034006e-06, 1.1940000000029705e-06, 1.1949999999955052e-06, 1.1800000000034006e-06, 1.1940000000029705e-06, 1.2220000000021103e-06, 1.1659999999968917e-06, 1.2079999999956015e-06, 1.1949999999955052e-06, 1.1659999999968917e-06, 1.1810000000028742e-06, 1.209000000002014e-06, 1.2079999999956015e-06, 1.1530000000037344e-06, 1.1809999999959353e-06, 1.209000000002014e-06, 1.1810000000028742e-06, 1.1800000000034006e-06, 1.1809999999959353e-06, 1.1950000000024441e-06, 1.1659999999968917e-06, 1.1940000000029705e-06, 1.1519999999973218e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1669999999963654e-06, 1.2220000000021103e-06, 1.1660000000038306e-06, 1.2089999999950751e-06, 1.1250000000045945e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.1950000000024441e-06, 1.1520000000042607e-06, 1.1810000000028742e-06, 1.1669999999963654e-06, 1.1939999999960316e-06, 1.1949999999955052e-06, 1.1800000000034006e-06]</msg>
<status status="PASS" starttime="20201030 15:53:55.375" endtime="20201030 15:53:55.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.370" endtime="20201030 15:53:55.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:55.383" endtime="20201030 15:53:55.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.382" endtime="20201030 15:53:55.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.380" endtime="20201030 15:53:55.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.020" endtime="20201030 15:53:55.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.019" endtime="20201030 15:53:55.404"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.412" endtime="20201030 15:53:55.422"></status>
</kw>
<msg timestamp="20201030 15:53:55.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.410" endtime="20201030 15:53:55.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.425" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.423" endtime="20201030 15:53:55.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.426" endtime="20201030 15:53:55.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.407" endtime="20201030 15:53:55.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.406" endtime="20201030 15:53:55.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.435" endtime="20201030 15:53:55.721"></status>
</kw>
<msg timestamp="20201030 15:53:55.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018652972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.433" endtime="20201030 15:53:55.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018652972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.725" endtime="20201030 15:53:55.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.734" endtime="20201030 15:53:55.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.431" endtime="20201030 15:53:55.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.429" endtime="20201030 15:53:55.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:55.740" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1940000000029705e-0...</msg>
<status status="PASS" starttime="20201030 15:53:55.737" endtime="20201030 15:53:55.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:55.745" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2500000000012501e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1.153000000000265e-06, 1.1669999999998348e-06, ...</msg>
<status status="PASS" starttime="20201030 15:53:55.742" endtime="20201030 15:53:55.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.750" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:55.749" endtime="20201030 15:53:55.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.752" level="INFO">VALUE: [1.2500000000012501e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.2219999999986408e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1950000000024441e-06, 1.1940000000029705e-06, 1.1810000000028742e-06, 1.2359999999982108e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.2219999999986408e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.2080000000025404e-06, 1.1380000000012214e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.2639999999973506e-06, 1.1949999999989747e-06, 1.26400000000082e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 15:53:55.751" endtime="20201030 15:53:55.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.746" endtime="20201030 15:53:55.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:55.757" endtime="20201030 15:53:55.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.755" endtime="20201030 15:53:55.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.754" endtime="20201030 15:53:55.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.405" endtime="20201030 15:53:55.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.404" endtime="20201030 15:53:55.777"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.785" endtime="20201030 15:53:55.795"></status>
</kw>
<msg timestamp="20201030 15:53:55.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.784" endtime="20201030 15:53:55.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.797" endtime="20201030 15:53:55.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.799" endtime="20201030 15:53:55.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.781" endtime="20201030 15:53:55.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.779" endtime="20201030 15:53:55.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.808" endtime="20201030 15:53:56.095"></status>
</kw>
<msg timestamp="20201030 15:53:56.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018523653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.807" endtime="20201030 15:53:56.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018523653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.099" endtime="20201030 15:53:56.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.109" endtime="20201030 15:53:56.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.804" endtime="20201030 15:53:56.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.802" endtime="20201030 15:53:56.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.118" level="INFO">${RESULT} = [{'diff': 1.26400000000082e-06}, {'diff': 1.207999999999071e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.207999999999071e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.2089999999985446e-06},...</msg>
<status status="PASS" starttime="20201030 15:53:56.114" endtime="20201030 15:53:56.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:56.122" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.26400000000082e-06, 1.207999999999071e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.1669999999998348e-06, 1.2089999999985446e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 15:53:56.119" endtime="20201030 15:53:56.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.127" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:56.126" endtime="20201030 15:53:56.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.130" level="INFO">VALUE: [1.26400000000082e-06, 1.207999999999071e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.1669999999998348e-06, 1.2089999999985446e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.207999999999071e-06, 1.2219999999986408e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.2220000000021103e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1950000000024441e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.2499999999977807e-06, 1.26400000000082e-06, 1.2080000000025404e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:53:56.128" endtime="20201030 15:53:56.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.123" endtime="20201030 15:53:56.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.135" endtime="20201030 15:53:56.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.133" endtime="20201030 15:53:56.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.132" endtime="20201030 15:53:56.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.778" endtime="20201030 15:53:56.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.778" endtime="20201030 15:53:56.155"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.163" endtime="20201030 15:53:56.173"></status>
</kw>
<msg timestamp="20201030 15:53:56.174" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.162" endtime="20201030 15:53:56.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.175" endtime="20201030 15:53:56.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.177" endtime="20201030 15:53:56.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.159" endtime="20201030 15:53:56.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.157" endtime="20201030 15:53:56.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.189" endtime="20201030 15:53:56.475"></status>
</kw>
<msg timestamp="20201030 15:53:56.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018681778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018683014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.187" endtime="20201030 15:53:56.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018681778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018683014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.480" endtime="20201030 15:53:56.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.488" endtime="20201030 15:53:56.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.183" endtime="20201030 15:53:56.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.181" endtime="20201030 15:53:56.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.495" level="INFO">${RESULT} = [{'diff': 1.2360000000016802e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.2220000000021103e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.1949999999989747e-06}...</msg>
<status status="PASS" starttime="20201030 15:53:56.492" endtime="20201030 15:53:56.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:56.499" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2360000000016802e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.2220000000021103e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 15:53:56.496" endtime="20201030 15:53:56.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.503" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:56.502" endtime="20201030 15:53:56.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.506" level="INFO">VALUE: [1.2360000000016802e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.2220000000021103e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1249999999976557e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.2359999999982108e-06, 1.139000000000695e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.2229999999981145e-06, 1.2220000000021103e-06, 1.125000000001125e-06, 1.2500000000012501e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.2639999999973506e-06, 1.2220000000021103e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.1660000000003612e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:53:56.504" endtime="20201030 15:53:56.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.500" endtime="20201030 15:53:56.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.511" endtime="20201030 15:53:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.509" endtime="20201030 15:53:56.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.508" endtime="20201030 15:53:56.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.156" endtime="20201030 15:53:56.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.156" endtime="20201030 15:53:56.532"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.540" endtime="20201030 15:53:56.551"></status>
</kw>
<msg timestamp="20201030 15:53:56.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.538" endtime="20201030 15:53:56.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.553" endtime="20201030 15:53:56.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.556" endtime="20201030 15:53:56.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.535" endtime="20201030 15:53:56.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.534" endtime="20201030 15:53:56.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.567" endtime="20201030 15:53:56.853"></status>
</kw>
<msg timestamp="20201030 15:53:56.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.565" endtime="20201030 15:53:56.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.858" endtime="20201030 15:53:56.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.866" endtime="20201030 15:53:56.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.562" endtime="20201030 15:53:56.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.560" endtime="20201030 15:53:56.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.873" level="INFO">${RESULT} = [{'diff': 1.26400000000082e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1519999999973218e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1950000000024441e-06}, {'diff': 1.1809999999994047e-06}...</msg>
<status status="PASS" starttime="20201030 15:53:56.869" endtime="20201030 15:53:56.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:56.878" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.26400000000082e-06, 1.179999999999931e-06, 1.1519999999973218e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:53:56.874" endtime="20201030 15:53:56.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.882" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:56.881" endtime="20201030 15:53:56.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.884" level="INFO">VALUE: [1.26400000000082e-06, 1.179999999999931e-06, 1.1519999999973218e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1.179999999999931e-06, 1.1110000000015552e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.2220000000021103e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.2089999999985446e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.1810000000028742e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1810000000028742e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.2080000000025404e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.2089999999985446e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.193999999999501e-06]</msg>
<status status="PASS" starttime="20201030 15:53:56.883" endtime="20201030 15:53:56.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.879" endtime="20201030 15:53:56.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.889" endtime="20201030 15:53:56.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.887" endtime="20201030 15:53:56.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.886" endtime="20201030 15:53:56.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.532" endtime="20201030 15:53:56.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.532" endtime="20201030 15:53:56.909"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.917" endtime="20201030 15:53:56.927"></status>
</kw>
<msg timestamp="20201030 15:53:56.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.916" endtime="20201030 15:53:56.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.930" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.929" endtime="20201030 15:53:56.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.931" endtime="20201030 15:53:56.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.913" endtime="20201030 15:53:56.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.912" endtime="20201030 15:53:56.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.940" endtime="20201030 15:53:57.229"></status>
</kw>
<msg timestamp="20201030 15:53:57.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018519639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.939" endtime="20201030 15:53:57.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018519639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.234" endtime="20201030 15:53:57.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.242" endtime="20201030 15:53:57.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.936" endtime="20201030 15:53:57.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.935" endtime="20201030 15:53:57.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:57.248" level="INFO">${RESULT} = [{'diff': 1.2639999999973506e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.2089999999985446e-06}, {'diff': 1.209000000002014e-06}, {'diff': 1.2089999999985446e-06}, {'diff': 1.1809999999994047e-06...</msg>
<status status="PASS" starttime="20201030 15:53:57.245" endtime="20201030 15:53:57.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:57.252" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2639999999973506e-06, 1.179999999999931e-06, 1.2089999999985446e-06, 1.209000000002014e-06, 1.2089999999985446e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:53:57.249" endtime="20201030 15:53:57.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.257" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:57.256" endtime="20201030 15:53:57.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.259" level="INFO">VALUE: [1.2639999999973506e-06, 1.179999999999931e-06, 1.2089999999985446e-06, 1.209000000002014e-06, 1.2089999999985446e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1.1949999999989747e-06, 1.1660000000003612e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1110000000015552e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.2360000000016802e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1950000000024441e-06, 1.1810000000028742e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.0969999999985158e-06, 1.1940000000029705e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.2360000000016802e-06, 1.207999999999071e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:53:57.258" endtime="20201030 15:53:57.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.253" endtime="20201030 15:53:57.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:57.263" endtime="20201030 15:53:57.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.262" endtime="20201030 15:53:57.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.261" endtime="20201030 15:53:57.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.910" endtime="20201030 15:53:57.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.910" endtime="20201030 15:53:57.284"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.292" endtime="20201030 15:53:57.302"></status>
</kw>
<msg timestamp="20201030 15:53:57.303" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.290" endtime="20201030 15:53:57.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.305" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.304" endtime="20201030 15:53:57.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.306" endtime="20201030 15:53:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.288" endtime="20201030 15:53:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.286" endtime="20201030 15:53:57.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.316" endtime="20201030 15:53:57.603"></status>
</kw>
<msg timestamp="20201030 15:53:57.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018574153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018575417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.315" endtime="20201030 15:53:57.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018574153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018575417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.608" endtime="20201030 15:53:57.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.616" endtime="20201030 15:53:57.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.312" endtime="20201030 15:53:57.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.310" endtime="20201030 15:53:57.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:57.622" level="INFO">${RESULT} = [{'diff': 1.26400000000082e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.26400000000082e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.179999999999931e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:53:57.619" endtime="20201030 15:53:57.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:57.626" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.26400000000082e-06, 1.1949999999989747e-06, 1.1810000000028742e-06, 1.26400000000082e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 15:53:57.623" endtime="20201030 15:53:57.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.631" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:57.630" endtime="20201030 15:53:57.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.633" level="INFO">VALUE: [1.26400000000082e-06, 1.1949999999989747e-06, 1.1810000000028742e-06, 1.26400000000082e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.1670000000033043e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.207999999999071e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1109999999980857e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.2080000000025404e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1950000000024441e-06]</msg>
<status status="PASS" starttime="20201030 15:53:57.632" endtime="20201030 15:53:57.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.627" endtime="20201030 15:53:57.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:57.638" endtime="20201030 15:53:57.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.637" endtime="20201030 15:53:57.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.636" endtime="20201030 15:53:57.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.285" endtime="20201030 15:53:57.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.284" endtime="20201030 15:53:57.659"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.667" endtime="20201030 15:53:57.677"></status>
</kw>
<msg timestamp="20201030 15:53:57.677" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.665" endtime="20201030 15:53:57.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.680" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.679" endtime="20201030 15:53:57.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.681" endtime="20201030 15:53:57.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.663" endtime="20201030 15:53:57.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.661" endtime="20201030 15:53:57.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.690" endtime="20201030 15:53:57.978"></status>
</kw>
<msg timestamp="20201030 15:53:57.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018525875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018527056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.689" endtime="20201030 15:53:57.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018525875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018527056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.982" endtime="20201030 15:53:57.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.990" endtime="20201030 15:53:57.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.686" endtime="20201030 15:53:57.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.685" endtime="20201030 15:53:57.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:57.997" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.207999999999071e-06}, {'diff': 1.0970000000019853e-06}, {'diff': 1.1809999999994047e-06...</msg>
<status status="PASS" starttime="20201030 15:53:57.993" endtime="20201030 15:53:57.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:58.002" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.0970000000019853e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, ...</msg>
<status status="PASS" starttime="20201030 15:53:57.998" endtime="20201030 15:53:58.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.006" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:58.005" endtime="20201030 15:53:58.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.008" level="INFO">VALUE: [1.1809999999994047e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.0970000000019853e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.209000000002014e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1810000000028742e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1670000000033043e-06, 1.209000000002014e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.2080000000025404e-06, 1.2219999999986408e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.2080000000025404e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1.2220000000021103e-06, 1.2089999999985446e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1940000000029705e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1940000000029705e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.2370000000011538e-06]</msg>
<status status="PASS" starttime="20201030 15:53:58.007" endtime="20201030 15:53:58.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.003" endtime="20201030 15:53:58.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.013" endtime="20201030 15:53:58.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.011" endtime="20201030 15:53:58.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.010" endtime="20201030 15:53:58.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.660" endtime="20201030 15:53:58.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.659" endtime="20201030 15:53:58.034"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.041" endtime="20201030 15:53:58.052"></status>
</kw>
<msg timestamp="20201030 15:53:58.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.040" endtime="20201030 15:53:58.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.055" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.053" endtime="20201030 15:53:58.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.056" endtime="20201030 15:53:58.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.037" endtime="20201030 15:53:58.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.036" endtime="20201030 15:53:58.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.065" endtime="20201030 15:53:58.354"></status>
</kw>
<msg timestamp="20201030 15:53:58.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018638972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018640222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.063" endtime="20201030 15:53:58.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018638972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018640222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.358" endtime="20201030 15:53:58.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.367" endtime="20201030 15:53:58.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.061" endtime="20201030 15:53:58.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.059" endtime="20201030 15:53:58.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:58.374" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.207999999999071e-06}, {'diff': 1.1520000000007913e-06}...</msg>
<status status="PASS" starttime="20201030 15:53:58.371" endtime="20201030 15:53:58.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:58.378" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2500000000012501e-06, 1.153000000000265e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.207999999999071e-06, 1.1520000000007913e-06, 1.193999999999501e-06, 1.207999999999071e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 15:53:58.375" endtime="20201030 15:53:58.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.383" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:58.382" endtime="20201030 15:53:58.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.385" level="INFO">VALUE: [1.2500000000012501e-06, 1.153000000000265e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.207999999999071e-06, 1.1520000000007913e-06, 1.193999999999501e-06, 1.207999999999071e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.2220000000021103e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1940000000029705e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1389999999972256e-06, 1.193999999999501e-06, 1.1249999999976557e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.193999999999501e-06, 1.2639999999973506e-06, 1.193999999999501e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:53:58.384" endtime="20201030 15:53:58.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.379" endtime="20201030 15:53:58.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.389" endtime="20201030 15:53:58.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.388" endtime="20201030 15:53:58.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.387" endtime="20201030 15:53:58.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.034" endtime="20201030 15:53:58.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.034" endtime="20201030 15:53:58.410"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.418" endtime="20201030 15:53:58.428"></status>
</kw>
<msg timestamp="20201030 15:53:58.429" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.416" endtime="20201030 15:53:58.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.431" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.430" endtime="20201030 15:53:58.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.433" endtime="20201030 15:53:58.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.414" endtime="20201030 15:53:58.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.412" endtime="20201030 15:53:58.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.442" endtime="20201030 15:53:58.729"></status>
</kw>
<msg timestamp="20201030 15:53:58.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018977042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.441" endtime="20201030 15:53:58.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018977042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.733" endtime="20201030 15:53:58.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.741" endtime="20201030 15:53:58.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.438" endtime="20201030 15:53:58.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.437" endtime="20201030 15:53:58.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:58.748" level="INFO">${RESULT} = [{'diff': 1.2770000000009163e-06}, {'diff': 1.1950000000024441e-06}, {'diff': 1.1950000000024441e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.1809999999994047e-06...</msg>
<status status="PASS" starttime="20201030 15:53:58.745" endtime="20201030 15:53:58.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:58.752" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2770000000009163e-06, 1.1950000000024441e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:53:58.749" endtime="20201030 15:53:58.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.758" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:58.756" endtime="20201030 15:53:58.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.761" level="INFO">VALUE: [1.2770000000009163e-06, 1.1950000000024441e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.2089999999985446e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1940000000029705e-06, 1.26400000000082e-06, 1.179999999999931e-06, 1.2219999999986408e-06, 1.179999999999931e-06, 1.2219999999986408e-06, 1.2360000000016802e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1110000000015552e-06, 1.1949999999989747e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.2219999999986408e-06, 1.1809999999994047e-06, 1.1110000000015552e-06, 1.2360000000016802e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:53:58.759" endtime="20201030 15:53:58.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.753" endtime="20201030 15:53:58.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.768" endtime="20201030 15:53:58.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.766" endtime="20201030 15:53:58.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.764" endtime="20201030 15:53:58.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.411" endtime="20201030 15:53:58.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.410" endtime="20201030 15:53:58.790"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.801" endtime="20201030 15:53:58.812"></status>
</kw>
<msg timestamp="20201030 15:53:58.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.799" endtime="20201030 15:53:58.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.816" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.814" endtime="20201030 15:53:58.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.818" endtime="20201030 15:53:58.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.796" endtime="20201030 15:53:58.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.793" endtime="20201030 15:53:58.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.830" endtime="20201030 15:53:59.127"></status>
</kw>
<msg timestamp="20201030 15:53:59.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.828" endtime="20201030 15:53:59.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.131" endtime="20201030 15:53:59.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.139" endtime="20201030 15:53:59.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.825" endtime="20201030 15:53:59.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.822" endtime="20201030 15:53:59.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:59.145" level="INFO">${RESULT} = [{'diff': 1.2639999999973506e-06}, {'diff': 1.2080000000025404e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1809999999994047e-...</msg>
<status status="PASS" starttime="20201030 15:53:59.142" endtime="20201030 15:53:59.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:59.150" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2639999999973506e-06, 1.2080000000025404e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.26400000000082e-06, 1.193999999999501e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:53:59.146" endtime="20201030 15:53:59.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.154" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:59.153" endtime="20201030 15:53:59.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.157" level="INFO">VALUE: [1.2639999999973506e-06, 1.2080000000025404e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.26400000000082e-06, 1.193999999999501e-06, 1.1659999999968917e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1950000000024441e-06, 1.1520000000007913e-06, 1.207999999999071e-06, 1.1519999999973218e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.27800000000039e-06, 1.1949999999989747e-06, 1.1950000000024441e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.207999999999071e-06, 1.209000000002014e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.2220000000021103e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.223000000001584e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1810000000028742e-06]</msg>
<status status="PASS" starttime="20201030 15:53:59.156" endtime="20201030 15:53:59.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.151" endtime="20201030 15:53:59.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.165" endtime="20201030 15:53:59.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.163" endtime="20201030 15:53:59.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.162" endtime="20201030 15:53:59.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.791" endtime="20201030 15:53:59.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.791" endtime="20201030 15:53:59.186"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.196" endtime="20201030 15:53:59.206"></status>
</kw>
<msg timestamp="20201030 15:53:59.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.194" endtime="20201030 15:53:59.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.208" endtime="20201030 15:53:59.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.210" endtime="20201030 15:53:59.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.191" endtime="20201030 15:53:59.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.188" endtime="20201030 15:53:59.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.219" endtime="20201030 15:53:59.505"></status>
</kw>
<msg timestamp="20201030 15:53:59.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021023306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.217" endtime="20201030 15:53:59.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021023306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.509" endtime="20201030 15:53:59.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.517" endtime="20201030 15:53:59.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.215" endtime="20201030 15:53:59.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.213" endtime="20201030 15:53:59.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:59.524" level="INFO">${RESULT} = [{'diff': 1.2639999999973506e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1950000000024441e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1809999999994047e-...</msg>
<status status="PASS" starttime="20201030 15:53:59.521" endtime="20201030 15:53:59.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:59.528" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2639999999973506e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1949999999989747e-06,...</msg>
<status status="PASS" starttime="20201030 15:53:59.525" endtime="20201030 15:53:59.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.533" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:59.532" endtime="20201030 15:53:59.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.535" level="INFO">VALUE: [1.2639999999973506e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.207999999999071e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.2219999999986408e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1950000000024441e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.2219999999986408e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.26400000000082e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.2080000000025404e-06, 1.1809999999994047e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:53:59.534" endtime="20201030 15:53:59.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.529" endtime="20201030 15:53:59.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.540" endtime="20201030 15:53:59.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.538" endtime="20201030 15:53:59.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.537" endtime="20201030 15:53:59.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.187" endtime="20201030 15:53:59.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.186" endtime="20201030 15:53:59.561"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.569" endtime="20201030 15:53:59.579"></status>
</kw>
<msg timestamp="20201030 15:53:59.579" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.567" endtime="20201030 15:53:59.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.582" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.580" endtime="20201030 15:53:59.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.583" endtime="20201030 15:53:59.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.565" endtime="20201030 15:53:59.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.563" endtime="20201030 15:53:59.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.593" endtime="20201030 15:53:59.894"></status>
</kw>
<msg timestamp="20201030 15:53:59.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018588, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01858925, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:59.591" endtime="20201030 15:53:59.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018588, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01858925, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:59.899" endtime="20201030 15:53:59.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.907" endtime="20201030 15:53:59.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.589" endtime="20201030 15:53:59.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.587" endtime="20201030 15:53:59.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:59.913" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 1.1249999999976557e-06}, {'diff': 1.1950000000024441e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.193999999999501e-06...</msg>
<status status="PASS" starttime="20201030 15:53:59.910" endtime="20201030 15:53:59.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:53:59.917" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2500000000012501e-06, 1.1249999999976557e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:53:59.914" endtime="20201030 15:53:59.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.921" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:53:59.920" endtime="20201030 15:53:59.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.924" level="INFO">VALUE: [1.2500000000012501e-06, 1.1249999999976557e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.125000000001125e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.207999999999071e-06, 1.26400000000082e-06, 1.193999999999501e-06, 1.1800000000034006e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.1950000000024441e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.2769999999974468e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.2219999999986408e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.2499999999977807e-06, 1.1949999999989747e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.2080000000025404e-06, 1.1810000000028742e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:53:59.923" endtime="20201030 15:53:59.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.918" endtime="20201030 15:53:59.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.930" endtime="20201030 15:53:59.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.928" endtime="20201030 15:53:59.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.927" endtime="20201030 15:53:59.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.562" endtime="20201030 15:53:59.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.561" endtime="20201030 15:53:59.951"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.959" endtime="20201030 15:53:59.969"></status>
</kw>
<msg timestamp="20201030 15:53:59.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.957" endtime="20201030 15:53:59.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.972" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.970" endtime="20201030 15:53:59.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.973" endtime="20201030 15:53:59.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.955" endtime="20201030 15:53:59.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.953" endtime="20201030 15:53:59.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.982" endtime="20201030 15:54:00.268"></status>
</kw>
<msg timestamp="20201030 15:54:00.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018585708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018586931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.980" endtime="20201030 15:54:00.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018585708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018586931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:00.272" endtime="20201030 15:54:00.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.281" endtime="20201030 15:54:00.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.977" endtime="20201030 15:54:00.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.976" endtime="20201030 15:54:00.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:00.287" level="INFO">${RESULT} = [{'diff': 1.223000000001584e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.2220000000021103e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1669999999998348e-0...</msg>
<status status="PASS" starttime="20201030 15:54:00.284" endtime="20201030 15:54:00.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:00.292" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.223000000001584e-06, 1.1809999999994047e-06, 1.2220000000021103e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06, ...</msg>
<status status="PASS" starttime="20201030 15:54:00.288" endtime="20201030 15:54:00.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.296" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:00.295" endtime="20201030 15:54:00.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.299" level="INFO">VALUE: [1.223000000001584e-06, 1.1809999999994047e-06, 1.2220000000021103e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.2360000000016802e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.2360000000016802e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.179999999999931e-06, 1.1940000000029705e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.2089999999985446e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.2089999999985446e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.2080000000025404e-06, 1.1659999999968917e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:54:00.297" endtime="20201030 15:54:00.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.293" endtime="20201030 15:54:00.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:00.303" endtime="20201030 15:54:00.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.302" endtime="20201030 15:54:00.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.301" endtime="20201030 15:54:00.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.952" endtime="20201030 15:54:00.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.951" endtime="20201030 15:54:00.324"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.332" endtime="20201030 15:54:00.342"></status>
</kw>
<msg timestamp="20201030 15:54:00.342" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:00.330" endtime="20201030 15:54:00.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.345" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:00.344" endtime="20201030 15:54:00.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.346" endtime="20201030 15:54:00.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.328" endtime="20201030 15:54:00.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.326" endtime="20201030 15:54:00.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.355" endtime="20201030 15:54:00.671"></status>
</kw>
<msg timestamp="20201030 15:54:00.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018519736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:00.353" endtime="20201030 15:54:00.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018519736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:00.675" endtime="20201030 15:54:00.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.683" endtime="20201030 15:54:00.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.351" endtime="20201030 15:54:00.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.349" endtime="20201030 15:54:00.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:00.690" level="INFO">${RESULT} = [{'diff': 1.2080000000025404e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1249999999976557e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1380000000012214e-...</msg>
<status status="PASS" starttime="20201030 15:54:00.686" endtime="20201030 15:54:00.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:00.694" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2080000000025404e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.1949999999989747e-06, 1.1810000000028742e-06...</msg>
<status status="PASS" starttime="20201030 15:54:00.691" endtime="20201030 15:54:00.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.698" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:00.697" endtime="20201030 15:54:00.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.700" level="INFO">VALUE: [1.2080000000025404e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.1949999999989747e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.2089999999985446e-06, 1.1809999999994047e-06, 1.2219999999986408e-06, 1.193999999999501e-06, 1.1940000000029705e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.2089999999985446e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1810000000028742e-06, 1.2360000000016802e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.2219999999986408e-06]</msg>
<status status="PASS" starttime="20201030 15:54:00.699" endtime="20201030 15:54:00.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.694" endtime="20201030 15:54:00.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:00.705" endtime="20201030 15:54:00.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.704" endtime="20201030 15:54:00.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.702" endtime="20201030 15:54:00.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.325" endtime="20201030 15:54:00.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.324" endtime="20201030 15:54:00.726"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.734" endtime="20201030 15:54:00.744"></status>
</kw>
<msg timestamp="20201030 15:54:00.744" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:00.732" endtime="20201030 15:54:00.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:00.747" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:00.745" endtime="20201030 15:54:00.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.748" endtime="20201030 15:54:00.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.729" endtime="20201030 15:54:00.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.728" endtime="20201030 15:54:00.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:00.757" endtime="20201030 15:54:01.042"></status>
</kw>
<msg timestamp="20201030 15:54:01.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018462875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018464125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:00.756" endtime="20201030 15:54:01.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018462875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018464125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:01.046" endtime="20201030 15:54:01.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.055" endtime="20201030 15:54:01.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.753" endtime="20201030 15:54:01.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.752" endtime="20201030 15:54:01.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:01.061" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1950000000024441e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.193999999999501e-06...</msg>
<status status="PASS" starttime="20201030 15:54:01.058" endtime="20201030 15:54:01.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:01.065" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2500000000012501e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:54:01.062" endtime="20201030 15:54:01.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.069" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:01.068" endtime="20201030 15:54:01.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.072" level="INFO">VALUE: [1.2500000000012501e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1.223000000001584e-06, 1.2089999999985446e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1950000000024441e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1950000000024441e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.2219999999986408e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:54:01.070" endtime="20201030 15:54:01.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.066" endtime="20201030 15:54:01.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:01.077" endtime="20201030 15:54:01.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.076" endtime="20201030 15:54:01.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.075" endtime="20201030 15:54:01.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.727" endtime="20201030 15:54:01.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:00.726" endtime="20201030 15:54:01.098"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.106" endtime="20201030 15:54:01.116"></status>
</kw>
<msg timestamp="20201030 15:54:01.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.104" endtime="20201030 15:54:01.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.119" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.117" endtime="20201030 15:54:01.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.120" endtime="20201030 15:54:01.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.102" endtime="20201030 15:54:01.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.100" endtime="20201030 15:54:01.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.129" endtime="20201030 15:54:01.415"></status>
</kw>
<msg timestamp="20201030 15:54:01.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018460694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:01.127" endtime="20201030 15:54:01.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018460694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:01.419" endtime="20201030 15:54:01.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.427" endtime="20201030 15:54:01.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.125" endtime="20201030 15:54:01.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.123" endtime="20201030 15:54:01.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:01.434" level="INFO">${RESULT} = [{'diff': 1.2359999999982108e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.2359999999982108e-06}, {'diff': 1.1669999999998348e-0...</msg>
<status status="PASS" starttime="20201030 15:54:01.431" endtime="20201030 15:54:01.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:01.439" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2359999999982108e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.2359999999982108e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.193999999999501e-06, ...</msg>
<status status="PASS" starttime="20201030 15:54:01.435" endtime="20201030 15:54:01.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.443" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:01.442" endtime="20201030 15:54:01.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.445" level="INFO">VALUE: [1.2359999999982108e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.2359999999982108e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.26400000000082e-06, 1.1809999999994047e-06, 1.209000000002014e-06, 1.193999999999501e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.2499999999977807e-06, 1.2229999999981145e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.209000000002014e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.1949999999989747e-06, 1.207999999999071e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.2500000000012501e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.125000000001125e-06, 1.193999999999501e-06]</msg>
<status status="PASS" starttime="20201030 15:54:01.444" endtime="20201030 15:54:01.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.440" endtime="20201030 15:54:01.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:01.455" endtime="20201030 15:54:01.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.453" endtime="20201030 15:54:01.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.452" endtime="20201030 15:54:01.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.099" endtime="20201030 15:54:01.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.098" endtime="20201030 15:54:01.475"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.483" endtime="20201030 15:54:01.493"></status>
</kw>
<msg timestamp="20201030 15:54:01.494" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.481" endtime="20201030 15:54:01.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.496" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.495" endtime="20201030 15:54:01.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.497" endtime="20201030 15:54:01.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.479" endtime="20201030 15:54:01.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.477" endtime="20201030 15:54:01.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.506" endtime="20201030 15:54:01.794"></status>
</kw>
<msg timestamp="20201030 15:54:01.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018585333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:01.505" endtime="20201030 15:54:01.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018585333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:01.798" endtime="20201030 15:54:01.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.806" endtime="20201030 15:54:01.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.502" endtime="20201030 15:54:01.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.500" endtime="20201030 15:54:01.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:01.813" level="INFO">${RESULT} = [{'diff': 1.3050000000000561e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.2219999999986408e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1669999999998348e-0...</msg>
<status status="PASS" starttime="20201030 15:54:01.810" endtime="20201030 15:54:01.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:01.817" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.3050000000000561e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.2219999999986408e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.2089999999985446e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:01.814" endtime="20201030 15:54:01.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.822" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:01.821" endtime="20201030 15:54:01.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.824" level="INFO">VALUE: [1.3050000000000561e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.2219999999986408e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.2089999999985446e-06, 1.2219999999986408e-06, 1.153000000000265e-06, 1.1940000000029705e-06, 1.1809999999994047e-06, 1.2219999999986408e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.207999999999071e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1940000000029705e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.2499999999977807e-06, 1.2219999999986408e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.125000000001125e-06, 1.223000000001584e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1670000000033043e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 15:54:01.823" endtime="20201030 15:54:01.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.818" endtime="20201030 15:54:01.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:01.829" endtime="20201030 15:54:01.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.827" endtime="20201030 15:54:01.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.826" endtime="20201030 15:54:01.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.476" endtime="20201030 15:54:01.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.476" endtime="20201030 15:54:01.850"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.857" endtime="20201030 15:54:01.868"></status>
</kw>
<msg timestamp="20201030 15:54:01.868" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.856" endtime="20201030 15:54:01.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.869" endtime="20201030 15:54:01.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.872" endtime="20201030 15:54:01.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.853" endtime="20201030 15:54:01.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.852" endtime="20201030 15:54:01.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.881" endtime="20201030 15:54:02.166"></status>
</kw>
<msg timestamp="20201030 15:54:02.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018504653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018505903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:01.880" endtime="20201030 15:54:02.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018504653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018505903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.171" endtime="20201030 15:54:02.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.179" endtime="20201030 15:54:02.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.877" endtime="20201030 15:54:02.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.876" endtime="20201030 15:54:02.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:02.185" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.2219999999986408e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.1949999999989747e-0...</msg>
<status status="PASS" starttime="20201030 15:54:02.182" endtime="20201030 15:54:02.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:02.189" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2500000000012501e-06, 1.1810000000028742e-06, 1.2219999999986408e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1940000000029705e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:02.186" endtime="20201030 15:54:02.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.194" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:02.193" endtime="20201030 15:54:02.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.198" level="INFO">VALUE: [1.2500000000012501e-06, 1.1810000000028742e-06, 1.2219999999986408e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.0970000000019853e-06, 1.2080000000025404e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.207999999999071e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.207999999999071e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.2080000000025404e-06, 1.193999999999501e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.1950000000024441e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.223000000001584e-06, 1.1950000000024441e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.2770000000009163e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.2499999999977807e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.2229999999981145e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1809999999994047e-06, 1.1949999999989747e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:54:02.196" endtime="20201030 15:54:02.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.190" endtime="20201030 15:54:02.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:02.205" endtime="20201030 15:54:02.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.203" endtime="20201030 15:54:02.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.202" endtime="20201030 15:54:02.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.850" endtime="20201030 15:54:02.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.850" endtime="20201030 15:54:02.226"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.234" endtime="20201030 15:54:02.244"></status>
</kw>
<msg timestamp="20201030 15:54:02.244" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.232" endtime="20201030 15:54:02.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.245" endtime="20201030 15:54:02.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.248" endtime="20201030 15:54:02.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.229" endtime="20201030 15:54:02.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.228" endtime="20201030 15:54:02.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.257" endtime="20201030 15:54:02.543"></status>
</kw>
<msg timestamp="20201030 15:54:02.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018635653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018636889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.255" endtime="20201030 15:54:02.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018635653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018636889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.548" endtime="20201030 15:54:02.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.556" endtime="20201030 15:54:02.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.253" endtime="20201030 15:54:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.251" endtime="20201030 15:54:02.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:02.562" level="INFO">${RESULT} = [{'diff': 1.2360000000016802e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.193999999999501e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:02.559" endtime="20201030 15:54:02.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:02.567" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2360000000016802e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 15:54:02.563" endtime="20201030 15:54:02.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.571" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:02.570" endtime="20201030 15:54:02.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.574" level="INFO">VALUE: [1.2360000000016802e-06, 1.179999999999931e-06, 1.193999999999501e-06, 1.1949999999989747e-06, 1.1949999999989747e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.1659999999968917e-06, 1.1810000000028742e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.209000000002014e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.137999999997752e-06, 1.2219999999986408e-06, 1.1949999999989747e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1949999999989747e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1950000000024441e-06, 1.193999999999501e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:54:02.572" endtime="20201030 15:54:02.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.568" endtime="20201030 15:54:02.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:02.579" endtime="20201030 15:54:02.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.577" endtime="20201030 15:54:02.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.576" endtime="20201030 15:54:02.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.227" endtime="20201030 15:54:02.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.226" endtime="20201030 15:54:02.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.019" endtime="20201030 15:54:02.600"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:54.951" endtime="20201030 15:54:02.600" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:02.607" endtime="20201030 15:54:02.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.605" endtime="20201030 15:54:02.627"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.639" endtime="20201030 15:54:02.652"></status>
</kw>
<msg timestamp="20201030 15:54:02.652" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.638" endtime="20201030 15:54:02.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.653" endtime="20201030 15:54:02.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.658" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:02.656" endtime="20201030 15:54:02.659"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:02.635" endtime="20201030 15:54:02.659"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:02.633" endtime="20201030 15:54:02.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.632" endtime="20201030 15:54:02.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:02.664" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:02.663" endtime="20201030 15:54:02.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.661" endtime="20201030 15:54:02.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.631" endtime="20201030 15:54:02.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.630" endtime="20201030 15:54:02.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.665" endtime="20201030 15:54:02.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.629" endtime="20201030 15:54:02.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.627" endtime="20201030 15:54:02.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.604" endtime="20201030 15:54:02.668"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.676" endtime="20201030 15:54:02.687"></status>
</kw>
<msg timestamp="20201030 15:54:02.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.675" endtime="20201030 15:54:02.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.689" endtime="20201030 15:54:02.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.692" endtime="20201030 15:54:02.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.672" endtime="20201030 15:54:02.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.671" endtime="20201030 15:54:02.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.701" endtime="20201030 15:54:02.988"></status>
</kw>
<msg timestamp="20201030 15:54:02.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060457528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060466986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.699" endtime="20201030 15:54:02.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060457528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060466986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.992" endtime="20201030 15:54:02.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.000" endtime="20201030 15:54:03.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.696" endtime="20201030 15:54:03.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.695" endtime="20201030 15:54:03.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.007" level="INFO">${RESULT} = [{'diff': 9.457999999996913e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:03.003" endtime="20201030 15:54:03.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:03.012" level="INFO">${OVERHEAD} = {'diff': [9.457999999996913e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.709000000002576e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 15:54:03.008" endtime="20201030 15:54:03.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.016" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:03.015" endtime="20201030 15:54:03.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.018" level="INFO">VALUE: [9.457999999996913e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.709000000002576e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.722000000002672e-06, 8.777999999994013e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.735999999995303e-06, 8.819999999999661e-06, 8.722000000002672e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.791999999993583e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.790999999994109e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.749999999994873e-06, 8.805000000000618e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.721999999995733e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:03.017" endtime="20201030 15:54:03.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.012" endtime="20201030 15:54:03.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.022" endtime="20201030 15:54:03.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.021" endtime="20201030 15:54:03.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.020" endtime="20201030 15:54:03.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.669" endtime="20201030 15:54:03.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.669" endtime="20201030 15:54:03.043"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.051" endtime="20201030 15:54:03.062"></status>
</kw>
<msg timestamp="20201030 15:54:03.062" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.049" endtime="20201030 15:54:03.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.065" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.064" endtime="20201030 15:54:03.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.066" endtime="20201030 15:54:03.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.047" endtime="20201030 15:54:03.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.045" endtime="20201030 15:54:03.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.075" endtime="20201030 15:54:03.361"></status>
</kw>
<msg timestamp="20201030 15:54:03.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019215931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.073" endtime="20201030 15:54:03.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019215931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.365" endtime="20201030 15:54:03.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.373" endtime="20201030 15:54:03.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.071" endtime="20201030 15:54:03.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.069" endtime="20201030 15:54:03.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.380" level="INFO">${RESULT} = [{'diff': 9.471999999999953e-06}, {'diff': 8.777999999997482e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.819000000000188e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:03.376" endtime="20201030 15:54:03.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:03.384" level="INFO">${OVERHEAD} = {'diff': [9.471999999999953e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.8060...</msg>
<status status="PASS" starttime="20201030 15:54:03.381" endtime="20201030 15:54:03.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.388" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:03.387" endtime="20201030 15:54:03.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.390" level="INFO">VALUE: [9.471999999999953e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.805000000000618e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.847000000002797e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.804999999997148e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.804999999997148e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.735999999998773e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:03.389" endtime="20201030 15:54:03.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.384" endtime="20201030 15:54:03.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.395" endtime="20201030 15:54:03.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.393" endtime="20201030 15:54:03.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.392" endtime="20201030 15:54:03.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.044" endtime="20201030 15:54:03.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.044" endtime="20201030 15:54:03.415"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.423" endtime="20201030 15:54:03.435"></status>
</kw>
<msg timestamp="20201030 15:54:03.435" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.421" endtime="20201030 15:54:03.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.438" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.436" endtime="20201030 15:54:03.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.439" endtime="20201030 15:54:03.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.419" endtime="20201030 15:54:03.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.417" endtime="20201030 15:54:03.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.448" endtime="20201030 15:54:03.734"></status>
</kw>
<msg timestamp="20201030 15:54:03.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.446" endtime="20201030 15:54:03.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.738" endtime="20201030 15:54:03.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.746" endtime="20201030 15:54:03.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.444" endtime="20201030 15:54:03.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.442" endtime="20201030 15:54:03.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.753" level="INFO">${RESULT} = [{'diff': 9.458000000000383e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.790999999997579e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.806000000000092e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:03.750" endtime="20201030 15:54:03.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:03.757" level="INFO">${OVERHEAD} = {'diff': [9.458000000000383e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.7499...</msg>
<status status="PASS" starttime="20201030 15:54:03.754" endtime="20201030 15:54:03.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.761" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:03.760" endtime="20201030 15:54:03.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.763" level="INFO">VALUE: [9.458000000000383e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.777000000001478e-06, 8.846999999999328e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.847000000002797e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.790999999997579e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.776999999998009e-06, 8.8340000000027e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:03.762" endtime="20201030 15:54:03.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.758" endtime="20201030 15:54:03.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.771" endtime="20201030 15:54:03.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.770" endtime="20201030 15:54:03.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.768" endtime="20201030 15:54:03.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.416" endtime="20201030 15:54:03.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.416" endtime="20201030 15:54:03.792"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.800" endtime="20201030 15:54:03.811"></status>
</kw>
<msg timestamp="20201030 15:54:03.811" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.798" endtime="20201030 15:54:03.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.812" endtime="20201030 15:54:03.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.815" endtime="20201030 15:54:03.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.796" endtime="20201030 15:54:03.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.794" endtime="20201030 15:54:03.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.824" endtime="20201030 15:54:04.110"></status>
</kw>
<msg timestamp="20201030 15:54:04.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.822" endtime="20201030 15:54:04.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.115" endtime="20201030 15:54:04.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.125" endtime="20201030 15:54:04.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.819" endtime="20201030 15:54:04.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.818" endtime="20201030 15:54:04.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.131" level="INFO">${RESULT} = [{'diff': 9.472999999999426e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:04.128" endtime="20201030 15:54:04.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:04.137" level="INFO">${OVERHEAD} = {'diff': [9.472999999999426e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.7639...</msg>
<status status="PASS" starttime="20201030 15:54:04.132" endtime="20201030 15:54:04.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.142" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:04.141" endtime="20201030 15:54:04.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.145" level="INFO">VALUE: [9.472999999999426e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.777999999997482e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.804999999997148e-06, 8.805000000000618e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.763000000001908e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201030 15:54:04.143" endtime="20201030 15:54:04.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.138" endtime="20201030 15:54:04.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:04.149" endtime="20201030 15:54:04.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.148" endtime="20201030 15:54:04.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.147" endtime="20201030 15:54:04.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.793" endtime="20201030 15:54:04.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.792" endtime="20201030 15:54:04.171"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.178" endtime="20201030 15:54:04.189"></status>
</kw>
<msg timestamp="20201030 15:54:04.190" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.177" endtime="20201030 15:54:04.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.191" endtime="20201030 15:54:04.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.193" endtime="20201030 15:54:04.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.174" endtime="20201030 15:54:04.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.173" endtime="20201030 15:54:04.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.202" endtime="20201030 15:54:04.487"></status>
</kw>
<msg timestamp="20201030 15:54:04.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.201" endtime="20201030 15:54:04.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.492" endtime="20201030 15:54:04.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.504" endtime="20201030 15:54:04.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.198" endtime="20201030 15:54:04.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.196" endtime="20201030 15:54:04.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.514" level="INFO">${RESULT} = [{'diff': 9.471999999999953e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.790999999997579e-06}, {'diff': 8.791999999997052e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:04.510" endtime="20201030 15:54:04.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:04.520" level="INFO">${OVERHEAD} = {'diff': [9.471999999999953e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.791999999997052e-06, 8.819000000000188e-06, 8.735999999998773e-06, 8.7909...</msg>
<status status="PASS" starttime="20201030 15:54:04.516" endtime="20201030 15:54:04.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.526" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:04.525" endtime="20201030 15:54:04.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.529" level="INFO">VALUE: [9.471999999999953e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.791999999997052e-06, 8.819000000000188e-06, 8.735999999998773e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.84800000000227e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.762999999998439e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.722000000002672e-06, 8.708999999999106e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201030 15:54:04.527" endtime="20201030 15:54:04.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.521" endtime="20201030 15:54:04.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:04.534" endtime="20201030 15:54:04.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.532" endtime="20201030 15:54:04.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.531" endtime="20201030 15:54:04.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.172" endtime="20201030 15:54:04.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.171" endtime="20201030 15:54:04.555"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.563" endtime="20201030 15:54:04.573"></status>
</kw>
<msg timestamp="20201030 15:54:04.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.561" endtime="20201030 15:54:04.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.576" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.575" endtime="20201030 15:54:04.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.577" endtime="20201030 15:54:04.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.558" endtime="20201030 15:54:04.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.557" endtime="20201030 15:54:04.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.587" endtime="20201030 15:54:04.873"></status>
</kw>
<msg timestamp="20201030 15:54:04.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.585" endtime="20201030 15:54:04.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.877" endtime="20201030 15:54:04.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.885" endtime="20201030 15:54:04.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.583" endtime="20201030 15:54:04.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.581" endtime="20201030 15:54:04.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.894" level="INFO">${RESULT} = [{'diff': 9.499999999999093e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.777000000001478e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.777000000001478e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:04.890" endtime="20201030 15:54:04.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:04.900" level="INFO">${OVERHEAD} = {'diff': [9.499999999999093e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 15:54:04.896" endtime="20201030 15:54:04.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.907" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:04.905" endtime="20201030 15:54:04.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.911" level="INFO">VALUE: [9.499999999999093e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.721999999999203e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.791999999997052e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.737000000001716e-06, 8.776999999998009e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.791999999997052e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201030 15:54:04.909" endtime="20201030 15:54:04.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.902" endtime="20201030 15:54:04.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:04.919" endtime="20201030 15:54:04.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.917" endtime="20201030 15:54:04.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.915" endtime="20201030 15:54:04.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.555" endtime="20201030 15:54:04.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.555" endtime="20201030 15:54:04.941"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.948" endtime="20201030 15:54:04.959"></status>
</kw>
<msg timestamp="20201030 15:54:04.959" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.947" endtime="20201030 15:54:04.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.962" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.960" endtime="20201030 15:54:04.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.963" endtime="20201030 15:54:04.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.944" endtime="20201030 15:54:04.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.943" endtime="20201030 15:54:04.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.972" endtime="20201030 15:54:05.257"></status>
</kw>
<msg timestamp="20201030 15:54:05.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019201653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019211097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.971" endtime="20201030 15:54:05.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019201653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019211097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.262" endtime="20201030 15:54:05.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.270" endtime="20201030 15:54:05.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.968" endtime="20201030 15:54:05.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.966" endtime="20201030 15:54:05.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:05.277" level="INFO">${RESULT} = [{'diff': 9.444000000000813e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.776999999998009e-06}, {'diff': 8.805000000000618e-06}, {'diff': 8.791000000001048e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:05.273" endtime="20201030 15:54:05.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:05.281" level="INFO">${OVERHEAD} = {'diff': [9.444000000000813e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.8060...</msg>
<status status="PASS" starttime="20201030 15:54:05.278" endtime="20201030 15:54:05.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.286" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:05.285" endtime="20201030 15:54:05.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.288" level="INFO">VALUE: [9.444000000000813e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.791999999997052e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.804999999997148e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.804999999997148e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.791999999997052e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:05.287" endtime="20201030 15:54:05.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.282" endtime="20201030 15:54:05.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:05.293" endtime="20201030 15:54:05.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.292" endtime="20201030 15:54:05.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.290" endtime="20201030 15:54:05.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.941" endtime="20201030 15:54:05.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.941" endtime="20201030 15:54:05.314"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.322" endtime="20201030 15:54:05.332"></status>
</kw>
<msg timestamp="20201030 15:54:05.333" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.320" endtime="20201030 15:54:05.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.334" endtime="20201030 15:54:05.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.336" endtime="20201030 15:54:05.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.317" endtime="20201030 15:54:05.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.316" endtime="20201030 15:54:05.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.345" endtime="20201030 15:54:05.632"></status>
</kw>
<msg timestamp="20201030 15:54:05.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019269361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.344" endtime="20201030 15:54:05.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019269361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.636" endtime="20201030 15:54:05.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.644" endtime="20201030 15:54:05.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.341" endtime="20201030 15:54:05.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.339" endtime="20201030 15:54:05.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:05.652" level="INFO">${RESULT} = [{'diff': 9.471999999999953e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.804999999997148e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.763999999997912e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:05.648" endtime="20201030 15:54:05.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:05.656" level="INFO">${OVERHEAD} = {'diff': [9.471999999999953e-06, 8.806000000000092e-06, 8.804999999997148e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.7770...</msg>
<status status="PASS" starttime="20201030 15:54:05.653" endtime="20201030 15:54:05.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.660" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:05.659" endtime="20201030 15:54:05.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.662" level="INFO">VALUE: [9.471999999999953e-06, 8.806000000000092e-06, 8.804999999997148e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.847999999998801e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.8340000000027e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:05.661" endtime="20201030 15:54:05.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.657" endtime="20201030 15:54:05.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:05.667" endtime="20201030 15:54:05.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.666" endtime="20201030 15:54:05.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.665" endtime="20201030 15:54:05.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.315" endtime="20201030 15:54:05.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.314" endtime="20201030 15:54:05.688"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.696" endtime="20201030 15:54:05.706"></status>
</kw>
<msg timestamp="20201030 15:54:05.707" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.694" endtime="20201030 15:54:05.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.709" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.708" endtime="20201030 15:54:05.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.710" endtime="20201030 15:54:05.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.692" endtime="20201030 15:54:05.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.690" endtime="20201030 15:54:05.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.720" endtime="20201030 15:54:06.006"></status>
</kw>
<msg timestamp="20201030 15:54:06.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019251722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019261222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.718" endtime="20201030 15:54:06.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019251722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019261222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.010" endtime="20201030 15:54:06.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.018" endtime="20201030 15:54:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.716" endtime="20201030 15:54:06.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.714" endtime="20201030 15:54:06.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.026" level="INFO">${RESULT} = [{'diff': 9.500000000002562e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.778000000000952e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:06.023" endtime="20201030 15:54:06.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:06.030" level="INFO">${OVERHEAD} = {'diff': [9.500000000002562e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.8060...</msg>
<status status="PASS" starttime="20201030 15:54:06.027" endtime="20201030 15:54:06.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.034" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:06.033" endtime="20201030 15:54:06.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.037" level="INFO">VALUE: [9.500000000002562e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.776999999998009e-06, 8.777999999997482e-06, 8.791999999997052e-06, 8.723000000002146e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.819999999999661e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.762999999998439e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201030 15:54:06.035" endtime="20201030 15:54:06.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.031" endtime="20201030 15:54:06.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.042" endtime="20201030 15:54:06.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.041" endtime="20201030 15:54:06.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.040" endtime="20201030 15:54:06.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.689" endtime="20201030 15:54:06.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.688" endtime="20201030 15:54:06.063"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.071" endtime="20201030 15:54:06.082"></status>
</kw>
<msg timestamp="20201030 15:54:06.082" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.069" endtime="20201030 15:54:06.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.084" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.083" endtime="20201030 15:54:06.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.086" endtime="20201030 15:54:06.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.067" endtime="20201030 15:54:06.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.065" endtime="20201030 15:54:06.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.094" endtime="20201030 15:54:06.380"></status>
</kw>
<msg timestamp="20201030 15:54:06.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019235208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019244653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.093" endtime="20201030 15:54:06.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019235208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019244653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.384" endtime="20201030 15:54:06.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.393" endtime="20201030 15:54:06.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.090" endtime="20201030 15:54:06.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.089" endtime="20201030 15:54:06.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.399" level="INFO">${RESULT} = [{'diff': 9.445000000000286e-06}, {'diff': 8.790999999997579e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.778000000000952e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:06.396" endtime="20201030 15:54:06.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:06.404" level="INFO">${OVERHEAD} = {'diff': [9.445000000000286e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.8610...</msg>
<status status="PASS" starttime="20201030 15:54:06.400" endtime="20201030 15:54:06.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.408" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:06.407" endtime="20201030 15:54:06.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.411" level="INFO">VALUE: [9.445000000000286e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.861000000002367e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.723000000002146e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.723000000002146e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201030 15:54:06.409" endtime="20201030 15:54:06.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.405" endtime="20201030 15:54:06.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.415" endtime="20201030 15:54:06.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.414" endtime="20201030 15:54:06.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.413" endtime="20201030 15:54:06.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.064" endtime="20201030 15:54:06.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.063" endtime="20201030 15:54:06.436"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.444" endtime="20201030 15:54:06.455"></status>
</kw>
<msg timestamp="20201030 15:54:06.455" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.442" endtime="20201030 15:54:06.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.456" endtime="20201030 15:54:06.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.459" endtime="20201030 15:54:06.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.440" endtime="20201030 15:54:06.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.438" endtime="20201030 15:54:06.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.467" endtime="20201030 15:54:06.754"></status>
</kw>
<msg timestamp="20201030 15:54:06.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019226931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.466" endtime="20201030 15:54:06.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019226931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.758" endtime="20201030 15:54:06.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.766" endtime="20201030 15:54:06.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.463" endtime="20201030 15:54:06.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.462" endtime="20201030 15:54:06.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.773" level="INFO">${RESULT} = [{'diff': 9.471999999999953e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.763999999997912e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:06.770" endtime="20201030 15:54:06.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:06.777" level="INFO">${OVERHEAD} = {'diff': [9.471999999999953e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 15:54:06.774" endtime="20201030 15:54:06.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.782" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:06.781" endtime="20201030 15:54:06.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.784" level="INFO">VALUE: [9.471999999999953e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.763999999997912e-06, 8.860999999998898e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.832999999999758e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.790999999997579e-06]</msg>
<status status="PASS" starttime="20201030 15:54:06.783" endtime="20201030 15:54:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.778" endtime="20201030 15:54:06.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.795" endtime="20201030 15:54:06.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.793" endtime="20201030 15:54:06.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.792" endtime="20201030 15:54:06.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.437" endtime="20201030 15:54:06.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.436" endtime="20201030 15:54:06.816"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.823" endtime="20201030 15:54:06.834"></status>
</kw>
<msg timestamp="20201030 15:54:06.835" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.822" endtime="20201030 15:54:06.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.836" endtime="20201030 15:54:06.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.838" endtime="20201030 15:54:06.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.819" endtime="20201030 15:54:06.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.817" endtime="20201030 15:54:06.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.848" endtime="20201030 15:54:07.133"></status>
</kw>
<msg timestamp="20201030 15:54:07.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019224431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019233917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.846" endtime="20201030 15:54:07.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019224431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019233917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.138" endtime="20201030 15:54:07.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.146" endtime="20201030 15:54:07.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.844" endtime="20201030 15:54:07.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.842" endtime="20201030 15:54:07.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:07.152" level="INFO">${RESULT} = [{'diff': 9.485999999999523e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.805000000000618e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.764000000001382e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:07.149" endtime="20201030 15:54:07.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:07.156" level="INFO">${OVERHEAD} = {'diff': [9.485999999999523e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.7640...</msg>
<status status="PASS" starttime="20201030 15:54:07.153" endtime="20201030 15:54:07.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.160" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:07.159" endtime="20201030 15:54:07.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.163" level="INFO">VALUE: [9.485999999999523e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.790999999997579e-06, 8.707999999999633e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.763000000001908e-06, 8.820000000003131e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201030 15:54:07.161" endtime="20201030 15:54:07.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.157" endtime="20201030 15:54:07.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:07.170" endtime="20201030 15:54:07.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.169" endtime="20201030 15:54:07.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.168" endtime="20201030 15:54:07.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.816" endtime="20201030 15:54:07.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.816" endtime="20201030 15:54:07.191"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.199" endtime="20201030 15:54:07.209"></status>
</kw>
<msg timestamp="20201030 15:54:07.210" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.197" endtime="20201030 15:54:07.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.211" endtime="20201030 15:54:07.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.213" endtime="20201030 15:54:07.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.195" endtime="20201030 15:54:07.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.193" endtime="20201030 15:54:07.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.222" endtime="20201030 15:54:07.508"></status>
</kw>
<msg timestamp="20201030 15:54:07.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019080083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019089556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.221" endtime="20201030 15:54:07.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019080083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019089556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.512" endtime="20201030 15:54:07.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.520" endtime="20201030 15:54:07.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.218" endtime="20201030 15:54:07.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.217" endtime="20201030 15:54:07.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:07.527" level="INFO">${RESULT} = [{'diff': 9.472999999999426e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:07.524" endtime="20201030 15:54:07.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:07.532" level="INFO">${OVERHEAD} = {'diff': [9.472999999999426e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.7770...</msg>
<status status="PASS" starttime="20201030 15:54:07.528" endtime="20201030 15:54:07.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.536" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:07.535" endtime="20201030 15:54:07.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.538" level="INFO">VALUE: [9.472999999999426e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.790999999997579e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.791999999997052e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.707999999999633e-06, 8.736999999998246e-06, 8.818999999996718e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.875000000001937e-06, 8.805000000000618e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.805999999996622e-06, 8.790999999997579e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201030 15:54:07.537" endtime="20201030 15:54:07.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.532" endtime="20201030 15:54:07.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:07.543" endtime="20201030 15:54:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.541" endtime="20201030 15:54:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.540" endtime="20201030 15:54:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.192" endtime="20201030 15:54:07.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.192" endtime="20201030 15:54:07.564"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.571" endtime="20201030 15:54:07.582"></status>
</kw>
<msg timestamp="20201030 15:54:07.583" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.570" endtime="20201030 15:54:07.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.585" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.584" endtime="20201030 15:54:07.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.586" endtime="20201030 15:54:07.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.567" endtime="20201030 15:54:07.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.566" endtime="20201030 15:54:07.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.595" endtime="20201030 15:54:07.880"></status>
</kw>
<msg timestamp="20201030 15:54:07.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019152958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019162403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.593" endtime="20201030 15:54:07.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019152958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019162403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.884" endtime="20201030 15:54:07.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.892" endtime="20201030 15:54:07.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.591" endtime="20201030 15:54:07.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.589" endtime="20201030 15:54:07.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:07.899" level="INFO">${RESULT} = [{'diff': 9.445000000000286e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.791000000001048e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:07.896" endtime="20201030 15:54:07.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:07.904" level="INFO">${OVERHEAD} = {'diff': [9.445000000000286e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.722999999998676e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.7920...</msg>
<status status="PASS" starttime="20201030 15:54:07.900" endtime="20201030 15:54:07.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.908" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:07.907" endtime="20201030 15:54:07.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.910" level="INFO">VALUE: [9.445000000000286e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.722999999998676e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.833000000003227e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.805000000000618e-06, 8.763999999997912e-06, 8.790999999997579e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:07.909" endtime="20201030 15:54:07.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.904" endtime="20201030 15:54:07.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:07.915" endtime="20201030 15:54:07.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.913" endtime="20201030 15:54:07.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.912" endtime="20201030 15:54:07.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.564" endtime="20201030 15:54:07.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.564" endtime="20201030 15:54:07.936"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.943" endtime="20201030 15:54:07.954"></status>
</kw>
<msg timestamp="20201030 15:54:07.955" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.942" endtime="20201030 15:54:07.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.957" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.956" endtime="20201030 15:54:07.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.958" endtime="20201030 15:54:07.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.939" endtime="20201030 15:54:07.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.938" endtime="20201030 15:54:07.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.968" endtime="20201030 15:54:08.254"></status>
</kw>
<msg timestamp="20201030 15:54:08.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019174278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019183722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.966" endtime="20201030 15:54:08.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019174278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019183722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.258" endtime="20201030 15:54:08.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.266" endtime="20201030 15:54:08.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.964" endtime="20201030 15:54:08.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.962" endtime="20201030 15:54:08.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:08.276" level="INFO">${RESULT} = [{'diff': 9.444000000000813e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.777999999997482e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.791999999997052e-06}, {'diff': 8.722000000002672e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:08.271" endtime="20201030 15:54:08.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:08.282" level="INFO">${OVERHEAD} = {'diff': [9.444000000000813e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.791999999997052e-06, 8.722000000002672e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.7500...</msg>
<status status="PASS" starttime="20201030 15:54:08.277" endtime="20201030 15:54:08.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.293" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:08.287" endtime="20201030 15:54:08.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.303" level="INFO">VALUE: [9.444000000000813e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.791999999997052e-06, 8.722000000002672e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.791999999997052e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.776999999998009e-06, 8.791999999997052e-06, 8.791999999997052e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201030 15:54:08.301" endtime="20201030 15:54:08.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.283" endtime="20201030 15:54:08.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:08.314" endtime="20201030 15:54:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.308" endtime="20201030 15:54:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.307" endtime="20201030 15:54:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.936" endtime="20201030 15:54:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.936" endtime="20201030 15:54:08.335"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.343" endtime="20201030 15:54:08.354"></status>
</kw>
<msg timestamp="20201030 15:54:08.354" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.341" endtime="20201030 15:54:08.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.355" endtime="20201030 15:54:08.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.358" endtime="20201030 15:54:08.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.339" endtime="20201030 15:54:08.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.337" endtime="20201030 15:54:08.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.367" endtime="20201030 15:54:08.706"></status>
</kw>
<msg timestamp="20201030 15:54:08.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.365" endtime="20201030 15:54:08.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.711" endtime="20201030 15:54:08.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.719" endtime="20201030 15:54:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.363" endtime="20201030 15:54:08.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.361" endtime="20201030 15:54:08.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:08.725" level="INFO">${RESULT} = [{'diff': 9.485999999999523e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.790999999997579e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:08.722" endtime="20201030 15:54:08.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:08.730" level="INFO">${OVERHEAD} = {'diff': [9.485999999999523e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.694000000000063e-06, 8.776999999998009e-06, 8.7920...</msg>
<status status="PASS" starttime="20201030 15:54:08.726" endtime="20201030 15:54:08.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.734" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:08.733" endtime="20201030 15:54:08.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.737" level="INFO">VALUE: [9.485999999999523e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.694000000000063e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.791999999997052e-06, 8.763999999997912e-06, 8.776999999998009e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.777000000001478e-06, 8.790999999997579e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.805000000000618e-06]</msg>
<status status="PASS" starttime="20201030 15:54:08.735" endtime="20201030 15:54:08.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.731" endtime="20201030 15:54:08.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:08.742" endtime="20201030 15:54:08.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.740" endtime="20201030 15:54:08.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.739" endtime="20201030 15:54:08.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.336" endtime="20201030 15:54:08.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.335" endtime="20201030 15:54:08.762"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.770" endtime="20201030 15:54:08.781"></status>
</kw>
<msg timestamp="20201030 15:54:08.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.768" endtime="20201030 15:54:08.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.784" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.782" endtime="20201030 15:54:08.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.785" endtime="20201030 15:54:08.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.766" endtime="20201030 15:54:08.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.764" endtime="20201030 15:54:08.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.793" endtime="20201030 15:54:09.078"></status>
</kw>
<msg timestamp="20201030 15:54:09.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019129458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.792" endtime="20201030 15:54:09.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019129458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.082" endtime="20201030 15:54:09.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.090" endtime="20201030 15:54:09.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.789" endtime="20201030 15:54:09.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.788" endtime="20201030 15:54:09.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:09.098" level="INFO">${RESULT} = [{'diff': 9.473000000002896e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.819000000000188e-06}, {'diff': 8.819000000000188e-06}, {'diff': 8.762999999998439e-06}, {'diff': 8.791000000001048e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:09.094" endtime="20201030 15:54:09.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:09.102" level="INFO">${OVERHEAD} = {'diff': [9.473000000002896e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.762999999998439e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 15:54:09.099" endtime="20201030 15:54:09.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.106" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:09.105" endtime="20201030 15:54:09.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.108" level="INFO">VALUE: [9.473000000002896e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.762999999998439e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.86200000000184e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.847000000002797e-06, 8.790999999997579e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.721999999999203e-06, 8.777000000001478e-06, 8.804999999997148e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201030 15:54:09.107" endtime="20201030 15:54:09.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.103" endtime="20201030 15:54:09.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:09.113" endtime="20201030 15:54:09.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.112" endtime="20201030 15:54:09.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.110" endtime="20201030 15:54:09.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.763" endtime="20201030 15:54:09.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.763" endtime="20201030 15:54:09.134"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.142" endtime="20201030 15:54:09.152"></status>
</kw>
<msg timestamp="20201030 15:54:09.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.140" endtime="20201030 15:54:09.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.154" endtime="20201030 15:54:09.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.156" endtime="20201030 15:54:09.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.137" endtime="20201030 15:54:09.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.136" endtime="20201030 15:54:09.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.166" endtime="20201030 15:54:09.453"></status>
</kw>
<msg timestamp="20201030 15:54:09.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019243694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019253153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.165" endtime="20201030 15:54:09.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019243694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019253153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.457" endtime="20201030 15:54:09.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.466" endtime="20201030 15:54:09.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.162" endtime="20201030 15:54:09.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.160" endtime="20201030 15:54:09.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:09.472" level="INFO">${RESULT} = [{'diff': 9.458999999999856e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.806000000000092e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:09.469" endtime="20201030 15:54:09.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:09.477" level="INFO">${OVERHEAD} = {'diff': [9.458999999999856e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.7359...</msg>
<status status="PASS" starttime="20201030 15:54:09.473" endtime="20201030 15:54:09.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.481" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:09.480" endtime="20201030 15:54:09.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.483" level="INFO">VALUE: [9.458999999999856e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.804999999997148e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.791000000001048e-06, 8.736000000002242e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.721999999999203e-06, 8.791999999997052e-06, 8.806000000000092e-06, 8.790999999997579e-06, 8.846999999999328e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.791000000001048e-06, 8.762999999998439e-06, 8.790999999997579e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.833999999999231e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201030 15:54:09.482" endtime="20201030 15:54:09.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.477" endtime="20201030 15:54:09.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:09.489" endtime="20201030 15:54:09.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.487" endtime="20201030 15:54:09.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.486" endtime="20201030 15:54:09.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.135" endtime="20201030 15:54:09.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.134" endtime="20201030 15:54:09.510"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.518" endtime="20201030 15:54:09.528"></status>
</kw>
<msg timestamp="20201030 15:54:09.529" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.516" endtime="20201030 15:54:09.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.531" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.530" endtime="20201030 15:54:09.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.533" endtime="20201030 15:54:09.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.514" endtime="20201030 15:54:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.512" endtime="20201030 15:54:09.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.542" endtime="20201030 15:54:09.828"></status>
</kw>
<msg timestamp="20201030 15:54:09.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.540" endtime="20201030 15:54:09.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.832" endtime="20201030 15:54:09.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.840" endtime="20201030 15:54:09.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.537" endtime="20201030 15:54:09.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.536" endtime="20201030 15:54:09.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:09.847" level="INFO">${RESULT} = [{'diff': 9.471999999999953e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.790999999997579e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:09.844" endtime="20201030 15:54:09.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:09.852" level="INFO">${OVERHEAD} = {'diff': [9.471999999999953e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.805999999996622e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 15:54:09.848" endtime="20201030 15:54:09.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.856" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:09.855" endtime="20201030 15:54:09.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.858" level="INFO">VALUE: [9.471999999999953e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.805999999996622e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.790999999997579e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:09.857" endtime="20201030 15:54:09.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.853" endtime="20201030 15:54:09.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:09.864" endtime="20201030 15:54:09.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.862" endtime="20201030 15:54:09.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.861" endtime="20201030 15:54:09.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.510" endtime="20201030 15:54:09.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.510" endtime="20201030 15:54:09.884"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.892" endtime="20201030 15:54:09.903"></status>
</kw>
<msg timestamp="20201030 15:54:09.903" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.891" endtime="20201030 15:54:09.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.904" endtime="20201030 15:54:09.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.907" endtime="20201030 15:54:09.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.888" endtime="20201030 15:54:09.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.886" endtime="20201030 15:54:09.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.921" endtime="20201030 15:54:10.219"></status>
</kw>
<msg timestamp="20201030 15:54:10.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019309931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019319403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.917" endtime="20201030 15:54:10.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019309931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019319403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.223" endtime="20201030 15:54:10.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.231" endtime="20201030 15:54:10.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.912" endtime="20201030 15:54:10.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.910" endtime="20201030 15:54:10.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:10.239" level="INFO">${RESULT} = [{'diff': 9.471999999999953e-06}, {'diff': 8.791999999997052e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.790999999997579e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:10.236" endtime="20201030 15:54:10.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:10.243" level="INFO">${OVERHEAD} = {'diff': [9.471999999999953e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.790999999997579e-06, 8.790999999997579e-06, 8.818999999996718e-06, 8.7640...</msg>
<status status="PASS" starttime="20201030 15:54:10.240" endtime="20201030 15:54:10.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.247" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:10.246" endtime="20201030 15:54:10.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.249" level="INFO">VALUE: [9.471999999999953e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.790999999997579e-06, 8.790999999997579e-06, 8.818999999996718e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.790999999997579e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.861000000002367e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.736000000002242e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.777000000001478e-06, 8.736999999998246e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 15:54:10.248" endtime="20201030 15:54:10.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.244" endtime="20201030 15:54:10.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.254" endtime="20201030 15:54:10.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.253" endtime="20201030 15:54:10.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.252" endtime="20201030 15:54:10.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.885" endtime="20201030 15:54:10.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.885" endtime="20201030 15:54:10.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.668" endtime="20201030 15:54:10.275"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:02.602" endtime="20201030 15:54:10.276" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.283" endtime="20201030 15:54:10.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.281" endtime="20201030 15:54:10.303"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.317" endtime="20201030 15:54:10.329"></status>
</kw>
<msg timestamp="20201030 15:54:10.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.315" endtime="20201030 15:54:10.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.331" endtime="20201030 15:54:10.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.336" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:10.334" endtime="20201030 15:54:10.336"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:10.313" endtime="20201030 15:54:10.337"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:10.310" endtime="20201030 15:54:10.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.308" endtime="20201030 15:54:10.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:10.342" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:10.341" endtime="20201030 15:54:10.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.339" endtime="20201030 15:54:10.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.307" endtime="20201030 15:54:10.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.306" endtime="20201030 15:54:10.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.343" endtime="20201030 15:54:10.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.305" endtime="20201030 15:54:10.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.304" endtime="20201030 15:54:10.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.280" endtime="20201030 15:54:10.346"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.354" endtime="20201030 15:54:10.374"></status>
</kw>
<msg timestamp="20201030 15:54:10.375" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.353" endtime="20201030 15:54:10.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.377" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.376" endtime="20201030 15:54:10.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.379" endtime="20201030 15:54:10.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.350" endtime="20201030 15:54:10.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.348" endtime="20201030 15:54:10.382"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.384" endtime="20201030 15:54:10.385"></status>
</kw>
<msg timestamp="20201030 15:54:10.386" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:10.383" endtime="20201030 15:54:10.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.390" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:10.389" endtime="20201030 15:54:10.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.392" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:10.391" endtime="20201030 15:54:10.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.387" endtime="20201030 15:54:10.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.401" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:10.396" endtime="20201030 15:54:10.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.403" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:10.402" endtime="20201030 15:54:10.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.394" endtime="20201030 15:54:10.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.410" endtime="20201030 15:54:10.695"></status>
</kw>
<msg timestamp="20201030 15:54:10.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064022764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064056167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.409" endtime="20201030 15:54:10.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064022764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064056167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.699" endtime="20201030 15:54:10.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.708" endtime="20201030 15:54:10.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.406" endtime="20201030 15:54:10.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.404" endtime="20201030 15:54:10.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:10.717" level="INFO">${RESULT} = [{'diff': 3.340300000000129e-05}, {'diff': 3.8124999999999964e-05}, {'diff': 3.780599999998746e-05}, {'diff': 3.781999999999397e-05}, {'diff': 3.7818999999994496e-05}, {'diff': 3.7861000000000145e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:10.712" endtime="20201030 15:54:10.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:10.724" level="INFO">${OVERHEAD} = {'diff': [3.340300000000129e-05, 3.8124999999999964e-05, 3.780599999998746e-05, 3.781999999999397e-05, 3.7818999999994496e-05, 3.7861000000000145e-05, 3.782000000000785e-05, 3.780600000000134e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 15:54:10.719" endtime="20201030 15:54:10.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.733" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:10.731" endtime="20201030 15:54:10.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.737" level="INFO">VALUE: [3.340300000000129e-05, 3.8124999999999964e-05, 3.780599999998746e-05, 3.781999999999397e-05, 3.7818999999994496e-05, 3.7861000000000145e-05, 3.782000000000785e-05, 3.780600000000134e-05, 3.782000000000785e-05, 3.7818999999994496e-05, 3.779199999999483e-05, 3.7818999999994496e-05, 3.790300000000579e-05, 3.7874999999992776e-05, 3.7833000000001005e-05, 3.7888999999999284e-05, 3.781999999999397e-05, 3.781999999999397e-05, 3.781999999999397e-05, 3.7818999999994496e-05, 3.7818999999994496e-05, 3.7805000000001865e-05, 3.7790999999995356e-05, 3.781999999999397e-05, 3.7888999999999284e-05, 3.784799999999311e-05, 3.780600000000134e-05, 3.7833000000001005e-05, 3.780600000000134e-05, 3.775000000000306e-05, 3.7833000000001005e-05, 3.7805000000001865e-05, 3.782000000000785e-05, 3.7818999999994496e-05, 3.781999999999397e-05, 3.777699999998885e-05, 3.7819000000008374e-05, 3.7818999999994496e-05, 3.7833000000001005e-05, 3.7805000000001865e-05, 3.7791000000009234e-05, 3.782000000000785e-05, 3.780600000000134e-05, 3.787500000000665e-05, 3.779200000000871e-05, 3.780600000000134e-05, 3.7833000000001005e-05, 3.7833000000001005e-05, 3.7818999999994496e-05, 3.781999999999397e-05]</msg>
<status status="PASS" starttime="20201030 15:54:10.735" endtime="20201030 15:54:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.726" endtime="20201030 15:54:10.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.745" endtime="20201030 15:54:10.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.743" endtime="20201030 15:54:10.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.742" endtime="20201030 15:54:10.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.347" endtime="20201030 15:54:10.766"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:10.277" endtime="20201030 15:54:10.766" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.773" endtime="20201030 15:54:10.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.772" endtime="20201030 15:54:10.793"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.806" endtime="20201030 15:54:10.818"></status>
</kw>
<msg timestamp="20201030 15:54:10.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.804" endtime="20201030 15:54:10.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.821" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.820" endtime="20201030 15:54:10.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.824" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:10.822" endtime="20201030 15:54:10.825"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:10.802" endtime="20201030 15:54:10.825"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:10.799" endtime="20201030 15:54:10.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.798" endtime="20201030 15:54:10.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:10.830" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:10.829" endtime="20201030 15:54:10.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.827" endtime="20201030 15:54:10.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.797" endtime="20201030 15:54:10.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.797" endtime="20201030 15:54:10.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.831" endtime="20201030 15:54:10.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.795" endtime="20201030 15:54:10.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.794" endtime="20201030 15:54:10.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.770" endtime="20201030 15:54:10.834"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.844" endtime="20201030 15:54:10.988"></status>
</kw>
<msg timestamp="20201030 15:54:10.988" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.842" endtime="20201030 15:54:10.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.991" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.989" endtime="20201030 15:54:10.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.992" endtime="20201030 15:54:10.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.838" endtime="20201030 15:54:10.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.836" endtime="20201030 15:54:10.997"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.001" endtime="20201030 15:54:11.003"></status>
</kw>
<msg timestamp="20201030 15:54:11.004" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:10.999" endtime="20201030 15:54:11.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.010" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:11.009" endtime="20201030 15:54:11.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.014" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:11.012" endtime="20201030 15:54:11.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.005" endtime="20201030 15:54:11.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.023" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:11.021" endtime="20201030 15:54:11.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.027" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:11.025" endtime="20201030 15:54:11.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.018" endtime="20201030 15:54:11.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.035" endtime="20201030 15:54:11.328"></status>
</kw>
<msg timestamp="20201030 15:54:11.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065145236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065198819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.033" endtime="20201030 15:54:11.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065145236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065198819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.332" endtime="20201030 15:54:11.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.340" endtime="20201030 15:54:11.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.030" endtime="20201030 15:54:11.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.028" endtime="20201030 15:54:11.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:11.347" level="INFO">${RESULT} = [{'diff': 5.358300000000982e-05}, {'diff': 7.686099999999751e-05}, {'diff': 7.688900000001053e-05}, {'diff': 7.688899999999665e-05}, {'diff': 7.684700000000488e-05}, {'diff': 7.688900000001053e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:11.344" endtime="20201030 15:54:11.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:11.353" level="INFO">${OVERHEAD} = {'diff': [5.358300000000982e-05, 7.686099999999751e-05, 7.688900000001053e-05, 7.688899999999665e-05, 7.684700000000488e-05, 7.688900000001053e-05, 7.687499999999015e-05, 7.688900000001053e-05, 7.6875...</msg>
<status status="PASS" starttime="20201030 15:54:11.348" endtime="20201030 15:54:11.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.357" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:11.356" endtime="20201030 15:54:11.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.360" level="INFO">VALUE: [5.358300000000982e-05, 7.686099999999751e-05, 7.688900000001053e-05, 7.688899999999665e-05, 7.684700000000488e-05, 7.688900000001053e-05, 7.687499999999015e-05, 7.688900000001053e-05, 7.687500000000402e-05, 7.686100000001139e-05, 7.687500000000402e-05, 7.688900000001053e-05, 7.690199999998981e-05, 7.687500000000402e-05, 7.686099999999751e-05, 7.686099999999751e-05, 7.694399999999546e-05, 7.687500000000402e-05, 7.687500000000402e-05, 7.688900000001053e-05, 7.687500000000402e-05, 7.686100000001139e-05, 7.684700000000488e-05, 7.680599999999871e-05, 7.6846999999991e-05, 7.686100000001139e-05, 7.683299999999837e-05, 7.686099999998364e-05, 7.688800000002494e-05, 7.686099999998364e-05, 7.6846999999991e-05, 7.684799999999048e-05, 7.69160000000102e-05, 7.686099999998364e-05, 7.684700000001876e-05, 7.686100000001139e-05, 7.687500000000402e-05, 7.687500000000402e-05, 7.687500000000402e-05, 7.687500000000402e-05, 7.6846999999991e-05, 7.686100000001139e-05, 7.687500000000402e-05, 7.682000000000522e-05, 7.688899999999665e-05, 7.686200000001087e-05, 7.682000000000522e-05, 7.6846999999991e-05, 7.688899999999665e-05, 7.687500000000402e-05]</msg>
<status status="PASS" starttime="20201030 15:54:11.358" endtime="20201030 15:54:11.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.354" endtime="20201030 15:54:11.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:11.365" endtime="20201030 15:54:11.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.363" endtime="20201030 15:54:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.362" endtime="20201030 15:54:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.835" endtime="20201030 15:54:11.386"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:10.768" endtime="20201030 15:54:11.386" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:11.393" endtime="20201030 15:54:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.391" endtime="20201030 15:54:11.413"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.426" endtime="20201030 15:54:11.438"></status>
</kw>
<msg timestamp="20201030 15:54:11.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.424" endtime="20201030 15:54:11.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.440" endtime="20201030 15:54:11.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.445" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:11.442" endtime="20201030 15:54:11.446"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:11.422" endtime="20201030 15:54:11.446"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:11.419" endtime="20201030 15:54:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.418" endtime="20201030 15:54:11.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:11.451" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:11.450" endtime="20201030 15:54:11.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.448" endtime="20201030 15:54:11.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.417" endtime="20201030 15:54:11.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.417" endtime="20201030 15:54:11.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.453" endtime="20201030 15:54:11.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.415" endtime="20201030 15:54:11.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.414" endtime="20201030 15:54:11.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.390" endtime="20201030 15:54:11.455"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.464" endtime="20201030 15:54:11.887"></status>
</kw>
<msg timestamp="20201030 15:54:11.887" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.462" endtime="20201030 15:54:11.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.890" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.888" endtime="20201030 15:54:11.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.895" endtime="20201030 15:54:11.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.460" endtime="20201030 15:54:11.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.457" endtime="20201030 15:54:11.899"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.901" endtime="20201030 15:54:11.903"></status>
</kw>
<msg timestamp="20201030 15:54:11.904" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:11.900" endtime="20201030 15:54:11.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.909" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:11.908" endtime="20201030 15:54:11.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.912" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:11.910" endtime="20201030 15:54:11.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.905" endtime="20201030 15:54:11.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.918" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:11.917" endtime="20201030 15:54:11.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.921" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:11.919" endtime="20201030 15:54:11.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.914" endtime="20201030 15:54:11.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.929" endtime="20201030 15:54:12.237"></status>
</kw>
<msg timestamp="20201030 15:54:12.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068600903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068691861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.928" endtime="20201030 15:54:12.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068600903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068691861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.241" endtime="20201030 15:54:12.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.250" endtime="20201030 15:54:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.925" endtime="20201030 15:54:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.923" endtime="20201030 15:54:12.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:12.259" level="INFO">${RESULT} = [{'diff': 9.095800000000209e-05}, {'diff': 0.0001338469999999925}, {'diff': 0.000133860999999999}, {'diff': 0.000133860999999999}, {'diff': 0.0001338469999999925}, {'diff': 0.00013387499999999164}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:12.256" endtime="20201030 15:54:12.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:12.264" level="INFO">${OVERHEAD} = {'diff': [9.095800000000209e-05, 0.0001338469999999925, 0.000133860999999999, 0.000133860999999999, 0.0001338469999999925, 0.00013387499999999164, 0.00013383299999999987, 0.00013386100000001289, 0.000...</msg>
<status status="PASS" starttime="20201030 15:54:12.260" endtime="20201030 15:54:12.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.269" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:12.268" endtime="20201030 15:54:12.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.272" level="INFO">VALUE: [9.095800000000209e-05, 0.0001338469999999925, 0.000133860999999999, 0.000133860999999999, 0.0001338469999999925, 0.00013387499999999164, 0.00013383299999999987, 0.00013386100000001289, 0.00013387499999997776, 0.00013388899999999815, 0.00013390300000001853, 0.00013377800000000106, 0.00013387500000000552, 0.00013386100000001289, 0.0001338619999999846, 0.00013393000000000432, 0.00013388899999999815, 0.00013387500000000552, 0.00013391700000001117, 0.00013387500000000552, 0.00013384800000001973, 0.00013393000000000432, 0.00013380600000001408, 0.00013387500000000552, 0.00013387500000000552, 0.00013379200000002145, 0.00013386099999995738, 0.00013388899999999815, 0.00013387500000000552, 0.00013387500000000552, 0.00013387500000000552, 0.00013387499999995, 0.00013387500000000552, 0.00013388899999999815, 0.00013394399999999695, 0.00013384699999996474, 0.00013388800000002643, 0.00013384700000002026, 0.00013386100000001289, 0.0001338619999999846, 0.00013387500000000552, 0.00013393100000003155, 0.00013384800000004748, 0.00013387500000000552, 0.00013388899999999815, 0.0001338619999999846, 0.00013386100000001289, 0.00013387500000000552, 0.00013386099999995738, 0.00013387500000000552]</msg>
<status status="PASS" starttime="20201030 15:54:12.270" endtime="20201030 15:54:12.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.265" endtime="20201030 15:54:12.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:12.276" endtime="20201030 15:54:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.275" endtime="20201030 15:54:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.274" endtime="20201030 15:54:12.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.456" endtime="20201030 15:54:12.297"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:11.388" endtime="20201030 15:54:12.298" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:12.304" endtime="20201030 15:54:12.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.303" endtime="20201030 15:54:12.324"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.338" endtime="20201030 15:54:12.351"></status>
</kw>
<msg timestamp="20201030 15:54:12.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.337" endtime="20201030 15:54:12.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.355" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.353" endtime="20201030 15:54:12.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.358" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:12.356" endtime="20201030 15:54:12.358"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:12.334" endtime="20201030 15:54:12.359"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:12.332" endtime="20201030 15:54:12.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.330" endtime="20201030 15:54:12.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:12.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:12.363" endtime="20201030 15:54:12.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.361" endtime="20201030 15:54:12.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.329" endtime="20201030 15:54:12.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.328" endtime="20201030 15:54:12.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.366" endtime="20201030 15:54:12.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.327" endtime="20201030 15:54:12.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.325" endtime="20201030 15:54:12.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.302" endtime="20201030 15:54:12.369"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.377" endtime="20201030 15:54:12.399"></status>
</kw>
<msg timestamp="20201030 15:54:12.399" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.376" endtime="20201030 15:54:12.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.402" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.400" endtime="20201030 15:54:12.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.403" endtime="20201030 15:54:12.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.373" endtime="20201030 15:54:12.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.371" endtime="20201030 15:54:12.406"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.408" endtime="20201030 15:54:12.409"></status>
</kw>
<msg timestamp="20201030 15:54:12.410" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:12.407" endtime="20201030 15:54:12.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.414" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:12.413" endtime="20201030 15:54:12.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.416" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:12.415" endtime="20201030 15:54:12.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.411" endtime="20201030 15:54:12.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.422" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:12.421" endtime="20201030 15:54:12.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.424" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:12.423" endtime="20201030 15:54:12.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.417" endtime="20201030 15:54:12.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.431" endtime="20201030 15:54:12.717"></status>
</kw>
<msg timestamp="20201030 15:54:12.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065634014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065656986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.430" endtime="20201030 15:54:12.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065634014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065656986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.721" endtime="20201030 15:54:12.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.729" endtime="20201030 15:54:12.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.427" endtime="20201030 15:54:12.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.425" endtime="20201030 15:54:12.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:12.736" level="INFO">${RESULT} = [{'diff': 2.2971999999996107e-05}, {'diff': 2.184700000000539e-05}, {'diff': 2.1834000000012233e-05}, {'diff': 2.1874999999990652e-05}, {'diff': 2.187500000000453e-05}, {'diff': 2.187500000000453e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:12.733" endtime="20201030 15:54:12.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:12.741" level="INFO">${OVERHEAD} = {'diff': [2.2971999999996107e-05, 2.184700000000539e-05, 2.1834000000012233e-05, 2.1874999999990652e-05, 2.187500000000453e-05, 2.187500000000453e-05, 2.1874999999990652e-05, 2.187500000000453e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:54:12.737" endtime="20201030 15:54:12.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.746" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:12.744" endtime="20201030 15:54:12.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.749" level="INFO">VALUE: [2.2971999999996107e-05, 2.184700000000539e-05, 2.1834000000012233e-05, 2.1874999999990652e-05, 2.187500000000453e-05, 2.187500000000453e-05, 2.1874999999990652e-05, 2.187500000000453e-05, 2.186099999999802e-05, 2.188899999999716e-05, 2.18610000000119e-05, 2.186099999999802e-05, 2.1846999999991512e-05, 2.187500000000453e-05, 2.1820000000005724e-05, 2.1915999999996827e-05, 2.187500000000453e-05, 2.188899999999716e-05, 2.183299999999888e-05, 2.188900000001104e-05, 2.184700000000539e-05, 2.1778000000000075e-05, 2.186099999999802e-05, 2.186099999999802e-05, 2.1874999999990652e-05, 2.188899999999716e-05, 2.1861999999997495e-05, 2.186099999999802e-05, 2.186099999999802e-05, 2.1874999999990652e-05, 2.1861999999997495e-05, 2.187500000000453e-05, 2.188899999999716e-05, 2.187500000000453e-05, 2.1874999999990652e-05, 2.184700000000539e-05, 2.186099999999802e-05, 2.186099999999802e-05, 2.186099999999802e-05, 2.1848000000004864e-05, 2.186099999999802e-05, 2.193100000000281e-05, 2.186099999999802e-05, 2.186099999999802e-05, 2.188899999999716e-05, 2.18610000000119e-05, 2.18610000000119e-05, 2.187500000000453e-05, 2.186099999999802e-05, 2.184700000000539e-05]</msg>
<status status="PASS" starttime="20201030 15:54:12.747" endtime="20201030 15:54:12.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.742" endtime="20201030 15:54:12.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:12.754" endtime="20201030 15:54:12.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.752" endtime="20201030 15:54:12.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.751" endtime="20201030 15:54:12.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.369" endtime="20201030 15:54:12.774"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:12.299" endtime="20201030 15:54:12.775" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:12.782" endtime="20201030 15:54:12.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.780" endtime="20201030 15:54:12.802"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.815" endtime="20201030 15:54:12.827"></status>
</kw>
<msg timestamp="20201030 15:54:12.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.813" endtime="20201030 15:54:12.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.828" endtime="20201030 15:54:12.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.833" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:12.831" endtime="20201030 15:54:12.833"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:12.810" endtime="20201030 15:54:12.834"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:12.808" endtime="20201030 15:54:12.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.807" endtime="20201030 15:54:12.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:12.838" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:12.837" endtime="20201030 15:54:12.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.835" endtime="20201030 15:54:12.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.806" endtime="20201030 15:54:12.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.805" endtime="20201030 15:54:12.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.840" endtime="20201030 15:54:12.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.804" endtime="20201030 15:54:12.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.802" endtime="20201030 15:54:12.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.779" endtime="20201030 15:54:12.843"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.852" endtime="20201030 15:54:12.997"></status>
</kw>
<msg timestamp="20201030 15:54:12.998" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.850" endtime="20201030 15:54:12.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.000" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.999" endtime="20201030 15:54:13.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.002" endtime="20201030 15:54:13.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.847" endtime="20201030 15:54:13.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.845" endtime="20201030 15:54:13.004"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.006" endtime="20201030 15:54:13.008"></status>
</kw>
<msg timestamp="20201030 15:54:13.008" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:13.005" endtime="20201030 15:54:13.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.012" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:13.011" endtime="20201030 15:54:13.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.014" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:13.014" endtime="20201030 15:54:13.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.009" endtime="20201030 15:54:13.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.019" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:13.018" endtime="20201030 15:54:13.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.021" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:13.020" endtime="20201030 15:54:13.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.016" endtime="20201030 15:54:13.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.028" endtime="20201030 15:54:13.321"></status>
</kw>
<msg timestamp="20201030 15:54:13.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065112264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065167958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.027" endtime="20201030 15:54:13.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065112264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065167958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.325" endtime="20201030 15:54:13.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.333" endtime="20201030 15:54:13.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.024" endtime="20201030 15:54:13.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.023" endtime="20201030 15:54:13.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:13.340" level="INFO">${RESULT} = [{'diff': 5.5693999999995025e-05}, {'diff': 5.4805999999990584e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.4749999999992305e-05}, {'diff': 5.476299999999934e-0...</msg>
<status status="PASS" starttime="20201030 15:54:13.337" endtime="20201030 15:54:13.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:13.346" level="INFO">${OVERHEAD} = {'diff': [5.5693999999995025e-05, 5.4805999999990584e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.4749999999992305e-05, 5.476299999999934e-05, 5.4763999999998814e-05, 5.476400000001269e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:13.342" endtime="20201030 15:54:13.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.350" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:13.349" endtime="20201030 15:54:13.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.353" level="INFO">VALUE: [5.5693999999995025e-05, 5.4805999999990584e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.4749999999992305e-05, 5.476299999999934e-05, 5.4763999999998814e-05, 5.476400000001269e-05, 5.4777999999991445e-05, 5.476400000001269e-05, 5.4708000000000534e-05, 5.4763999999998814e-05, 5.4749999999992305e-05, 5.4763999999998814e-05, 5.4763999999998814e-05, 5.4763999999998814e-05, 5.475000000000618e-05, 5.4791999999997953e-05, 5.4763999999998814e-05, 5.477800000000532e-05, 5.479099999999848e-05, 5.483299999999025e-05, 5.46949999999935e-05, 5.4777999999991445e-05, 5.477799999997757e-05, 5.477800000000532e-05, 5.476400000001269e-05, 5.476400000001269e-05, 5.475000000002006e-05, 5.477799999997757e-05, 5.4707999999986656e-05, 5.4763999999984936e-05, 5.477799999997757e-05, 5.4763999999984936e-05, 5.482000000001097e-05, 5.4763999999984936e-05, 5.477800000000532e-05, 5.479099999999848e-05, 5.477700000000585e-05, 5.4763999999984936e-05, 5.4749999999992305e-05, 5.476400000001269e-05, 5.4763999999984936e-05, 5.4763999999984936e-05, 5.4763999999984936e-05, 5.476400000001269e-05, 5.4791999999997953e-05, 5.476400000001269e-05, 5.472199999997929e-05, 5.476400000001269e-05]</msg>
<status status="PASS" starttime="20201030 15:54:13.351" endtime="20201030 15:54:13.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.347" endtime="20201030 15:54:13.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:13.358" endtime="20201030 15:54:13.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.356" endtime="20201030 15:54:13.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.355" endtime="20201030 15:54:13.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.843" endtime="20201030 15:54:13.378"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:12.776" endtime="20201030 15:54:13.379" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:13.386" endtime="20201030 15:54:13.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.385" endtime="20201030 15:54:13.406"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.419" endtime="20201030 15:54:13.431"></status>
</kw>
<msg timestamp="20201030 15:54:13.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.417" endtime="20201030 15:54:13.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.434" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.433" endtime="20201030 15:54:13.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.438" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:13.435" endtime="20201030 15:54:13.438"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:13.415" endtime="20201030 15:54:13.439"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:13.413" endtime="20201030 15:54:13.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.411" endtime="20201030 15:54:13.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:13.444" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:13.443" endtime="20201030 15:54:13.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.441" endtime="20201030 15:54:13.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.410" endtime="20201030 15:54:13.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.410" endtime="20201030 15:54:13.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.445" endtime="20201030 15:54:13.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.408" endtime="20201030 15:54:13.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.407" endtime="20201030 15:54:13.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.383" endtime="20201030 15:54:13.448"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.456" endtime="20201030 15:54:13.882"></status>
</kw>
<msg timestamp="20201030 15:54:13.883" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.455" endtime="20201030 15:54:13.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.888" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.885" endtime="20201030 15:54:13.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.892" endtime="20201030 15:54:13.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.452" endtime="20201030 15:54:13.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.450" endtime="20201030 15:54:13.899"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.904" endtime="20201030 15:54:13.908"></status>
</kw>
<msg timestamp="20201030 15:54:13.909" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:13.901" endtime="20201030 15:54:13.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.940" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:13.938" endtime="20201030 15:54:13.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.950" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:13.945" endtime="20201030 15:54:13.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.911" endtime="20201030 15:54:13.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.966" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:13.963" endtime="20201030 15:54:13.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.970" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:13.968" endtime="20201030 15:54:13.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.956" endtime="20201030 15:54:13.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.983" endtime="20201030 15:54:14.281"></status>
</kw>
<msg timestamp="20201030 15:54:14.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068282722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.981" endtime="20201030 15:54:14.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068282722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:14.285" endtime="20201030 15:54:14.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.292" endtime="20201030 15:54:14.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.976" endtime="20201030 15:54:14.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.973" endtime="20201030 15:54:14.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:14.299" level="INFO">${RESULT} = [{'diff': 7.751400000000075e-05}, {'diff': 7.662499999999683e-05}, {'diff': 7.663900000000334e-05}, {'diff': 7.65560000000054e-05}, {'diff': 7.658300000000506e-05}, {'diff': 7.65700000000119e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:14.296" endtime="20201030 15:54:14.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:14.303" level="INFO">${OVERHEAD} = {'diff': [7.751400000000075e-05, 7.662499999999683e-05, 7.663900000000334e-05, 7.65560000000054e-05, 7.658300000000506e-05, 7.65700000000119e-05, 7.656899999999855e-05, 7.656899999999855e-05, 7.656999...</msg>
<status status="PASS" starttime="20201030 15:54:14.300" endtime="20201030 15:54:14.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.309" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:14.307" endtime="20201030 15:54:14.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.312" level="INFO">VALUE: [7.751400000000075e-05, 7.662499999999683e-05, 7.663900000000334e-05, 7.65560000000054e-05, 7.658300000000506e-05, 7.65700000000119e-05, 7.656899999999855e-05, 7.656899999999855e-05, 7.656999999999803e-05, 7.64869999999862e-05, 7.656999999999803e-05, 7.654199999998501e-05, 7.65269999999929e-05, 7.654200000001277e-05, 7.65560000000054e-05, 7.655500000000592e-05, 7.658299999999119e-05, 7.65560000000054e-05, 7.658399999999066e-05, 7.654100000001329e-05, 7.658399999999066e-05, 7.658300000001894e-05, 7.656899999999855e-05, 7.658300000001894e-05, 7.65689999999708e-05, 7.658399999999066e-05, 7.656999999999803e-05, 7.659700000001157e-05, 7.658399999999066e-05, 7.66110000000042e-05, 7.656999999999803e-05, 7.656999999999803e-05, 7.658300000001894e-05, 7.654200000001277e-05, 7.65689999999708e-05, 7.656999999999803e-05, 7.656999999999803e-05, 7.658399999999066e-05, 7.659700000001157e-05, 7.65560000000054e-05, 7.65689999999708e-05, 7.65560000000054e-05, 7.65689999999708e-05, 7.658300000001894e-05, 7.65689999999708e-05, 7.656900000002631e-05, 7.656999999999803e-05, 7.665200000001038e-05, 7.65560000000054e-05, 7.655499999997817e-05]</msg>
<status status="PASS" starttime="20201030 15:54:14.310" endtime="20201030 15:54:14.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.304" endtime="20201030 15:54:14.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:14.319" endtime="20201030 15:54:14.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.316" endtime="20201030 15:54:14.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.315" endtime="20201030 15:54:14.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.449" endtime="20201030 15:54:14.340"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:13.381" endtime="20201030 15:54:14.341" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:14.347" endtime="20201030 15:54:14.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.346" endtime="20201030 15:54:14.368"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.391" endtime="20201030 15:54:14.404"></status>
</kw>
<msg timestamp="20201030 15:54:14.404" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:14.380" endtime="20201030 15:54:14.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.407" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:14.405" endtime="20201030 15:54:14.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.410" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:14.408" endtime="20201030 15:54:14.410"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:14.377" endtime="20201030 15:54:14.411"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:14.375" endtime="20201030 15:54:14.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.373" endtime="20201030 15:54:14.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:14.416" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:14.415" endtime="20201030 15:54:14.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.413" endtime="20201030 15:54:14.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.372" endtime="20201030 15:54:14.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.371" endtime="20201030 15:54:14.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.418" endtime="20201030 15:54:14.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.370" endtime="20201030 15:54:14.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.368" endtime="20201030 15:54:14.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.345" endtime="20201030 15:54:14.420"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.424" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:14.433" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:15.633" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:14.423" endtime="20201030 15:54:15.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.637" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:15.635" endtime="20201030 15:54:15.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.421" endtime="20201030 15:54:15.638"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.648" endtime="20201030 15:54:15.657"></status>
</kw>
<msg timestamp="20201030 15:54:15.657" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.646" endtime="20201030 15:54:15.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.660" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.658" endtime="20201030 15:54:15.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.661" endtime="20201030 15:54:15.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.643" endtime="20201030 15:54:15.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.641" endtime="20201030 15:54:15.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.672" endtime="20201030 15:54:15.968"></status>
</kw>
<msg timestamp="20201030 15:54:15.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.909484306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.234095111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.669" endtime="20201030 15:54:15.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.909484306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.234095111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.973" endtime="20201030 15:54:15.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.981" endtime="20201030 15:54:15.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.666" endtime="20201030 15:54:15.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.664" endtime="20201030 15:54:15.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:15.988" level="INFO">${PHILIP_RES} = [{'diff': 0.32461080500000006}, {'diff': 3.487499999987875e-05}, {'diff': 3.351400000006777e-05}, {'diff': 3.351399999984572e-05}, {'diff': 3.354200000016405e-05}, {'diff': 3.351400000006777e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:15.984" endtime="20201030 15:54:15.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:15.992" level="INFO">${RESULT} = {'diff': [0.32461080500000006, 3.487499999987875e-05, 3.351400000006777e-05, 3.351399999984572e-05, 3.354200000016405e-05, 3.351400000006777e-05, 3.351400000006777e-05, 3.351400000006777e-05, 3.352800...</msg>
<status status="PASS" starttime="20201030 15:54:15.989" endtime="20201030 15:54:15.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.996" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:15.995" endtime="20201030 15:54:15.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.999" level="INFO">VALUE: [0.32461080500000006, 3.487499999987875e-05, 3.351400000006777e-05, 3.351399999984572e-05, 3.354200000016405e-05, 3.351400000006777e-05, 3.351400000006777e-05, 3.351400000006777e-05, 3.352800000011591e-05, 3.351400000006777e-05, 3.351400000006777e-05, 3.357000000003829e-05, 3.347199999992334e-05, 3.351400000006777e-05, 3.349999999979758e-05, 3.354200000016405e-05, 3.3500000000019625e-05, 3.354199999994201e-05, 3.351400000006777e-05, 3.352800000011591e-05, 3.351399999984572e-05, 3.351400000006777e-05, 3.348600000019353e-05, 3.3555000000129453e-05, 3.352800000011591e-05, 3.3527999999893865e-05, 3.3500000000019625e-05, 3.354199999994201e-05, 3.352800000011591e-05, 3.351399999984572e-05, 3.352800000011591e-05, 3.3500000000019625e-05, 3.351400000006777e-05, 3.354100000008131e-05, 3.356899999995555e-05, 3.352700000003317e-05, 3.352700000003317e-05, 3.351299999998503e-05, 3.34440000000491e-05, 3.351400000006777e-05, 3.351299999998503e-05, 3.352700000003317e-05, 3.351400000006777e-05, 3.348600000019353e-05, 3.348599999997148e-05, 3.351400000006777e-05, 3.3527999999893865e-05, 3.351399999984572e-05, 3.351400000006777e-05, 3.345800000009724e-05, 3.351399999984572e-05]</msg>
<status status="PASS" starttime="20201030 15:54:15.997" endtime="20201030 15:54:15.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.993" endtime="20201030 15:54:15.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:16.003" endtime="20201030 15:54:16.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.002" endtime="20201030 15:54:16.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.000" endtime="20201030 15:54:16.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.639" endtime="20201030 15:54:16.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.639" endtime="20201030 15:54:16.024"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.034" endtime="20201030 15:54:16.044"></status>
</kw>
<msg timestamp="20201030 15:54:16.045" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.032" endtime="20201030 15:54:16.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.047" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.046" endtime="20201030 15:54:16.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.048" endtime="20201030 15:54:16.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.029" endtime="20201030 15:54:16.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.026" endtime="20201030 15:54:16.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.057" endtime="20201030 15:54:16.364"></status>
</kw>
<msg timestamp="20201030 15:54:16.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.056" endtime="20201030 15:54:16.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.368" endtime="20201030 15:54:16.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.376" endtime="20201030 15:54:16.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.053" endtime="20201030 15:54:16.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.052" endtime="20201030 15:54:16.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:16.383" level="INFO">${PHILIP_RES} = [{'diff': 5.258299999999841e-05}, {'diff': 5.108399999999985e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.108300000000038e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:16.380" endtime="20201030 15:54:16.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:16.387" level="INFO">${RESULT} = {'diff': [5.258299999999841e-05, 5.108399999999985e-05, 5.106900000000081e-05, 5.106900000000081e-05, 5.106900000000081e-05, 5.108300000000038e-05, 5.102800000000157e-05, 5.105500000000124e-05, 5.1124...</msg>
<status status="PASS" starttime="20201030 15:54:16.384" endtime="20201030 15:54:16.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.392" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:16.391" endtime="20201030 15:54:16.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.394" level="INFO">VALUE: [5.258299999999841e-05, 5.108399999999985e-05, 5.106900000000081e-05, 5.106900000000081e-05, 5.106900000000081e-05, 5.108300000000038e-05, 5.102800000000157e-05, 5.105500000000124e-05, 5.112499999999909e-05, 5.111199999999899e-05, 5.109699999999995e-05, 5.104200000000114e-05, 5.108300000000038e-05, 5.11669999999978e-05, 5.111099999999952e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.108399999999985e-05, 5.109699999999995e-05, 5.108300000000038e-05, 5.109800000000289e-05, 5.10279999999981e-05, 5.108300000000038e-05, 5.109799999999942e-05, 5.109699999999995e-05, 5.108300000000038e-05, 5.10279999999981e-05, 5.105600000000071e-05, 5.108300000000038e-05, 5.107000000000028e-05, 5.109800000000289e-05, 5.106899999999734e-05, 5.109699999999995e-05, 5.108399999999985e-05, 5.108399999999985e-05, 5.108300000000038e-05, 5.108299999999691e-05, 5.105600000000071e-05, 5.112499999999909e-05, 5.108300000000038e-05, 5.108399999999985e-05, 5.109699999999995e-05, 5.112499999999909e-05, 5.105500000000124e-05, 5.108399999999985e-05, 5.108300000000038e-05, 5.108300000000038e-05, 5.107000000000028e-05, 5.108300000000038e-05, 5.109699999999995e-05]</msg>
<status status="PASS" starttime="20201030 15:54:16.393" endtime="20201030 15:54:16.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.388" endtime="20201030 15:54:16.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:16.399" endtime="20201030 15:54:16.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.397" endtime="20201030 15:54:16.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.396" endtime="20201030 15:54:16.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.025" endtime="20201030 15:54:16.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.024" endtime="20201030 15:54:16.420"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.429" endtime="20201030 15:54:16.442"></status>
</kw>
<msg timestamp="20201030 15:54:16.443" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.427" endtime="20201030 15:54:16.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.445" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.444" endtime="20201030 15:54:16.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.446" endtime="20201030 15:54:16.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.425" endtime="20201030 15:54:16.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.423" endtime="20201030 15:54:16.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.455" endtime="20201030 15:54:16.741"></status>
</kw>
<msg timestamp="20201030 15:54:16.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019799222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.454" endtime="20201030 15:54:16.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019799222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.745" endtime="20201030 15:54:16.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.753" endtime="20201030 15:54:16.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.451" endtime="20201030 15:54:16.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.449" endtime="20201030 15:54:16.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:16.759" level="INFO">${PHILIP_RES} = [{'diff': 7.051400000000069e-05}, {'diff': 6.902699999999928e-05}, {'diff': 6.898600000000005e-05}, {'diff': 6.899999999999962e-05}, {'diff': 6.901400000000266e-05}, {'diff': 6.901399999999919e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:16.756" endtime="20201030 15:54:16.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:16.764" level="INFO">${RESULT} = {'diff': [7.051400000000069e-05, 6.902699999999928e-05, 6.898600000000005e-05, 6.899999999999962e-05, 6.901400000000266e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.906900000000146e-05, 6.9055...</msg>
<status status="PASS" starttime="20201030 15:54:16.760" endtime="20201030 15:54:16.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.769" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:16.768" endtime="20201030 15:54:16.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.771" level="INFO">VALUE: [7.051400000000069e-05, 6.902699999999928e-05, 6.898600000000005e-05, 6.899999999999962e-05, 6.901400000000266e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.906900000000146e-05, 6.90559999999979e-05, 6.901399999999919e-05, 6.902699999999928e-05, 6.902799999999876e-05, 6.902800000000223e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.902799999999876e-05, 6.902799999999876e-05, 6.902799999999876e-05, 6.899999999999962e-05, 6.901400000000266e-05, 6.902799999999876e-05, 6.901399999999919e-05, 6.904099999999885e-05, 6.902799999999876e-05, 6.901400000000266e-05, 6.901299999999971e-05, 6.902799999999876e-05, 6.904199999999833e-05, 6.901399999999919e-05, 6.901400000000266e-05, 6.902799999999876e-05, 6.908300000000103e-05, 6.899999999999962e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.902799999999876e-05, 6.895800000000091e-05, 6.900000000000309e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.901400000000266e-05, 6.898600000000005e-05, 6.897200000000048e-05, 6.902800000000223e-05, 6.898600000000005e-05, 6.901399999999919e-05, 6.902800000000223e-05, 6.901399999999919e-05, 6.901299999999971e-05, 6.902800000000223e-05]</msg>
<status status="PASS" starttime="20201030 15:54:16.770" endtime="20201030 15:54:16.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.765" endtime="20201030 15:54:16.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:16.776" endtime="20201030 15:54:16.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.775" endtime="20201030 15:54:16.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.773" endtime="20201030 15:54:16.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.421" endtime="20201030 15:54:16.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.420" endtime="20201030 15:54:16.797"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.805" endtime="20201030 15:54:16.821"></status>
</kw>
<msg timestamp="20201030 15:54:16.822" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.804" endtime="20201030 15:54:16.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.825" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.823" endtime="20201030 15:54:16.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.827" endtime="20201030 15:54:16.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.801" endtime="20201030 15:54:16.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.799" endtime="20201030 15:54:16.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.840" endtime="20201030 15:54:17.128"></status>
</kw>
<msg timestamp="20201030 15:54:17.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.838" endtime="20201030 15:54:17.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.133" endtime="20201030 15:54:17.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.140" endtime="20201030 15:54:17.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.834" endtime="20201030 15:54:17.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.833" endtime="20201030 15:54:17.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:17.147" level="INFO">${PHILIP_RES} = [{'diff': 8.91519999999986e-05}, {'diff': 8.765300000000004e-05}, {'diff': 8.768099999999918e-05}, {'diff': 8.761099999999786e-05}, {'diff': 8.770799999999884e-05}, {'diff': 8.763900000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:17.144" endtime="20201030 15:54:17.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:17.151" level="INFO">${RESULT} = {'diff': [8.91519999999986e-05, 8.765300000000004e-05, 8.768099999999918e-05, 8.761099999999786e-05, 8.770799999999884e-05, 8.763900000000047e-05, 8.76250000000009e-05, 8.76669999999996e-05, 8.7653000...</msg>
<status status="PASS" starttime="20201030 15:54:17.148" endtime="20201030 15:54:17.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.155" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:17.154" endtime="20201030 15:54:17.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.157" level="INFO">VALUE: [8.91519999999986e-05, 8.765300000000004e-05, 8.768099999999918e-05, 8.761099999999786e-05, 8.770799999999884e-05, 8.763900000000047e-05, 8.76250000000009e-05, 8.76669999999996e-05, 8.765300000000004e-05, 8.763900000000047e-05, 8.758300000000219e-05, 8.76250000000009e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.76669999999996e-05, 8.763900000000047e-05, 8.76250000000009e-05, 8.765300000000004e-05, 8.76799999999997e-05, 8.765300000000004e-05, 8.759699999999829e-05, 8.768099999999918e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.76250000000009e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.76519999999971e-05, 8.76250000000009e-05, 8.765200000000056e-05, 8.770800000000231e-05, 8.765300000000004e-05, 8.76250000000009e-05, 8.768099999999918e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.765200000000056e-05, 8.765200000000056e-05, 8.769399999999927e-05, 8.763900000000047e-05, 8.76250000000009e-05, 8.763900000000047e-05, 8.761100000000133e-05]</msg>
<status status="PASS" starttime="20201030 15:54:17.156" endtime="20201030 15:54:17.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.152" endtime="20201030 15:54:17.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:17.170" endtime="20201030 15:54:17.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.168" endtime="20201030 15:54:17.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.167" endtime="20201030 15:54:17.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.798" endtime="20201030 15:54:17.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.797" endtime="20201030 15:54:17.191"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.199" endtime="20201030 15:54:17.218"></status>
</kw>
<msg timestamp="20201030 15:54:17.219" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.197" endtime="20201030 15:54:17.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.222" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.220" endtime="20201030 15:54:17.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.223" endtime="20201030 15:54:17.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.195" endtime="20201030 15:54:17.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.193" endtime="20201030 15:54:17.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.234" endtime="20201030 15:54:17.521"></status>
</kw>
<msg timestamp="20201030 15:54:17.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019270306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019378833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.232" endtime="20201030 15:54:17.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019270306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019378833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.526" endtime="20201030 15:54:17.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.534" endtime="20201030 15:54:17.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.230" endtime="20201030 15:54:17.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.228" endtime="20201030 15:54:17.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:17.540" level="INFO">${PHILIP_RES} = [{'diff': 0.00010852700000000062}, {'diff': 0.00010701399999999903}, {'diff': 0.00010698599999999989}, {'diff': 0.0001070279999999986}, {'diff': 0.00010701399999999903}, {'diff': 0.0001070550000000017...</msg>
<status status="PASS" starttime="20201030 15:54:17.537" endtime="20201030 15:54:17.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:17.544" level="INFO">${RESULT} = {'diff': [0.00010852700000000062, 0.00010701399999999903, 0.00010698599999999989, 0.0001070279999999986, 0.00010701399999999903, 0.00010705500000000173, 0.00010704100000000216, 0.0001070140000000025, ...</msg>
<status status="PASS" starttime="20201030 15:54:17.541" endtime="20201030 15:54:17.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.549" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:17.548" endtime="20201030 15:54:17.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.551" level="INFO">VALUE: [0.00010852700000000062, 0.00010701399999999903, 0.00010698599999999989, 0.0001070279999999986, 0.00010701399999999903, 0.00010705500000000173, 0.00010704100000000216, 0.0001070140000000025, 0.00010702800000000207, 0.0001070279999999986, 0.0001070560000000012, 0.0001070279999999986, 0.00010704099999999869, 0.00010698699999999936, 0.00010704199999999817, 0.0001070279999999986, 0.00010698599999999989, 0.00010704200000000164, 0.0001070140000000025, 0.00010702700000000259, 0.00010701399999999903, 0.0001070279999999986, 0.00010704199999999817, 0.00010704199999999817, 0.0001070560000000012, 0.00010704199999999817, 0.00010701299999999955, 0.00010698599999999989, 0.00010702800000000207, 0.00010701299999999955, 0.00010701399999999903, 0.00010701399999999903, 0.00010704200000000164, 0.00010708400000000035, 0.00010704100000000216, 0.0001070140000000025, 0.00010701399999999903, 0.00010693000000000161, 0.00010704200000000164, 0.00010701399999999903, 0.0001070279999999986, 0.00010699999999999946, 0.0001070279999999986, 0.00010704199999999817, 0.00010701399999999903, 0.0001070140000000025, 0.00010702699999999912, 0.0001070140000000025, 0.00010701399999999556, 0.00010702799999999513]</msg>
<status status="PASS" starttime="20201030 15:54:17.550" endtime="20201030 15:54:17.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.545" endtime="20201030 15:54:17.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:17.557" endtime="20201030 15:54:17.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.555" endtime="20201030 15:54:17.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.554" endtime="20201030 15:54:17.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.192" endtime="20201030 15:54:17.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.191" endtime="20201030 15:54:17.578"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.586" endtime="20201030 15:54:17.607"></status>
</kw>
<msg timestamp="20201030 15:54:17.607" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.584" endtime="20201030 15:54:17.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.610" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.608" endtime="20201030 15:54:17.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.611" endtime="20201030 15:54:17.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.582" endtime="20201030 15:54:17.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.580" endtime="20201030 15:54:17.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.620" endtime="20201030 15:54:17.905"></status>
</kw>
<msg timestamp="20201030 15:54:17.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018453667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018582236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.618" endtime="20201030 15:54:17.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018453667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018582236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.909" endtime="20201030 15:54:17.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.916" endtime="20201030 15:54:17.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.616" endtime="20201030 15:54:17.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.614" endtime="20201030 15:54:17.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:17.923" level="INFO">${PHILIP_RES} = [{'diff': 0.00012856899999999852}, {'diff': 0.00012713899999999834}, {'diff': 0.00012718100000000052}, {'diff': 0.0001271529999999979}, {'diff': 0.00012716600000000147}, {'diff': 0.0001272089999999996...</msg>
<status status="PASS" starttime="20201030 15:54:17.919" endtime="20201030 15:54:17.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:17.927" level="INFO">${RESULT} = {'diff': [0.00012856899999999852, 0.00012713899999999834, 0.00012718100000000052, 0.0001271529999999979, 0.00012716600000000147, 0.00012720899999999966, 0.0001271109999999992, 0.0001271109999999992, 0...</msg>
<status status="PASS" starttime="20201030 15:54:17.924" endtime="20201030 15:54:17.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.932" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:17.931" endtime="20201030 15:54:17.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.934" level="INFO">VALUE: [0.00012856899999999852, 0.00012713899999999834, 0.00012718100000000052, 0.0001271529999999979, 0.00012716600000000147, 0.00012720899999999966, 0.0001271109999999992, 0.0001271109999999992, 0.00012715300000000138, 0.0001271529999999979, 0.0001271390000000018, 0.0001271109999999992, 0.00012716700000000095, 0.00012715300000000138, 0.00012716700000000095, 0.00012712499999999877, 0.00012712500000000224, 0.00012719500000000009, 0.0001271390000000018, 0.0001271390000000018, 0.00012715300000000138, 0.00012712500000000224, 0.00012712499999999877, 0.00012712500000000224, 0.00012716700000000095, 0.000127165999999998, 0.00012713899999999834, 0.00012711100000000267, 0.00012718099999999705, 0.0001271529999999979, 0.00012709699999999963, 0.00012713899999999834, 0.00012712500000000224, 0.00012712499999999877, 0.00012716700000000095, 0.0001271109999999992, 0.0001271520000000019, 0.0001271529999999979, 0.00012719399999999714, 0.0001271390000000018, 0.00012716700000000095, 0.00012720800000000018, 0.0001271529999999979, 0.00012713899999999834, 0.0001271800000000045, 0.00012713899999999834, 0.00012713899999999834, 0.00012713899999999834, 0.0001271250000000057, 0.00012708399999999953]</msg>
<status status="PASS" starttime="20201030 15:54:17.933" endtime="20201030 15:54:17.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.928" endtime="20201030 15:54:17.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:17.939" endtime="20201030 15:54:17.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.938" endtime="20201030 15:54:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.936" endtime="20201030 15:54:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.578" endtime="20201030 15:54:17.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.578" endtime="20201030 15:54:17.960"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.968" endtime="20201030 15:54:17.992"></status>
</kw>
<msg timestamp="20201030 15:54:17.992" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.966" endtime="20201030 15:54:17.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.994" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.993" endtime="20201030 15:54:17.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.995" endtime="20201030 15:54:17.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.964" endtime="20201030 15:54:17.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.962" endtime="20201030 15:54:17.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.004" endtime="20201030 15:54:18.291"></status>
</kw>
<msg timestamp="20201030 15:54:18.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018506528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:18.003" endtime="20201030 15:54:18.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018506528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:18.295" endtime="20201030 15:54:18.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.303" endtime="20201030 15:54:18.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.000" endtime="20201030 15:54:18.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.999" endtime="20201030 15:54:18.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:18.313" level="INFO">${PHILIP_RES} = [{'diff': 0.00014950000000000033}, {'diff': 0.00014799999999999883}, {'diff': 0.00014799999999999883}, {'diff': 0.0001480139999999984}, {'diff': 0.0001480139999999984}, {'diff': 0.00014798599999999926...</msg>
<status status="PASS" starttime="20201030 15:54:18.309" endtime="20201030 15:54:18.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:18.317" level="INFO">${RESULT} = {'diff': [0.00014950000000000033, 0.00014799999999999883, 0.00014799999999999883, 0.0001480139999999984, 0.0001480139999999984, 0.00014798599999999926, 0.00014806900000000067, 0.0001479719999999997, 0...</msg>
<status status="PASS" starttime="20201030 15:54:18.314" endtime="20201030 15:54:18.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.321" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:18.320" endtime="20201030 15:54:18.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.324" level="INFO">VALUE: [0.00014950000000000033, 0.00014799999999999883, 0.00014799999999999883, 0.0001480139999999984, 0.0001480139999999984, 0.00014798599999999926, 0.00014806900000000067, 0.0001479719999999997, 0.00014799999999999883, 0.0001480139999999984, 0.00014799999999999883, 0.00014801400000000187, 0.00014795800000000012, 0.0001480139999999984, 0.0001479719999999997, 0.00014802800000000144, 0.00014801400000000187, 0.00014798599999999926, 0.00014801400000000187, 0.00014801400000000187, 0.00014798599999999926, 0.00014799999999999883, 0.00014805600000000058, 0.00014799999999999883, 0.00014802799999999797, 0.0001480139999999984, 0.00014804199999999754, 0.00014798599999999926, 0.0001480139999999984, 0.00014799999999999883, 0.00014794400000000055, 0.00014805600000000058, 0.00014804199999999754, 0.0001480139999999984, 0.00014801299999999892, 0.0001480000000000023, 0.00014801399999999493, 0.0001480000000000023, 0.00014804100000000153, 0.00014802800000000144, 0.00014801400000000187, 0.00014795899999999612, 0.00014801400000000187, 0.00014799999999999536, 0.00014801400000000187, 0.0001480279999999945, 0.00014797200000000316, 0.00014793099999999698, 0.00014794400000000402, 0.0001480279999999945]</msg>
<status status="PASS" starttime="20201030 15:54:18.322" endtime="20201030 15:54:18.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.318" endtime="20201030 15:54:18.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:18.328" endtime="20201030 15:54:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.327" endtime="20201030 15:54:18.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.326" endtime="20201030 15:54:18.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.961" endtime="20201030 15:54:18.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.960" endtime="20201030 15:54:18.349"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.358" endtime="20201030 15:54:18.385"></status>
</kw>
<msg timestamp="20201030 15:54:18.385" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.356" endtime="20201030 15:54:18.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.388" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.386" endtime="20201030 15:54:18.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.389" endtime="20201030 15:54:18.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.354" endtime="20201030 15:54:18.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.352" endtime="20201030 15:54:18.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.397" endtime="20201030 15:54:18.683"></status>
</kw>
<msg timestamp="20201030 15:54:18.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:18.396" endtime="20201030 15:54:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:18.686" endtime="20201030 15:54:18.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.694" endtime="20201030 15:54:18.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.394" endtime="20201030 15:54:18.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.392" endtime="20201030 15:54:18.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:18.701" level="INFO">${PHILIP_RES} = [{'diff': 0.0001711109999999981}, {'diff': 0.00016963799999999973}, {'diff': 0.00016961100000000007}, {'diff': 0.00016962499999999964}, {'diff': 0.00016963900000000268}, {'diff': 0.0001696110000000000...</msg>
<status status="PASS" starttime="20201030 15:54:18.697" endtime="20201030 15:54:18.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:18.705" level="INFO">${RESULT} = {'diff': [0.0001711109999999981, 0.00016963799999999973, 0.00016961100000000007, 0.00016962499999999964, 0.00016963900000000268, 0.00016961100000000007, 0.00016962499999999964, 0.00016956999999999736,...</msg>
<status status="PASS" starttime="20201030 15:54:18.702" endtime="20201030 15:54:18.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.709" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:18.708" endtime="20201030 15:54:18.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.711" level="INFO">VALUE: [0.0001711109999999981, 0.00016963799999999973, 0.00016961100000000007, 0.00016962499999999964, 0.00016963900000000268, 0.00016961100000000007, 0.00016962499999999964, 0.00016956999999999736, 0.00016965299999999878, 0.0001696250000000031, 0.0001696389999999992, 0.0001696389999999992, 0.00016963900000000268, 0.0001696389999999992, 0.0001696389999999992, 0.00016966699999999835, 0.00016972199999999715, 0.00016961100000000007, 0.00016961100000000007, 0.0001696389999999992, 0.00016963900000000268, 0.00016962499999999964, 0.0001696389999999992, 0.0001696389999999992, 0.0001696250000000031, 0.00016965299999999878, 0.00016958299999999746, 0.00016972200000000062, 0.0001696389999999992, 0.00016965299999999878, 0.00016966699999999835, 0.00016966699999999835, 0.00016965299999999878, 0.00016965299999999878, 0.00016973599999999672, 0.00016961199999999954, 0.00016962499999999964, 0.00016972199999999715, 0.00016970799999999758, 0.0001696389999999992, 0.00016965299999999878, 0.0001696519999999993, 0.00016963900000000615, 0.00016968100000000486, 0.00016961100000000007, 0.00016966699999999835, 0.0001696389999999992, 0.0001696389999999992, 0.00016972300000000357, 0.00016965299999999878]</msg>
<status status="PASS" starttime="20201030 15:54:18.710" endtime="20201030 15:54:18.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.705" endtime="20201030 15:54:18.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:18.719" endtime="20201030 15:54:18.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.718" endtime="20201030 15:54:18.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.717" endtime="20201030 15:54:18.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.350" endtime="20201030 15:54:18.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.350" endtime="20201030 15:54:18.740"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.748" endtime="20201030 15:54:18.777"></status>
</kw>
<msg timestamp="20201030 15:54:18.777" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.746" endtime="20201030 15:54:18.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.780" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.778" endtime="20201030 15:54:18.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.781" endtime="20201030 15:54:18.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.744" endtime="20201030 15:54:18.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.742" endtime="20201030 15:54:18.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.790" endtime="20201030 15:54:19.075"></status>
</kw>
<msg timestamp="20201030 15:54:19.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018469014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:18.788" endtime="20201030 15:54:19.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018469014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:19.079" endtime="20201030 15:54:19.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.086" endtime="20201030 15:54:19.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.786" endtime="20201030 15:54:19.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.784" endtime="20201030 15:54:19.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:19.093" level="INFO">${PHILIP_RES} = [{'diff': 0.0001935139999999988}, {'diff': 0.00019202800000000034}, {'diff': 0.00019198599999999816}, {'diff': 0.00019199999999999773}, {'diff': 0.00019198599999999816}, {'diff': 0.0001920280000000003...</msg>
<status status="PASS" starttime="20201030 15:54:19.090" endtime="20201030 15:54:19.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:19.097" level="INFO">${RESULT} = {'diff': [0.0001935139999999988, 0.00019202800000000034, 0.00019198599999999816, 0.00019199999999999773, 0.00019198599999999816, 0.00019202800000000034, 0.00019198599999999816, 0.00019202700000000086,...</msg>
<status status="PASS" starttime="20201030 15:54:19.094" endtime="20201030 15:54:19.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.102" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:19.101" endtime="20201030 15:54:19.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.104" level="INFO">VALUE: [0.0001935139999999988, 0.00019202800000000034, 0.00019198599999999816, 0.00019199999999999773, 0.00019198599999999816, 0.00019202800000000034, 0.00019198599999999816, 0.00019202700000000086, 0.0001919719999999986, 0.00019195799999999902, 0.00019193100000000282, 0.00019202800000000034, 0.00019202700000000086, 0.0001920000000000012, 0.00019198600000000163, 0.00019202800000000034, 0.00019202799999999687, 0.00019201400000000077, 0.00019194399999999945, 0.0001920419999999999, 0.0001920139999999973, 0.00019205599999999948, 0.0001920139999999973, 0.00019205599999999948, 0.0001919719999999986, 0.00019201299999999782, 0.0001920139999999973, 0.0001920419999999999, 0.00019201400000000424, 0.00019201400000000424, 0.0001920280000000038, 0.00019198599999999816, 0.0001920139999999973, 0.0001920139999999973, 0.00019201299999999782, 0.0001920139999999973, 0.0001920139999999973, 0.0001920269999999974, 0.0001920139999999973, 0.0001920139999999973, 0.0001920139999999973, 0.00019202799999999687, 0.00019204200000000338, 0.00019201400000000424, 0.00019202700000000433, 0.0001920280000000038, 0.00019201400000000424, 0.00019204099999999696, 0.00019202799999999687, 0.0001920139999999973]</msg>
<status status="PASS" starttime="20201030 15:54:19.103" endtime="20201030 15:54:19.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.098" endtime="20201030 15:54:19.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:19.109" endtime="20201030 15:54:19.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.107" endtime="20201030 15:54:19.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.106" endtime="20201030 15:54:19.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.741" endtime="20201030 15:54:19.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.740" endtime="20201030 15:54:19.130"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.138" endtime="20201030 15:54:19.170"></status>
</kw>
<msg timestamp="20201030 15:54:19.170" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.136" endtime="20201030 15:54:19.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.173" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.171" endtime="20201030 15:54:19.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.174" endtime="20201030 15:54:19.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.134" endtime="20201030 15:54:19.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.132" endtime="20201030 15:54:19.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.182" endtime="20201030 15:54:19.469"></status>
</kw>
<msg timestamp="20201030 15:54:19.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018479333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.181" endtime="20201030 15:54:19.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018479333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.473" endtime="20201030 15:54:19.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.481" endtime="20201030 15:54:19.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.178" endtime="20201030 15:54:19.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.177" endtime="20201030 15:54:19.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:19.488" level="INFO">${PHILIP_RES} = [{'diff': 0.00021665300000000068}, {'diff': 0.00021513800000000013}, {'diff': 0.0002150970000000009}, {'diff': 0.00021515299999999918}, {'diff': 0.000215110999999997}, {'diff': 0.00021512500000000004}...</msg>
<status status="PASS" starttime="20201030 15:54:19.485" endtime="20201030 15:54:19.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:19.492" level="INFO">${RESULT} = {'diff': [0.00021665300000000068, 0.00021513800000000013, 0.0002150970000000009, 0.00021515299999999918, 0.000215110999999997, 0.00021512500000000004, 0.00021511100000000047, 0.0002150970000000009, 0....</msg>
<status status="PASS" starttime="20201030 15:54:19.489" endtime="20201030 15:54:19.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.497" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:19.496" endtime="20201030 15:54:19.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.499" level="INFO">VALUE: [0.00021665300000000068, 0.00021513800000000013, 0.0002150970000000009, 0.00021515299999999918, 0.000215110999999997, 0.00021512500000000004, 0.00021511100000000047, 0.0002150970000000009, 0.00021515299999999918, 0.00021512500000000004, 0.00021512500000000004, 0.00021513800000000013, 0.0002151389999999996, 0.00021516700000000222, 0.0002151389999999996, 0.00021507000000000123, 0.00021513800000000013, 0.00021515299999999918, 0.00021512500000000004, 0.00021511100000000047, 0.00021512500000000004, 0.00021511100000000047, 0.00021509699999999743, 0.0002150970000000009, 0.0002151389999999996, 0.00021516699999999528, 0.000215110999999997, 0.00021513899999999614, 0.000215208999999994, 0.00021512499999999657, 0.00021509700000000437, 0.0002151250000000035, 0.0002151250000000035, 0.0002151250000000035, 0.00021513900000000308, 0.00021518000000000231, 0.0002151380000000036, 0.0002151250000000035, 0.00021515300000000265, 0.00021515200000000317, 0.0002151120000000034, 0.00021513900000000308, 0.0002151250000000035, 0.0002151250000000035, 0.0002151250000000035, 0.00021513900000000308, 0.00021516700000000222, 0.00021515200000000317, 0.0002151250000000035, 0.000215110999999997]</msg>
<status status="PASS" starttime="20201030 15:54:19.498" endtime="20201030 15:54:19.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.493" endtime="20201030 15:54:19.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:19.504" endtime="20201030 15:54:19.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.503" endtime="20201030 15:54:19.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.501" endtime="20201030 15:54:19.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.131" endtime="20201030 15:54:19.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.130" endtime="20201030 15:54:19.525"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.533" endtime="20201030 15:54:19.569"></status>
</kw>
<msg timestamp="20201030 15:54:19.569" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.532" endtime="20201030 15:54:19.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.572" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.570" endtime="20201030 15:54:19.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.573" endtime="20201030 15:54:19.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.529" endtime="20201030 15:54:19.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.527" endtime="20201030 15:54:19.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.582" endtime="20201030 15:54:19.882"></status>
</kw>
<msg timestamp="20201030 15:54:19.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.580" endtime="20201030 15:54:19.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.891" endtime="20201030 15:54:19.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.909" endtime="20201030 15:54:19.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.578" endtime="20201030 15:54:19.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.576" endtime="20201030 15:54:19.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:19.922" level="INFO">${PHILIP_RES} = [{'diff': 0.00024048699999999756}, {'diff': 0.00023894400000000135}, {'diff': 0.00023897199999999702}, {'diff': 0.00023899999999999963}, {'diff': 0.00023898600000000006}, {'diff': 0.000238999999999999...</msg>
<status status="PASS" starttime="20201030 15:54:19.916" endtime="20201030 15:54:19.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:19.926" level="INFO">${RESULT} = {'diff': [0.00024048699999999756, 0.00023894400000000135, 0.00023897199999999702, 0.00023899999999999963, 0.00023898600000000006, 0.00023899999999999963, 0.00023901299999999973, 0.00023898600000000006...</msg>
<status status="PASS" starttime="20201030 15:54:19.923" endtime="20201030 15:54:19.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.930" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:19.929" endtime="20201030 15:54:19.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.933" level="INFO">VALUE: [0.00024048699999999756, 0.00023894400000000135, 0.00023897199999999702, 0.00023899999999999963, 0.00023898600000000006, 0.00023899999999999963, 0.00023901299999999973, 0.00023898600000000006, 0.0002389720000000005, 0.0002390000000000031, 0.0002389720000000005, 0.0002390139999999992, 0.00023898600000000006, 0.00023899999999999963, 0.00023905600000000138, 0.00023894500000000082, 0.00023894399999999788, 0.00023898600000000006, 0.0002389590000000004, 0.00023894500000000082, 0.00023895800000000092, 0.00023898600000000353, 0.00023895799999999745, 0.00023895799999999745, 0.00023897200000000396, 0.00023894399999999788, 0.00023897199999999702, 0.0002390420000000018, 0.00023893000000000525, 0.00023897199999999702, 0.00023897199999999702, 0.00023897199999999702, 0.00023897300000000343, 0.00023906900000000147, 0.00023901400000000267, 0.0002389859999999966, 0.00023897300000000343, 0.0002390000000000031, 0.00023899999999999616, 0.0002389859999999966, 0.0002390000000000031, 0.00023902800000000224, 0.00023901400000000267, 0.00023902699999999583, 0.00023899999999999616, 0.00023897199999999702, 0.0002389859999999966, 0.00023897200000000396, 0.0002390000000000031, 0.00023899999999999616]</msg>
<status status="PASS" starttime="20201030 15:54:19.932" endtime="20201030 15:54:19.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.927" endtime="20201030 15:54:19.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:19.939" endtime="20201030 15:54:19.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.937" endtime="20201030 15:54:19.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.936" endtime="20201030 15:54:19.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.526" endtime="20201030 15:54:19.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.525" endtime="20201030 15:54:19.959"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.968" endtime="20201030 15:54:20.005"></status>
</kw>
<msg timestamp="20201030 15:54:20.006" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.966" endtime="20201030 15:54:20.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.008" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.007" endtime="20201030 15:54:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.009" endtime="20201030 15:54:20.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.964" endtime="20201030 15:54:20.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.962" endtime="20201030 15:54:20.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.018" endtime="20201030 15:54:20.304"></status>
</kw>
<msg timestamp="20201030 15:54:20.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.017" endtime="20201030 15:54:20.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.308" endtime="20201030 15:54:20.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.315" endtime="20201030 15:54:20.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.014" endtime="20201030 15:54:20.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.013" endtime="20201030 15:54:20.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:20.322" level="INFO">${PHILIP_RES} = [{'diff': 0.00026509699999999886}, {'diff': 0.0002635560000000016}, {'diff': 0.0002636110000000004}, {'diff': 0.000263639000000003}, {'diff': 0.00026362499999999997}, {'diff': 0.0002636530000000026}, ...</msg>
<status status="PASS" starttime="20201030 15:54:20.319" endtime="20201030 15:54:20.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:20.327" level="INFO">${RESULT} = {'diff': [0.00026509699999999886, 0.0002635560000000016, 0.0002636110000000004, 0.000263639000000003, 0.00026362499999999997, 0.0002636530000000026, 0.0002636110000000004, 0.0002636799999999988, 0.000...</msg>
<status status="PASS" starttime="20201030 15:54:20.323" endtime="20201030 15:54:20.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.331" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:20.330" endtime="20201030 15:54:20.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.334" level="INFO">VALUE: [0.00026509699999999886, 0.0002635560000000016, 0.0002636110000000004, 0.000263639000000003, 0.00026362499999999997, 0.0002636530000000026, 0.0002636110000000004, 0.0002636799999999988, 0.0002636530000000026, 0.0002636669999999987, 0.0002636110000000004, 0.0002635829999999978, 0.0002636529999999991, 0.0002636529999999991, 0.0002636110000000004, 0.000263639000000003, 0.00026359700000000083, 0.00026363800000000007, 0.00026362499999999997, 0.00026363899999999954, 0.0002636249999999965, 0.000263639000000003, 0.0002636249999999965, 0.00026361100000000387, 0.00026362500000000344, 0.00026361100000000387, 0.00026361099999999693, 0.00026363899999999607, 0.00026361099999999693, 0.00026361100000000387, 0.00026361100000000387, 0.0002636249999999965, 0.00026362500000000344, 0.000263639000000003, 0.000263639000000003, 0.0002636249999999965, 0.0002636669999999952, 0.0002635840000000042, 0.0002636669999999952, 0.0002635970000000043, 0.00026359699999999736, 0.00026359699999999736, 0.00026361100000000387, 0.00026354199999999856, 0.00026361100000000387, 0.00026354199999999856, 0.00026361099999999693, 0.0002635970000000043, 0.00026361100000000387, 0.00026359699999999736]</msg>
<status status="PASS" starttime="20201030 15:54:20.332" endtime="20201030 15:54:20.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.328" endtime="20201030 15:54:20.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:20.339" endtime="20201030 15:54:20.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.337" endtime="20201030 15:54:20.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.336" endtime="20201030 15:54:20.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.960" endtime="20201030 15:54:20.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.960" endtime="20201030 15:54:20.361"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.370" endtime="20201030 15:54:20.411"></status>
</kw>
<msg timestamp="20201030 15:54:20.411" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.368" endtime="20201030 15:54:20.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.414" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.412" endtime="20201030 15:54:20.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.415" endtime="20201030 15:54:20.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.366" endtime="20201030 15:54:20.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.364" endtime="20201030 15:54:20.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.428" endtime="20201030 15:54:20.732"></status>
</kw>
<msg timestamp="20201030 15:54:20.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021096264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021386792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.427" endtime="20201030 15:54:20.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021096264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021386792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.736" endtime="20201030 15:54:20.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.743" endtime="20201030 15:54:20.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.424" endtime="20201030 15:54:20.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.422" endtime="20201030 15:54:20.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:20.751" level="INFO">${PHILIP_RES} = [{'diff': 0.0002905280000000017}, {'diff': 0.00028897199999999845}, {'diff': 0.00028902799999999673}, {'diff': 0.00028901400000000063}, {'diff': 0.00028897199999999845}, {'diff': 0.0002889860000000015...</msg>
<status status="PASS" starttime="20201030 15:54:20.748" endtime="20201030 15:54:20.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:20.755" level="INFO">${RESULT} = {'diff': [0.0002905280000000017, 0.00028897199999999845, 0.00028902799999999673, 0.00028901400000000063, 0.00028897199999999845, 0.0002889860000000015, 0.00028895800000000235, 0.000288985999999998, 0....</msg>
<status status="PASS" starttime="20201030 15:54:20.752" endtime="20201030 15:54:20.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.759" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:20.758" endtime="20201030 15:54:20.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.761" level="INFO">VALUE: [0.0002905280000000017, 0.00028897199999999845, 0.00028902799999999673, 0.00028901400000000063, 0.00028897199999999845, 0.0002889860000000015, 0.00028895800000000235, 0.000288985999999998, 0.0002889309999999992, 0.0002889860000000015, 0.0002889030000000001, 0.00028894500000000226, 0.00028895899999999836, 0.0002889730000000014, 0.0002889579999999989, 0.00028898600000000496, 0.0002889869999999975, 0.00028892999999999974, 0.00028898600000000496, 0.00028904099999999683, 0.0002889579999999989, 0.0002889309999999992, 0.00028900000000000453, 0.0002889590000000053, 0.0002889449999999988, 0.00028897199999999845, 0.00028897199999999845, 0.00028902699999999726, 0.00028895899999999836, 0.00028897199999999845, 0.00028898600000000496, 0.00028901399999999716, 0.0002889999999999976, 0.00028902699999999726, 0.00028901399999999716, 0.00028905500000000334, 0.00028891699999999965, 0.00028897300000000486, 0.0002889449999999988, 0.00028897199999999845, 0.0002889579999999989, 0.0002889309999999992, 0.00028895899999999836, 0.00028897199999999845, 0.0002889439999999993, 0.00028898600000000496, 0.0002889720000000054, 0.0002889439999999993, 0.00028897199999999845, 0.0002889579999999989]</msg>
<status status="PASS" starttime="20201030 15:54:20.760" endtime="20201030 15:54:20.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.756" endtime="20201030 15:54:20.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:20.766" endtime="20201030 15:54:20.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.765" endtime="20201030 15:54:20.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.764" endtime="20201030 15:54:20.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.362" endtime="20201030 15:54:20.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.362" endtime="20201030 15:54:20.787"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.795" endtime="20201030 15:54:20.839"></status>
</kw>
<msg timestamp="20201030 15:54:20.840" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.794" endtime="20201030 15:54:20.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.842" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.841" endtime="20201030 15:54:20.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.843" endtime="20201030 15:54:20.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.791" endtime="20201030 15:54:20.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.789" endtime="20201030 15:54:20.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.852" endtime="20201030 15:54:21.138"></status>
</kw>
<msg timestamp="20201030 15:54:21.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.851" endtime="20201030 15:54:21.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:21.142" endtime="20201030 15:54:21.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.149" endtime="20201030 15:54:21.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.848" endtime="20201030 15:54:21.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.846" endtime="20201030 15:54:21.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:21.156" level="INFO">${PHILIP_RES} = [{'diff': 0.0003165549999999996}, {'diff': 0.00031501400000000235}, {'diff': 0.00031501400000000235}, {'diff': 0.0003150420000000015}, {'diff': 0.0003150280000000019}, {'diff': 0.00031498599999999974}...</msg>
<status status="PASS" starttime="20201030 15:54:21.153" endtime="20201030 15:54:21.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:21.159" level="INFO">${RESULT} = {'diff': [0.0003165549999999996, 0.00031501400000000235, 0.00031501400000000235, 0.0003150420000000015, 0.0003150280000000019, 0.00031498599999999974, 0.0003150139999999989, 0.0003150689999999977, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:21.157" endtime="20201030 15:54:21.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.164" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:21.163" endtime="20201030 15:54:21.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.166" level="INFO">VALUE: [0.0003165549999999996, 0.00031501400000000235, 0.00031501400000000235, 0.0003150420000000015, 0.0003150280000000019, 0.00031498599999999974, 0.0003150139999999989, 0.0003150689999999977, 0.000315041999999998, 0.0003150280000000019, 0.0003150550000000016, 0.000315041000000002, 0.0003150559999999976, 0.0003150420000000015, 0.0003150549999999981, 0.0003149999999999993, 0.0003150689999999942, 0.0003150970000000003, 0.00031501400000000235, 0.00031507000000000063, 0.0003150689999999942, 0.0003150550000000016, 0.0003150420000000015, 0.00031505600000000106, 0.0003150280000000019, 0.0003150420000000015, 0.00031505499999999464, 0.00031501299999999594, 0.0003150420000000015, 0.00031511099999999986, 0.00031505600000000106, 0.0003150420000000015, 0.0003150409999999951, 0.0003150550000000016, 0.0003150559999999941, 0.0003150000000000028, 0.00031507000000000063, 0.0003150550000000016, 0.00031502700000000244, 0.0003150840000000002, 0.000315041000000002, 0.00031501299999999594, 0.00031502700000000244, 0.00031501400000000235, 0.00031504199999999455, 0.00031505600000000106, 0.0003150139999999954, 0.00031494500000000397, 0.0003150000000000028, 0.0003149169999999979]</msg>
<status status="PASS" starttime="20201030 15:54:21.165" endtime="20201030 15:54:21.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.160" endtime="20201030 15:54:21.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:21.172" endtime="20201030 15:54:21.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.170" endtime="20201030 15:54:21.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.169" endtime="20201030 15:54:21.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.788" endtime="20201030 15:54:21.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.787" endtime="20201030 15:54:21.193"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.201" endtime="20201030 15:54:21.247"></status>
</kw>
<msg timestamp="20201030 15:54:21.247" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.199" endtime="20201030 15:54:21.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.250" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.248" endtime="20201030 15:54:21.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.251" endtime="20201030 15:54:21.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.197" endtime="20201030 15:54:21.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.195" endtime="20201030 15:54:21.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.260" endtime="20201030 15:54:21.561"></status>
</kw>
<msg timestamp="20201030 15:54:21.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018538681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:21.258" endtime="20201030 15:54:21.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018538681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:21.565" endtime="20201030 15:54:21.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.573" endtime="20201030 15:54:21.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.256" endtime="20201030 15:54:21.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.254" endtime="20201030 15:54:21.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:21.579" level="INFO">${PHILIP_RES} = [{'diff': 0.0003433469999999973}, {'diff': 0.00034187499999999843}, {'diff': 0.00034188900000000147}, {'diff': 0.00034187499999999843}, {'diff': 0.0003418750000000019}, {'diff': 0.00034190299999999757...</msg>
<status status="PASS" starttime="20201030 15:54:21.576" endtime="20201030 15:54:21.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:21.584" level="INFO">${RESULT} = {'diff': [0.0003433469999999973, 0.00034187499999999843, 0.00034188900000000147, 0.00034187499999999843, 0.0003418750000000019, 0.00034190299999999757, 0.00034190300000000104, 0.00034190300000000104, ...</msg>
<status status="PASS" starttime="20201030 15:54:21.580" endtime="20201030 15:54:21.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.588" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:21.587" endtime="20201030 15:54:21.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.591" level="INFO">VALUE: [0.0003433469999999973, 0.00034187499999999843, 0.00034188900000000147, 0.00034187499999999843, 0.0003418750000000019, 0.00034190299999999757, 0.00034190300000000104, 0.00034190300000000104, 0.00034188900000000147, 0.00034187499999999843, 0.0003419309999999967, 0.000341888999999998, 0.00034187499999999843, 0.00034186100000000233, 0.0003418879999999985, 0.0003418750000000019, 0.0003418480000000057, 0.000341888999999998, 0.00034191699999999714, 0.0003418879999999985, 0.00034192999999999724, 0.00034186099999999886, 0.00034184700000000623, 0.0003418469999999993, 0.00034187499999999843, 0.0003419030000000045, 0.00034192999999999724, 0.00034190299999999757, 0.00034188900000000494, 0.00034186099999999886, 0.0003419309999999967, 0.00034191699999999714, 0.00034187499999999843, 0.00034190299999999757, 0.000341888999999998, 0.00034187499999999843, 0.00034188900000000494, 0.0003419030000000045, 0.00034187500000000537, 0.0003419170000000041, 0.00034190299999999757, 0.00034190299999999757, 0.00034187500000000537, 0.00034187499999999843, 0.000341888999999998, 0.000341888999999998, 0.00034188800000000547, 0.00034187499999999843, 0.0003419590000000028, 0.00034187499999999843]</msg>
<status status="PASS" starttime="20201030 15:54:21.589" endtime="20201030 15:54:21.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.585" endtime="20201030 15:54:21.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:21.596" endtime="20201030 15:54:21.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.594" endtime="20201030 15:54:21.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.593" endtime="20201030 15:54:21.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.193" endtime="20201030 15:54:21.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.193" endtime="20201030 15:54:21.616"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.625" endtime="20201030 15:54:21.674"></status>
</kw>
<msg timestamp="20201030 15:54:21.674" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.623" endtime="20201030 15:54:21.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.676" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.675" endtime="20201030 15:54:21.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.677" endtime="20201030 15:54:21.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.621" endtime="20201030 15:54:21.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.619" endtime="20201030 15:54:21.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.686" endtime="20201030 15:54:21.974"></status>
</kw>
<msg timestamp="20201030 15:54:21.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0185875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018958569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:21.685" endtime="20201030 15:54:21.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0185875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018958569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:21.978" endtime="20201030 15:54:21.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.986" endtime="20201030 15:54:21.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.682" endtime="20201030 15:54:21.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.681" endtime="20201030 15:54:21.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:21.993" level="INFO">${PHILIP_RES} = [{'diff': 0.00037106900000000165}, {'diff': 0.00036951400000000134}, {'diff': 0.00036951399999999787}, {'diff': 0.00036951400000000134}, {'diff': 0.00036948599999999873}, {'diff': 0.000369528000000000...</msg>
<status status="PASS" starttime="20201030 15:54:21.990" endtime="20201030 15:54:21.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:21.997" level="INFO">${RESULT} = {'diff': [0.00037106900000000165, 0.00036951400000000134, 0.00036951399999999787, 0.00036951400000000134, 0.00036948599999999873, 0.0003695280000000009, 0.00036951399999999787, 0.000369541000000001, 0...</msg>
<status status="PASS" starttime="20201030 15:54:21.994" endtime="20201030 15:54:21.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.002" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:22.001" endtime="20201030 15:54:22.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.004" level="INFO">VALUE: [0.00037106900000000165, 0.00036951400000000134, 0.00036951399999999787, 0.00036951400000000134, 0.00036948599999999873, 0.0003695280000000009, 0.00036951399999999787, 0.000369541000000001, 0.00036948599999999873, 0.00036952700000000144, 0.0003695969999999993, 0.0003695550000000006, 0.0003694999999999983, 0.000369541000000001, 0.00036948599999999873, 0.00036949999999999483, 0.0003695280000000009, 0.00036950000000000177, 0.00036956900000000015, 0.00036949999999999483, 0.00036949999999999483, 0.00036950000000000177, 0.00036947200000000263, 0.00036949999999999483, 0.0003695420000000005, 0.00036950000000000177, 0.00036940300000000426, 0.0003694719999999957, 0.00036947200000000263, 0.0003695420000000005, 0.00036948599999999526, 0.0003694870000000017, 0.0003694860000000022, 0.00036950000000000177, 0.00036945900000000254, 0.0003694860000000022, 0.00036950000000000177, 0.0003694860000000022, 0.00036951400000000134, 0.0003694860000000022, 0.00036945800000000306, 0.00036950000000000177, 0.0003694860000000022, 0.00036945900000000254, 0.00036950000000000177, 0.00036951300000000187, 0.0003695280000000009, 0.00036950000000000177, 0.00036947200000000263, 0.00036947200000000263]</msg>
<status status="PASS" starttime="20201030 15:54:22.003" endtime="20201030 15:54:22.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.998" endtime="20201030 15:54:22.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:22.009" endtime="20201030 15:54:22.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.007" endtime="20201030 15:54:22.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.006" endtime="20201030 15:54:22.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.617" endtime="20201030 15:54:22.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.617" endtime="20201030 15:54:22.030"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.038" endtime="20201030 15:54:22.091"></status>
</kw>
<msg timestamp="20201030 15:54:22.091" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.036" endtime="20201030 15:54:22.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.094" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.092" endtime="20201030 15:54:22.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.095" endtime="20201030 15:54:22.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.034" endtime="20201030 15:54:22.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.032" endtime="20201030 15:54:22.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.103" endtime="20201030 15:54:22.389"></status>
</kw>
<msg timestamp="20201030 15:54:22.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.102" endtime="20201030 15:54:22.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.393" endtime="20201030 15:54:22.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.400" endtime="20201030 15:54:22.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.099" endtime="20201030 15:54:22.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.098" endtime="20201030 15:54:22.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:22.407" level="INFO">${PHILIP_RES} = [{'diff': 0.00039936100000000085}, {'diff': 0.00039790299999999806}, {'diff': 0.0003977919999999975}, {'diff': 0.0003978749999999989}, {'diff': 0.00039786099999999935}, {'diff': 0.0003978750000000024}...</msg>
<status status="PASS" starttime="20201030 15:54:22.404" endtime="20201030 15:54:22.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:22.411" level="INFO">${RESULT} = {'diff': [0.00039936100000000085, 0.00039790299999999806, 0.0003977919999999975, 0.0003978749999999989, 0.00039786099999999935, 0.0003978750000000024, 0.0003978049999999976, 0.0003978469999999998, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:22.408" endtime="20201030 15:54:22.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.415" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:22.414" endtime="20201030 15:54:22.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.417" level="INFO">VALUE: [0.00039936100000000085, 0.00039790299999999806, 0.0003977919999999975, 0.0003978749999999989, 0.00039786099999999935, 0.0003978750000000024, 0.0003978049999999976, 0.0003978469999999998, 0.0003978339999999997, 0.0003978750000000024, 0.0003978050000000011, 0.0003978200000000001, 0.0003978889999999985, 0.0003977780000000014, 0.00039786099999999935, 0.0003978200000000001, 0.00039791699999999763, 0.0003978339999999997, 0.00039788900000000543, 0.00039786099999999935, 0.0003978330000000002, 0.0003978050000000011, 0.0003978339999999997, 0.0003978469999999998, 0.0003978339999999997, 0.0003978889999999985, 0.0003978749999999989, 0.0003978749999999989, 0.0003978889999999985, 0.0003978889999999985, 0.0003978889999999985, 0.00039794400000000424, 0.000397887999999999, 0.0003978749999999989, 0.0003978749999999989, 0.0003978749999999989, 0.0003978749999999989, 0.0003978469999999998, 0.0003978749999999989, 0.00039791700000000457, 0.0003979019999999986, 0.00039790299999999806, 0.0003978749999999989, 0.00039784799999999926, 0.0003978189999999937, 0.000397792000000001, 0.00039781900000000064, 0.0003978050000000011, 0.00039786199999999883, 0.0003978470000000067]</msg>
<status status="PASS" starttime="20201030 15:54:22.416" endtime="20201030 15:54:22.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.411" endtime="20201030 15:54:22.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:22.429" endtime="20201030 15:54:22.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.427" endtime="20201030 15:54:22.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.426" endtime="20201030 15:54:22.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.031" endtime="20201030 15:54:22.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.030" endtime="20201030 15:54:22.449"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.458" endtime="20201030 15:54:22.512"></status>
</kw>
<msg timestamp="20201030 15:54:22.513" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.456" endtime="20201030 15:54:22.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.515" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.514" endtime="20201030 15:54:22.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.516" endtime="20201030 15:54:22.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.454" endtime="20201030 15:54:22.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.452" endtime="20201030 15:54:22.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.526" endtime="20201030 15:54:22.812"></status>
</kw>
<msg timestamp="20201030 15:54:22.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018894431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.524" endtime="20201030 15:54:22.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018894431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.816" endtime="20201030 15:54:22.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.823" endtime="20201030 15:54:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.522" endtime="20201030 15:54:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.520" endtime="20201030 15:54:22.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:22.830" level="INFO">${PHILIP_RES} = [{'diff': 0.0004284449999999995}, {'diff': 0.0004269860000000007}, {'diff': 0.00042693099999999845}, {'diff': 0.0004269719999999977}, {'diff': 0.0004270000000000003}, {'diff': 0.000426944999999998}, {...</msg>
<status status="PASS" starttime="20201030 15:54:22.827" endtime="20201030 15:54:22.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:22.834" level="INFO">${RESULT} = {'diff': [0.0004284449999999995, 0.0004269860000000007, 0.00042693099999999845, 0.0004269719999999977, 0.0004270000000000003, 0.000426944999999998, 0.00042702699999999996, 0.0004270000000000003, 0.000...</msg>
<status status="PASS" starttime="20201030 15:54:22.831" endtime="20201030 15:54:22.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.839" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:22.838" endtime="20201030 15:54:22.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.841" level="INFO">VALUE: [0.0004284449999999995, 0.0004269860000000007, 0.00042693099999999845, 0.0004269719999999977, 0.0004270000000000003, 0.000426944999999998, 0.00042702699999999996, 0.0004270000000000003, 0.000427041999999999, 0.00042697299999999716, 0.00042697200000000116, 0.00042688899999999974, 0.0004269580000000016, 0.0004269720000000046, 0.00042698599999999726, 0.00042702700000000343, 0.0004269579999999981, 0.0004269159999999994, 0.000426944999999998, 0.0004269310000000054, 0.00042695800000000506, 0.000426944999999998, 0.0004269720000000046, 0.00042688899999999974, 0.0004269310000000054, 0.0004269999999999968, 0.00042695900000000453, 0.0004269169999999989, 0.000426929999999999, 0.00042694399999999855, 0.0004269719999999977, 0.0004269579999999981, 0.0004270139999999964, 0.0004269730000000041, 0.0004269719999999977, 0.0004269999999999968, 0.00042693099999999845, 0.0004269579999999981, 0.00042695900000000453, 0.0004269029999999993, 0.0004269300000000059, 0.0004269579999999981, 0.0004269999999999968, 0.0004269579999999981, 0.0004269719999999977, 0.00042694399999999855, 0.0004269159999999994, 0.0004269300000000059, 0.0004269869999999898, 0.00042702800000000984]</msg>
<status status="PASS" starttime="20201030 15:54:22.840" endtime="20201030 15:54:22.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.835" endtime="20201030 15:54:22.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:22.846" endtime="20201030 15:54:22.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.844" endtime="20201030 15:54:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.843" endtime="20201030 15:54:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.450" endtime="20201030 15:54:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.450" endtime="20201030 15:54:22.867"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.875" endtime="20201030 15:54:22.933"></status>
</kw>
<msg timestamp="20201030 15:54:22.933" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.873" endtime="20201030 15:54:22.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.936" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.934" endtime="20201030 15:54:22.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.937" endtime="20201030 15:54:22.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.871" endtime="20201030 15:54:22.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.869" endtime="20201030 15:54:22.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.946" endtime="20201030 15:54:23.251"></status>
</kw>
<msg timestamp="20201030 15:54:23.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018496361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018954583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.944" endtime="20201030 15:54:23.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018496361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018954583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.255" endtime="20201030 15:54:23.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.263" endtime="20201030 15:54:23.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.942" endtime="20201030 15:54:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.940" endtime="20201030 15:54:23.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:23.270" level="INFO">${PHILIP_RES} = [{'diff': 0.0004582220000000012}, {'diff': 0.00045672299999999916}, {'diff': 0.00045668100000000045}, {'diff': 0.0004567639999999984}, {'diff': 0.00045673599999999925}, {'diff': 0.0004567500000000023}...</msg>
<status status="PASS" starttime="20201030 15:54:23.267" endtime="20201030 15:54:23.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:23.274" level="INFO">${RESULT} = {'diff': [0.0004582220000000012, 0.00045672299999999916, 0.00045668100000000045, 0.0004567639999999984, 0.00045673599999999925, 0.0004567500000000023, 0.0004567500000000023, 0.00045668100000000045, 0....</msg>
<status status="PASS" starttime="20201030 15:54:23.271" endtime="20201030 15:54:23.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.278" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:23.277" endtime="20201030 15:54:23.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.281" level="INFO">VALUE: [0.0004582220000000012, 0.00045672299999999916, 0.00045668100000000045, 0.0004567639999999984, 0.00045673599999999925, 0.0004567500000000023, 0.0004567500000000023, 0.00045668100000000045, 0.0004567219999999997, 0.000456695, 0.0004567639999999984, 0.00045673599999999925, 0.0004567639999999984, 0.0004567499999999988, 0.0004567639999999984, 0.0004567219999999997, 0.0004567769999999985, 0.00045679199999999753, 0.0004567639999999984, 0.0004567499999999988, 0.00045673599999999925, 0.0004567499999999988, 0.00045673599999999925, 0.0004567219999999997, 0.00045675000000000576, 0.00045677799999999796, 0.0004567639999999984, 0.00045679099999999806, 0.0004566660000000014, 0.00045668100000000045, 0.0004566670000000009, 0.0004567360000000062, 0.0004567219999999997, 0.0004567639999999984, 0.0004567499999999988, 0.0004567499999999988, 0.0004567499999999988, 0.00045669400000000054, 0.0004567499999999988, 0.0004567499999999988, 0.0004567639999999984, 0.00045669400000000054, 0.00045680500000000457, 0.00045679099999999806, 0.0004567499999999919, 0.00045673599999999925, 0.0004567089999999996, 0.0004567089999999996, 0.0004566939999999936, 0.00045662500000000217]</msg>
<status status="PASS" starttime="20201030 15:54:23.279" endtime="20201030 15:54:23.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.275" endtime="20201030 15:54:23.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.285" endtime="20201030 15:54:23.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.284" endtime="20201030 15:54:23.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.283" endtime="20201030 15:54:23.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.867" endtime="20201030 15:54:23.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.867" endtime="20201030 15:54:23.307"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.320" endtime="20201030 15:54:23.383"></status>
</kw>
<msg timestamp="20201030 15:54:23.384" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.318" endtime="20201030 15:54:23.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.386" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.385" endtime="20201030 15:54:23.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.387" endtime="20201030 15:54:23.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.314" endtime="20201030 15:54:23.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.311" endtime="20201030 15:54:23.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.396" endtime="20201030 15:54:23.681"></status>
</kw>
<msg timestamp="20201030 15:54:23.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026264389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026753181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.395" endtime="20201030 15:54:23.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026264389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026753181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.685" endtime="20201030 15:54:23.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.693" endtime="20201030 15:54:23.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.392" endtime="20201030 15:54:23.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.390" endtime="20201030 15:54:23.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:23.699" level="INFO">${PHILIP_RES} = [{'diff': 0.0004887920000000018}, {'diff': 0.0004872910000000008}, {'diff': 0.0004872910000000008}, {'diff': 0.0004872919999999968}, {'diff': 0.0004873329999999995}, {'diff': 0.0004872780000000007}, {...</msg>
<status status="PASS" starttime="20201030 15:54:23.696" endtime="20201030 15:54:23.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:23.703" level="INFO">${RESULT} = {'diff': [0.0004887920000000018, 0.0004872910000000008, 0.0004872910000000008, 0.0004872919999999968, 0.0004873329999999995, 0.0004872780000000007, 0.0004873050000000004, 0.00048736099999999866, 0.000...</msg>
<status status="PASS" starttime="20201030 15:54:23.700" endtime="20201030 15:54:23.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.708" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:23.707" endtime="20201030 15:54:23.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.710" level="INFO">VALUE: [0.0004887920000000018, 0.0004872910000000008, 0.0004872910000000008, 0.0004872919999999968, 0.0004873329999999995, 0.0004872780000000007, 0.0004873050000000004, 0.00048736099999999866, 0.0004872920000000003, 0.00048731899999999995, 0.00048733400000000593, 0.0004872920000000003, 0.0004873050000000004, 0.0004873199999999994, 0.0004872920000000003, 0.0004873329999999995, 0.0004874160000000044, 0.00048736099999999866, 0.0004873749999999982, 0.00048731899999999995, 0.000487333999999999, 0.0004872920000000003, 0.00048731899999999995, 0.00048727799999999377, 0.0004873469999999991, 0.0004872910000000008, 0.00048736099999999866, 0.00048731899999999995, 0.00048736099999999866, 0.0004873199999999994, 0.00048730599999999985, 0.00048730499999999344, 0.00048730599999999985, 0.0004873610000000056, 0.0004873469999999991, 0.00048736200000000507, 0.00048731899999999995, 0.0004873469999999991, 0.00048726400000000114, 0.0004873060000000068, 0.0004873060000000068, 0.00048731899999999995, 0.00048733300000000646, 0.0004872910000000008, 0.00048733300000000646, 0.00048733300000000646, 0.0004873469999999991, 0.00048740300000001124, 0.0004873610000000056, 0.00048738900000000474]</msg>
<status status="PASS" starttime="20201030 15:54:23.709" endtime="20201030 15:54:23.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.704" endtime="20201030 15:54:23.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.716" endtime="20201030 15:54:23.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.714" endtime="20201030 15:54:23.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.713" endtime="20201030 15:54:23.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.309" endtime="20201030 15:54:23.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.308" endtime="20201030 15:54:23.736"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.745" endtime="20201030 15:54:23.810"></status>
</kw>
<msg timestamp="20201030 15:54:23.811" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.743" endtime="20201030 15:54:23.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.816" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.813" endtime="20201030 15:54:23.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.818" endtime="20201030 15:54:23.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.741" endtime="20201030 15:54:23.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.739" endtime="20201030 15:54:23.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.837" endtime="20201030 15:54:24.130"></status>
</kw>
<msg timestamp="20201030 15:54:24.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019123569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.833" endtime="20201030 15:54:24.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019123569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.134" endtime="20201030 15:54:24.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.141" endtime="20201030 15:54:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.828" endtime="20201030 15:54:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.825" endtime="20201030 15:54:24.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:24.147" level="INFO">${PHILIP_RES} = [{'diff': 0.0005202080000000012}, {'diff': 0.0005187219999999992}, {'diff': 0.0005186949999999996}, {'diff': 0.0005187079999999997}, {'diff': 0.0005187369999999983}, {'diff': 0.0005186249999999983}, {...</msg>
<status status="PASS" starttime="20201030 15:54:24.144" endtime="20201030 15:54:24.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.152" level="INFO">${RESULT} = {'diff': [0.0005202080000000012, 0.0005187219999999992, 0.0005186949999999996, 0.0005187079999999997, 0.0005187369999999983, 0.0005186249999999983, 0.000518681, 0.0005186949999999996, 0.00051869400000...</msg>
<status status="PASS" starttime="20201030 15:54:24.148" endtime="20201030 15:54:24.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.157" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:24.156" endtime="20201030 15:54:24.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.159" level="INFO">VALUE: [0.0005202080000000012, 0.0005187219999999992, 0.0005186949999999996, 0.0005187079999999997, 0.0005187369999999983, 0.0005186249999999983, 0.000518681, 0.0005186949999999996, 0.0005186940000000001, 0.000518681, 0.0005186800000000005, 0.0005187499999999984, 0.000518681, 0.0005186530000000009, 0.000518666000000001, 0.0005187219999999992, 0.000518681, 0.0005186249999999948, 0.0005186670000000004, 0.0005186949999999996, 0.000518681, 0.0005186530000000009, 0.0005186800000000005, 0.000518666000000001, 0.0005186800000000005, 0.0005186520000000014, 0.0005186390000000013, 0.000518666000000001, 0.0005187499999999984, 0.0005187089999999991, 0.0005187219999999992, 0.0005187219999999992, 0.000518681, 0.000518681, 0.0005187079999999997, 0.0005186949999999996, 0.0005186519999999945, 0.0005187079999999997, 0.0005187079999999927, 0.0005186949999999996, 0.0005187079999999927, 0.0005186809999999931, 0.0005186949999999996, 0.0005187360000000057, 0.0005187359999999919, 0.0005187360000000057, 0.0005187770000000119, 0.000518666000000001, 0.000518763999999991, 0.0005187640000000049]</msg>
<status status="PASS" starttime="20201030 15:54:24.158" endtime="20201030 15:54:24.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.153" endtime="20201030 15:54:24.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.164" endtime="20201030 15:54:24.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.162" endtime="20201030 15:54:24.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.161" endtime="20201030 15:54:24.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.737" endtime="20201030 15:54:24.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.737" endtime="20201030 15:54:24.184"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.193" endtime="20201030 15:54:24.260"></status>
</kw>
<msg timestamp="20201030 15:54:24.261" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.191" endtime="20201030 15:54:24.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.263" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.262" endtime="20201030 15:54:24.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.264" endtime="20201030 15:54:24.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.189" endtime="20201030 15:54:24.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.187" endtime="20201030 15:54:24.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.273" endtime="20201030 15:54:24.559"></status>
</kw>
<msg timestamp="20201030 15:54:24.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018527361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019079681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.272" endtime="20201030 15:54:24.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018527361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019079681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.563" endtime="20201030 15:54:24.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.571" endtime="20201030 15:54:24.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.269" endtime="20201030 15:54:24.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.267" endtime="20201030 15:54:24.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:24.577" level="INFO">${PHILIP_RES} = [{'diff': 0.000552320000000002}, {'diff': 0.000550834}, {'diff': 0.0005508060000000009}, {'diff': 0.0005507769999999988}, {'diff': 0.0005508200000000005}, {'diff': 0.0005507779999999983}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:24.574" endtime="20201030 15:54:24.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.581" level="INFO">${RESULT} = {'diff': [0.000552320000000002, 0.000550834, 0.0005508060000000009, 0.0005507769999999988, 0.0005508200000000005, 0.0005507779999999983, 0.0005508060000000009, 0.0005508200000000005, 0.000550792000000...</msg>
<status status="PASS" starttime="20201030 15:54:24.578" endtime="20201030 15:54:24.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.586" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:24.585" endtime="20201030 15:54:24.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.588" level="INFO">VALUE: [0.000552320000000002, 0.000550834, 0.0005508060000000009, 0.0005507769999999988, 0.0005508200000000005, 0.0005507779999999983, 0.0005508060000000009, 0.0005508200000000005, 0.0005507920000000013, 0.0005507920000000013, 0.0005508330000000006, 0.0005508060000000009, 0.0005507499999999957, 0.000550723000000003, 0.0005507500000000026, 0.0005508050000000014, 0.0005507909999999949, 0.0005507780000000018, 0.0005507770000000023, 0.0005507499999999957, 0.0005507640000000022, 0.0005507500000000026, 0.0005507780000000018, 0.0005508050000000014, 0.0005507920000000013, 0.0005507640000000022, 0.0005507640000000022, 0.0005507640000000022, 0.0005507920000000013, 0.0005508470000000001, 0.0005508049999999945, 0.0005507640000000022, 0.0005507220000000035, 0.0005508330000000006, 0.0005508060000000009, 0.0005508200000000005, 0.0005508199999999935, 0.0005507359999999961, 0.0005507090000000103, 0.0005508050000000014, 0.0005508189999999941, 0.0005507640000000091, 0.0005507780000000018, 0.0005507359999999961, 0.0005507229999999891, 0.0005507770000000023, 0.0005507779999999879, 0.0005507770000000023, 0.0005507639999999953, 0.0005507780000000018]</msg>
<status status="PASS" starttime="20201030 15:54:24.587" endtime="20201030 15:54:24.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.582" endtime="20201030 15:54:24.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.593" endtime="20201030 15:54:24.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.591" endtime="20201030 15:54:24.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.590" endtime="20201030 15:54:24.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.185" endtime="20201030 15:54:24.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.185" endtime="20201030 15:54:24.617"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.634" endtime="20201030 15:54:24.709"></status>
</kw>
<msg timestamp="20201030 15:54:24.710" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.631" endtime="20201030 15:54:24.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.715" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.712" endtime="20201030 15:54:24.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.717" endtime="20201030 15:54:24.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.626" endtime="20201030 15:54:24.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.622" endtime="20201030 15:54:24.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.736" endtime="20201030 15:54:25.030"></status>
</kw>
<msg timestamp="20201030 15:54:25.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033719861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034304986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.733" endtime="20201030 15:54:25.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033719861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034304986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.034" endtime="20201030 15:54:25.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.041" endtime="20201030 15:54:25.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.727" endtime="20201030 15:54:25.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.724" endtime="20201030 15:54:25.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:25.048" level="INFO">${PHILIP_RES} = [{'diff': 0.0005851250000000058}, {'diff': 0.0005835549999999995}, {'diff': 0.0005836109999999978}, {'diff': 0.0005835969999999982}, {'diff': 0.0005836390000000038}, {'diff': 0.0005835419999999994}, {...</msg>
<status status="PASS" starttime="20201030 15:54:25.045" endtime="20201030 15:54:25.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.052" level="INFO">${RESULT} = {'diff': [0.0005851250000000058, 0.0005835549999999995, 0.0005836109999999978, 0.0005835969999999982, 0.0005836390000000038, 0.0005835419999999994, 0.0005836390000000038, 0.0005835829999999986, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:54:25.049" endtime="20201030 15:54:25.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.056" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:25.055" endtime="20201030 15:54:25.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.058" level="INFO">VALUE: [0.0005851250000000058, 0.0005835549999999995, 0.0005836109999999978, 0.0005835969999999982, 0.0005836390000000038, 0.0005835419999999994, 0.0005836390000000038, 0.0005835829999999986, 0.0005836109999999978, 0.0005836250000000043, 0.0005836109999999978, 0.0005835699999999985, 0.0005836109999999978, 0.0005835689999999991, 0.0005835829999999986, 0.0005835689999999991, 0.0005835419999999994, 0.0005836249999999973, 0.0005835970000000051, 0.0005835829999999986, 0.0005836109999999978, 0.0005835409999999999, 0.0005835140000000003, 0.0005836119999999972, 0.0005836530000000034, 0.0005836250000000043, 0.0005836250000000043, 0.0005836250000000043, 0.0005836389999999969, 0.0005836109999999978, 0.0005836249999999904, 0.0005836250000000043, 0.0005837080000000022, 0.0005836389999999969, 0.0005835700000000055, 0.0005835410000000069, 0.0005835829999999986, 0.0005835969999999913, 0.0005835700000000055, 0.0005835420000000063, 0.000583569000000006, 0.0005835549999999995, 0.000583540999999993, 0.000583555999999999, 0.0005835689999999921, 0.0005836389999999969, 0.0005836390000000108, 0.0005836249999999904, 0.0005836389999999969, 0.0005835689999999921]</msg>
<status status="PASS" starttime="20201030 15:54:25.057" endtime="20201030 15:54:25.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.053" endtime="20201030 15:54:25.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.064" endtime="20201030 15:54:25.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.063" endtime="20201030 15:54:25.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.061" endtime="20201030 15:54:25.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.619" endtime="20201030 15:54:25.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.618" endtime="20201030 15:54:25.085"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.093" endtime="20201030 15:54:25.167"></status>
</kw>
<msg timestamp="20201030 15:54:25.167" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.091" endtime="20201030 15:54:25.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.170" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.168" endtime="20201030 15:54:25.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.171" endtime="20201030 15:54:25.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.089" endtime="20201030 15:54:25.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.087" endtime="20201030 15:54:25.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.180" endtime="20201030 15:54:25.466"></status>
</kw>
<msg timestamp="20201030 15:54:25.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018556278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019175, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:25.178" endtime="20201030 15:54:25.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018556278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019175, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:25.470" endtime="20201030 15:54:25.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.478" endtime="20201030 15:54:25.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.176" endtime="20201030 15:54:25.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.174" endtime="20201030 15:54:25.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:25.484" level="INFO">${PHILIP_RES} = [{'diff': 0.0006187220000000021}, {'diff': 0.0006172639999999993}, {'diff': 0.0006172360000000002}, {'diff': 0.0006172220000000006}, {'diff': 0.0006172499999999997}, {'diff': 0.0006172639999999993}, {...</msg>
<status status="PASS" starttime="20201030 15:54:25.481" endtime="20201030 15:54:25.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.489" level="INFO">${RESULT} = {'diff': [0.0006187220000000021, 0.0006172639999999993, 0.0006172360000000002, 0.0006172220000000006, 0.0006172499999999997, 0.0006172639999999993, 0.0006172780000000024, 0.0006172360000000002, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:54:25.485" endtime="20201030 15:54:25.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.494" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:25.493" endtime="20201030 15:54:25.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.496" level="INFO">VALUE: [0.0006187220000000021, 0.0006172639999999993, 0.0006172360000000002, 0.0006172220000000006, 0.0006172499999999997, 0.0006172639999999993, 0.0006172780000000024, 0.0006172360000000002, 0.0006172230000000001, 0.0006172919999999985, 0.000617208000000001, 0.000617208000000001, 0.0006172220000000006, 0.000617208000000001, 0.000617194999999994, 0.0006172639999999993, 0.0006172360000000002, 0.0006171939999999945, 0.0006172639999999993, 0.0006172230000000001, 0.0006173329999999977, 0.0006172090000000005, 0.0006171950000000009, 0.0006172090000000005, 0.0006171529999999953, 0.0006171389999999957, 0.0006171249999999961, 0.000617208000000001, 0.000617194999999994, 0.0006172499999999997, 0.0006172779999999989, 0.000617208000000001, 0.0006171660000000023, 0.0006172090000000074, 0.0006171249999999961, 0.0006171940000000015, 0.0006172220000000006, 0.000617179999999995, 0.0006172230000000001, 0.000617112000000003, 0.0006171670000000018, 0.0006171670000000018, 0.0006172779999999989, 0.0006171809999999944, 0.0006171950000000009, 0.0006171939999999876, 0.0006171809999999944, 0.0006172499999999997, 0.0006171940000000015, 0.0006172089999999936]</msg>
<status status="PASS" starttime="20201030 15:54:25.495" endtime="20201030 15:54:25.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.490" endtime="20201030 15:54:25.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.501" endtime="20201030 15:54:25.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.499" endtime="20201030 15:54:25.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.498" endtime="20201030 15:54:25.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.086" endtime="20201030 15:54:25.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.085" endtime="20201030 15:54:25.524"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.541" endtime="20201030 15:54:25.622"></status>
</kw>
<msg timestamp="20201030 15:54:25.623" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.538" endtime="20201030 15:54:25.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.628" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.625" endtime="20201030 15:54:25.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.630" endtime="20201030 15:54:25.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.533" endtime="20201030 15:54:25.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.529" endtime="20201030 15:54:25.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.648" endtime="20201030 15:54:25.944"></status>
</kw>
<msg timestamp="20201030 15:54:25.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031474278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032127347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.645" endtime="20201030 15:54:25.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031474278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032127347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.948" endtime="20201030 15:54:25.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.956" endtime="20201030 15:54:25.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.640" endtime="20201030 15:54:25.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.636" endtime="20201030 15:54:25.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:25.962" level="INFO">${PHILIP_RES} = [{'diff': 0.0006530689999999992}, {'diff': 0.0006516109999999964}, {'diff': 0.0006515980000000032}, {'diff': 0.0006515139999999989}, {'diff': 0.0006515279999999984}, {'diff': 0.0006515559999999976}, {...</msg>
<status status="PASS" starttime="20201030 15:54:25.959" endtime="20201030 15:54:25.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.966" level="INFO">${RESULT} = {'diff': [0.0006530689999999992, 0.0006516109999999964, 0.0006515980000000032, 0.0006515139999999989, 0.0006515279999999984, 0.0006515559999999976, 0.0006515280000000054, 0.0006514999999999993, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:54:25.963" endtime="20201030 15:54:25.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.970" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:25.969" endtime="20201030 15:54:25.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.972" level="INFO">VALUE: [0.0006530689999999992, 0.0006516109999999964, 0.0006515980000000032, 0.0006515139999999989, 0.0006515279999999984, 0.0006515559999999976, 0.0006515280000000054, 0.0006514999999999993, 0.0006514859999999997, 0.0006515549999999981, 0.000651541999999998, 0.0006515559999999976, 0.0006514720000000002, 0.000651541999999998, 0.0006515139999999989, 0.0006514999999999993, 0.0006515549999999981, 0.0006514580000000006, 0.0006515279999999984, 0.000651444000000001, 0.0006515280000000054, 0.0006514859999999997, 0.0006514859999999928, 0.0006515139999999919, 0.0006515279999999984, 0.0006514999999999993, 0.0006514999999999993, 0.0006515969999999899, 0.0006515279999999984, 0.0006515559999999976, 0.0006515419999999911, 0.0006515279999999984, 0.0006514859999999928, 0.0006515280000000123, 0.0006515560000000115, 0.000651542000000005, 0.0006515699999999902, 0.000651542000000005, 0.0006515139999999919, 0.0006515279999999984, 0.0006515140000000058, 0.0006515139999999919, 0.0006514860000000067, 0.0006514999999999993, 0.0006515139999999919, 0.0006514720000000002, 0.0006514859999999928, 0.0006515139999999919, 0.0006515410000000055, 0.0006515140000000058]</msg>
<status status="PASS" starttime="20201030 15:54:25.971" endtime="20201030 15:54:25.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.967" endtime="20201030 15:54:25.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.977" endtime="20201030 15:54:25.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.976" endtime="20201030 15:54:25.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.975" endtime="20201030 15:54:25.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.526" endtime="20201030 15:54:25.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.525" endtime="20201030 15:54:25.998"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.007" endtime="20201030 15:54:26.088"></status>
</kw>
<msg timestamp="20201030 15:54:26.089" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.005" endtime="20201030 15:54:26.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.091" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.090" endtime="20201030 15:54:26.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.092" endtime="20201030 15:54:26.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.003" endtime="20201030 15:54:26.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.001" endtime="20201030 15:54:26.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.101" endtime="20201030 15:54:26.388"></status>
</kw>
<msg timestamp="20201030 15:54:26.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.099" endtime="20201030 15:54:26.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.392" endtime="20201030 15:54:26.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.400" endtime="20201030 15:54:26.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.097" endtime="20201030 15:54:26.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.095" endtime="20201030 15:54:26.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:26.406" level="INFO">${PHILIP_RES} = [{'diff': 0.0006880000000000011}, {'diff': 0.0006864999999999996}, {'diff': 0.0006864590000000004}, {'diff': 0.0006865420000000018}, {'diff': 0.0006865559999999979}, {'diff': 0.000686486}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:54:26.403" endtime="20201030 15:54:26.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.410" level="INFO">${RESULT} = {'diff': [0.0006880000000000011, 0.0006864999999999996, 0.0006864590000000004, 0.0006865420000000018, 0.0006865559999999979, 0.000686486, 0.0006865139999999992, 0.0006865410000000023, 0.00068649999999...</msg>
<status status="PASS" starttime="20201030 15:54:26.407" endtime="20201030 15:54:26.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.414" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:26.413" endtime="20201030 15:54:26.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.417" level="INFO">VALUE: [0.0006880000000000011, 0.0006864999999999996, 0.0006864590000000004, 0.0006865420000000018, 0.0006865559999999979, 0.000686486, 0.0006865139999999992, 0.0006865410000000023, 0.0006864999999999996, 0.0006865139999999992, 0.0006865559999999979, 0.0006865139999999992, 0.0006865279999999988, 0.0006866109999999967, 0.0006865279999999988, 0.0006865419999999983, 0.0006865559999999979, 0.0006865279999999988, 0.0006865139999999992, 0.0006865549999999984, 0.0006865139999999992, 0.0006865419999999983, 0.000686568999999998, 0.0006865419999999983, 0.000686486, 0.0006865829999999976, 0.0006865549999999984, 0.0006865699999999975, 0.0006865969999999971, 0.0006865550000000054, 0.000686555999999991, 0.0006865409999999988, 0.0006865830000000045, 0.0006865550000000054, 0.0006865549999999915, 0.0006866660000000024, 0.0006865409999999988, 0.000686568999999998, 0.0006865830000000045, 0.0006865420000000122, 0.0006865690000000119, 0.0006865560000000048, 0.0006865830000000045, 0.0006865000000000065, 0.0006865550000000054, 0.000686568999999998, 0.0006865419999999983, 0.0006865560000000048, 0.0006865279999999918, 0.0006865699999999975]</msg>
<status status="PASS" starttime="20201030 15:54:26.415" endtime="20201030 15:54:26.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.411" endtime="20201030 15:54:26.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.425" endtime="20201030 15:54:26.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.423" endtime="20201030 15:54:26.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.422" endtime="20201030 15:54:26.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.999" endtime="20201030 15:54:26.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.998" endtime="20201030 15:54:26.445"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.454" endtime="20201030 15:54:26.538"></status>
</kw>
<msg timestamp="20201030 15:54:26.538" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.452" endtime="20201030 15:54:26.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.541" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.539" endtime="20201030 15:54:26.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.542" endtime="20201030 15:54:26.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.450" endtime="20201030 15:54:26.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.448" endtime="20201030 15:54:26.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.550" endtime="20201030 15:54:26.836"></status>
</kw>
<msg timestamp="20201030 15:54:26.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019321833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.549" endtime="20201030 15:54:26.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019321833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.840" endtime="20201030 15:54:26.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.848" endtime="20201030 15:54:26.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.546" endtime="20201030 15:54:26.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.545" endtime="20201030 15:54:26.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:26.854" level="INFO">${PHILIP_RES} = [{'diff': 0.0007238749999999988}, {'diff': 0.0007223049999999995}, {'diff': 0.0007222919999999994}, {'diff': 0.0007223060000000024}, {'diff': 0.0007222500000000007}, {'diff': 0.000722305999999999}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:26.851" endtime="20201030 15:54:26.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.859" level="INFO">${RESULT} = {'diff': [0.0007238749999999988, 0.0007223049999999995, 0.0007222919999999994, 0.0007223060000000024, 0.0007222500000000007, 0.000722305999999999, 0.000722416, 0.0007223749999999973, 0.000722290999999...</msg>
<status status="PASS" starttime="20201030 15:54:26.855" endtime="20201030 15:54:26.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.863" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:26.862" endtime="20201030 15:54:26.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.866" level="INFO">VALUE: [0.0007238749999999988, 0.0007223049999999995, 0.0007222919999999994, 0.0007223060000000024, 0.0007222500000000007, 0.000722305999999999, 0.000722416, 0.0007223749999999973, 0.0007222909999999964, 0.0007223469999999982, 0.0007224310000000025, 0.0007223479999999977, 0.0007223330000000056, 0.0007223329999999986, 0.000722318999999999, 0.0007223750000000043, 0.0007223469999999982, 0.0007223330000000056, 0.0007223609999999978, 0.000722318999999999, 0.000722416999999996, 0.0007223060000000059, 0.0007223749999999973, 0.0007223750000000043, 0.0007223329999999986, 0.0007223609999999978, 0.0007223469999999982, 0.0007224029999999965, 0.000722445000000009, 0.0007223199999999985, 0.0007223469999999982, 0.0007223610000000047, 0.0007223610000000047, 0.0007223329999999917, 0.0007223329999999917, 0.0007222499999999937, 0.0007223470000000121, 0.0007222919999999994, 0.0007223469999999982, 0.0007223329999999917, 0.0007222919999999994, 0.0007222640000000002, 0.0007223199999999985, 0.0007223199999999985, 0.0007223049999999925, 0.0007222780000000067, 0.000722318999999999, 0.0007222500000000076, 0.0007222909999999999, 0.0007222630000000008]</msg>
<status status="PASS" starttime="20201030 15:54:26.864" endtime="20201030 15:54:26.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.860" endtime="20201030 15:54:26.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.870" endtime="20201030 15:54:26.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.869" endtime="20201030 15:54:26.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.868" endtime="20201030 15:54:26.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.446" endtime="20201030 15:54:26.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.446" endtime="20201030 15:54:26.891"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.899" endtime="20201030 15:54:26.987"></status>
</kw>
<msg timestamp="20201030 15:54:26.987" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.898" endtime="20201030 15:54:26.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.990" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.988" endtime="20201030 15:54:26.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.991" endtime="20201030 15:54:26.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.895" endtime="20201030 15:54:26.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.894" endtime="20201030 15:54:26.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.999" endtime="20201030 15:54:27.306"></status>
</kw>
<msg timestamp="20201030 15:54:27.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018573333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019333792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.998" endtime="20201030 15:54:27.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018573333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019333792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.310" endtime="20201030 15:54:27.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.318" endtime="20201030 15:54:27.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.995" endtime="20201030 15:54:27.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.994" endtime="20201030 15:54:27.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:27.324" level="INFO">${PHILIP_RES} = [{'diff': 0.000760458999999998}, {'diff': 0.0007589310000000009}, {'diff': 0.0007590000000000027}, {'diff': 0.0007589310000000009}, {'diff': 0.0007589439999999975}, {'diff': 0.0007589999999999993}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:27.321" endtime="20201030 15:54:27.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.328" level="INFO">${RESULT} = {'diff': [0.000760458999999998, 0.0007589310000000009, 0.0007590000000000027, 0.0007589310000000009, 0.0007589439999999975, 0.0007589999999999993, 0.000758944000000001, 0.0007589030000000017, 0.000758...</msg>
<status status="PASS" starttime="20201030 15:54:27.325" endtime="20201030 15:54:27.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.332" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:27.331" endtime="20201030 15:54:27.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.334" level="INFO">VALUE: [0.000760458999999998, 0.0007589310000000009, 0.0007590000000000027, 0.0007589310000000009, 0.0007589439999999975, 0.0007589999999999993, 0.000758944000000001, 0.0007589030000000017, 0.0007589170000000048, 0.0007589859999999962, 0.0007589019999999988, 0.0007589169999999978, 0.0007589860000000032, 0.0007589169999999978, 0.0007589860000000032, 0.0007589169999999978, 0.0007589159999999984, 0.0007590000000000027, 0.0007589299999999979, 0.0007589579999999971, 0.0007589590000000035, 0.0007589029999999983, 0.0007588880000000062, 0.0007589719999999966, 0.0007588749999999991, 0.0007588889999999987, 0.0007587780000000016, 0.0007587780000000016, 0.0007589169999999978, 0.000758861999999999, 0.0007588750000000061, 0.0007589590000000035, 0.0007589720000000105, 0.0007589439999999975, 0.0007589719999999966, 0.0007589859999999893, 0.0007589169999999978, 0.0007589169999999978, 0.000758958000000004, 0.0007588889999999987, 0.0007589169999999978, 0.0007589020000000057, 0.0007589309999999905, 0.0007589300000000049, 0.0007589169999999978, 0.0007589169999999978, 0.0007588889999999987, 0.0007589300000000049, 0.0007589030000000052, 0.0007589029999999913]</msg>
<status status="PASS" starttime="20201030 15:54:27.333" endtime="20201030 15:54:27.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.329" endtime="20201030 15:54:27.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.339" endtime="20201030 15:54:27.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.338" endtime="20201030 15:54:27.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.337" endtime="20201030 15:54:27.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.892" endtime="20201030 15:54:27.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.892" endtime="20201030 15:54:27.360"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.368" endtime="20201030 15:54:27.460"></status>
</kw>
<msg timestamp="20201030 15:54:27.460" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.367" endtime="20201030 15:54:27.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.463" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.461" endtime="20201030 15:54:27.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.464" endtime="20201030 15:54:27.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.364" endtime="20201030 15:54:27.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.362" endtime="20201030 15:54:27.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.472" endtime="20201030 15:54:27.759"></status>
</kw>
<msg timestamp="20201030 15:54:27.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019338569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020136347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.471" endtime="20201030 15:54:27.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019338569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020136347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.763" endtime="20201030 15:54:27.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.771" endtime="20201030 15:54:27.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.468" endtime="20201030 15:54:27.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.467" endtime="20201030 15:54:27.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:27.777" level="INFO">${PHILIP_RES} = [{'diff': 0.000797777999999999}, {'diff': 0.0007962919999999971}, {'diff': 0.0007962499999999983}, {'diff': 0.0007962920000000005}, {'diff': 0.0007963050000000006}, {'diff': 0.000796291000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:27.774" endtime="20201030 15:54:27.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.781" level="INFO">${RESULT} = {'diff': [0.000797777999999999, 0.0007962919999999971, 0.0007962499999999983, 0.0007962920000000005, 0.0007963050000000006, 0.000796291000000001, 0.0007963609999999989, 0.0007962919999999971, 0.000796...</msg>
<status status="PASS" starttime="20201030 15:54:27.778" endtime="20201030 15:54:27.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.785" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:27.784" endtime="20201030 15:54:27.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.787" level="INFO">VALUE: [0.000797777999999999, 0.0007962919999999971, 0.0007962499999999983, 0.0007962920000000005, 0.0007963050000000006, 0.000796291000000001, 0.0007963609999999989, 0.0007962919999999971, 0.000796292000000004, 0.0007962639999999979, 0.0007962359999999988, 0.0007962359999999988, 0.0007963050000000041, 0.0007963610000000024, 0.0007962639999999979, 0.0007962359999999988, 0.0007962499999999983, 0.0007963329999999963, 0.0007962629999999984, 0.0007962640000000049, 0.0007962779999999975, 0.000796276999999998, 0.0007962360000000057, 0.0007962079999999996, 0.0007961670000000004, 0.0007962779999999975, 0.0007962219999999992, 0.0007962079999999927, 0.000796276999999998, 0.0007962640000000049, 0.0007963339999999958, 0.0007962499999999983, 0.0007961249999999948, 0.0007961949999999995, 0.0007962780000000114, 0.0007962360000000057, 0.0007962499999999983, 0.0007962919999999901, 0.0007962080000000066, 0.0007962219999999992, 0.0007961940000000001, 0.0007962229999999987, 0.0007962360000000057, 0.0007962080000000066, 0.0007963339999999958, 0.0007963189999999898, 0.0007962779999999975, 0.000796292000000004, 0.0007962360000000057, 0.0007962230000000126]</msg>
<status status="PASS" starttime="20201030 15:54:27.786" endtime="20201030 15:54:27.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.782" endtime="20201030 15:54:27.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.797" endtime="20201030 15:54:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.796" endtime="20201030 15:54:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.795" endtime="20201030 15:54:27.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.361" endtime="20201030 15:54:27.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.360" endtime="20201030 15:54:27.818"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.826" endtime="20201030 15:54:27.920"></status>
</kw>
<msg timestamp="20201030 15:54:27.921" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.825" endtime="20201030 15:54:27.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.923" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.922" endtime="20201030 15:54:27.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.924" endtime="20201030 15:54:27.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.822" endtime="20201030 15:54:27.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.820" endtime="20201030 15:54:27.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.933" endtime="20201030 15:54:28.232"></status>
</kw>
<msg timestamp="20201030 15:54:28.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018516167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019352, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:27.932" endtime="20201030 15:54:28.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018516167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019352, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:28.236" endtime="20201030 15:54:28.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.244" endtime="20201030 15:54:28.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.929" endtime="20201030 15:54:28.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.927" endtime="20201030 15:54:28.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:28.250" level="INFO">${PHILIP_RES} = [{'diff': 0.0008358330000000011}, {'diff': 0.0008343059999999999}, {'diff': 0.0008343609999999987}, {'diff': 0.0008344579999999997}, {'diff': 0.0008343889999999979}, {'diff': 0.0008343889999999979}, {...</msg>
<status status="PASS" starttime="20201030 15:54:28.247" endtime="20201030 15:54:28.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.255" level="INFO">${RESULT} = {'diff': [0.0008358330000000011, 0.0008343059999999999, 0.0008343609999999987, 0.0008344579999999997, 0.0008343889999999979, 0.0008343889999999979, 0.0008343469999999992, 0.0008342920000000004, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:54:28.251" endtime="20201030 15:54:28.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.259" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:28.258" endtime="20201030 15:54:28.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.262" level="INFO">VALUE: [0.0008358330000000011, 0.0008343059999999999, 0.0008343609999999987, 0.0008344579999999997, 0.0008343889999999979, 0.0008343889999999979, 0.0008343469999999992, 0.0008342920000000004, 0.0008343889999999979, 0.0008342920000000004, 0.0008343749999999983, 0.0008343469999999992, 0.0008343749999999983, 0.0008343889999999979, 0.0008343610000000057, 0.0008343749999999983, 0.0008343059999999999, 0.0008342640000000012, 0.0008343749999999983, 0.0008343199999999995, 0.0008342920000000004, 0.0008343330000000065, 0.0008343059999999999, 0.0008343609999999987, 0.0008343479999999986, 0.0008343890000000048, 0.0008343890000000048, 0.0008343749999999983, 0.0008343479999999986, 0.0008344029999999975, 0.0008343609999999918, 0.0008344589999999957, 0.0008343199999999995, 0.0008343609999999918, 0.0008343610000000057, 0.000834319, 0.0008343610000000057, 0.0008343890000000048, 0.0008343749999999983, 0.0008344589999999957, 0.0008343889999999909, 0.0008343060000000069, 0.0008343749999999983, 0.0008343339999999921, 0.0008343890000000048, 0.0008343469999999992, 0.000834347000000013, 0.000834319, 0.0008343330000000065, 0.0008343060000000069]</msg>
<status status="PASS" starttime="20201030 15:54:28.260" endtime="20201030 15:54:28.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.256" endtime="20201030 15:54:28.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.267" endtime="20201030 15:54:28.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.265" endtime="20201030 15:54:28.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.264" endtime="20201030 15:54:28.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.819" endtime="20201030 15:54:28.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.818" endtime="20201030 15:54:28.287"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.296" endtime="20201030 15:54:28.393"></status>
</kw>
<msg timestamp="20201030 15:54:28.394" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.294" endtime="20201030 15:54:28.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.396" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.395" endtime="20201030 15:54:28.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.397" endtime="20201030 15:54:28.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.292" endtime="20201030 15:54:28.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.290" endtime="20201030 15:54:28.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.406" endtime="20201030 15:54:28.695"></status>
</kw>
<msg timestamp="20201030 15:54:28.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018538889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019413403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.404" endtime="20201030 15:54:28.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018538889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019413403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.699" endtime="20201030 15:54:28.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.706" endtime="20201030 15:54:28.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.402" endtime="20201030 15:54:28.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.400" endtime="20201030 15:54:28.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:28.713" level="INFO">${PHILIP_RES} = [{'diff': 0.0008745139999999998}, {'diff': 0.0008730690000000006}, {'diff': 0.0008730690000000006}, {'diff': 0.0008731249999999989}, {'diff': 0.0008730140000000018}, {'diff': 0.0008730839999999997}, {...</msg>
<status status="PASS" starttime="20201030 15:54:28.709" endtime="20201030 15:54:28.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.717" level="INFO">${RESULT} = {'diff': [0.0008745139999999998, 0.0008730690000000006, 0.0008730690000000006, 0.0008731249999999989, 0.0008730140000000018, 0.0008730839999999997, 0.0008730690000000006, 0.0008730689999999972, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:54:28.714" endtime="20201030 15:54:28.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.721" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:28.720" endtime="20201030 15:54:28.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.723" level="INFO">VALUE: [0.0008745139999999998, 0.0008730690000000006, 0.0008730690000000006, 0.0008731249999999989, 0.0008730140000000018, 0.0008730839999999997, 0.0008730690000000006, 0.0008730689999999972, 0.0008731390000000019, 0.0008731800000000012, 0.0008730969999999963, 0.0008730559999999971, 0.0008729999999999988, 0.0008730840000000031, 0.0008730700000000036, 0.0008730980000000027, 0.0008730700000000036, 0.0008731390000000019, 0.0008730829999999967, 0.0008730970000000032, 0.0008730700000000036, 0.000873040999999998, 0.0008730700000000036, 0.0008730970000000032, 0.0008730830000000106, 0.0008729999999999988, 0.000873041000000005, 0.0008730969999999894, 0.0008730419999999905, 0.0008729999999999988, 0.0008730699999999897, 0.0008730970000000032, 0.0008730550000000115, 0.0008730409999999911, 0.0008730829999999967, 0.0008730829999999967, 0.0008730829999999967, 0.0008730839999999962, 0.0008730409999999911, 0.0008730559999999971, 0.0008730829999999967, 0.0008730140000000053, 0.0008730559999999971, 0.0008730559999999971, 0.0008730279999999979, 0.0008730690000000041, 0.000872929999999994, 0.0008730279999999979, 0.0008730270000000123, 0.0008730139999999914]</msg>
<status status="PASS" starttime="20201030 15:54:28.722" endtime="20201030 15:54:28.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.717" endtime="20201030 15:54:28.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.728" endtime="20201030 15:54:28.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.727" endtime="20201030 15:54:28.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.725" endtime="20201030 15:54:28.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.288" endtime="20201030 15:54:28.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.288" endtime="20201030 15:54:28.749"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.764" endtime="20201030 15:54:28.869"></status>
</kw>
<msg timestamp="20201030 15:54:28.870" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.761" endtime="20201030 15:54:28.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.875" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.872" endtime="20201030 15:54:28.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.877" endtime="20201030 15:54:28.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.756" endtime="20201030 15:54:28.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.751" endtime="20201030 15:54:28.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.896" endtime="20201030 15:54:29.191"></status>
</kw>
<msg timestamp="20201030 15:54:29.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028851125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029765111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.893" endtime="20201030 15:54:29.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028851125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029765111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.195" endtime="20201030 15:54:29.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.203" endtime="20201030 15:54:29.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.887" endtime="20201030 15:54:29.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.884" endtime="20201030 15:54:29.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:29.209" level="INFO">${PHILIP_RES} = [{'diff': 0.000913986000000002}, {'diff': 0.0009124310000000017}, {'diff': 0.0009126110000000007}, {'diff': 0.0009124999999999966}, {'diff': 0.0009126110000000007}, {'diff': 0.0009125409999999959}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:29.206" endtime="20201030 15:54:29.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.213" level="INFO">${RESULT} = {'diff': [0.000913986000000002, 0.0009124310000000017, 0.0009126110000000007, 0.0009124999999999966, 0.0009126110000000007, 0.0009125409999999959, 0.0009124449999999978, 0.0009125280000000027, 0.00091...</msg>
<status status="PASS" starttime="20201030 15:54:29.210" endtime="20201030 15:54:29.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.217" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:29.216" endtime="20201030 15:54:29.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.219" level="INFO">VALUE: [0.000913986000000002, 0.0009124310000000017, 0.0009126110000000007, 0.0009124999999999966, 0.0009126110000000007, 0.0009125409999999959, 0.0009124449999999978, 0.0009125280000000027, 0.0009125000000000036, 0.0009124859999999971, 0.0009125550000000024, 0.000912472999999997, 0.0009125280000000027, 0.0009124159999999992, 0.0009125280000000027, 0.0009125409999999959, 0.0009125279999999958, 0.0009124299999999988, 0.0009124030000000061, 0.0009125140000000032, 0.000912486000000004, 0.0009125139999999893, 0.0009124719999999975, 0.0009125419999999884, 0.0009125550000000093, 0.0009124169999999987, 0.0009124719999999975, 0.000912457999999991, 0.000912472999999997, 0.000912486000000004, 0.000912486000000004, 0.0009125280000000097, 0.0009125140000000032, 0.0009125140000000032, 0.0009124169999999987, 0.0009126809999999985, 0.0009126660000000064, 0.0009126670000000059, 0.0009126810000000124, 0.0009126390000000068, 0.0009126389999999929, 0.0009126389999999929, 0.0009126809999999985, 0.0009126110000000076, 0.0009125830000000085, 0.0009127220000000047, 0.0009126390000000068, 0.000912695000000005, 0.000912679999999999, 0.0009125970000000011]</msg>
<status status="PASS" starttime="20201030 15:54:29.218" endtime="20201030 15:54:29.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.214" endtime="20201030 15:54:29.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.225" endtime="20201030 15:54:29.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.224" endtime="20201030 15:54:29.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.223" endtime="20201030 15:54:29.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.750" endtime="20201030 15:54:29.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.749" endtime="20201030 15:54:29.247"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.256" endtime="20201030 15:54:29.360"></status>
</kw>
<msg timestamp="20201030 15:54:29.361" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.254" endtime="20201030 15:54:29.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.363" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.362" endtime="20201030 15:54:29.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.364" endtime="20201030 15:54:29.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.252" endtime="20201030 15:54:29.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.250" endtime="20201030 15:54:29.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.373" endtime="20201030 15:54:29.661"></status>
</kw>
<msg timestamp="20201030 15:54:29.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.372" endtime="20201030 15:54:29.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.665" endtime="20201030 15:54:29.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.675" endtime="20201030 15:54:29.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.369" endtime="20201030 15:54:29.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.367" endtime="20201030 15:54:29.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:29.688" level="INFO">${PHILIP_RES} = [{'diff': 0.0009544580000000018}, {'diff': 0.0009530139999999986}, {'diff': 0.0009529859999999994}, {'diff': 0.0009530280000000016}, {'diff': 0.0009530690000000008}, {'diff': 0.0009529450000000002}, {...</msg>
<status status="PASS" starttime="20201030 15:54:29.682" endtime="20201030 15:54:29.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.698" level="INFO">${RESULT} = {'diff': [0.0009544580000000018, 0.0009530139999999986, 0.0009529859999999994, 0.0009530280000000016, 0.0009530690000000008, 0.0009529450000000002, 0.0009530560000000007, 0.0009529159999999981, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:54:29.690" endtime="20201030 15:54:29.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.707" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:29.705" endtime="20201030 15:54:29.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.712" level="INFO">VALUE: [0.0009544580000000018, 0.0009530139999999986, 0.0009529859999999994, 0.0009530280000000016, 0.0009530690000000008, 0.0009529450000000002, 0.0009530560000000007, 0.0009529159999999981, 0.0009529860000000029, 0.000952985999999996, 0.000952902999999998, 0.0009529579999999968, 0.0009529720000000033, 0.0009529309999999971, 0.0009530410000000017, 0.0009529719999999964, 0.000952985999999996, 0.0009530280000000016, 0.0009530280000000016, 0.0009530280000000016, 0.0009529719999999964, 0.0009530420000000012, 0.000953014000000002, 0.0009529860000000029, 0.0009529169999999976, 0.0009529860000000029, 0.0009529860000000029, 0.000953014000000002, 0.0009529579999999899, 0.000953014000000002, 0.0009529580000000037, 0.0009529719999999964, 0.0009529729999999959, 0.0009529590000000032, 0.0009529449999999967, 0.0009529019999999916, 0.0009529159999999981, 0.0009530409999999878, 0.0009530280000000085, 0.0009529310000000041, 0.0009529580000000037, 0.0009529439999999972, 0.000953014000000002, 0.0009530700000000003, 0.0009529449999999967, 0.0009529720000000103, 0.0009528190000000075, 0.0009528470000000067, 0.0009529169999999976, 0.000952985999999989]</msg>
<status status="PASS" starttime="20201030 15:54:29.709" endtime="20201030 15:54:29.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.700" endtime="20201030 15:54:29.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.722" endtime="20201030 15:54:29.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.719" endtime="20201030 15:54:29.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.717" endtime="20201030 15:54:29.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.248" endtime="20201030 15:54:29.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.248" endtime="20201030 15:54:29.747"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.764" endtime="20201030 15:54:29.874"></status>
</kw>
<msg timestamp="20201030 15:54:29.874" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.761" endtime="20201030 15:54:29.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.876" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.875" endtime="20201030 15:54:29.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.877" endtime="20201030 15:54:29.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.755" endtime="20201030 15:54:29.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.751" endtime="20201030 15:54:29.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.886" endtime="20201030 15:54:30.175"></status>
</kw>
<msg timestamp="20201030 15:54:30.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031793778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032789236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.885" endtime="20201030 15:54:30.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031793778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032789236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.179" endtime="20201030 15:54:30.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.187" endtime="20201030 15:54:30.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.882" endtime="20201030 15:54:30.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.881" endtime="20201030 15:54:30.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:30.193" level="INFO">${PHILIP_RES} = [{'diff': 0.0009954579999999977}, {'diff': 0.000993929999999997}, {'diff': 0.0009939439999999966}, {'diff': 0.0009938880000000053}, {'diff': 0.000993945000000003}, {'diff': 0.0009939170000000039}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:30.190" endtime="20201030 15:54:30.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.197" level="INFO">${RESULT} = {'diff': [0.0009954579999999977, 0.000993929999999997, 0.0009939439999999966, 0.0009938880000000053, 0.000993945000000003, 0.0009939170000000039, 0.000993819, 0.0009938059999999999, 0.0009938479999999...</msg>
<status status="PASS" starttime="20201030 15:54:30.194" endtime="20201030 15:54:30.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.201" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:30.200" endtime="20201030 15:54:30.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.204" level="INFO">VALUE: [0.0009954579999999977, 0.000993929999999997, 0.0009939439999999966, 0.0009938880000000053, 0.000993945000000003, 0.0009939170000000039, 0.000993819, 0.0009938059999999999, 0.0009938479999999986, 0.0009940139999999945, 0.0009939579999999962, 0.0009939029999999974, 0.0009940690000000002, 0.000993916999999997, 0.000993916999999997, 0.000993930000000004, 0.0009939860000000023, 0.0009939310000000035, 0.000993944999999996, 0.0009938750000000052, 0.000994041000000001, 0.000993944999999996, 0.0009939860000000023, 0.0009939720000000096, 0.0009940420000000005, 0.0009939999999999949, 0.0009940140000000014, 0.0009939999999999949, 0.0009940000000000088, 0.0009939729999999952, 0.0009939860000000023, 0.0009940549999999937, 0.000994027999999994, 0.0009940140000000014, 0.000993944999999996, 0.00099394500000001, 0.000993916999999997, 0.0009940550000000076, 0.0009940420000000005, 0.0009940690000000002, 0.0009939870000000017, 0.0009941249999999985, 0.0009940559999999932, 0.0009939999999999949, 0.0009940549999999937, 0.000994028000000008, 0.0009940140000000153, 0.0009939579999999892, 0.0009940689999999863, 0.000994041000000001]</msg>
<status status="PASS" starttime="20201030 15:54:30.202" endtime="20201030 15:54:30.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.198" endtime="20201030 15:54:30.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.208" endtime="20201030 15:54:30.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.207" endtime="20201030 15:54:30.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.206" endtime="20201030 15:54:30.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.748" endtime="20201030 15:54:30.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.747" endtime="20201030 15:54:30.229"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.237" endtime="20201030 15:54:30.350"></status>
</kw>
<msg timestamp="20201030 15:54:30.351" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.236" endtime="20201030 15:54:30.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.353" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.352" endtime="20201030 15:54:30.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.354" endtime="20201030 15:54:30.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.233" endtime="20201030 15:54:30.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.232" endtime="20201030 15:54:30.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.363" endtime="20201030 15:54:30.668"></status>
</kw>
<msg timestamp="20201030 15:54:30.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.362" endtime="20201030 15:54:30.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.672" endtime="20201030 15:54:30.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.680" endtime="20201030 15:54:30.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.359" endtime="20201030 15:54:30.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.357" endtime="20201030 15:54:30.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:30.686" level="INFO">${PHILIP_RES} = [{'diff': 0.0010372639999999995}, {'diff': 0.0010358890000000016}, {'diff': 0.0010358050000000008}, {'diff': 0.0010357640000000015}, {'diff': 0.0010357779999999976}, {'diff': 0.0010358060000000002}, {...</msg>
<status status="PASS" starttime="20201030 15:54:30.683" endtime="20201030 15:54:30.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.690" level="INFO">${RESULT} = {'diff': [0.0010372639999999995, 0.0010358890000000016, 0.0010358050000000008, 0.0010357640000000015, 0.0010357779999999976, 0.0010358060000000002, 0.0010357920000000007, 0.0010358339999999994, 0.0010...</msg>
<status status="PASS" starttime="20201030 15:54:30.687" endtime="20201030 15:54:30.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.695" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:30.694" endtime="20201030 15:54:30.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.697" level="INFO">VALUE: [0.0010372639999999995, 0.0010358890000000016, 0.0010358050000000008, 0.0010357640000000015, 0.0010357779999999976, 0.0010358060000000002, 0.0010357920000000007, 0.0010358339999999994, 0.001035749999999995, 0.0010357219999999959, 0.001035651999999998, 0.0010357219999999959, 0.0010357640000000015, 0.0010356809999999966, 0.0010357639999999946, 0.0010356799999999972, 0.0010357089999999958, 0.0010357230000000023, 0.001035833, 0.0010356809999999966, 0.001035750000000002, 0.0010356950000000031, 0.0010357639999999946, 0.001035736999999995, 0.001035762999999995, 0.0010357359999999954, 0.0010357359999999954, 0.0010357220000000028, 0.0010356250000000122, 0.0010358050000000008, 0.0010358199999999929, 0.0010358470000000064, 0.001035750000000002, 0.001035750000000002, 0.0010358889999999982, 0.0010358339999999994, 0.0010358469999999925, 0.0010358749999999917, 0.0010357640000000085, 0.0010358480000000059, 0.0010358190000000073, 0.001035778000000001, 0.0010357220000000028, 0.0010358749999999917, 0.0010358199999999929, 0.0010358749999999917, 0.0010358050000000008, 0.0010358199999999929, 0.0010358189999999934, 0.0010358060000000002]</msg>
<status status="PASS" starttime="20201030 15:54:30.696" endtime="20201030 15:54:30.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.691" endtime="20201030 15:54:30.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.705" endtime="20201030 15:54:30.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.704" endtime="20201030 15:54:30.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.702" endtime="20201030 15:54:30.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.230" endtime="20201030 15:54:30.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.230" endtime="20201030 15:54:30.726"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.734" endtime="20201030 15:54:30.850"></status>
</kw>
<msg timestamp="20201030 15:54:30.850" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.733" endtime="20201030 15:54:30.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.853" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.851" endtime="20201030 15:54:30.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.854" endtime="20201030 15:54:30.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.730" endtime="20201030 15:54:30.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.728" endtime="20201030 15:54:30.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.863" endtime="20201030 15:54:31.149"></status>
</kw>
<msg timestamp="20201030 15:54:31.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.861" endtime="20201030 15:54:31.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.153" endtime="20201030 15:54:31.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.161" endtime="20201030 15:54:31.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.859" endtime="20201030 15:54:31.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.857" endtime="20201030 15:54:31.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:31.167" level="INFO">${PHILIP_RES} = [{'diff': 0.001079875000000001}, {'diff': 0.0010784720000000005}, {'diff': 0.0010783190000000012}, {'diff': 0.0010784029999999986}, {'diff': 0.001078291999999998}, {'diff': 0.0010784019999999991}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:31.164" endtime="20201030 15:54:31.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.172" level="INFO">${RESULT} = {'diff': [0.001079875000000001, 0.0010784720000000005, 0.0010783190000000012, 0.0010784029999999986, 0.001078291999999998, 0.0010784019999999991, 0.0010783749999999995, 0.001078361, 0.001078361, 0.001...</msg>
<status status="PASS" starttime="20201030 15:54:31.168" endtime="20201030 15:54:31.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.176" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:31.175" endtime="20201030 15:54:31.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.179" level="INFO">VALUE: [0.001079875000000001, 0.0010784720000000005, 0.0010783190000000012, 0.0010784029999999986, 0.001078291999999998, 0.0010784019999999991, 0.0010783749999999995, 0.001078361, 0.001078361, 0.001078361, 0.0010783749999999995, 0.0010783330000000008, 0.0010784580000000044, 0.0010784029999999986, 0.001078388999999999, 0.0010783470000000003, 0.0010784169999999982, 0.0010784170000000051, 0.0010782220000000037, 0.001078291000000002, 0.0010782920000000085, 0.001078389000000013, 0.0010783190000000081, 0.0010783339999999864, 0.001078388999999999, 0.0010783749999999925, 0.0010783469999999934, 0.001078361, 0.0010783619999999994, 0.0010783749999999925, 0.0010783059999999872, 0.0010783479999999929, 0.0010783749999999925, 0.0010783470000000073, 0.0010783479999999929, 0.0010782919999999946, 0.0010783610000000138, 0.0010783330000000008, 0.0010783470000000073, 0.001078388999999999, 0.0010783050000000016, 0.0010783470000000073, 0.001078388999999999, 0.0010783469999999934, 0.0010784030000000056, 0.0010783190000000081, 0.0010784030000000056, 0.0010783749999999925, 0.0010783469999999934, 0.001078277999999988]</msg>
<status status="PASS" starttime="20201030 15:54:31.177" endtime="20201030 15:54:31.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.173" endtime="20201030 15:54:31.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.183" endtime="20201030 15:54:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.182" endtime="20201030 15:54:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.181" endtime="20201030 15:54:31.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.727" endtime="20201030 15:54:31.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.726" endtime="20201030 15:54:31.204"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.212" endtime="20201030 15:54:31.333"></status>
</kw>
<msg timestamp="20201030 15:54:31.334" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.211" endtime="20201030 15:54:31.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.339" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.336" endtime="20201030 15:54:31.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.341" endtime="20201030 15:54:31.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.208" endtime="20201030 15:54:31.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.206" endtime="20201030 15:54:31.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.359" endtime="20201030 15:54:31.654"></status>
</kw>
<msg timestamp="20201030 15:54:31.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018523069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.356" endtime="20201030 15:54:31.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018523069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.658" endtime="20201030 15:54:31.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.666" endtime="20201030 15:54:31.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.351" endtime="20201030 15:54:31.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.347" endtime="20201030 15:54:31.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:31.672" level="INFO">${PHILIP_RES} = [{'diff': 0.0011231530000000017}, {'diff': 0.0011217640000000008}, {'diff': 0.001121722999999998}, {'diff': 0.001121805}, {'diff': 0.0011216939999999995}, {'diff': 0.0011218610000000018}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:31.669" endtime="20201030 15:54:31.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.676" level="INFO">${RESULT} = {'diff': [0.0011231530000000017, 0.0011217640000000008, 0.001121722999999998, 0.001121805, 0.0011216939999999995, 0.0011218610000000018, 0.0011217779999999969, 0.0011218050000000035, 0.001121763999999...</msg>
<status status="PASS" starttime="20201030 15:54:31.673" endtime="20201030 15:54:31.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.681" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:31.680" endtime="20201030 15:54:31.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.684" level="INFO">VALUE: [0.0011231530000000017, 0.0011217640000000008, 0.001121722999999998, 0.001121805, 0.0011216939999999995, 0.0011218610000000018, 0.0011217779999999969, 0.0011218050000000035, 0.0011217639999999973, 0.0011217780000000038, 0.001121790999999997, 0.001121819000000003, 0.001121805999999996, 0.0011217639999999973, 0.0011217499999999977, 0.0011218329999999957, 0.0011217920000000034, 0.0011217629999999978, 0.0011217500000000047, 0.0011217500000000047, 0.0011217359999999982, 0.0011217639999999973, 0.001121790999999997, 0.0011217219999999917, 0.0011217770000000044, 0.0011217500000000047, 0.0011216520000000008, 0.0011218199999999956, 0.00112181900000001, 0.0011216530000000002, 0.001121736000000012, 0.0011217920000000103, 0.001121723000000005, 0.0011216389999999937, 0.0011216939999999925, 0.0011218470000000091, 0.0011217639999999973, 0.001121707999999999, 0.0011217219999999917, 0.001121736000000012, 0.0011216809999999994, 0.0011217220000000055, 0.001121707999999999, 0.0011217780000000038, 0.0011218330000000026, 0.0011217219999999917, 0.00112168, 0.001121527000000011, 0.0011216389999999798, 0.0011216389999999798]</msg>
<status status="PASS" starttime="20201030 15:54:31.682" endtime="20201030 15:54:31.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.677" endtime="20201030 15:54:31.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.689" endtime="20201030 15:54:31.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.687" endtime="20201030 15:54:31.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.686" endtime="20201030 15:54:31.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.205" endtime="20201030 15:54:31.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.205" endtime="20201030 15:54:31.710"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.718" endtime="20201030 15:54:31.842"></status>
</kw>
<msg timestamp="20201030 15:54:31.842" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.716" endtime="20201030 15:54:31.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.845" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.843" endtime="20201030 15:54:31.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.846" endtime="20201030 15:54:31.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.714" endtime="20201030 15:54:31.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.712" endtime="20201030 15:54:31.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.855" endtime="20201030 15:54:32.149"></status>
</kw>
<msg timestamp="20201030 15:54:32.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020604083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.853" endtime="20201030 15:54:32.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020604083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.158" endtime="20201030 15:54:32.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.175" endtime="20201030 15:54:32.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.851" endtime="20201030 15:54:32.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.849" endtime="20201030 15:54:32.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:32.188" level="INFO">${PHILIP_RES} = [{'diff': 0.0011673050000000004}, {'diff': 0.0011658610000000007}, {'diff': 0.001165944000000002}, {'diff': 0.001165819000000002}, {'diff': 0.0011658200000000014}, {'diff': 0.001165819999999998}, {'di...</msg>
<status status="PASS" starttime="20201030 15:54:32.182" endtime="20201030 15:54:32.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.197" level="INFO">${RESULT} = {'diff': [0.0011673050000000004, 0.0011658610000000007, 0.001165944000000002, 0.001165819000000002, 0.0011658200000000014, 0.001165819999999998, 0.0011657780000000062, 0.0011658749999999968, 0.0011658...</msg>
<status status="PASS" starttime="20201030 15:54:32.190" endtime="20201030 15:54:32.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.205" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:32.203" endtime="20201030 15:54:32.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.210" level="INFO">VALUE: [0.0011673050000000004, 0.0011658610000000007, 0.001165944000000002, 0.001165819000000002, 0.0011658200000000014, 0.001165819999999998, 0.0011657780000000062, 0.0011658749999999968, 0.001165820000000005, 0.001165804999999999, 0.001165804999999999, 0.0011658610000000041, 0.001165722000000001, 0.0011658609999999972, 0.0011658619999999967, 0.0011657769999999998, 0.0011659020000000034, 0.0011657909999999994, 0.0011658190000000054, 0.0011658610000000041, 0.0011657909999999994, 0.0011657639999999997, 0.0011658059999999915, 0.0011657919999999988, 0.0011658470000000115, 0.0011657360000000005, 0.001165722000000008, 0.001165722000000008, 0.0011658060000000053, 0.0011658060000000053, 0.0011658329999999911, 0.0011657499999999932, 0.0011658479999999971, 0.0011657499999999932, 0.0011658329999999911, 0.0011658610000000041, 0.0011658050000000059, 0.001165750000000007, 0.0011657909999999994, 0.0011657780000000062, 0.001165721999999994, 0.0011658610000000041, 0.001165819999999998, 0.0011657919999999988, 0.001165804999999992, 0.0011658329999999772, 0.0011657770000000067, 0.0011657640000000136, 0.0011657639999999858, 0.0011657079999999875]</msg>
<status status="PASS" starttime="20201030 15:54:32.208" endtime="20201030 15:54:32.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.198" endtime="20201030 15:54:32.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.222" endtime="20201030 15:54:32.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.219" endtime="20201030 15:54:32.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.216" endtime="20201030 15:54:32.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.710" endtime="20201030 15:54:32.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.710" endtime="20201030 15:54:32.243"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.254" endtime="20201030 15:54:32.381"></status>
</kw>
<msg timestamp="20201030 15:54:32.382" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.252" endtime="20201030 15:54:32.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.384" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.383" endtime="20201030 15:54:32.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.385" endtime="20201030 15:54:32.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.248" endtime="20201030 15:54:32.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.246" endtime="20201030 15:54:32.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.394" endtime="20201030 15:54:32.682"></status>
</kw>
<msg timestamp="20201030 15:54:32.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.392" endtime="20201030 15:54:32.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.686" endtime="20201030 15:54:32.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.694" endtime="20201030 15:54:32.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.390" endtime="20201030 15:54:32.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.388" endtime="20201030 15:54:32.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:32.701" level="INFO">${PHILIP_RES} = [{'diff': 0.001212139000000001}, {'diff': 0.0012106389999999995}, {'diff': 0.001210527999999999}, {'diff': 0.0012105970000000008}, {'diff': 0.0012105410000000025}, {'diff': 0.0012105000000000032}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:32.697" endtime="20201030 15:54:32.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.706" level="INFO">${RESULT} = {'diff': [0.001212139000000001, 0.0012106389999999995, 0.001210527999999999, 0.0012105970000000008, 0.0012105410000000025, 0.0012105000000000032, 0.0012105690000000016, 0.001210542000000002, 0.0012105...</msg>
<status status="PASS" starttime="20201030 15:54:32.702" endtime="20201030 15:54:32.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.710" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:32.709" endtime="20201030 15:54:32.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.712" level="INFO">VALUE: [0.001212139000000001, 0.0012106389999999995, 0.001210527999999999, 0.0012105970000000008, 0.0012105410000000025, 0.0012105000000000032, 0.0012105690000000016, 0.001210542000000002, 0.0012105559999999946, 0.0012104860000000037, 0.0012105840000000007, 0.0012106389999999995, 0.001210570000000001, 0.0012106119999999998, 0.0012104579999999976, 0.001210554999999995, 0.0012105559999999946, 0.0012104999999999963, 0.0012105139999999959, 0.0012105000000000032, 0.0012104859999999967, 0.0012104579999999976, 0.001210541999999995, 0.001210472000000004, 0.0012105689999999947, 0.0012105840000000007, 0.0012105830000000012, 0.0012105420000000089, 0.001210527000000003, 0.001210624999999993, 0.001210541999999995, 0.0012106110000000003, 0.001210652999999992, 0.001210624999999993, 0.0012106389999999995, 0.001210638, 0.001210472000000004, 0.0012105979999999933, 0.0012105000000000032, 0.0012105689999999947, 0.0012104869999999962, 0.001210555000000002, 0.0012106520000000065, 0.0012106389999999856, 0.0012107220000000252, 0.0012106809999999912, 0.0012107500000000104, 0.001210707999999977, 0.001210583000000015, 0.0012105139999999959]</msg>
<status status="PASS" starttime="20201030 15:54:32.711" endtime="20201030 15:54:32.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.706" endtime="20201030 15:54:32.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.717" endtime="20201030 15:54:32.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.716" endtime="20201030 15:54:32.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.714" endtime="20201030 15:54:32.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.244" endtime="20201030 15:54:32.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.244" endtime="20201030 15:54:32.738"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.746" endtime="20201030 15:54:32.877"></status>
</kw>
<msg timestamp="20201030 15:54:32.877" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.744" endtime="20201030 15:54:32.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.880" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.878" endtime="20201030 15:54:32.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.881" endtime="20201030 15:54:32.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.742" endtime="20201030 15:54:32.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.740" endtime="20201030 15:54:32.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.890" endtime="20201030 15:54:33.196"></status>
</kw>
<msg timestamp="20201030 15:54:33.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.888" endtime="20201030 15:54:33.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.200" endtime="20201030 15:54:33.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.207" endtime="20201030 15:54:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.886" endtime="20201030 15:54:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.884" endtime="20201030 15:54:33.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:33.214" level="INFO">${PHILIP_RES} = [{'diff': 0.001257666000000001}, {'diff': 0.0012561529999999994}, {'diff': 0.001256264}, {'diff': 0.0012561250000000003}, {'diff': 0.001256249999999997}, {'diff': 0.001256152999999996}, {'diff': 0.001...</msg>
<status status="PASS" starttime="20201030 15:54:33.211" endtime="20201030 15:54:33.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.218" level="INFO">${RESULT} = {'diff': [0.001257666000000001, 0.0012561529999999994, 0.001256264, 0.0012561250000000003, 0.001256249999999997, 0.001256152999999996, 0.001256165999999996, 0.0012562079999999948, 0.001256041999999998...</msg>
<status status="PASS" starttime="20201030 15:54:33.215" endtime="20201030 15:54:33.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.222" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:33.221" endtime="20201030 15:54:33.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.224" level="INFO">VALUE: [0.001257666000000001, 0.0012561529999999994, 0.001256264, 0.0012561250000000003, 0.001256249999999997, 0.001256152999999996, 0.001256165999999996, 0.0012562079999999948, 0.0012560419999999989, 0.0012560970000000046, 0.0012561389999999964, 0.0012560690000000055, 0.0012561109999999973, 0.0012560000000000002, 0.0012561939999999952, 0.001256152999999996, 0.0012560969999999977, 0.0012560969999999977, 0.0012562360000000078, 0.0012561940000000021, 0.0012560970000000116, 0.0012560840000000045, 0.0012560840000000045, 0.0012561390000000033, 0.0012561670000000025, 0.001256264000000007, 0.0012561250000000107, 0.001256083000000005, 0.0012561389999999895, 0.001256166000000003, 0.0012561249999999968, 0.0012560829999999912, 0.0012561390000000033, 0.0012561669999999886, 0.001256152999999996, 0.0012562220000000013, 0.0012561249999999968, 0.0012559999999999932, 0.0012560969999999977, 0.0012560969999999977, 0.0012560409999999994, 0.0012560689999999985, 0.0012561249999999968, 0.001256180999999995, 0.0012561390000000172, 0.001256055000000006, 0.00125613799999999, 0.0012560000000000071, 0.0012560420000000128, 0.001256083000000019]</msg>
<status status="PASS" starttime="20201030 15:54:33.223" endtime="20201030 15:54:33.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.218" endtime="20201030 15:54:33.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.235" endtime="20201030 15:54:33.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.233" endtime="20201030 15:54:33.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.232" endtime="20201030 15:54:33.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.739" endtime="20201030 15:54:33.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.738" endtime="20201030 15:54:33.255"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.264" endtime="20201030 15:54:33.399"></status>
</kw>
<msg timestamp="20201030 15:54:33.400" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.262" endtime="20201030 15:54:33.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.402" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.401" endtime="20201030 15:54:33.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.403" endtime="20201030 15:54:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.259" endtime="20201030 15:54:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.258" endtime="20201030 15:54:33.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.412" endtime="20201030 15:54:33.702"></status>
</kw>
<msg timestamp="20201030 15:54:33.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:33.410" endtime="20201030 15:54:33.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:33.706" endtime="20201030 15:54:33.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.714" endtime="20201030 15:54:33.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.408" endtime="20201030 15:54:33.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.406" endtime="20201030 15:54:33.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:33.721" level="INFO">${PHILIP_RES} = [{'diff': 0.0013038470000000003}, {'diff': 0.0013022780000000005}, {'diff': 0.001302389000000001}, {'diff': 0.0013023609999999984}, {'diff': 0.0013023620000000014}, {'diff': 0.0013023059999999961}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:33.717" endtime="20201030 15:54:33.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.725" level="INFO">${RESULT} = {'diff': [0.0013038470000000003, 0.0013022780000000005, 0.001302389000000001, 0.0013023609999999984, 0.0013023620000000014, 0.0013023059999999961, 0.0013024449999999993, 0.0013023470000000023, 0.00130...</msg>
<status status="PASS" starttime="20201030 15:54:33.722" endtime="20201030 15:54:33.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.729" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:33.728" endtime="20201030 15:54:33.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.731" level="INFO">VALUE: [0.0013038470000000003, 0.0013022780000000005, 0.001302389000000001, 0.0013023609999999984, 0.0013023620000000014, 0.0013023059999999961, 0.0013024449999999993, 0.0013023470000000023, 0.0013023469999999954, 0.0013023329999999958, 0.001302262999999998, 0.001302278000000004, 0.0013023190000000032, 0.001302290999999997, 0.0013024309999999997, 0.001302389000000001, 0.0013023470000000023, 0.0013023050000000036, 0.0013023880000000015, 0.0013023750000000084, 0.001302389000000001, 0.0013024029999999936, 0.001302389000000001, 0.0013023340000000022, 0.0013025140000000046, 0.0013024859999999916, 0.0013024170000000002, 0.001302389000000001, 0.0013024729999999984, 0.0013024860000000055, 0.001302458999999992, 0.001302278000000004, 0.001302499999999998, 0.001302458999999992, 0.0013023610000000019, 0.0013022770000000045, 0.0013024309999999928, 0.001302278000000004, 0.0013023470000000092, 0.0013023339999999883, 0.0013023330000000027, 0.0013023610000000019, 0.0013022920000000104, 0.001302306000000003, 0.001302306000000003, 0.0013023470000000092, 0.001302500000000012, 0.0013023889999999871, 0.0013024029999999798, 0.0013023470000000092]</msg>
<status status="PASS" starttime="20201030 15:54:33.730" endtime="20201030 15:54:33.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.725" endtime="20201030 15:54:33.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.737" endtime="20201030 15:54:33.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.735" endtime="20201030 15:54:33.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.734" endtime="20201030 15:54:33.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.256" endtime="20201030 15:54:33.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.256" endtime="20201030 15:54:33.760"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.781" endtime="20201030 15:54:33.923"></status>
</kw>
<msg timestamp="20201030 15:54:33.924" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.777" endtime="20201030 15:54:33.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.929" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.926" endtime="20201030 15:54:33.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.931" endtime="20201030 15:54:33.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.770" endtime="20201030 15:54:33.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.765" endtime="20201030 15:54:33.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.950" endtime="20201030 15:54:34.250"></status>
</kw>
<msg timestamp="20201030 15:54:34.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036138181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037489111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.947" endtime="20201030 15:54:34.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036138181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037489111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.254" endtime="20201030 15:54:34.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.262" endtime="20201030 15:54:34.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.941" endtime="20201030 15:54:34.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.938" endtime="20201030 15:54:34.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:34.268" level="INFO">${PHILIP_RES} = [{'diff': 0.0013509300000000002}, {'diff': 0.0013493889999999995}, {'diff': 0.0013495280000000026}, {'diff': 0.0013495700000000013}, {'diff': 0.0013495000000000035}, {'diff': 0.0013495700000000013}, {...</msg>
<status status="PASS" starttime="20201030 15:54:34.265" endtime="20201030 15:54:34.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.273" level="INFO">${RESULT} = {'diff': [0.0013509300000000002, 0.0013493889999999995, 0.0013495280000000026, 0.0013495700000000013, 0.0013495000000000035, 0.0013495700000000013, 0.001349485999999997, 0.0013494580000000048, 0.00134...</msg>
<status status="PASS" starttime="20201030 15:54:34.269" endtime="20201030 15:54:34.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.277" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:34.276" endtime="20201030 15:54:34.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.280" level="INFO">VALUE: [0.0013509300000000002, 0.0013493889999999995, 0.0013495280000000026, 0.0013495700000000013, 0.0013495000000000035, 0.0013495700000000013, 0.001349485999999997, 0.0013494580000000048, 0.0013495409999999958, 0.001349486000000004, 0.001349403000000013, 0.00134947299999999, 0.0013494440000000052, 0.001349513999999996, 0.0013493470000000007, 0.001349402999999999, 0.0013494719999999905, 0.001349584000000001, 0.0013495410000000096, 0.0013493889999999925, 0.0013493749999999999, 0.0013493609999999934, 0.001349513999999996, 0.0013494720000000043, 0.0013493059999999946, 0.0013494450000000047, 0.0013494159999999922, 0.0013494589999999973, 0.001349402999999999, 0.0013494309999999982, 0.0013494449999999908, 0.0013494309999999982, 0.0013494579999999978, 0.0013494299999999987, 0.0013493750000000138, 0.001349374999999986, 0.0013493619999999928, 0.0013494579999999978, 0.001349485999999983, 0.0013493470000000007, 0.0013494720000000182, 0.0013494300000000126, 0.0013494169999999917, 0.0013494579999999978, 0.0013494579999999978, 0.0013492779999999815, 0.0013494579999999978, 0.0013494300000000126, 0.0013493609999999934, 0.0013493609999999934]</msg>
<status status="PASS" starttime="20201030 15:54:34.278" endtime="20201030 15:54:34.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.274" endtime="20201030 15:54:34.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.285" endtime="20201030 15:54:34.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.283" endtime="20201030 15:54:34.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.282" endtime="20201030 15:54:34.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.762" endtime="20201030 15:54:34.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.761" endtime="20201030 15:54:34.305"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.314" endtime="20201030 15:54:34.456"></status>
</kw>
<msg timestamp="20201030 15:54:34.457" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.312" endtime="20201030 15:54:34.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.459" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.458" endtime="20201030 15:54:34.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.460" endtime="20201030 15:54:34.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.310" endtime="20201030 15:54:34.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.308" endtime="20201030 15:54:34.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.469" endtime="20201030 15:54:34.763"></status>
</kw>
<msg timestamp="20201030 15:54:34.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.468" endtime="20201030 15:54:34.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.772" endtime="20201030 15:54:34.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.789" endtime="20201030 15:54:34.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.465" endtime="20201030 15:54:34.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.463" endtime="20201030 15:54:34.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:34.802" level="INFO">${PHILIP_RES} = [{'diff': 0.0013986390000000001}, {'diff': 0.0013971669999999978}, {'diff': 0.0013972080000000005}, {'diff': 0.0013972779999999983}, {'diff': 0.0013971799999999979}, {'diff': 0.0013971530000000051}, {...</msg>
<status status="PASS" starttime="20201030 15:54:34.795" endtime="20201030 15:54:34.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.811" level="INFO">${RESULT} = {'diff': [0.0013986390000000001, 0.0013971669999999978, 0.0013972080000000005, 0.0013972779999999983, 0.0013971799999999979, 0.0013971530000000051, 0.0013971529999999982, 0.0013971950000000039, 0.0013...</msg>
<status status="PASS" starttime="20201030 15:54:34.804" endtime="20201030 15:54:34.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.819" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:34.817" endtime="20201030 15:54:34.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.824" level="INFO">VALUE: [0.0013986390000000001, 0.0013971669999999978, 0.0013972080000000005, 0.0013972779999999983, 0.0013971799999999979, 0.0013971530000000051, 0.0013971529999999982, 0.0013971950000000039, 0.0013972920000000014, 0.0013972499999999957, 0.0013971529999999982, 0.0013971659999999983, 0.001397014000000002, 0.001397097, 0.0013970419999999942, 0.0013971529999999982, 0.0013970690000000077, 0.0013970979999999994, 0.0013972080000000109, 0.001397097, 0.0013970690000000008, 0.0013969719999999963, 0.001397014000000002, 0.0013971389999999917, 0.0013970410000000016, 0.001397124999999999, 0.0013971670000000047, 0.0013971670000000047, 0.0013971109999999926, 0.0013970829999999934, 0.0013972220000000035, 0.0013969999999999955, 0.0013971390000000056, 0.0013971109999999926, 0.0013971800000000117, 0.0013970830000000073, 0.0013971110000000064, 0.001397068999999987, 0.0013970559999999937, 0.0013969589999999754, 0.001397124999999999, 0.0013972919999999944, 0.0013972499999999888, 0.0013971940000000183, 0.0013971939999999905, 0.001397096999999986, 0.001397166999999977, 0.0013972220000000035, 0.0013971799999999979, 0.001397181000000025]</msg>
<status status="PASS" starttime="20201030 15:54:34.821" endtime="20201030 15:54:34.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.812" endtime="20201030 15:54:34.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.834" endtime="20201030 15:54:34.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.831" endtime="20201030 15:54:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.829" endtime="20201030 15:54:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.306" endtime="20201030 15:54:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.306" endtime="20201030 15:54:34.856"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.864" endtime="20201030 15:54:35.011"></status>
</kw>
<msg timestamp="20201030 15:54:35.012" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.862" endtime="20201030 15:54:35.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.014" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.013" endtime="20201030 15:54:35.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.015" endtime="20201030 15:54:35.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.860" endtime="20201030 15:54:35.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.858" endtime="20201030 15:54:35.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.024" endtime="20201030 15:54:35.315"></status>
</kw>
<msg timestamp="20201030 15:54:35.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.023" endtime="20201030 15:54:35.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.318" endtime="20201030 15:54:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.326" endtime="20201030 15:54:35.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.020" endtime="20201030 15:54:35.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.018" endtime="20201030 15:54:35.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:35.333" level="INFO">${PHILIP_RES} = [{'diff': 0.0014472499999999971}, {'diff': 0.001445624999999999}, {'diff': 0.001445736000000003}, {'diff': 0.0014457639999999987}, {'diff': 0.0014457779999999983}, {'diff': 0.0014456390000000055}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:35.329" endtime="20201030 15:54:35.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.336" level="INFO">${RESULT} = {'diff': [0.0014472499999999971, 0.001445624999999999, 0.001445736000000003, 0.0014457639999999987, 0.0014457779999999983, 0.0014456390000000055, 0.0014457910000000018, 0.0014459159999999985, 0.001445...</msg>
<status status="PASS" starttime="20201030 15:54:35.334" endtime="20201030 15:54:35.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.341" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:35.340" endtime="20201030 15:54:35.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.343" level="INFO">VALUE: [0.0014472499999999971, 0.001445624999999999, 0.001445736000000003, 0.0014457639999999987, 0.0014457779999999983, 0.0014456390000000055, 0.0014457910000000018, 0.0014459159999999985, 0.0014458050000000014, 0.0014458749999999992, 0.001445707999999997, 0.0014457770000000023, 0.0014456800000000047, 0.0014457640000000022, 0.0014457219999999965, 0.0014456670000000046, 0.0014457080000000039, 0.0014457920000000013, 0.0014457219999999965, 0.0014456940000000112, 0.0014456520000000056, 0.0014456939999999974, 0.001445625000000006, 0.0014456389999999986, 0.0014456950000000107, 0.0014458749999999992, 0.0014457230000000099, 0.0014456529999999912, 0.001445722999999996, 0.001445736000000003, 0.0014456939999999974, 0.0014457080000000039, 0.0014457219999999965, 0.001445847, 0.0014457080000000039, 0.001445805999999994, 0.0014457630000000027, 0.001445681000000018, 0.0014456949999999968, 0.0014456949999999968, 0.0014457090000000172, 0.0014454720000000032, 0.0014455700000000071, 0.001445596999999993, 0.0014457500000000234, 0.0014456109999999855, 0.0014457230000000099, 0.001445625000000006, 0.0014455970000000207, 0.0014454310000000248]</msg>
<status status="PASS" starttime="20201030 15:54:35.342" endtime="20201030 15:54:35.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.337" endtime="20201030 15:54:35.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.351" endtime="20201030 15:54:35.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.350" endtime="20201030 15:54:35.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.349" endtime="20201030 15:54:35.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.856" endtime="20201030 15:54:35.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.856" endtime="20201030 15:54:35.372"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.380" endtime="20201030 15:54:35.531"></status>
</kw>
<msg timestamp="20201030 15:54:35.531" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.379" endtime="20201030 15:54:35.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.534" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.532" endtime="20201030 15:54:35.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.535" endtime="20201030 15:54:35.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.376" endtime="20201030 15:54:35.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.374" endtime="20201030 15:54:35.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.544" endtime="20201030 15:54:35.848"></status>
</kw>
<msg timestamp="20201030 15:54:35.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018516889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.542" endtime="20201030 15:54:35.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018516889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.851" endtime="20201030 15:54:35.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.859" endtime="20201030 15:54:35.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.539" endtime="20201030 15:54:35.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.538" endtime="20201030 15:54:35.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:35.865" level="INFO">${PHILIP_RES} = [{'diff': 0.0014964169999999999}, {'diff': 0.0014949299999999985}, {'diff': 0.0014951530000000025}, {'diff': 0.0014949719999999972}, {'diff': 0.0014949030000000023}, {'diff': 0.0014948340000000004}, {...</msg>
<status status="PASS" starttime="20201030 15:54:35.862" endtime="20201030 15:54:35.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.870" level="INFO">${RESULT} = {'diff': [0.0014964169999999999, 0.0014949299999999985, 0.0014951530000000025, 0.0014949719999999972, 0.0014949030000000023, 0.0014948340000000004, 0.001494943999999998, 0.0014949859999999968, 0.00149...</msg>
<status status="PASS" starttime="20201030 15:54:35.866" endtime="20201030 15:54:35.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.874" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:35.873" endtime="20201030 15:54:35.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.877" level="INFO">VALUE: [0.0014964169999999999, 0.0014949299999999985, 0.0014951530000000025, 0.0014949719999999972, 0.0014949030000000023, 0.0014948340000000004, 0.001494943999999998, 0.0014949859999999968, 0.0014949580000000046, 0.0014949019999999993, 0.001494930999999998, 0.0014950000000000033, 0.001494861, 0.001494915999999999, 0.0014949719999999972, 0.0014949029999999988, 0.0014948619999999996, 0.0014949860000000037, 0.0014949999999999963, 0.0014950279999999955, 0.0014949870000000032, 0.001494943999999998, 0.0014950690000000016, 0.001494944000000012, 0.0014949999999999963, 0.001494930999999991, 0.001494915999999999, 0.0014949030000000058, 0.0014949860000000037, 0.0014950140000000028, 0.001494943999999998, 0.0014949169999999984, 0.0014949999999999963, 0.0014950130000000034, 0.0014949589999999902, 0.0014948889999999992, 0.001495013999999989, 0.0014949580000000184, 0.0014948889999999992, 0.0014948889999999992, 0.001495000000000024, 0.0014950280000000093, 0.0014949019999999924, 0.001495042000000002, 0.001495152999999999, 0.0014950689999999878, 0.0014949579999999907, 0.0014950279999999816, 0.0014948889999999992, 0.0014950980000000003]</msg>
<status status="PASS" starttime="20201030 15:54:35.876" endtime="20201030 15:54:35.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.871" endtime="20201030 15:54:35.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.882" endtime="20201030 15:54:35.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.880" endtime="20201030 15:54:35.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.879" endtime="20201030 15:54:35.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.373" endtime="20201030 15:54:35.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.372" endtime="20201030 15:54:35.903"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.911" endtime="20201030 15:54:36.066"></status>
</kw>
<msg timestamp="20201030 15:54:36.066" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.909" endtime="20201030 15:54:36.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.068" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.067" endtime="20201030 15:54:36.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.069" endtime="20201030 15:54:36.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.907" endtime="20201030 15:54:36.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.905" endtime="20201030 15:54:36.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.078" endtime="20201030 15:54:36.372"></status>
</kw>
<msg timestamp="20201030 15:54:36.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018637319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.077" endtime="20201030 15:54:36.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018637319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.381" endtime="20201030 15:54:36.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.397" endtime="20201030 15:54:36.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.074" endtime="20201030 15:54:36.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.073" endtime="20201030 15:54:36.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:36.411" level="INFO">${PHILIP_RES} = [{'diff': 0.0015464170000000013}, {'diff': 0.001544957999999999}, {'diff': 0.001544972000000002}, {'diff': 0.0015448750000000011}, {'diff': 0.0015450269999999974}, {'diff': 0.0015449439999999995}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:36.404" endtime="20201030 15:54:36.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.419" level="INFO">${RESULT} = {'diff': [0.0015464170000000013, 0.001544957999999999, 0.001544972000000002, 0.0015448750000000011, 0.0015450269999999974, 0.0015449439999999995, 0.001545040999999997, 0.0015450420000000034, 0.0015449...</msg>
<status status="PASS" starttime="20201030 15:54:36.413" endtime="20201030 15:54:36.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.428" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:36.426" endtime="20201030 15:54:36.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.433" level="INFO">VALUE: [0.0015464170000000013, 0.001544957999999999, 0.001544972000000002, 0.0015448750000000011, 0.0015450269999999974, 0.0015449439999999995, 0.001545040999999997, 0.0015450420000000034, 0.0015449719999999986, 0.001545027999999997, 0.0015449030000000002, 0.0015449589999999985, 0.001545041000000004, 0.0015451530000000005, 0.0015450970000000022, 0.0015451110000000018, 0.0015450420000000104, 0.001544957999999999, 0.0015450139999999973, 0.0015450139999999973, 0.0015450419999999965, 0.001545110999999988, 0.0015450699999999956, 0.0015450419999999965, 0.00154506900000001, 0.0015453470000000025, 0.0015451530000000074, 0.0015450970000000092, 0.00154506900000001, 0.0015449859999999982, 0.0015449720000000056, 0.00154506900000001, 0.00154506900000001, 0.001545167, 0.001545152000000008, 0.0015451810000000066, 0.0015451669999999862, 0.001545139000000001, 0.001545040999999997, 0.001545139000000001, 0.0015451809999999788, 0.0015450419999999965, 0.001545055999999989, 0.001545040999999997, 0.0015449719999999778, 0.0015449720000000056, 0.0015450979999999948, 0.001545082999999975, 0.0015450969999999953, 0.0015450419999999965]</msg>
<status status="PASS" starttime="20201030 15:54:36.430" endtime="20201030 15:54:36.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.421" endtime="20201030 15:54:36.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.443" endtime="20201030 15:54:36.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.440" endtime="20201030 15:54:36.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.437" endtime="20201030 15:54:36.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.903" endtime="20201030 15:54:36.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.903" endtime="20201030 15:54:36.466"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.474" endtime="20201030 15:54:36.634"></status>
</kw>
<msg timestamp="20201030 15:54:36.634" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.472" endtime="20201030 15:54:36.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.637" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.635" endtime="20201030 15:54:36.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.638" endtime="20201030 15:54:36.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.470" endtime="20201030 15:54:36.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.468" endtime="20201030 15:54:36.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.646" endtime="20201030 15:54:36.939"></status>
</kw>
<msg timestamp="20201030 15:54:36.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020667028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:36.645" endtime="20201030 15:54:36.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020667028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:36.943" endtime="20201030 15:54:36.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.950" endtime="20201030 15:54:36.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.642" endtime="20201030 15:54:36.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.641" endtime="20201030 15:54:36.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:36.957" level="INFO">${PHILIP_RES} = [{'diff': 0.0015972219999999988}, {'diff': 0.0015957220000000008}, {'diff': 0.001595777999999999}, {'diff': 0.0015959299999999989}, {'diff': 0.0015958059999999982}, {'diff': 0.0015957909999999992}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:36.954" endtime="20201030 15:54:36.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.961" level="INFO">${RESULT} = {'diff': [0.0015972219999999988, 0.0015957220000000008, 0.001595777999999999, 0.0015959299999999989, 0.0015958059999999982, 0.0015957909999999992, 0.0015957769999999996, 0.0015958200000000047, 0.00159...</msg>
<status status="PASS" starttime="20201030 15:54:36.958" endtime="20201030 15:54:36.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.965" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:36.964" endtime="20201030 15:54:36.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.967" level="INFO">VALUE: [0.0015972219999999988, 0.0015957220000000008, 0.001595777999999999, 0.0015959299999999989, 0.0015958059999999982, 0.0015957909999999992, 0.0015957769999999996, 0.0015958200000000047, 0.001595860999999997, 0.0015958330000000048, 0.0015958480000000039, 0.0015958750000000035, 0.00159575, 0.0015957080000000012, 0.0015955279999999988, 0.0015957639999999995, 0.0015956939999999947, 0.0015955829999999976, 0.0015956949999999942, 0.0015957220000000077, 0.00159586099999999, 0.001595763, 0.0015958059999999913, 0.001595847999999997, 0.0015958189999999983, 0.0015958059999999913, 0.0015956530000000024, 0.0015958049999999918, 0.0015958469999999975, 0.0015957639999999995, 0.0015958189999999983, 0.0015957229999999933, 0.0015957919999999987, 0.0015957500000000069, 0.001595819999999984, 0.001595832999999991, 0.0015958330000000187, 0.0015957500000000069, 0.0015957080000000012, 0.001595666999999995, 0.0015957639999999995, 0.0015958749999999966, 0.0015958480000000108, 0.001595861000000004, 0.0015959309999999949, 0.001595791000000013, 0.0015959309999999949, 0.0015959859999999937, 0.0015958189999999983, 0.001595736999999986]</msg>
<status status="PASS" starttime="20201030 15:54:36.966" endtime="20201030 15:54:36.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.961" endtime="20201030 15:54:36.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.973" endtime="20201030 15:54:36.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.971" endtime="20201030 15:54:36.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.970" endtime="20201030 15:54:36.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.467" endtime="20201030 15:54:36.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.466" endtime="20201030 15:54:36.993"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.002" endtime="20201030 15:54:37.165"></status>
</kw>
<msg timestamp="20201030 15:54:37.165" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.000" endtime="20201030 15:54:37.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.168" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.166" endtime="20201030 15:54:37.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.169" endtime="20201030 15:54:37.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.998" endtime="20201030 15:54:37.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.996" endtime="20201030 15:54:37.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.185" endtime="20201030 15:54:37.483"></status>
</kw>
<msg timestamp="20201030 15:54:37.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020240056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.182" endtime="20201030 15:54:37.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020240056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.487" endtime="20201030 15:54:37.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.495" endtime="20201030 15:54:37.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.176" endtime="20201030 15:54:37.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.173" endtime="20201030 15:54:37.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:37.501" level="INFO">${PHILIP_RES} = [{'diff': 0.0016489169999999997}, {'diff': 0.001647486}, {'diff': 0.0016472779999999985}, {'diff': 0.0016474440000000014}, {'diff': 0.0016475280000000023}, {'diff': 0.0016473479999999999}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:54:37.498" endtime="20201030 15:54:37.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.506" level="INFO">${RESULT} = {'diff': [0.0016489169999999997, 0.001647486, 0.0016472779999999985, 0.0016474440000000014, 0.0016475280000000023, 0.0016473479999999999, 0.0016473470000000004, 0.001647388999999999, 0.001647388999999...</msg>
<status status="PASS" starttime="20201030 15:54:37.502" endtime="20201030 15:54:37.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.511" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:37.509" endtime="20201030 15:54:37.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.513" level="INFO">VALUE: [0.0016489169999999997, 0.001647486, 0.0016472779999999985, 0.0016474440000000014, 0.0016475280000000023, 0.0016473479999999999, 0.0016473470000000004, 0.001647388999999999, 0.001647388999999999, 0.001647361, 0.0016472219999999968, 0.0016473749999999995, 0.0016472360000000033, 0.0016471809999999976, 0.0016471110000000067, 0.0016472500000000029, 0.0016473190000000082, 0.0016472360000000102, 0.00164726300000001, 0.0016471529999999984, 0.0016474020000000061, 0.0016472220000000037, 0.0016472500000000029, 0.001647278000000002, 0.0016472779999999881, 0.001647166999999991, 0.0016471249999999993, 0.0016472079999999972, 0.0016471249999999993, 0.0016472089999999967, 0.0016471939999999907, 0.0016472500000000029, 0.001647151999999999, 0.001647167000000005, 0.001647249999999989, 0.0016471809999999976, 0.0016472779999999743, 0.0016471949999999902, 0.00164731999999998, 0.001647110999999979, 0.0016470829999999936, 0.0016470549999999806, 0.0016471940000000185, 0.0016471809999999976, 0.0016471660000000055, 0.0016472629999999822, 0.0016471249999999993, 0.0016470969999999863, 0.0016472220000000037, 0.0016470279999999948]</msg>
<status status="PASS" starttime="20201030 15:54:37.512" endtime="20201030 15:54:37.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.507" endtime="20201030 15:54:37.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.518" endtime="20201030 15:54:37.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.516" endtime="20201030 15:54:37.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.515" endtime="20201030 15:54:37.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.994" endtime="20201030 15:54:37.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.994" endtime="20201030 15:54:37.538"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.547" endtime="20201030 15:54:37.714"></status>
</kw>
<msg timestamp="20201030 15:54:37.714" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.545" endtime="20201030 15:54:37.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.717" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.715" endtime="20201030 15:54:37.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.718" endtime="20201030 15:54:37.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.543" endtime="20201030 15:54:37.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.541" endtime="20201030 15:54:37.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.727" endtime="20201030 15:54:38.030"></status>
</kw>
<msg timestamp="20201030 15:54:38.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020194722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.725" endtime="20201030 15:54:38.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020194722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.038" endtime="20201030 15:54:38.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.056" endtime="20201030 15:54:38.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.723" endtime="20201030 15:54:38.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.721" endtime="20201030 15:54:38.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:38.069" level="INFO">${PHILIP_RES} = [{'diff': 0.0017010279999999968}, {'diff': 0.0016995279999999988}, {'diff': 0.0016995279999999988}, {'diff': 0.0016995829999999976}, {'diff': 0.001699568999999998}, {'diff': 0.001699695000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:38.063" endtime="20201030 15:54:38.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.077" level="INFO">${RESULT} = {'diff': [0.0017010279999999968, 0.0016995279999999988, 0.0016995279999999988, 0.0016995829999999976, 0.001699568999999998, 0.001699695000000001, 0.0016995139999999992, 0.001699680000000002, 0.0016997...</msg>
<status status="PASS" starttime="20201030 15:54:38.071" endtime="20201030 15:54:38.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.084" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:38.083" endtime="20201030 15:54:38.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.086" level="INFO">VALUE: [0.0017010279999999968, 0.0016995279999999988, 0.0016995279999999988, 0.0016995829999999976, 0.001699568999999998, 0.001699695000000001, 0.0016995139999999992, 0.001699680000000002, 0.0016997360000000003, 0.0016996530000000024, 0.0016996119999999962, 0.001699555999999998, 0.0016995269999999993, 0.0016995969999999971, 0.0016996809999999946, 0.001699458000000001, 0.0016993470000000038, 0.001699472999999993, 0.001699403000000002, 0.0016994999999999927, 0.001699375000000003, 0.0016994020000000026, 0.001699276999999999, 0.001699403000000002, 0.001699486, 0.001699486, 0.0016995139999999992, 0.0016995560000000048, 0.0016996249999999963, 0.001699597000000011, 0.001699667000000002, 0.0016996249999999963, 0.0016996119999999892, 0.0016995280000000057, 0.0016995550000000192, 0.0016995139999999853, 0.0016994589999999865, 0.001699514000000013, 0.0016996810000000084, 0.001699584000000004, 0.0016995830000000045, 0.0016994999999999927, 0.001699429999999974, 0.001699486, 0.0016995830000000045, 0.0016995830000000045, 0.0016996250000000102, 0.001699555999999991, 0.0016996390000000028, 0.0016996109999999898]</msg>
<status status="PASS" starttime="20201030 15:54:38.085" endtime="20201030 15:54:38.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.079" endtime="20201030 15:54:38.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.091" endtime="20201030 15:54:38.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.089" endtime="20201030 15:54:38.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.088" endtime="20201030 15:54:38.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.539" endtime="20201030 15:54:38.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.539" endtime="20201030 15:54:38.112"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.120" endtime="20201030 15:54:38.292"></status>
</kw>
<msg timestamp="20201030 15:54:38.293" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.118" endtime="20201030 15:54:38.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.295" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.294" endtime="20201030 15:54:38.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.296" endtime="20201030 15:54:38.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.116" endtime="20201030 15:54:38.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.114" endtime="20201030 15:54:38.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.305" endtime="20201030 15:54:38.595"></status>
</kw>
<msg timestamp="20201030 15:54:38.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019393819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021147819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.304" endtime="20201030 15:54:38.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019393819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021147819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.599" endtime="20201030 15:54:38.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.607" endtime="20201030 15:54:38.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.301" endtime="20201030 15:54:38.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.299" endtime="20201030 15:54:38.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:38.613" level="INFO">${PHILIP_RES} = [{'diff': 0.001754000000000002}, {'diff': 0.0017524870000000005}, {'diff': 0.0017524580000000019}, {'diff': 0.0017526249999999972}, {'diff': 0.0017527360000000047}, {'diff': 0.0017526390000000003}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:38.610" endtime="20201030 15:54:38.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.617" level="INFO">${RESULT} = {'diff': [0.001754000000000002, 0.0017524870000000005, 0.0017524580000000019, 0.0017526249999999972, 0.0017527360000000047, 0.0017526390000000003, 0.0017526380000000008, 0.0017527220000000052, 0.00175...</msg>
<status status="PASS" starttime="20201030 15:54:38.614" endtime="20201030 15:54:38.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.621" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:38.620" endtime="20201030 15:54:38.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.624" level="INFO">VALUE: [0.001754000000000002, 0.0017524870000000005, 0.0017524580000000019, 0.0017526249999999972, 0.0017527360000000047, 0.0017526390000000003, 0.0017526380000000008, 0.0017527220000000052, 0.0017526110000000011, 0.0017525139999999967, 0.0017525280000000032, 0.0017525420000000028, 0.0017526529999999998, 0.0017526120000000076, 0.0017525560000000023, 0.0017525409999999964, 0.0017525139999999967, 0.0017525280000000032, 0.0017526110000000011, 0.0017527079999999917, 0.0017525550000000029, 0.0017527359999999909, 0.0017525140000000106, 0.0017525689999999955, 0.0017526250000000076, 0.0017524440000000058, 0.0017524579999999984, 0.0017523750000000005, 0.001752443999999992, 0.0017526250000000076, 0.0017527499999999974, 0.0017525419999999958, 0.001752583000000002, 0.001752777000000011, 0.0017526519999999934, 0.0017525420000000236, 0.0017525969999999946, 0.0017527229999999838, 0.00175262499999998, 0.0017526120000000145, 0.0017526949999999986, 0.0017525409999999964, 0.0017526669999999855, 0.0017526390000000003, 0.0017526109999999873, 0.0017525280000000032, 0.0017525280000000032, 0.0017525560000000162, 0.001752583000000002, 0.0017526250000000076]</msg>
<status status="PASS" starttime="20201030 15:54:38.622" endtime="20201030 15:54:38.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.618" endtime="20201030 15:54:38.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.629" endtime="20201030 15:54:38.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.628" endtime="20201030 15:54:38.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.627" endtime="20201030 15:54:38.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.113" endtime="20201030 15:54:38.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.112" endtime="20201030 15:54:38.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.638" endtime="20201030 15:54:38.650"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:14.342" endtime="20201030 15:54:38.651" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:53.419" endtime="20201030 15:54:38.660"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.729" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:38.737" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:40.030" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:38.728" endtime="20201030 15:54:40.031"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.033" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:40.032" endtime="20201030 15:54:40.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.727" endtime="20201030 15:54:40.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.036" endtime="20201030 15:54:40.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.035" endtime="20201030 15:54:40.223"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.235" endtime="20201030 15:54:40.248"></status>
</kw>
<msg timestamp="20201030 15:54:40.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.234" endtime="20201030 15:54:40.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.251" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.249" endtime="20201030 15:54:40.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.254" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:40.252" endtime="20201030 15:54:40.254"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.231" endtime="20201030 15:54:40.255"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.229" endtime="20201030 15:54:40.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.228" endtime="20201030 15:54:40.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:40.259" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:40.258" endtime="20201030 15:54:40.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.256" endtime="20201030 15:54:40.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.227" endtime="20201030 15:54:40.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.226" endtime="20201030 15:54:40.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.262" endtime="20201030 15:54:40.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.225" endtime="20201030 15:54:40.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.265" endtime="20201030 15:54:40.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.224" endtime="20201030 15:54:40.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.725" endtime="20201030 15:54:40.267"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.273" endtime="20201030 15:54:40.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.272" endtime="20201030 15:54:40.293"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.306" endtime="20201030 15:54:40.318"></status>
</kw>
<msg timestamp="20201030 15:54:40.318" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.304" endtime="20201030 15:54:40.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.321" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.319" endtime="20201030 15:54:40.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.324" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:40.322" endtime="20201030 15:54:40.324"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.302" endtime="20201030 15:54:40.325"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.299" endtime="20201030 15:54:40.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.298" endtime="20201030 15:54:40.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:40.329" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:40.329" endtime="20201030 15:54:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.327" endtime="20201030 15:54:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.297" endtime="20201030 15:54:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.297" endtime="20201030 15:54:40.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.331" endtime="20201030 15:54:40.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.295" endtime="20201030 15:54:40.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.294" endtime="20201030 15:54:40.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.270" endtime="20201030 15:54:40.334"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.344" endtime="20201030 15:54:40.360"></status>
</kw>
<msg timestamp="20201030 15:54:40.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.343" endtime="20201030 15:54:40.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.362" endtime="20201030 15:54:40.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.364" endtime="20201030 15:54:40.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.339" endtime="20201030 15:54:40.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.337" endtime="20201030 15:54:40.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.374" endtime="20201030 15:54:40.677"></status>
</kw>
<msg timestamp="20201030 15:54:40.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063380083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063422569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.372" endtime="20201030 15:54:40.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063380083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063422569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.681" endtime="20201030 15:54:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.690" endtime="20201030 15:54:40.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.369" endtime="20201030 15:54:40.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.367" endtime="20201030 15:54:40.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.696" level="INFO">${RESULT} = [{'diff': 4.248599999999436e-05}, {'diff': 4.186099999999027e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.1790999999999356e-05}, {'diff': 4.180499999999199e-05}, {'diff': 4.176399999999969e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:40.693" endtime="20201030 15:54:40.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:40.701" level="INFO">${ACCURACY} = {'diff': [4.248599999999436e-05, 4.186099999999027e-05, 4.179199999999883e-05, 4.1790999999999356e-05, 4.180499999999199e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.172...</msg>
<status status="PASS" starttime="20201030 15:54:40.697" endtime="20201030 15:54:40.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.706" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:54:40.705" endtime="20201030 15:54:40.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.708" level="INFO">VALUE: [4.248599999999436e-05, 4.186099999999027e-05, 4.179199999999883e-05, 4.1790999999999356e-05, 4.180499999999199e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.172300000000739e-05, 4.180600000000534e-05, 4.180600000000534e-05, 4.177799999999232e-05, 4.1861000000004145e-05, 4.181999999999797e-05, 4.1805000000005865e-05, 4.180600000000534e-05, 4.179199999999883e-05, 4.1790999999999356e-05, 4.1819000000012374e-05, 4.180499999999199e-05, 4.179200000001271e-05, 4.180499999999199e-05, 4.180499999999199e-05, 4.179199999999883e-05, 4.1818999999998496e-05, 4.1790999999999356e-05, 4.1805000000005865e-05, 4.179199999999883e-05, 4.1818999999998496e-05, 4.179199999999883e-05, 4.179199999999883e-05, 4.179199999999883e-05, 4.1737000000000024e-05, 4.1818999999998496e-05, 4.1805000000005865e-05, 4.1805000000005865e-05, 4.1833000000005005e-05, 4.17780000000062e-05, 4.180600000000534e-05, 4.180599999999146e-05, 4.179199999999883e-05, 4.179199999999883e-05, 4.180599999999146e-05, 4.176399999999969e-05, 4.183299999999113e-05, 4.17780000000062e-05, 4.180599999999146e-05, 4.179199999999883e-05, 4.17780000000062e-05, 4.1790999999999356e-05]</msg>
<status status="PASS" starttime="20201030 15:54:40.707" endtime="20201030 15:54:40.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.701" endtime="20201030 15:54:40.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.713" endtime="20201030 15:54:40.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.711" endtime="20201030 15:54:40.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.710" endtime="20201030 15:54:40.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.335" endtime="20201030 15:54:40.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.335" endtime="20201030 15:54:40.733"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.742" endtime="20201030 15:54:40.758"></status>
</kw>
<msg timestamp="20201030 15:54:40.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.740" endtime="20201030 15:54:40.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.759" endtime="20201030 15:54:40.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.762" endtime="20201030 15:54:40.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.738" endtime="20201030 15:54:40.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.736" endtime="20201030 15:54:40.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.771" endtime="20201030 15:54:41.057"></status>
</kw>
<msg timestamp="20201030 15:54:41.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.769" endtime="20201030 15:54:41.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.061" endtime="20201030 15:54:41.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.069" endtime="20201030 15:54:41.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.767" endtime="20201030 15:54:41.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.765" endtime="20201030 15:54:41.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.076" level="INFO">${RESULT} = [{'diff': 4.241599999999998e-05}, {'diff': 4.1804999999998926e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.175000000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:41.073" endtime="20201030 15:54:41.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:41.081" level="INFO">${ACCURACY} = {'diff': [4.241599999999998e-05, 4.1804999999998926e-05, 4.18059999999984e-05, 4.176399999999969e-05, 4.18059999999984e-05, 4.175000000000012e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.1806000...</msg>
<status status="PASS" starttime="20201030 15:54:41.077" endtime="20201030 15:54:41.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.087" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:54:41.085" endtime="20201030 15:54:41.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.089" level="INFO">VALUE: [4.241599999999998e-05, 4.1804999999998926e-05, 4.18059999999984e-05, 4.176399999999969e-05, 4.18059999999984e-05, 4.175000000000012e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.180600000000187e-05, 4.1805000000002396e-05, 4.177799999999926e-05, 4.1846999999997636e-05, 4.175000000000012e-05, 4.179199999999883e-05, 4.179199999999883e-05, 4.1805000000002396e-05, 4.177799999999926e-05, 4.18059999999984e-05, 4.173600000000055e-05, 4.18059999999984e-05, 4.1833000000001536e-05, 4.1805000000002396e-05, 4.177799999999926e-05, 4.180600000000187e-05, 4.1776999999999787e-05, 4.18059999999984e-05, 4.1819000000001966e-05, 4.1818999999998496e-05, 4.1888999999999815e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.1805000000002396e-05, 4.180600000000187e-05, 4.1861000000000675e-05, 4.182000000000144e-05, 4.182000000000144e-05, 4.1804999999998926e-05, 4.186200000000015e-05, 4.18059999999984e-05, 4.1819000000001966e-05, 4.17920000000023e-05, 4.180600000000187e-05, 4.18059999999984e-05, 4.1832999999998066e-05, 4.17920000000023e-05, 4.1790999999999356e-05, 4.179199999999883e-05, 4.1818999999998496e-05, 4.1818999999998496e-05, 4.182000000000144e-05]</msg>
<status status="PASS" starttime="20201030 15:54:41.088" endtime="20201030 15:54:41.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.082" endtime="20201030 15:54:41.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.093" endtime="20201030 15:54:41.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.092" endtime="20201030 15:54:41.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.091" endtime="20201030 15:54:41.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.734" endtime="20201030 15:54:41.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.734" endtime="20201030 15:54:41.114"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.123" endtime="20201030 15:54:41.138"></status>
</kw>
<msg timestamp="20201030 15:54:41.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.121" endtime="20201030 15:54:41.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.140" endtime="20201030 15:54:41.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.143" endtime="20201030 15:54:41.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.119" endtime="20201030 15:54:41.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.117" endtime="20201030 15:54:41.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.152" endtime="20201030 15:54:41.457"></status>
</kw>
<msg timestamp="20201030 15:54:41.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021221958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.150" endtime="20201030 15:54:41.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021221958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.461" endtime="20201030 15:54:41.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.470" endtime="20201030 15:54:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.148" endtime="20201030 15:54:41.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.146" endtime="20201030 15:54:41.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.476" level="INFO">${RESULT} = [{'diff': 4.2431000000002494e-05}, {'diff': 4.1804999999998926e-05}, {'diff': 4.1804999999998926e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.1805000000002396e-05}, {'diff': 4.1875000000000245e-0...</msg>
<status status="PASS" starttime="20201030 15:54:41.473" endtime="20201030 15:54:41.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:41.480" level="INFO">${ACCURACY} = {'diff': [4.2431000000002494e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.179199999999883e-05, 4.1805000000002396e-05, 4.1875000000000245e-05, 4.17920000000023e-05, 4.1804999999998926e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:54:41.477" endtime="20201030 15:54:41.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.485" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:54:41.484" endtime="20201030 15:54:41.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.487" level="INFO">VALUE: [4.2431000000002494e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.179199999999883e-05, 4.1805000000002396e-05, 4.1875000000000245e-05, 4.17920000000023e-05, 4.1804999999998926e-05, 4.177799999999926e-05, 4.182000000000144e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.1819000000001966e-05, 4.1790999999999356e-05, 4.1776999999999787e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.184800000000058e-05, 4.182000000000144e-05, 4.182000000000144e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.1819000000001966e-05, 4.1847000000001106e-05, 4.1804999999998926e-05, 4.182000000000144e-05, 4.182000000000144e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.176399999999969e-05, 4.1861000000000675e-05, 4.1804999999998926e-05, 4.181999999999797e-05, 4.1818999999998496e-05, 4.1790999999999356e-05, 4.176399999999969e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.1776999999999787e-05, 4.1819000000001966e-05, 4.1790999999999356e-05, 4.1804999999998926e-05, 4.1790999999999356e-05, 4.1805000000002396e-05, 4.18059999999984e-05, 4.176399999999969e-05, 4.181999999999797e-05]</msg>
<status status="PASS" starttime="20201030 15:54:41.486" endtime="20201030 15:54:41.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.481" endtime="20201030 15:54:41.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.492" endtime="20201030 15:54:41.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.490" endtime="20201030 15:54:41.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.489" endtime="20201030 15:54:41.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.115" endtime="20201030 15:54:41.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.114" endtime="20201030 15:54:41.512"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.521" endtime="20201030 15:54:41.537"></status>
</kw>
<msg timestamp="20201030 15:54:41.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.519" endtime="20201030 15:54:41.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.539" endtime="20201030 15:54:41.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.542" endtime="20201030 15:54:41.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.517" endtime="20201030 15:54:41.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.515" endtime="20201030 15:54:41.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.551" endtime="20201030 15:54:41.835"></status>
</kw>
<msg timestamp="20201030 15:54:41.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:41.549" endtime="20201030 15:54:41.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:41.840" endtime="20201030 15:54:41.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.848" endtime="20201030 15:54:41.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.547" endtime="20201030 15:54:41.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.545" endtime="20201030 15:54:41.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.854" level="INFO">${RESULT} = [{'diff': 4.2402999999999885e-05}, {'diff': 4.1804999999998926e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.1818999999998496e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.179199999999883e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:41.851" endtime="20201030 15:54:41.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:41.858" level="INFO">${ACCURACY} = {'diff': [4.2402999999999885e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.1818999999998496e-05, 4.180600000000187e-05, 4.179199999999883e-05, 4.177799999999926e-05, 4.1805000000002396e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:54:41.855" endtime="20201030 15:54:41.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.863" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:54:41.862" endtime="20201030 15:54:41.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.865" level="INFO">VALUE: [4.2402999999999885e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.1818999999998496e-05, 4.180600000000187e-05, 4.179199999999883e-05, 4.177799999999926e-05, 4.1805000000002396e-05, 4.1790999999999356e-05, 4.183400000000101e-05, 4.18059999999984e-05, 4.176399999999969e-05, 4.1805000000002396e-05, 4.1819000000001966e-05, 4.17920000000023e-05, 4.17920000000023e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.1819000000001966e-05, 4.1790999999999356e-05, 4.1805000000002396e-05, 4.180600000000187e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.1804999999998926e-05, 4.1832999999998066e-05, 4.183400000000101e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.1805000000002396e-05, 4.1804999999998926e-05, 4.182000000000144e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.1832999999998066e-05, 4.1847000000001106e-05, 4.179199999999883e-05, 4.18059999999984e-05, 4.1790999999999356e-05, 4.1819000000001966e-05, 4.1804999999998926e-05, 4.179199999999883e-05, 4.1818999999998496e-05, 4.18059999999984e-05, 4.1805000000002396e-05, 4.1804999999998926e-05, 4.1818999999998496e-05, 4.18059999999984e-05, 4.179199999999883e-05]</msg>
<status status="PASS" starttime="20201030 15:54:41.864" endtime="20201030 15:54:41.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.859" endtime="20201030 15:54:41.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.871" endtime="20201030 15:54:41.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.869" endtime="20201030 15:54:41.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.868" endtime="20201030 15:54:41.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.513" endtime="20201030 15:54:41.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.513" endtime="20201030 15:54:41.892"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.900" endtime="20201030 15:54:41.916"></status>
</kw>
<msg timestamp="20201030 15:54:41.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.899" endtime="20201030 15:54:41.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.918" endtime="20201030 15:54:41.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.920" endtime="20201030 15:54:41.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.896" endtime="20201030 15:54:41.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.894" endtime="20201030 15:54:41.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.929" endtime="20201030 15:54:42.215"></status>
</kw>
<msg timestamp="20201030 15:54:42.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.928" endtime="20201030 15:54:42.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.219" endtime="20201030 15:54:42.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.227" endtime="20201030 15:54:42.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.925" endtime="20201030 15:54:42.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.923" endtime="20201030 15:54:42.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.233" level="INFO">${RESULT} = [{'diff': 4.2444999999998595e-05}, {'diff': 4.1818999999998496e-05}, {'diff': 4.1819000000001966e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.1833000000001536e-05}, {'diff': 4.1819000000001966e-0...</msg>
<status status="PASS" starttime="20201030 15:54:42.230" endtime="20201030 15:54:42.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:42.238" level="INFO">${ACCURACY} = {'diff': [4.2444999999998595e-05, 4.1818999999998496e-05, 4.1819000000001966e-05, 4.180600000000187e-05, 4.1833000000001536e-05, 4.1819000000001966e-05, 4.17920000000023e-05, 4.1875000000000245e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:54:42.234" endtime="20201030 15:54:42.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.243" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:54:42.242" endtime="20201030 15:54:42.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.245" level="INFO">VALUE: [4.2444999999998595e-05, 4.1818999999998496e-05, 4.1819000000001966e-05, 4.180600000000187e-05, 4.1833000000001536e-05, 4.1819000000001966e-05, 4.17920000000023e-05, 4.1875000000000245e-05, 4.180600000000187e-05, 4.1819000000001966e-05, 4.17920000000023e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.177799999999926e-05, 4.1832999999998066e-05, 4.181999999999797e-05, 4.182000000000144e-05, 4.1790999999999356e-05, 4.18059999999984e-05, 4.186200000000015e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1790999999999356e-05, 4.182000000000144e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.182000000000144e-05, 4.17920000000023e-05, 4.18059999999984e-05, 4.179199999999883e-05, 4.1804999999998926e-05, 4.1819000000001966e-05, 4.1819000000001966e-05, 4.179199999999883e-05, 4.182000000000144e-05, 4.180600000000187e-05, 4.1790999999999356e-05, 4.1804999999998926e-05, 4.179199999999883e-05, 4.1861000000000675e-05, 4.180600000000187e-05, 4.1790999999999356e-05, 4.1790999999999356e-05, 4.1819000000001966e-05, 4.1805000000002396e-05, 4.182000000000144e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.182000000000144e-05, 4.1818999999998496e-05]</msg>
<status status="PASS" starttime="20201030 15:54:42.244" endtime="20201030 15:54:42.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.239" endtime="20201030 15:54:42.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.250" endtime="20201030 15:54:42.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.248" endtime="20201030 15:54:42.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.247" endtime="20201030 15:54:42.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.892" endtime="20201030 15:54:42.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.892" endtime="20201030 15:54:42.271"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.279" endtime="20201030 15:54:42.295"></status>
</kw>
<msg timestamp="20201030 15:54:42.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.278" endtime="20201030 15:54:42.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.297" endtime="20201030 15:54:42.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.299" endtime="20201030 15:54:42.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.275" endtime="20201030 15:54:42.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.273" endtime="20201030 15:54:42.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.308" endtime="20201030 15:54:42.594"></status>
</kw>
<msg timestamp="20201030 15:54:42.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.307" endtime="20201030 15:54:42.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.599" endtime="20201030 15:54:42.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.608" endtime="20201030 15:54:42.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.304" endtime="20201030 15:54:42.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.302" endtime="20201030 15:54:42.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.615" level="INFO">${RESULT} = [{'diff': 4.242999999999955e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.1804999999998926e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.182000000000144e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:42.611" endtime="20201030 15:54:42.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:42.620" level="INFO">${ACCURACY} = {'diff': [4.242999999999955e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1818999999998496e-05, 4.1804999999998926e-05, 4.180...</msg>
<status status="PASS" starttime="20201030 15:54:42.616" endtime="20201030 15:54:42.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.625" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:54:42.623" endtime="20201030 15:54:42.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.627" level="INFO">VALUE: [4.242999999999955e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1818999999998496e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.176400000000316e-05, 4.179199999999883e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.179199999999883e-05, 4.181999999999797e-05, 4.182000000000144e-05, 4.1804999999998926e-05, 4.1819000000001966e-05, 4.1776999999999787e-05, 4.180600000000187e-05, 4.177799999999926e-05, 4.1790999999999356e-05, 4.1804999999998926e-05, 4.1818999999998496e-05, 4.1819000000001966e-05, 4.1776999999999787e-05, 4.181999999999797e-05, 4.1804999999998926e-05, 4.1861000000000675e-05, 4.18059999999984e-05, 4.1819000000001966e-05, 4.183400000000101e-05, 4.175000000000012e-05, 4.1818999999998496e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.177799999999926e-05, 4.1818999999998496e-05, 4.182000000000144e-05, 4.18059999999984e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.179199999999883e-05, 4.1791000000002826e-05, 4.180600000000187e-05, 4.1805000000002396e-05, 4.1804999999998926e-05]</msg>
<status status="PASS" starttime="20201030 15:54:42.626" endtime="20201030 15:54:42.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.621" endtime="20201030 15:54:42.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.632" endtime="20201030 15:54:42.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.630" endtime="20201030 15:54:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.629" endtime="20201030 15:54:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.272" endtime="20201030 15:54:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.271" endtime="20201030 15:54:42.653"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.661" endtime="20201030 15:54:42.678"></status>
</kw>
<msg timestamp="20201030 15:54:42.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.659" endtime="20201030 15:54:42.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.679" endtime="20201030 15:54:42.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.682" endtime="20201030 15:54:42.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.657" endtime="20201030 15:54:42.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.655" endtime="20201030 15:54:42.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.691" endtime="20201030 15:54:42.978"></status>
</kw>
<msg timestamp="20201030 15:54:42.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.689" endtime="20201030 15:54:42.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.982" endtime="20201030 15:54:42.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.990" endtime="20201030 15:54:42.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.687" endtime="20201030 15:54:42.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.685" endtime="20201030 15:54:42.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.997" level="INFO">${RESULT} = [{'diff': 4.2416999999999455e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.17920000000023e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.1819000000001966e-05}, {'diff': 4.177799999999926e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:42.994" endtime="20201030 15:54:42.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:43.001" level="INFO">${ACCURACY} = {'diff': [4.2416999999999455e-05, 4.18059999999984e-05, 4.17920000000023e-05, 4.18059999999984e-05, 4.1819000000001966e-05, 4.177799999999926e-05, 4.1804999999998926e-05, 4.1790999999999356e-05, 4.180...</msg>
<status status="PASS" starttime="20201030 15:54:42.998" endtime="20201030 15:54:43.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.005" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:54:43.004" endtime="20201030 15:54:43.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.008" level="INFO">VALUE: [4.2416999999999455e-05, 4.18059999999984e-05, 4.17920000000023e-05, 4.18059999999984e-05, 4.1819000000001966e-05, 4.177799999999926e-05, 4.1804999999998926e-05, 4.1790999999999356e-05, 4.1805000000002396e-05, 4.180600000000187e-05, 4.181999999999797e-05, 4.17920000000023e-05, 4.180600000000187e-05, 4.1833000000001536e-05, 4.177800000000273e-05, 4.1804999999998926e-05, 4.17920000000023e-05, 4.1804999999998926e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1791000000002826e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.1819000000001966e-05, 4.1805000000002396e-05, 4.1818999999998496e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.182000000000144e-05, 4.180600000000187e-05, 4.183400000000101e-05, 4.1791000000002826e-05, 4.18059999999984e-05, 4.179199999999883e-05, 4.181999999999797e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.1790999999999356e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.1833000000001536e-05, 4.180600000000187e-05, 4.1804999999998926e-05, 4.1819000000001966e-05, 4.1818999999998496e-05, 4.18059999999984e-05, 4.180600000000187e-05, 4.182000000000144e-05, 4.1804999999998926e-05]</msg>
<status status="PASS" starttime="20201030 15:54:43.006" endtime="20201030 15:54:43.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.002" endtime="20201030 15:54:43.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.013" endtime="20201030 15:54:43.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.012" endtime="20201030 15:54:43.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.011" endtime="20201030 15:54:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.653" endtime="20201030 15:54:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.653" endtime="20201030 15:54:43.034"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.043" endtime="20201030 15:54:43.059"></status>
</kw>
<msg timestamp="20201030 15:54:43.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.041" endtime="20201030 15:54:43.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.060" endtime="20201030 15:54:43.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.063" endtime="20201030 15:54:43.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.039" endtime="20201030 15:54:43.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.037" endtime="20201030 15:54:43.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.071" endtime="20201030 15:54:43.356"></status>
</kw>
<msg timestamp="20201030 15:54:43.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021297653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021340083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.070" endtime="20201030 15:54:43.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021297653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021340083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.361" endtime="20201030 15:54:43.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.369" endtime="20201030 15:54:43.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.067" endtime="20201030 15:54:43.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.066" endtime="20201030 15:54:43.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.375" level="INFO">${RESULT} = [{'diff': 4.242999999999955e-05}, {'diff': 4.183400000000101e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.180600000000187e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:43.372" endtime="20201030 15:54:43.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:43.380" level="INFO">${ACCURACY} = {'diff': [4.242999999999955e-05, 4.183400000000101e-05, 4.18059999999984e-05, 4.179199999999883e-05, 4.176399999999969e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.176399999999969e-05, 4.18049...</msg>
<status status="PASS" starttime="20201030 15:54:43.376" endtime="20201030 15:54:43.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.385" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:54:43.384" endtime="20201030 15:54:43.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.387" level="INFO">VALUE: [4.242999999999955e-05, 4.183400000000101e-05, 4.18059999999984e-05, 4.179199999999883e-05, 4.176399999999969e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.176399999999969e-05, 4.1804999999998926e-05, 4.180600000000187e-05, 4.18059999999984e-05, 4.176300000000022e-05, 4.184800000000058e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.182000000000144e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.1819000000001966e-05, 4.1832999999998066e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1818999999998496e-05, 4.183400000000101e-05, 4.1833000000001536e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.181999999999797e-05, 4.179199999999883e-05, 4.1790999999999356e-05, 4.179199999999883e-05, 4.18059999999984e-05, 4.1875000000000245e-05, 4.181999999999797e-05, 4.177799999999926e-05, 4.1888999999999815e-05, 4.1833000000001536e-05, 4.179199999999883e-05, 4.179199999999883e-05, 4.1861000000000675e-05, 4.177799999999926e-05, 4.1805000000002396e-05, 4.1804999999998926e-05, 4.1818999999998496e-05, 4.180600000000187e-05, 4.183399999999754e-05, 4.177800000000273e-05]</msg>
<status status="PASS" starttime="20201030 15:54:43.386" endtime="20201030 15:54:43.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.381" endtime="20201030 15:54:43.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.392" endtime="20201030 15:54:43.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.391" endtime="20201030 15:54:43.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.390" endtime="20201030 15:54:43.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.035" endtime="20201030 15:54:43.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.035" endtime="20201030 15:54:43.413"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.422" endtime="20201030 15:54:43.438"></status>
</kw>
<msg timestamp="20201030 15:54:43.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.420" endtime="20201030 15:54:43.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.439" endtime="20201030 15:54:43.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.442" endtime="20201030 15:54:43.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.418" endtime="20201030 15:54:43.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.416" endtime="20201030 15:54:43.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.451" endtime="20201030 15:54:43.738"></status>
</kw>
<msg timestamp="20201030 15:54:43.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021334514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021376944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.449" endtime="20201030 15:54:43.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021334514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021376944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.742" endtime="20201030 15:54:43.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.750" endtime="20201030 15:54:43.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.447" endtime="20201030 15:54:43.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.445" endtime="20201030 15:54:43.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.757" level="INFO">${RESULT} = [{'diff': 4.242999999999955e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.182000000000144e-05}, {'diff': 4.1805000000002396e-05}, {'diff': 4.18059999999984e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:43.754" endtime="20201030 15:54:43.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:43.761" level="INFO">${ACCURACY} = {'diff': [4.242999999999955e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.182000000000144e-05, 4.1805000000002396e-05, 4.18059999999984e-05, 4.175000000000012e-05, 4.18059999999984e-05, 4.18200...</msg>
<status status="PASS" starttime="20201030 15:54:43.758" endtime="20201030 15:54:43.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.765" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:54:43.764" endtime="20201030 15:54:43.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.768" level="INFO">VALUE: [4.242999999999955e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.182000000000144e-05, 4.1805000000002396e-05, 4.18059999999984e-05, 4.175000000000012e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.18059999999984e-05, 4.1818999999998496e-05, 4.182000000000144e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1805000000002396e-05, 4.1776999999999787e-05, 4.1805000000002396e-05, 4.177800000000273e-05, 4.1791000000002826e-05, 4.177800000000273e-05, 4.1860999999997206e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.1861000000000675e-05, 4.1804999999998926e-05, 4.176399999999969e-05, 4.181999999999797e-05, 4.18059999999984e-05, 4.1790999999999356e-05, 4.179199999999883e-05, 4.179199999999883e-05, 4.17920000000023e-05, 4.1805000000002396e-05, 4.1847000000001106e-05, 4.1805000000002396e-05, 4.180600000000187e-05, 4.1819000000001966e-05, 4.1847000000001106e-05, 4.1832999999998066e-05, 4.1804999999998926e-05, 4.1805000000002396e-05, 4.180600000000187e-05, 4.17920000000023e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.17920000000023e-05, 4.180600000000187e-05, 4.1860999999997206e-05, 4.1804999999998926e-05, 4.1804999999998926e-05]</msg>
<status status="PASS" starttime="20201030 15:54:43.766" endtime="20201030 15:54:43.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.762" endtime="20201030 15:54:43.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.780" endtime="20201030 15:54:43.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.778" endtime="20201030 15:54:43.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.777" endtime="20201030 15:54:43.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.414" endtime="20201030 15:54:43.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.414" endtime="20201030 15:54:43.801"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.809" endtime="20201030 15:54:43.828"></status>
</kw>
<msg timestamp="20201030 15:54:43.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.808" endtime="20201030 15:54:43.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.830" endtime="20201030 15:54:43.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.832" endtime="20201030 15:54:43.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.805" endtime="20201030 15:54:43.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.803" endtime="20201030 15:54:43.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.841" endtime="20201030 15:54:44.127"></status>
</kw>
<msg timestamp="20201030 15:54:44.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.839" endtime="20201030 15:54:44.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.132" endtime="20201030 15:54:44.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.140" endtime="20201030 15:54:44.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.837" endtime="20201030 15:54:44.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.835" endtime="20201030 15:54:44.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.146" level="INFO">${RESULT} = [{'diff': 4.2459000000001634e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.1875000000000245e-05}, {'diff': 4.175000000000012e-05}, {'diff': 4.180600000000187e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:44.143" endtime="20201030 15:54:44.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:44.151" level="INFO">${ACCURACY} = {'diff': [4.2459000000001634e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.1875000000000245e-05, 4.175000000000012e-05, 4.180600000000187e-05, 4.176300000000022e-05, 4.17920000000023e-05, 4.180...</msg>
<status status="PASS" starttime="20201030 15:54:44.147" endtime="20201030 15:54:44.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.155" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:54:44.154" endtime="20201030 15:54:44.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.157" level="INFO">VALUE: [4.2459000000001634e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.1875000000000245e-05, 4.175000000000012e-05, 4.180600000000187e-05, 4.176300000000022e-05, 4.17920000000023e-05, 4.18059999999984e-05, 4.1846999999997636e-05, 4.1818999999998496e-05, 4.181999999999797e-05, 4.177799999999926e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1832999999998066e-05, 4.1861000000000675e-05, 4.179199999999883e-05, 4.1819000000001966e-05, 4.1818999999998496e-05, 4.1818999999998496e-05, 4.18059999999984e-05, 4.1805000000002396e-05, 4.180600000000187e-05, 4.18059999999984e-05, 4.18059999999984e-05, 4.1790999999999356e-05, 4.1790999999999356e-05, 4.175000000000012e-05, 4.183400000000101e-05, 4.1819000000001966e-05, 4.176399999999969e-05, 4.180600000000187e-05, 4.183400000000101e-05, 4.175000000000012e-05, 4.182000000000144e-05, 4.1819000000001966e-05, 4.180600000000187e-05, 4.182000000000144e-05, 4.1790999999999356e-05, 4.180600000000187e-05, 4.18059999999984e-05, 4.1818999999998496e-05, 4.1805000000002396e-05, 4.182000000000144e-05, 4.1833000000001536e-05, 4.1819000000001966e-05, 4.1861000000000675e-05, 4.1804999999998926e-05, 4.1804999999998926e-05]</msg>
<status status="PASS" starttime="20201030 15:54:44.156" endtime="20201030 15:54:44.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.151" endtime="20201030 15:54:44.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.163" endtime="20201030 15:54:44.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.162" endtime="20201030 15:54:44.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.160" endtime="20201030 15:54:44.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.802" endtime="20201030 15:54:44.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.801" endtime="20201030 15:54:44.184"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.192" endtime="20201030 15:54:44.208"></status>
</kw>
<msg timestamp="20201030 15:54:44.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.191" endtime="20201030 15:54:44.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.210" endtime="20201030 15:54:44.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.212" endtime="20201030 15:54:44.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.188" endtime="20201030 15:54:44.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.186" endtime="20201030 15:54:44.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.221" endtime="20201030 15:54:44.507"></status>
</kw>
<msg timestamp="20201030 15:54:44.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021498194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.220" endtime="20201030 15:54:44.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021498194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.511" endtime="20201030 15:54:44.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.519" endtime="20201030 15:54:44.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.217" endtime="20201030 15:54:44.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.216" endtime="20201030 15:54:44.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.526" level="INFO">${RESULT} = [{'diff': 4.2444999999998595e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.205600000000212e-05}, {'diff': 4.1861000000000675e-05}, {'diff': 4.1818999999998496e-05}, {'diff': 4.2110999999997456e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:44.523" endtime="20201030 15:54:44.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:44.531" level="INFO">${ACCURACY} = {'diff': [4.2444999999998595e-05, 4.18059999999984e-05, 4.205600000000212e-05, 4.1861000000000675e-05, 4.1818999999998496e-05, 4.2110999999997456e-05, 4.2054999999999176e-05, 4.1804999999998926e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:54:44.527" endtime="20201030 15:54:44.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.535" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:54:44.534" endtime="20201030 15:54:44.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.538" level="INFO">VALUE: [4.2444999999998595e-05, 4.18059999999984e-05, 4.205600000000212e-05, 4.1861000000000675e-05, 4.1818999999998496e-05, 4.2110999999997456e-05, 4.2054999999999176e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.205599999999865e-05, 4.18059999999984e-05, 4.225000000000062e-05, 4.1847000000001106e-05, 4.18059999999984e-05, 4.226400000000019e-05, 4.2111000000000925e-05, 4.18059999999984e-05, 4.182000000000144e-05, 4.1805000000002396e-05, 4.182000000000144e-05, 4.1804999999998926e-05, 4.1819000000001966e-05, 4.1861000000000675e-05, 4.17920000000023e-05, 4.198599999999733e-05, 4.2125000000000495e-05, 4.1805000000002396e-05, 4.2027000000000037e-05, 4.1861000000000675e-05, 4.1805000000002396e-05, 4.204200000000255e-05, 4.216599999999973e-05, 4.197200000000123e-05, 4.180600000000187e-05, 4.1875000000000245e-05, 4.2153000000003105e-05, 4.1819000000001966e-05, 4.192999999999905e-05, 4.1875000000000245e-05, 4.2097000000001356e-05, 4.180600000000187e-05, 4.2166999999999205e-05, 4.2111000000000925e-05, 4.1818999999998496e-05, 4.1973000000000704e-05, 4.1805000000002396e-05, 4.1804999999998926e-05, 4.1804999999998926e-05, 4.222200000000148e-05, 4.1888999999999815e-05]</msg>
<status status="PASS" starttime="20201030 15:54:44.536" endtime="20201030 15:54:44.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.532" endtime="20201030 15:54:44.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.543" endtime="20201030 15:54:44.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.541" endtime="20201030 15:54:44.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.540" endtime="20201030 15:54:44.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.185" endtime="20201030 15:54:44.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.184" endtime="20201030 15:54:44.564"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.572" endtime="20201030 15:54:44.588"></status>
</kw>
<msg timestamp="20201030 15:54:44.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.571" endtime="20201030 15:54:44.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.590" endtime="20201030 15:54:44.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.592" endtime="20201030 15:54:44.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.568" endtime="20201030 15:54:44.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.566" endtime="20201030 15:54:44.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.601" endtime="20201030 15:54:44.892"></status>
</kw>
<msg timestamp="20201030 15:54:44.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.600" endtime="20201030 15:54:44.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.896" endtime="20201030 15:54:44.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.904" endtime="20201030 15:54:44.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.597" endtime="20201030 15:54:44.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.595" endtime="20201030 15:54:44.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.911" level="INFO">${RESULT} = [{'diff': 4.355600000000015e-05}, {'diff': 4.272199999999851e-05}, {'diff': 4.2861000000001676e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.24999999999974e-05}, {'diff': 4.250000000000087e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:44.907" endtime="20201030 15:54:44.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:44.915" level="INFO">${ACCURACY} = {'diff': [4.355600000000015e-05, 4.272199999999851e-05, 4.2861000000001676e-05, 4.279199999999983e-05, 4.24999999999974e-05, 4.250000000000087e-05, 4.273600000000155e-05, 4.2903000000000385e-05, 4.284...</msg>
<status status="PASS" starttime="20201030 15:54:44.912" endtime="20201030 15:54:44.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.919" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:54:44.918" endtime="20201030 15:54:44.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.922" level="INFO">VALUE: [4.355600000000015e-05, 4.272199999999851e-05, 4.2861000000001676e-05, 4.279199999999983e-05, 4.24999999999974e-05, 4.250000000000087e-05, 4.273600000000155e-05, 4.2903000000000385e-05, 4.2846999999998636e-05, 4.254199999999958e-05, 4.272199999999851e-05, 4.230600000000237e-05, 4.3096999999998886e-05, 4.2277000000000287e-05, 4.3194999999999345e-05, 4.31800000000003e-05, 4.2569000000002716e-05, 4.273599999999808e-05, 4.24860000000013e-05, 4.3153000000000635e-05, 4.273600000000155e-05, 4.2860999999998206e-05, 4.2375000000000745e-05, 4.254199999999958e-05, 4.250000000000087e-05, 4.305599999999965e-05, 4.281999999999897e-05, 4.275000000000112e-05, 4.291600000000048e-05, 4.2554999999999676e-05, 4.2973000000001704e-05, 4.279199999999983e-05, 4.3194999999999345e-05, 4.29860000000018e-05, 4.275000000000112e-05, 4.2541000000000107e-05, 4.2930999999999525e-05, 4.273599999999808e-05, 4.250000000000087e-05, 4.2625000000000995e-05, 4.304099999999714e-05, 4.2874999999997776e-05, 4.277799999999679e-05, 4.3139000000001065e-05, 4.3111000000001926e-05, 4.248599999999783e-05, 4.28059999999994e-05, 4.3055000000000176e-05, 4.3055000000000176e-05, 4.2554999999999676e-05]</msg>
<status status="PASS" starttime="20201030 15:54:44.920" endtime="20201030 15:54:44.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.916" endtime="20201030 15:54:44.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.926" endtime="20201030 15:54:44.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.925" endtime="20201030 15:54:44.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.924" endtime="20201030 15:54:44.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.564" endtime="20201030 15:54:44.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.564" endtime="20201030 15:54:44.947"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.956" endtime="20201030 15:54:44.973"></status>
</kw>
<msg timestamp="20201030 15:54:44.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.954" endtime="20201030 15:54:44.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.974" endtime="20201030 15:54:44.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.977" endtime="20201030 15:54:44.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.952" endtime="20201030 15:54:44.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.950" endtime="20201030 15:54:44.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.986" endtime="20201030 15:54:45.271"></status>
</kw>
<msg timestamp="20201030 15:54:45.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.984" endtime="20201030 15:54:45.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.275" endtime="20201030 15:54:45.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.283" endtime="20201030 15:54:45.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.981" endtime="20201030 15:54:45.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.980" endtime="20201030 15:54:45.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.290" level="INFO">${RESULT} = [{'diff': 4.3917000000000955e-05}, {'diff': 4.347199999999926e-05}, {'diff': 4.420800000000044e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.39999999999989e-05}, {'diff': 4.404200000000108e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:45.287" endtime="20201030 15:54:45.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:45.294" level="INFO">${ACCURACY} = {'diff': [4.3917000000000955e-05, 4.347199999999926e-05, 4.420800000000044e-05, 4.373599999999908e-05, 4.39999999999989e-05, 4.404200000000108e-05, 4.3611000000002426e-05, 4.3431000000000025e-05, 4.36...</msg>
<status status="PASS" starttime="20201030 15:54:45.291" endtime="20201030 15:54:45.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.299" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:54:45.298" endtime="20201030 15:54:45.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.301" level="INFO">VALUE: [4.3917000000000955e-05, 4.347199999999926e-05, 4.420800000000044e-05, 4.373599999999908e-05, 4.39999999999989e-05, 4.404200000000108e-05, 4.3611000000002426e-05, 4.3431000000000025e-05, 4.3653000000001135e-05, 4.358400000000276e-05, 4.423600000000305e-05, 4.392999999999758e-05, 4.3653000000001135e-05, 4.348599999999883e-05, 4.3360999999998706e-05, 4.3291000000000857e-05, 4.3972999999999235e-05, 4.420800000000044e-05, 4.3582999999999816e-05, 4.3625000000001996e-05, 4.3653000000001135e-05, 4.3667000000000705e-05, 4.377800000000126e-05, 4.422200000000001e-05, 4.423599999999958e-05, 4.366600000000123e-05, 4.4124999999999026e-05, 4.3374999999998276e-05, 4.3917000000000955e-05, 4.354200000000058e-05, 4.400000000000237e-05, 4.397199999999976e-05, 4.3569000000000246e-05, 4.3291000000000857e-05, 4.3860999999999206e-05, 4.3846999999999636e-05, 4.343000000000055e-05, 4.370799999999994e-05, 4.3403000000000885e-05, 4.377799999999779e-05, 4.3361000000002176e-05, 4.416599999999826e-05, 4.3709000000002884e-05, 4.355600000000015e-05, 4.374999999999865e-05, 4.416600000000173e-05, 4.39999999999989e-05, 4.327800000000076e-05, 4.34999999999984e-05, 4.394400000000062e-05]</msg>
<status status="PASS" starttime="20201030 15:54:45.300" endtime="20201030 15:54:45.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.295" endtime="20201030 15:54:45.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.307" endtime="20201030 15:54:45.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.305" endtime="20201030 15:54:45.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.304" endtime="20201030 15:54:45.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.948" endtime="20201030 15:54:45.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.948" endtime="20201030 15:54:45.329"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.340" endtime="20201030 15:54:45.357"></status>
</kw>
<msg timestamp="20201030 15:54:45.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.338" endtime="20201030 15:54:45.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.359" endtime="20201030 15:54:45.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.361" endtime="20201030 15:54:45.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.334" endtime="20201030 15:54:45.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.332" endtime="20201030 15:54:45.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.370" endtime="20201030 15:54:45.656"></status>
</kw>
<msg timestamp="20201030 15:54:45.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026594292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026639444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.369" endtime="20201030 15:54:45.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026594292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026639444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.660" endtime="20201030 15:54:45.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.668" endtime="20201030 15:54:45.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.366" endtime="20201030 15:54:45.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.365" endtime="20201030 15:54:45.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.675" level="INFO">${RESULT} = [{'diff': 4.515200000000316e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.4555000000001677e-05}, {'diff': 4.4709000000000415e-05}, {'diff': 4.454099999999864e-05}, {'diff': 4.4431000000001025e-05...</msg>
<status status="PASS" starttime="20201030 15:54:45.672" endtime="20201030 15:54:45.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:45.680" level="INFO">${ACCURACY} = {'diff': [4.515200000000316e-05, 4.4610999999999956e-05, 4.4555000000001677e-05, 4.4709000000000415e-05, 4.454099999999864e-05, 4.4431000000001025e-05, 4.4389000000002315e-05, 4.5125000000000026e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:45.676" endtime="20201030 15:54:45.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.684" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:54:45.683" endtime="20201030 15:54:45.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.687" level="INFO">VALUE: [4.515200000000316e-05, 4.4610999999999956e-05, 4.4555000000001677e-05, 4.4709000000000415e-05, 4.454099999999864e-05, 4.4431000000001025e-05, 4.4389000000002315e-05, 4.5125000000000026e-05, 4.4360999999999706e-05, 4.5167000000002205e-05, 4.49999999999999e-05, 4.517999999999883e-05, 4.466599999999876e-05, 4.502799999999904e-05, 4.5097000000000886e-05, 4.479099999999889e-05, 4.479200000000183e-05, 4.473600000000008e-05, 4.474999999999965e-05, 4.5111000000000456e-05, 4.429099999999839e-05, 4.51800000000023e-05, 4.51939999999984e-05, 4.4986999999999805e-05, 4.454199999999811e-05, 4.479199999999836e-05, 4.5181000000001775e-05, 4.479199999999836e-05, 4.491599999999901e-05, 4.523599999999711e-05, 4.457000000000072e-05, 4.423599999999958e-05, 4.441600000000198e-05, 4.4610999999999956e-05, 4.4902999999998916e-05, 4.444400000000112e-05, 4.5111000000000456e-05, 4.459799999999986e-05, 4.479200000000183e-05, 4.4360999999999706e-05, 4.498600000000033e-05, 4.5195000000001345e-05, 4.498600000000033e-05, 4.466599999999876e-05, 4.497199999999729e-05, 4.5083000000001316e-05, 4.454199999999811e-05, 4.429199999999786e-05, 4.430599999999743e-05, 4.5166999999998736e-05]</msg>
<status status="PASS" starttime="20201030 15:54:45.685" endtime="20201030 15:54:45.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.681" endtime="20201030 15:54:45.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.691" endtime="20201030 15:54:45.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.690" endtime="20201030 15:54:45.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.689" endtime="20201030 15:54:45.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.330" endtime="20201030 15:54:45.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.329" endtime="20201030 15:54:45.712"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.721" endtime="20201030 15:54:45.737"></status>
</kw>
<msg timestamp="20201030 15:54:45.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.719" endtime="20201030 15:54:45.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.738" endtime="20201030 15:54:45.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.741" endtime="20201030 15:54:45.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.717" endtime="20201030 15:54:45.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.715" endtime="20201030 15:54:45.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.750" endtime="20201030 15:54:46.037"></status>
</kw>
<msg timestamp="20201030 15:54:46.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02142675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:45.748" endtime="20201030 15:54:46.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02142675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:46.041" endtime="20201030 15:54:46.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.049" endtime="20201030 15:54:46.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.746" endtime="20201030 15:54:46.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.744" endtime="20201030 15:54:46.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.058" level="INFO">${RESULT} = [{'diff': 4.594400000000262e-05}, {'diff': 4.548600000000083e-05}, {'diff': 4.6097000000001886e-05}, {'diff': 4.548599999999736e-05}, {'diff': 4.606899999999928e-05}, {'diff': 4.6166999999999736e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:46.052" endtime="20201030 15:54:46.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:46.062" level="INFO">${ACCURACY} = {'diff': [4.594400000000262e-05, 4.548600000000083e-05, 4.6097000000001886e-05, 4.548599999999736e-05, 4.606899999999928e-05, 4.6166999999999736e-05, 4.547200000000126e-05, 4.597200000000176e-05, 4.61...</msg>
<status status="PASS" starttime="20201030 15:54:46.059" endtime="20201030 15:54:46.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.068" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:54:46.066" endtime="20201030 15:54:46.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.070" level="INFO">VALUE: [4.594400000000262e-05, 4.548600000000083e-05, 4.6097000000001886e-05, 4.548599999999736e-05, 4.606899999999928e-05, 4.6166999999999736e-05, 4.547200000000126e-05, 4.597200000000176e-05, 4.6125000000001026e-05, 4.555599999999868e-05, 4.529099999999939e-05, 4.561200000000043e-05, 4.5875000000000776e-05, 4.5861000000001206e-05, 4.5487000000000305e-05, 4.5861000000001206e-05, 4.604100000000014e-05, 4.53060000000019e-05, 4.5445000000001595e-05, 4.561099999999749e-05, 4.5361000000000706e-05, 4.5361000000000706e-05, 4.558299999999835e-05, 4.577799999999979e-05, 4.5417000000002455e-05, 4.529100000000286e-05, 4.579199999999936e-05, 4.5402999999999416e-05, 4.530599999999843e-05, 4.623599999999811e-05, 4.590200000000044e-05, 4.604199999999961e-05, 4.598600000000133e-05, 4.575000000000065e-05, 4.591600000000001e-05, 4.616600000000026e-05, 4.58329999999986e-05, 4.6139000000000596e-05, 4.6125000000001026e-05, 4.605499999999971e-05, 4.558400000000129e-05, 4.554099999999964e-05, 4.5611000000000956e-05, 4.577799999999979e-05, 4.5930999999999056e-05, 4.5597000000001386e-05, 4.598600000000133e-05, 4.584800000000111e-05, 4.536099999999724e-05, 4.548600000000083e-05]</msg>
<status status="PASS" starttime="20201030 15:54:46.069" endtime="20201030 15:54:46.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.063" endtime="20201030 15:54:46.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.075" endtime="20201030 15:54:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.074" endtime="20201030 15:54:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.073" endtime="20201030 15:54:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.713" endtime="20201030 15:54:46.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.713" endtime="20201030 15:54:46.096"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.109" endtime="20201030 15:54:46.127"></status>
</kw>
<msg timestamp="20201030 15:54:46.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.106" endtime="20201030 15:54:46.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.130" endtime="20201030 15:54:46.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.133" endtime="20201030 15:54:46.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.102" endtime="20201030 15:54:46.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.099" endtime="20201030 15:54:46.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.142" endtime="20201030 15:54:46.447"></status>
</kw>
<msg timestamp="20201030 15:54:46.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027528472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027575875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.140" endtime="20201030 15:54:46.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027528472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027575875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.457" endtime="20201030 15:54:46.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.469" endtime="20201030 15:54:46.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.138" endtime="20201030 15:54:46.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.136" endtime="20201030 15:54:46.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.477" level="INFO">${RESULT} = [{'diff': 4.7403000000001416e-05}, {'diff': 4.644399999999965e-05}, {'diff': 4.70000000000019e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.7153000000001166e-05}, {'diff': 4.701299999999853e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:46.473" endtime="20201030 15:54:46.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:46.481" level="INFO">${ACCURACY} = {'diff': [4.7403000000001416e-05, 4.644399999999965e-05, 4.70000000000019e-05, 4.723599999999911e-05, 4.7153000000001166e-05, 4.701299999999853e-05, 4.7167000000000736e-05, 4.7167000000000736e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 15:54:46.478" endtime="20201030 15:54:46.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.487" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:54:46.486" endtime="20201030 15:54:46.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.490" level="INFO">VALUE: [4.7403000000001416e-05, 4.644399999999965e-05, 4.70000000000019e-05, 4.723599999999911e-05, 4.7153000000001166e-05, 4.701299999999853e-05, 4.7167000000000736e-05, 4.7167000000000736e-05, 4.697199999999929e-05, 4.673599999999861e-05, 4.634799999999814e-05, 4.683399999999907e-05, 4.6958999999999196e-05, 4.65000000000014e-05, 4.698599999999886e-05, 4.6680999999999806e-05, 4.7194999999999876e-05, 4.647200000000226e-05, 4.705500000000071e-05, 4.649999999999793e-05, 4.6931000000000056e-05, 4.673599999999861e-05, 4.698600000000233e-05, 4.709699999999942e-05, 4.641600000000051e-05, 4.6361000000001706e-05, 4.6431000000003025e-05, 4.6972999999998766e-05, 4.7181000000000306e-05, 4.702799999999757e-05, 4.63329999999991e-05, 4.6597000000002387e-05, 4.636099999999824e-05, 4.686099999999874e-05, 4.697199999999929e-05, 4.654100000000064e-05, 4.679200000000036e-05, 4.723599999999911e-05, 4.641600000000051e-05, 4.684799999999864e-05, 4.627800000000029e-05, 4.658299999999935e-05, 4.704099999999767e-05, 4.654099999999717e-05, 4.705599999999671e-05, 4.716600000000126e-05, 4.630599999999596e-05, 4.637499999999434e-05, 4.699999999999843e-05, 4.674999999999818e-05]</msg>
<status status="PASS" starttime="20201030 15:54:46.488" endtime="20201030 15:54:46.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.483" endtime="20201030 15:54:46.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.496" endtime="20201030 15:54:46.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.494" endtime="20201030 15:54:46.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.493" endtime="20201030 15:54:46.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.097" endtime="20201030 15:54:46.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.096" endtime="20201030 15:54:46.516"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.525" endtime="20201030 15:54:46.541"></status>
</kw>
<msg timestamp="20201030 15:54:46.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.523" endtime="20201030 15:54:46.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.543" endtime="20201030 15:54:46.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.545" endtime="20201030 15:54:46.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.521" endtime="20201030 15:54:46.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.519" endtime="20201030 15:54:46.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.554" endtime="20201030 15:54:46.840"></status>
</kw>
<msg timestamp="20201030 15:54:46.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.552" endtime="20201030 15:54:46.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.844" endtime="20201030 15:54:46.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.852" endtime="20201030 15:54:46.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.550" endtime="20201030 15:54:46.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.548" endtime="20201030 15:54:46.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.858" level="INFO">${RESULT} = [{'diff': 4.811099999999999e-05}, {'diff': 4.804100000000214e-05}, {'diff': 4.727800000000129e-05}, {'diff': 4.780600000000093e-05}, {'diff': 4.743000000000108e-05}, {'diff': 4.733399999999957e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:46.855" endtime="20201030 15:54:46.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:46.863" level="INFO">${ACCURACY} = {'diff': [4.811099999999999e-05, 4.804100000000214e-05, 4.727800000000129e-05, 4.780600000000093e-05, 4.743000000000108e-05, 4.733399999999957e-05, 4.786099999999974e-05, 4.8013999999999e-05, 4.748599...</msg>
<status status="PASS" starttime="20201030 15:54:46.859" endtime="20201030 15:54:46.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.868" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:54:46.867" endtime="20201030 15:54:46.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.870" level="INFO">VALUE: [4.811099999999999e-05, 4.804100000000214e-05, 4.727800000000129e-05, 4.780600000000093e-05, 4.743000000000108e-05, 4.733399999999957e-05, 4.786099999999974e-05, 4.8013999999999e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.736099999999924e-05, 4.7708999999999946e-05, 4.786099999999974e-05, 4.730500000000096e-05, 4.779199999999789e-05, 4.7681000000000806e-05, 4.81529999999987e-05, 4.773599999999961e-05, 4.730600000000043e-05, 4.755499999999774e-05, 4.736099999999924e-05, 4.809700000000042e-05, 4.7681000000000806e-05, 4.773599999999961e-05, 4.754100000000164e-05, 4.8167000000001736e-05, 4.784799999999964e-05, 4.762499999999906e-05, 4.75000000000024e-05, 4.784700000000017e-05, 4.761099999999949e-05, 4.824999999999968e-05, 4.807000000000075e-05, 4.754200000000111e-05, 4.754199999999764e-05, 4.734699999999967e-05, 4.787499999999931e-05, 4.7361000000002706e-05, 4.802800000000204e-05, 4.755500000000121e-05, 4.804099999999867e-05, 4.740200000000194e-05, 4.805600000000118e-05, 4.775000000000265e-05, 4.749999999999893e-05, 4.819399999999793e-05, 4.763899999999863e-05, 4.754199999999764e-05, 4.748599999999936e-05, 4.822200000000054e-05]</msg>
<status status="PASS" starttime="20201030 15:54:46.869" endtime="20201030 15:54:46.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.864" endtime="20201030 15:54:46.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.875" endtime="20201030 15:54:46.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.873" endtime="20201030 15:54:46.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.872" endtime="20201030 15:54:46.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.517" endtime="20201030 15:54:46.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.517" endtime="20201030 15:54:46.896"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.905" endtime="20201030 15:54:46.922"></status>
</kw>
<msg timestamp="20201030 15:54:46.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.903" endtime="20201030 15:54:46.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.923" endtime="20201030 15:54:46.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.926" endtime="20201030 15:54:46.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.901" endtime="20201030 15:54:46.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.898" endtime="20201030 15:54:46.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.934" endtime="20201030 15:54:47.222"></status>
</kw>
<msg timestamp="20201030 15:54:47.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022543806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.933" endtime="20201030 15:54:47.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022543806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.226" endtime="20201030 15:54:47.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.234" endtime="20201030 15:54:47.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.930" endtime="20201030 15:54:47.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.929" endtime="20201030 15:54:47.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.240" level="INFO">${RESULT} = [{'diff': 4.970899999999848e-05}, {'diff': 4.854099999999917e-05}, {'diff': 4.8681000000001806e-05}, {'diff': 4.875000000000018e-05}, {'diff': 4.872200000000104e-05}, {'diff': 4.834700000000067e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:47.237" endtime="20201030 15:54:47.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:47.244" level="INFO">${ACCURACY} = {'diff': [4.970899999999848e-05, 4.854099999999917e-05, 4.8681000000001806e-05, 4.875000000000018e-05, 4.872200000000104e-05, 4.834700000000067e-05, 4.86529999999992e-05, 4.837499999999981e-05, 4.8917...</msg>
<status status="PASS" starttime="20201030 15:54:47.241" endtime="20201030 15:54:47.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.249" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:54:47.248" endtime="20201030 15:54:47.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.251" level="INFO">VALUE: [4.970899999999848e-05, 4.854099999999917e-05, 4.8681000000001806e-05, 4.875000000000018e-05, 4.872200000000104e-05, 4.834700000000067e-05, 4.86529999999992e-05, 4.837499999999981e-05, 4.8917000000002486e-05, 4.854199999999864e-05, 4.898599999999739e-05, 4.8973000000000766e-05, 4.8709000000000946e-05, 4.905499999999924e-05, 4.876300000000028e-05, 4.862500000000006e-05, 4.902800000000304e-05, 4.909700000000142e-05, 4.916699999999927e-05, 4.897200000000129e-05, 4.861100000000049e-05, 4.859699999999745e-05, 4.841599999999904e-05, 4.909700000000142e-05, 4.845800000000122e-05, 4.862500000000006e-05, 4.888899999999988e-05, 4.923599999999764e-05, 4.879199999999889e-05, 4.904199999999914e-05, 4.917999999999936e-05, 4.91529999999997e-05, 4.8459000000000696e-05, 4.917999999999936e-05, 4.890299999999945e-05, 4.865199999999972e-05, 4.836100000000024e-05, 4.922199999999807e-05, 4.859800000000039e-05, 4.827799999999882e-05, 4.833299999999763e-05, 4.840299999999895e-05, 4.834700000000067e-05, 4.827800000000229e-05, 4.834700000000067e-05, 4.902800000000304e-05, 4.85269999999996e-05, 4.922200000000154e-05, 4.847200000000079e-05, 4.918099999999884e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.250" endtime="20201030 15:54:47.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.245" endtime="20201030 15:54:47.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.256" endtime="20201030 15:54:47.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.255" endtime="20201030 15:54:47.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.254" endtime="20201030 15:54:47.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.897" endtime="20201030 15:54:47.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.896" endtime="20201030 15:54:47.278"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.287" endtime="20201030 15:54:47.307"></status>
</kw>
<msg timestamp="20201030 15:54:47.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.286" endtime="20201030 15:54:47.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.308" endtime="20201030 15:54:47.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.311" endtime="20201030 15:54:47.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.283" endtime="20201030 15:54:47.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.281" endtime="20201030 15:54:47.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.320" endtime="20201030 15:54:47.606"></status>
</kw>
<msg timestamp="20201030 15:54:47.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026433056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026482958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.318" endtime="20201030 15:54:47.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026433056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026482958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.610" endtime="20201030 15:54:47.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.618" endtime="20201030 15:54:47.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.316" endtime="20201030 15:54:47.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.314" endtime="20201030 15:54:47.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.625" level="INFO">${RESULT} = [{'diff': 4.990200000000097e-05}, {'diff': 4.959699999999845e-05}, {'diff': 4.958300000000235e-05}, {'diff': 4.966699999999977e-05}, {'diff': 4.98469999999987e-05}, {'diff': 4.991600000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:47.622" endtime="20201030 15:54:47.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:47.629" level="INFO">${ACCURACY} = {'diff': [4.990200000000097e-05, 4.959699999999845e-05, 4.958300000000235e-05, 4.966699999999977e-05, 4.98469999999987e-05, 4.991600000000054e-05, 4.997199999999882e-05, 4.951399999999703e-05, 4.96109...</msg>
<status status="PASS" starttime="20201030 15:54:47.626" endtime="20201030 15:54:47.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.633" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:54:47.632" endtime="20201030 15:54:47.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.636" level="INFO">VALUE: [4.990200000000097e-05, 4.959699999999845e-05, 4.958300000000235e-05, 4.966699999999977e-05, 4.98469999999987e-05, 4.991600000000054e-05, 4.997199999999882e-05, 4.951399999999703e-05, 4.961099999999802e-05, 4.969499999999891e-05, 5.009700000000242e-05, 4.947199999999832e-05, 5.00279999999971e-05, 4.96530000000002e-05, 5.016700000000027e-05, 4.945799999999875e-05, 4.961099999999802e-05, 4.969399999999943e-05, 4.997199999999882e-05, 5.008399999999885e-05, 4.976400000000075e-05, 5.009700000000242e-05, 5.020899999999898e-05, 4.957000000000225e-05, 4.958300000000235e-05, 4.9473000000001266e-05, 5.018099999999984e-05, 4.951399999999703e-05, 4.940299999999995e-05, 5.016600000000079e-05, 4.942999999999961e-05, 4.954199999999964e-05, 4.984700000000217e-05, 4.959800000000139e-05, 5.002800000000057e-05, 4.947199999999832e-05, 4.965200000000072e-05, 5.02079999999995e-05, 4.990300000000045e-05, 5.022199999999907e-05, 4.9458999999998227e-05, 5.018099999999984e-05, 4.9387999999997434e-05, 5.023600000000211e-05, 5.00279999999971e-05, 4.951399999999703e-05, 4.9459000000001696e-05, 4.990300000000045e-05, 4.966600000000029e-05, 5.005599999999971e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.634" endtime="20201030 15:54:47.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.630" endtime="20201030 15:54:47.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.641" endtime="20201030 15:54:47.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.640" endtime="20201030 15:54:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.639" endtime="20201030 15:54:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.280" endtime="20201030 15:54:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.279" endtime="20201030 15:54:47.662"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.671" endtime="20201030 15:54:47.687"></status>
</kw>
<msg timestamp="20201030 15:54:47.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.669" endtime="20201030 15:54:47.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.689" endtime="20201030 15:54:47.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.691" endtime="20201030 15:54:47.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.667" endtime="20201030 15:54:47.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.665" endtime="20201030 15:54:47.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.700" endtime="20201030 15:54:47.986"></status>
</kw>
<msg timestamp="20201030 15:54:47.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.698" endtime="20201030 15:54:47.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.991" endtime="20201030 15:54:47.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.999" endtime="20201030 15:54:48.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.696" endtime="20201030 15:54:48.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.694" endtime="20201030 15:54:48.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.006" level="INFO">${RESULT} = [{'diff': 5.177799999999885e-05}, {'diff': 5.109799999999942e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.05409999999977e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.047199999999932e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:48.003" endtime="20201030 15:54:48.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:48.011" level="INFO">${ACCURACY} = {'diff': [5.177799999999885e-05, 5.109799999999942e-05, 5.076400000000175e-05, 5.05409999999977e-05, 5.063899999999816e-05, 5.047199999999932e-05, 5.122200000000007e-05, 5.026399999999778e-05, 5.04170...</msg>
<status status="PASS" starttime="20201030 15:54:48.007" endtime="20201030 15:54:48.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.015" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:54:48.014" endtime="20201030 15:54:48.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.018" level="INFO">VALUE: [5.177799999999885e-05, 5.109799999999942e-05, 5.076400000000175e-05, 5.05409999999977e-05, 5.063899999999816e-05, 5.047199999999932e-05, 5.122200000000007e-05, 5.026399999999778e-05, 5.041700000000052e-05, 5.086100000000274e-05, 5.095800000000025e-05, 5.03469999999992e-05, 5.086100000000274e-05, 5.048599999999889e-05, 5.104200000000114e-05, 5.077800000000132e-05, 5.084700000000317e-05, 5.104200000000114e-05, 5.065299999999773e-05, 5.109699999999995e-05, 5.099999999999896e-05, 5.109699999999995e-05, 5.03469999999992e-05, 5.097199999999982e-05, 5.1152000000002223e-05, 5.08339999999996e-05, 5.080600000000046e-05, 5.090299999999798e-05, 5.111100000000299e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.091700000000102e-05, 5.105600000000071e-05, 5.044400000000018e-05, 5.072200000000304e-05, 5.088899999999841e-05, 5.123600000000311e-05, 5.123599999999964e-05, 5.059699999999945e-05, 5.066700000000077e-05, 5.118100000000084e-05, 5.073600000000261e-05, 5.038900000000138e-05, 5.0929999999997644e-05, 5.06669999999973e-05, 5.041700000000052e-05, 5.098600000000286e-05, 5.115299999999823e-05, 5.08469999999997e-05, 5.104100000000167e-05]</msg>
<status status="PASS" starttime="20201030 15:54:48.016" endtime="20201030 15:54:48.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.012" endtime="20201030 15:54:48.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.023" endtime="20201030 15:54:48.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.021" endtime="20201030 15:54:48.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.020" endtime="20201030 15:54:48.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.663" endtime="20201030 15:54:48.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.663" endtime="20201030 15:54:48.043"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.052" endtime="20201030 15:54:48.068"></status>
</kw>
<msg timestamp="20201030 15:54:48.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.050" endtime="20201030 15:54:48.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.070" endtime="20201030 15:54:48.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.072" endtime="20201030 15:54:48.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.048" endtime="20201030 15:54:48.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.046" endtime="20201030 15:54:48.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.081" endtime="20201030 15:54:48.367"></status>
</kw>
<msg timestamp="20201030 15:54:48.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.080" endtime="20201030 15:54:48.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.372" endtime="20201030 15:54:48.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.380" endtime="20201030 15:54:48.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.077" endtime="20201030 15:54:48.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.075" endtime="20201030 15:54:48.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.386" level="INFO">${RESULT} = [{'diff': 5.25279999999996e-05}, {'diff': 5.15279999999986e-05}, {'diff': 5.165299999999873e-05}, {'diff': 5.165299999999873e-05}, {'diff': 5.194499999999769e-05}, {'diff': 5.180499999999852e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:48.383" endtime="20201030 15:54:48.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:48.391" level="INFO">${ACCURACY} = {'diff': [5.25279999999996e-05, 5.15279999999986e-05, 5.165299999999873e-05, 5.165299999999873e-05, 5.194499999999769e-05, 5.180499999999852e-05, 5.2193999999998464e-05, 5.168099999999787e-05, 5.17090...</msg>
<status status="PASS" starttime="20201030 15:54:48.388" endtime="20201030 15:54:48.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.396" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:54:48.395" endtime="20201030 15:54:48.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.398" level="INFO">VALUE: [5.25279999999996e-05, 5.15279999999986e-05, 5.165299999999873e-05, 5.165299999999873e-05, 5.194499999999769e-05, 5.180499999999852e-05, 5.2193999999998464e-05, 5.168099999999787e-05, 5.170900000000048e-05, 5.2207999999998034e-05, 5.152800000000207e-05, 5.127799999999835e-05, 5.2207999999998034e-05, 5.184800000000017e-05, 5.18340000000006e-05, 5.216700000000227e-05, 5.1915999999999074e-05, 5.154200000000164e-05, 5.138900000000238e-05, 5.223600000000064e-05, 5.176399999999928e-05, 5.1707999999997534e-05, 5.157000000000078e-05, 5.215299999999923e-05, 5.2151999999999754e-05, 5.158300000000088e-05, 5.201399999999953e-05, 5.190299999999898e-05, 5.148599999999989e-05, 5.188899999999941e-05, 5.20279999999991e-05, 5.1707999999997534e-05, 5.208399999999738e-05, 5.176399999999928e-05, 5.1708000000001e-05, 5.194400000000168e-05, 5.209800000000042e-05, 5.15279999999986e-05, 5.133300000000063e-05, 5.2193999999998464e-05, 5.20279999999991e-05, 5.158300000000088e-05, 5.154199999999817e-05, 5.208400000000085e-05, 5.197200000000082e-05, 5.18340000000006e-05, 5.163899999999916e-05, 5.1429999999998144e-05, 5.172300000000005e-05, 5.143099999999762e-05]</msg>
<status status="PASS" starttime="20201030 15:54:48.397" endtime="20201030 15:54:48.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.392" endtime="20201030 15:54:48.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.403" endtime="20201030 15:54:48.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.402" endtime="20201030 15:54:48.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.400" endtime="20201030 15:54:48.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.044" endtime="20201030 15:54:48.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.044" endtime="20201030 15:54:48.424"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.432" endtime="20201030 15:54:48.450"></status>
</kw>
<msg timestamp="20201030 15:54:48.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.431" endtime="20201030 15:54:48.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.451" endtime="20201030 15:54:48.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.454" endtime="20201030 15:54:48.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.428" endtime="20201030 15:54:48.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.426" endtime="20201030 15:54:48.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.463" endtime="20201030 15:54:48.748"></status>
</kw>
<msg timestamp="20201030 15:54:48.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022283903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.461" endtime="20201030 15:54:48.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022283903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.752" endtime="20201030 15:54:48.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.760" endtime="20201030 15:54:48.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.459" endtime="20201030 15:54:48.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.457" endtime="20201030 15:54:48.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.767" level="INFO">${RESULT} = [{'diff': 5.315300000000023e-05}, {'diff': 5.279099999999995e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.31669999999998e-05}, {'diff': 5.280500000000299e-05}, {'diff': 5.304199999999967e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:48.764" endtime="20201030 15:54:48.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:48.771" level="INFO">${ACCURACY} = {'diff': [5.315300000000023e-05, 5.279099999999995e-05, 5.263900000000016e-05, 5.31669999999998e-05, 5.280500000000299e-05, 5.304199999999967e-05, 5.233300000000163e-05, 5.28609999999978e-05, 5.283299...</msg>
<status status="PASS" starttime="20201030 15:54:48.768" endtime="20201030 15:54:48.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.775" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:54:48.774" endtime="20201030 15:54:48.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.777" level="INFO">VALUE: [5.315300000000023e-05, 5.279099999999995e-05, 5.263900000000016e-05, 5.31669999999998e-05, 5.280500000000299e-05, 5.304199999999967e-05, 5.233300000000163e-05, 5.28609999999978e-05, 5.283299999999866e-05, 5.31669999999998e-05, 5.308400000000185e-05, 5.268099999999887e-05, 5.3152000000000754e-05, 5.226399999999978e-05, 5.258300000000188e-05, 5.277799999999985e-05, 5.315300000000023e-05, 5.251400000000003e-05, 5.244500000000166e-05, 5.30410000000002e-05, 5.247200000000132e-05, 5.269400000000243e-05, 5.2749999999997244e-05, 5.30280000000001e-05, 5.254199999999917e-05, 5.276300000000081e-05, 5.308299999999891e-05, 5.26669999999993e-05, 5.23470000000012e-05, 5.280599999999899e-05, 5.2707999999998534e-05, 5.270899999999801e-05, 5.2902000000000504e-05, 5.2971999999998354e-05, 5.223700000000012e-05, 5.311100000000152e-05, 5.227799999999935e-05, 5.229200000000239e-05, 5.293099999999912e-05, 5.251400000000003e-05, 5.2902000000000504e-05, 5.301400000000053e-05, 5.229099999999945e-05, 5.284800000000117e-05, 5.2721999999998104e-05, 5.301300000000106e-05, 5.30280000000001e-05, 5.3193999999999464e-05, 5.261099999999755e-05, 5.313900000000066e-05]</msg>
<status status="PASS" starttime="20201030 15:54:48.776" endtime="20201030 15:54:48.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.772" endtime="20201030 15:54:48.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.788" endtime="20201030 15:54:48.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.786" endtime="20201030 15:54:48.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.785" endtime="20201030 15:54:48.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.425" endtime="20201030 15:54:48.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.424" endtime="20201030 15:54:48.809"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.818" endtime="20201030 15:54:48.834"></status>
</kw>
<msg timestamp="20201030 15:54:48.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.816" endtime="20201030 15:54:48.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.836" endtime="20201030 15:54:48.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.838" endtime="20201030 15:54:48.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.814" endtime="20201030 15:54:48.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.812" endtime="20201030 15:54:48.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.847" endtime="20201030 15:54:49.133"></status>
</kw>
<msg timestamp="20201030 15:54:49.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021342917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.845" endtime="20201030 15:54:49.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021342917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.137" endtime="20201030 15:54:49.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.145" endtime="20201030 15:54:49.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.843" endtime="20201030 15:54:49.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.841" endtime="20201030 15:54:49.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.152" level="INFO">${RESULT} = [{'diff': 5.481900000000109e-05}, {'diff': 5.3749999999998244e-05}, {'diff': 5.3708000000003e-05}, {'diff': 5.40410000000012e-05}, {'diff': 5.390300000000098e-05}, {'diff': 5.409700000000295e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:49.148" endtime="20201030 15:54:49.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:49.157" level="INFO">${ACCURACY} = {'diff': [5.481900000000109e-05, 5.3749999999998244e-05, 5.3708000000003e-05, 5.40410000000012e-05, 5.390300000000098e-05, 5.409700000000295e-05, 5.406999999999981e-05, 5.327800000000035e-05, 5.393000...</msg>
<status status="PASS" starttime="20201030 15:54:49.153" endtime="20201030 15:54:49.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.161" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:54:49.160" endtime="20201030 15:54:49.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.163" level="INFO">VALUE: [5.481900000000109e-05, 5.3749999999998244e-05, 5.3708000000003e-05, 5.40410000000012e-05, 5.390300000000098e-05, 5.409700000000295e-05, 5.406999999999981e-05, 5.327800000000035e-05, 5.3930000000000644e-05, 5.333399999999863e-05, 5.40280000000011e-05, 5.4027999999997633e-05, 5.365300000000073e-05, 5.345899999999876e-05, 5.406900000000034e-05, 5.363900000000116e-05, 5.340300000000048e-05, 5.4166000000001324e-05, 5.388900000000141e-05, 5.350000000000146e-05, 5.3499999999997994e-05, 5.334800000000167e-05, 5.4193999999996995e-05, 5.333299999999916e-05, 5.334699999999873e-05, 5.3471999999998854e-05, 5.352700000000113e-05, 5.354200000000017e-05, 5.4208000000000034e-05, 5.368099999999987e-05, 5.3485999999998424e-05, 5.3957999999999784e-05, 5.3471999999998854e-05, 5.368099999999987e-05, 5.381900000000009e-05, 5.363899999999769e-05, 5.409699999999948e-05, 5.4166000000001324e-05, 5.333300000000263e-05, 5.386100000000227e-05, 5.3652000000001254e-05, 5.415300000000123e-05, 5.3401999999997535e-05, 5.3777999999997383e-05, 5.381900000000009e-05, 5.3430000000000144e-05, 5.38609999999988e-05, 5.4151999999998285e-05, 5.365300000000073e-05, 5.327800000000035e-05]</msg>
<status status="PASS" starttime="20201030 15:54:49.162" endtime="20201030 15:54:49.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.157" endtime="20201030 15:54:49.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.168" endtime="20201030 15:54:49.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.167" endtime="20201030 15:54:49.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.166" endtime="20201030 15:54:49.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.810" endtime="20201030 15:54:49.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.809" endtime="20201030 15:54:49.190"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.198" endtime="20201030 15:54:49.215"></status>
</kw>
<msg timestamp="20201030 15:54:49.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.197" endtime="20201030 15:54:49.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.217" endtime="20201030 15:54:49.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.219" endtime="20201030 15:54:49.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.194" endtime="20201030 15:54:49.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.192" endtime="20201030 15:54:49.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.228" endtime="20201030 15:54:49.515"></status>
</kw>
<msg timestamp="20201030 15:54:49.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.226" endtime="20201030 15:54:49.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.520" endtime="20201030 15:54:49.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.528" endtime="20201030 15:54:49.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.224" endtime="20201030 15:54:49.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.222" endtime="20201030 15:54:49.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.534" level="INFO">${RESULT} = [{'diff': 5.515299999999876e-05}, {'diff': 5.426300000000231e-05}, {'diff': 5.5013999999999064e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.469500000000044e-05}, {'diff': 5.433299999999669e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:49.531" endtime="20201030 15:54:49.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:49.538" level="INFO">${ACCURACY} = {'diff': [5.515299999999876e-05, 5.426300000000231e-05, 5.5013999999999064e-05, 5.462499999999912e-05, 5.469500000000044e-05, 5.433299999999669e-05, 5.494500000000069e-05, 5.484700000000023e-05, 5.491...</msg>
<status status="PASS" starttime="20201030 15:54:49.535" endtime="20201030 15:54:49.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.543" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:54:49.542" endtime="20201030 15:54:49.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.545" level="INFO">VALUE: [5.515299999999876e-05, 5.426300000000231e-05, 5.5013999999999064e-05, 5.462499999999912e-05, 5.469500000000044e-05, 5.433299999999669e-05, 5.494500000000069e-05, 5.484700000000023e-05, 5.491700000000155e-05, 5.513900000000266e-05, 5.43609999999993e-05, 5.479200000000142e-05, 5.427699999999841e-05, 5.444500000000019e-05, 5.4694000000000964e-05, 5.509700000000048e-05, 5.434699999999973e-05, 5.430600000000049e-05, 5.4458000000000284e-05, 5.4749999999999244e-05, 5.513899999999919e-05, 5.481899999999762e-05, 5.515300000000223e-05, 5.484700000000023e-05, 5.4930000000001644e-05, 5.434699999999973e-05, 5.5193999999997995e-05, 5.4485999999999424e-05, 5.4387999999998965e-05, 5.461099999999955e-05, 5.434699999999973e-05, 5.4527999999998134e-05, 5.4263999999998314e-05, 5.487499999999937e-05, 5.483400000000013e-05, 5.4916000000002074e-05, 5.494500000000069e-05, 5.504200000000167e-05, 5.5222000000000604e-05, 5.437499999999887e-05, 5.462499999999912e-05, 5.457000000000031e-05, 5.508300000000091e-05, 5.4249999999998744e-05, 5.425000000000221e-05, 5.5027999999998634e-05, 5.432000000000006e-05, 5.477700000000238e-05, 5.4471999999999854e-05, 5.505600000000124e-05]</msg>
<status status="PASS" starttime="20201030 15:54:49.544" endtime="20201030 15:54:49.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.539" endtime="20201030 15:54:49.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.550" endtime="20201030 15:54:49.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.549" endtime="20201030 15:54:49.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.548" endtime="20201030 15:54:49.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.191" endtime="20201030 15:54:49.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.190" endtime="20201030 15:54:49.571"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.579" endtime="20201030 15:54:49.597"></status>
</kw>
<msg timestamp="20201030 15:54:49.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.578" endtime="20201030 15:54:49.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.599" endtime="20201030 15:54:49.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.601" endtime="20201030 15:54:49.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.576" endtime="20201030 15:54:49.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.573" endtime="20201030 15:54:49.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.610" endtime="20201030 15:54:49.896"></status>
</kw>
<msg timestamp="20201030 15:54:49.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:49.609" endtime="20201030 15:54:49.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:49.900" endtime="20201030 15:54:49.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.908" endtime="20201030 15:54:49.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.606" endtime="20201030 15:54:49.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.604" endtime="20201030 15:54:49.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.915" level="INFO">${RESULT} = [{'diff': 5.63610000000013e-05}, {'diff': 5.565299999999926e-05}, {'diff': 5.56809999999984e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.588899999999994e-05}, {'diff': 5.6000000000000494e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:49.911" endtime="20201030 15:54:49.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:49.919" level="INFO">${ACCURACY} = {'diff': [5.63610000000013e-05, 5.565299999999926e-05, 5.56809999999984e-05, 5.5472000000000854e-05, 5.588899999999994e-05, 5.6000000000000494e-05, 5.587500000000037e-05, 5.612500000000062e-05, 5.5763...</msg>
<status status="PASS" starttime="20201030 15:54:49.916" endtime="20201030 15:54:49.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.923" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:54:49.922" endtime="20201030 15:54:49.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.925" level="INFO">VALUE: [5.63610000000013e-05, 5.565299999999926e-05, 5.56809999999984e-05, 5.5472000000000854e-05, 5.588899999999994e-05, 5.6000000000000494e-05, 5.587500000000037e-05, 5.612500000000062e-05, 5.5763999999999814e-05, 5.56809999999984e-05, 5.533299999999769e-05, 5.5763999999999814e-05, 5.615299999999976e-05, 5.5249999999999744e-05, 5.5402000000003004e-05, 5.583299999999819e-05, 5.538899999999944e-05, 5.606899999999887e-05, 5.5513999999999564e-05, 5.566699999999883e-05, 5.569500000000144e-05, 5.5263999999999314e-05, 5.6137999999997246e-05, 5.619500000000194e-05, 5.602700000000016e-05, 5.5999999999997024e-05, 5.6014000000000064e-05, 5.582000000000156e-05, 5.608300000000191e-05, 5.5750000000000244e-05, 5.619500000000194e-05, 5.558299999999794e-05, 5.581899999999862e-05, 5.591699999999908e-05, 5.595899999999779e-05, 5.608300000000191e-05, 5.5694000000001964e-05, 5.563899999999969e-05, 5.565299999999926e-05, 5.533299999999769e-05, 5.58749999999969e-05, 5.601300000000059e-05, 5.611100000000105e-05, 5.5750000000000244e-05, 5.5458000000001284e-05, 5.531999999999759e-05, 5.5943999999998745e-05, 5.518100000000137e-05, 5.6193999999998995e-05, 5.561200000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:54:49.924" endtime="20201030 15:54:49.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.919" endtime="20201030 15:54:49.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.931" endtime="20201030 15:54:49.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.930" endtime="20201030 15:54:49.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.929" endtime="20201030 15:54:49.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.572" endtime="20201030 15:54:49.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.571" endtime="20201030 15:54:49.952"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.962" endtime="20201030 15:54:49.978"></status>
</kw>
<msg timestamp="20201030 15:54:49.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.960" endtime="20201030 15:54:49.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.980" endtime="20201030 15:54:49.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.982" endtime="20201030 15:54:49.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.957" endtime="20201030 15:54:49.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.955" endtime="20201030 15:54:49.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.992" endtime="20201030 15:54:50.279"></status>
</kw>
<msg timestamp="20201030 15:54:50.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.991" endtime="20201030 15:54:50.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.285" endtime="20201030 15:54:50.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.293" endtime="20201030 15:54:50.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.988" endtime="20201030 15:54:50.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.986" endtime="20201030 15:54:50.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.300" level="INFO">${RESULT} = [{'diff': 5.688900000000094e-05}, {'diff': 5.682000000000256e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.715300000000076e-05}, {'diff': 5.6693999999999495e-05}, {'diff': 5.694500000000269e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:50.297" endtime="20201030 15:54:50.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:50.305" level="INFO">${ACCURACY} = {'diff': [5.688900000000094e-05, 5.682000000000256e-05, 5.6250000000000744e-05, 5.715300000000076e-05, 5.6693999999999495e-05, 5.694500000000269e-05, 5.7013999999997594e-05, 5.7180000000000425e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:54:50.301" endtime="20201030 15:54:50.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.309" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:54:50.308" endtime="20201030 15:54:50.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.312" level="INFO">VALUE: [5.688900000000094e-05, 5.682000000000256e-05, 5.6250000000000744e-05, 5.715300000000076e-05, 5.6693999999999495e-05, 5.694500000000269e-05, 5.7013999999997594e-05, 5.7180000000000425e-05, 5.683299999999919e-05, 5.712500000000162e-05, 5.716700000000033e-05, 5.6693999999999495e-05, 5.7028000000000634e-05, 5.688899999999747e-05, 5.712500000000162e-05, 5.6930000000000175e-05, 5.6972000000002354e-05, 5.6750000000001244e-05, 5.6693999999999495e-05, 5.6569999999998843e-05, 5.68610000000018e-05, 5.711100000000205e-05, 5.694499999999922e-05, 5.6528000000000134e-05, 5.6638000000001215e-05, 5.6264000000000314e-05, 5.6443999999999245e-05, 5.636099999999783e-05, 5.662500000000112e-05, 5.669499999999897e-05, 5.637500000000087e-05, 5.669499999999897e-05, 5.638900000000044e-05, 5.695900000000226e-05, 5.669500000000244e-05, 5.6457999999998815e-05, 5.632000000000206e-05, 5.711100000000205e-05, 5.681899999999962e-05, 5.670899999999854e-05, 5.6693999999999495e-05, 5.662499999999765e-05, 5.640300000000001e-05, 5.641699999999958e-05, 5.658300000000241e-05, 5.672300000000158e-05, 5.6763999999997344e-05, 5.669499999999897e-05, 5.6250000000000744e-05, 5.7069999999999343e-05]</msg>
<status status="PASS" starttime="20201030 15:54:50.310" endtime="20201030 15:54:50.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.306" endtime="20201030 15:54:50.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.317" endtime="20201030 15:54:50.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.315" endtime="20201030 15:54:50.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.314" endtime="20201030 15:54:50.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.953" endtime="20201030 15:54:50.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.953" endtime="20201030 15:54:50.337"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.346" endtime="20201030 15:54:50.363"></status>
</kw>
<msg timestamp="20201030 15:54:50.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.345" endtime="20201030 15:54:50.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.364" endtime="20201030 15:54:50.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.367" endtime="20201030 15:54:50.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.342" endtime="20201030 15:54:50.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.340" endtime="20201030 15:54:50.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.376" endtime="20201030 15:54:50.663"></status>
</kw>
<msg timestamp="20201030 15:54:50.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.374" endtime="20201030 15:54:50.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.667" endtime="20201030 15:54:50.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.675" endtime="20201030 15:54:50.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.372" endtime="20201030 15:54:50.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.370" endtime="20201030 15:54:50.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.682" level="INFO">${RESULT} = [{'diff': 5.86810000000014e-05}, {'diff': 5.813899999999872e-05}, {'diff': 5.805499999999783e-05}, {'diff': 5.7277999999997414e-05}, {'diff': 5.758299999999994e-05}, {'diff': 5.786099999999933e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:50.679" endtime="20201030 15:54:50.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:50.686" level="INFO">${ACCURACY} = {'diff': [5.86810000000014e-05, 5.813899999999872e-05, 5.805499999999783e-05, 5.7277999999997414e-05, 5.758299999999994e-05, 5.786099999999933e-05, 5.758400000000288e-05, 5.73749999999984e-05, 5.81109...</msg>
<status status="PASS" starttime="20201030 15:54:50.683" endtime="20201030 15:54:50.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.690" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:54:50.689" endtime="20201030 15:54:50.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.693" level="INFO">VALUE: [5.86810000000014e-05, 5.813899999999872e-05, 5.805499999999783e-05, 5.7277999999997414e-05, 5.758299999999994e-05, 5.786099999999933e-05, 5.758400000000288e-05, 5.73749999999984e-05, 5.811099999999958e-05, 5.731900000000012e-05, 5.8207999999997095e-05, 5.81810000000009e-05, 5.819500000000047e-05, 5.820900000000004e-05, 5.809700000000001e-05, 5.812499999999915e-05, 5.743100000000015e-05, 5.737500000000187e-05, 5.8056000000000774e-05, 5.7249999999998274e-05, 5.7569999999999844e-05, 5.7694000000000495e-05, 5.7763999999998344e-05, 5.7791999999997484e-05, 5.8013999999998594e-05, 5.761099999999908e-05, 5.723700000000165e-05, 5.786099999999933e-05, 5.7820000000000094e-05, 5.7444000000000245e-05, 5.813900000000219e-05, 5.8070000000000344e-05, 5.798699999999893e-05, 5.7319999999999593e-05, 5.7319999999999593e-05, 5.7999999999999025e-05, 5.7806000000000524e-05, 5.758299999999994e-05, 5.7971999999999885e-05, 5.8222000000000135e-05, 5.819500000000047e-05, 5.7486000000002424e-05, 5.784699999999976e-05, 5.7777999999997914e-05, 5.762500000000212e-05, 5.768099999999693e-05, 5.744499999999972e-05, 5.7513999999998094e-05, 5.763899999999822e-05, 5.751299999999862e-05]</msg>
<status status="PASS" starttime="20201030 15:54:50.691" endtime="20201030 15:54:50.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.687" endtime="20201030 15:54:50.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.698" endtime="20201030 15:54:50.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.696" endtime="20201030 15:54:50.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.695" endtime="20201030 15:54:50.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.338" endtime="20201030 15:54:50.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.338" endtime="20201030 15:54:50.722"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.740" endtime="20201030 15:54:50.765"></status>
</kw>
<msg timestamp="20201030 15:54:50.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.736" endtime="20201030 15:54:50.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.769" endtime="20201030 15:54:50.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.774" endtime="20201030 15:54:50.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.731" endtime="20201030 15:54:50.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.727" endtime="20201030 15:54:50.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.793" endtime="20201030 15:54:51.081"></status>
</kw>
<msg timestamp="20201030 15:54:51.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041236819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041295958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.789" endtime="20201030 15:54:51.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041236819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041295958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.085" endtime="20201030 15:54:51.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.094" endtime="20201030 15:54:51.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.784" endtime="20201030 15:54:51.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.781" endtime="20201030 15:54:51.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.100" level="INFO">${RESULT} = [{'diff': 5.913899999999972e-05}, {'diff': 5.9014000000003064e-05}, {'diff': 5.912500000000015e-05}, {'diff': 5.902699999999622e-05}, {'diff': 5.906900000000187e-05}, {'diff': 5.888899999999947e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:51.097" endtime="20201030 15:54:51.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:51.104" level="INFO">${ACCURACY} = {'diff': [5.913899999999972e-05, 5.9014000000003064e-05, 5.912500000000015e-05, 5.902699999999622e-05, 5.906900000000187e-05, 5.888899999999947e-05, 5.862499999999965e-05, 5.8221999999996665e-05, 5.88...</msg>
<status status="PASS" starttime="20201030 15:54:51.101" endtime="20201030 15:54:51.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.109" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:54:51.108" endtime="20201030 15:54:51.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.111" level="INFO">VALUE: [5.913899999999972e-05, 5.9014000000003064e-05, 5.912500000000015e-05, 5.902699999999622e-05, 5.906900000000187e-05, 5.888899999999947e-05, 5.862499999999965e-05, 5.8221999999996665e-05, 5.88749999999999e-05, 5.8499999999996055e-05, 5.912500000000015e-05, 5.8806000000001524e-05, 5.8929999999998706e-05, 5.8693999999998026e-05, 5.8499999999996055e-05, 5.831900000000112e-05, 5.8929999999998706e-05, 5.863900000000616e-05, 5.909700000000101e-05, 5.8929999999998706e-05, 5.912500000000015e-05, 5.8943999999998276e-05, 5.895900000000426e-05, 5.8264000000002314e-05, 5.8555999999994335e-05, 5.8499999999996055e-05, 5.9013999999996125e-05, 5.8570000000000844e-05, 5.862499999999965e-05, 5.909700000000101e-05, 5.8264000000002314e-05, 5.922299999999714e-05, 5.863899999999922e-05, 5.872299999999664e-05, 5.861100000000008e-05, 5.881899999999468e-05, 5.8278000000001884e-05, 5.9013999999996125e-05, 5.87629999999964e-05, 5.841699999999811e-05, 5.888899999999947e-05, 5.88749999999999e-05, 5.8264000000002314e-05, 5.9027999999995695e-05, 5.8764000000002814e-05, 5.827700000000241e-05, 5.913899999999972e-05, 5.897299999999689e-05, 5.8278000000001884e-05, 5.8834000000000664e-05]</msg>
<status status="PASS" starttime="20201030 15:54:51.110" endtime="20201030 15:54:51.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.105" endtime="20201030 15:54:51.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.117" endtime="20201030 15:54:51.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.116" endtime="20201030 15:54:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.114" endtime="20201030 15:54:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.724" endtime="20201030 15:54:51.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.722" endtime="20201030 15:54:51.138"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.146" endtime="20201030 15:54:51.163"></status>
</kw>
<msg timestamp="20201030 15:54:51.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.145" endtime="20201030 15:54:51.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.165" endtime="20201030 15:54:51.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.167" endtime="20201030 15:54:51.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.142" endtime="20201030 15:54:51.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.140" endtime="20201030 15:54:51.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.176" endtime="20201030 15:54:51.461"></status>
</kw>
<msg timestamp="20201030 15:54:51.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.175" endtime="20201030 15:54:51.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.466" endtime="20201030 15:54:51.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.474" endtime="20201030 15:54:51.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.172" endtime="20201030 15:54:51.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.170" endtime="20201030 15:54:51.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.480" level="INFO">${RESULT} = [{'diff': 6.0749999999998305e-05}, {'diff': 5.9972000000001885e-05}, {'diff': 5.9943999999999276e-05}, {'diff': 5.994499999999875e-05}, {'diff': 5.958299999999847e-05}, {'diff': 5.947299999999739e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:51.477" endtime="20201030 15:54:51.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:51.485" level="INFO">${ACCURACY} = {'diff': [6.0749999999998305e-05, 5.9972000000001885e-05, 5.9943999999999276e-05, 5.994499999999875e-05, 5.958299999999847e-05, 5.947299999999739e-05, 5.9916000000000136e-05, 5.944500000000172e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:54:51.481" endtime="20201030 15:54:51.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.490" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:54:51.489" endtime="20201030 15:54:51.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.492" level="INFO">VALUE: [6.0749999999998305e-05, 5.9972000000001885e-05, 5.9943999999999276e-05, 5.994499999999875e-05, 5.958299999999847e-05, 5.947299999999739e-05, 5.9916000000000136e-05, 5.944500000000172e-05, 5.9444000000002245e-05, 5.969500000000197e-05, 5.9236000000000705e-05, 6.016699999999986e-05, 5.9679999999999456e-05, 5.9291999999998984e-05, 6.0193999999999526e-05, 5.98750000000009e-05, 5.9306000000002024e-05, 5.938899999999997e-05, 5.9806000000002524e-05, 5.987499999999743e-05, 5.9834000000001664e-05, 5.9500000000000525e-05, 6.015300000000029e-05, 5.9943999999999276e-05, 5.970899999999807e-05, 5.9236000000000705e-05, 5.9750000000000775e-05, 5.93750000000004e-05, 5.98750000000009e-05, 6.0112000000001053e-05, 5.9943999999999276e-05, 6.002700000000069e-05, 5.930500000000255e-05, 5.962499999999718e-05, 5.993099999999918e-05, 5.9943999999999276e-05, 6.012500000000115e-05, 5.9943999999999276e-05, 5.936100000000083e-05, 6.0179999999999956e-05, 5.9819999999998624e-05, 5.9222000000001135e-05, 5.9721999999998165e-05, 5.9514000000000095e-05, 6.0070000000002344e-05, 5.93750000000004e-05, 5.9514000000000095e-05, 5.9693999999999026e-05, 6.015300000000029e-05, 5.98750000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:54:51.491" endtime="20201030 15:54:51.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.486" endtime="20201030 15:54:51.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.497" endtime="20201030 15:54:51.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.496" endtime="20201030 15:54:51.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.495" endtime="20201030 15:54:51.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.139" endtime="20201030 15:54:51.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.138" endtime="20201030 15:54:51.518"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.527" endtime="20201030 15:54:51.544"></status>
</kw>
<msg timestamp="20201030 15:54:51.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.525" endtime="20201030 15:54:51.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.545" endtime="20201030 15:54:51.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.547" endtime="20201030 15:54:51.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.523" endtime="20201030 15:54:51.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.521" endtime="20201030 15:54:51.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.556" endtime="20201030 15:54:51.843"></status>
</kw>
<msg timestamp="20201030 15:54:51.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021549028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.555" endtime="20201030 15:54:51.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021549028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.847" endtime="20201030 15:54:51.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.856" endtime="20201030 15:54:51.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.552" endtime="20201030 15:54:51.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.551" endtime="20201030 15:54:51.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.862" level="INFO">${RESULT} = [{'diff': 6.120900000000304e-05}, {'diff': 6.0249999999997805e-05}, {'diff': 6.0278000000000415e-05}, {'diff': 6.10690000000004e-05}, {'diff': 6.113899999999825e-05}, {'diff': 6.044500000000272e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:51.859" endtime="20201030 15:54:51.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:51.866" level="INFO">${ACCURACY} = {'diff': [6.120900000000304e-05, 6.0249999999997805e-05, 6.0278000000000415e-05, 6.10690000000004e-05, 6.113899999999825e-05, 6.044500000000272e-05, 6.0235999999998235e-05, 6.0430000000000206e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 15:54:51.863" endtime="20201030 15:54:51.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.871" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:54:51.869" endtime="20201030 15:54:51.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.873" level="INFO">VALUE: [6.120900000000304e-05, 6.0249999999997805e-05, 6.0278000000000415e-05, 6.10690000000004e-05, 6.113899999999825e-05, 6.044500000000272e-05, 6.0235999999998235e-05, 6.0430000000000206e-05, 6.055500000000033e-05, 6.083299999999972e-05, 6.0249999999997805e-05, 6.0999999999998555e-05, 6.0749999999998305e-05, 6.086099999999886e-05, 6.084699999999929e-05, 6.086100000000233e-05, 6.0291999999999984e-05, 6.0735999999998735e-05, 6.111100000000258e-05, 6.0250000000001275e-05, 6.038900000000097e-05, 6.0319999999999124e-05, 6.0236000000001705e-05, 6.0499999999998055e-05, 6.0250000000001275e-05, 6.084699999999929e-05, 6.0707999999999596e-05, 6.112499999999868e-05, 6.080500000000058e-05, 6.084699999999929e-05, 6.111100000000258e-05, 6.116599999999792e-05, 6.0694000000000026e-05, 6.0500000000001525e-05, 6.0513999999997625e-05, 6.0499999999998055e-05, 6.029100000000051e-05, 6.118000000000096e-05, 6.065300000000079e-05, 6.080500000000058e-05, 6.093100000000018e-05, 6.0249999999997805e-05, 6.105500000000083e-05, 6.0569999999999374e-05, 6.0264000000000845e-05, 6.106999999999987e-05, 6.054100000000076e-05, 6.1195e-05, 6.120899999999957e-05, 6.058299999999947e-05]</msg>
<status status="PASS" starttime="20201030 15:54:51.872" endtime="20201030 15:54:51.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.867" endtime="20201030 15:54:51.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.878" endtime="20201030 15:54:51.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.876" endtime="20201030 15:54:51.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.875" endtime="20201030 15:54:51.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.519" endtime="20201030 15:54:51.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.518" endtime="20201030 15:54:51.898"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.907" endtime="20201030 15:54:51.925"></status>
</kw>
<msg timestamp="20201030 15:54:51.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.905" endtime="20201030 15:54:51.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.926" endtime="20201030 15:54:51.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.929" endtime="20201030 15:54:51.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.903" endtime="20201030 15:54:51.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.901" endtime="20201030 15:54:51.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.938" endtime="20201030 15:54:52.227"></status>
</kw>
<msg timestamp="20201030 15:54:52.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.936" endtime="20201030 15:54:52.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.236" endtime="20201030 15:54:52.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.255" endtime="20201030 15:54:52.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.934" endtime="20201030 15:54:52.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.932" endtime="20201030 15:54:52.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.268" level="INFO">${RESULT} = [{'diff': 6.199999999999956e-05}, {'diff': 6.17080000000006e-05}, {'diff': 6.145800000000035e-05}, {'diff': 6.144500000000025e-05}, {'diff': 6.199999999999956e-05}, {'diff': 6.191700000000161e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:52.262" endtime="20201030 15:54:52.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:52.277" level="INFO">${ACCURACY} = {'diff': [6.199999999999956e-05, 6.17080000000006e-05, 6.145800000000035e-05, 6.144500000000025e-05, 6.199999999999956e-05, 6.191700000000161e-05, 6.168000000000146e-05, 6.211100000000011e-05, 6.16109...</msg>
<status status="PASS" starttime="20201030 15:54:52.271" endtime="20201030 15:54:52.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.286" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:54:52.284" endtime="20201030 15:54:52.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.292" level="INFO">VALUE: [6.199999999999956e-05, 6.17080000000006e-05, 6.145800000000035e-05, 6.144500000000025e-05, 6.199999999999956e-05, 6.191700000000161e-05, 6.168000000000146e-05, 6.211100000000011e-05, 6.161099999999961e-05, 6.130600000000055e-05, 6.126400000000184e-05, 6.173599999999974e-05, 6.193100000000118e-05, 6.168099999999746e-05, 6.156899999999743e-05, 6.129099999999804e-05, 6.149999999999906e-05, 6.17499999999993e-05, 6.142999999999774e-05, 6.15690000000009e-05, 6.125000000000227e-05, 6.13889999999985e-05, 6.198599999999999e-05, 6.13889999999985e-05, 6.218099999999796e-05, 6.163900000000222e-05, 6.204200000000173e-05, 6.162499999999918e-05, 6.170900000000007e-05, 6.136099999999936e-05, 6.145899999999982e-05, 6.16950000000005e-05, 6.191599999999867e-05, 6.151299999999915e-05, 6.193100000000118e-05, 6.162499999999918e-05, 6.199999999999956e-05, 6.173599999999974e-05, 6.148599999999949e-05, 6.169400000000103e-05, 6.199999999999956e-05, 6.141700000000111e-05, 6.201299999999965e-05, 6.181900000000115e-05, 6.218099999999796e-05, 6.18750000000029e-05, 6.191700000000161e-05, 6.13750000000024e-05, 6.1888999999999e-05, 6.14300000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:54:52.289" endtime="20201030 15:54:52.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.279" endtime="20201030 15:54:52.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.303" endtime="20201030 15:54:52.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.300" endtime="20201030 15:54:52.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.298" endtime="20201030 15:54:52.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.899" endtime="20201030 15:54:52.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.899" endtime="20201030 15:54:52.325"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.333" endtime="20201030 15:54:52.350"></status>
</kw>
<msg timestamp="20201030 15:54:52.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.332" endtime="20201030 15:54:52.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.352" endtime="20201030 15:54:52.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.354" endtime="20201030 15:54:52.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.329" endtime="20201030 15:54:52.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.327" endtime="20201030 15:54:52.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.363" endtime="20201030 15:54:52.649"></status>
</kw>
<msg timestamp="20201030 15:54:52.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.362" endtime="20201030 15:54:52.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.653" endtime="20201030 15:54:52.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.661" endtime="20201030 15:54:52.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.359" endtime="20201030 15:54:52.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.358" endtime="20201030 15:54:52.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.667" level="INFO">${RESULT} = [{'diff': 6.309699999999807e-05}, {'diff': 6.236100000000036e-05}, {'diff': 6.315200000000035e-05}, {'diff': 6.229199999999852e-05}, {'diff': 6.261100000000061e-05}, {'diff': 6.241699999999864e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:52.664" endtime="20201030 15:54:52.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:52.672" level="INFO">${ACCURACY} = {'diff': [6.309699999999807e-05, 6.236100000000036e-05, 6.315200000000035e-05, 6.229199999999852e-05, 6.261100000000061e-05, 6.241699999999864e-05, 6.223600000000024e-05, 6.266599999999942e-05, 6.2972...</msg>
<status status="PASS" starttime="20201030 15:54:52.668" endtime="20201030 15:54:52.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.677" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:54:52.676" endtime="20201030 15:54:52.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.679" level="INFO">VALUE: [6.309699999999807e-05, 6.236100000000036e-05, 6.315200000000035e-05, 6.229199999999852e-05, 6.261100000000061e-05, 6.241699999999864e-05, 6.223600000000024e-05, 6.266599999999942e-05, 6.297200000000142e-05, 6.22629999999999e-05, 6.22499999999998e-05, 6.269400000000203e-05, 6.297199999999795e-05, 6.30829999999985e-05, 6.293099999999871e-05, 6.222200000000067e-05, 6.277799999999945e-05, 6.243099999999821e-05, 6.268100000000193e-05, 6.242999999999874e-05, 6.304099999999979e-05, 6.298599999999752e-05, 6.259800000000051e-05, 6.293099999999871e-05, 6.248600000000049e-05, 6.312500000000068e-05, 6.22499999999998e-05, 6.301400000000013e-05, 6.262500000000018e-05, 6.304099999999979e-05, 6.2889e-05, 6.24439999999983e-05, 6.226399999999938e-05, 6.287500000000043e-05, 6.318100000000243e-05, 6.24019999999996e-05, 6.29300000000027e-05, 6.293100000000218e-05, 6.305499999999936e-05, 6.231999999999766e-05, 6.279200000000248e-05, 6.292999999999924e-05, 6.298599999999752e-05, 6.23889999999995e-05, 6.251300000000015e-05, 6.230500000000208e-05, 6.268000000000246e-05, 6.280499999999911e-05, 6.244499999999778e-05, 6.250000000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:54:52.678" endtime="20201030 15:54:52.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.673" endtime="20201030 15:54:52.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.684" endtime="20201030 15:54:52.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.683" endtime="20201030 15:54:52.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.682" endtime="20201030 15:54:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.326" endtime="20201030 15:54:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.325" endtime="20201030 15:54:52.705"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.714" endtime="20201030 15:54:52.731"></status>
</kw>
<msg timestamp="20201030 15:54:52.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.712" endtime="20201030 15:54:52.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.732" endtime="20201030 15:54:52.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.735" endtime="20201030 15:54:52.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.709" endtime="20201030 15:54:52.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.707" endtime="20201030 15:54:52.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.744" endtime="20201030 15:54:53.031"></status>
</kw>
<msg timestamp="20201030 15:54:53.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021339278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.742" endtime="20201030 15:54:53.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021339278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.035" endtime="20201030 15:54:53.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.044" endtime="20201030 15:54:53.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.739" endtime="20201030 15:54:53.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.738" endtime="20201030 15:54:53.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.050" level="INFO">${RESULT} = [{'diff': 6.480500000000111e-05}, {'diff': 6.34439999999993e-05}, {'diff': 6.330599999999909e-05}, {'diff': 6.400000000000156e-05}, {'diff': 6.358400000000194e-05}, {'diff': 6.3582999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:54:53.047" endtime="20201030 15:54:53.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:53.054" level="INFO">${ACCURACY} = {'diff': [6.480500000000111e-05, 6.34439999999993e-05, 6.330599999999909e-05, 6.400000000000156e-05, 6.358400000000194e-05, 6.3582999999999e-05, 6.404100000000079e-05, 6.348600000000149e-05, 6.3305999...</msg>
<status status="PASS" starttime="20201030 15:54:53.051" endtime="20201030 15:54:53.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.059" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:54:53.058" endtime="20201030 15:54:53.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.061" level="INFO">VALUE: [6.480500000000111e-05, 6.34439999999993e-05, 6.330599999999909e-05, 6.400000000000156e-05, 6.358400000000194e-05, 6.3582999999999e-05, 6.404100000000079e-05, 6.348600000000149e-05, 6.330599999999909e-05, 6.383399999999873e-05, 6.323600000000124e-05, 6.373600000000174e-05, 6.32500000000008e-05, 6.386100000000186e-05, 6.324999999999734e-05, 6.327799999999995e-05, 6.372200000000217e-05, 6.355499999999986e-05, 6.337499999999746e-05, 6.404100000000079e-05, 6.401399999999766e-05, 6.386099999999839e-05, 6.327700000000047e-05, 6.338899999999703e-05, 6.393099999999971e-05, 6.418099999999996e-05, 6.355599999999934e-05, 6.380499999999664e-05, 6.338899999999703e-05, 6.336100000000136e-05, 6.393099999999971e-05, 6.387500000000143e-05, 6.415299999999735e-05, 6.37639999999974e-05, 6.359699999999857e-05, 6.347199999999845e-05, 6.355599999999934e-05, 6.411200000000158e-05, 6.379100000000054e-05, 6.367999999999999e-05, 6.4195000000003e-05, 6.362499999999771e-05, 6.402699999999775e-05, 6.398600000000199e-05, 6.400000000000156e-05, 6.386100000000186e-05, 6.350000000000106e-05, 6.349999999999759e-05, 6.37219999999987e-05, 6.399999999999809e-05]</msg>
<status status="PASS" starttime="20201030 15:54:53.060" endtime="20201030 15:54:53.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.055" endtime="20201030 15:54:53.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.066" endtime="20201030 15:54:53.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.064" endtime="20201030 15:54:53.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.063" endtime="20201030 15:54:53.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.706" endtime="20201030 15:54:53.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.705" endtime="20201030 15:54:53.087"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.095" endtime="20201030 15:54:53.113"></status>
</kw>
<msg timestamp="20201030 15:54:53.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.094" endtime="20201030 15:54:53.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.115" endtime="20201030 15:54:53.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.117" endtime="20201030 15:54:53.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.091" endtime="20201030 15:54:53.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.089" endtime="20201030 15:54:53.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.126" endtime="20201030 15:54:53.411"></status>
</kw>
<msg timestamp="20201030 15:54:53.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.125" endtime="20201030 15:54:53.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.416" endtime="20201030 15:54:53.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.424" endtime="20201030 15:54:53.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.122" endtime="20201030 15:54:53.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.120" endtime="20201030 15:54:53.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.430" level="INFO">${RESULT} = [{'diff': 6.540300000000207e-05}, {'diff': 6.419499999999953e-05}, {'diff': 6.462499999999871e-05}, {'diff': 6.455600000000034e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.48479999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:53.427" endtime="20201030 15:54:53.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:53.434" level="INFO">${ACCURACY} = {'diff': [6.540300000000207e-05, 6.419499999999953e-05, 6.462499999999871e-05, 6.455600000000034e-05, 6.480600000000059e-05, 6.48479999999993e-05, 6.42219999999992e-05, 6.437499999999846e-05, 6.463899...</msg>
<status status="PASS" starttime="20201030 15:54:53.431" endtime="20201030 15:54:53.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.439" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:54:53.438" endtime="20201030 15:54:53.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.441" level="INFO">VALUE: [6.540300000000207e-05, 6.419499999999953e-05, 6.462499999999871e-05, 6.455600000000034e-05, 6.480600000000059e-05, 6.48479999999993e-05, 6.42219999999992e-05, 6.437499999999846e-05, 6.463899999999828e-05, 6.499999999999909e-05, 6.429200000000052e-05, 6.498600000000299e-05, 6.473599999999927e-05, 6.456900000000043e-05, 6.449999999999859e-05, 6.474999999999884e-05, 6.47500000000023e-05, 6.482000000000016e-05, 6.431999999999966e-05, 6.50419999999978e-05, 6.448600000000249e-05, 6.518100000000096e-05, 6.42219999999992e-05, 6.491600000000167e-05, 6.429200000000052e-05, 6.438899999999803e-05, 6.430600000000009e-05, 6.422300000000214e-05, 6.448599999999902e-05, 6.448599999999902e-05, 6.486199999999887e-05, 6.454100000000129e-05, 6.477799999999798e-05, 6.509799999999955e-05, 6.42630000000019e-05, 6.452799999999773e-05, 6.441699999999717e-05, 6.423599999999877e-05, 6.511099999999964e-05, 6.498600000000299e-05, 6.505600000000084e-05, 6.459800000000251e-05, 6.436099999999889e-05, 6.447299999999892e-05, 6.499999999999909e-05, 6.459699999999957e-05, 6.450000000000206e-05, 6.487499999999896e-05, 6.498699999999899e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201030 15:54:53.440" endtime="20201030 15:54:53.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.435" endtime="20201030 15:54:53.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.447" endtime="20201030 15:54:53.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.446" endtime="20201030 15:54:53.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.444" endtime="20201030 15:54:53.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.088" endtime="20201030 15:54:53.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.087" endtime="20201030 15:54:53.468"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.476" endtime="20201030 15:54:53.493"></status>
</kw>
<msg timestamp="20201030 15:54:53.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.475" endtime="20201030 15:54:53.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.495" endtime="20201030 15:54:53.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.497" endtime="20201030 15:54:53.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.472" endtime="20201030 15:54:53.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.470" endtime="20201030 15:54:53.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.506" endtime="20201030 15:54:53.792"></status>
</kw>
<msg timestamp="20201030 15:54:53.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021385778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.505" endtime="20201030 15:54:53.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021385778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.796" endtime="20201030 15:54:53.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.804" endtime="20201030 15:54:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.502" endtime="20201030 15:54:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.501" endtime="20201030 15:54:53.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.811" level="INFO">${RESULT} = [{'diff': 6.64159999999997e-05}, {'diff': 6.594500000000128e-05}, {'diff': 6.57220000000007e-05}, {'diff': 6.591600000000267e-05}, {'diff': 6.584699999999735e-05}, {'diff': 6.579199999999855e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:53.808" endtime="20201030 15:54:53.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:53.816" level="INFO">${ACCURACY} = {'diff': [6.64159999999997e-05, 6.594500000000128e-05, 6.57220000000007e-05, 6.591600000000267e-05, 6.584699999999735e-05, 6.579199999999855e-05, 6.584700000000082e-05, 6.601399999999966e-05, 6.534799...</msg>
<status status="PASS" starttime="20201030 15:54:53.812" endtime="20201030 15:54:53.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.820" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:54:53.819" endtime="20201030 15:54:53.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.823" level="INFO">VALUE: [6.64159999999997e-05, 6.594500000000128e-05, 6.57220000000007e-05, 6.591600000000267e-05, 6.584699999999735e-05, 6.579199999999855e-05, 6.584700000000082e-05, 6.601399999999966e-05, 6.53479999999998e-05, 6.58480000000003e-05, 6.604099999999932e-05, 6.587499999999996e-05, 6.543099999999774e-05, 6.593099999999824e-05, 6.579199999999855e-05, 6.57220000000007e-05, 6.604099999999932e-05, 6.545800000000088e-05, 6.537499999999946e-05, 6.604099999999932e-05, 6.59029999999991e-05, 6.57220000000007e-05, 6.529199999999805e-05, 6.529200000000152e-05, 6.559700000000057e-05, 6.600000000000009e-05, 6.542999999999827e-05, 6.605600000000184e-05, 6.547200000000045e-05, 6.566699999999842e-05, 6.616599999999945e-05, 6.59159999999992e-05, 6.573600000000027e-05, 6.60419999999988e-05, 6.591699999999867e-05, 6.59159999999992e-05, 6.555500000000186e-05, 6.57639999999994e-05, 6.531900000000118e-05, 6.594499999999781e-05, 6.609800000000055e-05, 6.598699999999999e-05, 6.579099999999907e-05, 6.541700000000164e-05, 6.537500000000293e-05, 6.552799999999873e-05, 6.5583000000001e-05, 6.597199999999748e-05, 6.612500000000021e-05, 6.576299999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:54:53.821" endtime="20201030 15:54:53.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.817" endtime="20201030 15:54:53.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.834" endtime="20201030 15:54:53.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.833" endtime="20201030 15:54:53.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.831" endtime="20201030 15:54:53.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.469" endtime="20201030 15:54:53.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.468" endtime="20201030 15:54:53.855"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.863" endtime="20201030 15:54:53.881"></status>
</kw>
<msg timestamp="20201030 15:54:53.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.862" endtime="20201030 15:54:53.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.882" endtime="20201030 15:54:53.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.884" endtime="20201030 15:54:53.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.859" endtime="20201030 15:54:53.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.857" endtime="20201030 15:54:53.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.894" endtime="20201030 15:54:54.181"></status>
</kw>
<msg timestamp="20201030 15:54:54.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021458944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.892" endtime="20201030 15:54:54.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021458944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.185" endtime="20201030 15:54:54.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.193" endtime="20201030 15:54:54.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.889" endtime="20201030 15:54:54.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.888" endtime="20201030 15:54:54.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.200" level="INFO">${RESULT} = [{'diff': 6.684700000000182e-05}, {'diff': 6.65969999999981e-05}, {'diff': 6.62359999999973e-05}, {'diff': 6.652799999999973e-05}, {'diff': 6.680599999999912e-05}, {'diff': 6.63480000000008e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:54:54.197" endtime="20201030 15:54:54.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:54.204" level="INFO">${ACCURACY} = {'diff': [6.684700000000182e-05, 6.65969999999981e-05, 6.62359999999973e-05, 6.652799999999973e-05, 6.680599999999912e-05, 6.63480000000008e-05, 6.641699999999917e-05, 6.67359999999978e-05, 6.69860000...</msg>
<status status="PASS" starttime="20201030 15:54:54.201" endtime="20201030 15:54:54.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.208" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:54:54.207" endtime="20201030 15:54:54.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.211" level="INFO">VALUE: [6.684700000000182e-05, 6.65969999999981e-05, 6.62359999999973e-05, 6.652799999999973e-05, 6.680599999999912e-05, 6.63480000000008e-05, 6.641699999999917e-05, 6.67359999999978e-05, 6.698600000000152e-05, 6.661100000000114e-05, 6.672199999999823e-05, 6.690299999999663e-05, 6.641699999999917e-05, 6.688900000000053e-05, 6.655499999999939e-05, 6.656999999999844e-05, 6.702800000000023e-05, 6.655600000000234e-05, 6.716600000000045e-05, 6.648600000000102e-05, 6.651400000000016e-05, 6.715300000000035e-05, 6.666599999999995e-05, 6.630499999999914e-05, 6.647200000000145e-05, 6.636099999999742e-05, 6.670799999999866e-05, 6.647199999999798e-05, 6.64159999999997e-05, 6.715300000000035e-05, 6.622300000000067e-05, 6.680499999999964e-05, 6.667999999999952e-05, 6.694399999999934e-05, 6.64440000000023e-05, 6.691699999999967e-05, 6.683399999999826e-05, 6.670899999999813e-05, 6.694399999999934e-05, 6.698599999999805e-05, 6.691700000000314e-05, 6.643099999999874e-05, 6.677799999999998e-05, 6.625000000000034e-05, 6.663900000000028e-05, 6.712500000000121e-05, 6.688900000000053e-05, 6.697200000000195e-05, 6.716600000000045e-05, 6.716699999999992e-05]</msg>
<status status="PASS" starttime="20201030 15:54:54.209" endtime="20201030 15:54:54.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.205" endtime="20201030 15:54:54.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.216" endtime="20201030 15:54:54.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.214" endtime="20201030 15:54:54.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.213" endtime="20201030 15:54:54.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.856" endtime="20201030 15:54:54.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.855" endtime="20201030 15:54:54.236"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.245" endtime="20201030 15:54:54.265"></status>
</kw>
<msg timestamp="20201030 15:54:54.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.243" endtime="20201030 15:54:54.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.267" endtime="20201030 15:54:54.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.269" endtime="20201030 15:54:54.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.241" endtime="20201030 15:54:54.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.239" endtime="20201030 15:54:54.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.278" endtime="20201030 15:54:54.563"></status>
</kw>
<msg timestamp="20201030 15:54:54.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024701264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.277" endtime="20201030 15:54:54.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024701264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.567" endtime="20201030 15:54:54.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.575" endtime="20201030 15:54:54.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.274" endtime="20201030 15:54:54.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.272" endtime="20201030 15:54:54.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.582" level="INFO">${RESULT} = [{'diff': 6.783299999999978e-05}, {'diff': 6.763900000000128e-05}, {'diff': 6.747299999999845e-05}, {'diff': 6.752800000000073e-05}, {'diff': 6.741700000000017e-05}, {'diff': 6.77640000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:54.578" endtime="20201030 15:54:54.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:54.586" level="INFO">${ACCURACY} = {'diff': [6.783299999999978e-05, 6.763900000000128e-05, 6.747299999999845e-05, 6.752800000000073e-05, 6.741700000000017e-05, 6.77640000000014e-05, 6.791700000000067e-05, 6.72640000000009e-05, 6.772300...</msg>
<status status="PASS" starttime="20201030 15:54:54.583" endtime="20201030 15:54:54.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.590" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:54:54.589" endtime="20201030 15:54:54.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.593" level="INFO">VALUE: [6.783299999999978e-05, 6.763900000000128e-05, 6.747299999999845e-05, 6.752800000000073e-05, 6.741700000000017e-05, 6.77640000000014e-05, 6.791700000000067e-05, 6.72640000000009e-05, 6.772300000000217e-05, 6.797299999999895e-05, 6.798700000000199e-05, 6.797299999999895e-05, 6.80969999999996e-05, 6.766600000000095e-05, 6.75969999999991e-05, 6.761100000000214e-05, 6.740299999999713e-05, 6.77359999999988e-05, 6.773600000000227e-05, 6.758299999999953e-05, 6.786100000000239e-05, 6.811099999999917e-05, 6.800000000000209e-05, 6.773600000000227e-05, 6.720799999999916e-05, 6.780600000000012e-05, 6.801399999999819e-05, 6.77640000000014e-05, 6.736100000000189e-05, 6.802799999999776e-05, 6.720799999999916e-05, 6.747200000000245e-05, 6.802799999999776e-05, 6.756999999999944e-05, 6.79160000000012e-05, 6.795799999999991e-05, 6.786100000000239e-05, 6.744400000000331e-05, 6.800000000000209e-05, 6.783299999999978e-05, 6.734699999999885e-05, 6.79160000000012e-05, 6.743099999999974e-05, 6.788899999999806e-05, 6.747300000000192e-05, 6.752800000000073e-05, 6.766600000000095e-05, 6.72359999999983e-05, 6.813900000000178e-05, 6.772199999999923e-05]</msg>
<status status="PASS" starttime="20201030 15:54:54.591" endtime="20201030 15:54:54.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.587" endtime="20201030 15:54:54.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.598" endtime="20201030 15:54:54.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.597" endtime="20201030 15:54:54.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.596" endtime="20201030 15:54:54.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.237" endtime="20201030 15:54:54.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.237" endtime="20201030 15:54:54.619"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.628" endtime="20201030 15:54:54.645"></status>
</kw>
<msg timestamp="20201030 15:54:54.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.626" endtime="20201030 15:54:54.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.647" endtime="20201030 15:54:54.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.649" endtime="20201030 15:54:54.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.624" endtime="20201030 15:54:54.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.622" endtime="20201030 15:54:54.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.658" endtime="20201030 15:54:54.943"></status>
</kw>
<msg timestamp="20201030 15:54:54.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021347556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.656" endtime="20201030 15:54:54.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021347556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.947" endtime="20201030 15:54:54.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.955" endtime="20201030 15:54:54.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.654" endtime="20201030 15:54:54.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.652" endtime="20201030 15:54:54.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.961" level="INFO">${RESULT} = [{'diff': 6.954099999999935e-05}, {'diff': 6.881899999999774e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.836099999999942e-05}, {'diff': 6.851399999999869e-05}, {'diff': 6.898600000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:54.958" endtime="20201030 15:54:54.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:54.966" level="INFO">${ACCURACY} = {'diff': [6.954099999999935e-05, 6.881899999999774e-05, 6.824999999999887e-05, 6.836099999999942e-05, 6.851399999999869e-05, 6.898600000000005e-05, 6.886099999999992e-05, 6.904199999999833e-05, 6.8570...</msg>
<status status="PASS" starttime="20201030 15:54:54.962" endtime="20201030 15:54:54.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.971" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:54:54.970" endtime="20201030 15:54:54.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.973" level="INFO">VALUE: [6.954099999999935e-05, 6.881899999999774e-05, 6.824999999999887e-05, 6.836099999999942e-05, 6.851399999999869e-05, 6.898600000000005e-05, 6.886099999999992e-05, 6.904199999999833e-05, 6.857000000000044e-05, 6.861099999999967e-05, 6.848599999999955e-05, 6.841700000000117e-05, 6.829200000000105e-05, 6.877799999999851e-05, 6.85420000000013e-05, 6.822199999999973e-05, 6.852800000000173e-05, 6.912499999999974e-05, 6.89160000000022e-05, 6.868100000000099e-05, 6.918100000000149e-05, 6.827799999999801e-05, 6.869499999999709e-05, 6.877800000000198e-05, 6.829100000000157e-05, 6.82359999999993e-05, 6.918099999999802e-05, 6.829200000000105e-05, 6.863899999999881e-05, 6.865299999999838e-05, 6.85970000000001e-05, 6.912500000000321e-05, 6.899999999999962e-05, 6.845800000000041e-05, 6.843100000000074e-05, 6.916599999999898e-05, 6.822199999999973e-05, 6.827800000000148e-05, 6.851399999999869e-05, 6.845800000000041e-05, 6.909800000000008e-05, 6.884700000000035e-05, 6.85970000000001e-05, 6.918100000000149e-05, 6.856900000000096e-05, 6.905499999999842e-05, 6.877800000000198e-05, 6.84169999999977e-05, 6.915300000000235e-05, 6.870800000000066e-05]</msg>
<status status="PASS" starttime="20201030 15:54:54.972" endtime="20201030 15:54:54.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.967" endtime="20201030 15:54:54.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.978" endtime="20201030 15:54:54.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.976" endtime="20201030 15:54:54.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.975" endtime="20201030 15:54:54.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.620" endtime="20201030 15:54:54.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.619" endtime="20201030 15:54:54.999"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.007" endtime="20201030 15:54:55.025"></status>
</kw>
<msg timestamp="20201030 15:54:55.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.006" endtime="20201030 15:54:55.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.026" endtime="20201030 15:54:55.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.029" endtime="20201030 15:54:55.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.003" endtime="20201030 15:54:55.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.001" endtime="20201030 15:54:55.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.039" endtime="20201030 15:54:55.327"></status>
</kw>
<msg timestamp="20201030 15:54:55.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021549347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.037" endtime="20201030 15:54:55.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021549347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.331" endtime="20201030 15:54:55.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.339" endtime="20201030 15:54:55.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.034" endtime="20201030 15:54:55.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.032" endtime="20201030 15:54:55.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.345" level="INFO">${RESULT} = [{'diff': 7.027800000000001e-05}, {'diff': 6.965299999999938e-05}, {'diff': 6.933299999999781e-05}, {'diff': 6.966599999999948e-05}, {'diff': 6.958300000000153e-05}, {'diff': 6.983300000000178e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:55.342" endtime="20201030 15:54:55.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:55.349" level="INFO">${ACCURACY} = {'diff': [7.027800000000001e-05, 6.965299999999938e-05, 6.933299999999781e-05, 6.966599999999948e-05, 6.958300000000153e-05, 6.983300000000178e-05, 6.970799999999819e-05, 6.927699999999953e-05, 6.9846...</msg>
<status status="PASS" starttime="20201030 15:54:55.346" endtime="20201030 15:54:55.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.354" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:54:55.353" endtime="20201030 15:54:55.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.356" level="INFO">VALUE: [7.027800000000001e-05, 6.965299999999938e-05, 6.933299999999781e-05, 6.966599999999948e-05, 6.958300000000153e-05, 6.983300000000178e-05, 6.970799999999819e-05, 6.927699999999953e-05, 6.984699999999788e-05, 6.972200000000123e-05, 6.940299999999913e-05, 6.965299999999938e-05, 7.002799999999976e-05, 6.990299999999963e-05, 6.934700000000085e-05, 6.948600000000055e-05, 6.959699999999763e-05, 6.984800000000083e-05, 6.959800000000058e-05, 6.983400000000126e-05, 6.984699999999788e-05, 6.977700000000003e-05, 6.975000000000037e-05, 6.970799999999819e-05, 6.934700000000085e-05, 6.977700000000003e-05, 6.950000000000012e-05, 6.954099999999935e-05, 6.965299999999938e-05, 6.950000000000012e-05, 7.015299999999988e-05, 6.972200000000123e-05, 6.979199999999908e-05, 6.930599999999815e-05, 6.945899999999741e-05, 6.927699999999953e-05, 7.009699999999813e-05, 7.011100000000117e-05, 6.927799999999901e-05, 6.927800000000248e-05, 6.920900000000063e-05, 7.002700000000028e-05, 6.991599999999973e-05, 6.955499999999892e-05, 6.92360000000003e-05, 6.976399999999994e-05, 6.938900000000303e-05, 6.977799999999951e-05, 6.929100000000257e-05, 6.941700000000217e-05]</msg>
<status status="PASS" starttime="20201030 15:54:55.355" endtime="20201030 15:54:55.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.350" endtime="20201030 15:54:55.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.361" endtime="20201030 15:54:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.360" endtime="20201030 15:54:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.359" endtime="20201030 15:54:55.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.999" endtime="20201030 15:54:55.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.999" endtime="20201030 15:54:55.382"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.391" endtime="20201030 15:54:55.409"></status>
</kw>
<msg timestamp="20201030 15:54:55.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.389" endtime="20201030 15:54:55.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.411" endtime="20201030 15:54:55.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.413" endtime="20201030 15:54:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.386" endtime="20201030 15:54:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.384" endtime="20201030 15:54:55.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.422" endtime="20201030 15:54:55.707"></status>
</kw>
<msg timestamp="20201030 15:54:55.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.420" endtime="20201030 15:54:55.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.711" endtime="20201030 15:54:55.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.720" endtime="20201030 15:54:55.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.418" endtime="20201030 15:54:55.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.416" endtime="20201030 15:54:55.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.726" level="INFO">${RESULT} = [{'diff': 7.154200000000083e-05}, {'diff': 7.113900000000131e-05}, {'diff': 7.111200000000165e-05}, {'diff': 7.058299999999906e-05}, {'diff': 7.109699999999913e-05}, {'diff': 7.063900000000081e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:55.723" endtime="20201030 15:54:55.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:55.730" level="INFO">${ACCURACY} = {'diff': [7.154200000000083e-05, 7.113900000000131e-05, 7.111200000000165e-05, 7.058299999999906e-05, 7.109699999999913e-05, 7.063900000000081e-05, 7.059699999999863e-05, 7.034699999999838e-05, 7.0277...</msg>
<status status="PASS" starttime="20201030 15:54:55.727" endtime="20201030 15:54:55.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.734" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:54:55.733" endtime="20201030 15:54:55.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.737" level="INFO">VALUE: [7.154200000000083e-05, 7.113900000000131e-05, 7.111200000000165e-05, 7.058299999999906e-05, 7.109699999999913e-05, 7.063900000000081e-05, 7.059699999999863e-05, 7.034699999999838e-05, 7.027700000000053e-05, 7.052800000000026e-05, 7.10970000000026e-05, 7.041600000000023e-05, 7.083299999999931e-05, 7.023599999999783e-05, 7.072199999999876e-05, 7.070900000000213e-05, 7.091600000000073e-05, 7.027700000000053e-05, 7.04169999999997e-05, 7.079200000000008e-05, 7.02230000000012e-05, 7.073599999999833e-05, 7.072200000000223e-05, 7.040300000000013e-05, 7.095900000000238e-05, 7.098599999999858e-05, 7.069399999999962e-05, 7.09170000000002e-05, 7.06109999999982e-05, 7.111199999999818e-05, 7.111100000000217e-05, 7.102799999999729e-05, 7.048700000000102e-05, 7.054099999999688e-05, 7.066600000000048e-05, 7.068000000000005e-05, 7.034699999999838e-05, 7.084699999999888e-05, 7.086099999999845e-05, 7.108299999999956e-05, 7.040200000000066e-05, 7.087500000000149e-05, 7.098699999999805e-05, 7.070900000000213e-05, 7.054199999999983e-05, 7.090300000000063e-05, 7.082000000000269e-05, 7.045800000000241e-05, 7.097199999999901e-05, 7.073599999999833e-05]</msg>
<status status="PASS" starttime="20201030 15:54:55.736" endtime="20201030 15:54:55.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.731" endtime="20201030 15:54:55.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.743" endtime="20201030 15:54:55.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.741" endtime="20201030 15:54:55.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.740" endtime="20201030 15:54:55.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.383" endtime="20201030 15:54:55.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.382" endtime="20201030 15:54:55.764"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.772" endtime="20201030 15:54:55.790"></status>
</kw>
<msg timestamp="20201030 15:54:55.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.770" endtime="20201030 15:54:55.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.791" endtime="20201030 15:54:55.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.794" endtime="20201030 15:54:55.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.768" endtime="20201030 15:54:55.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.766" endtime="20201030 15:54:55.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.803" endtime="20201030 15:54:56.089"></status>
</kw>
<msg timestamp="20201030 15:54:56.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021369347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021441514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.801" endtime="20201030 15:54:56.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021369347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021441514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.093" endtime="20201030 15:54:56.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.101" endtime="20201030 15:54:56.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.798" endtime="20201030 15:54:56.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.797" endtime="20201030 15:54:56.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.108" level="INFO">${RESULT} = [{'diff': 7.216699999999798e-05}, {'diff': 7.186100000000292e-05}, {'diff': 7.200000000000262e-05}, {'diff': 7.172199999999976e-05}, {'diff': 7.158300000000006e-05}, {'diff': 7.127799999999754e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:56.104" endtime="20201030 15:54:56.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:56.113" level="INFO">${ACCURACY} = {'diff': [7.216699999999798e-05, 7.186100000000292e-05, 7.200000000000262e-05, 7.172199999999976e-05, 7.158300000000006e-05, 7.127799999999754e-05, 7.177800000000151e-05, 7.123599999999883e-05, 7.1667...</msg>
<status status="PASS" starttime="20201030 15:54:56.108" endtime="20201030 15:54:56.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.117" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:54:56.116" endtime="20201030 15:54:56.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.119" level="INFO">VALUE: [7.216699999999798e-05, 7.186100000000292e-05, 7.200000000000262e-05, 7.172199999999976e-05, 7.158300000000006e-05, 7.127799999999754e-05, 7.177800000000151e-05, 7.123599999999883e-05, 7.166700000000095e-05, 7.180600000000065e-05, 7.176400000000194e-05, 7.201400000000219e-05, 7.129199999999711e-05, 7.168100000000052e-05, 7.170899999999966e-05, 7.169500000000009e-05, 7.184699999999988e-05, 7.131900000000024e-05, 7.199999999999915e-05, 7.195800000000044e-05, 7.19309999999973e-05, 7.138900000000156e-05, 7.126400000000144e-05, 7.134700000000285e-05, 7.162500000000224e-05, 7.184699999999988e-05, 7.152700000000178e-05, 7.120799999999969e-05, 7.136100000000242e-05, 7.166699999999748e-05, 7.119499999999959e-05, 7.147199999999951e-05, 7.120799999999969e-05, 7.184799999999936e-05, 7.163900000000181e-05, 7.120799999999969e-05, 7.147199999999951e-05, 7.161199999999868e-05, 7.166599999999801e-05, 7.16109999999992e-05, 7.198599999999958e-05, 7.147199999999951e-05, 7.147199999999951e-05, 7.21109999999997e-05, 7.215299999999841e-05, 7.151399999999822e-05, 7.183300000000031e-05, 7.15560000000004e-05, 7.131999999999972e-05, 7.168100000000052e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.118" endtime="20201030 15:54:56.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.113" endtime="20201030 15:54:56.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.124" endtime="20201030 15:54:56.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.123" endtime="20201030 15:54:56.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.122" endtime="20201030 15:54:56.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.764" endtime="20201030 15:54:56.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.764" endtime="20201030 15:54:56.145"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.154" endtime="20201030 15:54:56.171"></status>
</kw>
<msg timestamp="20201030 15:54:56.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.152" endtime="20201030 15:54:56.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.173" endtime="20201030 15:54:56.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.175" endtime="20201030 15:54:56.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.149" endtime="20201030 15:54:56.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.147" endtime="20201030 15:54:56.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.184" endtime="20201030 15:54:56.471"></status>
</kw>
<msg timestamp="20201030 15:54:56.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021413819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021487403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.182" endtime="20201030 15:54:56.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021413819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021487403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.475" endtime="20201030 15:54:56.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.483" endtime="20201030 15:54:56.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.180" endtime="20201030 15:54:56.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.178" endtime="20201030 15:54:56.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.490" level="INFO">${RESULT} = [{'diff': 7.358399999999807e-05}, {'diff': 7.302699999999981e-05}, {'diff': 7.277799999999904e-05}, {'diff': 7.279199999999861e-05}, {'diff': 7.244400000000137e-05}, {'diff': 7.284799999999689e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:56.487" endtime="20201030 15:54:56.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:56.494" level="INFO">${ACCURACY} = {'diff': [7.358399999999807e-05, 7.302699999999981e-05, 7.277799999999904e-05, 7.279199999999861e-05, 7.244400000000137e-05, 7.284799999999689e-05, 7.25829999999976e-05, 7.259700000000063e-05, 7.28470...</msg>
<status status="PASS" starttime="20201030 15:54:56.491" endtime="20201030 15:54:56.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.498" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:54:56.497" endtime="20201030 15:54:56.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.501" level="INFO">VALUE: [7.358399999999807e-05, 7.302699999999981e-05, 7.277799999999904e-05, 7.279199999999861e-05, 7.244400000000137e-05, 7.284799999999689e-05, 7.25829999999976e-05, 7.259700000000063e-05, 7.284700000000088e-05, 7.272200000000076e-05, 7.262499999999977e-05, 7.237499999999952e-05, 7.283300000000131e-05, 7.252799999999879e-05, 7.284700000000088e-05, 7.265299999999891e-05, 7.247200000000051e-05, 7.220900000000016e-05, 7.276399999999947e-05, 7.270800000000119e-05, 7.3069000000002e-05, 7.247199999999704e-05, 7.300000000000015e-05, 7.245800000000094e-05, 7.245800000000094e-05, 7.24309999999978e-05, 7.248600000000008e-05, 7.233400000000029e-05, 7.269499999999762e-05, 7.244499999999737e-05, 7.288899999999959e-05, 7.247200000000051e-05, 7.233300000000081e-05, 7.284700000000088e-05, 7.262499999999977e-05, 7.295900000000091e-05, 7.295900000000091e-05, 7.276399999999947e-05, 7.265300000000238e-05, 7.298600000000058e-05, 7.272300000000023e-05, 7.290199999999969e-05, 7.266699999999848e-05, 7.222200000000026e-05, 7.302800000000276e-05, 7.312500000000027e-05, 7.308300000000156e-05, 7.301399999999972e-05, 7.231900000000124e-05, 7.29309999999983e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.499" endtime="20201030 15:54:56.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.495" endtime="20201030 15:54:56.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.506" endtime="20201030 15:54:56.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.504" endtime="20201030 15:54:56.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.503" endtime="20201030 15:54:56.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.146" endtime="20201030 15:54:56.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.145" endtime="20201030 15:54:56.526"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.535" endtime="20201030 15:54:56.553"></status>
</kw>
<msg timestamp="20201030 15:54:56.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.533" endtime="20201030 15:54:56.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.555" endtime="20201030 15:54:56.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.557" endtime="20201030 15:54:56.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.531" endtime="20201030 15:54:56.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.529" endtime="20201030 15:54:56.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.566" endtime="20201030 15:54:56.852"></status>
</kw>
<msg timestamp="20201030 15:54:56.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.565" endtime="20201030 15:54:56.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.856" endtime="20201030 15:54:56.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.864" endtime="20201030 15:54:56.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.562" endtime="20201030 15:54:56.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.561" endtime="20201030 15:54:56.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.871" level="INFO">${RESULT} = [{'diff': 7.437499999999805e-05}, {'diff': 7.383399999999832e-05}, {'diff': 7.319399999999865e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.372300000000123e-05}, {'diff': 7.401399999999725e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:56.867" endtime="20201030 15:54:56.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:56.875" level="INFO">${ACCURACY} = {'diff': [7.437499999999805e-05, 7.383399999999832e-05, 7.319399999999865e-05, 7.381899999999927e-05, 7.372300000000123e-05, 7.401399999999725e-05, 7.381899999999927e-05, 7.413900000000084e-05, 7.4028...</msg>
<status status="PASS" starttime="20201030 15:54:56.872" endtime="20201030 15:54:56.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.879" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:54:56.878" endtime="20201030 15:54:56.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.881" level="INFO">VALUE: [7.437499999999805e-05, 7.383399999999832e-05, 7.319399999999865e-05, 7.381899999999927e-05, 7.372300000000123e-05, 7.401399999999725e-05, 7.381899999999927e-05, 7.413900000000084e-05, 7.402800000000029e-05, 7.354199999999936e-05, 7.412500000000127e-05, 7.331999999999825e-05, 7.344499999999837e-05, 7.33049999999992e-05, 7.402800000000029e-05, 7.351400000000022e-05, 7.323600000000083e-05, 7.415299999999694e-05, 7.369500000000209e-05, 7.384799999999789e-05, 7.340200000000019e-05, 7.348599999999761e-05, 7.323600000000083e-05, 7.40829999999991e-05, 7.363900000000034e-05, 7.351400000000022e-05, 7.372300000000123e-05, 7.333300000000181e-05, 7.391600000000026e-05, 7.320900000000116e-05, 7.345799999999847e-05, 7.404100000000038e-05, 7.379100000000013e-05, 7.416699999999998e-05, 7.369400000000262e-05, 7.352799999999979e-05, 7.327799999999954e-05, 7.413900000000084e-05, 7.395899999999844e-05, 7.337500000000052e-05, 7.404100000000038e-05, 7.345799999999847e-05, 7.327799999999954e-05, 7.341699999999923e-05, 7.369499999999862e-05, 7.338900000000009e-05, 7.345800000000194e-05, 7.347199999999804e-05, 7.345800000000194e-05, 7.333299999999834e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.880" endtime="20201030 15:54:56.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.875" endtime="20201030 15:54:56.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.887" endtime="20201030 15:54:56.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.886" endtime="20201030 15:54:56.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.884" endtime="20201030 15:54:56.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.527" endtime="20201030 15:54:56.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.527" endtime="20201030 15:54:56.908"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.916" endtime="20201030 15:54:56.934"></status>
</kw>
<msg timestamp="20201030 15:54:56.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.915" endtime="20201030 15:54:56.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.935" endtime="20201030 15:54:56.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.938" endtime="20201030 15:54:56.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.912" endtime="20201030 15:54:56.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.910" endtime="20201030 15:54:56.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.947" endtime="20201030 15:54:57.233"></status>
</kw>
<msg timestamp="20201030 15:54:57.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021350819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021425833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.945" endtime="20201030 15:54:57.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021350819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021425833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.237" endtime="20201030 15:54:57.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.245" endtime="20201030 15:54:57.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.943" endtime="20201030 15:54:57.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.941" endtime="20201030 15:54:57.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.252" level="INFO">${RESULT} = [{'diff': 7.501399999999825e-05}, {'diff': 7.470900000000266e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.486100000000245e-05}, {'diff': 7.481900000000027e-05}, {'diff': 7.420799999999922e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:57.249" endtime="20201030 15:54:57.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:57.257" level="INFO">${ACCURACY} = {'diff': [7.501399999999825e-05, 7.470900000000266e-05, 7.499999999999868e-05, 7.486100000000245e-05, 7.481900000000027e-05, 7.420799999999922e-05, 7.431999999999925e-05, 7.438900000000109e-05, 7.4555...</msg>
<status status="PASS" starttime="20201030 15:54:57.253" endtime="20201030 15:54:57.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.261" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:54:57.260" endtime="20201030 15:54:57.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.263" level="INFO">VALUE: [7.501399999999825e-05, 7.470900000000266e-05, 7.499999999999868e-05, 7.486100000000245e-05, 7.481900000000027e-05, 7.420799999999922e-05, 7.431999999999925e-05, 7.438900000000109e-05, 7.455500000000045e-05, 7.43050000000002e-05, 7.437500000000152e-05, 7.490300000000116e-05, 7.509699999999966e-05, 7.436099999999848e-05, 7.430599999999968e-05, 7.506900000000052e-05, 7.506899999999705e-05, 7.437500000000152e-05, 7.508399999999957e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.472199999999929e-05, 7.42639999999975e-05, 7.468100000000005e-05, 7.420800000000269e-05, 7.42500000000014e-05, 7.481900000000027e-05, 7.419399999999965e-05, 7.452700000000131e-05, 7.449999999999818e-05, 7.455599999999993e-05, 7.430599999999968e-05, 7.424999999999793e-05, 7.438899999999762e-05, 7.51110000000027e-05, 7.44439999999999e-05, 7.506899999999705e-05, 7.51249999999988e-05, 7.433299999999934e-05, 7.476299999999853e-05, 7.447200000000251e-05, 7.458400000000254e-05, 7.429100000000063e-05, 7.44439999999999e-05, 7.438900000000109e-05, 7.495799999999997e-05, 7.498699999999858e-05, 7.447199999999904e-05, 7.501399999999825e-05, 7.42630000000015e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.262" endtime="20201030 15:54:57.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.257" endtime="20201030 15:54:57.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.268" endtime="20201030 15:54:57.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.267" endtime="20201030 15:54:57.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.266" endtime="20201030 15:54:57.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.909" endtime="20201030 15:54:57.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.908" endtime="20201030 15:54:57.289"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.298" endtime="20201030 15:54:57.316"></status>
</kw>
<msg timestamp="20201030 15:54:57.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.296" endtime="20201030 15:54:57.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.317" endtime="20201030 15:54:57.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.319" endtime="20201030 15:54:57.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.294" endtime="20201030 15:54:57.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.292" endtime="20201030 15:54:57.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.328" endtime="20201030 15:54:57.616"></status>
</kw>
<msg timestamp="20201030 15:54:57.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.327" endtime="20201030 15:54:57.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.620" endtime="20201030 15:54:57.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.628" endtime="20201030 15:54:57.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.324" endtime="20201030 15:54:57.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.323" endtime="20201030 15:54:57.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.634" level="INFO">${RESULT} = [{'diff': 7.59440000000014e-05}, {'diff': 7.555600000000093e-05}, {'diff': 7.602799999999882e-05}, {'diff': 7.601399999999925e-05}, {'diff': 7.6070000000001e-05}, {'diff': 7.527799999999807e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:54:57.631" endtime="20201030 15:54:57.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:57.638" level="INFO">${ACCURACY} = {'diff': [7.59440000000014e-05, 7.555600000000093e-05, 7.602799999999882e-05, 7.601399999999925e-05, 7.6070000000001e-05, 7.527799999999807e-05, 7.565299999999844e-05, 7.522299999999926e-05, 7.5860999...</msg>
<status status="PASS" starttime="20201030 15:54:57.635" endtime="20201030 15:54:57.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.643" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:54:57.642" endtime="20201030 15:54:57.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.645" level="INFO">VALUE: [7.59440000000014e-05, 7.555600000000093e-05, 7.602799999999882e-05, 7.601399999999925e-05, 7.6070000000001e-05, 7.527799999999807e-05, 7.565299999999844e-05, 7.522299999999926e-05, 7.586099999999998e-05, 7.604200000000186e-05, 7.608400000000057e-05, 7.558400000000007e-05, 7.533399999999982e-05, 7.533299999999687e-05, 7.554200000000136e-05, 7.55830000000006e-05, 7.58189999999978e-05, 7.601300000000324e-05, 7.595800000000097e-05, 7.555500000000145e-05, 7.570799999999725e-05, 7.595800000000097e-05, 7.559700000000016e-05, 7.602799999999882e-05, 7.569500000000062e-05, 7.552799999999832e-05, 7.533300000000034e-05, 7.598600000000011e-05, 7.58890000000026e-05, 7.540199999999872e-05, 7.587499999999955e-05, 7.545800000000047e-05, 7.53890000000021e-05, 7.601400000000272e-05, 7.60830000000011e-05, 7.556999999999703e-05, 7.609800000000014e-05, 7.570799999999725e-05, 7.551399999999875e-05, 7.59440000000014e-05, 7.579200000000161e-05, 7.551399999999875e-05, 7.561099999999973e-05, 7.522199999999979e-05, 7.604199999999839e-05, 7.566699999999801e-05, 7.540199999999872e-05, 7.579199999999814e-05, 7.554199999999789e-05, 7.537499999999905e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.644" endtime="20201030 15:54:57.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.639" endtime="20201030 15:54:57.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.650" endtime="20201030 15:54:57.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.649" endtime="20201030 15:54:57.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.648" endtime="20201030 15:54:57.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.290" endtime="20201030 15:54:57.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.289" endtime="20201030 15:54:57.671"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.680" endtime="20201030 15:54:57.700"></status>
</kw>
<msg timestamp="20201030 15:54:57.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.678" endtime="20201030 15:54:57.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.702" endtime="20201030 15:54:57.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.704" endtime="20201030 15:54:57.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.676" endtime="20201030 15:54:57.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.673" endtime="20201030 15:54:57.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.713" endtime="20201030 15:54:58.000"></status>
</kw>
<msg timestamp="20201030 15:54:58.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024550542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024627667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.712" endtime="20201030 15:54:58.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024550542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024627667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.004" endtime="20201030 15:54:58.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.012" endtime="20201030 15:54:58.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.709" endtime="20201030 15:54:58.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.708" endtime="20201030 15:54:58.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.019" level="INFO">${RESULT} = [{'diff': 7.712499999999733e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.669400000000215e-05}, {'diff': 7.647199999999757e-05}, {'diff': 7.630499999999873e-05}, {'diff': 7.670800000000172e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:58.015" endtime="20201030 15:54:58.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:58.023" level="INFO">${ACCURACY} = {'diff': [7.712499999999733e-05, 7.677799999999957e-05, 7.669400000000215e-05, 7.647199999999757e-05, 7.630499999999873e-05, 7.670800000000172e-05, 7.669399999999868e-05, 7.715200000000047e-05, 7.7000...</msg>
<status status="PASS" starttime="20201030 15:54:58.020" endtime="20201030 15:54:58.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.027" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:54:58.026" endtime="20201030 15:54:58.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.029" level="INFO">VALUE: [7.712499999999733e-05, 7.677799999999957e-05, 7.669400000000215e-05, 7.647199999999757e-05, 7.630499999999873e-05, 7.670800000000172e-05, 7.669399999999868e-05, 7.715200000000047e-05, 7.700000000000068e-05, 7.645900000000094e-05, 7.705599999999896e-05, 7.630600000000168e-05, 7.632000000000125e-05, 7.700000000000068e-05, 7.652800000000279e-05, 7.638899999999962e-05, 7.70830000000021e-05, 7.71250000000008e-05, 7.687500000000055e-05, 7.71250000000008e-05, 7.688900000000012e-05, 7.630599999999821e-05, 7.699999999999721e-05, 7.652799999999932e-05, 7.619500000000112e-05, 7.624999999999993e-05, 7.704199999999939e-05, 7.651399999999975e-05, 7.705499999999949e-05, 7.6764e-05, 7.630599999999821e-05, 7.705500000000295e-05, 7.651400000000322e-05, 7.656900000000202e-05, 7.686099999999751e-05, 7.686100000000098e-05, 7.681999999999828e-05, 7.622300000000026e-05, 7.62639999999995e-05, 7.711100000000123e-05, 7.693099999999883e-05, 7.708299999999862e-05, 7.619399999999818e-05, 7.71250000000008e-05, 7.680499999999923e-05, 7.633300000000134e-05, 7.687500000000055e-05, 7.63189999999983e-05, 7.65839999999976e-05, 7.618099999999808e-05]</msg>
<status status="PASS" starttime="20201030 15:54:58.028" endtime="20201030 15:54:58.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.024" endtime="20201030 15:54:58.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.035" endtime="20201030 15:54:58.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.034" endtime="20201030 15:54:58.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.033" endtime="20201030 15:54:58.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.672" endtime="20201030 15:54:58.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.671" endtime="20201030 15:54:58.056"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.064" endtime="20201030 15:54:58.082"></status>
</kw>
<msg timestamp="20201030 15:54:58.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.063" endtime="20201030 15:54:58.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.084" endtime="20201030 15:54:58.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.086" endtime="20201030 15:54:58.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.060" endtime="20201030 15:54:58.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.058" endtime="20201030 15:54:58.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.095" endtime="20201030 15:54:58.381"></status>
</kw>
<msg timestamp="20201030 15:54:58.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.094" endtime="20201030 15:54:58.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.385" endtime="20201030 15:54:58.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.393" endtime="20201030 15:54:58.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.091" endtime="20201030 15:54:58.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.089" endtime="20201030 15:54:58.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.399" level="INFO">${RESULT} = [{'diff': 7.806999999999953e-05}, {'diff': 7.766600000000054e-05}, {'diff': 7.749999999999771e-05}, {'diff': 7.808299999999962e-05}, {'diff': 7.768000000000011e-05}, {'diff': 7.811100000000223e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:58.396" endtime="20201030 15:54:58.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:58.404" level="INFO">${ACCURACY} = {'diff': [7.806999999999953e-05, 7.766600000000054e-05, 7.749999999999771e-05, 7.808299999999962e-05, 7.768000000000011e-05, 7.811100000000223e-05, 7.784700000000241e-05, 7.730600000000268e-05, 7.8139...</msg>
<status status="PASS" starttime="20201030 15:54:58.400" endtime="20201030 15:54:58.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.409" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:54:58.408" endtime="20201030 15:54:58.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.411" level="INFO">VALUE: [7.806999999999953e-05, 7.766600000000054e-05, 7.749999999999771e-05, 7.808299999999962e-05, 7.768000000000011e-05, 7.811100000000223e-05, 7.784700000000241e-05, 7.730600000000268e-05, 7.813900000000137e-05, 7.787500000000155e-05, 7.76250000000013e-05, 7.748700000000108e-05, 7.812499999999833e-05, 7.765300000000044e-05, 7.74449999999989e-05, 7.773599999999839e-05, 7.749999999999771e-05, 7.743099999999933e-05, 7.745900000000194e-05, 7.78189999999998e-05, 7.747199999999857e-05, 7.791700000000026e-05, 7.793000000000036e-05, 7.793099999999983e-05, 7.793099999999983e-05, 7.731999999999878e-05, 7.79449999999994e-05, 7.720800000000222e-05, 7.779200000000014e-05, 7.801400000000125e-05, 7.815300000000094e-05, 7.763900000000087e-05, 7.750000000000118e-05, 7.751400000000075e-05, 7.754199999999989e-05, 7.717999999999961e-05, 7.76250000000013e-05, 7.736099999999801e-05, 7.748600000000161e-05, 7.763900000000087e-05, 7.744399999999943e-05, 7.801399999999778e-05, 7.736099999999801e-05, 7.716699999999951e-05, 7.76389999999974e-05, 7.793099999999983e-05, 7.787499999999808e-05, 7.723600000000136e-05, 7.80969999999992e-05, 7.766700000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:54:58.410" endtime="20201030 15:54:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.405" endtime="20201030 15:54:58.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.416" endtime="20201030 15:54:58.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.415" endtime="20201030 15:54:58.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.413" endtime="20201030 15:54:58.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.057" endtime="20201030 15:54:58.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.056" endtime="20201030 15:54:58.437"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.445" endtime="20201030 15:54:58.463"></status>
</kw>
<msg timestamp="20201030 15:54:58.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.444" endtime="20201030 15:54:58.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.465" endtime="20201030 15:54:58.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.467" endtime="20201030 15:54:58.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.441" endtime="20201030 15:54:58.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.439" endtime="20201030 15:54:58.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.476" endtime="20201030 15:54:58.762"></status>
</kw>
<msg timestamp="20201030 15:54:58.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.475" endtime="20201030 15:54:58.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.766" endtime="20201030 15:54:58.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.774" endtime="20201030 15:54:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.472" endtime="20201030 15:54:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.470" endtime="20201030 15:54:58.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.781" level="INFO">${RESULT} = [{'diff': 7.938899999999915e-05}, {'diff': 7.877800000000157e-05}, {'diff': 7.850000000000218e-05}, {'diff': 7.902800000000182e-05}, {'diff': 7.873599999999939e-05}, {'diff': 7.842999999999739e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:58.777" endtime="20201030 15:54:58.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:58.785" level="INFO">${ACCURACY} = {'diff': [7.938899999999915e-05, 7.877800000000157e-05, 7.850000000000218e-05, 7.902800000000182e-05, 7.873599999999939e-05, 7.842999999999739e-05, 7.900000000000268e-05, 7.855500000000099e-05, 7.8513...</msg>
<status status="PASS" starttime="20201030 15:54:58.782" endtime="20201030 15:54:58.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.789" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:54:58.788" endtime="20201030 15:54:58.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.791" level="INFO">VALUE: [7.938899999999915e-05, 7.877800000000157e-05, 7.850000000000218e-05, 7.902800000000182e-05, 7.873599999999939e-05, 7.842999999999739e-05, 7.900000000000268e-05, 7.855500000000099e-05, 7.851300000000228e-05, 7.820799999999975e-05, 7.880599999999724e-05, 7.862499999999883e-05, 7.874999999999896e-05, 7.818000000000061e-05, 7.89169999999978e-05, 7.899999999999921e-05, 7.830599999999674e-05, 7.863900000000187e-05, 7.85969999999997e-05, 7.849999999999871e-05, 7.818100000000008e-05, 7.90840000000001e-05, 7.849999999999871e-05, 7.891599999999832e-05, 7.879200000000114e-05, 7.868000000000111e-05, 7.823700000000183e-05, 7.8764000000002e-05, 7.893100000000083e-05, 7.911099999999976e-05, 7.854200000000089e-05, 7.88190000000008e-05, 7.893000000000136e-05, 7.869500000000015e-05, 7.91389999999989e-05, 7.838800000000215e-05, 7.869500000000015e-05, 7.911099999999976e-05, 7.855600000000046e-05, 7.830500000000074e-05, 7.820799999999975e-05, 7.869500000000015e-05, 7.837500000000205e-05, 7.886099999999951e-05, 7.905499999999802e-05, 7.823700000000183e-05, 7.892999999999789e-05, 7.85839999999996e-05, 7.854199999999742e-05, 7.836199999999849e-05]</msg>
<status status="PASS" starttime="20201030 15:54:58.790" endtime="20201030 15:54:58.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.785" endtime="20201030 15:54:58.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.797" endtime="20201030 15:54:58.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.795" endtime="20201030 15:54:58.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.794" endtime="20201030 15:54:58.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.438" endtime="20201030 15:54:58.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.437" endtime="20201030 15:54:58.817"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.826" endtime="20201030 15:54:58.845"></status>
</kw>
<msg timestamp="20201030 15:54:58.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.824" endtime="20201030 15:54:58.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.846" endtime="20201030 15:54:58.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.849" endtime="20201030 15:54:58.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.822" endtime="20201030 15:54:58.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.820" endtime="20201030 15:54:58.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.857" endtime="20201030 15:54:59.143"></status>
</kw>
<msg timestamp="20201030 15:54:59.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.856" endtime="20201030 15:54:59.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.147" endtime="20201030 15:54:59.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.155" endtime="20201030 15:54:59.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.853" endtime="20201030 15:54:59.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.852" endtime="20201030 15:54:59.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.162" level="INFO">${RESULT} = [{'diff': 8.080499999999977e-05}, {'diff': 8.004199999999892e-05}, {'diff': 7.924999999999946e-05}, {'diff': 8.000000000000021e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.937500000000305e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:59.159" endtime="20201030 15:54:59.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:59.166" level="INFO">${ACCURACY} = {'diff': [8.080499999999977e-05, 8.004199999999892e-05, 7.924999999999946e-05, 8.000000000000021e-05, 7.923599999999989e-05, 7.937500000000305e-05, 7.984700000000094e-05, 7.983400000000085e-05, 7.9319...</msg>
<status status="PASS" starttime="20201030 15:54:59.163" endtime="20201030 15:54:59.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.170" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:54:59.169" endtime="20201030 15:54:59.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.173" level="INFO">VALUE: [8.080499999999977e-05, 8.004199999999892e-05, 7.924999999999946e-05, 8.000000000000021e-05, 7.923599999999989e-05, 7.937500000000305e-05, 7.984700000000094e-05, 7.983400000000085e-05, 7.931999999999731e-05, 8.011100000000076e-05, 7.968099999999811e-05, 7.968099999999811e-05, 7.930499999999827e-05, 7.969400000000168e-05, 7.920800000000075e-05, 7.954199999999842e-05, 7.916700000000151e-05, 7.981999999999781e-05, 7.994399999999846e-05, 7.98190000000018e-05, 7.959800000000017e-05, 8.000000000000021e-05, 7.982000000000128e-05, 7.984700000000094e-05, 7.922199999999685e-05, 7.930599999999774e-05, 7.924999999999946e-05, 7.98190000000018e-05, 7.930599999999774e-05, 7.945900000000047e-05, 7.979200000000214e-05, 7.954199999999842e-05, 7.936100000000001e-05, 7.981899999999834e-05, 7.966700000000201e-05, 7.936100000000001e-05, 7.967999999999864e-05, 7.956899999999809e-05, 7.932000000000078e-05, 7.956999999999756e-05, 7.930600000000121e-05, 7.936100000000001e-05, 7.944499999999743e-05, 8.005600000000196e-05, 7.993099999999836e-05, 7.923599999999989e-05, 7.987500000000008e-05, 7.918100000000108e-05, 7.980599999999824e-05, 7.94450000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.171" endtime="20201030 15:54:59.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.167" endtime="20201030 15:54:59.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.179" endtime="20201030 15:54:59.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.177" endtime="20201030 15:54:59.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.176" endtime="20201030 15:54:59.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.818" endtime="20201030 15:54:59.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.818" endtime="20201030 15:54:59.199"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.208" endtime="20201030 15:54:59.226"></status>
</kw>
<msg timestamp="20201030 15:54:59.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.206" endtime="20201030 15:54:59.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.227" endtime="20201030 15:54:59.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.230" endtime="20201030 15:54:59.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.204" endtime="20201030 15:54:59.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.202" endtime="20201030 15:54:59.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.239" endtime="20201030 15:54:59.525"></status>
</kw>
<msg timestamp="20201030 15:54:59.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021448153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.237" endtime="20201030 15:54:59.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021448153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.529" endtime="20201030 15:54:59.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.537" endtime="20201030 15:54:59.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.235" endtime="20201030 15:54:59.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.233" endtime="20201030 15:54:59.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.544" level="INFO">${RESULT} = [{'diff': 8.136100000000202e-05}, {'diff': 8.067999999999964e-05}, {'diff': 8.023700000000036e-05}, {'diff': 8.086099999999805e-05}, {'diff': 8.029200000000264e-05}, {'diff': 8.094499999999893e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:59.541" endtime="20201030 15:54:59.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:59.549" level="INFO">${ACCURACY} = {'diff': [8.136100000000202e-05, 8.067999999999964e-05, 8.023700000000036e-05, 8.086099999999805e-05, 8.029200000000264e-05, 8.094499999999893e-05, 8.048600000000114e-05, 8.05970000000017e-05, 8.03189...</msg>
<status status="PASS" starttime="20201030 15:54:59.545" endtime="20201030 15:54:59.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.554" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:54:59.553" endtime="20201030 15:54:59.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.556" level="INFO">VALUE: [8.136100000000202e-05, 8.067999999999964e-05, 8.023700000000036e-05, 8.086099999999805e-05, 8.029200000000264e-05, 8.094499999999893e-05, 8.048600000000114e-05, 8.05970000000017e-05, 8.031899999999884e-05, 8.027700000000013e-05, 8.030499999999927e-05, 8.09169999999998e-05, 8.025000000000046e-05, 8.048600000000114e-05, 8.106899999999959e-05, 8.055599999999899e-05, 8.055600000000246e-05, 8.080499999999977e-05, 8.113899999999744e-05, 8.044499999999843e-05, 8.029199999999917e-05, 8.104199999999992e-05, 8.106899999999959e-05, 8.055499999999952e-05, 8.030499999999927e-05, 8.068099999999911e-05, 8.045799999999853e-05, 8.056899999999909e-05, 8.072199999999835e-05, 8.050000000000071e-05, 8.069400000000268e-05, 8.050000000000071e-05, 8.033400000000135e-05, 8.018099999999861e-05, 8.111100000000177e-05, 8.076400000000053e-05, 8.098600000000164e-05, 8.080499999999977e-05, 8.019400000000218e-05, 8.075000000000096e-05, 8.027699999999666e-05, 8.11390000000009e-05, 8.11109999999983e-05, 8.075000000000096e-05, 8.091600000000032e-05, 8.026300000000056e-05, 8.088900000000065e-05, 8.062500000000083e-05, 8.017999999999914e-05, 8.112499999999787e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.555" endtime="20201030 15:54:59.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.550" endtime="20201030 15:54:59.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.561" endtime="20201030 15:54:59.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.560" endtime="20201030 15:54:59.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.559" endtime="20201030 15:54:59.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.200" endtime="20201030 15:54:59.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.200" endtime="20201030 15:54:59.582"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.591" endtime="20201030 15:54:59.609"></status>
</kw>
<msg timestamp="20201030 15:54:59.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.589" endtime="20201030 15:54:59.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.610" endtime="20201030 15:54:59.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.613" endtime="20201030 15:54:59.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.586" endtime="20201030 15:54:59.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.584" endtime="20201030 15:54:59.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.622" endtime="20201030 15:54:59.909"></status>
</kw>
<msg timestamp="20201030 15:54:59.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021516653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021599375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.620" endtime="20201030 15:54:59.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021516653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021599375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.913" endtime="20201030 15:54:59.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.921" endtime="20201030 15:54:59.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.618" endtime="20201030 15:54:59.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.616" endtime="20201030 15:54:59.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.927" level="INFO">${RESULT} = [{'diff': 8.272200000000035e-05}, {'diff': 8.124999999999799e-05}, {'diff': 8.187499999999862e-05}, {'diff': 8.184699999999948e-05}, {'diff': 8.14719999999991e-05}, {'diff': 8.152800000000085e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:59.924" endtime="20201030 15:54:59.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:59.932" level="INFO">${ACCURACY} = {'diff': [8.272200000000035e-05, 8.124999999999799e-05, 8.187499999999862e-05, 8.184699999999948e-05, 8.14719999999991e-05, 8.152800000000085e-05, 8.126299999999809e-05, 8.143099999999986e-05, 8.14300...</msg>
<status status="PASS" starttime="20201030 15:54:59.928" endtime="20201030 15:54:59.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.936" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:54:59.935" endtime="20201030 15:54:59.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.938" level="INFO">VALUE: [8.272200000000035e-05, 8.124999999999799e-05, 8.187499999999862e-05, 8.184699999999948e-05, 8.14719999999991e-05, 8.152800000000085e-05, 8.126299999999809e-05, 8.143099999999986e-05, 8.143000000000039e-05, 8.175000000000196e-05, 8.175000000000196e-05, 8.187500000000208e-05, 8.116700000000004e-05, 8.154100000000095e-05, 8.159699999999923e-05, 8.191699999999733e-05, 8.181900000000034e-05, 8.131999999999931e-05, 8.14170000000003e-05, 8.175000000000196e-05, 8.17919999999972e-05, 8.202800000000135e-05, 8.186099999999905e-05, 8.126400000000103e-05, 8.204099999999798e-05, 8.169400000000021e-05, 8.145799999999953e-05, 8.191600000000132e-05, 8.204200000000092e-05, 8.118000000000014e-05, 8.141600000000082e-05, 8.198599999999917e-05, 8.141600000000082e-05, 8.166700000000054e-05, 8.155599999999999e-05, 8.141699999999683e-05, 8.199999999999874e-05, 8.150000000000171e-05, 8.130599999999974e-05, 8.212500000000234e-05, 8.172199999999935e-05, 8.144399999999996e-05, 8.190300000000122e-05, 8.125000000000146e-05, 8.130500000000027e-05, 8.116700000000004e-05, 8.166700000000054e-05, 8.123599999999842e-05, 8.173599999999892e-05, 8.127799999999713e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.937" endtime="20201030 15:54:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.932" endtime="20201030 15:54:59.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.943" endtime="20201030 15:54:59.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.942" endtime="20201030 15:54:59.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.941" endtime="20201030 15:54:59.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.583" endtime="20201030 15:54:59.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.582" endtime="20201030 15:54:59.964"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.973" endtime="20201030 15:54:59.992"></status>
</kw>
<msg timestamp="20201030 15:54:59.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.971" endtime="20201030 15:54:59.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.993" endtime="20201030 15:54:59.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.995" endtime="20201030 15:54:59.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.968" endtime="20201030 15:54:59.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.966" endtime="20201030 15:54:59.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.005" endtime="20201030 15:55:00.291"></status>
</kw>
<msg timestamp="20201030 15:55:00.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.003" endtime="20201030 15:55:00.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.295" endtime="20201030 15:55:00.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.303" endtime="20201030 15:55:00.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.001" endtime="20201030 15:55:00.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.999" endtime="20201030 15:55:00.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.310" level="INFO">${RESULT} = [{'diff': 8.324999999999999e-05}, {'diff': 8.263899999999894e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.252699999999891e-05}, {'diff': 8.229099999999823e-05}, {'diff': 8.218100000000061e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:00.306" endtime="20201030 15:55:00.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:00.314" level="INFO">${ACCURACY} = {'diff': [8.324999999999999e-05, 8.263899999999894e-05, 8.216700000000104e-05, 8.252699999999891e-05, 8.229099999999823e-05, 8.218100000000061e-05, 8.294500000000093e-05, 8.26109999999998e-05, 8.30549...</msg>
<status status="PASS" starttime="20201030 15:55:00.311" endtime="20201030 15:55:00.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.318" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:55:00.317" endtime="20201030 15:55:00.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.321" level="INFO">VALUE: [8.324999999999999e-05, 8.263899999999894e-05, 8.216700000000104e-05, 8.252699999999891e-05, 8.229099999999823e-05, 8.218100000000061e-05, 8.294500000000093e-05, 8.26109999999998e-05, 8.305499999999855e-05, 8.266700000000154e-05, 8.236100000000302e-05, 8.224999999999899e-05, 8.274999999999949e-05, 8.268100000000111e-05, 8.279099999999873e-05, 8.313899999999944e-05, 8.243100000000086e-05, 8.230599999999727e-05, 8.307000000000106e-05, 8.22919999999977e-05, 8.286199999999952e-05, 8.251399999999881e-05, 8.243100000000086e-05, 8.287499999999962e-05, 8.250000000000271e-05, 8.268100000000111e-05, 8.256999999999709e-05, 8.266700000000154e-05, 8.299999999999974e-05, 8.243000000000139e-05, 8.236199999999902e-05, 8.224999999999899e-05, 8.255599999999752e-05, 8.286100000000005e-05, 8.299999999999974e-05, 8.275000000000296e-05, 8.297300000000007e-05, 8.29309999999979e-05, 8.26109999999998e-05, 8.293100000000136e-05, 8.305599999999802e-05, 8.240300000000172e-05, 8.251399999999881e-05, 8.305600000000149e-05, 8.26109999999998e-05, 8.286100000000005e-05, 8.26109999999998e-05, 8.27780000000021e-05, 8.273599999999992e-05, 8.286100000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.319" endtime="20201030 15:55:00.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.315" endtime="20201030 15:55:00.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.326" endtime="20201030 15:55:00.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.325" endtime="20201030 15:55:00.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.324" endtime="20201030 15:55:00.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.965" endtime="20201030 15:55:00.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.964" endtime="20201030 15:55:00.347"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.356" endtime="20201030 15:55:00.374"></status>
</kw>
<msg timestamp="20201030 15:55:00.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.354" endtime="20201030 15:55:00.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.375" endtime="20201030 15:55:00.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.378" endtime="20201030 15:55:00.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.352" endtime="20201030 15:55:00.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.350" endtime="20201030 15:55:00.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.386" endtime="20201030 15:55:00.672"></status>
</kw>
<msg timestamp="20201030 15:55:00.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.385" endtime="20201030 15:55:00.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.676" endtime="20201030 15:55:00.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.684" endtime="20201030 15:55:00.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.382" endtime="20201030 15:55:00.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.381" endtime="20201030 15:55:00.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.691" level="INFO">${RESULT} = [{'diff': 8.392999999999942e-05}, {'diff': 8.318099999999815e-05}, {'diff': 8.367999999999917e-05}, {'diff': 8.3846999999998e-05}, {'diff': 8.365200000000003e-05}, {'diff': 8.323600000000042e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:00.687" endtime="20201030 15:55:00.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:00.695" level="INFO">${ACCURACY} = {'diff': [8.392999999999942e-05, 8.318099999999815e-05, 8.367999999999917e-05, 8.3846999999998e-05, 8.365200000000003e-05, 8.323600000000042e-05, 8.411099999999783e-05, 8.334800000000045e-05, 8.341700...</msg>
<status status="PASS" starttime="20201030 15:55:00.692" endtime="20201030 15:55:00.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.700" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:55:00.699" endtime="20201030 15:55:00.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.703" level="INFO">VALUE: [8.392999999999942e-05, 8.318099999999815e-05, 8.367999999999917e-05, 8.3846999999998e-05, 8.365200000000003e-05, 8.323600000000042e-05, 8.411099999999783e-05, 8.334800000000045e-05, 8.34170000000023e-05, 8.338899999999969e-05, 8.31659999999991e-05, 8.317999999999867e-05, 8.359699999999776e-05, 8.347300000000057e-05, 8.365300000000297e-05, 8.341699999999883e-05, 8.34720000000011e-05, 8.370800000000178e-05, 8.341599999999935e-05, 8.341699999999883e-05, 8.409699999999826e-05, 8.384700000000148e-05, 8.391699999999933e-05, 8.327799999999913e-05, 8.323600000000042e-05, 8.391599999999985e-05, 8.350000000000024e-05, 8.397199999999813e-05, 8.323600000000042e-05, 8.397300000000107e-05, 8.402799999999988e-05, 8.406899999999912e-05, 8.405499999999955e-05, 8.345800000000153e-05, 8.317999999999867e-05, 8.329099999999923e-05, 8.35980000000007e-05, 8.36110000000008e-05, 8.391599999999985e-05, 8.330599999999827e-05, 8.386100000000105e-05, 8.404099999999998e-05, 8.391599999999985e-05, 8.372299999999736e-05, 8.380599999999877e-05, 8.315199999999953e-05, 8.36659999999996e-05, 8.308299999999769e-05, 8.390300000000323e-05, 8.35980000000007e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.701" endtime="20201030 15:55:00.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.696" endtime="20201030 15:55:00.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.707" endtime="20201030 15:55:00.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.706" endtime="20201030 15:55:00.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.705" endtime="20201030 15:55:00.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.348" endtime="20201030 15:55:00.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.347" endtime="20201030 15:55:00.728"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.737" endtime="20201030 15:55:00.755"></status>
</kw>
<msg timestamp="20201030 15:55:00.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.735" endtime="20201030 15:55:00.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.756" endtime="20201030 15:55:00.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.759" endtime="20201030 15:55:00.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.733" endtime="20201030 15:55:00.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.731" endtime="20201030 15:55:00.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.767" endtime="20201030 15:55:01.054"></status>
</kw>
<msg timestamp="20201030 15:55:01.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.766" endtime="20201030 15:55:01.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.058" endtime="20201030 15:55:01.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.066" endtime="20201030 15:55:01.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.764" endtime="20201030 15:55:01.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.762" endtime="20201030 15:55:01.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.072" level="INFO">${RESULT} = [{'diff': 8.555500000000105e-05}, {'diff': 8.418099999999915e-05}, {'diff': 8.487499999999815e-05}, {'diff': 8.459699999999876e-05}, {'diff': 8.440300000000026e-05}, {'diff': 8.486099999999858e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:01.069" endtime="20201030 15:55:01.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:01.076" level="INFO">${ACCURACY} = {'diff': [8.555500000000105e-05, 8.418099999999915e-05, 8.487499999999815e-05, 8.459699999999876e-05, 8.440300000000026e-05, 8.486099999999858e-05, 8.49309999999999e-05, 8.425000000000099e-05, 8.42780...</msg>
<status status="PASS" starttime="20201030 15:55:01.073" endtime="20201030 15:55:01.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.081" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:55:01.080" endtime="20201030 15:55:01.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.083" level="INFO">VALUE: [8.555500000000105e-05, 8.418099999999915e-05, 8.487499999999815e-05, 8.459699999999876e-05, 8.440300000000026e-05, 8.486099999999858e-05, 8.49309999999999e-05, 8.425000000000099e-05, 8.427800000000013e-05, 8.461099999999833e-05, 8.44309999999994e-05, 8.437500000000112e-05, 8.426400000000056e-05, 8.475000000000149e-05, 8.438900000000069e-05, 8.472199999999888e-05, 8.505600000000002e-05, 8.487499999999815e-05, 8.508299999999969e-05, 8.42919999999997e-05, 8.480599999999977e-05, 8.49720000000026e-05, 8.468099999999965e-05, 8.420899999999829e-05, 8.425000000000099e-05, 8.429200000000317e-05, 8.511099999999883e-05, 8.47920000000002e-05, 8.459700000000223e-05, 8.420800000000228e-05, 8.417999999999967e-05, 8.459699999999876e-05, 8.499999999999827e-05, 8.458300000000266e-05, 8.44170000000033e-05, 8.47920000000002e-05, 8.47920000000002e-05, 8.444399999999949e-05, 8.475000000000149e-05, 8.48050000000003e-05, 8.472200000000235e-05, 8.429100000000023e-05, 8.462500000000137e-05, 8.420900000000175e-05, 8.468000000000017e-05, 8.423600000000142e-05, 8.47920000000002e-05, 8.433400000000188e-05, 8.447199999999863e-05, 8.455500000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.082" endtime="20201030 15:55:01.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.077" endtime="20201030 15:55:01.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.088" endtime="20201030 15:55:01.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.087" endtime="20201030 15:55:01.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.086" endtime="20201030 15:55:01.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.729" endtime="20201030 15:55:01.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.728" endtime="20201030 15:55:01.109"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.118" endtime="20201030 15:55:01.140"></status>
</kw>
<msg timestamp="20201030 15:55:01.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.116" endtime="20201030 15:55:01.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.142" endtime="20201030 15:55:01.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.144" endtime="20201030 15:55:01.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.114" endtime="20201030 15:55:01.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.111" endtime="20201030 15:55:01.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.153" endtime="20201030 15:55:01.440"></status>
</kw>
<msg timestamp="20201030 15:55:01.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025663972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025750403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.152" endtime="20201030 15:55:01.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025663972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025750403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.444" endtime="20201030 15:55:01.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.452" endtime="20201030 15:55:01.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.149" endtime="20201030 15:55:01.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.147" endtime="20201030 15:55:01.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.459" level="INFO">${RESULT} = [{'diff': 8.64310000000014e-05}, {'diff': 8.559799999999923e-05}, {'diff': 8.5847e-05}, {'diff': 8.570899999999979e-05}, {'diff': 8.538899999999822e-05}, {'diff': 8.544400000000049e-05}, {'diff': 8.60...</msg>
<status status="PASS" starttime="20201030 15:55:01.456" endtime="20201030 15:55:01.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:01.463" level="INFO">${ACCURACY} = {'diff': [8.64310000000014e-05, 8.559799999999923e-05, 8.5847e-05, 8.570899999999979e-05, 8.538899999999822e-05, 8.544400000000049e-05, 8.604099999999851e-05, 8.56110000000028e-05, 8.541700000000083e-...</msg>
<status status="PASS" starttime="20201030 15:55:01.460" endtime="20201030 15:55:01.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.467" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:55:01.466" endtime="20201030 15:55:01.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.470" level="INFO">VALUE: [8.64310000000014e-05, 8.559799999999923e-05, 8.5847e-05, 8.570899999999979e-05, 8.538899999999822e-05, 8.544400000000049e-05, 8.604099999999851e-05, 8.56110000000028e-05, 8.541700000000083e-05, 8.519400000000024e-05, 8.56799999999977e-05, 8.566599999999813e-05, 8.543099999999693e-05, 8.530600000000027e-05, 8.552699999999844e-05, 8.54310000000004e-05, 8.609700000000026e-05, 8.558399999999966e-05, 8.518000000000067e-05, 8.522199999999938e-05, 8.555500000000105e-05, 8.573599999999945e-05, 8.524999999999852e-05, 8.574999999999902e-05, 8.573599999999945e-05, 8.513899999999797e-05, 8.586099999999958e-05, 8.54859999999992e-05, 8.613900000000244e-05, 8.594400000000099e-05, 8.606900000000112e-05, 8.587499999999915e-05, 8.53050000000008e-05, 8.607000000000059e-05, 8.61249999999994e-05, 8.548600000000267e-05, 8.590199999999881e-05, 8.556900000000062e-05, 8.587499999999915e-05, 8.563799999999899e-05, 8.583300000000044e-05, 8.563899999999847e-05, 8.541700000000083e-05, 8.576399999999859e-05, 8.608300000000069e-05, 8.544399999999702e-05, 8.604200000000145e-05, 8.536099999999908e-05, 8.587499999999915e-05, 8.605500000000155e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.468" endtime="20201030 15:55:01.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.464" endtime="20201030 15:55:01.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.476" endtime="20201030 15:55:01.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.474" endtime="20201030 15:55:01.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.473" endtime="20201030 15:55:01.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.110" endtime="20201030 15:55:01.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.109" endtime="20201030 15:55:01.496"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.505" endtime="20201030 15:55:01.527"></status>
</kw>
<msg timestamp="20201030 15:55:01.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.503" endtime="20201030 15:55:01.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.530" endtime="20201030 15:55:01.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.535" endtime="20201030 15:55:01.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.501" endtime="20201030 15:55:01.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.499" endtime="20201030 15:55:01.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.554" endtime="20201030 15:55:01.848"></status>
</kw>
<msg timestamp="20201030 15:55:01.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.551" endtime="20201030 15:55:01.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.852" endtime="20201030 15:55:01.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.861" endtime="20201030 15:55:01.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.545" endtime="20201030 15:55:01.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.542" endtime="20201030 15:55:01.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.867" level="INFO">${RESULT} = [{'diff': 8.754199999999948e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.663899999999947e-05}, {'diff': 8.677799999999916e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.691699999999886e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:01.864" endtime="20201030 15:55:01.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:01.872" level="INFO">${ACCURACY} = {'diff': [8.754199999999948e-05, 8.624999999999952e-05, 8.663899999999947e-05, 8.677799999999916e-05, 8.71250000000004e-05, 8.691699999999886e-05, 8.704100000000298e-05, 8.69860000000007e-05, 8.622200...</msg>
<status status="PASS" starttime="20201030 15:55:01.868" endtime="20201030 15:55:01.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.877" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:55:01.876" endtime="20201030 15:55:01.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.879" level="INFO">VALUE: [8.754199999999948e-05, 8.624999999999952e-05, 8.663899999999947e-05, 8.677799999999916e-05, 8.71250000000004e-05, 8.691699999999886e-05, 8.704100000000298e-05, 8.69860000000007e-05, 8.622200000000038e-05, 8.704199999999898e-05, 8.618000000000167e-05, 8.629100000000223e-05, 8.654199999999848e-05, 8.618100000000115e-05, 8.704199999999898e-05, 8.66660000000026e-05, 8.611099999999983e-05, 8.686100000000058e-05, 8.629099999999876e-05, 8.691599999999938e-05, 8.661100000000033e-05, 8.658300000000119e-05, 8.711100000000083e-05, 8.655600000000152e-05, 8.630600000000127e-05, 8.643099999999793e-05, 8.636100000000008e-05, 8.672200000000088e-05, 8.702799999999941e-05, 8.692999999999895e-05, 8.641699999999836e-05, 8.673699999999993e-05, 8.668100000000165e-05, 8.66669999999986e-05, 8.693099999999843e-05, 8.711099999999736e-05, 8.697200000000113e-05, 8.63050000000018e-05, 8.66249999999999e-05, 8.66249999999999e-05, 8.69860000000007e-05, 8.706999999999812e-05, 8.629099999999876e-05, 8.624999999999952e-05, 8.705499999999908e-05, 8.641699999999836e-05, 8.707000000000159e-05, 8.620799999999734e-05, 8.641599999999888e-05, 8.650000000000324e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.878" endtime="20201030 15:55:01.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.873" endtime="20201030 15:55:01.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.884" endtime="20201030 15:55:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.882" endtime="20201030 15:55:01.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.881" endtime="20201030 15:55:01.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.497" endtime="20201030 15:55:01.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.497" endtime="20201030 15:55:01.905"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.913" endtime="20201030 15:55:01.932"></status>
</kw>
<msg timestamp="20201030 15:55:01.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.912" endtime="20201030 15:55:01.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.933" endtime="20201030 15:55:01.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.936" endtime="20201030 15:55:01.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.909" endtime="20201030 15:55:01.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.907" endtime="20201030 15:55:01.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.944" endtime="20201030 15:55:02.232"></status>
</kw>
<msg timestamp="20201030 15:55:02.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.943" endtime="20201030 15:55:02.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.236" endtime="20201030 15:55:02.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.245" endtime="20201030 15:55:02.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.940" endtime="20201030 15:55:02.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.939" endtime="20201030 15:55:02.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.251" level="INFO">${RESULT} = [{'diff': 8.86670000000006e-05}, {'diff': 8.729099999999976e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.755599999999905e-05}, {'diff': 8.752799999999991e-05}, {'diff': 8.808399999999869e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:02.248" endtime="20201030 15:55:02.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:02.255" level="INFO">${ACCURACY} = {'diff': [8.86670000000006e-05, 8.729099999999976e-05, 8.76250000000009e-05, 8.755599999999905e-05, 8.752799999999991e-05, 8.808399999999869e-05, 8.79999999999978e-05, 8.765200000000056e-05, 8.7972000...</msg>
<status status="PASS" starttime="20201030 15:55:02.252" endtime="20201030 15:55:02.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.260" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:55:02.259" endtime="20201030 15:55:02.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.262" level="INFO">VALUE: [8.86670000000006e-05, 8.729099999999976e-05, 8.76250000000009e-05, 8.755599999999905e-05, 8.752799999999991e-05, 8.808399999999869e-05, 8.79999999999978e-05, 8.765200000000056e-05, 8.797200000000213e-05, 8.779199999999973e-05, 8.798599999999823e-05, 8.751400000000034e-05, 8.809700000000226e-05, 8.809799999999826e-05, 8.777800000000016e-05, 8.723600000000095e-05, 8.759699999999829e-05, 8.802800000000041e-05, 8.801399999999737e-05, 8.773599999999798e-05, 8.801399999999737e-05, 8.720899999999782e-05, 8.76669999999996e-05, 8.71669999999991e-05, 8.773600000000145e-05, 8.761100000000133e-05, 8.743099999999893e-05, 8.741699999999936e-05, 8.804100000000051e-05, 8.804199999999998e-05, 8.795799999999909e-05, 8.751400000000034e-05, 8.761099999999786e-05, 8.715299999999954e-05, 8.74860000000012e-05, 8.76669999999996e-05, 8.783299999999897e-05, 8.722199999999791e-05, 8.784699999999854e-05, 8.734699999999804e-05, 8.791699999999986e-05, 8.736099999999761e-05, 8.73470000000015e-05, 8.736100000000108e-05, 8.772200000000188e-05, 8.75129999999974e-05, 8.724999999999705e-05, 8.723700000000043e-05, 8.741699999999936e-05, 8.723600000000095e-05]</msg>
<status status="PASS" starttime="20201030 15:55:02.261" endtime="20201030 15:55:02.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.256" endtime="20201030 15:55:02.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.267" endtime="20201030 15:55:02.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.266" endtime="20201030 15:55:02.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.264" endtime="20201030 15:55:02.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.906" endtime="20201030 15:55:02.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.905" endtime="20201030 15:55:02.288"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.296" endtime="20201030 15:55:02.316"></status>
</kw>
<msg timestamp="20201030 15:55:02.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.295" endtime="20201030 15:55:02.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.317" endtime="20201030 15:55:02.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.320" endtime="20201030 15:55:02.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.292" endtime="20201030 15:55:02.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.290" endtime="20201030 15:55:02.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.329" endtime="20201030 15:55:02.614"></status>
</kw>
<msg timestamp="20201030 15:55:02.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.327" endtime="20201030 15:55:02.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.618" endtime="20201030 15:55:02.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.626" endtime="20201030 15:55:02.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.325" endtime="20201030 15:55:02.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.323" endtime="20201030 15:55:02.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.633" level="INFO">${RESULT} = [{'diff': 8.879200000000073e-05}, {'diff': 8.84999999999983e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.908399999999969e-05}, {'diff': 8.909700000000326e-05}, {'diff': 8.829200000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:02.629" endtime="20201030 15:55:02.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:02.637" level="INFO">${ACCURACY} = {'diff': [8.879200000000073e-05, 8.84999999999983e-05, 8.858299999999972e-05, 8.908399999999969e-05, 8.909700000000326e-05, 8.829200000000023e-05, 8.891599999999791e-05, 8.904100000000151e-05, 8.84729...</msg>
<status status="PASS" starttime="20201030 15:55:02.634" endtime="20201030 15:55:02.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.641" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:55:02.640" endtime="20201030 15:55:02.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.644" level="INFO">VALUE: [8.879200000000073e-05, 8.84999999999983e-05, 8.858299999999972e-05, 8.908399999999969e-05, 8.909700000000326e-05, 8.829200000000023e-05, 8.891599999999791e-05, 8.904100000000151e-05, 8.847299999999864e-05, 8.836100000000208e-05, 8.883299999999997e-05, 8.906900000000065e-05, 8.819399999999977e-05, 8.843099999999993e-05, 8.887499999999868e-05, 8.823600000000195e-05, 8.891600000000138e-05, 8.844400000000002e-05, 8.837500000000165e-05, 8.84730000000021e-05, 8.841699999999689e-05, 8.837500000000165e-05, 8.887499999999868e-05, 8.911099999999936e-05, 8.893000000000095e-05, 8.84860000000022e-05, 8.884699999999954e-05, 8.89860000000027e-05, 8.909699999999979e-05, 8.91120000000023e-05, 8.859799999999876e-05, 8.898599999999923e-05, 8.83059999999998e-05, 8.902799999999794e-05, 8.838899999999775e-05, 8.819399999999977e-05, 8.826399999999762e-05, 8.830500000000033e-05, 8.900000000000227e-05, 8.848599999999873e-05, 8.875000000000202e-05, 8.847200000000263e-05, 8.875000000000202e-05, 8.851400000000134e-05, 8.819399999999977e-05, 8.912499999999893e-05, 8.868100000000018e-05, 8.905500000000108e-05, 8.89860000000027e-05, 8.907000000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:55:02.642" endtime="20201030 15:55:02.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.638" endtime="20201030 15:55:02.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.649" endtime="20201030 15:55:02.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.648" endtime="20201030 15:55:02.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.647" endtime="20201030 15:55:02.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.289" endtime="20201030 15:55:02.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.288" endtime="20201030 15:55:02.670"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.679" endtime="20201030 15:55:02.697"></status>
</kw>
<msg timestamp="20201030 15:55:02.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.677" endtime="20201030 15:55:02.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.699" endtime="20201030 15:55:02.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.701" endtime="20201030 15:55:02.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.675" endtime="20201030 15:55:02.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.673" endtime="20201030 15:55:02.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.710" endtime="20201030 15:55:02.996"></status>
</kw>
<msg timestamp="20201030 15:55:02.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:02.708" endtime="20201030 15:55:02.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:03.000" endtime="20201030 15:55:03.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.008" endtime="20201030 15:55:03.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.706" endtime="20201030 15:55:03.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.704" endtime="20201030 15:55:03.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.015" level="INFO">${RESULT} = [{'diff': 9.034700000000104e-05}, {'diff': 8.927800000000166e-05}, {'diff': 8.941600000000188e-05}, {'diff': 8.96800000000017e-05}, {'diff': 8.948599999999973e-05}, {'diff': 8.995900000000057e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:03.012" endtime="20201030 15:55:03.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:03.020" level="INFO">${ACCURACY} = {'diff': [9.034700000000104e-05, 8.927800000000166e-05, 8.941600000000188e-05, 8.96800000000017e-05, 8.948599999999973e-05, 8.995900000000057e-05, 8.941700000000136e-05, 8.990299999999882e-05, 8.93610...</msg>
<status status="PASS" starttime="20201030 15:55:03.016" endtime="20201030 15:55:03.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.024" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:55:03.023" endtime="20201030 15:55:03.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.027" level="INFO">VALUE: [9.034700000000104e-05, 8.927800000000166e-05, 8.941600000000188e-05, 8.96800000000017e-05, 8.948599999999973e-05, 8.995900000000057e-05, 8.941700000000136e-05, 8.990299999999882e-05, 8.936100000000308e-05, 8.947200000000016e-05, 8.940300000000179e-05, 8.961099999999986e-05, 8.997199999999719e-05, 8.997200000000066e-05, 8.998600000000023e-05, 8.91800000000012e-05, 8.9945000000001e-05, 9.004200000000198e-05, 8.986100000000011e-05, 8.983400000000044e-05, 8.990300000000229e-05, 8.929200000000123e-05, 8.979200000000173e-05, 8.966699999999814e-05, 8.987499999999968e-05, 9.011100000000036e-05, 8.977799999999869e-05, 8.991599999999891e-05, 9.007000000000112e-05, 9.005599999999808e-05, 8.923600000000295e-05, 8.972299999999989e-05, 8.970800000000084e-05, 8.990199999999934e-05, 8.966699999999814e-05, 8.972200000000041e-05, 8.995900000000057e-05, 8.936099999999961e-05, 8.977800000000216e-05, 8.920800000000034e-05, 8.972200000000041e-05, 8.922199999999991e-05, 8.933300000000047e-05, 8.990199999999934e-05, 8.933399999999994e-05, 8.923599999999948e-05, 8.934700000000004e-05, 8.973599999999998e-05, 9.004199999999851e-05, 8.992999999999848e-05]</msg>
<status status="PASS" starttime="20201030 15:55:03.025" endtime="20201030 15:55:03.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.021" endtime="20201030 15:55:03.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.032" endtime="20201030 15:55:03.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.030" endtime="20201030 15:55:03.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.029" endtime="20201030 15:55:03.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.671" endtime="20201030 15:55:03.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.671" endtime="20201030 15:55:03.052"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.061" endtime="20201030 15:55:03.080"></status>
</kw>
<msg timestamp="20201030 15:55:03.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.059" endtime="20201030 15:55:03.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.081" endtime="20201030 15:55:03.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.084" endtime="20201030 15:55:03.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.057" endtime="20201030 15:55:03.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.055" endtime="20201030 15:55:03.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.092" endtime="20201030 15:55:03.380"></status>
</kw>
<msg timestamp="20201030 15:55:03.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021565472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.091" endtime="20201030 15:55:03.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021565472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.384" endtime="20201030 15:55:03.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.392" endtime="20201030 15:55:03.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.088" endtime="20201030 15:55:03.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.087" endtime="20201030 15:55:03.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.399" level="INFO">${RESULT} = [{'diff': 9.086099999999764e-05}, {'diff': 9.059700000000129e-05}, {'diff': 9.083400000000144e-05}, {'diff': 9.066699999999914e-05}, {'diff': 9.058300000000172e-05}, {'diff': 9.091599999999991e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:03.396" endtime="20201030 15:55:03.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:03.403" level="INFO">${ACCURACY} = {'diff': [9.086099999999764e-05, 9.059700000000129e-05, 9.083400000000144e-05, 9.066699999999914e-05, 9.058300000000172e-05, 9.091599999999991e-05, 9.015300000000254e-05, 9.070900000000132e-05, 9.0290...</msg>
<status status="PASS" starttime="20201030 15:55:03.400" endtime="20201030 15:55:03.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.407" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:55:03.406" endtime="20201030 15:55:03.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.410" level="INFO">VALUE: [9.086099999999764e-05, 9.059700000000129e-05, 9.083400000000144e-05, 9.066699999999914e-05, 9.058300000000172e-05, 9.091599999999991e-05, 9.015300000000254e-05, 9.070900000000132e-05, 9.029099999999929e-05, 9.01389999999995e-05, 9.102799999999994e-05, 9.029200000000223e-05, 9.029100000000276e-05, 9.04870000000002e-05, 9.037500000000018e-05, 9.088900000000025e-05, 9.073599999999751e-05, 9.0639e-05, 9.112499999999746e-05, 9.088800000000077e-05, 9.01389999999995e-05, 9.020800000000134e-05, 9.015299999999907e-05, 9.083400000000144e-05, 9.070900000000132e-05, 9.070800000000184e-05, 9.047199999999769e-05, 9.047300000000064e-05, 9.072200000000141e-05, 9.090299999999982e-05, 9.061100000000086e-05, 9.080499999999936e-05, 9.059800000000076e-05, 9.027799999999919e-05, 9.104199999999951e-05, 9.06670000000026e-05, 9.072199999999794e-05, 9.083400000000144e-05, 9.097199999999819e-05, 9.036100000000061e-05, 9.079199999999926e-05, 9.098600000000123e-05, 9.040199999999984e-05, 9.015300000000254e-05, 9.073600000000098e-05, 9.042999999999898e-05, 9.038899999999975e-05, 9.079099999999979e-05, 9.015300000000254e-05, 9.047199999999769e-05]</msg>
<status status="PASS" starttime="20201030 15:55:03.409" endtime="20201030 15:55:03.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.404" endtime="20201030 15:55:03.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.415" endtime="20201030 15:55:03.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.413" endtime="20201030 15:55:03.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.412" endtime="20201030 15:55:03.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.053" endtime="20201030 15:55:03.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.053" endtime="20201030 15:55:03.436"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.444" endtime="20201030 15:55:03.464"></status>
</kw>
<msg timestamp="20201030 15:55:03.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.443" endtime="20201030 15:55:03.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.465" endtime="20201030 15:55:03.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.468" endtime="20201030 15:55:03.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.440" endtime="20201030 15:55:03.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.438" endtime="20201030 15:55:03.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.477" endtime="20201030 15:55:03.762"></status>
</kw>
<msg timestamp="20201030 15:55:03.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022480167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.475" endtime="20201030 15:55:03.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022480167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.766" endtime="20201030 15:55:03.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.774" endtime="20201030 15:55:03.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.473" endtime="20201030 15:55:03.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.471" endtime="20201030 15:55:03.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.781" level="INFO">${RESULT} = [{'diff': 9.240299999999785e-05}, {'diff': 9.145900000000207e-05}, {'diff': 9.193099999999996e-05}, {'diff': 9.11390000000005e-05}, {'diff': 9.123599999999801e-05}, {'diff': 9.18060000000033e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:03.778" endtime="20201030 15:55:03.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:03.785" level="INFO">${ACCURACY} = {'diff': [9.240299999999785e-05, 9.145900000000207e-05, 9.193099999999996e-05, 9.11390000000005e-05, 9.123599999999801e-05, 9.18060000000033e-05, 9.190199999999787e-05, 9.132000000000237e-05, 9.152699...</msg>
<status status="PASS" starttime="20201030 15:55:03.782" endtime="20201030 15:55:03.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.789" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:55:03.788" endtime="20201030 15:55:03.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.792" level="INFO">VALUE: [9.240299999999785e-05, 9.145900000000207e-05, 9.193099999999996e-05, 9.11390000000005e-05, 9.123599999999801e-05, 9.18060000000033e-05, 9.190199999999787e-05, 9.132000000000237e-05, 9.15269999999975e-05, 9.19589999999991e-05, 9.156899999999968e-05, 9.158400000000219e-05, 9.138900000000075e-05, 9.113899999999703e-05, 9.1639000000001e-05, 9.11390000000005e-05, 9.151299999999793e-05, 9.194400000000005e-05, 9.145799999999912e-05, 9.211100000000236e-05, 9.154200000000001e-05, 9.187499999999821e-05, 9.14589999999986e-05, 9.175000000000155e-05, 9.194499999999953e-05, 9.180500000000036e-05, 9.158299999999925e-05, 9.165300000000057e-05, 9.138900000000075e-05, 9.151400000000087e-05, 9.161100000000186e-05, 9.134699999999857e-05, 9.179200000000026e-05, 9.147200000000216e-05, 9.170899999999885e-05, 9.204200000000051e-05, 9.177800000000069e-05, 9.148699999999774e-05, 9.116699999999964e-05, 9.13879999999978e-05, 9.193000000000048e-05, 9.140300000000032e-05, 9.206999999999965e-05, 9.173599999999851e-05, 9.184699999999907e-05, 9.127800000000019e-05, 9.152800000000044e-05, 9.16939999999998e-05, 9.199999999999833e-05, 9.159700000000229e-05]</msg>
<status status="PASS" starttime="20201030 15:55:03.791" endtime="20201030 15:55:03.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.786" endtime="20201030 15:55:03.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.798" endtime="20201030 15:55:03.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.796" endtime="20201030 15:55:03.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.795" endtime="20201030 15:55:03.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.437" endtime="20201030 15:55:03.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.436" endtime="20201030 15:55:03.818"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.827" endtime="20201030 15:55:03.846"></status>
</kw>
<msg timestamp="20201030 15:55:03.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.825" endtime="20201030 15:55:03.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.847" endtime="20201030 15:55:03.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.849" endtime="20201030 15:55:03.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.823" endtime="20201030 15:55:03.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.821" endtime="20201030 15:55:03.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.858" endtime="20201030 15:55:04.144"></status>
</kw>
<msg timestamp="20201030 15:55:04.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021563528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.857" endtime="20201030 15:55:04.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021563528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.148" endtime="20201030 15:55:04.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.157" endtime="20201030 15:55:04.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.854" endtime="20201030 15:55:04.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.853" endtime="20201030 15:55:04.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.164" level="INFO">${RESULT} = [{'diff': 9.294499999999706e-05}, {'diff': 9.28200000000004e-05}, {'diff': 9.276399999999865e-05}, {'diff': 9.276400000000212e-05}, {'diff': 9.220799999999987e-05}, {'diff': 9.277799999999822e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:04.160" endtime="20201030 15:55:04.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:04.169" level="INFO">${ACCURACY} = {'diff': [9.294499999999706e-05, 9.28200000000004e-05, 9.276399999999865e-05, 9.276400000000212e-05, 9.220799999999987e-05, 9.277799999999822e-05, 9.255500000000111e-05, 9.240300000000132e-05, 9.29999...</msg>
<status status="PASS" starttime="20201030 15:55:04.165" endtime="20201030 15:55:04.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.174" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:55:04.173" endtime="20201030 15:55:04.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.176" level="INFO">VALUE: [9.294499999999706e-05, 9.28200000000004e-05, 9.276399999999865e-05, 9.276400000000212e-05, 9.220799999999987e-05, 9.277799999999822e-05, 9.255500000000111e-05, 9.240300000000132e-05, 9.299999999999933e-05, 9.229199999999729e-05, 9.233399999999947e-05, 9.226399999999815e-05, 9.266700000000114e-05, 9.258300000000025e-05, 9.29590000000001e-05, 9.220799999999987e-05, 9.301400000000237e-05, 9.25130000000024e-05, 9.302800000000194e-05, 9.238899999999828e-05, 9.251400000000187e-05, 9.308299999999728e-05, 9.220799999999987e-05, 9.243100000000046e-05, 9.2639000000002e-05, 9.255600000000058e-05, 9.299999999999933e-05, 9.265199999999862e-05, 9.28200000000004e-05, 9.284700000000007e-05, 9.226399999999815e-05, 9.26940000000008e-05, 9.252799999999797e-05, 9.268000000000123e-05, 9.30000000000028e-05, 9.263799999999905e-05, 9.30139999999989e-05, 9.308299999999728e-05, 9.252800000000144e-05, 9.277800000000169e-05, 9.293100000000096e-05, 9.26529999999981e-05, 9.29590000000001e-05, 9.227800000000119e-05, 9.283399999999997e-05, 9.255600000000058e-05, 9.288900000000225e-05, 9.290299999999835e-05, 9.259699999999982e-05, 9.262499999999896e-05]</msg>
<status status="PASS" starttime="20201030 15:55:04.175" endtime="20201030 15:55:04.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.170" endtime="20201030 15:55:04.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.188" endtime="20201030 15:55:04.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.186" endtime="20201030 15:55:04.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.185" endtime="20201030 15:55:04.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.819" endtime="20201030 15:55:04.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.819" endtime="20201030 15:55:04.209"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.217" endtime="20201030 15:55:04.236"></status>
</kw>
<msg timestamp="20201030 15:55:04.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.216" endtime="20201030 15:55:04.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.237" endtime="20201030 15:55:04.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.240" endtime="20201030 15:55:04.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.213" endtime="20201030 15:55:04.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.211" endtime="20201030 15:55:04.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.249" endtime="20201030 15:55:04.536"></status>
</kw>
<msg timestamp="20201030 15:55:04.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.247" endtime="20201030 15:55:04.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.540" endtime="20201030 15:55:04.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.548" endtime="20201030 15:55:04.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.245" endtime="20201030 15:55:04.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.243" endtime="20201030 15:55:04.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.555" level="INFO">${RESULT} = [{'diff': 9.440299999999985e-05}, {'diff': 9.329199999999829e-05}, {'diff': 9.38339999999975e-05}, {'diff': 9.381899999999846e-05}, {'diff': 9.363899999999953e-05}, {'diff': 9.366700000000214e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:04.552" endtime="20201030 15:55:04.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:04.559" level="INFO">${ACCURACY} = {'diff': [9.440299999999985e-05, 9.329199999999829e-05, 9.38339999999975e-05, 9.381899999999846e-05, 9.363899999999953e-05, 9.366700000000214e-05, 9.35269999999995e-05, 9.354200000000201e-05, 9.402800...</msg>
<status status="PASS" starttime="20201030 15:55:04.556" endtime="20201030 15:55:04.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.563" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:55:04.562" endtime="20201030 15:55:04.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.566" level="INFO">VALUE: [9.440299999999985e-05, 9.329199999999829e-05, 9.38339999999975e-05, 9.381899999999846e-05, 9.363899999999953e-05, 9.366700000000214e-05, 9.35269999999995e-05, 9.354200000000201e-05, 9.402800000000294e-05, 9.326399999999915e-05, 9.358299999999778e-05, 9.327800000000219e-05, 9.366700000000214e-05, 9.337500000000318e-05, 9.400000000000033e-05, 9.327800000000219e-05, 9.34590000000006e-05, 9.39720000000012e-05, 9.384700000000107e-05, 9.391699999999892e-05, 9.312499999999946e-05, 9.397300000000067e-05, 9.40139999999999e-05, 9.35269999999995e-05, 9.322299999999992e-05, 9.358300000000125e-05, 9.327699999999925e-05, 9.377799999999922e-05, 9.369500000000128e-05, 9.384700000000107e-05, 9.352799999999897e-05, 9.395800000000162e-05, 9.356900000000168e-05, 9.34720000000007e-05, 9.347199999999722e-05, 9.318000000000173e-05, 9.372199999999747e-05, 9.37079999999979e-05, 9.408400000000122e-05, 9.388899999999978e-05, 9.390299999999935e-05, 9.313899999999903e-05, 9.406899999999871e-05, 9.326400000000262e-05, 9.338900000000275e-05, 9.31529999999986e-05, 9.358300000000125e-05, 9.40139999999999e-05, 9.372200000000094e-05, 9.369500000000128e-05]</msg>
<status status="PASS" starttime="20201030 15:55:04.564" endtime="20201030 15:55:04.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.560" endtime="20201030 15:55:04.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.571" endtime="20201030 15:55:04.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.569" endtime="20201030 15:55:04.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.568" endtime="20201030 15:55:04.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.210" endtime="20201030 15:55:04.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.209" endtime="20201030 15:55:04.591"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.600" endtime="20201030 15:55:04.622"></status>
</kw>
<msg timestamp="20201030 15:55:04.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.598" endtime="20201030 15:55:04.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.623" endtime="20201030 15:55:04.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.626" endtime="20201030 15:55:04.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.596" endtime="20201030 15:55:04.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.594" endtime="20201030 15:55:04.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.635" endtime="20201030 15:55:04.920"></status>
</kw>
<msg timestamp="20201030 15:55:04.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.633" endtime="20201030 15:55:04.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.925" endtime="20201030 15:55:04.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.933" endtime="20201030 15:55:04.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.631" endtime="20201030 15:55:04.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.629" endtime="20201030 15:55:04.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.939" level="INFO">${RESULT} = [{'diff': 9.563900000000153e-05}, {'diff': 9.502800000000047e-05}, {'diff': 9.469500000000228e-05}, {'diff': 9.45140000000004e-05}, {'diff': 9.456999999999868e-05}, {'diff': 9.495800000000262e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:04.936" endtime="20201030 15:55:04.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:04.943" level="INFO">${ACCURACY} = {'diff': [9.563900000000153e-05, 9.502800000000047e-05, 9.469500000000228e-05, 9.45140000000004e-05, 9.456999999999868e-05, 9.495800000000262e-05, 9.43880000000008e-05, 9.472300000000142e-05, 9.472200...</msg>
<status status="PASS" starttime="20201030 15:55:04.940" endtime="20201030 15:55:04.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.948" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:55:04.947" endtime="20201030 15:55:04.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.950" level="INFO">VALUE: [9.563900000000153e-05, 9.502800000000047e-05, 9.469500000000228e-05, 9.45140000000004e-05, 9.456999999999868e-05, 9.495800000000262e-05, 9.43880000000008e-05, 9.472300000000142e-05, 9.472200000000194e-05, 9.413900000000003e-05, 9.444500000000203e-05, 9.48339999999985e-05, 9.444399999999908e-05, 9.46530000000001e-05, 9.476399999999718e-05, 9.490300000000035e-05, 9.480499999999989e-05, 9.413900000000003e-05, 9.458299999999878e-05, 9.41529999999996e-05, 9.463900000000053e-05, 9.412500000000046e-05, 9.487500000000121e-05, 9.445899999999813e-05, 9.480599999999936e-05, 9.458299999999878e-05, 9.454100000000007e-05, 9.429199999999929e-05, 9.455599999999911e-05, 9.494399999999958e-05, 9.49590000000021e-05, 9.501399999999743e-05, 9.463799999999759e-05, 9.498600000000176e-05, 9.473599999999804e-05, 9.491699999999992e-05, 9.463900000000053e-05, 9.456900000000268e-05, 9.483299999999903e-05, 9.455500000000311e-05, 9.413900000000003e-05, 9.458299999999878e-05, 9.476400000000065e-05, 9.412500000000046e-05, 9.487499999999774e-05, 9.418100000000221e-05, 9.429199999999929e-05, 9.451399999999693e-05, 9.413900000000003e-05, 9.48880000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:55:04.949" endtime="20201030 15:55:04.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.944" endtime="20201030 15:55:04.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.956" endtime="20201030 15:55:04.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.954" endtime="20201030 15:55:04.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.953" endtime="20201030 15:55:04.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.592" endtime="20201030 15:55:04.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.592" endtime="20201030 15:55:04.977"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.985" endtime="20201030 15:55:05.004"></status>
</kw>
<msg timestamp="20201030 15:55:05.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.984" endtime="20201030 15:55:05.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.006" endtime="20201030 15:55:05.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.008" endtime="20201030 15:55:05.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.981" endtime="20201030 15:55:05.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.979" endtime="20201030 15:55:05.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.017" endtime="20201030 15:55:05.303"></status>
</kw>
<msg timestamp="20201030 15:55:05.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.015" endtime="20201030 15:55:05.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.308" endtime="20201030 15:55:05.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.317" endtime="20201030 15:55:05.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.013" endtime="20201030 15:55:05.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.011" endtime="20201030 15:55:05.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.324" level="INFO">${RESULT} = [{'diff': 9.6027999999998e-05}, {'diff': 9.60140000000019e-05}, {'diff': 9.5333999999999e-05}, {'diff': 9.531899999999996e-05}, {'diff': 9.577800000000122e-05}, {'diff': 9.608300000000028e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:55:05.321" endtime="20201030 15:55:05.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:05.329" level="INFO">${ACCURACY} = {'diff': [9.6027999999998e-05, 9.60140000000019e-05, 9.5333999999999e-05, 9.531899999999996e-05, 9.577800000000122e-05, 9.608300000000028e-05, 9.574999999999861e-05, 9.519499999999931e-05, 9.541699999...</msg>
<status status="PASS" starttime="20201030 15:55:05.325" endtime="20201030 15:55:05.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.333" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:55:05.332" endtime="20201030 15:55:05.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.336" level="INFO">VALUE: [9.6027999999998e-05, 9.60140000000019e-05, 9.5333999999999e-05, 9.531899999999996e-05, 9.577800000000122e-05, 9.608300000000028e-05, 9.574999999999861e-05, 9.519499999999931e-05, 9.541699999999695e-05, 9.599999999999886e-05, 9.551399999999793e-05, 9.518000000000026e-05, 9.608399999999975e-05, 9.581900000000046e-05, 9.562499999999849e-05, 9.569400000000033e-05, 9.604200000000104e-05, 9.516700000000017e-05, 9.604200000000104e-05, 9.606900000000071e-05, 9.606900000000071e-05, 9.519399999999983e-05, 9.581999999999993e-05, 9.572199999999947e-05, 9.523600000000201e-05, 9.581900000000046e-05, 9.56530000000011e-05, 9.588899999999831e-05, 9.579200000000079e-05, 9.556999999999968e-05, 9.536099999999867e-05, 9.608399999999975e-05, 9.515299999999713e-05, 9.558399999999925e-05, 9.590300000000135e-05, 9.606900000000071e-05, 9.563899999999806e-05, 9.519499999999931e-05, 9.601399999999843e-05, 9.519499999999931e-05, 9.563799999999859e-05, 9.58469999999996e-05, 9.572200000000294e-05, 9.563800000000205e-05, 9.604199999999757e-05, 9.55140000000014e-05, 9.577800000000122e-05, 9.57079999999999e-05, 9.580600000000036e-05, 9.542999999999704e-05]</msg>
<status status="PASS" starttime="20201030 15:55:05.334" endtime="20201030 15:55:05.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.329" endtime="20201030 15:55:05.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.341" endtime="20201030 15:55:05.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.339" endtime="20201030 15:55:05.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.338" endtime="20201030 15:55:05.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.978" endtime="20201030 15:55:05.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.977" endtime="20201030 15:55:05.361"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.370" endtime="20201030 15:55:05.389"></status>
</kw>
<msg timestamp="20201030 15:55:05.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.368" endtime="20201030 15:55:05.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.390" endtime="20201030 15:55:05.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.393" endtime="20201030 15:55:05.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.366" endtime="20201030 15:55:05.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.364" endtime="20201030 15:55:05.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.402" endtime="20201030 15:55:05.689"></status>
</kw>
<msg timestamp="20201030 15:55:05.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021570778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.400" endtime="20201030 15:55:05.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021570778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.693" endtime="20201030 15:55:05.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.701" endtime="20201030 15:55:05.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.398" endtime="20201030 15:55:05.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.396" endtime="20201030 15:55:05.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.707" level="INFO">${RESULT} = [{'diff': 9.706900000000171e-05}, {'diff': 9.686199999999964e-05}, {'diff': 9.637499999999924e-05}, {'diff': 9.677699999999928e-05}, {'diff': 9.626400000000215e-05}, {'diff': 9.677799999999875e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:05.704" endtime="20201030 15:55:05.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:05.712" level="INFO">${ACCURACY} = {'diff': [9.706900000000171e-05, 9.686199999999964e-05, 9.637499999999924e-05, 9.677699999999928e-05, 9.626400000000215e-05, 9.677799999999875e-05, 9.693100000000149e-05, 9.662499999999949e-05, 9.7084...</msg>
<status status="PASS" starttime="20201030 15:55:05.708" endtime="20201030 15:55:05.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.716" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:55:05.715" endtime="20201030 15:55:05.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.718" level="INFO">VALUE: [9.706900000000171e-05, 9.686199999999964e-05, 9.637499999999924e-05, 9.677699999999928e-05, 9.626400000000215e-05, 9.677799999999875e-05, 9.693100000000149e-05, 9.662499999999949e-05, 9.708400000000075e-05, 9.658399999999678e-05, 9.666599999999873e-05, 9.68059999999979e-05, 9.608300000000028e-05, 9.699999999999986e-05, 9.61669999999977e-05, 9.645800000000065e-05, 9.708400000000075e-05, 9.619399999999736e-05, 9.62080000000004e-05, 9.657000000000068e-05, 9.633300000000053e-05, 9.619500000000031e-05, 9.64019999999989e-05, 9.6334e-05, 9.625000000000258e-05, 9.624999999999911e-05, 9.619400000000083e-05, 9.672200000000047e-05, 9.681900000000146e-05, 9.684800000000007e-05, 9.692999999999855e-05, 9.641699999999795e-05, 9.669400000000133e-05, 9.676399999999918e-05, 9.662499999999949e-05, 9.695800000000115e-05, 9.677699999999928e-05, 9.672299999999995e-05, 9.687499999999974e-05, 9.690299999999888e-05, 9.62080000000004e-05, 9.63470000000001e-05, 9.709700000000085e-05, 9.61530000000016e-05, 9.645800000000065e-05, 9.659700000000035e-05, 9.691699999999845e-05, 9.701399999999943e-05, 9.659700000000035e-05, 9.676400000000265e-05]</msg>
<status status="PASS" starttime="20201030 15:55:05.717" endtime="20201030 15:55:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.712" endtime="20201030 15:55:05.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.723" endtime="20201030 15:55:05.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.722" endtime="20201030 15:55:05.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.721" endtime="20201030 15:55:05.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.362" endtime="20201030 15:55:05.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.362" endtime="20201030 15:55:05.744"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.753" endtime="20201030 15:55:05.772"></status>
</kw>
<msg timestamp="20201030 15:55:05.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.751" endtime="20201030 15:55:05.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.774" endtime="20201030 15:55:05.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.776" endtime="20201030 15:55:05.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.749" endtime="20201030 15:55:05.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.747" endtime="20201030 15:55:05.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.785" endtime="20201030 15:55:06.072"></status>
</kw>
<msg timestamp="20201030 15:55:06.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.784" endtime="20201030 15:55:06.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.076" endtime="20201030 15:55:06.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.084" endtime="20201030 15:55:06.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.781" endtime="20201030 15:55:06.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.780" endtime="20201030 15:55:06.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.091" level="INFO">${RESULT} = [{'diff': 9.779199999999932e-05}, {'diff': 9.715199999999966e-05}, {'diff': 9.812500000000099e-05}, {'diff': 9.790299999999988e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.736100000000067e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:06.088" endtime="20201030 15:55:06.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:06.095" level="INFO">${ACCURACY} = {'diff': [9.779199999999932e-05, 9.715199999999966e-05, 9.812500000000099e-05, 9.790299999999988e-05, 9.773600000000104e-05, 9.736100000000067e-05, 9.770899999999791e-05, 9.787500000000074e-05, 9.8014...</msg>
<status status="PASS" starttime="20201030 15:55:06.092" endtime="20201030 15:55:06.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.099" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:55:06.098" endtime="20201030 15:55:06.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.102" level="INFO">VALUE: [9.779199999999932e-05, 9.715199999999966e-05, 9.812500000000099e-05, 9.790299999999988e-05, 9.773600000000104e-05, 9.736100000000067e-05, 9.770899999999791e-05, 9.787500000000074e-05, 9.801400000000043e-05, 9.729199999999882e-05, 9.800000000000086e-05, 9.731900000000196e-05, 9.800000000000086e-05, 9.806899999999924e-05, 9.773600000000104e-05, 9.787500000000074e-05, 9.725000000000011e-05, 9.755599999999864e-05, 9.743099999999852e-05, 9.76799999999993e-05, 9.787499999999727e-05, 9.805599999999914e-05, 9.730600000000186e-05, 9.75409999999996e-05, 9.738899999999981e-05, 9.712499999999999e-05, 9.781999999999846e-05, 9.718100000000174e-05, 9.719400000000183e-05, 9.712499999999999e-05, 9.727699999999978e-05, 9.79730000000012e-05, 9.773599999999757e-05, 9.719400000000183e-05, 9.80410000000001e-05, 9.783299999999856e-05, 9.738900000000328e-05, 9.774999999999714e-05, 9.804199999999957e-05, 9.805500000000314e-05, 9.786100000000117e-05, 9.718100000000174e-05, 9.779099999999985e-05, 9.726399999999968e-05, 9.744399999999862e-05, 9.790299999999988e-05, 9.757000000000168e-05, 9.76669999999992e-05, 9.792999999999955e-05, 9.761100000000092e-05]</msg>
<status status="PASS" starttime="20201030 15:55:06.100" endtime="20201030 15:55:06.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.096" endtime="20201030 15:55:06.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.108" endtime="20201030 15:55:06.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.106" endtime="20201030 15:55:06.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.105" endtime="20201030 15:55:06.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.745" endtime="20201030 15:55:06.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.744" endtime="20201030 15:55:06.129"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.138" endtime="20201030 15:55:06.157"></status>
</kw>
<msg timestamp="20201030 15:55:06.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.136" endtime="20201030 15:55:06.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.159" endtime="20201030 15:55:06.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.161" endtime="20201030 15:55:06.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.134" endtime="20201030 15:55:06.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.132" endtime="20201030 15:55:06.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.170" endtime="20201030 15:55:06.457"></status>
</kw>
<msg timestamp="20201030 15:55:06.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022863875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.169" endtime="20201030 15:55:06.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022863875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.461" endtime="20201030 15:55:06.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.469" endtime="20201030 15:55:06.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.166" endtime="20201030 15:55:06.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.165" endtime="20201030 15:55:06.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.476" level="INFO">${RESULT} = [{'diff': 9.954200000000107e-05}, {'diff': 9.845899999999866e-05}, {'diff': 9.887500000000174e-05}, {'diff': 9.901399999999796e-05}, {'diff': 9.820799999999894e-05}, {'diff': 9.824999999999764e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:06.473" endtime="20201030 15:55:06.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:06.481" level="INFO">${ACCURACY} = {'diff': [9.954200000000107e-05, 9.845899999999866e-05, 9.887500000000174e-05, 9.901399999999796e-05, 9.820799999999894e-05, 9.824999999999764e-05, 9.85410000000006e-05, 9.869499999999934e-05, 9.90140...</msg>
<status status="PASS" starttime="20201030 15:55:06.477" endtime="20201030 15:55:06.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.485" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:55:06.484" endtime="20201030 15:55:06.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.488" level="INFO">VALUE: [9.954200000000107e-05, 9.845899999999866e-05, 9.887500000000174e-05, 9.901399999999796e-05, 9.820799999999894e-05, 9.824999999999764e-05, 9.85410000000006e-05, 9.869499999999934e-05, 9.901400000000143e-05, 9.819399999999937e-05, 9.900000000000186e-05, 9.816600000000023e-05, 9.906999999999971e-05, 9.879200000000032e-05, 9.891700000000045e-05, 9.815300000000013e-05, 9.831899999999949e-05, 9.9028000000001e-05, 9.863900000000106e-05, 9.887500000000174e-05, 9.825000000000111e-05, 9.826400000000068e-05, 9.831899999999949e-05, 9.870799999999944e-05, 9.830499999999992e-05, 9.85280000000005e-05, 9.881899999999999e-05, 9.8334000000002e-05, 9.843000000000005e-05, 9.894499999999959e-05, 9.895799999999969e-05, 9.852700000000103e-05, 9.845799999999919e-05, 9.84860000000018e-05, 9.84999999999979e-05, 9.8334000000002e-05, 9.856899999999974e-05, 9.815300000000013e-05, 9.89999999999984e-05, 9.894499999999959e-05, 9.887500000000174e-05, 9.901399999999796e-05, 9.901400000000143e-05, 9.888899999999784e-05, 9.851399999999746e-05, 9.876399999999771e-05, 9.90419999999971e-05, 9.888900000000131e-05, 9.819499999999884e-05, 9.881899999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:55:06.486" endtime="20201030 15:55:06.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.482" endtime="20201030 15:55:06.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.493" endtime="20201030 15:55:06.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.491" endtime="20201030 15:55:06.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.490" endtime="20201030 15:55:06.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.130" endtime="20201030 15:55:06.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.129" endtime="20201030 15:55:06.513"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.522" endtime="20201030 15:55:06.541"></status>
</kw>
<msg timestamp="20201030 15:55:06.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.520" endtime="20201030 15:55:06.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.543" endtime="20201030 15:55:06.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.545" endtime="20201030 15:55:06.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.518" endtime="20201030 15:55:06.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.516" endtime="20201030 15:55:06.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.554" endtime="20201030 15:55:06.841"></status>
</kw>
<msg timestamp="20201030 15:55:06.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021625931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.553" endtime="20201030 15:55:06.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021625931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.846" endtime="20201030 15:55:06.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.854" endtime="20201030 15:55:06.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.550" endtime="20201030 15:55:06.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.548" endtime="20201030 15:55:06.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.860" level="INFO">${RESULT} = [{'diff': 0.00010012499999999952}, {'diff': 9.920899999999941e-05}, {'diff': 9.965300000000163e-05}, {'diff': 0.00010007000000000071}, {'diff': 9.962500000000249e-05}, {'diff': 9.990299999999841e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:06.857" endtime="20201030 15:55:06.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:06.864" level="INFO">${ACCURACY} = {'diff': [0.00010012499999999952, 9.920899999999941e-05, 9.965300000000163e-05, 0.00010007000000000071, 9.962500000000249e-05, 9.990299999999841e-05, 9.911100000000242e-05, 9.998599999999983e-05, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:06.861" endtime="20201030 15:55:06.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.869" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:55:06.868" endtime="20201030 15:55:06.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.871" level="INFO">VALUE: [0.00010012499999999952, 9.920899999999941e-05, 9.965300000000163e-05, 0.00010007000000000071, 9.962500000000249e-05, 9.990299999999841e-05, 9.911100000000242e-05, 9.998599999999983e-05, 0.00010004200000000157, 9.918100000000027e-05, 9.962499999999902e-05, 9.918100000000027e-05, 9.913799999999862e-05, 9.943000000000105e-05, 9.99999999999994e-05, 9.937499999999877e-05, 9.94999999999989e-05, 9.93609999999992e-05, 9.96809999999973e-05, 9.973600000000304e-05, 0.00010001399999999896, 9.987499999999927e-05, 9.934800000000257e-05, 0.00010001400000000243, 0.0001000419999999981, 9.974999999999914e-05, 9.938800000000234e-05, 9.934699999999963e-05, 9.943100000000052e-05, 9.958300000000031e-05, 9.944400000000062e-05, 0.00010007000000000071, 9.940199999999844e-05, 9.973599999999957e-05, 9.952799999999803e-05, 9.970800000000044e-05, 9.976399999999871e-05, 9.99999999999994e-05, 9.918100000000027e-05, 9.973599999999957e-05, 9.909799999999885e-05, 9.924999999999864e-05, 9.925000000000211e-05, 9.973599999999957e-05, 9.988899999999884e-05, 9.951399999999846e-05, 9.980499999999795e-05, 9.955500000000117e-05, 9.918100000000027e-05, 9.912500000000199e-05]</msg>
<status status="PASS" starttime="20201030 15:55:06.870" endtime="20201030 15:55:06.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.865" endtime="20201030 15:55:06.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.876" endtime="20201030 15:55:06.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.875" endtime="20201030 15:55:06.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.874" endtime="20201030 15:55:06.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.514" endtime="20201030 15:55:06.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.514" endtime="20201030 15:55:06.897"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.906" endtime="20201030 15:55:06.925"></status>
</kw>
<msg timestamp="20201030 15:55:06.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.904" endtime="20201030 15:55:06.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.927" endtime="20201030 15:55:06.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.929" endtime="20201030 15:55:06.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.901" endtime="20201030 15:55:06.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.899" endtime="20201030 15:55:06.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.938" endtime="20201030 15:55:07.224"></status>
</kw>
<msg timestamp="20201030 15:55:07.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.937" endtime="20201030 15:55:07.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.229" endtime="20201030 15:55:07.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.237" endtime="20201030 15:55:07.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.934" endtime="20201030 15:55:07.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.933" endtime="20201030 15:55:07.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.243" level="INFO">${RESULT} = [{'diff': 0.00010129099999999988}, {'diff': 0.00010073600000000058}, {'diff': 0.00010055599999999817}, {'diff': 0.00010088800000000037}, {'diff': 0.0001008480000000006}, {'diff': 0.0001006670000000022...</msg>
<status status="PASS" starttime="20201030 15:55:07.240" endtime="20201030 15:55:07.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:07.247" level="INFO">${ACCURACY} = {'diff': [0.00010129099999999988, 0.00010073600000000058, 0.00010055599999999817, 0.00010088800000000037, 0.0001008480000000006, 0.0001006670000000022, 0.0001008610000000007, 0.00010061100000000045, 0...</msg>
<status status="PASS" starttime="20201030 15:55:07.244" endtime="20201030 15:55:07.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.252" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:55:07.251" endtime="20201030 15:55:07.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.254" level="INFO">VALUE: [0.00010129099999999988, 0.00010073600000000058, 0.00010055599999999817, 0.00010088800000000037, 0.0001008480000000006, 0.0001006670000000022, 0.0001008610000000007, 0.00010061100000000045, 0.00010105599999999867, 0.00010029099999999888, 0.000100415999999999, 0.00010054200000000207, 0.00010045799999999772, 0.00010090199999999994, 0.00010015199999999919, 0.00010012499999999952, 0.00010009700000000038, 0.00010105599999999867, 0.00010061100000000045, 0.00010019500000000084, 0.00010024999999999964, 0.00010019400000000137, 0.00010043100000000152, 0.0001006670000000022, 0.00010102700000000006, 0.00010094399999999865, 0.00010037499999999977, 0.00010023600000000008, 0.0001003610000000002, 0.00010091699999999898, 0.00010048700000000327, 0.00010023600000000008, 0.00010070799999999797, 0.000100722000000001, 0.00010051399999999946, 0.0001010419999999991, 0.00010018100000000127, 0.0001006670000000022, 0.00010011200000000289, 0.00010015299999999866, 0.0001004999999999999, 0.00010098600000000083, 0.00010038899999999934, 0.00010080599999999842, 0.00010045799999999772, 0.00010109700000000138, 0.00010094500000000159, 0.0001008610000000007, 0.00010063899999999959, 0.0001003610000000002]</msg>
<status status="PASS" starttime="20201030 15:55:07.253" endtime="20201030 15:55:07.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.248" endtime="20201030 15:55:07.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.260" endtime="20201030 15:55:07.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.258" endtime="20201030 15:55:07.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.257" endtime="20201030 15:55:07.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.898" endtime="20201030 15:55:07.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.897" endtime="20201030 15:55:07.281"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.289" endtime="20201030 15:55:07.308"></status>
</kw>
<msg timestamp="20201030 15:55:07.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.288" endtime="20201030 15:55:07.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.310" endtime="20201030 15:55:07.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.312" endtime="20201030 15:55:07.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.285" endtime="20201030 15:55:07.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.283" endtime="20201030 15:55:07.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.321" endtime="20201030 15:55:07.608"></status>
</kw>
<msg timestamp="20201030 15:55:07.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.320" endtime="20201030 15:55:07.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.612" endtime="20201030 15:55:07.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.620" endtime="20201030 15:55:07.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.317" endtime="20201030 15:55:07.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.315" endtime="20201030 15:55:07.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.626" level="INFO">${RESULT} = [{'diff': 0.00010265300000000116}, {'diff': 0.00010209800000000185}, {'diff': 0.00010140299999999991}, {'diff': 0.00010129200000000282}, {'diff': 0.00010165200000000069}, {'diff': 0.000101541000000000...</msg>
<status status="PASS" starttime="20201030 15:55:07.623" endtime="20201030 15:55:07.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:07.631" level="INFO">${ACCURACY} = {'diff': [0.00010265300000000116, 0.00010209800000000185, 0.00010140299999999991, 0.00010129200000000282, 0.00010165200000000069, 0.00010154100000000013, 0.00010158300000000231, 0.00010155599999999917...</msg>
<status status="PASS" starttime="20201030 15:55:07.627" endtime="20201030 15:55:07.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.635" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:55:07.634" endtime="20201030 15:55:07.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.638" level="INFO">VALUE: [0.00010265300000000116, 0.00010209800000000185, 0.00010140299999999991, 0.00010129200000000282, 0.00010165200000000069, 0.00010154100000000013, 0.00010158300000000231, 0.00010155599999999917, 0.0001020139999999975, 0.00010197199999999879, 0.00010141699999999948, 0.00010131899999999902, 0.00010206999999999924, 0.000101722000000002, 0.00010191699999999998, 0.00010148600000000133, 0.00010202800000000053, 0.0001015419999999996, 0.00010120799999999847, 0.00010147199999999829, 0.00010162500000000102, 0.00010191699999999998, 0.00010138900000000034, 0.00010182000000000246, 0.00010205599999999967, 0.0001012220000000015, 0.00010161200000000092, 0.00010112500000000052, 0.00010159699999999841, 0.000101819999999999, 0.00010149999999999743, 0.00010188900000000084, 0.00010179199999999985, 0.00010186099999999823, 0.0001020000000000014, 0.00010129199999999935, 0.00010173600000000158, 0.0001019870000000013, 0.00010115299999999966, 0.00010175000000000115, 0.00010173600000000158, 0.00010123600000000108, 0.00010181900000000299, 0.00010148599999999786, 0.00010111100000000095, 0.00010129199999999935, 0.00010197300000000173, 0.00010117999999999933, 0.0001015000000000009, 0.00010198599999999836]</msg>
<status status="PASS" starttime="20201030 15:55:07.636" endtime="20201030 15:55:07.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.632" endtime="20201030 15:55:07.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.643" endtime="20201030 15:55:07.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.641" endtime="20201030 15:55:07.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.640" endtime="20201030 15:55:07.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.282" endtime="20201030 15:55:07.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.281" endtime="20201030 15:55:07.664"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.672" endtime="20201030 15:55:07.691"></status>
</kw>
<msg timestamp="20201030 15:55:07.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.671" endtime="20201030 15:55:07.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.693" endtime="20201030 15:55:07.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.695" endtime="20201030 15:55:07.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.668" endtime="20201030 15:55:07.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.666" endtime="20201030 15:55:07.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.704" endtime="20201030 15:55:07.990"></status>
</kw>
<msg timestamp="20201030 15:55:07.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.703" endtime="20201030 15:55:07.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.994" endtime="20201030 15:55:08.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.002" endtime="20201030 15:55:08.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.700" endtime="20201030 15:55:08.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.698" endtime="20201030 15:55:08.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.008" level="INFO">${RESULT} = [{'diff': 0.00010343000000000158}, {'diff': 0.00010248599999999886}, {'diff': 0.00010281900000000052}, {'diff': 0.00010216700000000023}, {'diff': 0.00010219499999999937}, {'diff': 0.000102264000000001...</msg>
<status status="PASS" starttime="20201030 15:55:08.005" endtime="20201030 15:55:08.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:08.012" level="INFO">${ACCURACY} = {'diff': [0.00010343000000000158, 0.00010248599999999886, 0.00010281900000000052, 0.00010216700000000023, 0.00010219499999999937, 0.00010226400000000122, 0.00010230500000000045, 0.00010293099999999708...</msg>
<status status="PASS" starttime="20201030 15:55:08.009" endtime="20201030 15:55:08.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.017" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:55:08.016" endtime="20201030 15:55:08.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.019" level="INFO">VALUE: [0.00010343000000000158, 0.00010248599999999886, 0.00010281900000000052, 0.00010216700000000023, 0.00010219499999999937, 0.00010226400000000122, 0.00010230500000000045, 0.00010293099999999708, 0.00010231900000000002, 0.00010209699999999891, 0.00010306900000000077, 0.00010227699999999784, 0.00010291599999999804, 0.00010261100000000245, 0.00010255600000000017, 0.000102513999999998, 0.00010227800000000078, 0.00010243100000000005, 0.00010247199999999929, 0.0001025000000000019, 0.00010262500000000202, 0.00010294500000000012, 0.00010249999999999843, 0.00010230599999999992, 0.00010295800000000022, 0.00010275000000000215, 0.00010258299999999984, 0.00010301400000000197, 0.00010276399999999825, 0.000102513999999998, 0.00010254100000000113, 0.00010261099999999898, 0.0001030000000000024, 0.00010219499999999937, 0.00010230599999999992, 0.00010216600000000076, 0.00010244400000000015, 0.00010295800000000022, 0.00010309699999999991, 0.0001028749999999988, 0.00010236099999999873, 0.00010243000000000058, 0.00010212500000000152, 0.00010226400000000122, 0.00010294500000000012, 0.00010231900000000002, 0.00010266699999999726, 0.00010230599999999992, 0.00010249999999999843, 0.00010279100000000138]</msg>
<status status="PASS" starttime="20201030 15:55:08.018" endtime="20201030 15:55:08.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.013" endtime="20201030 15:55:08.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.024" endtime="20201030 15:55:08.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.023" endtime="20201030 15:55:08.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.021" endtime="20201030 15:55:08.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.664" endtime="20201030 15:55:08.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.664" endtime="20201030 15:55:08.045"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.053" endtime="20201030 15:55:08.076"></status>
</kw>
<msg timestamp="20201030 15:55:08.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.052" endtime="20201030 15:55:08.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.077" endtime="20201030 15:55:08.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.080" endtime="20201030 15:55:08.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.049" endtime="20201030 15:55:08.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.047" endtime="20201030 15:55:08.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.089" endtime="20201030 15:55:08.375"></status>
</kw>
<msg timestamp="20201030 15:55:08.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024760986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.087" endtime="20201030 15:55:08.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024760986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.379" endtime="20201030 15:55:08.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.387" endtime="20201030 15:55:08.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.085" endtime="20201030 15:55:08.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.083" endtime="20201030 15:55:08.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.394" level="INFO">${RESULT} = [{'diff': 0.00010417999999999886}, {'diff': 0.00010338899999999887}, {'diff': 0.00010341700000000148}, {'diff': 0.00010352799999999857}, {'diff': 0.000103820000000001}, {'diff': 0.00010404199999999864...</msg>
<status status="PASS" starttime="20201030 15:55:08.390" endtime="20201030 15:55:08.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:08.397" level="INFO">${ACCURACY} = {'diff': [0.00010417999999999886, 0.00010338899999999887, 0.00010341700000000148, 0.00010352799999999857, 0.000103820000000001, 0.00010404199999999864, 0.00010399999999999993, 0.00010397200000000079, ...</msg>
<status status="PASS" starttime="20201030 15:55:08.394" endtime="20201030 15:55:08.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.402" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:55:08.401" endtime="20201030 15:55:08.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.404" level="INFO">VALUE: [0.00010417999999999886, 0.00010338899999999887, 0.00010341700000000148, 0.00010352799999999857, 0.000103820000000001, 0.00010404199999999864, 0.00010399999999999993, 0.00010397200000000079, 0.00010306900000000077, 0.0001037360000000001, 0.0001033749999999993, 0.00010356900000000127, 0.00010406999999999778, 0.0001037360000000001, 0.00010406900000000177, 0.00010347200000000029, 0.00010397300000000026, 0.00010320800000000047, 0.0001039160000000025, 0.00010366700000000173, 0.00010330600000000092, 0.00010331900000000102, 0.00010330500000000145, 0.00010334700000000016, 0.00010380599999999796, 0.00010313899999999862, 0.00010374999999999968, 0.0001036940000000014, 0.00010352800000000204, 0.00010349999999999943, 0.00010384700000000066, 0.00010330599999999746, 0.00010312499999999905, 0.00010369399999999793, 0.0001033879999999994, 0.0001040559999999982, 0.00010313800000000262, 0.00010398699999999983, 0.00010326299999999927, 0.00010336099999999973, 0.00010361099999999998, 0.00010391599999999904, 0.00010406999999999778, 0.00010316600000000176, 0.00010349999999999943, 0.00010312499999999905, 0.00010324999999999918, 0.00010379099999999891, 0.00010362499999999608, 0.00010337500000000277]</msg>
<status status="PASS" starttime="20201030 15:55:08.403" endtime="20201030 15:55:08.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.398" endtime="20201030 15:55:08.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.410" endtime="20201030 15:55:08.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.408" endtime="20201030 15:55:08.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.407" endtime="20201030 15:55:08.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.046" endtime="20201030 15:55:08.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.045" endtime="20201030 15:55:08.431"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.439" endtime="20201030 15:55:08.458"></status>
</kw>
<msg timestamp="20201030 15:55:08.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.438" endtime="20201030 15:55:08.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.460" endtime="20201030 15:55:08.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.463" endtime="20201030 15:55:08.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.435" endtime="20201030 15:55:08.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.433" endtime="20201030 15:55:08.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.472" endtime="20201030 15:55:08.757"></status>
</kw>
<msg timestamp="20201030 15:55:08.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.470" endtime="20201030 15:55:08.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.761" endtime="20201030 15:55:08.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.769" endtime="20201030 15:55:08.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.467" endtime="20201030 15:55:08.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.466" endtime="20201030 15:55:08.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.775" level="INFO">${RESULT} = [{'diff': 0.00010550000000000143}, {'diff': 0.00010425000000000018}, {'diff': 0.0001041940000000019}, {'diff': 0.00010498600000000136}, {'diff': 0.00010490299999999994}, {'diff': 0.0001046800000000028...</msg>
<status status="PASS" starttime="20201030 15:55:08.772" endtime="20201030 15:55:08.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:08.780" level="INFO">${ACCURACY} = {'diff': [0.00010550000000000143, 0.00010425000000000018, 0.0001041940000000019, 0.00010498600000000136, 0.00010490299999999994, 0.00010468000000000283, 0.00010505499999999973, 0.0001043200000000015, ...</msg>
<status status="PASS" starttime="20201030 15:55:08.776" endtime="20201030 15:55:08.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.785" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:55:08.784" endtime="20201030 15:55:08.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.787" level="INFO">VALUE: [0.00010550000000000143, 0.00010425000000000018, 0.0001041940000000019, 0.00010498600000000136, 0.00010490299999999994, 0.00010468000000000283, 0.00010505499999999973, 0.0001043200000000015, 0.00010480499999999948, 0.00010437499999999683, 0.00010494500000000212, 0.00010477699999999687, 0.00010486100000000123, 0.00010412500000000005, 0.00010462500000000055, 0.00010505499999999973, 0.00010425000000000018, 0.00010466699999999926, 0.00010491600000000004, 0.000104514, 0.00010448600000000086, 0.00010436100000000073, 0.00010441599999999954, 0.00010411100000000048, 0.00010411100000000048, 0.0001042360000000006, 0.00010483300000000209, 0.00010441699999999901, 0.00010456900000000227, 0.00010455600000000217, 0.00010444400000000215, 0.00010498600000000136, 0.0001046949999999984, 0.00010484699999999819, 0.00010412500000000005, 0.00010481899999999905, 0.00010429199999999889, 0.00010434700000000116, 0.00010431999999999803, 0.00010465200000000022, 0.00010498600000000136, 0.00010473700000000058, 0.00010441700000000248, 0.00010491699999999951, 0.00010459800000000088, 0.00010436100000000073, 0.00010494499999999865, 0.00010500000000000093, 0.00010476400000000025, 0.00010476400000000025]</msg>
<status status="PASS" starttime="20201030 15:55:08.786" endtime="20201030 15:55:08.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.781" endtime="20201030 15:55:08.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.792" endtime="20201030 15:55:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.791" endtime="20201030 15:55:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.789" endtime="20201030 15:55:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.432" endtime="20201030 15:55:08.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.431" endtime="20201030 15:55:08.813"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.821" endtime="20201030 15:55:08.841"></status>
</kw>
<msg timestamp="20201030 15:55:08.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.820" endtime="20201030 15:55:08.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.842" endtime="20201030 15:55:08.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.845" endtime="20201030 15:55:08.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.817" endtime="20201030 15:55:08.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.815" endtime="20201030 15:55:08.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.854" endtime="20201030 15:55:09.140"></status>
</kw>
<msg timestamp="20201030 15:55:09.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.852" endtime="20201030 15:55:09.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.144" endtime="20201030 15:55:09.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.152" endtime="20201030 15:55:09.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.849" endtime="20201030 15:55:09.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.848" endtime="20201030 15:55:09.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.158" level="INFO">${RESULT} = [{'diff': 0.00010631900000000055}, {'diff': 0.00010530499999999998}, {'diff': 0.00010515200000000072}, {'diff': 0.00010529100000000041}, {'diff': 0.00010598600000000236}, {'diff': 0.000105625000000001...</msg>
<status status="PASS" starttime="20201030 15:55:09.155" endtime="20201030 15:55:09.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.162" level="INFO">${ACCURACY} = {'diff': [0.00010631900000000055, 0.00010530499999999998, 0.00010515200000000072, 0.00010529100000000041, 0.00010598600000000236, 0.00010562500000000155, 0.000105207999999999, 0.00010536100000000173, ...</msg>
<status status="PASS" starttime="20201030 15:55:09.159" endtime="20201030 15:55:09.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.167" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.166" endtime="20201030 15:55:09.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.169" level="INFO">VALUE: [0.00010631900000000055, 0.00010530499999999998, 0.00010515200000000072, 0.00010529100000000041, 0.00010598600000000236, 0.00010562500000000155, 0.000105207999999999, 0.00010536100000000173, 0.00010555500000000023, 0.00010572200000000254, 0.0001052360000000016, 0.00010579200000000039, 0.00010519399999999943, 0.00010581900000000005, 0.00010512499999999758, 0.00010511100000000148, 0.0001055559999999997, 0.00010591599999999757, 0.00010517999999999986, 0.00010518099999999933, 0.0001052499999999977, 0.0001051949999999989, 0.00010572199999999907, 0.00010575000000000168, 0.00010538900000000087, 0.00010543099999999958, 0.00010593100000000008, 0.00010545799999999925, 0.00010512499999999758, 0.00010531899999999955, 0.00010537499999999783, 0.0001057629999999983, 0.00010529199999999989, 0.00010562499999999808, 0.00010543099999999958, 0.00010540300000000044, 0.00010530600000000293, 0.00010581900000000005, 0.0001056949999999994, 0.00010536099999999826, 0.0001053750000000013, 0.00010598699999999836, 0.00010554100000000066, 0.00010517999999999986, 0.00010511100000000148, 0.00010537499999999783, 0.00010515300000000019, 0.00010523599999999814, 0.00010581900000000005, 0.00010561099999999851]</msg>
<status status="PASS" starttime="20201030 15:55:09.168" endtime="20201030 15:55:09.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.163" endtime="20201030 15:55:09.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.174" endtime="20201030 15:55:09.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.173" endtime="20201030 15:55:09.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.172" endtime="20201030 15:55:09.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.814" endtime="20201030 15:55:09.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.813" endtime="20201030 15:55:09.195"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.204" endtime="20201030 15:55:09.224"></status>
</kw>
<msg timestamp="20201030 15:55:09.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.202" endtime="20201030 15:55:09.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.225" endtime="20201030 15:55:09.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.228" endtime="20201030 15:55:09.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.199" endtime="20201030 15:55:09.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.197" endtime="20201030 15:55:09.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.237" endtime="20201030 15:55:09.524"></status>
</kw>
<msg timestamp="20201030 15:55:09.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.236" endtime="20201030 15:55:09.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.528" endtime="20201030 15:55:09.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.536" endtime="20201030 15:55:09.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.233" endtime="20201030 15:55:09.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.231" endtime="20201030 15:55:09.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.543" level="INFO">${RESULT} = [{'diff': 0.00010691700000000151}, {'diff': 0.00010648599999999939}, {'diff': 0.00010704199999999817}, {'diff': 0.00010613899999999815}, {'diff': 0.00010613900000000162}, {'diff': 0.000106195000000003...</msg>
<status status="PASS" starttime="20201030 15:55:09.539" endtime="20201030 15:55:09.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.546" level="INFO">${ACCURACY} = {'diff': [0.00010691700000000151, 0.00010648599999999939, 0.00010704199999999817, 0.00010613899999999815, 0.00010613900000000162, 0.00010619500000000337, 0.00010649999999999896, 0.00010659699999999994...</msg>
<status status="PASS" starttime="20201030 15:55:09.544" endtime="20201030 15:55:09.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.551" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.550" endtime="20201030 15:55:09.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.553" level="INFO">VALUE: [0.00010691700000000151, 0.00010648599999999939, 0.00010704199999999817, 0.00010613899999999815, 0.00010613900000000162, 0.00010619500000000337, 0.00010649999999999896, 0.00010659699999999994, 0.00010698599999999989, 0.00010686099999999976, 0.00010634699999999969, 0.00010623599999999914, 0.0001068889999999989, 0.00010659699999999994, 0.00010677799999999835, 0.00010640299999999797, 0.00010680500000000148, 0.00010634699999999969, 0.00010654200000000114, 0.00010699999999999946, 0.00010704200000000164, 0.00010687499999999933, 0.00010684700000000019, 0.0001070560000000012, 0.00010651399999999853, 0.0001070560000000012, 0.00010649999999999896, 0.00010699999999999946, 0.00010705500000000173, 0.00010613799999999868, 0.00010691599999999857, 0.00010694400000000118, 0.00010673599999999964, 0.00010611099999999901, 0.00010632000000000003, 0.00010666599999999832, 0.00010666699999999779, 0.00010702699999999912, 0.00010684700000000019, 0.00010619400000000043, 0.00010636099999999926, 0.0001062499999999987, 0.00010648600000000286, 0.00010618100000000033, 0.00010691700000000151, 0.00010662500000000255, 0.00010673599999999964, 0.00010649999999999896, 0.00010618099999999686, 0.00010612500000000205]</msg>
<status status="PASS" starttime="20201030 15:55:09.552" endtime="20201030 15:55:09.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.547" endtime="20201030 15:55:09.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.559" endtime="20201030 15:55:09.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.558" endtime="20201030 15:55:09.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.556" endtime="20201030 15:55:09.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.196" endtime="20201030 15:55:09.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.195" endtime="20201030 15:55:09.580"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.589" endtime="20201030 15:55:09.608"></status>
</kw>
<msg timestamp="20201030 15:55:09.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.587" endtime="20201030 15:55:09.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.609" endtime="20201030 15:55:09.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.612" endtime="20201030 15:55:09.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.584" endtime="20201030 15:55:09.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.582" endtime="20201030 15:55:09.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.621" endtime="20201030 15:55:09.929"></status>
</kw>
<msg timestamp="20201030 15:55:09.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.619" endtime="20201030 15:55:09.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.934" endtime="20201030 15:55:09.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.942" endtime="20201030 15:55:09.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.617" endtime="20201030 15:55:09.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.615" endtime="20201030 15:55:09.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.948" level="INFO">${RESULT} = [{'diff': 0.0001085829999999989}, {'diff': 0.00010723600000000014}, {'diff': 0.00010715299999999872}, {'diff': 0.00010709799999999992}, {'diff': 0.00010784700000000119}, {'diff': 0.0001073330000000011...</msg>
<status status="PASS" starttime="20201030 15:55:09.945" endtime="20201030 15:55:09.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.953" level="INFO">${ACCURACY} = {'diff': [0.0001085829999999989, 0.00010723600000000014, 0.00010715299999999872, 0.00010709799999999992, 0.00010784700000000119, 0.00010733300000000112, 0.00010765299999999922, 0.00010741699999999854,...</msg>
<status status="PASS" starttime="20201030 15:55:09.949" endtime="20201030 15:55:09.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.957" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.956" endtime="20201030 15:55:09.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.960" level="INFO">VALUE: [0.0001085829999999989, 0.00010723600000000014, 0.00010715299999999872, 0.00010709799999999992, 0.00010784700000000119, 0.00010733300000000112, 0.00010765299999999922, 0.00010741699999999854, 0.00010747200000000082, 0.0001076950000000014, 0.00010734700000000069, 0.00010743099999999811, 0.00010726399999999928, 0.00010711100000000001, 0.00010723600000000014, 0.00010743099999999811, 0.00010784700000000119, 0.00010751300000000005, 0.00010793100000000208, 0.00010749999999999996, 0.00010705599999999774, 0.00010733300000000112, 0.00010772200000000107, 0.00010765299999999922, 0.00010754200000000214, 0.00010783299999999815, 0.00010786100000000076, 0.00010766700000000226, 0.00010734700000000069, 0.00010762500000000008, 0.00010780599999999849, 0.0001078479999999972, 0.00010715300000000219, 0.00010780600000000196, 0.00010748600000000039, 0.00010722200000000057, 0.00010734700000000069, 0.0001072499999999997, 0.0001077080000000015, 0.00010800000000000046, 0.00010770900000000097, 0.00010759700000000094, 0.00010801400000000003, 0.0001073340000000006, 0.0001072499999999997, 0.00010805499999999926, 0.0001074019999999995, 0.00010730500000000198, 0.00010791699999999904, 0.00010744399999999821]</msg>
<status status="PASS" starttime="20201030 15:55:09.958" endtime="20201030 15:55:09.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.954" endtime="20201030 15:55:09.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.965" endtime="20201030 15:55:09.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.963" endtime="20201030 15:55:09.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.962" endtime="20201030 15:55:09.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.581" endtime="20201030 15:55:09.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.580" endtime="20201030 15:55:09.986"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.994" endtime="20201030 15:55:10.014"></status>
</kw>
<msg timestamp="20201030 15:55:10.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.993" endtime="20201030 15:55:10.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.015" endtime="20201030 15:55:10.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.018" endtime="20201030 15:55:10.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.990" endtime="20201030 15:55:10.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.988" endtime="20201030 15:55:10.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.027" endtime="20201030 15:55:10.313"></status>
</kw>
<msg timestamp="20201030 15:55:10.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.025" endtime="20201030 15:55:10.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.318" endtime="20201030 15:55:10.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.326" endtime="20201030 15:55:10.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.023" endtime="20201030 15:55:10.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.021" endtime="20201030 15:55:10.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.332" level="INFO">${RESULT} = [{'diff': 0.00010927799999999738}, {'diff': 0.00010845799999999878}, {'diff': 0.00010841699999999954}, {'diff': 0.00010894399999999971}, {'diff': 0.00010866699999999979}, {'diff': 0.000108416999999999...</msg>
<status status="PASS" starttime="20201030 15:55:10.329" endtime="20201030 15:55:10.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:10.336" level="INFO">${ACCURACY} = {'diff': [0.00010927799999999738, 0.00010845799999999878, 0.00010841699999999954, 0.00010894399999999971, 0.00010866699999999979, 0.00010841699999999954, 0.00010809699999999797, 0.00010842999999999964...</msg>
<status status="PASS" starttime="20201030 15:55:10.333" endtime="20201030 15:55:10.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.340" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:55:10.339" endtime="20201030 15:55:10.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.343" level="INFO">VALUE: [0.00010927799999999738, 0.00010845799999999878, 0.00010841699999999954, 0.00010894399999999971, 0.00010866699999999979, 0.00010841699999999954, 0.00010809699999999797, 0.00010842999999999964, 0.00010866600000000032, 0.00010829199999999942, 0.0001090419999999967, 0.00010859799999999795, 0.00010837500000000083, 0.00010865300000000022, 0.00010857000000000228, 0.00010841699999999954, 0.00010859700000000194, 0.00010866699999999979, 0.00010823600000000114, 0.00010894499999999918, 0.00010877800000000035, 0.00010812500000000058, 0.00010891700000000004, 0.0001090560000000032, 0.0001080829999999984, 0.00010841699999999954, 0.00010873599999999817, 0.00010823600000000114, 0.00010856899999999933, 0.00010898599999999842, 0.0001085690000000028, 0.00010873599999999817, 0.00010808400000000135, 0.00010872299999999807, 0.00010850000000000096, 0.00010862499999999761, 0.00010815299999999972, 0.00010891600000000057, 0.00010862500000000108, 0.00010856899999999933, 0.00010897199999999885, 0.00010851399999999706, 0.00010873600000000164, 0.00010887500000000133, 0.0001082219999999981, 0.0001087219999999986, 0.00010818099999999886, 0.00010816599999999982, 0.00010848599999999792, 0.00010894500000000265]</msg>
<status status="PASS" starttime="20201030 15:55:10.342" endtime="20201030 15:55:10.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.337" endtime="20201030 15:55:10.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.348" endtime="20201030 15:55:10.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.346" endtime="20201030 15:55:10.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.345" endtime="20201030 15:55:10.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.986" endtime="20201030 15:55:10.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.986" endtime="20201030 15:55:10.369"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.377" endtime="20201030 15:55:10.398"></status>
</kw>
<msg timestamp="20201030 15:55:10.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.376" endtime="20201030 15:55:10.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.399" endtime="20201030 15:55:10.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.402" endtime="20201030 15:55:10.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.373" endtime="20201030 15:55:10.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.371" endtime="20201030 15:55:10.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.411" endtime="20201030 15:55:10.695"></status>
</kw>
<msg timestamp="20201030 15:55:10.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02263825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:10.409" endtime="20201030 15:55:10.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02263825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:10.699" endtime="20201030 15:55:10.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.707" endtime="20201030 15:55:10.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.407" endtime="20201030 15:55:10.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.405" endtime="20201030 15:55:10.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.714" level="INFO">${RESULT} = [{'diff': 0.00011012499999999911}, {'diff': 0.00010995899999999975}, {'diff': 0.00010954100000000119}, {'diff': 0.00011004200000000117}, {'diff': 0.0001100419999999977}, {'diff': 0.0001099589999999997...</msg>
<status status="PASS" starttime="20201030 15:55:10.711" endtime="20201030 15:55:10.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:10.718" level="INFO">${ACCURACY} = {'diff': [0.00011012499999999911, 0.00010995899999999975, 0.00010954100000000119, 0.00011004200000000117, 0.0001100419999999977, 0.00010995899999999975, 0.00010927700000000137, 0.00010986100000000276,...</msg>
<status status="PASS" starttime="20201030 15:55:10.715" endtime="20201030 15:55:10.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.722" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:55:10.721" endtime="20201030 15:55:10.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.724" level="INFO">VALUE: [0.00011012499999999911, 0.00010995899999999975, 0.00010954100000000119, 0.00011004200000000117, 0.0001100419999999977, 0.00010995899999999975, 0.00010927700000000137, 0.00010986100000000276, 0.00010945799999999978, 0.0001095280000000011, 0.00010961199999999852, 0.00010962499999999861, 0.00010966700000000079, 0.00010973599999999917, 0.00010992999999999767, 0.00010990199999999853, 0.00010915200000000125, 0.00010950000000000196, 0.00010941700000000054, 0.00010916600000000082, 0.00010973600000000264, 0.00010965300000000122, 0.00010954200000000067, 0.00010986099999999929, 0.00010952799999999763, 0.00010916700000000029, 0.00010961100000000251, 0.00010940199999999803, 0.00010955600000000024, 0.00010995899999999975, 0.00010933299999999965, 0.00010909699999999897, 0.00011004200000000117, 0.00010997199999999985, 0.00010925000000000171, 0.00010961099999999904, 0.0001100280000000016, 0.0001100700000000003, 0.00010940300000000097, 0.00010977800000000135, 0.00011004099999999822, 0.00010997199999999985, 0.00010937500000000183, 0.00010973599999999917, 0.00010999999999999899, 0.00010975000000000221, 0.00010965300000000122, 0.00010915300000000072, 0.00010915300000000072, 0.00010955600000000024]</msg>
<status status="PASS" starttime="20201030 15:55:10.723" endtime="20201030 15:55:10.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.718" endtime="20201030 15:55:10.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.730" endtime="20201030 15:55:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.729" endtime="20201030 15:55:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.728" endtime="20201030 15:55:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.370" endtime="20201030 15:55:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.369" endtime="20201030 15:55:10.751"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.760" endtime="20201030 15:55:10.779"></status>
</kw>
<msg timestamp="20201030 15:55:10.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.758" endtime="20201030 15:55:10.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.781" endtime="20201030 15:55:10.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.783" endtime="20201030 15:55:10.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.756" endtime="20201030 15:55:10.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.753" endtime="20201030 15:55:10.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.792" endtime="20201030 15:55:11.078"></status>
</kw>
<msg timestamp="20201030 15:55:11.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.791" endtime="20201030 15:55:11.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.083" endtime="20201030 15:55:11.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.091" endtime="20201030 15:55:11.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.788" endtime="20201030 15:55:11.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.786" endtime="20201030 15:55:11.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.097" level="INFO">${RESULT} = [{'diff': 0.00011109700000000097}, {'diff': 0.00011084700000000072}, {'diff': 0.00011083400000000063}, {'diff': 0.00011020800000000053}, {'diff': 0.00011079200000000192}, {'diff': 0.000111027999999999...</msg>
<status status="PASS" starttime="20201030 15:55:11.094" endtime="20201030 15:55:11.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.102" level="INFO">${ACCURACY} = {'diff': [0.00011109700000000097, 0.00011084700000000072, 0.00011083400000000063, 0.00011020800000000053, 0.00011079200000000192, 0.00011102799999999913, 0.00011029200000000142, 0.00011022299999999957...</msg>
<status status="PASS" starttime="20201030 15:55:11.098" endtime="20201030 15:55:11.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.106" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.105" endtime="20201030 15:55:11.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.109" level="INFO">VALUE: [0.00011109700000000097, 0.00011084700000000072, 0.00011083400000000063, 0.00011020800000000053, 0.00011079200000000192, 0.00011102799999999913, 0.00011029200000000142, 0.00011022299999999957, 0.00011061100000000004, 0.00011045799999999731, 0.00011088899999999943, 0.00011102799999999913, 0.00011052799999999863, 0.00011055500000000176, 0.00011054099999999872, 0.00011097200000000085, 0.0001105280000000021, 0.00011047200000000035, 0.000110209, 0.00011022299999999957, 0.00011054099999999872, 0.00011038899999999893, 0.00011062499999999961, 0.0001102220000000001, 0.00011017999999999792, 0.00011015199999999878, 0.00011012499999999911, 0.00011009799999999945, 0.00011070800000000103, 0.00011023599999999967, 0.00011090300000000247, 0.00011015299999999825, 0.00011069400000000146, 0.00011062499999999961, 0.00011030600000000099, 0.00011011099999999954, 0.00011083300000000115, 0.0001103890000000024, 0.00011018099999999739, 0.00011070800000000103, 0.00011030500000000151, 0.0001107090000000005, 0.00011084700000000072, 0.00011015200000000225, 0.00011077799999999888, 0.00011047299999999982, 0.0001100830000000004, 0.00011074999999999974, 0.00011104200000000217, 0.0001107220000000006]</msg>
<status status="PASS" starttime="20201030 15:55:11.107" endtime="20201030 15:55:11.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.103" endtime="20201030 15:55:11.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.114" endtime="20201030 15:55:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.112" endtime="20201030 15:55:11.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.111" endtime="20201030 15:55:11.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.752" endtime="20201030 15:55:11.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.751" endtime="20201030 15:55:11.134"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.143" endtime="20201030 15:55:11.162"></status>
</kw>
<msg timestamp="20201030 15:55:11.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.141" endtime="20201030 15:55:11.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.164" endtime="20201030 15:55:11.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.166" endtime="20201030 15:55:11.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.139" endtime="20201030 15:55:11.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.137" endtime="20201030 15:55:11.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.175" endtime="20201030 15:55:11.462"></status>
</kw>
<msg timestamp="20201030 15:55:11.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.174" endtime="20201030 15:55:11.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.466" endtime="20201030 15:55:11.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.474" endtime="20201030 15:55:11.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.171" endtime="20201030 15:55:11.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.170" endtime="20201030 15:55:11.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.481" level="INFO">${RESULT} = [{'diff': 0.00011195900000000175}, {'diff': 0.0001112220000000011}, {'diff': 0.00011194499999999871}, {'diff': 0.00011119499999999796}, {'diff': 0.00011147200000000135}, {'diff': 0.0001115279999999996...</msg>
<status status="PASS" starttime="20201030 15:55:11.477" endtime="20201030 15:55:11.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.484" level="INFO">${ACCURACY} = {'diff': [0.00011195900000000175, 0.0001112220000000011, 0.00011194499999999871, 0.00011119499999999796, 0.00011147200000000135, 0.00011152799999999963, 0.00011115299999999925, 0.00011197200000000185,...</msg>
<status status="PASS" starttime="20201030 15:55:11.481" endtime="20201030 15:55:11.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.489" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.488" endtime="20201030 15:55:11.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.491" level="INFO">VALUE: [0.00011195900000000175, 0.0001112220000000011, 0.00011194499999999871, 0.00011119499999999796, 0.00011147200000000135, 0.00011152799999999963, 0.00011115299999999925, 0.00011197200000000185, 0.00011147199999999788, 0.00011186100000000129, 0.00011105500000000226, 0.00011112500000000011, 0.00011131899999999861, 0.00011179199999999945, 0.00011168000000000289, 0.00011166700000000279, 0.00011115199999999978, 0.00011192999999999967, 0.00011120799999999806, 0.00011148600000000092, 0.00011179199999999945, 0.00011138899999999993, 0.000111903, 0.00011144399999999874, 0.00011202800000000013, 0.00011166599999999985, 0.0001117359999999977, 0.0001112359999999972, 0.00011151400000000006, 0.00011177799999999988, 0.00011125000000000024, 0.00011188900000000043, 0.00011165299999999975, 0.00011106899999999836, 0.0001115830000000019, 0.00011180599999999902, 0.00011202800000000013, 0.00011197300000000132, 0.00011141700000000254, 0.0001114029999999995, 0.00011144499999999821, 0.00011166699999999932, 0.00011113899999999968, 0.00011187499999999739, 0.00011118099999999839, 0.00011162500000000061, 0.00011125000000000024, 0.0001112220000000011, 0.00011176400000000031, 0.00011175000000000074]</msg>
<status status="PASS" starttime="20201030 15:55:11.490" endtime="20201030 15:55:11.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.485" endtime="20201030 15:55:11.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.496" endtime="20201030 15:55:11.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.495" endtime="20201030 15:55:11.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.494" endtime="20201030 15:55:11.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.135" endtime="20201030 15:55:11.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.135" endtime="20201030 15:55:11.517"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.526" endtime="20201030 15:55:11.548"></status>
</kw>
<msg timestamp="20201030 15:55:11.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.524" endtime="20201030 15:55:11.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.550" endtime="20201030 15:55:11.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.553" endtime="20201030 15:55:11.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.522" endtime="20201030 15:55:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.519" endtime="20201030 15:55:11.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.562" endtime="20201030 15:55:11.847"></status>
</kw>
<msg timestamp="20201030 15:55:11.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.560" endtime="20201030 15:55:11.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.851" endtime="20201030 15:55:11.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.859" endtime="20201030 15:55:11.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.557" endtime="20201030 15:55:11.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.556" endtime="20201030 15:55:11.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.866" level="INFO">${RESULT} = [{'diff': 0.00011363899999999871}, {'diff': 0.00011258299999999943}, {'diff': 0.0001125420000000002}, {'diff': 0.00011247199999999888}, {'diff': 0.00011272199999999913}, {'diff': 0.0001127779999999974...</msg>
<status status="PASS" starttime="20201030 15:55:11.863" endtime="20201030 15:55:11.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.870" level="INFO">${ACCURACY} = {'diff': [0.00011363899999999871, 0.00011258299999999943, 0.0001125420000000002, 0.00011247199999999888, 0.00011272199999999913, 0.00011277799999999741, 0.0001127359999999987, 0.00011230599999999952, ...</msg>
<status status="PASS" starttime="20201030 15:55:11.867" endtime="20201030 15:55:11.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.874" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.873" endtime="20201030 15:55:11.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.876" level="INFO">VALUE: [0.00011363899999999871, 0.00011258299999999943, 0.0001125420000000002, 0.00011247199999999888, 0.00011272199999999913, 0.00011277799999999741, 0.0001127359999999987, 0.00011230599999999952, 0.00011263900000000118, 0.00011263900000000118, 0.00011291700000000057, 0.00011227699999999743, 0.00011236099999999832, 0.00011294500000000318, 0.00011277799999999741, 0.0001127220000000026, 0.00011277800000000088, 0.0001120969999999985, 0.00011230500000000004, 0.00011283299999999968, 0.00011298600000000242, 0.00011230500000000004, 0.00011252700000000115, 0.00011248599999999845, 0.00011268099999999989, 0.00011220799999999906, 0.00011247199999999888, 0.0001122770000000009, 0.00011249999999999802, 0.00011295899999999928, 0.00011247299999999835, 0.00011216699999999982, 0.00011263900000000118, 0.00011288900000000143, 0.00011245799999999931, 0.00011212499999999764, 0.00011300000000000199, 0.00011258399999999891, 0.00011290299999999753, 0.00011222199999999863, 0.00011290200000000153, 0.00011277800000000435, 0.00011248600000000192, 0.00011252800000000063, 0.0001127220000000026, 0.00011244500000000268, 0.00011215200000000425, 0.000112596999999999, 0.00011211099999999807, 0.00011302800000000113]</msg>
<status status="PASS" starttime="20201030 15:55:11.875" endtime="20201030 15:55:11.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.870" endtime="20201030 15:55:11.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.882" endtime="20201030 15:55:11.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.881" endtime="20201030 15:55:11.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.880" endtime="20201030 15:55:11.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.518" endtime="20201030 15:55:11.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.517" endtime="20201030 15:55:11.903"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.912" endtime="20201030 15:55:11.931"></status>
</kw>
<msg timestamp="20201030 15:55:11.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.910" endtime="20201030 15:55:11.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.933" endtime="20201030 15:55:11.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.935" endtime="20201030 15:55:11.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.907" endtime="20201030 15:55:11.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.905" endtime="20201030 15:55:11.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.944" endtime="20201030 15:55:12.230"></status>
</kw>
<msg timestamp="20201030 15:55:12.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021530167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.943" endtime="20201030 15:55:12.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021530167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.234" endtime="20201030 15:55:12.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.242" endtime="20201030 15:55:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.940" endtime="20201030 15:55:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.938" endtime="20201030 15:55:12.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.248" level="INFO">${RESULT} = [{'diff': 0.00011374999999999927}, {'diff': 0.00011383300000000068}, {'diff': 0.00011376299999999936}, {'diff': 0.00011320899999999953}, {'diff': 0.00011317999999999745}, {'diff': 0.000113777999999998...</msg>
<status status="PASS" starttime="20201030 15:55:12.245" endtime="20201030 15:55:12.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.253" level="INFO">${ACCURACY} = {'diff': [0.00011374999999999927, 0.00011383300000000068, 0.00011376299999999936, 0.00011320899999999953, 0.00011317999999999745, 0.00011377799999999841, 0.00011402799999999866, 0.00011315299999999778...</msg>
<status status="PASS" starttime="20201030 15:55:12.249" endtime="20201030 15:55:12.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.258" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.257" endtime="20201030 15:55:12.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.260" level="INFO">VALUE: [0.00011374999999999927, 0.00011383300000000068, 0.00011376299999999936, 0.00011320899999999953, 0.00011317999999999745, 0.00011377799999999841, 0.00011402799999999866, 0.00011315299999999778, 0.00011386099999999982, 0.00011383300000000068, 0.00011370800000000056, 0.0001135689999999974, 0.00011379200000000145, 0.0001139169999999981, 0.00011315300000000125, 0.00011332000000000009, 0.00011332000000000009, 0.0001137359999999997, 0.00011334699999999975, 0.00011345800000000031, 0.0001130969999999995, 0.00011377800000000188, 0.00011379200000000145, 0.00011347199999999988, 0.00011401400000000256, 0.0001135550000000013, 0.00011379200000000145, 0.00011393100000000114, 0.00011382000000000059, 0.00011326400000000181, 0.00011340299999999803, 0.00011363899999999871, 0.00011401399999999909, 0.00011399999999999952, 0.00011382000000000059, 0.00011306900000000036, 0.00011376399999999884, 0.00011320800000000006, 0.00011363799999999924, 0.000113597, 0.00011331900000000061, 0.00011338900000000193, 0.00011363799999999924, 0.00011319499999999996, 0.00011352800000000163, 0.00011395800000000081, 0.00011329199999999748, 0.00011315299999999778, 0.00011311100000000254, 0.00011340299999999803]</msg>
<status status="PASS" starttime="20201030 15:55:12.259" endtime="20201030 15:55:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.254" endtime="20201030 15:55:12.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.265" endtime="20201030 15:55:12.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.264" endtime="20201030 15:55:12.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.262" endtime="20201030 15:55:12.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.904" endtime="20201030 15:55:12.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.903" endtime="20201030 15:55:12.286"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.295" endtime="20201030 15:55:12.315"></status>
</kw>
<msg timestamp="20201030 15:55:12.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.294" endtime="20201030 15:55:12.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.317" endtime="20201030 15:55:12.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.319" endtime="20201030 15:55:12.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.291" endtime="20201030 15:55:12.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.289" endtime="20201030 15:55:12.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.328" endtime="20201030 15:55:12.615"></status>
</kw>
<msg timestamp="20201030 15:55:12.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.326" endtime="20201030 15:55:12.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.620" endtime="20201030 15:55:12.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.628" endtime="20201030 15:55:12.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.324" endtime="20201030 15:55:12.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.322" endtime="20201030 15:55:12.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.634" level="INFO">${RESULT} = [{'diff': 0.00011495900000000128}, {'diff': 0.00011459699999999753}, {'diff': 0.00011415199999999931}, {'diff': 0.00011456900000000186}, {'diff': 0.00011434699999999728}, {'diff': 0.000114847000000001...</msg>
<status status="PASS" starttime="20201030 15:55:12.631" endtime="20201030 15:55:12.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.638" level="INFO">${ACCURACY} = {'diff': [0.00011495900000000128, 0.00011459699999999753, 0.00011415199999999931, 0.00011456900000000186, 0.00011434699999999728, 0.00011484700000000125, 0.00011451399999999959, 0.00011445799999999784...</msg>
<status status="PASS" starttime="20201030 15:55:12.635" endtime="20201030 15:55:12.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.643" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.642" endtime="20201030 15:55:12.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.645" level="INFO">VALUE: [0.00011495900000000128, 0.00011459699999999753, 0.00011415199999999931, 0.00011456900000000186, 0.00011434699999999728, 0.00011484700000000125, 0.00011451399999999959, 0.00011445799999999784, 0.00011452799999999916, 0.00011497200000000138, 0.00011452800000000263, 0.00011495799999999834, 0.0001148750000000004, 0.00011409699999999703, 0.00011408399999999694, 0.00011470800000000156, 0.00011494399999999877, 0.00011463800000000024, 0.00011447199999999741, 0.00011450000000000002, 0.00011455499999999882, 0.00011440299999999903, 0.00011427799999999891, 0.00011469500000000146, 0.00011415299999999878, 0.00011411100000000007, 0.00011470800000000156, 0.00011458400000000091, 0.00011420800000000106, 0.00011488899999999996, 0.00011466699999999885, 0.00011440299999999903, 0.00011465299999999928, 0.00011412499999999964, 0.00011415299999999878, 0.00011451399999999959, 0.00011470799999999809, 0.00011465299999999928, 0.00011412499999999964, 0.00011470800000000156, 0.00011501400000000009, 0.00011483400000000116, 0.00011458400000000091, 0.00011434700000000075, 0.00011455499999999882, 0.00011419400000000149, 0.00011452800000000263, 0.00011405600000000127, 0.00011420899999999706, 0.00011411100000000007]</msg>
<status status="PASS" starttime="20201030 15:55:12.644" endtime="20201030 15:55:12.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.639" endtime="20201030 15:55:12.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.650" endtime="20201030 15:55:12.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.648" endtime="20201030 15:55:12.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.647" endtime="20201030 15:55:12.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.287" endtime="20201030 15:55:12.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.286" endtime="20201030 15:55:12.671"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.679" endtime="20201030 15:55:12.700"></status>
</kw>
<msg timestamp="20201030 15:55:12.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.678" endtime="20201030 15:55:12.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.701" endtime="20201030 15:55:12.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.704" endtime="20201030 15:55:12.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.675" endtime="20201030 15:55:12.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.673" endtime="20201030 15:55:12.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.713" endtime="20201030 15:55:12.998"></status>
</kw>
<msg timestamp="20201030 15:55:13.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.711" endtime="20201030 15:55:13.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.003" endtime="20201030 15:55:13.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.011" endtime="20201030 15:55:13.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.709" endtime="20201030 15:55:13.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.707" endtime="20201030 15:55:13.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.017" level="INFO">${RESULT} = [{'diff': 0.00011656999999999987}, {'diff': 0.00011573599999999823}, {'diff': 0.00011515299999999978}, {'diff': 0.00011520899999999806}, {'diff': 0.00011511100000000107}, {'diff': 0.000115361000000001...</msg>
<status status="PASS" starttime="20201030 15:55:13.014" endtime="20201030 15:55:13.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.021" level="INFO">${ACCURACY} = {'diff': [0.00011656999999999987, 0.00011573599999999823, 0.00011515299999999978, 0.00011520899999999806, 0.00011511100000000107, 0.00011536100000000132, 0.00011518099999999892, 0.00011580599999999955...</msg>
<status status="PASS" starttime="20201030 15:55:13.018" endtime="20201030 15:55:13.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.026" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.025" endtime="20201030 15:55:13.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.028" level="INFO">VALUE: [0.00011656999999999987, 0.00011573599999999823, 0.00011515299999999978, 0.00011520899999999806, 0.00011511100000000107, 0.00011536100000000132, 0.00011518099999999892, 0.00011580599999999955, 0.00011544400000000274, 0.00011563900000000071, 0.0001158750000000014, 0.00011581899999999964, 0.00011512500000000064, 0.00011543099999999917, 0.00011549999999999755, 0.0001150970000000015, 0.00011569399999999952, 0.00011580600000000302, 0.00011544399999999927, 0.00011543099999999917, 0.00011584700000000225, 0.00011525000000000077, 0.00011580599999999955, 0.00011552800000000016, 0.0001157910000000005, 0.00011536100000000132, 0.0001157499999999978, 0.00011548700000000092, 0.00011593099999999967, 0.00011579199999999998, 0.0001157360000000017, 0.00011557000000000234, 0.0001155559999999993, 0.00011512500000000064, 0.00011569500000000246, 0.00011502700000000018, 0.00011517999999999945, 0.00011504099999999975, 0.00011505600000000227, 0.00011508400000000141, 0.00011506999999999837, 0.00011530499999999957, 0.00011533399999999819, 0.00011531999999999862, 0.00011579199999999998, 0.00011505600000000227, 0.00011531900000000261, 0.00011598600000000195, 0.00011534700000000175, 0.00011552800000000016]</msg>
<status status="PASS" starttime="20201030 15:55:13.027" endtime="20201030 15:55:13.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.022" endtime="20201030 15:55:13.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.034" endtime="20201030 15:55:13.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.032" endtime="20201030 15:55:13.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.031" endtime="20201030 15:55:13.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.672" endtime="20201030 15:55:13.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.671" endtime="20201030 15:55:13.055"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.063" endtime="20201030 15:55:13.083"></status>
</kw>
<msg timestamp="20201030 15:55:13.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.062" endtime="20201030 15:55:13.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.084" endtime="20201030 15:55:13.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.087" endtime="20201030 15:55:13.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.059" endtime="20201030 15:55:13.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.057" endtime="20201030 15:55:13.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.096" endtime="20201030 15:55:13.382"></status>
</kw>
<msg timestamp="20201030 15:55:13.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.094" endtime="20201030 15:55:13.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.386" endtime="20201030 15:55:13.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.394" endtime="20201030 15:55:13.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.092" endtime="20201030 15:55:13.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.090" endtime="20201030 15:55:13.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.400" level="INFO">${RESULT} = [{'diff': 0.00011675000000000227}, {'diff': 0.00011667999999999748}, {'diff': 0.00011670800000000009}, {'diff': 0.0001167910000000015}, {'diff': 0.0001165560000000003}, {'diff': 0.00011694400000000077...</msg>
<status status="PASS" starttime="20201030 15:55:13.397" endtime="20201030 15:55:13.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.405" level="INFO">${ACCURACY} = {'diff': [0.00011675000000000227, 0.00011667999999999748, 0.00011670800000000009, 0.0001167910000000015, 0.0001165560000000003, 0.00011694400000000077, 0.00011609699999999903, 0.00011693100000000067, ...</msg>
<status status="PASS" starttime="20201030 15:55:13.401" endtime="20201030 15:55:13.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.409" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.408" endtime="20201030 15:55:13.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.412" level="INFO">VALUE: [0.00011675000000000227, 0.00011667999999999748, 0.00011670800000000009, 0.0001167910000000015, 0.0001165560000000003, 0.00011694400000000077, 0.00011609699999999903, 0.00011693100000000067, 0.00011630600000000005, 0.00011675000000000227, 0.00011650000000000202, 0.00011698599999999948, 0.00011606999999999937, 0.00011691699999999763, 0.00011643100000000017, 0.0001163750000000019, 0.0001165690000000004, 0.00011644499999999974, 0.00011608300000000293, 0.00011694400000000077, 0.00011651400000000159, 0.00011649999999999855, 0.00011683399999999969, 0.00011651400000000159, 0.00011680600000000055, 0.00011607000000000284, 0.00011676400000000184, 0.00011694400000000077, 0.00011626399999999787, 0.00011694500000000024, 0.0001162499999999983, 0.00011633399999999919, 0.00011656999999999987, 0.00011636100000000232, 0.00011673599999999923, 0.00011611100000000207, 0.00011602800000000066, 0.00011681900000000064, 0.00011630600000000005, 0.0001168889999999985, 0.00011665299999999781, 0.00011690299999999806, 0.00011683300000000021, 0.00011694400000000077, 0.00011667999999999748, 0.00011663899999999824, 0.00011665300000000128, 0.00011612499999999817, 0.00011649999999999855, 0.00011611199999999808]</msg>
<status status="PASS" starttime="20201030 15:55:13.410" endtime="20201030 15:55:13.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.406" endtime="20201030 15:55:13.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.417" endtime="20201030 15:55:13.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.415" endtime="20201030 15:55:13.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.414" endtime="20201030 15:55:13.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.055" endtime="20201030 15:55:13.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.055" endtime="20201030 15:55:13.437"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.446" endtime="20201030 15:55:13.466"></status>
</kw>
<msg timestamp="20201030 15:55:13.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.445" endtime="20201030 15:55:13.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.467" endtime="20201030 15:55:13.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.470" endtime="20201030 15:55:13.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.442" endtime="20201030 15:55:13.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.440" endtime="20201030 15:55:13.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.479" endtime="20201030 15:55:13.765"></status>
</kw>
<msg timestamp="20201030 15:55:13.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021457222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.477" endtime="20201030 15:55:13.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021457222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.769" endtime="20201030 15:55:13.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.777" endtime="20201030 15:55:13.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.475" endtime="20201030 15:55:13.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.473" endtime="20201030 15:55:13.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.784" level="INFO">${RESULT} = [{'diff': 0.00011783399999999722}, {'diff': 0.00011709700000000003}, {'diff': 0.00011801399999999962}, {'diff': 0.00011758300000000096}, {'diff': 0.00011781900000000164}, {'diff': 0.000117306000000001...</msg>
<status status="PASS" starttime="20201030 15:55:13.781" endtime="20201030 15:55:13.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.788" level="INFO">${ACCURACY} = {'diff': [0.00011783399999999722, 0.00011709700000000003, 0.00011801399999999962, 0.00011758300000000096, 0.00011781900000000164, 0.00011730600000000105, 0.00011756899999999793, 0.00011798600000000048...</msg>
<status status="PASS" starttime="20201030 15:55:13.785" endtime="20201030 15:55:13.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.792" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.791" endtime="20201030 15:55:13.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.795" level="INFO">VALUE: [0.00011783399999999722, 0.00011709700000000003, 0.00011801399999999962, 0.00011758300000000096, 0.00011781900000000164, 0.00011730600000000105, 0.00011756899999999793, 0.00011798600000000048, 0.00011731999999999715, 0.00011787499999999992, 0.00011737499999999942, 0.00011744499999999727, 0.0001177499999999998, 0.00011749999999999955, 0.00011798600000000048, 0.000117695000000001, 0.00011787499999999992, 0.0001175560000000013, 0.00011729099999999854, 0.00011718100000000092, 0.00011794499999999777, 0.00011762499999999967, 0.00011809800000000051, 0.00011790299999999906, 0.00011715299999999831, 0.00011781900000000164, 0.00011769400000000152, 0.00011783300000000121, 0.00011787499999999992, 0.00011741699999999813, 0.0001177499999999998, 0.00011770800000000109, 0.0001178889999999995, 0.0001170690000000009, 0.00011720900000000006, 0.00011757000000000087, 0.00011795900000000081, 0.00011737499999999942, 0.00011763899999999924, 0.00011709700000000003, 0.00011801399999999962, 0.00011765299999999881, 0.00011751399999999912, 0.00011754200000000173, 0.00011709800000000298, 0.0001177499999999998, 0.00011736099999999985, 0.00011786100000000035, 0.00011745800000000084, 0.00011781900000000164]</msg>
<status status="PASS" starttime="20201030 15:55:13.793" endtime="20201030 15:55:13.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.789" endtime="20201030 15:55:13.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.800" endtime="20201030 15:55:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.798" endtime="20201030 15:55:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.797" endtime="20201030 15:55:13.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.438" endtime="20201030 15:55:13.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.438" endtime="20201030 15:55:13.820"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.829" endtime="20201030 15:55:13.850"></status>
</kw>
<msg timestamp="20201030 15:55:13.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.827" endtime="20201030 15:55:13.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.851" endtime="20201030 15:55:13.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.854" endtime="20201030 15:55:13.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.825" endtime="20201030 15:55:13.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.823" endtime="20201030 15:55:13.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.863" endtime="20201030 15:55:14.149"></status>
</kw>
<msg timestamp="20201030 15:55:14.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.861" endtime="20201030 15:55:14.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.153" endtime="20201030 15:55:14.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.161" endtime="20201030 15:55:14.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.859" endtime="20201030 15:55:14.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.857" endtime="20201030 15:55:14.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.167" level="INFO">${RESULT} = [{'diff': 0.00011900000000000105}, {'diff': 0.0001188049999999996}, {'diff': 0.00011834700000000128}, {'diff': 0.00011827799999999944}, {'diff': 0.00011820799999999812}, {'diff': 0.0001183479999999972...</msg>
<status status="PASS" starttime="20201030 15:55:14.164" endtime="20201030 15:55:14.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.171" level="INFO">${ACCURACY} = {'diff': [0.00011900000000000105, 0.0001188049999999996, 0.00011834700000000128, 0.00011827799999999944, 0.00011820799999999812, 0.00011834799999999729, 0.00011895799999999887, 0.00011840200000000009,...</msg>
<status status="PASS" starttime="20201030 15:55:14.168" endtime="20201030 15:55:14.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.176" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.175" endtime="20201030 15:55:14.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.178" level="INFO">VALUE: [0.00011900000000000105, 0.0001188049999999996, 0.00011834700000000128, 0.00011827799999999944, 0.00011820799999999812, 0.00011834799999999729, 0.00011895799999999887, 0.00011840200000000009, 0.00011881899999999918, 0.00011870800000000209, 0.00011881899999999918, 0.00011845799999999837, 0.00011886099999999789, 0.00011902800000000019, 0.00011812500000000017, 0.00011900000000000105, 0.00011887500000000092, 0.00011881899999999918, 0.00011881899999999918, 0.00011895799999999887, 0.00011812500000000017, 0.00011891600000000016, 0.00011898600000000148, 0.0001188890000000005, 0.00011847200000000141, 0.000118389, 0.00011806899999999843, 0.00011887499999999745, 0.00011840200000000009, 0.0001181950000000015, 0.00011901400000000062, 0.00011812500000000017, 0.00011852799999999969, 0.0001187500000000008, 0.00011902800000000019, 0.00011904100000000029, 0.00011819400000000202, 0.00011823600000000073, 0.00011826399999999987, 0.00011897299999999791, 0.00011848599999999751, 0.00011854199999999926, 0.00011901400000000062, 0.000118389, 0.00011837500000000042, 0.00011887500000000092, 0.00011900000000000105, 0.00011881899999999918, 0.00011895799999999887, 0.00011862500000000067]</msg>
<status status="PASS" starttime="20201030 15:55:14.177" endtime="20201030 15:55:14.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.172" endtime="20201030 15:55:14.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.184" endtime="20201030 15:55:14.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.183" endtime="20201030 15:55:14.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.181" endtime="20201030 15:55:14.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.821" endtime="20201030 15:55:14.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.821" endtime="20201030 15:55:14.205"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.213" endtime="20201030 15:55:14.233"></status>
</kw>
<msg timestamp="20201030 15:55:14.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.212" endtime="20201030 15:55:14.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.235" endtime="20201030 15:55:14.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.237" endtime="20201030 15:55:14.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.209" endtime="20201030 15:55:14.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.207" endtime="20201030 15:55:14.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.246" endtime="20201030 15:55:14.533"></status>
</kw>
<msg timestamp="20201030 15:55:14.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.245" endtime="20201030 15:55:14.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.537" endtime="20201030 15:55:14.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.545" endtime="20201030 15:55:14.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.242" endtime="20201030 15:55:14.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.240" endtime="20201030 15:55:14.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.551" level="INFO">${RESULT} = [{'diff': 0.00011969400000000005}, {'diff': 0.00011923599999999826}, {'diff': 0.00011919499999999902}, {'diff': 0.00011930600000000305}, {'diff': 0.0001199440000000003}, {'diff': 0.0001194999999999980...</msg>
<status status="PASS" starttime="20201030 15:55:14.548" endtime="20201030 15:55:14.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.556" level="INFO">${ACCURACY} = {'diff': [0.00011969400000000005, 0.00011923599999999826, 0.00011919499999999902, 0.00011930600000000305, 0.0001199440000000003, 0.00011949999999999808, 0.00011948599999999851, 0.00012000000000000205,...</msg>
<status status="PASS" starttime="20201030 15:55:14.552" endtime="20201030 15:55:14.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.561" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.559" endtime="20201030 15:55:14.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.563" level="INFO">VALUE: [0.00011969400000000005, 0.00011923599999999826, 0.00011919499999999902, 0.00011930600000000305, 0.0001199440000000003, 0.00011949999999999808, 0.00011948599999999851, 0.00012000000000000205, 0.00011984800000000226, 0.00011926299999999793, 0.00011916699999999988, 0.00011931899999999968, 0.00011979199999999704, 0.00011927800000000044, 0.00011972199999999919, 0.00011987499999999846, 0.0001194439999999998, 0.00011991600000000116, 0.00011929200000000001, 0.00011911200000000108, 0.00011905499999999986, 0.00011981999999999965, 0.00011961099999999864, 0.00011983299999999975, 0.00011998700000000195, 0.00011954200000000026, 0.0001191110000000016, 0.00011944499999999927, 0.0001192500000000013, 0.00011961099999999864, 0.00011994499999999977, 0.0001194309999999997, 0.00011980600000000008, 0.00011918099999999945, 0.00011973599999999876, 0.00011949999999999808, 0.00011987499999999846, 0.00011986100000000235, 0.00011907000000000237, 0.00011951400000000112, 0.00011968099999999995, 0.00011955599999999983, 0.00011994499999999977, 0.0001192500000000013, 0.00011958400000000244, 0.0001196249999999982, 0.00011961099999999864, 0.00011947199999999894, 0.00011965300000000081, 0.00011980600000000008]</msg>
<status status="PASS" starttime="20201030 15:55:14.562" endtime="20201030 15:55:14.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.557" endtime="20201030 15:55:14.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.572" endtime="20201030 15:55:14.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.570" endtime="20201030 15:55:14.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.569" endtime="20201030 15:55:14.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.206" endtime="20201030 15:55:14.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.205" endtime="20201030 15:55:14.592"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.601" endtime="20201030 15:55:14.621"></status>
</kw>
<msg timestamp="20201030 15:55:14.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.599" endtime="20201030 15:55:14.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.623" endtime="20201030 15:55:14.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.625" endtime="20201030 15:55:14.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.597" endtime="20201030 15:55:14.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.595" endtime="20201030 15:55:14.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.634" endtime="20201030 15:55:14.920"></status>
</kw>
<msg timestamp="20201030 15:55:14.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.632" endtime="20201030 15:55:14.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.925" endtime="20201030 15:55:14.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.933" endtime="20201030 15:55:14.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.630" endtime="20201030 15:55:14.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.628" endtime="20201030 15:55:14.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.939" level="INFO">${RESULT} = [{'diff': 0.00012104200000000176}, {'diff': 0.00012018100000000045}, {'diff': 0.00012074999999999933}, {'diff': 0.00012030600000000058}, {'diff': 0.00012068000000000148}, {'diff': 0.000120681000000000...</msg>
<status status="PASS" starttime="20201030 15:55:14.936" endtime="20201030 15:55:14.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.943" level="INFO">${ACCURACY} = {'diff': [0.00012104200000000176, 0.00012018100000000045, 0.00012074999999999933, 0.00012030600000000058, 0.00012068000000000148, 0.00012068100000000095, 0.00012006900000000043, 0.0001204440000000008,...</msg>
<status status="PASS" starttime="20201030 15:55:14.940" endtime="20201030 15:55:14.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.947" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.946" endtime="20201030 15:55:14.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.950" level="INFO">VALUE: [0.00012104200000000176, 0.00012018100000000045, 0.00012074999999999933, 0.00012030600000000058, 0.00012068000000000148, 0.00012068100000000095, 0.00012006900000000043, 0.0001204440000000008, 0.00012105599999999786, 0.00012051399999999865, 0.00012056900000000093, 0.00012061099999999964, 0.00012086099999999989, 0.00012037499999999896, 0.00012004199999999729, 0.00012004100000000129, 0.00012002800000000119, 0.00012073600000000323, 0.00012034699999999982, 0.0001203050000000011, 0.0001204310000000007, 0.00012099999999999958, 0.00012099999999999958, 0.00012098600000000001, 0.0001204440000000008, 0.00012080499999999814, 0.00012099999999999958, 0.00012052799999999822, 0.00012076400000000237, 0.00012052699999999875, 0.0001208189999999977, 0.00012011099999999914, 0.00012104100000000229, 0.00012048599999999951, 0.0001206249999999992, 0.00012099999999999958, 0.00012098600000000001, 0.00012074999999999933, 0.00012068100000000095, 0.00012097200000000044, 0.00012006900000000043, 0.00012013900000000174, 0.00012098600000000001, 0.0001201249999999987, 0.00012084700000000032, 0.00012032000000000015, 0.00012086099999999989, 0.0001208189999999977, 0.00012030600000000058, 0.00012086099999999989]</msg>
<status status="PASS" starttime="20201030 15:55:14.949" endtime="20201030 15:55:14.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.944" endtime="20201030 15:55:14.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.955" endtime="20201030 15:55:14.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.953" endtime="20201030 15:55:14.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.952" endtime="20201030 15:55:14.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.593" endtime="20201030 15:55:14.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.593" endtime="20201030 15:55:14.976"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.984" endtime="20201030 15:55:15.007"></status>
</kw>
<msg timestamp="20201030 15:55:15.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.983" endtime="20201030 15:55:15.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.009" endtime="20201030 15:55:15.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.012" endtime="20201030 15:55:15.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.980" endtime="20201030 15:55:15.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.978" endtime="20201030 15:55:15.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.020" endtime="20201030 15:55:15.305"></status>
</kw>
<msg timestamp="20201030 15:55:15.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.019" endtime="20201030 15:55:15.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.309" endtime="20201030 15:55:15.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.320" endtime="20201030 15:55:15.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.016" endtime="20201030 15:55:15.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.015" endtime="20201030 15:55:15.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.334" level="INFO">${RESULT} = [{'diff': 0.00012243099999999923}, {'diff': 0.00012124999999999983}, {'diff': 0.00012148600000000051}, {'diff': 0.00012137499999999996}, {'diff': 0.00012161100000000064}, {'diff': 0.000121917000000002...</msg>
<status status="PASS" starttime="20201030 15:55:15.329" endtime="20201030 15:55:15.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.339" level="INFO">${ACCURACY} = {'diff': [0.00012243099999999923, 0.00012124999999999983, 0.00012148600000000051, 0.00012137499999999996, 0.00012161100000000064, 0.00012191700000000263, 0.00012150000000000008, 0.00012154199999999879...</msg>
<status status="PASS" starttime="20201030 15:55:15.336" endtime="20201030 15:55:15.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.347" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.346" endtime="20201030 15:55:15.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.350" level="INFO">VALUE: [0.00012243099999999923, 0.00012124999999999983, 0.00012148600000000051, 0.00012137499999999996, 0.00012161100000000064, 0.00012191700000000263, 0.00012150000000000008, 0.00012154199999999879, 0.00012123600000000026, 0.00012154099999999932, 0.00012105599999999786, 0.00012197300000000091, 0.00012161100000000064, 0.0001218189999999987, 0.00012137499999999996, 0.0001211379999999998, 0.00012134800000000029, 0.00012175000000000033, 0.00012130499999999864, 0.00012169400000000205, 0.00012158299999999803, 0.00012191600000000316, 0.00012099999999999958, 0.00012170799999999815, 0.00012158299999999803, 0.00012199999999999711, 0.00012136100000000039, 0.00012137499999999996, 0.00012150000000000008, 0.00012186100000000089, 0.00012145800000000137, 0.00012198600000000101, 0.00012163899999999978, 0.00012106999999999743, 0.00012113899999999928, 0.00012137499999999996, 0.00012154200000000226, 0.00012123699999999973, 0.00012191699999999916, 0.00012124999999999983, 0.00012166699999999891, 0.00012137499999999996, 0.00012180599999999514, 0.00012134800000000029, 0.00012147199999999747, 0.0001213050000000021, 0.00012191699999999916, 0.00012181900000000218, 0.00012173600000000423, 0.000121083000000001]</msg>
<status status="PASS" starttime="20201030 15:55:15.348" endtime="20201030 15:55:15.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.343" endtime="20201030 15:55:15.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.355" endtime="20201030 15:55:15.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.354" endtime="20201030 15:55:15.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.353" endtime="20201030 15:55:15.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.976" endtime="20201030 15:55:15.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.976" endtime="20201030 15:55:15.376"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.385" endtime="20201030 15:55:15.405"></status>
</kw>
<msg timestamp="20201030 15:55:15.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.383" endtime="20201030 15:55:15.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.406" endtime="20201030 15:55:15.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.409" endtime="20201030 15:55:15.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.381" endtime="20201030 15:55:15.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.379" endtime="20201030 15:55:15.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.418" endtime="20201030 15:55:15.704"></status>
</kw>
<msg timestamp="20201030 15:55:15.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.416" endtime="20201030 15:55:15.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.708" endtime="20201030 15:55:15.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.716" endtime="20201030 15:55:15.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.414" endtime="20201030 15:55:15.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.412" endtime="20201030 15:55:15.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.722" level="INFO">${RESULT} = [{'diff': 0.00012287499999999799}, {'diff': 0.00012304100000000082}, {'diff': 0.00012258400000000197}, {'diff': 0.0001229160000000007}, {'diff': 0.00012229199999999954}, {'diff': 0.0001222500000000008...</msg>
<status status="PASS" starttime="20201030 15:55:15.719" endtime="20201030 15:55:15.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.727" level="INFO">${ACCURACY} = {'diff': [0.00012287499999999799, 0.00012304100000000082, 0.00012258400000000197, 0.0001229160000000007, 0.00012229199999999954, 0.00012225000000000083, 0.0001221120000000006, 0.0001220969999999981, 0...</msg>
<status status="PASS" starttime="20201030 15:55:15.723" endtime="20201030 15:55:15.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.732" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.731" endtime="20201030 15:55:15.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.734" level="INFO">VALUE: [0.00012287499999999799, 0.00012304100000000082, 0.00012258400000000197, 0.0001229160000000007, 0.00012229199999999954, 0.00012225000000000083, 0.0001221120000000006, 0.0001220969999999981, 0.00012265300000000035, 0.0001223189999999992, 0.00012256899999999946, 0.00012202799999999972, 0.00012205599999999886, 0.00012262499999999774, 0.00012256899999999946, 0.00012294500000000277, 0.00012255600000000283, 0.00012294399999999983, 0.00012261100000000164, 0.00012209700000000157, 0.00012297199999999897, 0.00012268099999999948, 0.00012255600000000283, 0.0001221120000000006, 0.0001222220000000017, 0.0001228480000000018, 0.00012206899999999896, 0.000122986000000002, 0.00012279200000000004, 0.00012219499999999855, 0.0001223059999999991, 0.00012298599999999854, 0.00012216599999999994, 0.00012252800000000022, 0.0001224160000000002, 0.0001222359999999978, 0.00012287500000000146, 0.00012290200000000112, 0.00012283399999999875, 0.00012291700000000017, 0.00012252799999999675, 0.00012266600000000044, 0.00012242999999999976, 0.00012270799999999915, 0.0001220969999999981, 0.00012297199999999897, 0.00012218099999999898, 0.0001225419999999998, 0.0001227359999999983, 0.00012205499999999939]</msg>
<status status="PASS" starttime="20201030 15:55:15.733" endtime="20201030 15:55:15.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.728" endtime="20201030 15:55:15.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.739" endtime="20201030 15:55:15.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.738" endtime="20201030 15:55:15.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.736" endtime="20201030 15:55:15.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.377" endtime="20201030 15:55:15.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.376" endtime="20201030 15:55:15.760"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.768" endtime="20201030 15:55:15.788"></status>
</kw>
<msg timestamp="20201030 15:55:15.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.767" endtime="20201030 15:55:15.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.790" endtime="20201030 15:55:15.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.792" endtime="20201030 15:55:15.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.764" endtime="20201030 15:55:15.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.762" endtime="20201030 15:55:15.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.801" endtime="20201030 15:55:16.088"></status>
</kw>
<msg timestamp="20201030 15:55:16.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.800" endtime="20201030 15:55:16.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.092" endtime="20201030 15:55:16.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.100" endtime="20201030 15:55:16.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.797" endtime="20201030 15:55:16.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.796" endtime="20201030 15:55:16.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.107" level="INFO">${RESULT} = [{'diff': 0.00012420900000000012}, {'diff': 0.0001237359999999993}, {'diff': 0.0001233060000000001}, {'diff': 0.00012337499999999849}, {'diff': 0.00012323600000000226}, {'diff': 0.0001230420000000003}...</msg>
<status status="PASS" starttime="20201030 15:55:16.104" endtime="20201030 15:55:16.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.111" level="INFO">${ACCURACY} = {'diff': [0.00012420900000000012, 0.0001237359999999993, 0.0001233060000000001, 0.00012337499999999849, 0.00012323600000000226, 0.0001230420000000003, 0.0001230420000000003, 0.00012384699999999985, 0....</msg>
<status status="PASS" starttime="20201030 15:55:16.108" endtime="20201030 15:55:16.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.115" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.114" endtime="20201030 15:55:16.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.118" level="INFO">VALUE: [0.00012420900000000012, 0.0001237359999999993, 0.0001233060000000001, 0.00012337499999999849, 0.00012323600000000226, 0.0001230420000000003, 0.0001230420000000003, 0.00012384699999999985, 0.00012336099999999892, 0.0001234999999999986, 0.0001237359999999993, 0.00012386099999999942, 0.00012308299999999953, 0.00012386099999999942, 0.0001234160000000012, 0.00012367999999999754, 0.00012343100000000023, 0.00012394400000000083, 0.00012366700000000092, 0.00012363900000000178, 0.00012338900000000153, 0.0001230420000000003, 0.00012393100000000074, 0.00012361099999999917, 0.00012361099999999917, 0.00012350000000000208, 0.00012302800000000072, 0.00012356900000000046, 0.0001238060000000006, 0.00012397299999999944, 0.00012343100000000023, 0.00012394499999999684, 0.0001237359999999993, 0.00012336099999999892, 0.00012325000000000183, 0.0001238190000000007, 0.0001231250000000017, 0.00012366599999999797, 0.0001239169999999977, 0.00012338899999999806, 0.00012397199999999997, 0.00012374999999999886, 0.00012311100000000214, 0.00012327800000000097, 0.00012336099999999892, 0.0001234579999999999, 0.00012355600000000036, 0.0001239999999999991, 0.0001236389999999983, 0.0001234999999999986]</msg>
<status status="PASS" starttime="20201030 15:55:16.116" endtime="20201030 15:55:16.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.112" endtime="20201030 15:55:16.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.123" endtime="20201030 15:55:16.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.121" endtime="20201030 15:55:16.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.120" endtime="20201030 15:55:16.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.761" endtime="20201030 15:55:16.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.760" endtime="20201030 15:55:16.143"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.152" endtime="20201030 15:55:16.173"></status>
</kw>
<msg timestamp="20201030 15:55:16.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.151" endtime="20201030 15:55:16.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.175" endtime="20201030 15:55:16.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.177" endtime="20201030 15:55:16.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.148" endtime="20201030 15:55:16.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.146" endtime="20201030 15:55:16.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.186" endtime="20201030 15:55:16.472"></status>
</kw>
<msg timestamp="20201030 15:55:16.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:16.185" endtime="20201030 15:55:16.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:16.476" endtime="20201030 15:55:16.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.484" endtime="20201030 15:55:16.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.182" endtime="20201030 15:55:16.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.180" endtime="20201030 15:55:16.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.491" level="INFO">${RESULT} = [{'diff': 0.00012541700000000267}, {'diff': 0.0001247360000000003}, {'diff': 0.00012486100000000042}, {'diff': 0.00012416699999999795}, {'diff': 0.000124777999999999}, {'diff': 0.000124777999999999}, ...</msg>
<status status="PASS" starttime="20201030 15:55:16.488" endtime="20201030 15:55:16.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.495" level="INFO">${ACCURACY} = {'diff': [0.00012541700000000267, 0.0001247360000000003, 0.00012486100000000042, 0.00012416699999999795, 0.000124777999999999, 0.000124777999999999, 0.0001249169999999987, 0.0001241939999999976, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:16.492" endtime="20201030 15:55:16.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.499" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.498" endtime="20201030 15:55:16.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.501" level="INFO">VALUE: [0.00012541700000000267, 0.0001247360000000003, 0.00012486100000000042, 0.00012416699999999795, 0.000124777999999999, 0.000124777999999999, 0.0001249169999999987, 0.0001241939999999976, 0.0001249719999999975, 0.00012447200000000047, 0.0001242640000000024, 0.00012412499999999924, 0.0001240970000000001, 0.00012408300000000053, 0.00012434799999999982, 0.0001240970000000001, 0.00012443000000000176, 0.00012427800000000197, 0.00012487499999999999, 0.00012424999999999936, 0.00012452800000000222, 0.00012479100000000257, 0.00012434700000000035, 0.0001240420000000013, 0.00012498600000000054, 0.00012441599999999872, 0.00012491599999999922, 0.00012477699999999953, 0.00012404099999999835, 0.00012477699999999953, 0.00012470800000000115, 0.00012459800000000007, 0.0001240970000000001, 0.00012484699999999738, 0.00012486200000000336, 0.00012447200000000047, 0.00012497300000000044, 0.00012465299999999888, 0.00012483300000000128, 0.00012462499999999974, 0.0001248190000000017, 0.00012422200000000022, 0.0001249580000000014, 0.00012484700000000085, 0.00012466700000000192, 0.00012434700000000035, 0.00012409799999999957, 0.0001245420000000018, 0.00012429199999999807, 0.00012416699999999795]</msg>
<status status="PASS" starttime="20201030 15:55:16.500" endtime="20201030 15:55:16.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.495" endtime="20201030 15:55:16.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.507" endtime="20201030 15:55:16.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.506" endtime="20201030 15:55:16.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.505" endtime="20201030 15:55:16.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.144" endtime="20201030 15:55:16.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.144" endtime="20201030 15:55:16.528"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.537" endtime="20201030 15:55:16.557"></status>
</kw>
<msg timestamp="20201030 15:55:16.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.535" endtime="20201030 15:55:16.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.558" endtime="20201030 15:55:16.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.561" endtime="20201030 15:55:16.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.533" endtime="20201030 15:55:16.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.530" endtime="20201030 15:55:16.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.570" endtime="20201030 15:55:16.855"></status>
</kw>
<msg timestamp="20201030 15:55:16.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.568" endtime="20201030 15:55:16.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.859" endtime="20201030 15:55:16.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.867" endtime="20201030 15:55:16.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.566" endtime="20201030 15:55:16.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.564" endtime="20201030 15:55:16.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.873" level="INFO">${RESULT} = [{'diff': 0.00012599999999999764}, {'diff': 0.0001254450000000018}, {'diff': 0.00012540200000000015}, {'diff': 0.00012530499999999917}, {'diff': 0.0001257499999999974}, {'diff': 0.00012541599999999972...</msg>
<status status="PASS" starttime="20201030 15:55:16.870" endtime="20201030 15:55:16.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.878" level="INFO">${ACCURACY} = {'diff': [0.00012599999999999764, 0.0001254450000000018, 0.00012540200000000015, 0.00012530499999999917, 0.0001257499999999974, 0.00012541599999999972, 0.00012544399999999886, 0.00012575000000000086, ...</msg>
<status status="PASS" starttime="20201030 15:55:16.874" endtime="20201030 15:55:16.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.883" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.882" endtime="20201030 15:55:16.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.885" level="INFO">VALUE: [0.00012599999999999764, 0.0001254450000000018, 0.00012540200000000015, 0.00012530499999999917, 0.0001257499999999974, 0.00012541599999999972, 0.00012544399999999886, 0.00012575000000000086, 0.00012516700000000242, 0.00012573599999999782, 0.00012594499999999884, 0.0001254580000000019, 0.00012570799999999868, 0.00012572200000000172, 0.00012512500000000024, 0.00012561200000000064, 0.00012594400000000283, 0.00012580599999999914, 0.00012530499999999917, 0.0001254299999999993, 0.00012552799999999975, 0.00012583300000000228, 0.00012601400000000068, 0.0001254169999999992, 0.0001254450000000018, 0.00012530499999999917, 0.00012516699999999895, 0.00012515299999999938, 0.00012552799999999975, 0.00012591600000000022, 0.00012533399999999778, 0.00012598600000000154, 0.00012586100000000142, 0.0001252360000000008, 0.00012530599999999864, 0.00012544399999999886, 0.00012518100000000199, 0.00012541700000000267, 0.00012599999999999764, 0.00012562500000000074, 0.00012573599999999782, 0.00012516599999999947, 0.00012548600000000104, 0.00012595799999999893, 0.00012569500000000206, 0.00012530599999999864, 0.0001258060000000026, 0.00012591600000000022, 0.0001255000000000006, 0.00012562500000000074]</msg>
<status status="PASS" starttime="20201030 15:55:16.884" endtime="20201030 15:55:16.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.879" endtime="20201030 15:55:16.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.890" endtime="20201030 15:55:16.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.888" endtime="20201030 15:55:16.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.887" endtime="20201030 15:55:16.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.529" endtime="20201030 15:55:16.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.528" endtime="20201030 15:55:16.911"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.919" endtime="20201030 15:55:16.940"></status>
</kw>
<msg timestamp="20201030 15:55:16.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.918" endtime="20201030 15:55:16.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.941" endtime="20201030 15:55:16.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.944" endtime="20201030 15:55:16.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.915" endtime="20201030 15:55:16.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.913" endtime="20201030 15:55:16.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.952" endtime="20201030 15:55:17.239"></status>
</kw>
<msg timestamp="20201030 15:55:17.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021574889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.951" endtime="20201030 15:55:17.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021574889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.244" endtime="20201030 15:55:17.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.252" endtime="20201030 15:55:17.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.948" endtime="20201030 15:55:17.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.947" endtime="20201030 15:55:17.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.258" level="INFO">${RESULT} = [{'diff': 0.00012709699999999963}, {'diff': 0.0001264300000000003}, {'diff': 0.0001265139999999977}, {'diff': 0.00012629200000000007}, {'diff': 0.00012672200000000272}, {'diff': 0.0001268329999999998}...</msg>
<status status="PASS" starttime="20201030 15:55:17.255" endtime="20201030 15:55:17.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.262" level="INFO">${ACCURACY} = {'diff': [0.00012709699999999963, 0.0001264300000000003, 0.0001265139999999977, 0.00012629200000000007, 0.00012672200000000272, 0.0001268329999999998, 0.00012602700000000078, 0.0001269170000000007, 0....</msg>
<status status="PASS" starttime="20201030 15:55:17.259" endtime="20201030 15:55:17.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.266" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.265" endtime="20201030 15:55:17.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.269" level="INFO">VALUE: [0.00012709699999999963, 0.0001264300000000003, 0.0001265139999999977, 0.00012629200000000007, 0.00012672200000000272, 0.0001268329999999998, 0.00012602700000000078, 0.0001269170000000007, 0.00012648600000000204, 0.00012640200000000115, 0.0001264300000000003, 0.0001266529999999974, 0.00012645900000000238, 0.00012602800000000025, 0.00012608399999999853, 0.00012616699999999995, 0.00012658399999999903, 0.0001266520000000014, 0.0001261390000000008, 0.00012644399999999986, 0.00012640200000000115, 0.00012680500000000067, 0.0001262360000000018, 0.00012679200000000057, 0.00012622199999999875, 0.00012668000000000054, 0.00012665199999999793, 0.0001266520000000014, 0.00012690300000000113, 0.00012629099999999713, 0.000126778000000001, 0.0001266529999999974, 0.00012684699999999938, 0.0001263329999999993, 0.00012616600000000047, 0.00012659699999999913, 0.00012672199999999925, 0.00012634799999999835, 0.00012644499999999934, 0.00012679200000000057, 0.0001268329999999998, 0.00012618000000000004, 0.0001265130000000017, 0.0001264170000000002, 0.00012654200000000032, 0.00012668100000000002, 0.0001262780000000005, 0.00012618099999999952, 0.0001265559999999999, 0.00012676400000000143]</msg>
<status status="PASS" starttime="20201030 15:55:17.267" endtime="20201030 15:55:17.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.263" endtime="20201030 15:55:17.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.274" endtime="20201030 15:55:17.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.272" endtime="20201030 15:55:17.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.271" endtime="20201030 15:55:17.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.912" endtime="20201030 15:55:17.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.911" endtime="20201030 15:55:17.295"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.303" endtime="20201030 15:55:17.324"></status>
</kw>
<msg timestamp="20201030 15:55:17.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.302" endtime="20201030 15:55:17.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.326" endtime="20201030 15:55:17.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.329" endtime="20201030 15:55:17.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.299" endtime="20201030 15:55:17.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.297" endtime="20201030 15:55:17.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.339" endtime="20201030 15:55:17.625"></status>
</kw>
<msg timestamp="20201030 15:55:17.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.338" endtime="20201030 15:55:17.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.630" endtime="20201030 15:55:17.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.638" endtime="20201030 15:55:17.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.335" endtime="20201030 15:55:17.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.333" endtime="20201030 15:55:17.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.644" level="INFO">${RESULT} = [{'diff': 0.000128472000000001}, {'diff': 0.00012755500000000142}, {'diff': 0.00012776400000000243}, {'diff': 0.0001278330000000008}, {'diff': 0.0001278879999999996}, {'diff': 0.00012757000000000046},...</msg>
<status status="PASS" starttime="20201030 15:55:17.641" endtime="20201030 15:55:17.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.648" level="INFO">${ACCURACY} = {'diff': [0.000128472000000001, 0.00012755500000000142, 0.00012776400000000243, 0.0001278330000000008, 0.0001278879999999996, 0.00012757000000000046, 0.00012787500000000299, 0.00012702799999999778, 0....</msg>
<status status="PASS" starttime="20201030 15:55:17.645" endtime="20201030 15:55:17.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.653" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.652" endtime="20201030 15:55:17.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.655" level="INFO">VALUE: [0.000128472000000001, 0.00012755500000000142, 0.00012776400000000243, 0.0001278330000000008, 0.0001278879999999996, 0.00012757000000000046, 0.00012787500000000299, 0.00012702799999999778, 0.00012799999999999964, 0.0001276390000000023, 0.00012731900000000074, 0.00012738900000000206, 0.00012766699999999798, 0.0001270560000000004, 0.00012773599999999982, 0.00012779099999999863, 0.00012709699999999963, 0.0001278889999999991, 0.00012788900000000256, 0.00012715300000000138, 0.00012704100000000135, 0.0001274170000000012, 0.00012749999999999914, 0.000127569000000001, 0.00012701400000000168, 0.00012720800000000018, 0.0001274170000000012, 0.0001274439999999974, 0.00012737499999999902, 0.00012737500000000249, 0.00012762499999999927, 0.0001271390000000018, 0.00012716600000000147, 0.00012751299999999924, 0.00012745800000000043, 0.00012781900000000124, 0.00012770800000000068, 0.00012763899999999884, 0.00012709699999999963, 0.00012766699999999798, 0.0001275139999999987, 0.00012779200000000157, 0.00012784700000000038, 0.00012740300000000163, 0.00012758400000000003, 0.00012761100000000317, 0.0001276109999999997, 0.0001273889999999986, 0.00012722199999999975, 0.00012779200000000157]</msg>
<status status="PASS" starttime="20201030 15:55:17.654" endtime="20201030 15:55:17.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.649" endtime="20201030 15:55:17.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.661" endtime="20201030 15:55:17.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.659" endtime="20201030 15:55:17.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.658" endtime="20201030 15:55:17.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.295" endtime="20201030 15:55:17.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.295" endtime="20201030 15:55:17.682"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.690" endtime="20201030 15:55:17.711"></status>
</kw>
<msg timestamp="20201030 15:55:17.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.689" endtime="20201030 15:55:17.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.712" endtime="20201030 15:55:17.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.715" endtime="20201030 15:55:17.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.686" endtime="20201030 15:55:17.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.684" endtime="20201030 15:55:17.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.724" endtime="20201030 15:55:18.009"></status>
</kw>
<msg timestamp="20201030 15:55:18.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.722" endtime="20201030 15:55:18.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.013" endtime="20201030 15:55:18.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.021" endtime="20201030 15:55:18.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.719" endtime="20201030 15:55:18.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.718" endtime="20201030 15:55:18.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.027" level="INFO">${RESULT} = [{'diff': 0.00012886099999999748}, {'diff': 0.00012834700000000088}, {'diff': 0.00012890300000000313}, {'diff': 0.0001287079999999982}, {'diff': 0.00012823600000000032}, {'diff': 0.0001285000000000001...</msg>
<status status="PASS" starttime="20201030 15:55:18.024" endtime="20201030 15:55:18.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.032" level="INFO">${ACCURACY} = {'diff': [0.00012886099999999748, 0.00012834700000000088, 0.00012890300000000313, 0.0001287079999999982, 0.00012823600000000032, 0.00012850000000000014, 0.000128165999999999, 0.00012822300000000023, 0...</msg>
<status status="PASS" starttime="20201030 15:55:18.028" endtime="20201030 15:55:18.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.036" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.035" endtime="20201030 15:55:18.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.039" level="INFO">VALUE: [0.00012886099999999748, 0.00012834700000000088, 0.00012890300000000313, 0.0001287079999999982, 0.00012823600000000032, 0.00012850000000000014, 0.000128165999999999, 0.00012822300000000023, 0.00012876399999999996, 0.00012808400000000053, 0.00012816699999999848, 0.00012884800000000085, 0.0001286110000000007, 0.00012852799999999928, 0.00012884700000000138, 0.00012841699999999873, 0.0001289720000000015, 0.00012884700000000138, 0.00012873600000000082, 0.00012854199999999885, 0.0001284170000000022, 0.00012873600000000082, 0.00012852800000000275, 0.00012831899999999827, 0.00012873599999999735, 0.00012870899999999769, 0.00012873600000000082, 0.0001287500000000004, 0.000128472000000001, 0.00012827799999999903, 0.000128165999999999, 0.00012826399999999946, 0.00012872299999999726, 0.0001285829999999981, 0.00012886100000000095, 0.0001286529999999994, 0.00012833400000000078, 0.00012822199999999728, 0.00012869399999999864, 0.00012858399999999756, 0.00012855500000000242, 0.00012858300000000156, 0.00012808400000000053, 0.00012887500000000052, 0.0001280690000000015, 0.00012881999999999824, 0.00012815300000000238, 0.00012887499999999705, 0.00012881999999999824, 0.00012852799999999928]</msg>
<status status="PASS" starttime="20201030 15:55:18.038" endtime="20201030 15:55:18.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.033" endtime="20201030 15:55:18.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.044" endtime="20201030 15:55:18.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.042" endtime="20201030 15:55:18.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.041" endtime="20201030 15:55:18.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.682" endtime="20201030 15:55:18.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.682" endtime="20201030 15:55:18.065"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.073" endtime="20201030 15:55:18.093"></status>
</kw>
<msg timestamp="20201030 15:55:18.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.072" endtime="20201030 15:55:18.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.095" endtime="20201030 15:55:18.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.097" endtime="20201030 15:55:18.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.069" endtime="20201030 15:55:18.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.067" endtime="20201030 15:55:18.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.106" endtime="20201030 15:55:18.393"></status>
</kw>
<msg timestamp="20201030 15:55:18.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.105" endtime="20201030 15:55:18.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.397" endtime="20201030 15:55:18.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.406" endtime="20201030 15:55:18.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.102" endtime="20201030 15:55:18.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.101" endtime="20201030 15:55:18.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.412" level="INFO">${RESULT} = [{'diff': 0.0001296660000000005}, {'diff': 0.00012908300000000206}, {'diff': 0.00012958400000000203}, {'diff': 0.00012954199999999985}, {'diff': 0.00012936099999999798}, {'diff': 0.0001299590000000024...</msg>
<status status="PASS" starttime="20201030 15:55:18.409" endtime="20201030 15:55:18.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.416" level="INFO">${ACCURACY} = {'diff': [0.0001296660000000005, 0.00012908300000000206, 0.00012958400000000203, 0.00012954199999999985, 0.00012936099999999798, 0.0001299590000000024, 0.0001291110000000012, 0.00012923599999999785, 0...</msg>
<status status="PASS" starttime="20201030 15:55:18.413" endtime="20201030 15:55:18.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.420" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.419" endtime="20201030 15:55:18.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.423" level="INFO">VALUE: [0.0001296660000000005, 0.00012908300000000206, 0.00012958400000000203, 0.00012954199999999985, 0.00012936099999999798, 0.0001299590000000024, 0.0001291110000000012, 0.00012923599999999785, 0.0001297639999999975, 0.000129472999999998, 0.0001295140000000007, 0.00012991600000000075, 0.00012973599999999835, 0.0001297089999999987, 0.0001298330000000028, 0.000129569999999999, 0.00012923599999999785, 0.00012983299999999934, 0.00012941699999999973, 0.00012991700000000023, 0.00012938899999999712, 0.00012959799999999813, 0.00012986100000000195, 0.00012997199999999903, 0.0001297079999999992, 0.00012904200000000282, 0.0001293339999999983, 0.0001292769999999971, 0.00012958400000000203, 0.0001297639999999975, 0.00012991600000000075, 0.00012995899999999894, 0.00012929100000000013, 0.00012972200000000225, 0.0001296660000000005, 0.00012972199999999878, 0.00012954199999999985, 0.00012995799999999946, 0.0001295270000000008, 0.00012922199999999828, 0.00012948600000000157, 0.00012922299999999776, 0.00012927800000000003, 0.00012908400000000153, 0.00012920800000000218, 0.00012950000000000114, 0.0001294439999999994, 0.00012934800000000135, 0.00012966699999999998, 0.00012920800000000218]</msg>
<status status="PASS" starttime="20201030 15:55:18.422" endtime="20201030 15:55:18.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.417" endtime="20201030 15:55:18.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.428" endtime="20201030 15:55:18.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.426" endtime="20201030 15:55:18.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.425" endtime="20201030 15:55:18.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.065" endtime="20201030 15:55:18.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.065" endtime="20201030 15:55:18.449"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.457" endtime="20201030 15:55:18.481"></status>
</kw>
<msg timestamp="20201030 15:55:18.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.456" endtime="20201030 15:55:18.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.483" endtime="20201030 15:55:18.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.485" endtime="20201030 15:55:18.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.453" endtime="20201030 15:55:18.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.451" endtime="20201030 15:55:18.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.494" endtime="20201030 15:55:18.779"></status>
</kw>
<msg timestamp="20201030 15:55:18.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.493" endtime="20201030 15:55:18.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.784" endtime="20201030 15:55:18.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.792" endtime="20201030 15:55:18.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.490" endtime="20201030 15:55:18.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.488" endtime="20201030 15:55:18.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.798" level="INFO">${RESULT} = [{'diff': 0.0001310140000000022}, {'diff': 0.0001301530000000009}, {'diff': 0.00013088899999999862}, {'diff': 0.00013038899999999812}, {'diff': 0.00013077700000000206}, {'diff': 0.00013033400000000278...</msg>
<status status="PASS" starttime="20201030 15:55:18.795" endtime="20201030 15:55:18.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.802" level="INFO">${ACCURACY} = {'diff': [0.0001310140000000022, 0.0001301530000000009, 0.00013088899999999862, 0.00013038899999999812, 0.00013077700000000206, 0.00013033400000000278, 0.0001308339999999998, 0.00013073599999999935, 0...</msg>
<status status="PASS" starttime="20201030 15:55:18.799" endtime="20201030 15:55:18.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.806" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.805" endtime="20201030 15:55:18.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.809" level="INFO">VALUE: [0.0001310140000000022, 0.0001301530000000009, 0.00013088899999999862, 0.00013038899999999812, 0.00013077700000000206, 0.00013033400000000278, 0.0001308339999999998, 0.00013073599999999935, 0.0001304440000000004, 0.00013005499999999698, 0.00013019400000000014, 0.0001300699999999995, 0.00013088899999999862, 0.00013065299999999794, 0.00013093000000000132, 0.0001301530000000009, 0.0001309029999999982, 0.0001304440000000004, 0.00012997300000000198, 0.00013013900000000134, 0.0001301110000000022, 0.00013065299999999794, 0.0001309440000000009, 0.00013084799999999938, 0.0001305140000000017, 0.00013049999999999867, 0.00013097200000000003, 0.00013026400000000146, 0.00013077800000000153, 0.00013077799999999806, 0.00013031999999999974, 0.00013024999999999842, 0.00013038899999999812, 0.00013056900000000052, 0.00013087499999999905, 0.00013038899999999812, 0.00013024999999999842, 0.00013022199999999928, 0.00013034800000000235, 0.0001302079999999997, 0.00013013900000000134, 0.0001302079999999997, 0.00013012499999999483, 0.0001308880000000026, 0.0001303200000000032, 0.00013029199999999713, 0.0001307639999999985, 0.00013081900000000424, 0.00013002800000000425, 0.00013065299999999447]</msg>
<status status="PASS" starttime="20201030 15:55:18.807" endtime="20201030 15:55:18.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.803" endtime="20201030 15:55:18.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.815" endtime="20201030 15:55:18.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.813" endtime="20201030 15:55:18.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.812" endtime="20201030 15:55:18.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.449" endtime="20201030 15:55:18.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.449" endtime="20201030 15:55:18.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.334" endtime="20201030 15:55:18.835"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:40.267" endtime="20201030 15:55:18.836" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.843" endtime="20201030 15:55:18.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.841" endtime="20201030 15:55:18.863"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.876" endtime="20201030 15:55:18.888"></status>
</kw>
<msg timestamp="20201030 15:55:18.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.874" endtime="20201030 15:55:18.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.889" endtime="20201030 15:55:18.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.894" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:18.892" endtime="20201030 15:55:18.894"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.871" endtime="20201030 15:55:18.895"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.869" endtime="20201030 15:55:18.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.868" endtime="20201030 15:55:18.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:18.899" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:18.898" endtime="20201030 15:55:18.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.896" endtime="20201030 15:55:18.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.867" endtime="20201030 15:55:18.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.866" endtime="20201030 15:55:18.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.901" endtime="20201030 15:55:18.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.865" endtime="20201030 15:55:18.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.863" endtime="20201030 15:55:18.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.840" endtime="20201030 15:55:18.904"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.914" endtime="20201030 15:55:18.931"></status>
</kw>
<msg timestamp="20201030 15:55:18.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.913" endtime="20201030 15:55:18.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.932" endtime="20201030 15:55:18.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.935" endtime="20201030 15:55:18.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.909" endtime="20201030 15:55:18.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.907" endtime="20201030 15:55:18.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.944" endtime="20201030 15:55:19.230"></status>
</kw>
<msg timestamp="20201030 15:55:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063657833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063733722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.943" endtime="20201030 15:55:19.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063657833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063733722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.235" endtime="20201030 15:55:19.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.243" endtime="20201030 15:55:19.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.940" endtime="20201030 15:55:19.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.938" endtime="20201030 15:55:19.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.249" level="INFO">${RESULT} = [{'diff': 7.588900000000953e-05}, {'diff': 7.499999999999174e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.501299999999878e-05}, {'diff': 7.502799999999088e-05}, {'diff': 7.501399999999825e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:19.246" endtime="20201030 15:55:19.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.253" level="INFO">${ACCURACY} = {'diff': [7.588900000000953e-05, 7.499999999999174e-05, 7.501399999999825e-05, 7.501299999999878e-05, 7.502799999999088e-05, 7.501399999999825e-05, 7.504199999999739e-05, 7.502800000000476e-05, 7.5000...</msg>
<status status="PASS" starttime="20201030 15:55:19.250" endtime="20201030 15:55:19.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.259" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.258" endtime="20201030 15:55:19.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.261" level="INFO">VALUE: [7.588900000000953e-05, 7.499999999999174e-05, 7.501399999999825e-05, 7.501299999999878e-05, 7.502799999999088e-05, 7.501399999999825e-05, 7.504199999999739e-05, 7.502800000000476e-05, 7.500000000000562e-05, 7.504199999999739e-05, 7.498599999999911e-05, 7.501299999999878e-05, 7.501399999999825e-05, 7.500000000000562e-05, 7.498600000001299e-05, 7.502700000000528e-05, 7.501400000001213e-05, 7.501399999999825e-05, 7.502800000000476e-05, 7.502700000000528e-05, 7.505499999999055e-05, 7.500000000000562e-05, 7.501400000001213e-05, 7.506899999999705e-05, 7.504199999999739e-05, 7.498599999999911e-05, 7.501399999999825e-05, 7.501299999999878e-05, 7.501399999999825e-05, 7.502799999999088e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.494499999999293e-05, 7.502700000000528e-05, 7.504199999999739e-05, 7.504199999999739e-05, 7.50269999999914e-05, 7.499999999999174e-05, 7.502800000000476e-05, 7.502800000000476e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.502799999999088e-05, 7.502800000000476e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.260" endtime="20201030 15:55:19.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.254" endtime="20201030 15:55:19.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.266" endtime="20201030 15:55:19.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.264" endtime="20201030 15:55:19.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.263" endtime="20201030 15:55:19.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.905" endtime="20201030 15:55:19.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.905" endtime="20201030 15:55:19.286"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.295" endtime="20201030 15:55:19.312"></status>
</kw>
<msg timestamp="20201030 15:55:19.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.294" endtime="20201030 15:55:19.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.314" endtime="20201030 15:55:19.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.316" endtime="20201030 15:55:19.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.291" endtime="20201030 15:55:19.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.289" endtime="20201030 15:55:19.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.325" endtime="20201030 15:55:19.611"></status>
</kw>
<msg timestamp="20201030 15:55:19.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.323" endtime="20201030 15:55:19.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.615" endtime="20201030 15:55:19.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.624" endtime="20201030 15:55:19.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.321" endtime="20201030 15:55:19.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.319" endtime="20201030 15:55:19.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.630" level="INFO">${RESULT} = [{'diff': 7.601399999999925e-05}, {'diff': 7.502800000000129e-05}, {'diff': 7.502799999999782e-05}, {'diff': 7.504099999999791e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.498599999999911e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:19.627" endtime="20201030 15:55:19.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.635" level="INFO">${ACCURACY} = {'diff': [7.601399999999925e-05, 7.502800000000129e-05, 7.502799999999782e-05, 7.504099999999791e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.502799999999782e-05, 7.495799999999997e-05, 7.5096...</msg>
<status status="PASS" starttime="20201030 15:55:19.631" endtime="20201030 15:55:19.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.640" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.639" endtime="20201030 15:55:19.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.642" level="INFO">VALUE: [7.601399999999925e-05, 7.502800000000129e-05, 7.502799999999782e-05, 7.504099999999791e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.502799999999782e-05, 7.495799999999997e-05, 7.509699999999966e-05, 7.495799999999997e-05, 7.502799999999782e-05, 7.501300000000224e-05, 7.504200000000086e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.502699999999835e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.502800000000129e-05, 7.498600000000258e-05, 7.502800000000129e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.504200000000086e-05, 7.501399999999825e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.505500000000095e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.504200000000086e-05, 7.500000000000215e-05, 7.504099999999791e-05, 7.505500000000095e-05, 7.502699999999835e-05, 7.499999999999868e-05, 7.506899999999705e-05, 7.498599999999911e-05, 7.49440000000004e-05, 7.50830000000001e-05, 7.501299999999878e-05, 7.498600000000258e-05, 7.500000000000215e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.641" endtime="20201030 15:55:19.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.636" endtime="20201030 15:55:19.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.647" endtime="20201030 15:55:19.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.645" endtime="20201030 15:55:19.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.644" endtime="20201030 15:55:19.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.287" endtime="20201030 15:55:19.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.287" endtime="20201030 15:55:19.667"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.680" endtime="20201030 15:55:19.697"></status>
</kw>
<msg timestamp="20201030 15:55:19.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.679" endtime="20201030 15:55:19.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.699" endtime="20201030 15:55:19.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.701" endtime="20201030 15:55:19.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.676" endtime="20201030 15:55:19.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.670" endtime="20201030 15:55:19.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.710" endtime="20201030 15:55:19.997"></status>
</kw>
<msg timestamp="20201030 15:55:20.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025888222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025964153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.709" endtime="20201030 15:55:20.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025888222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025964153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.001" endtime="20201030 15:55:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.010" endtime="20201030 15:55:20.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.706" endtime="20201030 15:55:20.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.704" endtime="20201030 15:55:20.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.016" level="INFO">${RESULT} = [{'diff': 7.59310000000013e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.502800000000129e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.501400000000172e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:20.013" endtime="20201030 15:55:20.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.020" level="INFO">${ACCURACY} = {'diff': [7.59310000000013e-05, 7.501399999999825e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.500000000000215e-05, 7.507e-05, 7.501399999999825e-...</msg>
<status status="PASS" starttime="20201030 15:55:20.017" endtime="20201030 15:55:20.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.025" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.024" endtime="20201030 15:55:20.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.027" level="INFO">VALUE: [7.59310000000013e-05, 7.501399999999825e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.500000000000215e-05, 7.507e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.502800000000129e-05, 7.494399999999693e-05, 7.502699999999835e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.502699999999835e-05, 7.501300000000224e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.505500000000095e-05, 7.507e-05, 7.502799999999782e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.507e-05, 7.501399999999825e-05, 7.495799999999997e-05, 7.501400000000172e-05, 7.504200000000086e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.502800000000129e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.500000000000215e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.026" endtime="20201030 15:55:20.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.021" endtime="20201030 15:55:20.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.032" endtime="20201030 15:55:20.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.030" endtime="20201030 15:55:20.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.029" endtime="20201030 15:55:20.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.668" endtime="20201030 15:55:20.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.668" endtime="20201030 15:55:20.053"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.062" endtime="20201030 15:55:20.079"></status>
</kw>
<msg timestamp="20201030 15:55:20.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.060" endtime="20201030 15:55:20.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.081" endtime="20201030 15:55:20.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.083" endtime="20201030 15:55:20.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.057" endtime="20201030 15:55:20.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.055" endtime="20201030 15:55:20.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.092" endtime="20201030 15:55:20.377"></status>
</kw>
<msg timestamp="20201030 15:55:20.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023075042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.090" endtime="20201030 15:55:20.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023075042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.382" endtime="20201030 15:55:20.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.390" endtime="20201030 15:55:20.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.088" endtime="20201030 15:55:20.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.086" endtime="20201030 15:55:20.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.397" level="INFO">${RESULT} = [{'diff': 7.584700000000041e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.500000000000215e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:20.393" endtime="20201030 15:55:20.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.401" level="INFO">${ACCURACY} = {'diff': [7.584700000000041e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.492999999999736e-05, 7.5013...</msg>
<status status="PASS" starttime="20201030 15:55:20.398" endtime="20201030 15:55:20.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.406" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.405" endtime="20201030 15:55:20.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.409" level="INFO">VALUE: [7.584700000000041e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.492999999999736e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.500000000000215e-05, 7.502799999999782e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.501300000000224e-05, 7.501399999999825e-05, 7.502800000000129e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.505600000000043e-05, 7.505499999999748e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.502699999999835e-05, 7.498700000000205e-05, 7.501399999999825e-05, 7.497200000000301e-05, 7.498599999999911e-05, 7.502799999999782e-05, 7.498599999999911e-05, 7.49440000000004e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.504200000000086e-05, 7.502800000000129e-05, 7.502800000000129e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.501400000000172e-05, 7.501399999999825e-05, 7.495899999999944e-05, 7.501400000000172e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.407" endtime="20201030 15:55:20.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.402" endtime="20201030 15:55:20.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.415" endtime="20201030 15:55:20.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.414" endtime="20201030 15:55:20.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.412" endtime="20201030 15:55:20.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.054" endtime="20201030 15:55:20.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.053" endtime="20201030 15:55:20.436"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.445" endtime="20201030 15:55:20.461"></status>
</kw>
<msg timestamp="20201030 15:55:20.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.443" endtime="20201030 15:55:20.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.463" endtime="20201030 15:55:20.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.465" endtime="20201030 15:55:20.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.440" endtime="20201030 15:55:20.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.438" endtime="20201030 15:55:20.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.474" endtime="20201030 15:55:20.759"></status>
</kw>
<msg timestamp="20201030 15:55:20.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.473" endtime="20201030 15:55:20.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.764" endtime="20201030 15:55:20.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.772" endtime="20201030 15:55:20.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.470" endtime="20201030 15:55:20.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.468" endtime="20201030 15:55:20.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.778" level="INFO">${RESULT} = [{'diff': 7.59440000000014e-05}, {'diff': 7.500000000000215e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.501400000000172e-05}, {'diff': 7.501399999999825e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:20.775" endtime="20201030 15:55:20.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.783" level="INFO">${ACCURACY} = {'diff': [7.59440000000014e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.49719...</msg>
<status status="PASS" starttime="20201030 15:55:20.779" endtime="20201030 15:55:20.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.788" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.787" endtime="20201030 15:55:20.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.790" level="INFO">VALUE: [7.59440000000014e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.497199999999954e-05, 7.499999999999868e-05, 7.497199999999954e-05, 7.501299999999878e-05, 7.501299999999878e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.501300000000224e-05, 7.502800000000129e-05, 7.497199999999954e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.502699999999835e-05, 7.501400000000172e-05, 7.498600000000258e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.501400000000172e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.501299999999878e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.504199999999739e-05, 7.49310000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.789" endtime="20201030 15:55:20.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.784" endtime="20201030 15:55:20.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.795" endtime="20201030 15:55:20.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.794" endtime="20201030 15:55:20.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.793" endtime="20201030 15:55:20.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.437" endtime="20201030 15:55:20.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.436" endtime="20201030 15:55:20.816"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.825" endtime="20201030 15:55:20.841"></status>
</kw>
<msg timestamp="20201030 15:55:20.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.823" endtime="20201030 15:55:20.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.843" endtime="20201030 15:55:20.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.845" endtime="20201030 15:55:20.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.821" endtime="20201030 15:55:20.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.818" endtime="20201030 15:55:20.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.854" endtime="20201030 15:55:21.139"></status>
</kw>
<msg timestamp="20201030 15:55:21.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.853" endtime="20201030 15:55:21.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.144" endtime="20201030 15:55:21.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.152" endtime="20201030 15:55:21.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.850" endtime="20201030 15:55:21.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.848" endtime="20201030 15:55:21.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.158" level="INFO">${RESULT} = [{'diff': 7.59440000000014e-05}, {'diff': 7.502800000000129e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.502800000000129e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.501400000000172e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:21.155" endtime="20201030 15:55:21.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.163" level="INFO">${ACCURACY} = {'diff': [7.59440000000014e-05, 7.502800000000129e-05, 7.497199999999954e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.50280...</msg>
<status status="PASS" starttime="20201030 15:55:21.159" endtime="20201030 15:55:21.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.167" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.166" endtime="20201030 15:55:21.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.169" level="INFO">VALUE: [7.59440000000014e-05, 7.502800000000129e-05, 7.497199999999954e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.502800000000129e-05, 7.498599999999911e-05, 7.501399999999825e-05, 7.506900000000052e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.502800000000129e-05, 7.504200000000086e-05, 7.502799999999782e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.501400000000172e-05, 7.502699999999835e-05, 7.501399999999825e-05, 7.498699999999858e-05, 7.49440000000004e-05, 7.497199999999954e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.50830000000001e-05, 7.504100000000138e-05, 7.500000000000215e-05, 7.498600000000258e-05, 7.501400000000172e-05, 7.501400000000172e-05, 7.501299999999878e-05, 7.498599999999911e-05, 7.493000000000083e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.506900000000052e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.502699999999835e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.501299999999878e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.168" endtime="20201030 15:55:21.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.163" endtime="20201030 15:55:21.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.174" endtime="20201030 15:55:21.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.173" endtime="20201030 15:55:21.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.172" endtime="20201030 15:55:21.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.817" endtime="20201030 15:55:21.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.816" endtime="20201030 15:55:21.195"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.204" endtime="20201030 15:55:21.221"></status>
</kw>
<msg timestamp="20201030 15:55:21.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.202" endtime="20201030 15:55:21.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.223" endtime="20201030 15:55:21.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.225" endtime="20201030 15:55:21.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.200" endtime="20201030 15:55:21.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.198" endtime="20201030 15:55:21.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.234" endtime="20201030 15:55:21.521"></status>
</kw>
<msg timestamp="20201030 15:55:21.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022600528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.233" endtime="20201030 15:55:21.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022600528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.525" endtime="20201030 15:55:21.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.533" endtime="20201030 15:55:21.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.230" endtime="20201030 15:55:21.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.228" endtime="20201030 15:55:21.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.539" level="INFO">${RESULT} = [{'diff': 7.594500000000087e-05}, {'diff': 7.501400000000172e-05}, {'diff': 7.502800000000129e-05}, {'diff': 7.501400000000172e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.498599999999911e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:21.536" endtime="20201030 15:55:21.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.544" level="INFO">${ACCURACY} = {'diff': [7.594500000000087e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.4999...</msg>
<status status="PASS" starttime="20201030 15:55:21.540" endtime="20201030 15:55:21.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.548" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.547" endtime="20201030 15:55:21.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.550" level="INFO">VALUE: [7.594500000000087e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.497199999999954e-05, 7.50830000000001e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.497199999999954e-05, 7.498600000000258e-05, 7.501400000000172e-05, 7.491600000000126e-05, 7.501299999999878e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.502799999999782e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.498600000000258e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.501399999999825e-05, 7.501300000000224e-05, 7.498700000000205e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.505600000000043e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.501400000000172e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.549" endtime="20201030 15:55:21.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.544" endtime="20201030 15:55:21.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.556" endtime="20201030 15:55:21.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.555" endtime="20201030 15:55:21.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.553" endtime="20201030 15:55:21.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.196" endtime="20201030 15:55:21.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.196" endtime="20201030 15:55:21.577"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.585" endtime="20201030 15:55:21.602"></status>
</kw>
<msg timestamp="20201030 15:55:21.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.584" endtime="20201030 15:55:21.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.604" endtime="20201030 15:55:21.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.606" endtime="20201030 15:55:21.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.581" endtime="20201030 15:55:21.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.579" endtime="20201030 15:55:21.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.615" endtime="20201030 15:55:21.901"></status>
</kw>
<msg timestamp="20201030 15:55:21.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:21.614" endtime="20201030 15:55:21.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:21.905" endtime="20201030 15:55:21.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.913" endtime="20201030 15:55:21.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.611" endtime="20201030 15:55:21.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.609" endtime="20201030 15:55:21.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.920" level="INFO">${RESULT} = [{'diff': 7.59579999999975e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.500000000000215e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.502799999999782e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:21.916" endtime="20201030 15:55:21.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.927" level="INFO">${ACCURACY} = {'diff': [7.59579999999975e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.502799999999782e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.50139...</msg>
<status status="PASS" starttime="20201030 15:55:21.921" endtime="20201030 15:55:21.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.931" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.930" endtime="20201030 15:55:21.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.934" level="INFO">VALUE: [7.59579999999975e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.502799999999782e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.498699999999858e-05, 7.501399999999825e-05, 7.501300000000224e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.497199999999954e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.498600000000258e-05, 7.502799999999782e-05, 7.498600000000258e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.497200000000301e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.498600000000258e-05, 7.502799999999782e-05, 7.502800000000129e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.500000000000215e-05, 7.504200000000086e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.505600000000043e-05, 7.501400000000172e-05, 7.501400000000172e-05, 7.501399999999825e-05, 7.50830000000001e-05, 7.502700000000181e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.932" endtime="20201030 15:55:21.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.928" endtime="20201030 15:55:21.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.939" endtime="20201030 15:55:21.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.937" endtime="20201030 15:55:21.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.936" endtime="20201030 15:55:21.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.578" endtime="20201030 15:55:21.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.577" endtime="20201030 15:55:21.960"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.968" endtime="20201030 15:55:21.985"></status>
</kw>
<msg timestamp="20201030 15:55:21.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.967" endtime="20201030 15:55:21.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.986" endtime="20201030 15:55:21.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.989" endtime="20201030 15:55:21.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.964" endtime="20201030 15:55:21.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.962" endtime="20201030 15:55:21.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.998" endtime="20201030 15:55:22.285"></status>
</kw>
<msg timestamp="20201030 15:55:22.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.996" endtime="20201030 15:55:22.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.289" endtime="20201030 15:55:22.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.298" endtime="20201030 15:55:22.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.994" endtime="20201030 15:55:22.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.992" endtime="20201030 15:55:22.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.304" level="INFO">${RESULT} = [{'diff': 7.59310000000013e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.497199999999954e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:22.301" endtime="20201030 15:55:22.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.308" level="INFO">${ACCURACY} = {'diff': [7.59310000000013e-05, 7.499999999999868e-05, 7.497199999999954e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.50139...</msg>
<status status="PASS" starttime="20201030 15:55:22.305" endtime="20201030 15:55:22.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.313" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.312" endtime="20201030 15:55:22.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.315" level="INFO">VALUE: [7.59310000000013e-05, 7.499999999999868e-05, 7.497199999999954e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.498600000000258e-05, 7.499999999999868e-05, 7.506900000000052e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.505600000000043e-05, 7.502799999999782e-05, 7.506900000000052e-05, 7.49440000000004e-05, 7.498600000000258e-05, 7.498699999999858e-05, 7.505600000000043e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.502699999999835e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.497199999999954e-05, 7.501399999999825e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.507e-05, 7.500000000000215e-05, 7.497199999999954e-05, 7.498599999999911e-05, 7.49440000000004e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.314" endtime="20201030 15:55:22.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.309" endtime="20201030 15:55:22.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.320" endtime="20201030 15:55:22.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.319" endtime="20201030 15:55:22.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.317" endtime="20201030 15:55:22.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.960" endtime="20201030 15:55:22.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.960" endtime="20201030 15:55:22.341"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.349" endtime="20201030 15:55:22.367"></status>
</kw>
<msg timestamp="20201030 15:55:22.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.348" endtime="20201030 15:55:22.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.369" endtime="20201030 15:55:22.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.371" endtime="20201030 15:55:22.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.345" endtime="20201030 15:55:22.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.343" endtime="20201030 15:55:22.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.380" endtime="20201030 15:55:22.666"></status>
</kw>
<msg timestamp="20201030 15:55:22.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.378" endtime="20201030 15:55:22.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.670" endtime="20201030 15:55:22.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.679" endtime="20201030 15:55:22.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.376" endtime="20201030 15:55:22.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.374" endtime="20201030 15:55:22.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.685" level="INFO">${RESULT} = [{'diff': 7.59440000000014e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.506900000000052e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.501299999999878e-05}, {'diff': 7.499999999999868e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:22.682" endtime="20201030 15:55:22.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.689" level="INFO">${ACCURACY} = {'diff': [7.59440000000014e-05, 7.499999999999868e-05, 7.506900000000052e-05, 7.498599999999911e-05, 7.501299999999878e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.49999...</msg>
<status status="PASS" starttime="20201030 15:55:22.686" endtime="20201030 15:55:22.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.694" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.693" endtime="20201030 15:55:22.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.696" level="INFO">VALUE: [7.59440000000014e-05, 7.499999999999868e-05, 7.506900000000052e-05, 7.498599999999911e-05, 7.501299999999878e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.497200000000301e-05, 7.501400000000172e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.502700000000181e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.502799999999782e-05, 7.501400000000172e-05, 7.500000000000215e-05, 7.502799999999782e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.502799999999782e-05, 7.49310000000003e-05, 7.502800000000129e-05, 7.49440000000004e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.498600000000258e-05, 7.501400000000172e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.501400000000172e-05, 7.501399999999825e-05, 7.501299999999878e-05, 7.500000000000215e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.501400000000172e-05, 7.501400000000172e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.695" endtime="20201030 15:55:22.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.690" endtime="20201030 15:55:22.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.702" endtime="20201030 15:55:22.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.700" endtime="20201030 15:55:22.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.699" endtime="20201030 15:55:22.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.342" endtime="20201030 15:55:22.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.341" endtime="20201030 15:55:22.723"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.735" endtime="20201030 15:55:22.754"></status>
</kw>
<msg timestamp="20201030 15:55:22.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.733" endtime="20201030 15:55:22.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.756" endtime="20201030 15:55:22.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.758" endtime="20201030 15:55:22.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.731" endtime="20201030 15:55:22.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.726" endtime="20201030 15:55:22.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.767" endtime="20201030 15:55:23.052"></status>
</kw>
<msg timestamp="20201030 15:55:23.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025992125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026068056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.766" endtime="20201030 15:55:23.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025992125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026068056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.056" endtime="20201030 15:55:23.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.065" endtime="20201030 15:55:23.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.763" endtime="20201030 15:55:23.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.761" endtime="20201030 15:55:23.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.071" level="INFO">${RESULT} = [{'diff': 7.593099999999783e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.524999999999893e-05}, {'diff': 7.500000000000215e-05}, {'diff': 7.519500000000012e-05}, {'diff': 7.51249999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:23.068" endtime="20201030 15:55:23.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.076" level="INFO">${ACCURACY} = {'diff': [7.593099999999783e-05, 7.549999999999918e-05, 7.524999999999893e-05, 7.500000000000215e-05, 7.519500000000012e-05, 7.51249999999988e-05, 7.483399999999932e-05, 7.520800000000022e-05, 7.48199...</msg>
<status status="PASS" starttime="20201030 15:55:23.072" endtime="20201030 15:55:23.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.081" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.080" endtime="20201030 15:55:23.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.083" level="INFO">VALUE: [7.593099999999783e-05, 7.549999999999918e-05, 7.524999999999893e-05, 7.500000000000215e-05, 7.519500000000012e-05, 7.51249999999988e-05, 7.483399999999932e-05, 7.520800000000022e-05, 7.481999999999975e-05, 7.493000000000083e-05, 7.524999999999893e-05, 7.513900000000184e-05, 7.543000000000133e-05, 7.483299999999984e-05, 7.513899999999837e-05, 7.53890000000021e-05, 7.519500000000012e-05, 7.533300000000034e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.537499999999905e-05, 7.542999999999786e-05, 7.541700000000123e-05, 7.501399999999825e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.519500000000012e-05, 7.523599999999936e-05, 7.531900000000077e-05, 7.52639999999985e-05, 7.545800000000047e-05, 7.537499999999905e-05, 7.551399999999875e-05, 7.524999999999893e-05, 7.499999999999868e-05, 7.552799999999832e-05, 7.488899999999812e-05, 7.502800000000129e-05, 7.54440000000009e-05, 7.52500000000024e-05, 7.501400000000172e-05, 7.551399999999875e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.536099999999948e-05, 7.501400000000172e-05, 7.520800000000022e-05, 7.500000000000215e-05, 7.495799999999997e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.082" endtime="20201030 15:55:23.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.077" endtime="20201030 15:55:23.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.088" endtime="20201030 15:55:23.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.087" endtime="20201030 15:55:23.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.085" endtime="20201030 15:55:23.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.724" endtime="20201030 15:55:23.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.724" endtime="20201030 15:55:23.109"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.118" endtime="20201030 15:55:23.135"></status>
</kw>
<msg timestamp="20201030 15:55:23.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.116" endtime="20201030 15:55:23.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.137" endtime="20201030 15:55:23.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.139" endtime="20201030 15:55:23.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.113" endtime="20201030 15:55:23.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.111" endtime="20201030 15:55:23.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.155" endtime="20201030 15:55:23.442"></status>
</kw>
<msg timestamp="20201030 15:55:23.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022318444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.153" endtime="20201030 15:55:23.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022318444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.446" endtime="20201030 15:55:23.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.455" endtime="20201030 15:55:23.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.148" endtime="20201030 15:55:23.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.146" endtime="20201030 15:55:23.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.462" level="INFO">${RESULT} = [{'diff': 7.573599999999986e-05}, {'diff': 7.49310000000003e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.530600000000068e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:23.458" endtime="20201030 15:55:23.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.466" level="INFO">${ACCURACY} = {'diff': [7.573599999999986e-05, 7.49310000000003e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.530600000000068e-05, 7.507e-05, 7.499999999999868e-05, 7.499999999999868e-...</msg>
<status status="PASS" starttime="20201030 15:55:23.463" endtime="20201030 15:55:23.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.470" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.469" endtime="20201030 15:55:23.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.473" level="INFO">VALUE: [7.573599999999986e-05, 7.49310000000003e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.530600000000068e-05, 7.507e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.516700000000098e-05, 7.541599999999829e-05, 7.50830000000001e-05, 7.509700000000313e-05, 7.501400000000172e-05, 7.527799999999807e-05, 7.500000000000215e-05, 7.501299999999878e-05, 7.495799999999997e-05, 7.51249999999988e-05, 7.498600000000258e-05, 7.501399999999825e-05, 7.530600000000068e-05, 7.532000000000025e-05, 7.502800000000129e-05, 7.532000000000025e-05, 7.502800000000129e-05, 7.498599999999911e-05, 7.506900000000052e-05, 7.511099999999923e-05, 7.507e-05, 7.504099999999791e-05, 7.534699999999991e-05, 7.524999999999893e-05, 7.516699999999751e-05, 7.51379999999989e-05, 7.532000000000025e-05, 7.498699999999858e-05, 7.493000000000083e-05, 7.505499999999748e-05, 7.527799999999807e-05, 7.502799999999782e-05, 7.537499999999905e-05, 7.502800000000129e-05, 7.501399999999825e-05, 7.51379999999989e-05, 7.537499999999905e-05, 7.533300000000034e-05, 7.501399999999825e-05, 7.508399999999957e-05, 7.523699999999883e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.471" endtime="20201030 15:55:23.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.466" endtime="20201030 15:55:23.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.477" endtime="20201030 15:55:23.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.476" endtime="20201030 15:55:23.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.475" endtime="20201030 15:55:23.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.110" endtime="20201030 15:55:23.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.109" endtime="20201030 15:55:23.498"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.507" endtime="20201030 15:55:23.525"></status>
</kw>
<msg timestamp="20201030 15:55:23.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.505" endtime="20201030 15:55:23.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.527" endtime="20201030 15:55:23.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.529" endtime="20201030 15:55:23.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.503" endtime="20201030 15:55:23.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.501" endtime="20201030 15:55:23.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.538" endtime="20201030 15:55:23.824"></status>
</kw>
<msg timestamp="20201030 15:55:23.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.537" endtime="20201030 15:55:23.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.828" endtime="20201030 15:55:23.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.836" endtime="20201030 15:55:23.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.534" endtime="20201030 15:55:23.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.533" endtime="20201030 15:55:23.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.843" level="INFO">${RESULT} = [{'diff': 0.00010122199999999804}, {'diff': 7.574999999999943e-05}, {'diff': 0.00010047300000000023}, {'diff': 7.5763999999999e-05}, {'diff': 0.0001004999999999999}, {'diff': 7.566700000000148e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:23.840" endtime="20201030 15:55:23.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.847" level="INFO">${ACCURACY} = {'diff': [0.00010122199999999804, 7.574999999999943e-05, 0.00010047300000000023, 7.5763999999999e-05, 0.0001004999999999999, 7.566700000000148e-05, 0.0001004999999999999, 7.588799999999965e-05, 0.0001...</msg>
<status status="PASS" starttime="20201030 15:55:23.844" endtime="20201030 15:55:23.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.851" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.850" endtime="20201030 15:55:23.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.854" level="INFO">VALUE: [0.00010122199999999804, 7.574999999999943e-05, 0.00010047300000000023, 7.5763999999999e-05, 0.0001004999999999999, 7.566700000000148e-05, 0.0001004999999999999, 7.588799999999965e-05, 0.0001004999999999999, 0.00010104099999999963, 0.00010098600000000083, 7.576299999999953e-05, 0.0001005549999999987, 0.00010105599999999867, 7.580600000000118e-05, 7.519400000000065e-05, 0.00010045799999999772, 0.00010102799999999953, 0.00010105599999999867, 7.58890000000026e-05, 0.00010047200000000076, 0.00010104099999999963, 0.00010106999999999824, 0.00010102799999999953, 0.00010104099999999963, 7.583400000000032e-05, 7.523599999999936e-05, 7.515299999999794e-05, 0.0001004999999999999, 7.594500000000087e-05, 7.509699999999966e-05, 0.00010048600000000033, 7.576299999999953e-05, 0.0001004999999999999, 0.00010111100000000095, 0.00010105500000000267, 7.5763999999999e-05, 7.524999999999893e-05, 0.00010047200000000076, 7.573599999999986e-05, 7.512500000000227e-05, 7.519399999999718e-05, 7.515300000000141e-05, 0.0001004999999999999, 7.588899999999912e-05, 0.0001004999999999999, 0.00010098600000000083, 7.588899999999912e-05, 0.00010047200000000076, 0.00010101399999999996]</msg>
<status status="PASS" starttime="20201030 15:55:23.853" endtime="20201030 15:55:23.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.848" endtime="20201030 15:55:23.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.860" endtime="20201030 15:55:23.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.858" endtime="20201030 15:55:23.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.857" endtime="20201030 15:55:23.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.499" endtime="20201030 15:55:23.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.498" endtime="20201030 15:55:23.880"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.889" endtime="20201030 15:55:23.907"></status>
</kw>
<msg timestamp="20201030 15:55:23.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.887" endtime="20201030 15:55:23.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.909" endtime="20201030 15:55:23.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.911" endtime="20201030 15:55:23.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.885" endtime="20201030 15:55:23.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.883" endtime="20201030 15:55:23.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.920" endtime="20201030 15:55:24.206"></status>
</kw>
<msg timestamp="20201030 15:55:24.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.919" endtime="20201030 15:55:24.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.211" endtime="20201030 15:55:24.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.219" endtime="20201030 15:55:24.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.916" endtime="20201030 15:55:24.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.914" endtime="20201030 15:55:24.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.226" level="INFO">${RESULT} = [{'diff': 0.00010122199999999804}, {'diff': 0.00010102799999999953}, {'diff': 0.0001010419999999991}, {'diff': 0.00010106899999999877}, {'diff': 0.00010105599999999867}, {'diff': 0.0001010559999999986...</msg>
<status status="PASS" starttime="20201030 15:55:24.222" endtime="20201030 15:55:24.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.231" level="INFO">${ACCURACY} = {'diff': [0.00010122199999999804, 0.00010102799999999953, 0.0001010419999999991, 0.00010106899999999877, 0.00010105599999999867, 0.00010105599999999867, 0.00010105600000000214, 0.0001010419999999991, ...</msg>
<status status="PASS" starttime="20201030 15:55:24.227" endtime="20201030 15:55:24.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.240" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.238" endtime="20201030 15:55:24.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.245" level="INFO">VALUE: [0.00010122199999999804, 0.00010102799999999953, 0.0001010419999999991, 0.00010106899999999877, 0.00010105599999999867, 0.00010105599999999867, 0.00010105600000000214, 0.0001010419999999991, 0.00010098600000000083, 0.0001010549999999992, 0.00010105599999999867, 0.00010112499999999705, 0.0001010419999999991, 0.00010101300000000049, 0.00010105599999999867, 0.0001010549999999992, 0.00010102700000000006, 0.00010104099999999963, 0.0001010549999999992, 0.00010105599999999867, 0.00010105599999999867, 0.00010104200000000257, 0.0001010000000000004, 0.00010105599999999867, 0.0001010419999999991, 0.00010106899999999877, 0.00010106999999999824, 0.00010104099999999963, 0.00010102799999999953, 0.0001010549999999992, 0.00010102799999999953, 0.0001010549999999992, 0.00010102799999999953, 0.00010105500000000267, 0.0001010419999999991, 0.00010105600000000214, 0.00010111100000000095, 0.00010102799999999953, 0.00010102799999999953, 0.00010102799999999953, 0.00010107000000000171, 0.00010102799999999953, 0.00010098600000000083, 0.00010106900000000224, 0.00010105599999999867, 0.00010104200000000257, 0.00010101399999999996, 0.00010111100000000095, 0.00010104099999999963, 0.0001010419999999991]</msg>
<status status="PASS" starttime="20201030 15:55:24.242" endtime="20201030 15:55:24.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.232" endtime="20201030 15:55:24.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.255" endtime="20201030 15:55:24.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.252" endtime="20201030 15:55:24.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.250" endtime="20201030 15:55:24.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.881" endtime="20201030 15:55:24.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.881" endtime="20201030 15:55:24.280"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.299" endtime="20201030 15:55:24.322"></status>
</kw>
<msg timestamp="20201030 15:55:24.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.295" endtime="20201030 15:55:24.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.325" endtime="20201030 15:55:24.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.331" endtime="20201030 15:55:24.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.290" endtime="20201030 15:55:24.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.285" endtime="20201030 15:55:24.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.341" endtime="20201030 15:55:24.628"></status>
</kw>
<msg timestamp="20201030 15:55:24.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036293597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036394833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.339" endtime="20201030 15:55:24.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036293597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036394833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.632" endtime="20201030 15:55:24.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.640" endtime="20201030 15:55:24.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.337" endtime="20201030 15:55:24.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.335" endtime="20201030 15:55:24.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.646" level="INFO">${RESULT} = [{'diff': 0.00010123600000000454}, {'diff': 0.00010108299999999487}, {'diff': 0.0001010559999999952}, {'diff': 0.0001010139999999965}, {'diff': 0.00010104200000000257}, {'diff': 0.0001010689999999953}...</msg>
<status status="PASS" starttime="20201030 15:55:24.643" endtime="20201030 15:55:24.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.650" level="INFO">${ACCURACY} = {'diff': [0.00010123600000000454, 0.00010108299999999487, 0.0001010559999999952, 0.0001010139999999965, 0.00010104200000000257, 0.0001010689999999953, 0.00010105600000000214, 0.00010107000000000171, 0...</msg>
<status status="PASS" starttime="20201030 15:55:24.647" endtime="20201030 15:55:24.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.655" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.654" endtime="20201030 15:55:24.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.657" level="INFO">VALUE: [0.00010123600000000454, 0.00010108299999999487, 0.0001010559999999952, 0.0001010139999999965, 0.00010104200000000257, 0.0001010689999999953, 0.00010105600000000214, 0.00010107000000000171, 0.0001010559999999952, 0.00010104099999999616, 0.00010108300000000181, 0.00010102699999999659, 0.00010105600000000214, 0.00010105500000000267, 0.00010104200000000257, 0.00010111100000000095, 0.0001010410000000031, 0.0001010410000000031, 0.00010097199999999779, 0.00010105600000000214, 0.0001010559999999952, 0.0001010410000000031, 0.00010104200000000257, 0.00010105600000000214, 0.0001010410000000031, 0.00010105600000000214, 0.00010106900000000224, 0.00010105600000000214, 0.00010111100000000095, 0.00010105500000000267, 0.00010104199999999564, 0.0001010139999999965, 0.0001010410000000031, 0.00010105499999999573, 0.00010098599999999736, 0.000101028000000003, 0.000101028000000003, 0.0001010559999999952, 0.00010105600000000214, 0.00010108399999999435, 0.00010105499999999573, 0.0001010559999999952, 0.00010105600000000214, 0.00010105499999999573, 0.000101028000000003, 0.0001010559999999952, 0.00010104200000000257, 0.00010102799999999607, 0.00010104199999999564, 0.00010104200000000257]</msg>
<status status="PASS" starttime="20201030 15:55:24.656" endtime="20201030 15:55:24.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.651" endtime="20201030 15:55:24.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.662" endtime="20201030 15:55:24.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.661" endtime="20201030 15:55:24.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.659" endtime="20201030 15:55:24.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.282" endtime="20201030 15:55:24.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.281" endtime="20201030 15:55:24.683"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.691" endtime="20201030 15:55:24.711"></status>
</kw>
<msg timestamp="20201030 15:55:24.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.690" endtime="20201030 15:55:24.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.712" endtime="20201030 15:55:24.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.715" endtime="20201030 15:55:24.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.687" endtime="20201030 15:55:24.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.685" endtime="20201030 15:55:24.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.723" endtime="20201030 15:55:25.010"></status>
</kw>
<msg timestamp="20201030 15:55:25.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:24.722" endtime="20201030 15:55:25.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:25.014" endtime="20201030 15:55:25.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.022" endtime="20201030 15:55:25.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.719" endtime="20201030 15:55:25.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.718" endtime="20201030 15:55:25.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.028" level="INFO">${RESULT} = [{'diff': 0.00010130599999999892}, {'diff': 0.00010104099999999963}, {'diff': 0.00010105500000000267}, {'diff': 0.00010112500000000052}, {'diff': 0.00010105599999999867}, {'diff': 0.000101055999999998...</msg>
<status status="PASS" starttime="20201030 15:55:25.025" endtime="20201030 15:55:25.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.032" level="INFO">${ACCURACY} = {'diff': [0.00010130599999999892, 0.00010104099999999963, 0.00010105500000000267, 0.00010112500000000052, 0.00010105599999999867, 0.00010105599999999867, 0.00010102799999999953, 0.0001010419999999991,...</msg>
<status status="PASS" starttime="20201030 15:55:25.029" endtime="20201030 15:55:25.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.036" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.035" endtime="20201030 15:55:25.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.039" level="INFO">VALUE: [0.00010130599999999892, 0.00010104099999999963, 0.00010105500000000267, 0.00010112500000000052, 0.00010105599999999867, 0.00010105599999999867, 0.00010102799999999953, 0.0001010419999999991, 0.00010102799999999953, 0.0001010419999999991, 0.00010106899999999877, 0.0001010549999999992, 0.00010101399999999996, 0.0001010419999999991, 0.00010108300000000181, 0.00010104099999999963, 0.00010109700000000138, 0.0001010419999999991, 0.00010104200000000257, 0.00010102799999999953, 0.00010108299999999834, 0.00010109700000000138, 0.00010105599999999867, 0.0001010549999999992, 0.0001010419999999991, 0.00010102799999999953, 0.0001010419999999991, 0.00010105600000000214, 0.0001010419999999991, 0.0001010410000000031, 0.00010105600000000214, 0.00010099999999999693, 0.00010104099999999963, 0.00010111099999999748, 0.00010104099999999963, 0.00010111200000000042, 0.00010106999999999824, 0.0001010419999999991, 0.00010104099999999963, 0.00010101399999999996, 0.0001010549999999992, 0.0001010419999999991, 0.0001010419999999991, 0.0001010419999999991, 0.0001010419999999991, 0.00010104099999999963, 0.0001010419999999991, 0.00010102799999999953, 0.0001010000000000004, 0.00010105600000000214]</msg>
<status status="PASS" starttime="20201030 15:55:25.037" endtime="20201030 15:55:25.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.033" endtime="20201030 15:55:25.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.055" endtime="20201030 15:55:25.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.052" endtime="20201030 15:55:25.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.049" endtime="20201030 15:55:25.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.684" endtime="20201030 15:55:25.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.683" endtime="20201030 15:55:25.079"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.097" endtime="20201030 15:55:25.118"></status>
</kw>
<msg timestamp="20201030 15:55:25.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.094" endtime="20201030 15:55:25.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.121" endtime="20201030 15:55:25.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.126" endtime="20201030 15:55:25.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.089" endtime="20201030 15:55:25.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.084" endtime="20201030 15:55:25.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.144" endtime="20201030 15:55:25.429"></status>
</kw>
<msg timestamp="20201030 15:55:25.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035416847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035518056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.142" endtime="20201030 15:55:25.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035416847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035518056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.433" endtime="20201030 15:55:25.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.441" endtime="20201030 15:55:25.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.136" endtime="20201030 15:55:25.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.133" endtime="20201030 15:55:25.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.448" level="INFO">${RESULT} = [{'diff': 0.00010120899999999794}, {'diff': 0.000101028000000003}, {'diff': 0.0001010410000000031}, {'diff': 0.00010102700000000353}, {'diff': 0.00010105499999999573}, {'diff': 0.00010104199999999564}...</msg>
<status status="PASS" starttime="20201030 15:55:25.445" endtime="20201030 15:55:25.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.455" level="INFO">${ACCURACY} = {'diff': [0.00010120899999999794, 0.000101028000000003, 0.0001010410000000031, 0.00010102700000000353, 0.00010105499999999573, 0.00010104199999999564, 0.00010105600000000214, 0.00010102799999999607, 0...</msg>
<status status="PASS" starttime="20201030 15:55:25.449" endtime="20201030 15:55:25.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.459" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.458" endtime="20201030 15:55:25.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.462" level="INFO">VALUE: [0.00010120899999999794, 0.000101028000000003, 0.0001010410000000031, 0.00010102700000000353, 0.00010105499999999573, 0.00010104199999999564, 0.00010105600000000214, 0.00010102799999999607, 0.00010112500000000052, 0.00010102799999999607, 0.00010102699999999659, 0.000101028000000003, 0.00010106900000000224, 0.00010111100000000095, 0.00010104200000000257, 0.00010105600000000214, 0.00010106900000000224, 0.00010105499999999573, 0.000101028000000003, 0.0001010689999999953, 0.0001010559999999952, 0.00010106900000000224, 0.0001010689999999953, 0.00010108400000000128, 0.00010105500000000267, 0.00010105600000000214, 0.00010105600000000214, 0.00010104200000000257, 0.0001010559999999952, 0.00010104200000000257, 0.00010113900000000009, 0.00010104200000000257, 0.00010104199999999564, 0.00010105500000000267, 0.00010105499999999573, 0.00010108300000000181, 0.00010107000000000171, 0.00010104200000000257, 0.00010105500000000267, 0.00010104199999999564, 0.0001010559999999952, 0.00010105500000000267, 0.00010105499999999573, 0.00010106900000000224, 0.00010104199999999564, 0.00010106900000000224, 0.0001010559999999952, 0.00010105600000000214, 0.00010104199999999564, 0.0001010559999999952]</msg>
<status status="PASS" starttime="20201030 15:55:25.460" endtime="20201030 15:55:25.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.456" endtime="20201030 15:55:25.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.467" endtime="20201030 15:55:25.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.465" endtime="20201030 15:55:25.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.464" endtime="20201030 15:55:25.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.081" endtime="20201030 15:55:25.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.080" endtime="20201030 15:55:25.488"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.496" endtime="20201030 15:55:25.515"></status>
</kw>
<msg timestamp="20201030 15:55:25.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.495" endtime="20201030 15:55:25.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.516" endtime="20201030 15:55:25.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.518" endtime="20201030 15:55:25.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.492" endtime="20201030 15:55:25.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.490" endtime="20201030 15:55:25.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.527" endtime="20201030 15:55:25.814"></status>
</kw>
<msg timestamp="20201030 15:55:25.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:25.526" endtime="20201030 15:55:25.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:25.818" endtime="20201030 15:55:25.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.826" endtime="20201030 15:55:25.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.523" endtime="20201030 15:55:25.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.522" endtime="20201030 15:55:25.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.832" level="INFO">${RESULT} = [{'diff': 0.00010125000000000065}, {'diff': 0.0001010549999999992}, {'diff': 0.00010105599999999867}, {'diff': 0.00010104099999999963}, {'diff': 0.0001010549999999992}, {'diff': 0.00010104099999999963...</msg>
<status status="PASS" starttime="20201030 15:55:25.829" endtime="20201030 15:55:25.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.836" level="INFO">${ACCURACY} = {'diff': [0.00010125000000000065, 0.0001010549999999992, 0.00010105599999999867, 0.00010104099999999963, 0.0001010549999999992, 0.00010104099999999963, 0.0001010549999999992, 0.00010106899999999877, 0...</msg>
<status status="PASS" starttime="20201030 15:55:25.833" endtime="20201030 15:55:25.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.841" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.840" endtime="20201030 15:55:25.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.843" level="INFO">VALUE: [0.00010125000000000065, 0.0001010549999999992, 0.00010105599999999867, 0.00010104099999999963, 0.0001010549999999992, 0.00010104099999999963, 0.0001010549999999992, 0.00010106899999999877, 0.0001010419999999991, 0.00010106900000000224, 0.00010099999999999693, 0.00010105600000000214, 0.00010106900000000224, 0.00010104200000000257, 0.00010106999999999824, 0.00010105599999999867, 0.00010106999999999824, 0.00010104200000000257, 0.00010104200000000257, 0.0001010419999999991, 0.0001010419999999991, 0.00010104200000000257, 0.0001010410000000031, 0.00010104200000000257, 0.0001010419999999991, 0.00010105599999999867, 0.00010105600000000214, 0.00010105600000000214, 0.00010104099999999963, 0.00010105600000000214, 0.0001010419999999991, 0.0001010419999999991, 0.00010105599999999867, 0.0001010419999999991, 0.00010111200000000042, 0.0001010549999999992, 0.0001010549999999992, 0.0001010419999999991, 0.00010101300000000049, 0.00010106899999999877, 0.00010109699999999791, 0.00010105599999999867, 0.00010104099999999963, 0.00010106900000000224, 0.0001010419999999991, 0.0001010549999999992, 0.0001010410000000031, 0.00010105600000000214, 0.00010106900000000224, 0.00010105599999999867]</msg>
<status status="PASS" starttime="20201030 15:55:25.842" endtime="20201030 15:55:25.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.837" endtime="20201030 15:55:25.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.848" endtime="20201030 15:55:25.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.847" endtime="20201030 15:55:25.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.845" endtime="20201030 15:55:25.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.488" endtime="20201030 15:55:25.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.488" endtime="20201030 15:55:25.869"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.877" endtime="20201030 15:55:25.896"></status>
</kw>
<msg timestamp="20201030 15:55:25.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.876" endtime="20201030 15:55:25.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.898" endtime="20201030 15:55:25.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.900" endtime="20201030 15:55:25.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.873" endtime="20201030 15:55:25.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.871" endtime="20201030 15:55:25.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.909" endtime="20201030 15:55:26.196"></status>
</kw>
<msg timestamp="20201030 15:55:26.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.908" endtime="20201030 15:55:26.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.200" endtime="20201030 15:55:26.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.209" endtime="20201030 15:55:26.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.905" endtime="20201030 15:55:26.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.904" endtime="20201030 15:55:26.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.217" level="INFO">${RESULT} = [{'diff': 0.0001012220000000015}, {'diff': 0.00010102799999999953}, {'diff': 0.00010105599999999867}, {'diff': 0.0001010549999999992}, {'diff': 0.00010105599999999867}, {'diff': 0.00010102799999999953...</msg>
<status status="PASS" starttime="20201030 15:55:26.213" endtime="20201030 15:55:26.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.221" level="INFO">${ACCURACY} = {'diff': [0.0001012220000000015, 0.00010102799999999953, 0.00010105599999999867, 0.0001010549999999992, 0.00010105599999999867, 0.00010102799999999953, 0.00010111099999999748, 0.00010104200000000257, ...</msg>
<status status="PASS" starttime="20201030 15:55:26.218" endtime="20201030 15:55:26.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.226" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.225" endtime="20201030 15:55:26.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.228" level="INFO">VALUE: [0.0001012220000000015, 0.00010102799999999953, 0.00010105599999999867, 0.0001010549999999992, 0.00010105599999999867, 0.00010102799999999953, 0.00010111099999999748, 0.00010104200000000257, 0.0001010000000000004, 0.00010106900000000224, 0.00010104099999999963, 0.00010101399999999996, 0.00010106900000000224, 0.00010106899999999877, 0.00010107000000000171, 0.0001010549999999992, 0.00010102799999999953, 0.00010106899999999877, 0.00010097200000000126, 0.00010097199999999779, 0.00010102799999999953, 0.00010104200000000257, 0.0001010549999999992, 0.00010106899999999877, 0.0001010549999999992, 0.00010101399999999996, 0.0001010419999999991, 0.000101028000000003, 0.00010104099999999963, 0.00010105500000000267, 0.00010104099999999963, 0.00010104099999999963, 0.0001010410000000031, 0.00010104099999999963, 0.00010105600000000214, 0.0001010549999999992, 0.00010106999999999824, 0.00010106899999999877, 0.00010109800000000085, 0.0001010410000000031, 0.00010102799999999953, 0.00010106999999999824, 0.00010105600000000214, 0.00010104200000000257, 0.00010104099999999963, 0.00010105500000000267, 0.00010102799999999953, 0.00010105500000000267, 0.00010106900000000224, 0.00010105599999999867]</msg>
<status status="PASS" starttime="20201030 15:55:26.227" endtime="20201030 15:55:26.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.222" endtime="20201030 15:55:26.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.234" endtime="20201030 15:55:26.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.233" endtime="20201030 15:55:26.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.231" endtime="20201030 15:55:26.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.870" endtime="20201030 15:55:26.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.869" endtime="20201030 15:55:26.255"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.264" endtime="20201030 15:55:26.282"></status>
</kw>
<msg timestamp="20201030 15:55:26.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.262" endtime="20201030 15:55:26.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.284" endtime="20201030 15:55:26.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.286" endtime="20201030 15:55:26.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.260" endtime="20201030 15:55:26.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.257" endtime="20201030 15:55:26.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.295" endtime="20201030 15:55:26.591"></status>
</kw>
<msg timestamp="20201030 15:55:26.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.293" endtime="20201030 15:55:26.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.600" endtime="20201030 15:55:26.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.618" endtime="20201030 15:55:26.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.291" endtime="20201030 15:55:26.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.289" endtime="20201030 15:55:26.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.631" level="INFO">${RESULT} = [{'diff': 0.00010115200000000019}, {'diff': 0.00010107000000000171}, {'diff': 0.00010102799999999953}, {'diff': 0.0001010000000000004}, {'diff': 0.00010105600000000214}, {'diff': 0.000101028000000003}...</msg>
<status status="PASS" starttime="20201030 15:55:26.625" endtime="20201030 15:55:26.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.642" level="INFO">${ACCURACY} = {'diff': [0.00010115200000000019, 0.00010107000000000171, 0.00010102799999999953, 0.0001010000000000004, 0.00010105600000000214, 0.000101028000000003, 0.0001159300000000002, 0.00010094499999999812, 0....</msg>
<status status="PASS" starttime="20201030 15:55:26.633" endtime="20201030 15:55:26.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.651" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.649" endtime="20201030 15:55:26.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.656" level="INFO">VALUE: [0.00010115200000000019, 0.00010107000000000171, 0.00010102799999999953, 0.0001010000000000004, 0.00010105600000000214, 0.000101028000000003, 0.0001159300000000002, 0.00010094499999999812, 0.00010098600000000083, 0.00010112500000000052, 0.0001159300000000002, 0.00010094500000000159, 0.00010105500000000267, 0.00010109800000000085, 0.0001010000000000004, 0.0001010549999999992, 0.00010112500000000052, 0.00010105500000000267, 0.00010099999999999693, 0.0001010549999999992, 0.00010102799999999953, 0.00010098600000000083, 0.00010104099999999963, 0.0001010000000000004, 0.00010102799999999953, 0.0001010549999999992, 0.00010101399999999996, 0.00011588900000000096, 0.00010087500000000027, 0.0001010000000000004, 0.0001010000000000004, 0.00010104200000000257, 0.00010105599999999867, 0.0001010000000000004, 0.00010105599999999867, 0.0001010419999999991, 0.000101028000000003, 0.00010102799999999953, 0.00011601400000000109, 0.00010093000000000255, 0.00010098599999999736, 0.00010097199999999779, 0.00010106999999999824, 0.0001010000000000004, 0.00010101399999999996, 0.00010098600000000083, 0.00010097200000000126, 0.00010107000000000171, 0.0001010000000000004, 0.0001010549999999992]</msg>
<status status="PASS" starttime="20201030 15:55:26.653" endtime="20201030 15:55:26.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.643" endtime="20201030 15:55:26.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.662" endtime="20201030 15:55:26.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.660" endtime="20201030 15:55:26.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.659" endtime="20201030 15:55:26.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.256" endtime="20201030 15:55:26.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.255" endtime="20201030 15:55:26.682"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.691" endtime="20201030 15:55:26.710"></status>
</kw>
<msg timestamp="20201030 15:55:26.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.689" endtime="20201030 15:55:26.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.711" endtime="20201030 15:55:26.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.714" endtime="20201030 15:55:26.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.687" endtime="20201030 15:55:26.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.685" endtime="20201030 15:55:26.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.723" endtime="20201030 15:55:27.009"></status>
</kw>
<msg timestamp="20201030 15:55:27.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.721" endtime="20201030 15:55:27.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.013" endtime="20201030 15:55:27.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.021" endtime="20201030 15:55:27.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.719" endtime="20201030 15:55:27.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.717" endtime="20201030 15:55:27.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.028" level="INFO">${RESULT} = [{'diff': 0.00011625000000000177}, {'diff': 0.00011601299999999815}, {'diff': 0.00011611100000000207}, {'diff': 0.00011605500000000032}, {'diff': 0.00011604100000000075}, {'diff': 0.000116083999999998...</msg>
<status status="PASS" starttime="20201030 15:55:27.025" endtime="20201030 15:55:27.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.032" level="INFO">${ACCURACY} = {'diff': [0.00011625000000000177, 0.00011601299999999815, 0.00011611100000000207, 0.00011605500000000032, 0.00011604100000000075, 0.00011608399999999894, 0.00011605500000000032, 0.00011608299999999946...</msg>
<status status="PASS" starttime="20201030 15:55:27.029" endtime="20201030 15:55:27.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.036" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.035" endtime="20201030 15:55:27.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.039" level="INFO">VALUE: [0.00011625000000000177, 0.00011601299999999815, 0.00011611100000000207, 0.00011605500000000032, 0.00011604100000000075, 0.00011608399999999894, 0.00011605500000000032, 0.00011608299999999946, 0.0001160689999999999, 0.00011605500000000032, 0.00011605500000000032, 0.0001160689999999999, 0.00011604200000000023, 0.0001160559999999998, 0.00011605500000000032, 0.00011605500000000032, 0.00011598599999999848, 0.00011606900000000336, 0.0001160689999999999, 0.00011607000000000284, 0.00011604100000000075, 0.00011605600000000327, 0.0001160559999999998, 0.00011604200000000023, 0.00011605500000000032, 0.00011605500000000032, 0.00011607000000000284, 0.0001160559999999998, 0.00011597300000000185, 0.00011606999999999937, 0.00011605500000000032, 0.00011602800000000066, 0.00011605500000000032, 0.00011598599999999848, 0.0001160689999999999, 0.00011598600000000195, 0.00011606999999999937, 0.0001160559999999998, 0.00011604200000000023, 0.00011608299999999946, 0.00011605500000000032, 0.00011605500000000032, 0.0001160559999999998, 0.00011606999999999937, 0.00011602800000000066, 0.00011604200000000023, 0.0001160559999999998, 0.0001160559999999998, 0.00011607000000000284, 0.00011604200000000023]</msg>
<status status="PASS" starttime="20201030 15:55:27.037" endtime="20201030 15:55:27.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.033" endtime="20201030 15:55:27.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.044" endtime="20201030 15:55:27.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.042" endtime="20201030 15:55:27.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.041" endtime="20201030 15:55:27.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.683" endtime="20201030 15:55:27.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.683" endtime="20201030 15:55:27.064"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.073" endtime="20201030 15:55:27.093"></status>
</kw>
<msg timestamp="20201030 15:55:27.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.072" endtime="20201030 15:55:27.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.094" endtime="20201030 15:55:27.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.097" endtime="20201030 15:55:27.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.069" endtime="20201030 15:55:27.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.067" endtime="20201030 15:55:27.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.106" endtime="20201030 15:55:27.392"></status>
</kw>
<msg timestamp="20201030 15:55:27.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.104" endtime="20201030 15:55:27.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.396" endtime="20201030 15:55:27.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.404" endtime="20201030 15:55:27.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.102" endtime="20201030 15:55:27.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.100" endtime="20201030 15:55:27.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.410" level="INFO">${RESULT} = [{'diff': 0.0001162499999999983}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160689999999999}, {'diff': 0.0001160559999999998}, {'diff': 0.00011606999999999937}, {'diff': 0.00011605500000000032},...</msg>
<status status="PASS" starttime="20201030 15:55:27.407" endtime="20201030 15:55:27.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.414" level="INFO">${ACCURACY} = {'diff': [0.0001162499999999983, 0.0001160559999999998, 0.0001160689999999999, 0.0001160559999999998, 0.00011606999999999937, 0.00011605500000000032, 0.00011608300000000293, 0.0001160689999999999, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:27.411" endtime="20201030 15:55:27.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.419" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.418" endtime="20201030 15:55:27.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.421" level="INFO">VALUE: [0.0001162499999999983, 0.0001160559999999998, 0.0001160689999999999, 0.0001160559999999998, 0.00011606999999999937, 0.00011605500000000032, 0.00011608300000000293, 0.0001160689999999999, 0.00011608299999999946, 0.00011604099999999729, 0.00011606999999999937, 0.00011605500000000032, 0.00011602800000000066, 0.00011602800000000066, 0.0001160689999999999, 0.00011604099999999729, 0.00011604100000000075, 0.00011609800000000198, 0.00011605500000000032, 0.0001160689999999999, 0.00011606999999999937, 0.00011604200000000023, 0.00011605500000000032, 0.00011607000000000284, 0.0001160559999999998, 0.00011604199999999676, 0.00011612499999999817, 0.0001160689999999999, 0.00011609699999999903, 0.0001160559999999998, 0.00011608299999999946, 0.00011605500000000032, 0.00011608299999999946, 0.0001160559999999998, 0.00011606999999999937, 0.00011609699999999903, 0.00011604200000000023, 0.00011598600000000195, 0.0001160559999999998, 0.00011602800000000066, 0.0001160559999999998, 0.00011612500000000164, 0.00011612500000000164, 0.00011604200000000023, 0.0001160559999999998, 0.00011605500000000032, 0.00011600000000000152, 0.00011604200000000023, 0.00011604100000000075, 0.0001160689999999999]</msg>
<status status="PASS" starttime="20201030 15:55:27.420" endtime="20201030 15:55:27.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.415" endtime="20201030 15:55:27.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.427" endtime="20201030 15:55:27.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.425" endtime="20201030 15:55:27.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.424" endtime="20201030 15:55:27.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.065" endtime="20201030 15:55:27.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.065" endtime="20201030 15:55:27.448"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.456" endtime="20201030 15:55:27.475"></status>
</kw>
<msg timestamp="20201030 15:55:27.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.455" endtime="20201030 15:55:27.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.477" endtime="20201030 15:55:27.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.479" endtime="20201030 15:55:27.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.452" endtime="20201030 15:55:27.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.450" endtime="20201030 15:55:27.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.488" endtime="20201030 15:55:27.775"></status>
</kw>
<msg timestamp="20201030 15:55:27.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.487" endtime="20201030 15:55:27.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.779" endtime="20201030 15:55:27.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.787" endtime="20201030 15:55:27.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.484" endtime="20201030 15:55:27.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.482" endtime="20201030 15:55:27.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.794" level="INFO">${RESULT} = [{'diff': 0.0001162499999999983}, {'diff': 0.00011611100000000207}, {'diff': 0.00011612499999999817}, {'diff': 0.00011606999999999937}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160559999999998}...</msg>
<status status="PASS" starttime="20201030 15:55:27.790" endtime="20201030 15:55:27.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.798" level="INFO">${ACCURACY} = {'diff': [0.0001162499999999983, 0.00011611100000000207, 0.00011612499999999817, 0.00011606999999999937, 0.0001160559999999998, 0.0001160559999999998, 0.00011605600000000327, 0.00011604200000000023, 0...</msg>
<status status="PASS" starttime="20201030 15:55:27.795" endtime="20201030 15:55:27.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.803" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.802" endtime="20201030 15:55:27.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.805" level="INFO">VALUE: [0.0001162499999999983, 0.00011611100000000207, 0.00011612499999999817, 0.00011606999999999937, 0.0001160559999999998, 0.0001160559999999998, 0.00011605600000000327, 0.00011604200000000023, 0.00011604100000000075, 0.00011608299999999946, 0.0001160689999999999, 0.00011605500000000032, 0.00011608299999999946, 0.0001160689999999999, 0.00011602700000000118, 0.0001160559999999998, 0.0001160689999999999, 0.00011602800000000066, 0.0001160559999999998, 0.00011602699999999772, 0.00011606999999999937, 0.0001160689999999999, 0.00011605500000000032, 0.00011604200000000023, 0.00011604099999999729, 0.00011605600000000327, 0.00011600000000000152, 0.0001161109999999986, 0.00011605499999999686, 0.0001160559999999998, 0.00011605500000000032, 0.0001160559999999998, 0.0001160559999999998, 0.00011606999999999937, 0.00011601400000000109, 0.00011604200000000023, 0.00011605500000000032, 0.0001160559999999998, 0.00011605500000000032, 0.00011604200000000023, 0.00011604200000000023, 0.00011602800000000066, 0.0001160689999999999, 0.00011609799999999851, 0.00011606999999999937, 0.00011606999999999937, 0.0001161109999999986, 0.00011604100000000075, 0.00011602800000000066, 0.00011612499999999817]</msg>
<status status="PASS" starttime="20201030 15:55:27.804" endtime="20201030 15:55:27.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.799" endtime="20201030 15:55:27.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.810" endtime="20201030 15:55:27.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.809" endtime="20201030 15:55:27.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.808" endtime="20201030 15:55:27.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.449" endtime="20201030 15:55:27.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.448" endtime="20201030 15:55:27.831"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.840" endtime="20201030 15:55:27.859"></status>
</kw>
<msg timestamp="20201030 15:55:27.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.838" endtime="20201030 15:55:27.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.860" endtime="20201030 15:55:27.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.863" endtime="20201030 15:55:27.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.835" endtime="20201030 15:55:27.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.833" endtime="20201030 15:55:27.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.872" endtime="20201030 15:55:28.177"></status>
</kw>
<msg timestamp="20201030 15:55:28.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:27.870" endtime="20201030 15:55:28.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:28.181" endtime="20201030 15:55:28.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.189" endtime="20201030 15:55:28.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.867" endtime="20201030 15:55:28.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.866" endtime="20201030 15:55:28.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.196" level="INFO">${RESULT} = [{'diff': 0.00011622199999999916}, {'diff': 0.00011605500000000032}, {'diff': 0.00011608299999999946}, {'diff': 0.00011604200000000023}, {'diff': 0.00011602799999999719}, {'diff': 0.000116027999999997...</msg>
<status status="PASS" starttime="20201030 15:55:28.192" endtime="20201030 15:55:28.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.200" level="INFO">${ACCURACY} = {'diff': [0.00011622199999999916, 0.00011605500000000032, 0.00011608299999999946, 0.00011604200000000023, 0.00011602799999999719, 0.00011602799999999719, 0.0001160689999999999, 0.00011605500000000032,...</msg>
<status status="PASS" starttime="20201030 15:55:28.197" endtime="20201030 15:55:28.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.204" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.203" endtime="20201030 15:55:28.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.206" level="INFO">VALUE: [0.00011622199999999916, 0.00011605500000000032, 0.00011608299999999946, 0.00011604200000000023, 0.00011602799999999719, 0.00011602799999999719, 0.0001160689999999999, 0.00011605500000000032, 0.00011604100000000075, 0.00011604100000000075, 0.00011601399999999762, 0.00011604200000000023, 0.00011605500000000032, 0.00011606999999999937, 0.00011598600000000195, 0.00011604100000000075, 0.00011602799999999719, 0.00011602800000000066, 0.00011602800000000066, 0.00011605499999999686, 0.00011604100000000075, 0.00011606999999999937, 0.00011601400000000109, 0.00011602800000000066, 0.00011605500000000032, 0.00011604099999999729, 0.00011604100000000075, 0.00011606999999999937, 0.00011604200000000023, 0.00011606999999999937, 0.0001160689999999999, 0.00011604200000000023, 0.00011604100000000075, 0.0001160559999999998, 0.00011604100000000075, 0.0001160970000000025, 0.00011601400000000109, 0.00011604200000000023, 0.00011604199999999676, 0.00011611100000000207, 0.00011604200000000023, 0.00011604200000000023, 0.00011604200000000023, 0.0001160559999999998, 0.00011604099999999729, 0.00011611199999999808, 0.00011605500000000032, 0.00011601400000000109, 0.00011604100000000075, 0.00011608299999999946]</msg>
<status status="PASS" starttime="20201030 15:55:28.205" endtime="20201030 15:55:28.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.200" endtime="20201030 15:55:28.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.211" endtime="20201030 15:55:28.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.210" endtime="20201030 15:55:28.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.209" endtime="20201030 15:55:28.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.832" endtime="20201030 15:55:28.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.831" endtime="20201030 15:55:28.232"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.241" endtime="20201030 15:55:28.261"></status>
</kw>
<msg timestamp="20201030 15:55:28.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.239" endtime="20201030 15:55:28.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.262" endtime="20201030 15:55:28.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.265" endtime="20201030 15:55:28.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.237" endtime="20201030 15:55:28.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.235" endtime="20201030 15:55:28.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.274" endtime="20201030 15:55:28.559"></status>
</kw>
<msg timestamp="20201030 15:55:28.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.272" endtime="20201030 15:55:28.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.563" endtime="20201030 15:55:28.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.571" endtime="20201030 15:55:28.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.269" endtime="20201030 15:55:28.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.268" endtime="20201030 15:55:28.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.578" level="INFO">${RESULT} = [{'diff': 0.00011626400000000134}, {'diff': 0.0001160689999999999}, {'diff': 0.00011608400000000241}, {'diff': 0.00011605500000000032}, {'diff': 0.00011606999999999937}, {'diff': 0.0001160549999999968...</msg>
<status status="PASS" starttime="20201030 15:55:28.575" endtime="20201030 15:55:28.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.582" level="INFO">${ACCURACY} = {'diff': [0.00011626400000000134, 0.0001160689999999999, 0.00011608400000000241, 0.00011605500000000032, 0.00011606999999999937, 0.00011605499999999686, 0.00011601399999999762, 0.00011608400000000241,...</msg>
<status status="PASS" starttime="20201030 15:55:28.579" endtime="20201030 15:55:28.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.586" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.585" endtime="20201030 15:55:28.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.588" level="INFO">VALUE: [0.00011626400000000134, 0.0001160689999999999, 0.00011608400000000241, 0.00011605500000000032, 0.00011606999999999937, 0.00011605499999999686, 0.00011601399999999762, 0.00011608400000000241, 0.0001160559999999998, 0.0001160559999999998, 0.00011606999999999937, 0.00011608299999999946, 0.0001160559999999998, 0.00011606999999999937, 0.00011612500000000164, 0.00011609699999999903, 0.00011604100000000075, 0.00011612499999999817, 0.0001160559999999998, 0.0001161109999999986, 0.00011604200000000023, 0.0001160689999999999, 0.0001160689999999999, 0.0001160689999999999, 0.00011608299999999946, 0.00011608299999999946, 0.00011609799999999851, 0.00011609699999999903, 0.0001160689999999999, 0.00011608299999999946, 0.0001160559999999998, 0.00011608299999999946, 0.0001160689999999999, 0.00011604100000000075, 0.00011608399999999894, 0.00011605500000000032, 0.00011600000000000152, 0.0001160559999999998, 0.00011608299999999946, 0.00011602800000000066, 0.00011611100000000207, 0.00011608299999999946, 0.0001160689999999999, 0.00011602800000000066, 0.0001160689999999999, 0.00011605500000000032, 0.00011606999999999937, 0.00011606999999999937, 0.00011607000000000284, 0.0001160559999999998]</msg>
<status status="PASS" starttime="20201030 15:55:28.587" endtime="20201030 15:55:28.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.583" endtime="20201030 15:55:28.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.594" endtime="20201030 15:55:28.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.593" endtime="20201030 15:55:28.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.592" endtime="20201030 15:55:28.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.233" endtime="20201030 15:55:28.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.233" endtime="20201030 15:55:28.615"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.624" endtime="20201030 15:55:28.643"></status>
</kw>
<msg timestamp="20201030 15:55:28.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.622" endtime="20201030 15:55:28.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.644" endtime="20201030 15:55:28.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.647" endtime="20201030 15:55:28.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.619" endtime="20201030 15:55:28.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.617" endtime="20201030 15:55:28.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.655" endtime="20201030 15:55:28.942"></status>
</kw>
<msg timestamp="20201030 15:55:28.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.654" endtime="20201030 15:55:28.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.947" endtime="20201030 15:55:28.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.957" endtime="20201030 15:55:28.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.651" endtime="20201030 15:55:28.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.650" endtime="20201030 15:55:28.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.967" level="INFO">${RESULT} = [{'diff': 0.0001162499999999983}, {'diff': 0.00011608299999999946}, {'diff': 0.00011604200000000023}, {'diff': 0.00011608299999999946}, {'diff': 0.00011604200000000023}, {'diff': 0.0001160139999999976...</msg>
<status status="PASS" starttime="20201030 15:55:28.963" endtime="20201030 15:55:28.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.975" level="INFO">${ACCURACY} = {'diff': [0.0001162499999999983, 0.00011608299999999946, 0.00011604200000000023, 0.00011608299999999946, 0.00011604200000000023, 0.00011601399999999762, 0.00011602700000000118, 0.0001160970000000025, ...</msg>
<status status="PASS" starttime="20201030 15:55:28.968" endtime="20201030 15:55:28.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.979" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.978" endtime="20201030 15:55:28.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.982" level="INFO">VALUE: [0.0001162499999999983, 0.00011608299999999946, 0.00011604200000000023, 0.00011608299999999946, 0.00011604200000000023, 0.00011601399999999762, 0.00011602700000000118, 0.0001160970000000025, 0.00011602700000000118, 0.00011604199999999676, 0.00011605500000000032, 0.00011604100000000075, 0.00011608299999999946, 0.00011604100000000075, 0.0001160559999999998, 0.00011604200000000023, 0.00011604100000000075, 0.00011605499999999686, 0.0001160559999999998, 0.00011604099999999729, 0.00011605500000000032, 0.00011605500000000032, 0.0001160559999999998, 0.00011602800000000066, 0.00011604100000000075, 0.00011605500000000032, 0.00011598600000000195, 0.00011604200000000023, 0.00011604200000000023, 0.00011604200000000023, 0.00011604200000000023, 0.00011607000000000284, 0.0001160559999999998, 0.00011604200000000023, 0.00011608299999999946, 0.00011604100000000075, 0.0001160689999999999, 0.00011606999999999937, 0.00011597199999999891, 0.00011604100000000075, 0.00011601400000000109, 0.00011604200000000023, 0.00011605500000000032, 0.00011604100000000075, 0.00011602800000000066, 0.0001160559999999998, 0.00011602800000000066, 0.00011601399999999762, 0.00011604200000000023, 0.00011604100000000075]</msg>
<status status="PASS" starttime="20201030 15:55:28.980" endtime="20201030 15:55:28.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.975" endtime="20201030 15:55:28.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.986" endtime="20201030 15:55:29.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.985" endtime="20201030 15:55:29.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.984" endtime="20201030 15:55:29.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.616" endtime="20201030 15:55:29.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.615" endtime="20201030 15:55:29.007"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.016" endtime="20201030 15:55:29.035"></status>
</kw>
<msg timestamp="20201030 15:55:29.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.014" endtime="20201030 15:55:29.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.037" endtime="20201030 15:55:29.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.039" endtime="20201030 15:55:29.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.012" endtime="20201030 15:55:29.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.010" endtime="20201030 15:55:29.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.048" endtime="20201030 15:55:29.335"></status>
</kw>
<msg timestamp="20201030 15:55:29.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.046" endtime="20201030 15:55:29.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.339" endtime="20201030 15:55:29.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.347" endtime="20201030 15:55:29.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.044" endtime="20201030 15:55:29.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.042" endtime="20201030 15:55:29.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.355" level="INFO">${RESULT} = [{'diff': 0.00011626400000000134}, {'diff': 0.00011608399999999894}, {'diff': 0.00011605500000000032}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160689999999999}, {'diff': 0.00011606999999999937...</msg>
<status status="PASS" starttime="20201030 15:55:29.351" endtime="20201030 15:55:29.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.359" level="INFO">${ACCURACY} = {'diff': [0.00011626400000000134, 0.00011608399999999894, 0.00011605500000000032, 0.0001160559999999998, 0.0001160689999999999, 0.00011606999999999937, 0.00011604200000000023, 0.00011602800000000066, ...</msg>
<status status="PASS" starttime="20201030 15:55:29.356" endtime="20201030 15:55:29.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.364" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.363" endtime="20201030 15:55:29.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.366" level="INFO">VALUE: [0.00011626400000000134, 0.00011608399999999894, 0.00011605500000000032, 0.0001160559999999998, 0.0001160689999999999, 0.00011606999999999937, 0.00011604200000000023, 0.00011602800000000066, 0.00011604200000000023, 0.0001160689999999999, 0.00011606999999999937, 0.00011605500000000032, 0.00011605500000000032, 0.00011605500000000032, 0.00011604200000000023, 0.0001160559999999998, 0.00011605500000000032, 0.0001160559999999998, 0.00011608299999999946, 0.00011606999999999937, 0.00011609799999999851, 0.00011605500000000032, 0.00011600000000000152, 0.0001160970000000025, 0.0001160689999999999, 0.00011605500000000032, 0.00011605500000000032, 0.0001160689999999999, 0.00011604200000000023, 0.0001160559999999998, 0.00011604200000000023, 0.00011599999999999805, 0.00011604200000000023, 0.0001161109999999986, 0.00011604200000000023, 0.00011609699999999903, 0.0001160689999999999, 0.00011600000000000152, 0.0001160970000000025, 0.00011604200000000023, 0.0001160689999999999, 0.0001160559999999998, 0.0001160689999999999, 0.00011604200000000023, 0.00011604200000000023, 0.0001160559999999998, 0.00011605600000000327, 0.00011604200000000023, 0.0001160559999999998, 0.0001160559999999998]</msg>
<status status="PASS" starttime="20201030 15:55:29.365" endtime="20201030 15:55:29.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.360" endtime="20201030 15:55:29.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.371" endtime="20201030 15:55:29.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.370" endtime="20201030 15:55:29.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.368" endtime="20201030 15:55:29.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.008" endtime="20201030 15:55:29.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.008" endtime="20201030 15:55:29.392"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.400" endtime="20201030 15:55:29.421"></status>
</kw>
<msg timestamp="20201030 15:55:29.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.399" endtime="20201030 15:55:29.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.422" endtime="20201030 15:55:29.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.425" endtime="20201030 15:55:29.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.396" endtime="20201030 15:55:29.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.394" endtime="20201030 15:55:29.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.433" endtime="20201030 15:55:29.719"></status>
</kw>
<msg timestamp="20201030 15:55:29.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.432" endtime="20201030 15:55:29.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.723" endtime="20201030 15:55:29.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.731" endtime="20201030 15:55:29.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.429" endtime="20201030 15:55:29.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.428" endtime="20201030 15:55:29.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.738" level="INFO">${RESULT} = [{'diff': 0.00011619400000000002}, {'diff': 0.00011601299999999815}, {'diff': 0.0001160689999999999}, {'diff': 0.00011604200000000023}, {'diff': 0.00011604199999999676}, {'diff': 0.0001160689999999999...</msg>
<status status="PASS" starttime="20201030 15:55:29.735" endtime="20201030 15:55:29.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.742" level="INFO">${ACCURACY} = {'diff': [0.00011619400000000002, 0.00011601299999999815, 0.0001160689999999999, 0.00011604200000000023, 0.00011604199999999676, 0.0001160689999999999, 0.0001160559999999998, 0.00011609699999999903, 0...</msg>
<status status="PASS" starttime="20201030 15:55:29.739" endtime="20201030 15:55:29.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.746" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.745" endtime="20201030 15:55:29.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.748" level="INFO">VALUE: [0.00011619400000000002, 0.00011601299999999815, 0.0001160689999999999, 0.00011604200000000023, 0.00011604199999999676, 0.0001160689999999999, 0.0001160559999999998, 0.00011609699999999903, 0.0001161109999999986, 0.00011604200000000023, 0.0001160559999999998, 0.00011604200000000023, 0.00011604200000000023, 0.00011601400000000109, 0.00011604100000000075, 0.00011604200000000023, 0.0001160559999999998, 0.00011608300000000293, 0.00011604200000000023, 0.00011605500000000032, 0.00011604099999999729, 0.00011611100000000207, 0.00011606999999999937, 0.00011609699999999903, 0.00011606999999999937, 0.00011605600000000327, 0.0001160689999999999, 0.00011601299999999815, 0.0001160559999999998, 0.0001160559999999998, 0.00011605499999999686, 0.00011605500000000032, 0.00011605500000000032, 0.0001160559999999998, 0.00011605500000000032, 0.00011606999999999937, 0.00011605500000000032, 0.0001160559999999998, 0.00011605500000000032, 0.0001160689999999999, 0.00011608300000000293, 0.00011606999999999937, 0.00011602800000000066, 0.00011602800000000066, 0.0001160689999999999, 0.0001160559999999998, 0.00011605500000000032, 0.00011604200000000023, 0.0001160559999999998, 0.00011608299999999946]</msg>
<status status="PASS" starttime="20201030 15:55:29.747" endtime="20201030 15:55:29.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.743" endtime="20201030 15:55:29.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.754" endtime="20201030 15:55:29.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.753" endtime="20201030 15:55:29.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.752" endtime="20201030 15:55:29.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.393" endtime="20201030 15:55:29.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.392" endtime="20201030 15:55:29.775"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.784" endtime="20201030 15:55:29.803"></status>
</kw>
<msg timestamp="20201030 15:55:29.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.782" endtime="20201030 15:55:29.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.804" endtime="20201030 15:55:29.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.807" endtime="20201030 15:55:29.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.780" endtime="20201030 15:55:29.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.777" endtime="20201030 15:55:29.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.816" endtime="20201030 15:55:30.100"></status>
</kw>
<msg timestamp="20201030 15:55:30.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:29.814" endtime="20201030 15:55:30.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:30.105" endtime="20201030 15:55:30.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.113" endtime="20201030 15:55:30.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.812" endtime="20201030 15:55:30.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.810" endtime="20201030 15:55:30.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.119" level="INFO">${RESULT} = [{'diff': 0.00011626400000000134}, {'diff': 0.00011601400000000109}, {'diff': 0.00011601399999999762}, {'diff': 0.00011605500000000032}, {'diff': 0.00011601400000000109}, {'diff': 0.000116110999999998...</msg>
<status status="PASS" starttime="20201030 15:55:30.116" endtime="20201030 15:55:30.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.124" level="INFO">${ACCURACY} = {'diff': [0.00011626400000000134, 0.00011601400000000109, 0.00011601399999999762, 0.00011605500000000032, 0.00011601400000000109, 0.0001161109999999986, 0.00011608299999999946, 0.00011608400000000241,...</msg>
<status status="PASS" starttime="20201030 15:55:30.121" endtime="20201030 15:55:30.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.129" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.128" endtime="20201030 15:55:30.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.131" level="INFO">VALUE: [0.00011626400000000134, 0.00011601400000000109, 0.00011601399999999762, 0.00011605500000000032, 0.00011601400000000109, 0.0001161109999999986, 0.00011608299999999946, 0.00011608400000000241, 0.00011608399999999894, 0.0001160689999999999, 0.00011608299999999946, 0.00011606999999999937, 0.00011606999999999937, 0.0001161109999999986, 0.00011608299999999946, 0.00011602699999999772, 0.00011608300000000293, 0.00011612499999999817, 0.00011615300000000078, 0.0001160689999999999, 0.00011613899999999774, 0.00011608400000000241, 0.00011605500000000032, 0.00011612499999999817, 0.00011605500000000032, 0.00011605500000000032, 0.00011607000000000284, 0.0001160559999999998, 0.0001160689999999999, 0.00011606999999999937, 0.00011606999999999937, 0.00011604100000000075, 0.00011609699999999903, 0.00011604200000000023, 0.00011606900000000336, 0.00011604099999999729, 0.00011604199999999676, 0.0001160689999999999, 0.00011607000000000284, 0.0001161109999999986, 0.00011604100000000075, 0.0001160689999999999, 0.00011611100000000207, 0.00011604200000000023, 0.00011605500000000032, 0.00011604200000000023, 0.00011604199999999676, 0.00011612499999999817, 0.00011606999999999937, 0.0001160689999999999]</msg>
<status status="PASS" starttime="20201030 15:55:30.130" endtime="20201030 15:55:30.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.125" endtime="20201030 15:55:30.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.136" endtime="20201030 15:55:30.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.135" endtime="20201030 15:55:30.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.134" endtime="20201030 15:55:30.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.776" endtime="20201030 15:55:30.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.775" endtime="20201030 15:55:30.157"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.166" endtime="20201030 15:55:30.185"></status>
</kw>
<msg timestamp="20201030 15:55:30.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.164" endtime="20201030 15:55:30.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.186" endtime="20201030 15:55:30.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.188" endtime="20201030 15:55:30.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.161" endtime="20201030 15:55:30.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.159" endtime="20201030 15:55:30.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.197" endtime="20201030 15:55:30.484"></status>
</kw>
<msg timestamp="20201030 15:55:30.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.196" endtime="20201030 15:55:30.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.489" endtime="20201030 15:55:30.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.497" endtime="20201030 15:55:30.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.193" endtime="20201030 15:55:30.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.192" endtime="20201030 15:55:30.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.503" level="INFO">${RESULT} = [{'diff': 0.0001162499999999983}, {'diff': 0.0001160559999999998}, {'diff': 0.00011601400000000109}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160559999999998}, {'diff': 0.00011611200000000155},...</msg>
<status status="PASS" starttime="20201030 15:55:30.500" endtime="20201030 15:55:30.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.507" level="INFO">${ACCURACY} = {'diff': [0.0001162499999999983, 0.0001160559999999998, 0.00011601400000000109, 0.0001160559999999998, 0.0001160559999999998, 0.00011611200000000155, 0.00011606999999999937, 0.00011605500000000032, 0....</msg>
<status status="PASS" starttime="20201030 15:55:30.504" endtime="20201030 15:55:30.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.519" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.517" endtime="20201030 15:55:30.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.524" level="INFO">VALUE: [0.0001162499999999983, 0.0001160559999999998, 0.00011601400000000109, 0.0001160559999999998, 0.0001160559999999998, 0.00011611200000000155, 0.00011606999999999937, 0.00011605500000000032, 0.0001160689999999999, 0.00011604200000000023, 0.0001160559999999998, 0.00011612500000000164, 0.0001160559999999998, 0.00011608299999999946, 0.00011607000000000284, 0.00011605500000000032, 0.0001160689999999999, 0.00011611100000000207, 0.0001160559999999998, 0.00011608299999999946, 0.00011608299999999946, 0.00011613899999999774, 0.00011609699999999903, 0.0001160689999999999, 0.00011606999999999937, 0.00011604200000000023, 0.00011608300000000293, 0.00011606999999999937, 0.00011601400000000109, 0.00011608300000000293, 0.0001160689999999999, 0.0001160689999999999, 0.00011602799999999719, 0.0001160689999999999, 0.0001160689999999999, 0.0001160559999999998, 0.0001160689999999999, 0.00011601400000000109, 0.00011606999999999937, 0.0001160559999999998, 0.00011604099999999729, 0.0001160689999999999, 0.0001160559999999998, 0.0001160559999999998, 0.00011602800000000066, 0.0001160559999999998, 0.00011611199999999808, 0.00011608299999999946, 0.0001160559999999998, 0.00011608299999999946]</msg>
<status status="PASS" starttime="20201030 15:55:30.521" endtime="20201030 15:55:30.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.508" endtime="20201030 15:55:30.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.532" endtime="20201030 15:55:30.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.529" endtime="20201030 15:55:30.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.527" endtime="20201030 15:55:30.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.158" endtime="20201030 15:55:30.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.157" endtime="20201030 15:55:30.554"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.563" endtime="20201030 15:55:30.583"></status>
</kw>
<msg timestamp="20201030 15:55:30.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.561" endtime="20201030 15:55:30.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.584" endtime="20201030 15:55:30.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.587" endtime="20201030 15:55:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.558" endtime="20201030 15:55:30.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.556" endtime="20201030 15:55:30.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.596" endtime="20201030 15:55:30.884"></status>
</kw>
<msg timestamp="20201030 15:55:30.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023962403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.594" endtime="20201030 15:55:30.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023962403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.888" endtime="20201030 15:55:30.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.896" endtime="20201030 15:55:30.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.592" endtime="20201030 15:55:30.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.590" endtime="20201030 15:55:30.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.903" level="INFO">${RESULT} = [{'diff': 0.00011616700000000035}, {'diff': 0.00011606999999999937}, {'diff': 0.00011605500000000032}, {'diff': 0.00011606999999999937}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160420000000002...</msg>
<status status="PASS" starttime="20201030 15:55:30.900" endtime="20201030 15:55:30.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.907" level="INFO">${ACCURACY} = {'diff': [0.00011616700000000035, 0.00011606999999999937, 0.00011605500000000032, 0.00011606999999999937, 0.0001160559999999998, 0.00011604200000000023, 0.0001160559999999998, 0.00011608299999999946, ...</msg>
<status status="PASS" starttime="20201030 15:55:30.904" endtime="20201030 15:55:30.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.911" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.910" endtime="20201030 15:55:30.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.914" level="INFO">VALUE: [0.00011616700000000035, 0.00011606999999999937, 0.00011605500000000032, 0.00011606999999999937, 0.0001160559999999998, 0.00011604200000000023, 0.0001160559999999998, 0.00011608299999999946, 0.00011602699999999772, 0.00011604099999999729, 0.00011605499999999686, 0.00011598599999999848, 0.00011604100000000075, 0.00011606999999999937, 0.00011602799999999719, 0.0001160559999999998, 0.00011605500000000032, 0.0001160559999999998, 0.0001160689999999999, 0.00011607000000000284, 0.00011604200000000023, 0.0001160559999999998, 0.0001160559999999998, 0.0001161109999999986, 0.00011599999999999805, 0.00011605600000000327, 0.00011609699999999903, 0.0001160689999999999, 0.0001160559999999998, 0.0001160970000000025, 0.0001160689999999999, 0.0001160689999999999, 0.00011608299999999946, 0.00011608399999999894, 0.0001160559999999998, 0.0001160559999999998, 0.00011607000000000284, 0.0001160559999999998, 0.00011608399999999894, 0.00011604200000000023, 0.0001160689999999999, 0.00011613899999999774, 0.00011608299999999946, 0.00011608300000000293, 0.00011609699999999903, 0.00011609699999999903, 0.00011605600000000327, 0.00011605500000000032, 0.0001160689999999999, 0.00011605500000000032]</msg>
<status status="PASS" starttime="20201030 15:55:30.912" endtime="20201030 15:55:30.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.908" endtime="20201030 15:55:30.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.919" endtime="20201030 15:55:30.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.918" endtime="20201030 15:55:30.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.917" endtime="20201030 15:55:30.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.554" endtime="20201030 15:55:30.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.554" endtime="20201030 15:55:30.940"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.949" endtime="20201030 15:55:30.968"></status>
</kw>
<msg timestamp="20201030 15:55:30.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.947" endtime="20201030 15:55:30.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.969" endtime="20201030 15:55:30.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.972" endtime="20201030 15:55:30.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.945" endtime="20201030 15:55:30.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.943" endtime="20201030 15:55:30.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.981" endtime="20201030 15:55:31.284"></status>
</kw>
<msg timestamp="20201030 15:55:31.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.979" endtime="20201030 15:55:31.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.288" endtime="20201030 15:55:31.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.296" endtime="20201030 15:55:31.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.977" endtime="20201030 15:55:31.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.975" endtime="20201030 15:55:31.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.303" level="INFO">${RESULT} = [{'diff': 0.00011623599999999873}, {'diff': 0.00011609800000000198}, {'diff': 0.00011606999999999937}, {'diff': 0.0001160559999999998}, {'diff': 0.00011605500000000032}, {'diff': 0.0001160410000000007...</msg>
<status status="PASS" starttime="20201030 15:55:31.299" endtime="20201030 15:55:31.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.307" level="INFO">${ACCURACY} = {'diff': [0.00011623599999999873, 0.00011609800000000198, 0.00011606999999999937, 0.0001160559999999998, 0.00011605500000000032, 0.00011604100000000075, 0.00011609800000000198, 0.00011604100000000075,...</msg>
<status status="PASS" starttime="20201030 15:55:31.304" endtime="20201030 15:55:31.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.312" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.311" endtime="20201030 15:55:31.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.314" level="INFO">VALUE: [0.00011623599999999873, 0.00011609800000000198, 0.00011606999999999937, 0.0001160559999999998, 0.00011605500000000032, 0.00011604100000000075, 0.00011609800000000198, 0.00011604100000000075, 0.0001160689999999999, 0.00011599999999999805, 0.00011605500000000032, 0.00011604199999999676, 0.0001160689999999999, 0.00011605500000000032, 0.0001160559999999998, 0.0001160559999999998, 0.00011604200000000023, 0.00011605500000000032, 0.00011602799999999719, 0.0001160689999999999, 0.00011608299999999946, 0.00011606999999999937, 0.00011605500000000032, 0.00011606999999999937, 0.00011602800000000066, 0.0001160559999999998, 0.0001160559999999998, 0.00011605600000000327, 0.0001161109999999986, 0.00011604200000000023, 0.0001160559999999998, 0.00011604200000000023, 0.00011604200000000023, 0.00011605500000000032, 0.00011605500000000032, 0.00011605500000000032, 0.00011604200000000023, 0.00011605500000000032, 0.00011606999999999937, 0.00011606999999999937, 0.00011602800000000066, 0.00011605500000000032, 0.00011605499999999686, 0.0001160689999999999, 0.0001160689999999999, 0.00011605500000000032, 0.00011604200000000023, 0.0001160559999999998, 0.00011605500000000032, 0.00011606999999999937]</msg>
<status status="PASS" starttime="20201030 15:55:31.313" endtime="20201030 15:55:31.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.308" endtime="20201030 15:55:31.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.319" endtime="20201030 15:55:31.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.318" endtime="20201030 15:55:31.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.317" endtime="20201030 15:55:31.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.941" endtime="20201030 15:55:31.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.941" endtime="20201030 15:55:31.340"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.349" endtime="20201030 15:55:31.367"></status>
</kw>
<msg timestamp="20201030 15:55:31.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.347" endtime="20201030 15:55:31.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.369" endtime="20201030 15:55:31.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.372" endtime="20201030 15:55:31.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.344" endtime="20201030 15:55:31.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.342" endtime="20201030 15:55:31.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.380" endtime="20201030 15:55:31.667"></status>
</kw>
<msg timestamp="20201030 15:55:31.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.379" endtime="20201030 15:55:31.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.671" endtime="20201030 15:55:31.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.679" endtime="20201030 15:55:31.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.376" endtime="20201030 15:55:31.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.375" endtime="20201030 15:55:31.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.685" level="INFO">${RESULT} = [{'diff': 0.00011626399999999787}, {'diff': 0.00011606999999999937}, {'diff': 0.00011611100000000207}, {'diff': 0.0001160689999999999}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160689999999999}...</msg>
<status status="PASS" starttime="20201030 15:55:31.682" endtime="20201030 15:55:31.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.689" level="INFO">${ACCURACY} = {'diff': [0.00011626399999999787, 0.00011606999999999937, 0.00011611100000000207, 0.0001160689999999999, 0.0001160559999999998, 0.0001160689999999999, 0.00011608299999999946, 0.00011608299999999946, 0...</msg>
<status status="PASS" starttime="20201030 15:55:31.686" endtime="20201030 15:55:31.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.694" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.693" endtime="20201030 15:55:31.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.696" level="INFO">VALUE: [0.00011626399999999787, 0.00011606999999999937, 0.00011611100000000207, 0.0001160689999999999, 0.0001160559999999998, 0.0001160689999999999, 0.00011608299999999946, 0.00011608299999999946, 0.00011608299999999946, 0.0001160689999999999, 0.00011602800000000066, 0.00011606999999999937, 0.00011604200000000023, 0.00011601299999999815, 0.00011608399999999894, 0.00011608400000000241, 0.00011607000000000284, 0.0001160689999999999, 0.00011608299999999946, 0.00011606999999999937, 0.00011608399999999894, 0.00011608300000000293, 0.00011604100000000075, 0.00011607000000000284, 0.0001160559999999998, 0.00011606999999999937, 0.00011604200000000023, 0.00011608299999999946, 0.00011612500000000164, 0.00011606999999999937, 0.00011608299999999946, 0.00011604200000000023, 0.00011608299999999946, 0.00011607000000000284, 0.00011611200000000155, 0.0001160559999999998, 0.00011607000000000284, 0.00011605500000000032, 0.00011608399999999894, 0.0001160689999999999, 0.0001161109999999986, 0.00011600000000000152, 0.00011605500000000032, 0.00011608299999999946, 0.00011608399999999894, 0.0001160689999999999, 0.00011609699999999903, 0.0001160559999999998, 0.0001160559999999998, 0.0001160689999999999]</msg>
<status status="PASS" starttime="20201030 15:55:31.695" endtime="20201030 15:55:31.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.690" endtime="20201030 15:55:31.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.701" endtime="20201030 15:55:31.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.700" endtime="20201030 15:55:31.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.699" endtime="20201030 15:55:31.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.341" endtime="20201030 15:55:31.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.340" endtime="20201030 15:55:31.722"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.731" endtime="20201030 15:55:31.751"></status>
</kw>
<msg timestamp="20201030 15:55:31.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.729" endtime="20201030 15:55:31.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.752" endtime="20201030 15:55:31.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.755" endtime="20201030 15:55:31.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.727" endtime="20201030 15:55:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.724" endtime="20201030 15:55:31.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.764" endtime="20201030 15:55:32.049"></status>
</kw>
<msg timestamp="20201030 15:55:32.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.762" endtime="20201030 15:55:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.053" endtime="20201030 15:55:32.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.061" endtime="20201030 15:55:32.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.759" endtime="20201030 15:55:32.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.758" endtime="20201030 15:55:32.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.068" level="INFO">${RESULT} = [{'diff': 0.00011625000000000177}, {'diff': 0.00011601400000000109}, {'diff': 0.00011608399999999894}, {'diff': 0.00011608400000000241}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160140000000010...</msg>
<status status="PASS" starttime="20201030 15:55:32.065" endtime="20201030 15:55:32.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.072" level="INFO">${ACCURACY} = {'diff': [0.00011625000000000177, 0.00011601400000000109, 0.00011608399999999894, 0.00011608400000000241, 0.0001160559999999998, 0.00011601400000000109, 0.00011606999999999937, 0.00011609799999999851,...</msg>
<status status="PASS" starttime="20201030 15:55:32.069" endtime="20201030 15:55:32.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.076" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.075" endtime="20201030 15:55:32.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.079" level="INFO">VALUE: [0.00011625000000000177, 0.00011601400000000109, 0.00011608399999999894, 0.00011608400000000241, 0.0001160559999999998, 0.00011601400000000109, 0.00011606999999999937, 0.00011609799999999851, 0.00011609800000000198, 0.0001160689999999999, 0.00011606999999999937, 0.0001160559999999998, 0.00011608399999999894, 0.00011609699999999903, 0.00011606999999999937, 0.00011608399999999894, 0.00011608300000000293, 0.0001160689999999999, 0.0001160559999999998, 0.00011599999999999805, 0.0001160689999999999, 0.0001160689999999999, 0.00011608300000000293, 0.00011608299999999946, 0.00011608400000000241, 0.00011607000000000284, 0.0001161109999999986, 0.00011600000000000152, 0.0001160559999999998, 0.00011605500000000032, 0.0001160689999999999, 0.00011606999999999937, 0.00011608400000000241, 0.00011608299999999946, 0.00011609699999999903, 0.00011608299999999946, 0.00011606999999999937, 0.00011606999999999937, 0.0001160689999999999, 0.00011605500000000032, 0.00011597299999999838, 0.00011611199999999808, 0.00011608399999999894, 0.00011609699999999903, 0.00011608300000000293, 0.00011605500000000032, 0.00011606999999999937, 0.00011609799999999851, 0.0001160559999999998, 0.00011604200000000023]</msg>
<status status="PASS" starttime="20201030 15:55:32.077" endtime="20201030 15:55:32.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.073" endtime="20201030 15:55:32.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.084" endtime="20201030 15:55:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.083" endtime="20201030 15:55:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.082" endtime="20201030 15:55:32.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.723" endtime="20201030 15:55:32.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.722" endtime="20201030 15:55:32.105"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.114" endtime="20201030 15:55:32.133"></status>
</kw>
<msg timestamp="20201030 15:55:32.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.112" endtime="20201030 15:55:32.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.134" endtime="20201030 15:55:32.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.137" endtime="20201030 15:55:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.110" endtime="20201030 15:55:32.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.108" endtime="20201030 15:55:32.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.146" endtime="20201030 15:55:32.432"></status>
</kw>
<msg timestamp="20201030 15:55:32.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02184625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:32.144" endtime="20201030 15:55:32.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02184625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:32.436" endtime="20201030 15:55:32.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.445" endtime="20201030 15:55:32.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.142" endtime="20201030 15:55:32.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.140" endtime="20201030 15:55:32.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.451" level="INFO">${RESULT} = [{'diff': 0.00011619400000000002}, {'diff': 0.00011604100000000075}, {'diff': 0.0001160559999999998}, {'diff': 0.00011605600000000327}, {'diff': 0.00011604200000000023}, {'diff': 0.0001159870000000014...</msg>
<status status="PASS" starttime="20201030 15:55:32.448" endtime="20201030 15:55:32.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.459" level="INFO">${ACCURACY} = {'diff': [0.00011619400000000002, 0.00011604100000000075, 0.0001160559999999998, 0.00011605600000000327, 0.00011604200000000023, 0.00011598700000000142, 0.0001160559999999998, 0.00011606999999999937, ...</msg>
<status status="PASS" starttime="20201030 15:55:32.452" endtime="20201030 15:55:32.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.463" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.462" endtime="20201030 15:55:32.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.466" level="INFO">VALUE: [0.00011619400000000002, 0.00011604100000000075, 0.0001160559999999998, 0.00011605600000000327, 0.00011604200000000023, 0.00011598700000000142, 0.0001160559999999998, 0.00011606999999999937, 0.00011604200000000023, 0.00011608299999999946, 0.00011604200000000023, 0.00011601400000000109, 0.00011606999999999937, 0.00011604099999999729, 0.00011602800000000066, 0.00011604100000000075, 0.00011608299999999946, 0.0001160559999999998, 0.0001160559999999998, 0.00011609699999999903, 0.00011606999999999937, 0.00011604200000000023, 0.00011602800000000066, 0.0001160559999999998, 0.0001160559999999998, 0.00011605500000000032, 0.00011606999999999937, 0.00011604100000000075, 0.0001160559999999998, 0.00011599999999999805, 0.00011602800000000066, 0.00011605500000000032, 0.00011608299999999946, 0.00011608300000000293, 0.00011606999999999937, 0.0001160970000000025, 0.00011606999999999937, 0.00011612499999999817, 0.00011608299999999946, 0.0001160689999999999, 0.00011605500000000032, 0.0001160559999999998, 0.00011604200000000023, 0.00011605500000000032, 0.00011606999999999937, 0.0001160689999999999, 0.0001160689999999999, 0.0001160689999999999, 0.00011612500000000164, 0.00011602800000000066]</msg>
<status status="PASS" starttime="20201030 15:55:32.464" endtime="20201030 15:55:32.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.460" endtime="20201030 15:55:32.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.471" endtime="20201030 15:55:32.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.469" endtime="20201030 15:55:32.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.468" endtime="20201030 15:55:32.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.106" endtime="20201030 15:55:32.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.106" endtime="20201030 15:55:32.492"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.500" endtime="20201030 15:55:32.519"></status>
</kw>
<msg timestamp="20201030 15:55:32.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.499" endtime="20201030 15:55:32.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.521" endtime="20201030 15:55:32.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.523" endtime="20201030 15:55:32.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.496" endtime="20201030 15:55:32.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.494" endtime="20201030 15:55:32.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.532" endtime="20201030 15:55:32.863"></status>
</kw>
<msg timestamp="20201030 15:55:32.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.531" endtime="20201030 15:55:32.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.867" endtime="20201030 15:55:32.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.875" endtime="20201030 15:55:32.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.528" endtime="20201030 15:55:32.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.526" endtime="20201030 15:55:32.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.882" level="INFO">${RESULT} = [{'diff': 0.00011766599999999891}, {'diff': 0.00011752800000000216}, {'diff': 0.00011608299999999946}, {'diff': 0.00011717999999999798}, {'diff': 0.00011619400000000002}, {'diff': 0.000117792000000001...</msg>
<status status="PASS" starttime="20201030 15:55:32.879" endtime="20201030 15:55:32.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.886" level="INFO">${ACCURACY} = {'diff': [0.00011766599999999891, 0.00011752800000000216, 0.00011608299999999946, 0.00011717999999999798, 0.00011619400000000002, 0.00011779200000000198, 0.00011729199999999801, 0.00011797200000000091...</msg>
<status status="PASS" starttime="20201030 15:55:32.883" endtime="20201030 15:55:32.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.890" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.889" endtime="20201030 15:55:32.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.893" level="INFO">VALUE: [0.00011766599999999891, 0.00011752800000000216, 0.00011608299999999946, 0.00011717999999999798, 0.00011619400000000002, 0.00011779200000000198, 0.00011729199999999801, 0.00011797200000000091, 0.00011737499999999942, 0.00011730500000000157, 0.00011741699999999813, 0.00011773600000000023, 0.00011762499999999967, 0.00011749999999999955, 0.00011776399999999937, 0.00011737499999999942, 0.0001172369999999992, 0.0001172499999999993, 0.00011738900000000246, 0.00011772200000000066, 0.00011604200000000023, 0.000117695000000001, 0.00011786100000000035, 0.00011755599999999783, 0.00011726400000000234, 0.00011757000000000087, 0.00011718000000000145, 0.00011751399999999912, 0.00011769499999999752, 0.0001175699999999974, 0.0001160689999999999, 0.00011782000000000112, 0.00011719399999999755, 0.00011731900000000114, 0.00011736099999999985, 0.0001172629999999994, 0.00011723599999999973, 0.00011766600000000238, 0.00011752800000000216, 0.00011736099999999985, 0.00011762499999999967, 0.00011737499999999942, 0.00011619400000000002, 0.00011620899999999906, 0.00011726400000000234, 0.00011736099999999985, 0.00011766699999999838, 0.00011754200000000173, 0.00011768100000000142, 0.00011718100000000092]</msg>
<status status="PASS" starttime="20201030 15:55:32.891" endtime="20201030 15:55:32.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.887" endtime="20201030 15:55:32.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.897" endtime="20201030 15:55:32.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.896" endtime="20201030 15:55:32.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.895" endtime="20201030 15:55:32.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.492" endtime="20201030 15:55:32.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.492" endtime="20201030 15:55:32.919"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.927" endtime="20201030 15:55:32.946"></status>
</kw>
<msg timestamp="20201030 15:55:32.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.926" endtime="20201030 15:55:32.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.948" endtime="20201030 15:55:32.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.950" endtime="20201030 15:55:32.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.923" endtime="20201030 15:55:32.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.921" endtime="20201030 15:55:32.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.959" endtime="20201030 15:55:33.245"></status>
</kw>
<msg timestamp="20201030 15:55:33.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:32.958" endtime="20201030 15:55:33.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:33.249" endtime="20201030 15:55:33.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.257" endtime="20201030 15:55:33.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.955" endtime="20201030 15:55:33.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.954" endtime="20201030 15:55:33.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.264" level="INFO">${RESULT} = [{'diff': 0.00011829200000000248}, {'diff': 0.00011804200000000223}, {'diff': 0.0001185829999999985}, {'diff': 0.00011812500000000017}, {'diff': 0.00011873599999999776}, {'diff': 0.0001186659999999999...</msg>
<status status="PASS" starttime="20201030 15:55:33.261" endtime="20201030 15:55:33.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.269" level="INFO">${ACCURACY} = {'diff': [0.00011829200000000248, 0.00011804200000000223, 0.0001185829999999985, 0.00011812500000000017, 0.00011873599999999776, 0.00011866599999999991, 0.000118389, 0.00011809700000000103, 0.00011862...</msg>
<status status="PASS" starttime="20201030 15:55:33.265" endtime="20201030 15:55:33.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.273" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.272" endtime="20201030 15:55:33.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.275" level="INFO">VALUE: [0.00011829200000000248, 0.00011804200000000223, 0.0001185829999999985, 0.00011812500000000017, 0.00011873599999999776, 0.00011866599999999991, 0.000118389, 0.00011809700000000103, 0.00011862500000000067, 0.0001183049999999991, 0.00011886200000000083, 0.00011817999999999898, 0.00011798599999999701, 0.00011834699999999782, 0.00011873600000000123, 0.00011808400000000094, 0.00011801399999999962, 0.00011895899999999834, 0.00011818100000000192, 0.00011847199999999794, 0.00011863900000000024, 0.00011859700000000153, 0.00011858400000000144, 0.00011847200000000141, 0.00011826399999999987, 0.0001182089999999976, 0.00011881899999999918, 0.000118389, 0.0001184309999999987, 0.0001182500000000003, 0.00011870900000000156, 0.00011890300000000006, 0.00011834700000000128, 0.00011791599999999916, 0.00011847200000000141, 0.00011822200000000116, 0.00011836099999999738, 0.00011851400000000012, 0.0001188049999999996, 0.00011872300000000113, 0.0001187089999999981, 0.0001182370000000002, 0.00011800000000000005, 0.00011863900000000024, 0.00011877799999999994, 0.00011873600000000123, 0.00011808400000000094, 0.00011883299999999875, 0.00011827799999999944, 0.00011816699999999888]</msg>
<status status="PASS" starttime="20201030 15:55:33.274" endtime="20201030 15:55:33.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.269" endtime="20201030 15:55:33.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.280" endtime="20201030 15:55:33.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.279" endtime="20201030 15:55:33.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.278" endtime="20201030 15:55:33.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.920" endtime="20201030 15:55:33.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.919" endtime="20201030 15:55:33.301"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.310" endtime="20201030 15:55:33.329"></status>
</kw>
<msg timestamp="20201030 15:55:33.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.308" endtime="20201030 15:55:33.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.330" endtime="20201030 15:55:33.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.333" endtime="20201030 15:55:33.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.306" endtime="20201030 15:55:33.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.303" endtime="20201030 15:55:33.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.342" endtime="20201030 15:55:33.628"></status>
</kw>
<msg timestamp="20201030 15:55:33.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.340" endtime="20201030 15:55:33.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.633" endtime="20201030 15:55:33.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.641" endtime="20201030 15:55:33.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.338" endtime="20201030 15:55:33.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.336" endtime="20201030 15:55:33.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.647" level="INFO">${RESULT} = [{'diff': 0.00011970799999999962}, {'diff': 0.00011913900000000074}, {'diff': 0.00011977800000000094}, {'diff': 0.00011916699999999988}, {'diff': 0.00011955500000000036}, {'diff': 0.000119054999999999...</msg>
<status status="PASS" starttime="20201030 15:55:33.644" endtime="20201030 15:55:33.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.651" level="INFO">${ACCURACY} = {'diff': [0.00011970799999999962, 0.00011913900000000074, 0.00011977800000000094, 0.00011916699999999988, 0.00011955500000000036, 0.00011905499999999986, 0.00011933299999999925, 0.00011934699999999882...</msg>
<status status="PASS" starttime="20201030 15:55:33.648" endtime="20201030 15:55:33.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.656" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.655" endtime="20201030 15:55:33.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.658" level="INFO">VALUE: [0.00011970799999999962, 0.00011913900000000074, 0.00011977800000000094, 0.00011916699999999988, 0.00011955500000000036, 0.00011905499999999986, 0.00011933299999999925, 0.00011934699999999882, 0.00011948599999999851, 0.00011949999999999808, 0.00011904100000000029, 0.00011904100000000029, 0.00011902800000000019, 0.00011952800000000069, 0.00011909700000000203, 0.00011962500000000167, 0.00011902699999999725, 0.00011922200000000216, 0.00011972299999999866, 0.00011933300000000271, 0.00011969499999999952, 0.00011961099999999864, 0.00011905499999999986, 0.00011897299999999791, 0.00011922199999999869, 0.00011898600000000148, 0.00011945799999999937, 0.0001196110000000021, 0.00011931899999999968, 0.00011919499999999902, 0.00011966699999999691, 0.00011948599999999851, 0.00011941600000000066, 0.00011916700000000335, 0.00011917999999999998, 0.00011904199999999976, 0.00011966700000000038, 0.00011922200000000216, 0.00011922200000000216, 0.00011954100000000079, 0.00011890300000000006, 0.00011950000000000155, 0.00011913900000000074, 0.00011911099999999814, 0.00011899999999999758, 0.00011954200000000026, 0.00011912500000000117, 0.00011916699999999988, 0.00011970799999999962, 0.00011897200000000191]</msg>
<status status="PASS" starttime="20201030 15:55:33.657" endtime="20201030 15:55:33.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.652" endtime="20201030 15:55:33.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.663" endtime="20201030 15:55:33.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.662" endtime="20201030 15:55:33.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.660" endtime="20201030 15:55:33.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.302" endtime="20201030 15:55:33.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.301" endtime="20201030 15:55:33.684"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.692" endtime="20201030 15:55:33.712"></status>
</kw>
<msg timestamp="20201030 15:55:33.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.691" endtime="20201030 15:55:33.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.714" endtime="20201030 15:55:33.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.716" endtime="20201030 15:55:33.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.688" endtime="20201030 15:55:33.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.686" endtime="20201030 15:55:33.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.725" endtime="20201030 15:55:34.010"></status>
</kw>
<msg timestamp="20201030 15:55:34.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.724" endtime="20201030 15:55:34.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.014" endtime="20201030 15:55:34.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.022" endtime="20201030 15:55:34.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.721" endtime="20201030 15:55:34.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.720" endtime="20201030 15:55:34.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.028" level="INFO">${RESULT} = [{'diff': 0.00012059700000000007}, {'diff': 0.00012029200000000101}, {'diff': 0.00012048600000000298}, {'diff': 0.00012018100000000045}, {'diff': 0.00011999999999999858}, {'diff': 0.000120860999999999...</msg>
<status status="PASS" starttime="20201030 15:55:34.025" endtime="20201030 15:55:34.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.033" level="INFO">${ACCURACY} = {'diff': [0.00012059700000000007, 0.00012029200000000101, 0.00012048600000000298, 0.00012018100000000045, 0.00011999999999999858, 0.00012086099999999989, 0.00012040300000000156, 0.00012011200000000208...</msg>
<status status="PASS" starttime="20201030 15:55:34.029" endtime="20201030 15:55:34.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.037" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.036" endtime="20201030 15:55:34.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.040" level="INFO">VALUE: [0.00012059700000000007, 0.00012029200000000101, 0.00012048600000000298, 0.00012018100000000045, 0.00011999999999999858, 0.00012086099999999989, 0.00012040300000000156, 0.00012011200000000208, 0.00011993000000000073, 0.00012030600000000058, 0.00012029199999999754, 0.00012027799999999797, 0.00012030599999999711, 0.00011991600000000116, 0.00012048600000000298, 0.00012083400000000022, 0.00012084700000000032, 0.00012047199999999994, 0.00012036099999999939, 0.00011997199999999944, 0.00012041700000000113, 0.00012033399999999972, 0.00012091699999999816, 0.00012020800000000012, 0.00012068000000000148, 0.00012027800000000144, 0.00012048699999999898, 0.00012042999999999776, 0.00012011099999999914, 0.00012034699999999982, 0.00012066599999999844, 0.00012058399999999997, 0.00012072200000000019, 0.00012083400000000022, 0.00012059799999999954, 0.00012023599999999926, 0.00011991700000000063, 0.00012066700000000138, 0.00012051399999999865, 0.000120083, 0.00012066700000000138, 0.00012022199999999969, 0.00012061099999999964, 0.0001206249999999992, 0.0001202500000000023, 0.00012029100000000154, 0.00012072299999999966, 0.00012083300000000075, 0.00012037499999999896, 0.00012048599999999951]</msg>
<status status="PASS" starttime="20201030 15:55:34.038" endtime="20201030 15:55:34.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.033" endtime="20201030 15:55:34.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.045" endtime="20201030 15:55:34.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.044" endtime="20201030 15:55:34.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.042" endtime="20201030 15:55:34.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.685" endtime="20201030 15:55:34.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.684" endtime="20201030 15:55:34.066"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.074" endtime="20201030 15:55:34.093"></status>
</kw>
<msg timestamp="20201030 15:55:34.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.073" endtime="20201030 15:55:34.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.095" endtime="20201030 15:55:34.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.097" endtime="20201030 15:55:34.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.070" endtime="20201030 15:55:34.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.068" endtime="20201030 15:55:34.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.106" endtime="20201030 15:55:34.392"></status>
</kw>
<msg timestamp="20201030 15:55:34.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.105" endtime="20201030 15:55:34.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.396" endtime="20201030 15:55:34.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.404" endtime="20201030 15:55:34.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.102" endtime="20201030 15:55:34.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.101" endtime="20201030 15:55:34.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.411" level="INFO">${RESULT} = [{'diff': 0.00012183400000000122}, {'diff': 0.00012116699999999841}, {'diff': 0.00012163899999999978}, {'diff': 0.00012109700000000057}, {'diff': 0.00012108400000000047}, {'diff': 0.000121277999999998...</msg>
<status status="PASS" starttime="20201030 15:55:34.408" endtime="20201030 15:55:34.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.416" level="INFO">${ACCURACY} = {'diff': [0.00012183400000000122, 0.00012116699999999841, 0.00012163899999999978, 0.00012109700000000057, 0.00012108400000000047, 0.00012127799999999897, 0.00012115300000000231, 0.00012165199999999987...</msg>
<status status="PASS" starttime="20201030 15:55:34.412" endtime="20201030 15:55:34.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.420" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.419" endtime="20201030 15:55:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.422" level="INFO">VALUE: [0.00012183400000000122, 0.00012116699999999841, 0.00012163899999999978, 0.00012109700000000057, 0.00012108400000000047, 0.00012127799999999897, 0.00012115300000000231, 0.00012165199999999987, 0.00012092999999999826, 0.00012179200000000251, 0.00012159800000000054, 0.00012145899999999737, 0.00012108400000000047, 0.00012154099999999932, 0.00012138899999999953, 0.00012133399999999725, 0.00012122300000000016, 0.0001215700000000014, 0.00012177799999999947, 0.00012166700000000238, 0.00012152799999999922, 0.00012177799999999947, 0.00012163899999999978, 0.00012108400000000047, 0.00012151399999999965, 0.00012134699999999735, 0.00012169499999999805, 0.00012100000000000305, 0.0001214579999999979, 0.00012120800000000112, 0.00012151399999999965, 0.00012177800000000294, 0.00012175000000000033, 0.0001216380000000003, 0.00012115299999999884, 0.00012138899999999953, 0.00012130600000000158, 0.00012154200000000226, 0.00012127799999999897, 0.00012148600000000051, 0.00012152799999999922, 0.00012148600000000051, 0.00012102799999999872, 0.00012115300000000231, 0.00012172200000000119, 0.00012138899999999953, 0.00012147199999999747, 0.00012172200000000119, 0.00012116699999999841, 0.00012102800000000219]</msg>
<status status="PASS" starttime="20201030 15:55:34.421" endtime="20201030 15:55:34.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.416" endtime="20201030 15:55:34.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.427" endtime="20201030 15:55:34.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.426" endtime="20201030 15:55:34.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.425" endtime="20201030 15:55:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.067" endtime="20201030 15:55:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.066" endtime="20201030 15:55:34.448"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.457" endtime="20201030 15:55:34.476"></status>
</kw>
<msg timestamp="20201030 15:55:34.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.455" endtime="20201030 15:55:34.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.478" endtime="20201030 15:55:34.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.480" endtime="20201030 15:55:34.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.453" endtime="20201030 15:55:34.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.451" endtime="20201030 15:55:34.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.489" endtime="20201030 15:55:34.775"></status>
</kw>
<msg timestamp="20201030 15:55:34.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.488" endtime="20201030 15:55:34.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.779" endtime="20201030 15:55:34.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.787" endtime="20201030 15:55:34.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.485" endtime="20201030 15:55:34.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.483" endtime="20201030 15:55:34.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.794" level="INFO">${RESULT} = [{'diff': 0.00012284699999999885}, {'diff': 0.00012254100000000032}, {'diff': 0.00012205600000000233}, {'diff': 0.00012202799999999972}, {'diff': 0.00012252800000000022}, {'diff': 0.000122555999999999...</msg>
<status status="PASS" starttime="20201030 15:55:34.791" endtime="20201030 15:55:34.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.799" level="INFO">${ACCURACY} = {'diff': [0.00012284699999999885, 0.00012254100000000032, 0.00012205600000000233, 0.00012202799999999972, 0.00012252800000000022, 0.00012255599999999936, 0.00012194500000000177, 0.00012261099999999817...</msg>
<status status="PASS" starttime="20201030 15:55:34.795" endtime="20201030 15:55:34.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.806" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.804" endtime="20201030 15:55:34.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.809" level="INFO">VALUE: [0.00012284699999999885, 0.00012254100000000032, 0.00012205600000000233, 0.00012202799999999972, 0.00012252800000000022, 0.00012255599999999936, 0.00012194500000000177, 0.00012261099999999817, 0.00012276399999999743, 0.00012202799999999972, 0.00012265200000000087, 0.00012208299999999853, 0.0001219579999999984, 0.00012229199999999954, 0.00012188800000000055, 0.00012254100000000032, 0.00012259700000000207, 0.0001224030000000001, 0.00012263900000000078, 0.00012251400000000065, 0.0001221250000000007, 0.0001228189999999997, 0.00012240299999999663, 0.00012202799999999972, 0.00012284699999999885, 0.00012209700000000157, 0.00012229100000000007, 0.00012265300000000035, 0.0001223480000000013, 0.00012206899999999896, 0.00012201400000000015, 0.0001225839999999985, 0.0001222770000000005, 0.000122777999999997, 0.00012215299999999985, 0.0001223480000000013, 0.00012245800000000237, 0.00012215299999999985, 0.00012272199999999872, 0.0001224030000000001, 0.00012227799999999997, 0.0001226519999999974, 0.00012251400000000065, 0.00012284799999999832, 0.00012222300000000116, 0.00012200000000000058, 0.00012255499999999989, 0.00012266699999999991, 0.00012230499999999964, 0.00012233299999999878]</msg>
<status status="PASS" starttime="20201030 15:55:34.807" endtime="20201030 15:55:34.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.801" endtime="20201030 15:55:34.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.816" endtime="20201030 15:55:34.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.813" endtime="20201030 15:55:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.812" endtime="20201030 15:55:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.449" endtime="20201030 15:55:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.448" endtime="20201030 15:55:34.837"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.846" endtime="20201030 15:55:34.866"></status>
</kw>
<msg timestamp="20201030 15:55:34.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.845" endtime="20201030 15:55:34.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.868" endtime="20201030 15:55:34.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.870" endtime="20201030 15:55:34.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.842" endtime="20201030 15:55:34.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.840" endtime="20201030 15:55:34.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.879" endtime="20201030 15:55:35.164"></status>
</kw>
<msg timestamp="20201030 15:55:35.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02307775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:34.878" endtime="20201030 15:55:35.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02307775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:35.168" endtime="20201030 15:55:35.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.177" endtime="20201030 15:55:35.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.875" endtime="20201030 15:55:35.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.873" endtime="20201030 15:55:35.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.183" level="INFO">${RESULT} = [{'diff': 0.00012387500000000246}, {'diff': 0.00012305599999999986}, {'diff': 0.0001230969999999991}, {'diff': 0.00012370899999999962}, {'diff': 0.00012331999999999968}, {'diff': 0.0001231109999999986...</msg>
<status status="PASS" starttime="20201030 15:55:35.180" endtime="20201030 15:55:35.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.187" level="INFO">${ACCURACY} = {'diff': [0.00012387500000000246, 0.00012305599999999986, 0.0001230969999999991, 0.00012370899999999962, 0.00012331999999999968, 0.00012311099999999867, 0.00012302800000000072, 0.00012330500000000064,...</msg>
<status status="PASS" starttime="20201030 15:55:35.184" endtime="20201030 15:55:35.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.192" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.190" endtime="20201030 15:55:35.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.195" level="INFO">VALUE: [0.00012387500000000246, 0.00012305599999999986, 0.0001230969999999991, 0.00012370899999999962, 0.00012331999999999968, 0.00012311099999999867, 0.00012302800000000072, 0.00012330500000000064, 0.00012331999999999968, 0.0001234160000000012, 0.00012298700000000148, 0.00012372199999999972, 0.000123083999999999, 0.0001231389999999978, 0.00012315300000000085, 0.00012370800000000015, 0.0001234030000000011, 0.0001234030000000011, 0.00012369400000000058, 0.00012359800000000254, 0.00012372199999999972, 0.00012384699999999985, 0.00012361099999999917, 0.00012352800000000122, 0.00012302800000000072, 0.00012380499999999767, 0.0001236389999999983, 0.00012341700000000067, 0.00012313900000000128, 0.00012333399999999925, 0.00012377800000000147, 0.0001229579999999994, 0.00012301400000000115, 0.00012355500000000089, 0.00012336099999999892, 0.00012293099999999973, 0.0001234160000000012, 0.0001229030000000006, 0.00012313900000000128, 0.0001236519999999984, 0.00012306899999999996, 0.00012306999999999943, 0.0001236939999999971, 0.00012352699999999828, 0.00012384699999999985, 0.00012302800000000072, 0.00012347199999999947, 0.0001232359999999988, 0.00012295800000000287, 0.00012320799999999965]</msg>
<status status="PASS" starttime="20201030 15:55:35.193" endtime="20201030 15:55:35.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.188" endtime="20201030 15:55:35.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.204" endtime="20201030 15:55:35.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.202" endtime="20201030 15:55:35.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.201" endtime="20201030 15:55:35.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.838" endtime="20201030 15:55:35.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.838" endtime="20201030 15:55:35.224"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.233" endtime="20201030 15:55:35.252"></status>
</kw>
<msg timestamp="20201030 15:55:35.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.231" endtime="20201030 15:55:35.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.254" endtime="20201030 15:55:35.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.256" endtime="20201030 15:55:35.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.229" endtime="20201030 15:55:35.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.227" endtime="20201030 15:55:35.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.265" endtime="20201030 15:55:35.552"></status>
</kw>
<msg timestamp="20201030 15:55:35.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.264" endtime="20201030 15:55:35.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.556" endtime="20201030 15:55:35.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.564" endtime="20201030 15:55:35.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.261" endtime="20201030 15:55:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.259" endtime="20201030 15:55:35.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.570" level="INFO">${RESULT} = [{'diff': 0.00012470900000000062}, {'diff': 0.00012398699999999901}, {'diff': 0.00012420800000000065}, {'diff': 0.00012452800000000222}, {'diff': 0.00012405600000000086}, {'diff': 0.000123861000000002...</msg>
<status status="PASS" starttime="20201030 15:55:35.567" endtime="20201030 15:55:35.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.575" level="INFO">${ACCURACY} = {'diff': [0.00012470900000000062, 0.00012398699999999901, 0.00012420800000000065, 0.00012452800000000222, 0.00012405600000000086, 0.00012386100000000289, 0.00012398599999999954, 0.00012470800000000115...</msg>
<status status="PASS" starttime="20201030 15:55:35.571" endtime="20201030 15:55:35.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.579" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.578" endtime="20201030 15:55:35.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.582" level="INFO">VALUE: [0.00012470900000000062, 0.00012398699999999901, 0.00012420800000000065, 0.00012452800000000222, 0.00012405600000000086, 0.00012386100000000289, 0.00012398599999999954, 0.00012470800000000115, 0.00012441700000000167, 0.00012433400000000025, 0.00012490199999999965, 0.00012415299999999838, 0.00012484800000000032, 0.0001240420000000013, 0.00012432000000000068, 0.0001239169999999977, 0.0001246519999999994, 0.0001242229999999997, 0.00012454100000000232, 0.00012397199999999997, 0.000124777999999999, 0.00012474999999999986, 0.00012401400000000215, 0.00012415299999999838, 0.0001239580000000004, 0.0001239580000000004, 0.0001243190000000012, 0.00012483400000000075, 0.00012381899999999724, 0.0001244999999999996, 0.00012416700000000142, 0.00012397199999999997, 0.00012383300000000028, 0.00012406900000000096, 0.00012444399999999786, 0.00012483300000000128, 0.00012486100000000042, 0.00012482000000000118, 0.00012395899999999987, 0.00012422200000000022, 0.00012465299999999888, 0.00012393000000000126, 0.0001242779999999985, 0.0001242359999999998, 0.00012391700000000117, 0.00012427800000000197, 0.000124777999999999, 0.00012498600000000054, 0.00012422200000000022, 0.00012429199999999807]</msg>
<status status="PASS" starttime="20201030 15:55:35.581" endtime="20201030 15:55:35.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.576" endtime="20201030 15:55:35.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.587" endtime="20201030 15:55:35.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.585" endtime="20201030 15:55:35.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.584" endtime="20201030 15:55:35.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.225" endtime="20201030 15:55:35.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.225" endtime="20201030 15:55:35.608"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.616" endtime="20201030 15:55:35.636"></status>
</kw>
<msg timestamp="20201030 15:55:35.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.615" endtime="20201030 15:55:35.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.637" endtime="20201030 15:55:35.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.640" endtime="20201030 15:55:35.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.612" endtime="20201030 15:55:35.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.610" endtime="20201030 15:55:35.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.649" endtime="20201030 15:55:35.936"></status>
</kw>
<msg timestamp="20201030 15:55:35.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.648" endtime="20201030 15:55:35.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.941" endtime="20201030 15:55:35.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.949" endtime="20201030 15:55:35.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.645" endtime="20201030 15:55:35.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.643" endtime="20201030 15:55:35.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.955" level="INFO">${RESULT} = [{'diff': 0.00012575000000000086}, {'diff': 0.00012517999999999904}, {'diff': 0.0001257910000000001}, {'diff': 0.00012566599999999997}, {'diff': 0.0001250559999999984}, {'diff': 0.0001256390000000003}...</msg>
<status status="PASS" starttime="20201030 15:55:35.952" endtime="20201030 15:55:35.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.959" level="INFO">${ACCURACY} = {'diff': [0.00012575000000000086, 0.00012517999999999904, 0.0001257910000000001, 0.00012566599999999997, 0.0001250559999999984, 0.0001256390000000003, 0.00012511200000000014, 0.00012584699999999838, 0...</msg>
<status status="PASS" starttime="20201030 15:55:35.956" endtime="20201030 15:55:35.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.964" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.963" endtime="20201030 15:55:35.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.966" level="INFO">VALUE: [0.00012575000000000086, 0.00012517999999999904, 0.0001257910000000001, 0.00012566599999999997, 0.0001250559999999984, 0.0001256390000000003, 0.00012511200000000014, 0.00012584699999999838, 0.00012602800000000025, 0.00012540200000000015, 0.0001252360000000008, 0.00012552799999999975, 0.00012551400000000018, 0.00012545799999999843, 0.00012526399999999993, 0.00012504199999999882, 0.00012502799999999925, 0.0001253329999999983, 0.00012526399999999993, 0.00012541599999999972, 0.00012527700000000003, 0.0001256390000000003, 0.00012544399999999886, 0.00012520799999999818, 0.00012533400000000125, 0.00012538800000000058, 0.00012548600000000104, 0.00012586100000000142, 0.00012502800000000272, 0.00012493100000000174, 0.00012502799999999925, 0.00012575000000000086, 0.0001251939999999986, 0.0001256390000000003, 0.00012515299999999938, 0.00012497200000000097, 0.00012548600000000104, 0.0001255000000000006, 0.00012547200000000147, 0.00012516599999999947, 0.00012588900000000056, 0.00012491700000000217, 0.00012563800000000083, 0.0001256390000000003, 0.00012583400000000175, 0.00012529199999999907, 0.00012587500000000099, 0.00012570800000000215, 0.00012494400000000183, 0.00012506900000000196]</msg>
<status status="PASS" starttime="20201030 15:55:35.965" endtime="20201030 15:55:35.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.960" endtime="20201030 15:55:35.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.971" endtime="20201030 15:55:35.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.969" endtime="20201030 15:55:35.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.968" endtime="20201030 15:55:35.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.608" endtime="20201030 15:55:35.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.608" endtime="20201030 15:55:35.992"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.000" endtime="20201030 15:55:36.023"></status>
</kw>
<msg timestamp="20201030 15:55:36.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.999" endtime="20201030 15:55:36.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.024" endtime="20201030 15:55:36.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.027" endtime="20201030 15:55:36.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.996" endtime="20201030 15:55:36.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.994" endtime="20201030 15:55:36.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.036" endtime="20201030 15:55:36.321"></status>
</kw>
<msg timestamp="20201030 15:55:36.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024774653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.034" endtime="20201030 15:55:36.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024774653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.325" endtime="20201030 15:55:36.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.333" endtime="20201030 15:55:36.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.032" endtime="20201030 15:55:36.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.030" endtime="20201030 15:55:36.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.339" level="INFO">${RESULT} = [{'diff': 0.00012676400000000143}, {'diff': 0.00012644399999999986}, {'diff': 0.00012690300000000113}, {'diff': 0.0001260689999999995}, {'diff': 0.0001268329999999998}, {'diff': 0.00012631899999999974...</msg>
<status status="PASS" starttime="20201030 15:55:36.336" endtime="20201030 15:55:36.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.343" level="INFO">${ACCURACY} = {'diff': [0.00012676400000000143, 0.00012644399999999986, 0.00012690300000000113, 0.0001260689999999995, 0.0001268329999999998, 0.00012631899999999974, 0.00012611100000000167, 0.0001264170000000002, 0...</msg>
<status status="PASS" starttime="20201030 15:55:36.340" endtime="20201030 15:55:36.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.348" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.347" endtime="20201030 15:55:36.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.350" level="INFO">VALUE: [0.00012676400000000143, 0.00012644399999999986, 0.00012690300000000113, 0.0001260689999999995, 0.0001268329999999998, 0.00012631899999999974, 0.00012611100000000167, 0.0001264170000000002, 0.0001262499999999979, 0.00012605499999999992, 0.00012656999999999946, 0.00012618099999999952, 0.00012681900000000024, 0.00012608300000000253, 0.0001263889999999976, 0.0001265970000000026, 0.00012590300000000013, 0.00012615300000000038, 0.00012626399999999746, 0.00012604100000000035, 0.00012651400000000118, 0.00012654200000000032, 0.0001266940000000001, 0.00012601400000000068, 0.00012676400000000143, 0.00012604100000000035, 0.0001259719999999985, 0.00012688900000000156, 0.00012595900000000188, 0.00012629200000000007, 0.0001262780000000005, 0.00012604100000000035, 0.00012611100000000167, 0.00012658300000000303, 0.00012643099999999977, 0.0001268329999999998, 0.00012670899999999916, 0.0001265840000000025, 0.00012648600000000204, 0.00012658299999999956, 0.0001265970000000026, 0.00012668000000000054, 0.00012630599999999964, 0.00012618000000000004, 0.0001260550000000034, 0.00012619399999999614, 0.00012668100000000349, 0.00012651400000000118, 0.00012641699999999673, 0.00012642999999999682]</msg>
<status status="PASS" starttime="20201030 15:55:36.349" endtime="20201030 15:55:36.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.344" endtime="20201030 15:55:36.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.356" endtime="20201030 15:55:36.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.354" endtime="20201030 15:55:36.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.353" endtime="20201030 15:55:36.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.993" endtime="20201030 15:55:36.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.992" endtime="20201030 15:55:36.377"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.385" endtime="20201030 15:55:36.405"></status>
</kw>
<msg timestamp="20201030 15:55:36.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.384" endtime="20201030 15:55:36.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.406" endtime="20201030 15:55:36.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.409" endtime="20201030 15:55:36.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.381" endtime="20201030 15:55:36.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.379" endtime="20201030 15:55:36.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.418" endtime="20201030 15:55:36.701"></status>
</kw>
<msg timestamp="20201030 15:55:36.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.416" endtime="20201030 15:55:36.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.706" endtime="20201030 15:55:36.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.714" endtime="20201030 15:55:36.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.414" endtime="20201030 15:55:36.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.412" endtime="20201030 15:55:36.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.720" level="INFO">${RESULT} = [{'diff': 0.00012779200000000157}, {'diff': 0.0001272360000000028}, {'diff': 0.0001278889999999991}, {'diff': 0.0001274589999999999}, {'diff': 0.00012712499999999877}, {'diff': 0.00012762500000000274}...</msg>
<status status="PASS" starttime="20201030 15:55:36.717" endtime="20201030 15:55:36.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.725" level="INFO">${ACCURACY} = {'diff': [0.00012779200000000157, 0.0001272360000000028, 0.0001278889999999991, 0.0001274589999999999, 0.00012712499999999877, 0.00012762500000000274, 0.0001275560000000009, 0.00012722200000000322, 0....</msg>
<status status="PASS" starttime="20201030 15:55:36.721" endtime="20201030 15:55:36.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.729" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.728" endtime="20201030 15:55:36.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.732" level="INFO">VALUE: [0.00012779200000000157, 0.0001272360000000028, 0.0001278889999999991, 0.0001274589999999999, 0.00012712499999999877, 0.00012762500000000274, 0.0001275560000000009, 0.00012722200000000322, 0.00012695799999999993, 0.0001272919999999976, 0.0001276390000000023, 0.00012777799999999853, 0.00012690300000000113, 0.00012738900000000206, 0.0001270690000000005, 0.00012698700000000201, 0.00012695799999999993, 0.00012769399999999764, 0.00012686099999999895, 0.00012720800000000018, 0.00012720800000000018, 0.00012737499999999902, 0.00012757000000000046, 0.00012749999999999914, 0.00012767999999999807, 0.00012694400000000036, 0.0001277230000000032, 0.00012734699999999988, 0.00012694499999999984, 0.0001276940000000011, 0.0001273889999999986, 0.00012763899999999884, 0.0001269589999999994, 0.00012752800000000175, 0.0001277499999999994, 0.00012770800000000068, 0.00012757000000000046, 0.00012727699999999856, 0.0001269589999999994, 0.00012712499999999877, 0.00012776399999999896, 0.00012762499999999927, 0.00012695799999999993, 0.0001275560000000009, 0.00012723599999999932, 0.00012706999999999996, 0.00012730500000000117, 0.00012740199999999868, 0.00012706999999999996, 0.0001275139999999987]</msg>
<status status="PASS" starttime="20201030 15:55:36.730" endtime="20201030 15:55:36.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.726" endtime="20201030 15:55:36.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.737" endtime="20201030 15:55:36.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.735" endtime="20201030 15:55:36.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.734" endtime="20201030 15:55:36.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.377" endtime="20201030 15:55:36.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.377" endtime="20201030 15:55:36.757"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.766" endtime="20201030 15:55:36.786"></status>
</kw>
<msg timestamp="20201030 15:55:36.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.765" endtime="20201030 15:55:36.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.787" endtime="20201030 15:55:36.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.790" endtime="20201030 15:55:36.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.762" endtime="20201030 15:55:36.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.760" endtime="20201030 15:55:36.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.798" endtime="20201030 15:55:37.085"></status>
</kw>
<msg timestamp="20201030 15:55:37.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.797" endtime="20201030 15:55:37.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.089" endtime="20201030 15:55:37.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.097" endtime="20201030 15:55:37.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.794" endtime="20201030 15:55:37.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.793" endtime="20201030 15:55:37.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.104" level="INFO">${RESULT} = [{'diff': 0.00012829200000000207}, {'diff': 0.00012798600000000007}, {'diff': 0.00012816700000000195}, {'diff': 0.0001279720000000005}, {'diff': 0.0001281520000000029}, {'diff': 0.0001286529999999994}...</msg>
<status status="PASS" starttime="20201030 15:55:37.101" endtime="20201030 15:55:37.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.108" level="INFO">${ACCURACY} = {'diff': [0.00012829200000000207, 0.00012798600000000007, 0.00012816700000000195, 0.0001279720000000005, 0.0001281520000000029, 0.0001286529999999994, 0.00012876399999999996, 0.0001285139999999997, 0....</msg>
<status status="PASS" starttime="20201030 15:55:37.105" endtime="20201030 15:55:37.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.112" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.111" endtime="20201030 15:55:37.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.114" level="INFO">VALUE: [0.00012829200000000207, 0.00012798600000000007, 0.00012816700000000195, 0.0001279720000000005, 0.0001281520000000029, 0.0001286529999999994, 0.00012876399999999996, 0.0001285139999999997, 0.00012795899999999694, 0.0001288200000000017, 0.0001286940000000021, 0.0001286529999999994, 0.00012834700000000088, 0.00012858400000000103, 0.0001280139999999992, 0.0001284590000000009, 0.00012862500000000027, 0.00012805500000000192, 0.0001288200000000017, 0.00012870800000000168, 0.0001279590000000004, 0.00012808399999999706, 0.00012840299999999916, 0.00012811199999999967, 0.00012841600000000272, 0.00012842999999999882, 0.00012881999999999824, 0.00012819500000000109, 0.0001282499999999999, 0.0001286529999999994, 0.00012863899999999984, 0.00012863899999999984, 0.00012822200000000075, 0.0001285139999999997, 0.00012856899999999852, 0.0001286110000000007, 0.00012808300000000106, 0.0001287370000000003, 0.00012799999999999964, 0.00012856899999999852, 0.0001285139999999997, 0.0001285829999999981, 0.00012816699999999848, 0.00012840299999999916, 0.0001279720000000005, 0.00012799999999999964, 0.0001281110000000002, 0.00012855599999999842, 0.0001281390000000028, 0.0001287500000000004]</msg>
<status status="PASS" starttime="20201030 15:55:37.113" endtime="20201030 15:55:37.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.108" endtime="20201030 15:55:37.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.119" endtime="20201030 15:55:37.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.118" endtime="20201030 15:55:37.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.117" endtime="20201030 15:55:37.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.758" endtime="20201030 15:55:37.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.758" endtime="20201030 15:55:37.140"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.149" endtime="20201030 15:55:37.169"></status>
</kw>
<msg timestamp="20201030 15:55:37.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.147" endtime="20201030 15:55:37.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.171" endtime="20201030 15:55:37.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.173" endtime="20201030 15:55:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.145" endtime="20201030 15:55:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.142" endtime="20201030 15:55:37.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.182" endtime="20201030 15:55:37.468"></status>
</kw>
<msg timestamp="20201030 15:55:37.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.181" endtime="20201030 15:55:37.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.473" endtime="20201030 15:55:37.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.481" endtime="20201030 15:55:37.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.178" endtime="20201030 15:55:37.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.176" endtime="20201030 15:55:37.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.487" level="INFO">${RESULT} = [{'diff': 0.00012993000000000032}, {'diff': 0.00012926400000000046}, {'diff': 0.00012898600000000107}, {'diff': 0.000129263000000001}, {'diff': 0.0001289439999999989}, {'diff': 0.0001298200000000027},...</msg>
<status status="PASS" starttime="20201030 15:55:37.484" endtime="20201030 15:55:37.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.491" level="INFO">${ACCURACY} = {'diff': [0.00012993000000000032, 0.00012926400000000046, 0.00012898600000000107, 0.000129263000000001, 0.0001289439999999989, 0.0001298200000000027, 0.00012940300000000016, 0.00012950000000000114, 0....</msg>
<status status="PASS" starttime="20201030 15:55:37.488" endtime="20201030 15:55:37.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.496" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.495" endtime="20201030 15:55:37.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.498" level="INFO">VALUE: [0.00012993000000000032, 0.00012926400000000046, 0.00012898600000000107, 0.000129263000000001, 0.0001289439999999989, 0.0001298200000000027, 0.00012940300000000016, 0.00012950000000000114, 0.00012895799999999846, 0.00012920899999999819, 0.00012898600000000107, 0.00012969499999999912, 0.00012942999999999982, 0.00012948600000000157, 0.00012944500000000234, 0.00012959700000000213, 0.00012891599999999975, 0.00012962500000000127, 0.0001292079999999987, 0.00012917999999999957, 0.0001297079999999992, 0.0001297500000000014, 0.00012955499999999995, 0.00012900000000000064, 0.0001294309999999993, 0.00012926299999999752, 0.00012905499999999945, 0.00012894499999999837, 0.00012980599999999967, 0.00012962500000000127, 0.00012891599999999975, 0.00012976400000000096, 0.0001297079999999992, 0.00012959699999999866, 0.00012955599999999942, 0.0001295270000000008, 0.00012977800000000053, 0.0001292500000000009, 0.00012959699999999866, 0.00012917999999999957, 0.00012944500000000234, 0.0001293890000000006, 0.00012974999999999792, 0.0001289309999999988, 0.00012949999999999767, 0.0001296249999999978, 0.00012931999999999874, 0.00012981899999999977, 0.00012919399999999914, 0.00012940200000000068]</msg>
<status status="PASS" starttime="20201030 15:55:37.497" endtime="20201030 15:55:37.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.492" endtime="20201030 15:55:37.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.504" endtime="20201030 15:55:37.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.502" endtime="20201030 15:55:37.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.501" endtime="20201030 15:55:37.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.141" endtime="20201030 15:55:37.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.140" endtime="20201030 15:55:37.524"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.533" endtime="20201030 15:55:37.553"></status>
</kw>
<msg timestamp="20201030 15:55:37.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.531" endtime="20201030 15:55:37.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.554" endtime="20201030 15:55:37.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.557" endtime="20201030 15:55:37.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.529" endtime="20201030 15:55:37.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.527" endtime="20201030 15:55:37.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.566" endtime="20201030 15:55:37.851"></status>
</kw>
<msg timestamp="20201030 15:55:37.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.564" endtime="20201030 15:55:37.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.855" endtime="20201030 15:55:37.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.863" endtime="20201030 15:55:37.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.562" endtime="20201030 15:55:37.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.560" endtime="20201030 15:55:37.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.870" level="INFO">${RESULT} = [{'diff': 0.00013068100000000055}, {'diff': 0.00012987499999999805}, {'diff': 0.00012993000000000032}, {'diff': 0.0001302500000000019}, {'diff': 0.00013059799999999913}, {'diff': 0.0001301249999999983...</msg>
<status status="PASS" starttime="20201030 15:55:37.867" endtime="20201030 15:55:37.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.875" level="INFO">${ACCURACY} = {'diff': [0.00013068100000000055, 0.00012987499999999805, 0.00012993000000000032, 0.0001302500000000019, 0.00013059799999999913, 0.0001301249999999983, 0.00013055600000000042, 0.0001305270000000018, 0...</msg>
<status status="PASS" starttime="20201030 15:55:37.871" endtime="20201030 15:55:37.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.879" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.878" endtime="20201030 15:55:37.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.882" level="INFO">VALUE: [0.00013068100000000055, 0.00012987499999999805, 0.00012993000000000032, 0.0001302500000000019, 0.00013059799999999913, 0.0001301249999999983, 0.00013055600000000042, 0.0001305270000000018, 0.00013044499999999987, 0.0001304859999999991, 0.00013055600000000042, 0.00013056900000000052, 0.00013076400000000196, 0.00013057, 0.00012981999999999924, 0.00013054200000000085, 0.0001299859999999986, 0.00013036199999999845, 0.00013055600000000042, 0.00013055600000000042, 0.00013080600000000067, 0.00013065299999999794, 0.00012995799999999946, 0.0001306660000000015, 0.00013037500000000202, 0.0001302920000000006, 0.0001302079999999997, 0.00013066700000000098, 0.0001305270000000018, 0.00012995799999999946, 0.00013047199999999953, 0.00012987500000000152, 0.0001300699999999995, 0.0001300829999999996, 0.0001308050000000012, 0.00013026400000000146, 0.00013001399999999774, 0.0001304590000000029, 0.0001305409999999979, 0.00012995800000000293, 0.00013008400000000253, 0.0001307920000000011, 0.0001303339999999993, 0.00013004100000000088, 0.00013015199999999796, 0.00013072199999999978, 0.00013073599999999935, 0.0001308469999999999, 0.0001308059999999972, 0.0001303059999999967]</msg>
<status status="PASS" starttime="20201030 15:55:37.880" endtime="20201030 15:55:37.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.875" endtime="20201030 15:55:37.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.886" endtime="20201030 15:55:37.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.885" endtime="20201030 15:55:37.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.884" endtime="20201030 15:55:37.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.525" endtime="20201030 15:55:37.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.525" endtime="20201030 15:55:37.907"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.916" endtime="20201030 15:55:37.936"></status>
</kw>
<msg timestamp="20201030 15:55:37.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.914" endtime="20201030 15:55:37.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.937" endtime="20201030 15:55:37.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.939" endtime="20201030 15:55:37.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.912" endtime="20201030 15:55:37.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.909" endtime="20201030 15:55:37.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.948" endtime="20201030 15:55:38.236"></status>
</kw>
<msg timestamp="20201030 15:55:38.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.947" endtime="20201030 15:55:38.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.240" endtime="20201030 15:55:38.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.248" endtime="20201030 15:55:38.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.944" endtime="20201030 15:55:38.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.943" endtime="20201030 15:55:38.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.255" level="INFO">${RESULT} = [{'diff': 0.00013151399999999924}, {'diff': 0.00013101399999999874}, {'diff': 0.00013168099999999808}, {'diff': 0.00013191700000000223}, {'diff': 0.00013118099999999758}, {'diff': 0.000131832999999997...</msg>
<status status="PASS" starttime="20201030 15:55:38.251" endtime="20201030 15:55:38.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.258" level="INFO">${ACCURACY} = {'diff': [0.00013151399999999924, 0.00013101399999999874, 0.00013168099999999808, 0.00013191700000000223, 0.00013118099999999758, 0.00013183299999999787, 0.0001315140000000027, 0.00013152699999999934,...</msg>
<status status="PASS" starttime="20201030 15:55:38.256" endtime="20201030 15:55:38.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.263" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.262" endtime="20201030 15:55:38.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.265" level="INFO">VALUE: [0.00013151399999999924, 0.00013101399999999874, 0.00013168099999999808, 0.00013191700000000223, 0.00013118099999999758, 0.00013183299999999787, 0.0001315140000000027, 0.00013152699999999934, 0.00013147200000000053, 0.00013113899999999887, 0.0001318470000000009, 0.0001308890000000021, 0.00013104100000000188, 0.00013181999999999777, 0.0001316669999999985, 0.00013152699999999934, 0.00013131900000000127, 0.0001311249999999993, 0.00013190200000000318, 0.0001317080000000012, 0.00013126400000000246, 0.00013170799999999774, 0.0001308469999999999, 0.0001316249999999998, 0.0001317639999999995, 0.000131570000000001, 0.00013172200000000078, 0.00013187500000000005, 0.0001314029999999987, 0.00013138799999999964, 0.00013130600000000117, 0.000131166999999998, 0.0001310270000000023, 0.0001308890000000021, 0.00013177800000000253, 0.00013154199999999838, 0.0001314860000000001, 0.0001318479999999969, 0.00013154199999999838, 0.00013132000000000074, 0.00013151399999999924, 0.00013124999999999942, 0.0001316249999999998, 0.0001311249999999993, 0.00013123599999999985, 0.0001312090000000002, 0.00013131900000000127, 0.00013147200000000053, 0.00013105600000000092, 0.00013137499999999955]</msg>
<status status="PASS" starttime="20201030 15:55:38.264" endtime="20201030 15:55:38.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.259" endtime="20201030 15:55:38.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.270" endtime="20201030 15:55:38.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.269" endtime="20201030 15:55:38.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.268" endtime="20201030 15:55:38.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.908" endtime="20201030 15:55:38.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.907" endtime="20201030 15:55:38.291"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.300" endtime="20201030 15:55:38.320"></status>
</kw>
<msg timestamp="20201030 15:55:38.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.298" endtime="20201030 15:55:38.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.322" endtime="20201030 15:55:38.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.324" endtime="20201030 15:55:38.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.296" endtime="20201030 15:55:38.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.294" endtime="20201030 15:55:38.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.333" endtime="20201030 15:55:38.619"></status>
</kw>
<msg timestamp="20201030 15:55:38.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.332" endtime="20201030 15:55:38.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.623" endtime="20201030 15:55:38.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.631" endtime="20201030 15:55:38.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.329" endtime="20201030 15:55:38.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.327" endtime="20201030 15:55:38.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.638" level="INFO">${RESULT} = [{'diff': 0.00013243000000000282}, {'diff': 0.00013255499999999948}, {'diff': 0.00013280499999999973}, {'diff': 0.00013231999999999827}, {'diff': 0.00013273599999999788}, {'diff': 0.000132361000000000...</msg>
<status status="PASS" starttime="20201030 15:55:38.635" endtime="20201030 15:55:38.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.642" level="INFO">${ACCURACY} = {'diff': [0.00013243000000000282, 0.00013255499999999948, 0.00013280499999999973, 0.00013231999999999827, 0.00013273599999999788, 0.00013236100000000098, 0.00013275000000000092, 0.00013204200000000235...</msg>
<status status="PASS" starttime="20201030 15:55:38.639" endtime="20201030 15:55:38.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.646" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.645" endtime="20201030 15:55:38.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.649" level="INFO">VALUE: [0.00013243000000000282, 0.00013255499999999948, 0.00013280499999999973, 0.00013231999999999827, 0.00013273599999999788, 0.00013236100000000098, 0.00013275000000000092, 0.00013204200000000235, 0.00013227799999999956, 0.00013216700000000248, 0.00013216700000000248, 0.00013212499999999683, 0.00013261100000000123, 0.00013230499999999923, 0.00013294399999999942, 0.0001323340000000013, 0.0001321250000000003, 0.00013205599999999845, 0.0001328059999999992, 0.00013219400000000214, 0.00013211100000000073, 0.0001322090000000012, 0.00013263900000000037, 0.0001326669999999995, 0.00013256900000000252, 0.00013255499999999948, 0.00013276399999999702, 0.0001319860000000006, 0.00013211100000000073, 0.00013279199999999963, 0.00013241599999999978, 0.0001326799999999996, 0.00013268099999999908, 0.00013200000000000017, 0.0001326799999999996, 0.00013256899999999905, 0.0001325279999999998, 0.00013191700000000223, 0.00013284800000000138, 0.0001322090000000012, 0.00013236100000000098, 0.00013269499999999865, 0.00013219499999999815, 0.00013205599999999845, 0.00013218099999999858, 0.0001324860000000011, 0.00013200000000000017, 0.00013238900000000012, 0.0001319860000000006, 0.0001320969999999977]</msg>
<status status="PASS" starttime="20201030 15:55:38.647" endtime="20201030 15:55:38.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.643" endtime="20201030 15:55:38.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.654" endtime="20201030 15:55:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.653" endtime="20201030 15:55:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.652" endtime="20201030 15:55:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.292" endtime="20201030 15:55:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.291" endtime="20201030 15:55:38.675"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.685" endtime="20201030 15:55:38.705"></status>
</kw>
<msg timestamp="20201030 15:55:38.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.683" endtime="20201030 15:55:38.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.706" endtime="20201030 15:55:38.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.709" endtime="20201030 15:55:38.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.680" endtime="20201030 15:55:38.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.678" endtime="20201030 15:55:38.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.718" endtime="20201030 15:55:39.004"></status>
</kw>
<msg timestamp="20201030 15:55:39.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.716" endtime="20201030 15:55:39.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.008" endtime="20201030 15:55:39.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.016" endtime="20201030 15:55:39.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.714" endtime="20201030 15:55:39.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.712" endtime="20201030 15:55:39.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.023" level="INFO">${RESULT} = [{'diff': 0.00013306999999999902}, {'diff': 0.0001331800000000001}, {'diff': 0.00013361100000000223}, {'diff': 0.00013304199999999988}, {'diff': 0.00013315300000000044}, {'diff': 0.0001329169999999997...</msg>
<status status="PASS" starttime="20201030 15:55:39.020" endtime="20201030 15:55:39.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.028" level="INFO">${ACCURACY} = {'diff': [0.00013306999999999902, 0.0001331800000000001, 0.00013361100000000223, 0.00013304199999999988, 0.00013315300000000044, 0.00013291699999999976, 0.0001329030000000002, 0.00013332000000000274, ...</msg>
<status status="PASS" starttime="20201030 15:55:39.024" endtime="20201030 15:55:39.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.032" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.031" endtime="20201030 15:55:39.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.034" level="INFO">VALUE: [0.00013306999999999902, 0.0001331800000000001, 0.00013361100000000223, 0.00013304199999999988, 0.00013315300000000044, 0.00013291699999999976, 0.0001329030000000002, 0.00013332000000000274, 0.00013377699999999812, 0.00013331900000000327, 0.00013367999999999713, 0.0001333609999999985, 0.0001329999999999977, 0.00013387499999999858, 0.00013356999999999952, 0.0001336800000000006, 0.00013354200000000038, 0.00013311100000000173, 0.00013348700000000158, 0.00013288900000000062, 0.00013374999999999845, 0.00013286100000000148, 0.00013355500000000048, 0.00013348599999999863, 0.0001336670000000005, 0.00013305599999999945, 0.00013361099999999876, 0.0001329030000000002, 0.00013379200000000063, 0.00013373600000000235, 0.0001334579999999995, 0.00013325000000000142, 0.0001329999999999977, 0.00013376300000000202, 0.00013355500000000048, 0.00013373599999999888, 0.00013347200000000253, 0.00013370799999999974, 0.00013343099999999983, 0.00013313900000000087, 0.00013388899999999815, 0.00013362499999999833, 0.00013333399999999884, 0.00013351400000000124, 0.0001329030000000002, 0.00013337499999999808, 0.0001336250000000018, 0.00013379200000000063, 0.00013362499999999833, 0.00013287499999999758]</msg>
<status status="PASS" starttime="20201030 15:55:39.033" endtime="20201030 15:55:39.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.028" endtime="20201030 15:55:39.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.039" endtime="20201030 15:55:39.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.038" endtime="20201030 15:55:39.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.037" endtime="20201030 15:55:39.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.676" endtime="20201030 15:55:39.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.676" endtime="20201030 15:55:39.060"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.069" endtime="20201030 15:55:39.089"></status>
</kw>
<msg timestamp="20201030 15:55:39.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.067" endtime="20201030 15:55:39.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.090" endtime="20201030 15:55:39.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.093" endtime="20201030 15:55:39.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.065" endtime="20201030 15:55:39.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.063" endtime="20201030 15:55:39.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.102" endtime="20201030 15:55:39.388"></status>
</kw>
<msg timestamp="20201030 15:55:39.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.100" endtime="20201030 15:55:39.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.393" endtime="20201030 15:55:39.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.401" endtime="20201030 15:55:39.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.097" endtime="20201030 15:55:39.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.096" endtime="20201030 15:55:39.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.407" level="INFO">${RESULT} = [{'diff': 0.00013408300000000012}, {'diff': 0.0001340419999999974}, {'diff': 0.00013461099999999976}, {'diff': 0.00013388899999999815}, {'diff': 0.00013441700000000126}, {'diff': 0.0001342920000000011...</msg>
<status status="PASS" starttime="20201030 15:55:39.404" endtime="20201030 15:55:39.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.411" level="INFO">${ACCURACY} = {'diff': [0.00013408300000000012, 0.0001340419999999974, 0.00013461099999999976, 0.00013388899999999815, 0.00013441700000000126, 0.00013429200000000113, 0.00013391600000000128, 0.00013429200000000113,...</msg>
<status status="PASS" starttime="20201030 15:55:39.408" endtime="20201030 15:55:39.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.416" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.415" endtime="20201030 15:55:39.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.418" level="INFO">VALUE: [0.00013408300000000012, 0.0001340419999999974, 0.00013461099999999976, 0.00013388899999999815, 0.00013441700000000126, 0.00013429200000000113, 0.00013391600000000128, 0.00013429200000000113, 0.00013443000000000135, 0.0001347909999999987, 0.0001340280000000013, 0.00013457000000000052, 0.00013423600000000285, 0.0001342909999999982, 0.0001341389999999984, 0.0001345419999999979, 0.00013447200000000006, 0.00013481899999999783, 0.0001343609999999995, 0.00013487499999999958, 0.000133860999999999, 0.00013448599999999963, 0.00013480499999999826, 0.00013431899999999733, 0.00013429199999999766, 0.00013393100000000033, 0.00013461099999999976, 0.0001339860000000026, 0.00013473599999999988, 0.00013384699999999944, 0.00013441700000000126, 0.00013419400000000067, 0.00013411099999999926, 0.00013424999999999895, 0.00013480599999999773, 0.0001340969999999997, 0.0001339030000000012, 0.0001345280000000018, 0.00013455500000000148, 0.00013423599999999938, 0.0001343190000000008, 0.00013405600000000045, 0.0001340969999999997, 0.00013455600000000095, 0.00013387499999999858, 0.00013479199999999816, 0.00013398599999999913, 0.00013451400000000224, 0.0001338190000000003, 0.00013474999999999945]</msg>
<status status="PASS" starttime="20201030 15:55:39.417" endtime="20201030 15:55:39.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.412" endtime="20201030 15:55:39.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.423" endtime="20201030 15:55:39.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.422" endtime="20201030 15:55:39.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.420" endtime="20201030 15:55:39.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.061" endtime="20201030 15:55:39.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.060" endtime="20201030 15:55:39.444"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.452" endtime="20201030 15:55:39.475"></status>
</kw>
<msg timestamp="20201030 15:55:39.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.451" endtime="20201030 15:55:39.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.477" endtime="20201030 15:55:39.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.479" endtime="20201030 15:55:39.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.448" endtime="20201030 15:55:39.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.446" endtime="20201030 15:55:39.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.488" endtime="20201030 15:55:39.774"></status>
</kw>
<msg timestamp="20201030 15:55:39.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024823333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.487" endtime="20201030 15:55:39.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024823333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.778" endtime="20201030 15:55:39.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.786" endtime="20201030 15:55:39.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.484" endtime="20201030 15:55:39.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.483" endtime="20201030 15:55:39.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.793" level="INFO">${RESULT} = [{'diff': 0.00013530499999999876}, {'diff': 0.00013534700000000094}, {'diff': 0.00013573600000000088}, {'diff': 0.00013534699999999747}, {'diff': 0.00013572200000000131}, {'diff': 0.000134972000000000...</msg>
<status status="PASS" starttime="20201030 15:55:39.790" endtime="20201030 15:55:39.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.797" level="INFO">${ACCURACY} = {'diff': [0.00013530499999999876, 0.00013534700000000094, 0.00013573600000000088, 0.00013534699999999747, 0.00013572200000000131, 0.00013497200000000056, 0.00013516599999999906, 0.0001352779999999991,...</msg>
<status status="PASS" starttime="20201030 15:55:39.794" endtime="20201030 15:55:39.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.801" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.800" endtime="20201030 15:55:39.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.804" level="INFO">VALUE: [0.00013530499999999876, 0.00013534700000000094, 0.00013573600000000088, 0.00013534699999999747, 0.00013572200000000131, 0.00013497200000000056, 0.00013516599999999906, 0.0001352779999999991, 0.00013491700000000176, 0.00013529199999999866, 0.00013530599999999823, 0.0001352779999999991, 0.00013555500000000248, 0.00013538899999999965, 0.00013490199999999924, 0.00013548600000000063, 0.0001353060000000017, 0.0001351519999999995, 0.00013530499999999876, 0.00013505500000000198, 0.0001355419999999989, 0.0001357909999999997, 0.00013497200000000056, 0.00013494400000000142, 0.00013488899999999915, 0.00013511100000000026, 0.00013513900000000287, 0.00013516599999999906, 0.00013583300000000187, 0.00013511100000000026, 0.0001354719999999976, 0.00013572200000000131, 0.00013519500000000115, 0.00013545799999999802, 0.00013554200000000238, 0.00013508300000000112, 0.000135554999999999, 0.00013544400000000192, 0.00013583399999999787, 0.00013547200000000106, 0.000135264000000003, 0.00013540299999999922, 0.0001355139999999963, 0.00013484700000000044, 0.00013499999999999623, 0.00013545900000000444, 0.0001358469999999945, 0.00013534700000000094, 0.00013536199999999998, 0.00013568100000000555]</msg>
<status status="PASS" starttime="20201030 15:55:39.802" endtime="20201030 15:55:39.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.798" endtime="20201030 15:55:39.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.809" endtime="20201030 15:55:39.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.808" endtime="20201030 15:55:39.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.807" endtime="20201030 15:55:39.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.445" endtime="20201030 15:55:39.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.444" endtime="20201030 15:55:39.831"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.840" endtime="20201030 15:55:39.860"></status>
</kw>
<msg timestamp="20201030 15:55:39.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.838" endtime="20201030 15:55:39.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.861" endtime="20201030 15:55:39.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.864" endtime="20201030 15:55:39.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.836" endtime="20201030 15:55:39.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.833" endtime="20201030 15:55:39.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.873" endtime="20201030 15:55:40.159"></status>
</kw>
<msg timestamp="20201030 15:55:40.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.871" endtime="20201030 15:55:40.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.163" endtime="20201030 15:55:40.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.171" endtime="20201030 15:55:40.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.868" endtime="20201030 15:55:40.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.867" endtime="20201030 15:55:40.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.178" level="INFO">${RESULT} = [{'diff': 0.00013690200000000124}, {'diff': 0.00013591599999999981}, {'diff': 0.00013644399999999945}, {'diff': 0.00013598599999999766}, {'diff': 0.0001366390000000009}, {'diff': 0.0001364730000000015...</msg>
<status status="PASS" starttime="20201030 15:55:40.174" endtime="20201030 15:55:40.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.182" level="INFO">${ACCURACY} = {'diff': [0.00013690200000000124, 0.00013591599999999981, 0.00013644399999999945, 0.00013598599999999766, 0.0001366390000000009, 0.00013647300000000154, 0.00013676400000000102, 0.00013636200000000098,...</msg>
<status status="PASS" starttime="20201030 15:55:40.179" endtime="20201030 15:55:40.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.187" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.186" endtime="20201030 15:55:40.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.189" level="INFO">VALUE: [0.00013690200000000124, 0.00013591599999999981, 0.00013644399999999945, 0.00013598599999999766, 0.0001366390000000009, 0.00013647300000000154, 0.00013676400000000102, 0.00013636200000000098, 0.00013652700000000087, 0.00013590200000000024, 0.00013616600000000006, 0.00013666600000000056, 0.0001361390000000004, 0.00013597300000000104, 0.00013613899999999693, 0.00013676400000000102, 0.00013598599999999766, 0.00013608300000000212, 0.00013625000000000095, 0.0001367910000000007, 0.00013658399999999862, 0.0001365419999999999, 0.00013648599999999816, 0.0001361809999999991, 0.00013670799999999927, 0.0001360000000000007, 0.00013663799999999796, 0.00013598599999999766, 0.00013627700000000062, 0.00013675000000000145, 0.00013602799999999984, 0.00013584699999999797, 0.00013601400000000027, 0.00013583399999999787, 0.00013659699999999872, 0.00013602799999999984, 0.00013629200000000313, 0.00013673599999999841, 0.0001365130000000013, 0.00013658299999999915, 0.0001367780000000006, 0.00013648600000000163, 0.0001357779999999996, 0.00013601400000000027, 0.00013584700000000144, 0.00013677799999999712, 0.00013666700000000004, 0.00013622199999999834, 0.00013626400000000052, 0.00013623600000000138]</msg>
<status status="PASS" starttime="20201030 15:55:40.188" endtime="20201030 15:55:40.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.183" endtime="20201030 15:55:40.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.194" endtime="20201030 15:55:40.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.193" endtime="20201030 15:55:40.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.192" endtime="20201030 15:55:40.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.832" endtime="20201030 15:55:40.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.831" endtime="20201030 15:55:40.215"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.224" endtime="20201030 15:55:40.244"></status>
</kw>
<msg timestamp="20201030 15:55:40.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.222" endtime="20201030 15:55:40.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.245" endtime="20201030 15:55:40.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.247" endtime="20201030 15:55:40.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.219" endtime="20201030 15:55:40.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.217" endtime="20201030 15:55:40.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.256" endtime="20201030 15:55:40.542"></status>
</kw>
<msg timestamp="20201030 15:55:40.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.255" endtime="20201030 15:55:40.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.546" endtime="20201030 15:55:40.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.554" endtime="20201030 15:55:40.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.252" endtime="20201030 15:55:40.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.251" endtime="20201030 15:55:40.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.561" level="INFO">${RESULT} = [{'diff': 0.00013741699999999732}, {'diff': 0.00013766699999999757}, {'diff': 0.00013736200000000198}, {'diff': 0.00013779200000000116}, {'diff': 0.00013715199999999803}, {'diff': 0.000137110999999998...</msg>
<status status="PASS" starttime="20201030 15:55:40.558" endtime="20201030 15:55:40.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.565" level="INFO">${ACCURACY} = {'diff': [0.00013741699999999732, 0.00013766699999999757, 0.00013736200000000198, 0.00013779200000000116, 0.00013715199999999803, 0.0001371109999999988, 0.00013741600000000131, 0.0001371109999999988, ...</msg>
<status status="PASS" starttime="20201030 15:55:40.562" endtime="20201030 15:55:40.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.569" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.568" endtime="20201030 15:55:40.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.571" level="INFO">VALUE: [0.00013741699999999732, 0.00013766699999999757, 0.00013736200000000198, 0.00013779200000000116, 0.00013715199999999803, 0.0001371109999999988, 0.00013741600000000131, 0.0001371109999999988, 0.00013758300000000015, 0.00013681899999999983, 0.00013704099999999747, 0.00013691599999999735, 0.00013697299999999857, 0.00013756900000000058, 0.0001370000000000017, 0.00013761100000000276, 0.00013712499999999836, 0.00013781900000000083, 0.00013695900000000247, 0.00013754199999999744, 0.0001375840000000031, 0.00013779200000000116, 0.0001373049999999973, 0.0001371520000000015, 0.0001371529999999975, 0.00013736099999999904, 0.0001374170000000008, 0.00013720799999999977, 0.00013694399999999995, 0.00013702800000000084, 0.00013744499999999993, 0.00013715300000000097, 0.00013702799999999737, 0.0001371520000000015, 0.00013690299999999725, 0.0001375420000000009, 0.0001374170000000008, 0.00013690300000000072, 0.00013776400000000202, 0.0001377780000000016, 0.0001376940000000007, 0.0001377780000000016, 0.0001373879999999987, 0.00013697300000000204, 0.00013740300000000122, 0.00013729200000000066, 0.0001369719999999991, 0.0001371109999999988, 0.000136861999999998, 0.00013734699999999947]</msg>
<status status="PASS" starttime="20201030 15:55:40.570" endtime="20201030 15:55:40.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.565" endtime="20201030 15:55:40.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.580" endtime="20201030 15:55:40.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.579" endtime="20201030 15:55:40.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.577" endtime="20201030 15:55:40.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.216" endtime="20201030 15:55:40.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.215" endtime="20201030 15:55:40.601"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.609" endtime="20201030 15:55:40.630"></status>
</kw>
<msg timestamp="20201030 15:55:40.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.608" endtime="20201030 15:55:40.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.632" endtime="20201030 15:55:40.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.634" endtime="20201030 15:55:40.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.605" endtime="20201030 15:55:40.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.603" endtime="20201030 15:55:40.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.643" endtime="20201030 15:55:40.928"></status>
</kw>
<msg timestamp="20201030 15:55:40.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.642" endtime="20201030 15:55:40.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.932" endtime="20201030 15:55:40.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.942" endtime="20201030 15:55:40.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.639" endtime="20201030 15:55:40.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.638" endtime="20201030 15:55:40.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.951" level="INFO">${RESULT} = [{'diff': 0.00013855599999999801}, {'diff': 0.00013816700000000154}, {'diff': 0.00013797299999999957}, {'diff': 0.00013790300000000172}, {'diff': 0.00013879200000000216}, {'diff': 0.000137972000000000...</msg>
<status status="PASS" starttime="20201030 15:55:40.947" endtime="20201030 15:55:40.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.957" level="INFO">${ACCURACY} = {'diff': [0.00013855599999999801, 0.00013816700000000154, 0.00013797299999999957, 0.00013790300000000172, 0.00013879200000000216, 0.0001379720000000001, 0.00013884700000000097, 0.00013822200000000034,...</msg>
<status status="PASS" starttime="20201030 15:55:40.952" endtime="20201030 15:55:40.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.963" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.962" endtime="20201030 15:55:40.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.967" level="INFO">VALUE: [0.00013855599999999801, 0.00013816700000000154, 0.00013797299999999957, 0.00013790300000000172, 0.00013879200000000216, 0.0001379720000000001, 0.00013884700000000097, 0.00013822200000000034, 0.000137861000000003, 0.00013842999999999842, 0.00013836100000000004, 0.000138652999999999, 0.000137861999999999, 0.00013804200000000141, 0.0001385980000000002, 0.00013838899999999918, 0.00013802800000000184, 0.00013802799999999837, 0.0001388200000000013, 0.00013863899999999943, 0.0001381529999999985, 0.00013877799999999912, 0.0001379170000000013, 0.0001384170000000018, 0.00013869500000000118, 0.00013852799999999887, 0.00013815199999999903, 0.00013790299999999825, 0.00013852700000000287, 0.0001383330000000009, 0.00013879200000000216, 0.000138862, 0.0001382780000000021, 0.0001381109999999998, 0.00013831999999999733, 0.00013786099999999954, 0.00013854099999999897, 0.00013877799999999912, 0.00013876399999999955, 0.000137959, 0.00013804199999999794, 0.00013877699999999965, 0.00013870800000000127, 0.0001386110000000003, 0.00013848600000000016, 0.0001386110000000003, 0.0001384720000000006, 0.00013822200000000034, 0.00013798599999999966, 0.00013812500000000283]</msg>
<status status="PASS" starttime="20201030 15:55:40.964" endtime="20201030 15:55:40.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.958" endtime="20201030 15:55:40.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.974" endtime="20201030 15:55:40.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.973" endtime="20201030 15:55:40.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.971" endtime="20201030 15:55:40.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.602" endtime="20201030 15:55:40.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.601" endtime="20201030 15:55:40.995"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.004" endtime="20201030 15:55:41.024"></status>
</kw>
<msg timestamp="20201030 15:55:41.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.002" endtime="20201030 15:55:41.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.025" endtime="20201030 15:55:41.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.028" endtime="20201030 15:55:41.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.000" endtime="20201030 15:55:41.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.998" endtime="20201030 15:55:41.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.037" endtime="20201030 15:55:41.322"></status>
</kw>
<msg timestamp="20201030 15:55:41.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.035" endtime="20201030 15:55:41.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.326" endtime="20201030 15:55:41.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.334" endtime="20201030 15:55:41.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.033" endtime="20201030 15:55:41.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.031" endtime="20201030 15:55:41.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.341" level="INFO">${RESULT} = [{'diff': 0.00013981999999999883}, {'diff': 0.00013907000000000155}, {'diff': 0.00013940299999999975}, {'diff': 0.00013919399999999874}, {'diff': 0.00013944399999999899}, {'diff': 0.000139583999999998...</msg>
<status status="PASS" starttime="20201030 15:55:41.337" endtime="20201030 15:55:41.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.345" level="INFO">${ACCURACY} = {'diff': [0.00013981999999999883, 0.00013907000000000155, 0.00013940299999999975, 0.00013919399999999874, 0.00013944399999999899, 0.00013958399999999815, 0.00013894499999999796, 0.00013986100000000154...</msg>
<status status="PASS" starttime="20201030 15:55:41.341" endtime="20201030 15:55:41.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.350" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.349" endtime="20201030 15:55:41.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.352" level="INFO">VALUE: [0.00013981999999999883, 0.00013907000000000155, 0.00013940299999999975, 0.00013919399999999874, 0.00013944399999999899, 0.00013958399999999815, 0.00013894499999999796, 0.00013986100000000154, 0.00013944399999999899, 0.0001393750000000006, 0.00013891599999999935, 0.00013907000000000155, 0.00013895800000000152, 0.00013888899999999968, 0.00013963899999999696, 0.00013892999999999892, 0.00013938900000000018, 0.00013975000000000098, 0.00013938900000000018, 0.00013973600000000141, 0.00013963900000000043, 0.0001393330000000019, 0.00013890300000000272, 0.00013908299999999818, 0.00013894400000000195, 0.00013906999999999808, 0.00013897300000000057, 0.00013961099999999782, 0.00013969399999999924, 0.00013975000000000098, 0.00013967999999999967, 0.0001397370000000009, 0.00013941699999999932, 0.0001395270000000004, 0.0001392919999999992, 0.00013957000000000205, 0.0001395140000000003, 0.00013909699999999775, 0.0001388330000000014, 0.0001389309999999984, 0.00013977800000000012, 0.00013881999999999783, 0.00013892999999999892, 0.00013967999999999967, 0.00013975000000000098, 0.00013948600000000116, 0.00013894500000000143, 0.00013912500000000036, 0.00013906999999999808, 0.0001388750000000001]</msg>
<status status="PASS" starttime="20201030 15:55:41.351" endtime="20201030 15:55:41.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.346" endtime="20201030 15:55:41.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.357" endtime="20201030 15:55:41.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.356" endtime="20201030 15:55:41.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.355" endtime="20201030 15:55:41.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.996" endtime="20201030 15:55:41.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.995" endtime="20201030 15:55:41.378"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.387" endtime="20201030 15:55:41.407"></status>
</kw>
<msg timestamp="20201030 15:55:41.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.385" endtime="20201030 15:55:41.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.408" endtime="20201030 15:55:41.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.411" endtime="20201030 15:55:41.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.383" endtime="20201030 15:55:41.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.381" endtime="20201030 15:55:41.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.420" endtime="20201030 15:55:41.706"></status>
</kw>
<msg timestamp="20201030 15:55:41.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.418" endtime="20201030 15:55:41.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.711" endtime="20201030 15:55:41.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.719" endtime="20201030 15:55:41.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.416" endtime="20201030 15:55:41.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.414" endtime="20201030 15:55:41.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.726" level="INFO">${RESULT} = [{'diff': 0.00014018000000000017}, {'diff': 0.00014068100000000014}, {'diff': 0.00014040300000000075}, {'diff': 0.00013995899999999853}, {'diff': 0.00014055600000000001}, {'diff': 0.000140764000000001...</msg>
<status status="PASS" starttime="20201030 15:55:41.723" endtime="20201030 15:55:41.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.730" level="INFO">${ACCURACY} = {'diff': [0.00014018000000000017, 0.00014068100000000014, 0.00014040300000000075, 0.00013995899999999853, 0.00014055600000000001, 0.00014076400000000155, 0.00014009699999999875, 0.00014062500000000186...</msg>
<status status="PASS" starttime="20201030 15:55:41.727" endtime="20201030 15:55:41.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.735" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.734" endtime="20201030 15:55:41.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.737" level="INFO">VALUE: [0.00014018000000000017, 0.00014068100000000014, 0.00014040300000000075, 0.00013995899999999853, 0.00014055600000000001, 0.00014076400000000155, 0.00014009699999999875, 0.00014062500000000186, 0.00014011200000000126, 0.00014000000000000123, 0.00013997300000000157, 0.00014045899999999903, 0.00014018099999999964, 0.00014008300000000265, 0.00014047199999999913, 0.00014044399999999999, 0.0001406949999999997, 0.00014000000000000123, 0.00014063900000000143, 0.0001402079999999993, 0.0001405140000000013, 0.0001402079999999993, 0.00013998600000000166, 0.00014005599999999951, 0.0001403750000000016, 0.0001400140000000008, 0.00014018099999999964, 0.00013992999999999992, 0.000139862000000001, 0.00014073599999999895, 0.0001402920000000002, 0.0001403880000000017, 0.00014036100000000204, 0.00014074999999999852, 0.00014038900000000118, 0.00014056899999999664, 0.0001405140000000013, 0.0001403880000000017, 0.00013990300000000025, 0.00014005500000000004, 0.0001401949999999992, 0.00014074999999999852, 0.00014005599999999951, 0.00014008400000000212, 0.0001400689999999996, 0.00014044399999999999, 0.00014052800000000087, 0.000140346999999999, 0.00014074999999999852, 0.00014074999999999852]</msg>
<status status="PASS" starttime="20201030 15:55:41.736" endtime="20201030 15:55:41.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.731" endtime="20201030 15:55:41.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.742" endtime="20201030 15:55:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.741" endtime="20201030 15:55:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.740" endtime="20201030 15:55:41.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.379" endtime="20201030 15:55:41.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.378" endtime="20201030 15:55:41.763"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.772" endtime="20201030 15:55:41.793"></status>
</kw>
<msg timestamp="20201030 15:55:41.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.770" endtime="20201030 15:55:41.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.794" endtime="20201030 15:55:41.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.797" endtime="20201030 15:55:41.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.768" endtime="20201030 15:55:41.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.766" endtime="20201030 15:55:41.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.806" endtime="20201030 15:55:42.092"></status>
</kw>
<msg timestamp="20201030 15:55:42.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.804" endtime="20201030 15:55:42.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.096" endtime="20201030 15:55:42.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.104" endtime="20201030 15:55:42.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.802" endtime="20201030 15:55:42.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.800" endtime="20201030 15:55:42.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.111" level="INFO">${RESULT} = [{'diff': 0.00014170799999999734}, {'diff': 0.00014123699999999892}, {'diff': 0.00014083299999999993}, {'diff': 0.00014130600000000076}, {'diff': 0.00014107000000000008}, {'diff': 0.000141610999999999...</msg>
<status status="PASS" starttime="20201030 15:55:42.107" endtime="20201030 15:55:42.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.116" level="INFO">${ACCURACY} = {'diff': [0.00014170799999999734, 0.00014123699999999892, 0.00014083299999999993, 0.00014130600000000076, 0.00014107000000000008, 0.00014161099999999982, 0.00014184799999999997, 0.00014123599999999945...</msg>
<status status="PASS" starttime="20201030 15:55:42.112" endtime="20201030 15:55:42.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.120" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.119" endtime="20201030 15:55:42.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.123" level="INFO">VALUE: [0.00014170799999999734, 0.00014123699999999892, 0.00014083299999999993, 0.00014130600000000076, 0.00014107000000000008, 0.00014161099999999982, 0.00014184799999999997, 0.00014123599999999945, 0.0001416249999999994, 0.00014130600000000076, 0.00014083299999999993, 0.0001410140000000018, 0.00014155600000000101, 0.00014149999999999927, 0.00014172200000000038, 0.0001412080000000003, 0.0001410140000000018, 0.0001410140000000018, 0.00014152800000000187, 0.00014159700000000025, 0.0001411249999999989, 0.0001410690000000006, 0.00014083299999999993, 0.00014138799999999924, 0.00014137499999999914, 0.0001416110000000033, 0.00014111099999999932, 0.00014094400000000049, 0.0001414729999999996, 0.00014142999999999795, 0.00014137499999999914, 0.0001413750000000026, 0.0001416249999999994, 0.00014104200000000094, 0.00014161099999999982, 0.00014080600000000026, 0.00014162500000000286, 0.00014124999999999902, 0.00014101399999999834, 0.00014161099999999982, 0.00014143000000000142, 0.00014168000000000167, 0.00014158300000000068, 0.00014169400000000124, 0.00014126399999999859, 0.0001408889999999982, 0.0001416249999999994, 0.00014149999999999927, 0.00014149999999999927, 0.0001411249999999989]</msg>
<status status="PASS" starttime="20201030 15:55:42.121" endtime="20201030 15:55:42.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.117" endtime="20201030 15:55:42.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.129" endtime="20201030 15:55:42.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.127" endtime="20201030 15:55:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.126" endtime="20201030 15:55:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.764" endtime="20201030 15:55:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.763" endtime="20201030 15:55:42.149"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.158" endtime="20201030 15:55:42.178"></status>
</kw>
<msg timestamp="20201030 15:55:42.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.156" endtime="20201030 15:55:42.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.180" endtime="20201030 15:55:42.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.182" endtime="20201030 15:55:42.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.154" endtime="20201030 15:55:42.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.152" endtime="20201030 15:55:42.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.191" endtime="20201030 15:55:42.477"></status>
</kw>
<msg timestamp="20201030 15:55:42.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.190" endtime="20201030 15:55:42.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.481" endtime="20201030 15:55:42.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.489" endtime="20201030 15:55:42.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.187" endtime="20201030 15:55:42.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.185" endtime="20201030 15:55:42.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.496" level="INFO">${RESULT} = [{'diff': 0.00014229099999999925}, {'diff': 0.00014186100000000007}, {'diff': 0.0001428189999999989}, {'diff': 0.00014251399999999984}, {'diff': 0.00014213899999999946}, {'diff': 0.0001427640000000000...</msg>
<status status="PASS" starttime="20201030 15:55:42.492" endtime="20201030 15:55:42.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.500" level="INFO">${ACCURACY} = {'diff': [0.00014229099999999925, 0.00014186100000000007, 0.0001428189999999989, 0.00014251399999999984, 0.00014213899999999946, 0.00014276400000000009, 0.0001425279999999994, 0.0001426250000000004, 0...</msg>
<status status="PASS" starttime="20201030 15:55:42.497" endtime="20201030 15:55:42.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.505" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.504" endtime="20201030 15:55:42.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.507" level="INFO">VALUE: [0.00014229099999999925, 0.00014186100000000007, 0.0001428189999999989, 0.00014251399999999984, 0.00014213899999999946, 0.00014276400000000009, 0.0001425279999999994, 0.0001426250000000004, 0.0001421669999999986, 0.0001424860000000007, 0.00014277799999999966, 0.00014258300000000168, 0.0001425279999999994, 0.00014208400000000065, 0.00014237500000000014, 0.0001427219999999979, 0.00014234699999999753, 0.0001424860000000007, 0.00014283399999999793, 0.00014254200000000244, 0.00014240300000000275, 0.00014241599999999938, 0.00014233299999999796, 0.00014243000000000242, 0.00014202699999999943, 0.00014234800000000047, 0.00014259700000000125, 0.00014277799999999966, 0.00014247199999999766, 0.00014191700000000182, 0.0001423189999999984, 0.00014244500000000146, 0.0001423189999999984, 0.00014225000000000002, 0.00014240299999999928, 0.0001420279999999989, 0.0001418470000000005, 0.0001423889999999997, 0.00014201399999999934, 0.0001423889999999997, 0.0001419860000000002, 0.00014255600000000201, 0.0001424860000000007, 0.0001424019999999998, 0.0001419310000000014, 0.00014286200000000054, 0.0001426120000000003, 0.00014265200000000006, 0.00014219399999999827, 0.00014207000000000108]</msg>
<status status="PASS" starttime="20201030 15:55:42.506" endtime="20201030 15:55:42.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.501" endtime="20201030 15:55:42.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.512" endtime="20201030 15:55:42.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.511" endtime="20201030 15:55:42.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.510" endtime="20201030 15:55:42.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.150" endtime="20201030 15:55:42.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.150" endtime="20201030 15:55:42.533"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.542" endtime="20201030 15:55:42.562"></status>
</kw>
<msg timestamp="20201030 15:55:42.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.540" endtime="20201030 15:55:42.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.563" endtime="20201030 15:55:42.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.566" endtime="20201030 15:55:42.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.538" endtime="20201030 15:55:42.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.536" endtime="20201030 15:55:42.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.575" endtime="20201030 15:55:42.862"></status>
</kw>
<msg timestamp="20201030 15:55:42.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.573" endtime="20201030 15:55:42.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.866" endtime="20201030 15:55:42.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.874" endtime="20201030 15:55:42.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.571" endtime="20201030 15:55:42.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.569" endtime="20201030 15:55:42.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.880" level="INFO">${RESULT} = [{'diff': 0.00014313900000000046}, {'diff': 0.00014340300000000028}, {'diff': 0.000143347000000002}, {'diff': 0.00014355500000000007}, {'diff': 0.0001431799999999997}, {'diff': 0.00014323599999999798}...</msg>
<status status="PASS" starttime="20201030 15:55:42.877" endtime="20201030 15:55:42.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.884" level="INFO">${ACCURACY} = {'diff': [0.00014313900000000046, 0.00014340300000000028, 0.000143347000000002, 0.00014355500000000007, 0.0001431799999999997, 0.00014323599999999798, 0.00014294399999999902, 0.00014337500000000114, 0...</msg>
<status status="PASS" starttime="20201030 15:55:42.881" endtime="20201030 15:55:42.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.889" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.888" endtime="20201030 15:55:42.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.891" level="INFO">VALUE: [0.00014313900000000046, 0.00014340300000000028, 0.000143347000000002, 0.00014355500000000007, 0.0001431799999999997, 0.00014323599999999798, 0.00014294399999999902, 0.00014337500000000114, 0.00014308400000000165, 0.00014369399999999977, 0.0001433189999999994, 0.00014356999999999911, 0.0001436250000000014, 0.00014311099999999785, 0.00014365300000000053, 0.00014334800000000147, 0.00014326400000000059, 0.00014313900000000046, 0.00014313900000000046, 0.00014297200000000163, 0.0001430829999999987, 0.000143041, 0.0001435829999999992, 0.00014326400000000059, 0.0001435129999999979, 0.00014341600000000038, 0.00014336100000000157, 0.00014340300000000028, 0.00014316700000000307, 0.00014287500000000064, 0.0001429020000000003, 0.00014306899999999914, 0.00014281999999999836, 0.00014313799999999752, 0.0001429020000000003, 0.00014294399999999902, 0.00014350000000000127, 0.00014359699999999878, 0.00014363900000000096, 0.00014290299999999978, 0.00014306999999999861, 0.0001436800000000002, 0.00014368100000000314, 0.00014375000000000152, 0.00014350000000000127, 0.0001436800000000002, 0.00014294400000000249, 0.00014295800000000206, 0.00014377799999999719, 0.00014294399999999902]</msg>
<status status="PASS" starttime="20201030 15:55:42.890" endtime="20201030 15:55:42.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.885" endtime="20201030 15:55:42.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.896" endtime="20201030 15:55:42.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.895" endtime="20201030 15:55:42.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.893" endtime="20201030 15:55:42.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.534" endtime="20201030 15:55:42.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.533" endtime="20201030 15:55:42.917"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.925" endtime="20201030 15:55:42.949"></status>
</kw>
<msg timestamp="20201030 15:55:42.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.924" endtime="20201030 15:55:42.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.950" endtime="20201030 15:55:42.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.953" endtime="20201030 15:55:42.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.921" endtime="20201030 15:55:42.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.919" endtime="20201030 15:55:42.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.962" endtime="20201030 15:55:43.248"></status>
</kw>
<msg timestamp="20201030 15:55:43.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02493825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:42.960" endtime="20201030 15:55:43.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02493825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:43.252" endtime="20201030 15:55:43.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.260" endtime="20201030 15:55:43.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.958" endtime="20201030 15:55:43.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.956" endtime="20201030 15:55:43.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.266" level="INFO">${RESULT} = [{'diff': 0.00014416699999999713}, {'diff': 0.00014406999999999962}, {'diff': 0.00014419499999999974}, {'diff': 0.00014451400000000184}, {'diff': 0.00014469400000000077}, {'diff': 0.000144499999999998...</msg>
<status status="PASS" starttime="20201030 15:55:43.263" endtime="20201030 15:55:43.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.270" level="INFO">${ACCURACY} = {'diff': [0.00014416699999999713, 0.00014406999999999962, 0.00014419499999999974, 0.00014451400000000184, 0.00014469400000000077, 0.0001444999999999988, 0.00014447200000000313, 0.00014437499999999867,...</msg>
<status status="PASS" starttime="20201030 15:55:43.267" endtime="20201030 15:55:43.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.275" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.274" endtime="20201030 15:55:43.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.277" level="INFO">VALUE: [0.00014416699999999713, 0.00014406999999999962, 0.00014419499999999974, 0.00014451400000000184, 0.00014469400000000077, 0.0001444999999999988, 0.00014447200000000313, 0.00014437499999999867, 0.00014401399999999787, 0.00014424999999999855, 0.00014438799999999877, 0.0001445129999999989, 0.0001442769999999982, 0.00014415300000000103, 0.00014455500000000107, 0.00014457000000000012, 0.00014469500000000024, 0.0001443190000000004, 0.00014438899999999824, 0.00014461099999999935, 0.00014451399999999837, 0.00014455500000000107, 0.00014465300000000153, 0.00014386199999999807, 0.00014408399999999918, 0.00014450000000000227, 0.00014462499999999892, 0.00014419400000000027, 0.00014461099999999935, 0.00014424999999999855, 0.00014479200000000123, 0.00014386100000000207, 0.00014444400000000052, 0.00014395899999999906, 0.00014388899999999774, 0.0001446389999999985, 0.0001443190000000004, 0.00014409699999999928, 0.00014473599999999948, 0.00014394400000000002, 0.00014395799999999959, 0.0001447219999999999, 0.00014448599999999923, 0.00014480599999999733, 0.00014394400000000002, 0.0001445690000000041, 0.00014395799999999959, 0.00014409700000000275, 0.00014402799999999744, 0.00014476399999999862]</msg>
<status status="PASS" starttime="20201030 15:55:43.276" endtime="20201030 15:55:43.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.271" endtime="20201030 15:55:43.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.283" endtime="20201030 15:55:43.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.281" endtime="20201030 15:55:43.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.280" endtime="20201030 15:55:43.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.918" endtime="20201030 15:55:43.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.917" endtime="20201030 15:55:43.303"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.312" endtime="20201030 15:55:43.332"></status>
</kw>
<msg timestamp="20201030 15:55:43.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.311" endtime="20201030 15:55:43.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.334" endtime="20201030 15:55:43.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.336" endtime="20201030 15:55:43.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.308" endtime="20201030 15:55:43.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.306" endtime="20201030 15:55:43.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.345" endtime="20201030 15:55:43.630"></status>
</kw>
<msg timestamp="20201030 15:55:43.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.344" endtime="20201030 15:55:43.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.634" endtime="20201030 15:55:43.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.642" endtime="20201030 15:55:43.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.341" endtime="20201030 15:55:43.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.340" endtime="20201030 15:55:43.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.648" level="INFO">${RESULT} = [{'diff': 0.00014556899999999817}, {'diff': 0.00014581899999999842}, {'diff': 0.00014505500000000157}, {'diff': 0.00014493100000000092}, {'diff': 0.00014573600000000048}, {'diff': 0.000144805000000001...</msg>
<status status="PASS" starttime="20201030 15:55:43.645" endtime="20201030 15:55:43.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.653" level="INFO">${ACCURACY} = {'diff': [0.00014556899999999817, 0.00014581899999999842, 0.00014505500000000157, 0.00014493100000000092, 0.00014573600000000048, 0.00014480500000000132, 0.00014575000000000005, 0.00014480599999999733...</msg>
<status status="PASS" starttime="20201030 15:55:43.649" endtime="20201030 15:55:43.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.658" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.657" endtime="20201030 15:55:43.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.660" level="INFO">VALUE: [0.00014556899999999817, 0.00014581899999999842, 0.00014505500000000157, 0.00014493100000000092, 0.00014573600000000048, 0.00014480500000000132, 0.00014575000000000005, 0.00014480599999999733, 0.00014581899999999842, 0.0001455419999999985, 0.00014576399999999962, 0.00014487499999999917, 0.00014548600000000023, 0.0001448060000000008, 0.00014551400000000284, 0.00014555599999999808, 0.00014562499999999992, 0.00014505600000000105, 0.0001458060000000018, 0.00014504099999999853, 0.00014500000000000277, 0.00014493100000000092, 0.0001451809999999977, 0.0001452220000000004, 0.000145348, 0.00014532000000000087, 0.00014513900000000246, 0.00014538899999999924, 0.000145138999999999, 0.00014543099999999795, 0.0001450549999999981, 0.00014488899999999874, 0.0001456389999999995, 0.00014575000000000005, 0.00014565299999999906, 0.0001449999999999993, 0.00014554099999999903, 0.00014537499999999967, 0.0001448609999999996, 0.00014567999999999873, 0.00014502700000000243, 0.00014566600000000263, 0.00014555500000000207, 0.00014529200000000173, 0.00014558400000000069, 0.00014488899999999874, 0.00014562499999999992, 0.00014508299999999724, 0.00014556999999999765, 0.00014573600000000048]</msg>
<status status="PASS" starttime="20201030 15:55:43.659" endtime="20201030 15:55:43.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.654" endtime="20201030 15:55:43.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.665" endtime="20201030 15:55:43.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.664" endtime="20201030 15:55:43.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.662" endtime="20201030 15:55:43.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.304" endtime="20201030 15:55:43.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.304" endtime="20201030 15:55:43.686"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.694" endtime="20201030 15:55:43.715"></status>
</kw>
<msg timestamp="20201030 15:55:43.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.693" endtime="20201030 15:55:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.716" endtime="20201030 15:55:43.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.719" endtime="20201030 15:55:43.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.690" endtime="20201030 15:55:43.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.688" endtime="20201030 15:55:43.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.728" endtime="20201030 15:55:44.016"></status>
</kw>
<msg timestamp="20201030 15:55:44.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.726" endtime="20201030 15:55:44.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.020" endtime="20201030 15:55:44.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.028" endtime="20201030 15:55:44.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.724" endtime="20201030 15:55:44.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.722" endtime="20201030 15:55:44.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.034" level="INFO">${RESULT} = [{'diff': 0.00014625000000000055}, {'diff': 0.0001465419999999995}, {'diff': 0.00014598600000000073}, {'diff': 0.0001459870000000002}, {'diff': 0.00014661099999999788}, {'diff': 0.00014629199999999926...</msg>
<status status="PASS" starttime="20201030 15:55:44.031" endtime="20201030 15:55:44.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.038" level="INFO">${ACCURACY} = {'diff': [0.00014625000000000055, 0.0001465419999999995, 0.00014598600000000073, 0.0001459870000000002, 0.00014661099999999788, 0.00014629199999999926, 0.0001461800000000027, 0.00014626300000000064, 0...</msg>
<status status="PASS" starttime="20201030 15:55:44.035" endtime="20201030 15:55:44.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.043" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.042" endtime="20201030 15:55:44.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.045" level="INFO">VALUE: [0.00014625000000000055, 0.0001465419999999995, 0.00014598600000000073, 0.0001459870000000002, 0.00014661099999999788, 0.00014629199999999926, 0.0001461800000000027, 0.00014626300000000064, 0.0001459580000000016, 0.00014602799999999944, 0.00014580499999999885, 0.0001462770000000002, 0.00014675000000000105, 0.00014595799999999812, 0.00014681899999999942, 0.0001464589999999981, 0.0001466939999999993, 0.00014641700000000285, 0.00014674999999999758, 0.0001466809999999992, 0.0001463610000000011, 0.00014673700000000095, 0.00014677800000000019, 0.00014587500000000017, 0.00014643099999999895, 0.0001466520000000006, 0.0001464029999999998, 0.00014633400000000144, 0.00014606899999999867, 0.0001465139999999969, 0.00014588899999999974, 0.00014587500000000017, 0.00014601399999999987, 0.0001463199999999984, 0.00014582000000000137, 0.0001462090000000013, 0.00014651400000000037, 0.00014587500000000017, 0.00014662500000000092, 0.00014594400000000202, 0.0001463199999999984, 0.00014625000000000055, 0.0001460830000000017, 0.00014619499999999827, 0.0001460000000000003, 0.00014583400000000094, 0.0001465830000000022, 0.0001459870000000002, 0.00014594499999999802, 0.0001458480000000005]</msg>
<status status="PASS" starttime="20201030 15:55:44.044" endtime="20201030 15:55:44.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.039" endtime="20201030 15:55:44.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.050" endtime="20201030 15:55:44.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.048" endtime="20201030 15:55:44.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.047" endtime="20201030 15:55:44.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.687" endtime="20201030 15:55:44.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.686" endtime="20201030 15:55:44.071"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.079" endtime="20201030 15:55:44.101"></status>
</kw>
<msg timestamp="20201030 15:55:44.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.078" endtime="20201030 15:55:44.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.102" endtime="20201030 15:55:44.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.105" endtime="20201030 15:55:44.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.075" endtime="20201030 15:55:44.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.073" endtime="20201030 15:55:44.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.114" endtime="20201030 15:55:44.399"></status>
</kw>
<msg timestamp="20201030 15:55:44.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.112" endtime="20201030 15:55:44.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.403" endtime="20201030 15:55:44.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.411" endtime="20201030 15:55:44.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.110" endtime="20201030 15:55:44.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.108" endtime="20201030 15:55:44.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.418" level="INFO">${RESULT} = [{'diff': 0.00014704100000000053}, {'diff': 0.00014756999999999965}, {'diff': 0.00014716600000000066}, {'diff': 0.00014687500000000117}, {'diff': 0.00014711200000000133}, {'diff': 0.000147402999999997...</msg>
<status status="PASS" starttime="20201030 15:55:44.415" endtime="20201030 15:55:44.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.422" level="INFO">${ACCURACY} = {'diff': [0.00014704100000000053, 0.00014756999999999965, 0.00014716600000000066, 0.00014687500000000117, 0.00014711200000000133, 0.00014740299999999734, 0.00014762500000000192, 0.0001473610000000021,...</msg>
<status status="PASS" starttime="20201030 15:55:44.419" endtime="20201030 15:55:44.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.426" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.425" endtime="20201030 15:55:44.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.429" level="INFO">VALUE: [0.00014704100000000053, 0.00014756999999999965, 0.00014716600000000066, 0.00014687500000000117, 0.00014711200000000133, 0.00014740299999999734, 0.00014762500000000192, 0.0001473610000000021, 0.00014730500000000035, 0.00014716700000000013, 0.00014722199999999894, 0.00014780500000000085, 0.00014752799999999747, 0.00014754100000000103, 0.00014680599999999933, 0.00014761100000000235, 0.00014693099999999945, 0.00014754199999999704, 0.00014683300000000246, 0.00014698600000000173, 0.00014769499999999977, 0.0001472359999999985, 0.00014744400000000005, 0.00014686200000000108, 0.0001473749999999982, 0.00014688900000000074, 0.00014780600000000033, 0.0001468610000000016, 0.00014718000000000023, 0.000147139000000001, 0.00014780500000000085, 0.00014738900000000124, 0.00014719499999999927, 0.00014723699999999798, 0.00014751400000000137, 0.00014738900000000124, 0.00014745799999999962, 0.00014724999999999808, 0.00014745799999999962, 0.00014748599999999876, 0.00014762500000000192, 0.00014699999999999783, 0.00014762499999999845, 0.00014758299999999974, 0.00014744400000000005, 0.00014708299999999924, 0.00014724999999999808, 0.00014743000000000048, 0.00014738900000000124, 0.00014704100000000053]</msg>
<status status="PASS" starttime="20201030 15:55:44.427" endtime="20201030 15:55:44.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.423" endtime="20201030 15:55:44.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.434" endtime="20201030 15:55:44.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.433" endtime="20201030 15:55:44.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.432" endtime="20201030 15:55:44.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.072" endtime="20201030 15:55:44.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.071" endtime="20201030 15:55:44.455"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.464" endtime="20201030 15:55:44.484"></status>
</kw>
<msg timestamp="20201030 15:55:44.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.462" endtime="20201030 15:55:44.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.486" endtime="20201030 15:55:44.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.488" endtime="20201030 15:55:44.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.460" endtime="20201030 15:55:44.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.458" endtime="20201030 15:55:44.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.497" endtime="20201030 15:55:44.783"></status>
</kw>
<msg timestamp="20201030 15:55:44.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.496" endtime="20201030 15:55:44.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.787" endtime="20201030 15:55:44.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.795" endtime="20201030 15:55:44.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.493" endtime="20201030 15:55:44.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.492" endtime="20201030 15:55:44.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.802" level="INFO">${RESULT} = [{'diff': 0.00014829100000000178}, {'diff': 0.00014816700000000113}, {'diff': 0.00014790299999999784}, {'diff': 0.00014848599999999976}, {'diff': 0.00014811200000000233}, {'diff': 0.000148485999999999...</msg>
<status status="PASS" starttime="20201030 15:55:44.798" endtime="20201030 15:55:44.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.806" level="INFO">${ACCURACY} = {'diff': [0.00014829100000000178, 0.00014816700000000113, 0.00014790299999999784, 0.00014848599999999976, 0.00014811200000000233, 0.00014848599999999976, 0.00014812500000000242, 0.00014880499999999838...</msg>
<status status="PASS" starttime="20201030 15:55:44.803" endtime="20201030 15:55:44.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.811" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.810" endtime="20201030 15:55:44.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.813" level="INFO">VALUE: [0.00014829100000000178, 0.00014816700000000113, 0.00014790299999999784, 0.00014848599999999976, 0.00014811200000000233, 0.00014848599999999976, 0.00014812500000000242, 0.00014880499999999838, 0.00014826400000000212, 0.00014843000000000148, 0.00014841700000000138, 0.00014816700000000113, 0.0001485550000000016, 0.00014805600000000058, 0.00014793100000000045, 0.0001479719999999997, 0.0001484160000000019, 0.00014822199999999994, 0.0001479719999999997, 0.00014776399999999815, 0.00014858400000000022, 0.00014793100000000045, 0.00014861200000000283, 0.00014862499999999945, 0.00014840299999999834, 0.0001486529999999986, 0.00014854100000000203, 0.0001479719999999997, 0.00014855600000000108, 0.00014770899999999934, 0.0001483749999999992, 0.0001479160000000014, 0.00014859799999999979, 0.0001488200000000009, 0.00014794500000000002, 0.00014805499999999763, 0.00014784699999999956, 0.00014812499999999895, 0.0001479169999999974, 0.0001486390000000025, 0.00014834700000000006, 0.00014802700000000196, 0.0001481940000000008, 0.00014780600000000033, 0.00014849999999999933, 0.00014861099999999988, 0.00014830500000000135, 0.00014844500000000052, 0.00014829200000000126, 0.000148736]</msg>
<status status="PASS" starttime="20201030 15:55:44.812" endtime="20201030 15:55:44.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.807" endtime="20201030 15:55:44.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.818" endtime="20201030 15:55:44.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.817" endtime="20201030 15:55:44.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.816" endtime="20201030 15:55:44.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.456" endtime="20201030 15:55:44.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.455" endtime="20201030 15:55:44.839"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.850" endtime="20201030 15:55:44.872"></status>
</kw>
<msg timestamp="20201030 15:55:44.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.848" endtime="20201030 15:55:44.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.874" endtime="20201030 15:55:44.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.876" endtime="20201030 15:55:44.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.845" endtime="20201030 15:55:44.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.842" endtime="20201030 15:55:44.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.885" endtime="20201030 15:55:45.171"></status>
</kw>
<msg timestamp="20201030 15:55:45.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025607, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025756611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:44.884" endtime="20201030 15:55:45.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025607, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025756611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:45.175" endtime="20201030 15:55:45.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.183" endtime="20201030 15:55:45.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.881" endtime="20201030 15:55:45.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.879" endtime="20201030 15:55:45.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.189" level="INFO">${RESULT} = [{'diff': 0.0001496109999999974}, {'diff': 0.0001495970000000013}, {'diff': 0.00014906999999999768}, {'diff': 0.00014927800000000269}, {'diff': 0.0001496659999999997}, {'diff': 0.000149736000000001}, ...</msg>
<status status="PASS" starttime="20201030 15:55:45.186" endtime="20201030 15:55:45.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.194" level="INFO">${ACCURACY} = {'diff': [0.0001496109999999974, 0.0001495970000000013, 0.00014906999999999768, 0.00014927800000000269, 0.0001496659999999997, 0.000149736000000001, 0.00014970800000000187, 0.0001495559999999986, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:45.191" endtime="20201030 15:55:45.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.198" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.197" endtime="20201030 15:55:45.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.200" level="INFO">VALUE: [0.0001496109999999974, 0.0001495970000000013, 0.00014906999999999768, 0.00014927800000000269, 0.0001496659999999997, 0.000149736000000001, 0.00014970800000000187, 0.0001495559999999986, 0.00014930600000000183, 0.00014966699999999916, 0.00014920900000000084, 0.00014977799999999972, 0.00014893099999999798, 0.00014956900000000217, 0.00014954099999999956, 0.00014976400000000015, 0.00014887500000000317, 0.00014954199999999904, 0.00014886100000000013, 0.00014930599999999836, 0.00014947199999999772, 0.00014958300000000174, 0.0001493750000000002, 0.00014911100000000038, 0.00014930499999999888, 0.00014955499999999913, 0.00014899999999999983, 0.00014975000000000058, 0.00014972199999999797, 0.0001487919999999983, 0.00014890199999999937, 0.0001489299999999985, 0.00014933299999999802, 0.00014956900000000217, 0.0001496949999999983, 0.00014936100000000063, 0.00014941600000000638, 0.00014886100000000013, 0.00014898600000000373, 0.0001494859999999973, 0.0001493750000000002, 0.000149042000000002, 0.0001497499999999971, 0.0001495420000000025, 0.0001491529999999991, 0.00014916699999999866, 0.00014890299999999884, 0.00014940199999999987, 0.00014927799999999575, 0.0001491949999999978]</msg>
<status status="PASS" starttime="20201030 15:55:45.199" endtime="20201030 15:55:45.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.194" endtime="20201030 15:55:45.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.205" endtime="20201030 15:55:45.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.204" endtime="20201030 15:55:45.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.203" endtime="20201030 15:55:45.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.840" endtime="20201030 15:55:45.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.839" endtime="20201030 15:55:45.226"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.235" endtime="20201030 15:55:45.256"></status>
</kw>
<msg timestamp="20201030 15:55:45.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.233" endtime="20201030 15:55:45.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.258" endtime="20201030 15:55:45.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.260" endtime="20201030 15:55:45.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.231" endtime="20201030 15:55:45.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.228" endtime="20201030 15:55:45.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.269" endtime="20201030 15:55:45.554"></status>
</kw>
<msg timestamp="20201030 15:55:45.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.268" endtime="20201030 15:55:45.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.558" endtime="20201030 15:55:45.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.566" endtime="20201030 15:55:45.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.265" endtime="20201030 15:55:45.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.263" endtime="20201030 15:55:45.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.573" level="INFO">${RESULT} = [{'diff': 0.00015084700000000256}, {'diff': 0.00015041600000000044}, {'diff': 0.00015022200000000194}, {'diff': 0.00015041600000000044}, {'diff': 0.00015043099999999948}, {'diff': 0.000150764000000001...</msg>
<status status="PASS" starttime="20201030 15:55:45.570" endtime="20201030 15:55:45.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.577" level="INFO">${ACCURACY} = {'diff': [0.00015084700000000256, 0.00015041600000000044, 0.00015022200000000194, 0.00015041600000000044, 0.00015043099999999948, 0.00015076400000000115, 0.00015022199999999847, 0.00014979200000000276...</msg>
<status status="PASS" starttime="20201030 15:55:45.574" endtime="20201030 15:55:45.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.581" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.580" endtime="20201030 15:55:45.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.584" level="INFO">VALUE: [0.00015084700000000256, 0.00015041600000000044, 0.00015022200000000194, 0.00015041600000000044, 0.00015043099999999948, 0.00015076400000000115, 0.00015022199999999847, 0.00014979200000000276, 0.0001499590000000016, 0.00015058299999999927, 0.00015023599999999804, 0.0001497919999999993, 0.0001502079999999989, 0.00015070899999999887, 0.00015025000000000108, 0.00015011100000000138, 0.00015009699999999834, 0.00015058399999999875, 0.00015000000000000083, 0.000149833000000002, 0.00014987499999999723, 0.00015016699999999966, 0.0001505689999999997, 0.0001500559999999991, 0.00015013900000000052, 0.0001500140000000004, 0.0001501949999999988, 0.0001504859999999983, 0.00015025000000000108, 0.00014983299999999852, 0.00015065199999999765, 0.00015052800000000047, 0.00015043099999999948, 0.00014986099999999766, 0.00015000000000000083, 0.0001503750000000012, 0.00015059699999999884, 0.00015059699999999884, 0.0001505409999999971, 0.0001501530000000001, 0.00015027700000000074, 0.00014998600000000126, 0.00014997199999999822, 0.00015009699999999834, 0.0001499720000000017, 0.000150527000000001, 0.00014993099999999898, 0.00015018099999999923, 0.00015031999999999893, 0.00015008299999999877]</msg>
<status status="PASS" starttime="20201030 15:55:45.582" endtime="20201030 15:55:45.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.578" endtime="20201030 15:55:45.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.594" endtime="20201030 15:55:45.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.592" endtime="20201030 15:55:45.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.591" endtime="20201030 15:55:45.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.227" endtime="20201030 15:55:45.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.226" endtime="20201030 15:55:45.614"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.623" endtime="20201030 15:55:45.644"></status>
</kw>
<msg timestamp="20201030 15:55:45.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.621" endtime="20201030 15:55:45.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.645" endtime="20201030 15:55:45.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.647" endtime="20201030 15:55:45.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.619" endtime="20201030 15:55:45.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.617" endtime="20201030 15:55:45.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.657" endtime="20201030 15:55:45.945"></status>
</kw>
<msg timestamp="20201030 15:55:45.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.655" endtime="20201030 15:55:45.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.949" endtime="20201030 15:55:45.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.957" endtime="20201030 15:55:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.652" endtime="20201030 15:55:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.651" endtime="20201030 15:55:45.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.964" level="INFO">${RESULT} = [{'diff': 0.00015094500000000302}, {'diff': 0.00015151399999999843}, {'diff': 0.00015077800000000072}, {'diff': 0.00015076400000000115}, {'diff': 0.00015141600000000144}, {'diff': 0.000151569000000000...</msg>
<status status="PASS" starttime="20201030 15:55:45.961" endtime="20201030 15:55:45.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.969" level="INFO">${ACCURACY} = {'diff': [0.00015094500000000302, 0.00015151399999999843, 0.00015077800000000072, 0.00015076400000000115, 0.00015141600000000144, 0.0001515690000000007, 0.00015138900000000177, 0.0001511119999999984, ...</msg>
<status status="PASS" starttime="20201030 15:55:45.965" endtime="20201030 15:55:45.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.973" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.972" endtime="20201030 15:55:45.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.976" level="INFO">VALUE: [0.00015094500000000302, 0.00015151399999999843, 0.00015077800000000072, 0.00015076400000000115, 0.00015141600000000144, 0.0001515690000000007, 0.00015138900000000177, 0.0001511119999999984, 0.0001512910000000013, 0.00015172199999999997, 0.00015127800000000122, 0.00015094499999999955, 0.0001510140000000014, 0.00015138900000000177, 0.00015126399999999818, 0.00015154200000000104, 0.00015095800000000312, 0.0001510270000000015, 0.0001510560000000001, 0.00015113900000000152, 0.00015168100000000073, 0.00015149999999999886, 0.00015113799999999858, 0.00015119400000000033, 0.0001515690000000007, 0.00015169400000000083, 0.00015144400000000058, 0.0001511109999999989, 0.0001511530000000011, 0.00015163899999999855, 0.00015137499999999873, 0.00015088900000000127, 0.00015158300000000027, 0.0001515690000000007, 0.0001509720000000027, 0.00015112500000000195, 0.00015081899999999995, 0.0001511119999999984, 0.00015102800000000097, 0.00015169400000000083, 0.00015144500000000005, 0.00015083400000000247, 0.00015076399999999768, 0.00015126399999999818, 0.00015113899999999805, 0.00015091600000000094, 0.00015091600000000094, 0.00015150000000000233, 0.00015136199999999864, 0.00015130500000000088]</msg>
<status status="PASS" starttime="20201030 15:55:45.974" endtime="20201030 15:55:45.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.969" endtime="20201030 15:55:45.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.980" endtime="20201030 15:55:46.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.979" endtime="20201030 15:55:46.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.978" endtime="20201030 15:55:46.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.615" endtime="20201030 15:55:46.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.615" endtime="20201030 15:55:46.001"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.010" endtime="20201030 15:55:46.031"></status>
</kw>
<msg timestamp="20201030 15:55:46.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.008" endtime="20201030 15:55:46.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.032" endtime="20201030 15:55:46.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.035" endtime="20201030 15:55:46.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.006" endtime="20201030 15:55:46.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.004" endtime="20201030 15:55:46.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.044" endtime="20201030 15:55:46.331"></status>
</kw>
<msg timestamp="20201030 15:55:46.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.042" endtime="20201030 15:55:46.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.335" endtime="20201030 15:55:46.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.343" endtime="20201030 15:55:46.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.040" endtime="20201030 15:55:46.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.038" endtime="20201030 15:55:46.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.350" level="INFO">${RESULT} = [{'diff': 0.0001523470000000006}, {'diff': 0.00015280499999999891}, {'diff': 0.00015247200000000072}, {'diff': 0.00015273600000000054}, {'diff': 0.00015263899999999955}, {'diff': 0.0001527360000000005...</msg>
<status status="PASS" starttime="20201030 15:55:46.347" endtime="20201030 15:55:46.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.354" level="INFO">${ACCURACY} = {'diff': [0.0001523470000000006, 0.00015280499999999891, 0.00015247200000000072, 0.00015273600000000054, 0.00015263899999999955, 0.00015273600000000054, 0.00015259700000000084, 0.0001525829999999978, ...</msg>
<status status="PASS" starttime="20201030 15:55:46.351" endtime="20201030 15:55:46.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.358" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.357" endtime="20201030 15:55:46.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.361" level="INFO">VALUE: [0.0001523470000000006, 0.00015280499999999891, 0.00015247200000000072, 0.00015273600000000054, 0.00015263899999999955, 0.00015273600000000054, 0.00015259700000000084, 0.0001525829999999978, 0.00015230500000000188, 0.00015237499999999973, 0.00015212499999999948, 0.00015268100000000173, 0.00015190299999999837, 0.00015186099999999966, 0.00015173599999999954, 0.00015223600000000004, 0.0001527500000000001, 0.00015266700000000216, 0.00015222200000000047, 0.00015195799999999718, 0.00015240300000000234, 0.00015172199999999997, 0.00015218000000000176, 0.00015216700000000166, 0.00015266700000000216, 0.0001526669999999987, 0.0001520279999999985, 0.0001521109999999999, 0.00015247199999999725, 0.00015242999999999854, 0.00015186099999999966, 0.00015190299999999837, 0.00015215299999999862, 0.0001522089999999969, 0.00015222200000000047, 0.000151834, 0.00015233299999999755, 0.00015272200000000097, 0.00015199999999999936, 0.00015263899999999955, 0.0001525409999999991, 0.00015277699999999977, 0.0001527500000000001, 0.00015268100000000173, 0.00015266700000000216, 0.0001523889999999993, 0.00015187499999999923, 0.00015183300000000052, 0.000152527999999999, 0.00015195800000000065]</msg>
<status status="PASS" starttime="20201030 15:55:46.359" endtime="20201030 15:55:46.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.355" endtime="20201030 15:55:46.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.366" endtime="20201030 15:55:46.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.364" endtime="20201030 15:55:46.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.363" endtime="20201030 15:55:46.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.002" endtime="20201030 15:55:46.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.002" endtime="20201030 15:55:46.386"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.395" endtime="20201030 15:55:46.419"></status>
</kw>
<msg timestamp="20201030 15:55:46.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.394" endtime="20201030 15:55:46.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.421" endtime="20201030 15:55:46.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.423" endtime="20201030 15:55:46.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.391" endtime="20201030 15:55:46.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.389" endtime="20201030 15:55:46.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.432" endtime="20201030 15:55:46.719"></status>
</kw>
<msg timestamp="20201030 15:55:46.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025011319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.431" endtime="20201030 15:55:46.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025011319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.723" endtime="20201030 15:55:46.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.731" endtime="20201030 15:55:46.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.428" endtime="20201030 15:55:46.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.426" endtime="20201030 15:55:46.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.738" level="INFO">${RESULT} = [{'diff': 0.0001533890000000003}, {'diff': 0.0001533890000000003}, {'diff': 0.00015344500000000205}, {'diff': 0.0001532089999999979}, {'diff': 0.000153528}, {'diff': 0.00015374999999999764}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:55:46.735" endtime="20201030 15:55:46.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.742" level="INFO">${ACCURACY} = {'diff': [0.0001533890000000003, 0.0001533890000000003, 0.00015344500000000205, 0.0001532089999999979, 0.000153528, 0.00015374999999999764, 0.00015355500000000313, 0.00015359699999999837, 0.0001535130...</msg>
<status status="PASS" starttime="20201030 15:55:46.739" endtime="20201030 15:55:46.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.746" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.745" endtime="20201030 15:55:46.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.749" level="INFO">VALUE: [0.0001533890000000003, 0.0001533890000000003, 0.00015344500000000205, 0.0001532089999999979, 0.000153528, 0.00015374999999999764, 0.00015355500000000313, 0.00015359699999999837, 0.00015351300000000095, 0.00015281999999999796, 0.00015309700000000134, 0.00015381899999999948, 0.0001536110000000014, 0.00015322200000000147, 0.00015294500000000155, 0.00015284800000000057, 0.0001526799999999988, 0.00015309699999999787, 0.00015347199999999825, 0.0001527920000000023, 0.0001533059999999989, 0.00015326400000000018, 0.00015312500000000048, 0.00015306899999999873, 0.0001537219999999985, 0.00015347199999999825, 0.00015315200000000015, 0.0001537089999999984, 0.00015361099999999794, 0.00015356899999999923, 0.00015279099999999934, 0.00015322200000000147, 0.00015373599999999807, 0.00015374999999999764, 0.00015372200000000197, 0.00015295799999999818, 0.00015323600000000104, 0.00015288899999999633, 0.00015276399999999968, 0.00015334800000000454, 0.00015279199999999882, 0.00015329199999999932, 0.00015284700000000456, 0.00015291699999999547, 0.00015372200000000197, 0.0001529170000000024, 0.00015301399999999993, 0.0001534170000000029, 0.00015327799999999975, 0.00015372199999999503]</msg>
<status status="PASS" starttime="20201030 15:55:46.748" endtime="20201030 15:55:46.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.743" endtime="20201030 15:55:46.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.755" endtime="20201030 15:55:46.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.753" endtime="20201030 15:55:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.752" endtime="20201030 15:55:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.387" endtime="20201030 15:55:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.387" endtime="20201030 15:55:46.775"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.784" endtime="20201030 15:55:46.805"></status>
</kw>
<msg timestamp="20201030 15:55:46.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.783" endtime="20201030 15:55:46.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.807" endtime="20201030 15:55:46.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.809" endtime="20201030 15:55:46.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.780" endtime="20201030 15:55:46.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.778" endtime="20201030 15:55:46.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.818" endtime="20201030 15:55:47.104"></status>
</kw>
<msg timestamp="20201030 15:55:47.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.817" endtime="20201030 15:55:47.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.108" endtime="20201030 15:55:47.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.116" endtime="20201030 15:55:47.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.814" endtime="20201030 15:55:47.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.813" endtime="20201030 15:55:47.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.122" level="INFO">${RESULT} = [{'diff': 0.00015404200000000007}, {'diff': 0.0001538470000000021}, {'diff': 0.00015405599999999964}, {'diff': 0.0001546800000000008}, {'diff': 0.00015407000000000268}, {'diff': 0.0001546809999999968}...</msg>
<status status="PASS" starttime="20201030 15:55:47.119" endtime="20201030 15:55:47.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.127" level="INFO">${ACCURACY} = {'diff': [0.00015404200000000007, 0.0001538470000000021, 0.00015405599999999964, 0.0001546800000000008, 0.00015407000000000268, 0.0001546809999999968, 0.00015394499999999908, 0.0001545829999999998, 0....</msg>
<status status="PASS" starttime="20201030 15:55:47.123" endtime="20201030 15:55:47.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.132" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.131" endtime="20201030 15:55:47.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.134" level="INFO">VALUE: [0.00015404200000000007, 0.0001538470000000021, 0.00015405599999999964, 0.0001546800000000008, 0.00015407000000000268, 0.0001546809999999968, 0.00015394499999999908, 0.0001545829999999998, 0.00015395799999999918, 0.00015412500000000148, 0.00015455500000000066, 0.00015462500000000198, 0.0001539439999999996, 0.00015463899999999808, 0.00015395799999999918, 0.0001541670000000002, 0.00015409699999999887, 0.00015433299999999955, 0.0001547089999999994, 0.00015456900000000023, 0.00015463899999999808, 0.00015386100000000166, 0.0001537500000000011, 0.00015431999999999946, 0.00015404200000000007, 0.00015411099999999844, 0.00015401400000000093, 0.00015443000000000054, 0.00015376400000000068, 0.00015382000000000243, 0.00015413800000000158, 0.00015401400000000093, 0.00015448599999999882, 0.00015401400000000093, 0.00015463899999999808, 0.00015445799999999968, 0.00015376400000000068, 0.00015405500000000016, 0.0001540829999999993, 0.0001541670000000002, 0.00015412500000000148, 0.00015455500000000066, 0.00015459699999999937, 0.00015424999999999814, 0.00015447200000000272, 0.0001539439999999996, 0.00015456900000000023, 0.00015451400000000143, 0.00015431899999999998, 0.0001540829999999993]</msg>
<status status="PASS" starttime="20201030 15:55:47.133" endtime="20201030 15:55:47.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.128" endtime="20201030 15:55:47.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.139" endtime="20201030 15:55:47.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.138" endtime="20201030 15:55:47.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.137" endtime="20201030 15:55:47.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.776" endtime="20201030 15:55:47.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.776" endtime="20201030 15:55:47.160"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.168" endtime="20201030 15:55:47.189"></status>
</kw>
<msg timestamp="20201030 15:55:47.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.167" endtime="20201030 15:55:47.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.191" endtime="20201030 15:55:47.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.193" endtime="20201030 15:55:47.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.164" endtime="20201030 15:55:47.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.162" endtime="20201030 15:55:47.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.202" endtime="20201030 15:55:47.488"></status>
</kw>
<msg timestamp="20201030 15:55:47.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.201" endtime="20201030 15:55:47.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.492" endtime="20201030 15:55:47.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.501" endtime="20201030 15:55:47.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.198" endtime="20201030 15:55:47.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.197" endtime="20201030 15:55:47.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.507" level="INFO">${RESULT} = [{'diff': 0.00015554200000000157}, {'diff': 0.00015509699999999987}, {'diff': 0.00015508399999999978}, {'diff': 0.000155222}, {'diff': 0.0001553609999999997}, {'diff': 0.0001552500000000026}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:55:47.504" endtime="20201030 15:55:47.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.511" level="INFO">${ACCURACY} = {'diff': [0.00015554200000000157, 0.00015509699999999987, 0.00015508399999999978, 0.000155222, 0.0001553609999999997, 0.0001552500000000026, 0.0001556939999999979, 0.00015495800000000018, 0.0001548469...</msg>
<status status="PASS" starttime="20201030 15:55:47.508" endtime="20201030 15:55:47.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.515" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.514" endtime="20201030 15:55:47.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.518" level="INFO">VALUE: [0.00015554200000000157, 0.00015509699999999987, 0.00015508399999999978, 0.000155222, 0.0001553609999999997, 0.0001552500000000026, 0.0001556939999999979, 0.00015495800000000018, 0.00015484699999999962, 0.0001557220000000005, 0.00015534700000000012, 0.0001554999999999994, 0.00015501399999999846, 0.00015533400000000003, 0.00015488899999999833, 0.00015501399999999846, 0.0001557500000000031, 0.00015484699999999962, 0.00015505600000000064, 0.00015547200000000025, 0.00015565299999999865, 0.00015509699999999987, 0.00015501399999999846, 0.0001549440000000006, 0.00015484699999999962, 0.00015563899999999908, 0.00015548599999999982, 0.00015551399999999896, 0.0001557090000000004, 0.0001554579999999972, 0.00015502799999999803, 0.00015495800000000018, 0.0001554159999999985, 0.0001548609999999992, 0.00015495800000000018, 0.00015480500000000091, 0.0001557090000000004, 0.00015570800000000093, 0.0001554999999999994, 0.00015519400000000086, 0.00015577799999999878, 0.00015538899999999883, 0.0001550830000000003, 0.00015565299999999865, 0.00015518100000000076, 0.0001552089999999999, 0.0001556939999999979, 0.00015556999999999724, 0.00015551399999999896, 0.0001548890000000018]</msg>
<status status="PASS" starttime="20201030 15:55:47.517" endtime="20201030 15:55:47.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.512" endtime="20201030 15:55:47.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.523" endtime="20201030 15:55:47.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.521" endtime="20201030 15:55:47.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.520" endtime="20201030 15:55:47.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.161" endtime="20201030 15:55:47.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.160" endtime="20201030 15:55:47.544"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.552" endtime="20201030 15:55:47.574"></status>
</kw>
<msg timestamp="20201030 15:55:47.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.551" endtime="20201030 15:55:47.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.576" endtime="20201030 15:55:47.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.578" endtime="20201030 15:55:47.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.548" endtime="20201030 15:55:47.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.546" endtime="20201030 15:55:47.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.587" endtime="20201030 15:55:47.873"></status>
</kw>
<msg timestamp="20201030 15:55:47.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.586" endtime="20201030 15:55:47.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.877" endtime="20201030 15:55:47.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.886" endtime="20201030 15:55:47.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.583" endtime="20201030 15:55:47.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.581" endtime="20201030 15:55:47.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.892" level="INFO">${RESULT} = [{'diff': 0.0001566809999999988}, {'diff': 0.00015647200000000125}, {'diff': 0.00015632000000000146}, {'diff': 0.0001558610000000002}, {'diff': 0.00015620800000000143}, {'diff': 0.0001564579999999982}...</msg>
<status status="PASS" starttime="20201030 15:55:47.889" endtime="20201030 15:55:47.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.896" level="INFO">${ACCURACY} = {'diff': [0.0001566809999999988, 0.00015647200000000125, 0.00015632000000000146, 0.0001558610000000002, 0.00015620800000000143, 0.0001564579999999982, 0.00015618100000000176, 0.0001562769999999998, 0....</msg>
<status status="PASS" starttime="20201030 15:55:47.893" endtime="20201030 15:55:47.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.900" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.899" endtime="20201030 15:55:47.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.903" level="INFO">VALUE: [0.0001566809999999988, 0.00015647200000000125, 0.00015632000000000146, 0.0001558610000000002, 0.00015620800000000143, 0.0001564579999999982, 0.00015618100000000176, 0.0001562769999999998, 0.00015597300000000022, 0.00015670899999999793, 0.00015597200000000075, 0.00015636099999999722, 0.00015588799999999986, 0.00015617999999999882, 0.00015656899999999876, 0.00015627799999999928, 0.00015640199999999993, 0.00015645900000000115, 0.0001565839999999978, 0.00015665200000000018, 0.00015597200000000075, 0.00015584700000000062, 0.00015595900000000065, 0.00015662500000000051, 0.00015583400000000053, 0.00015623600000000057, 0.00015652700000000005, 0.00015638899999999983, 0.00015638899999999983, 0.0001557769999999993, 0.0001567090000000014, 0.00015602699999999955, 0.00015627799999999928, 0.00015595800000000118, 0.0001560969999999974, 0.00015634700000000112, 0.00015608400000000078, 0.00015581899999999801, 0.0001565839999999978, 0.00015598600000000032, 0.00015616599999999925, 0.00015633299999999808, 0.00015630599999999842, 0.0001564159999999995, 0.00015675000000000064, 0.000156319999999998, 0.00015595800000000118, 0.00015579099999999887, 0.00015611100000000044, 0.00015633300000000155]</msg>
<status status="PASS" starttime="20201030 15:55:47.902" endtime="20201030 15:55:47.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.897" endtime="20201030 15:55:47.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.909" endtime="20201030 15:55:47.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.907" endtime="20201030 15:55:47.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.906" endtime="20201030 15:55:47.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.545" endtime="20201030 15:55:47.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.544" endtime="20201030 15:55:47.929"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.938" endtime="20201030 15:55:47.959"></status>
</kw>
<msg timestamp="20201030 15:55:47.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.936" endtime="20201030 15:55:47.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.961" endtime="20201030 15:55:47.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.963" endtime="20201030 15:55:47.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.934" endtime="20201030 15:55:47.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.932" endtime="20201030 15:55:47.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.972" endtime="20201030 15:55:48.259"></status>
</kw>
<msg timestamp="20201030 15:55:48.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.970" endtime="20201030 15:55:48.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.263" endtime="20201030 15:55:48.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.271" endtime="20201030 15:55:48.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.968" endtime="20201030 15:55:48.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.966" endtime="20201030 15:55:48.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.277" level="INFO">${RESULT} = [{'diff': 0.00015790299999999743}, {'diff': 0.00015716600000000025}, {'diff': 0.00015686099999999772}, {'diff': 0.00015761099999999847}, {'diff': 0.0001575139999999975}, {'diff': 0.0001577220000000025...</msg>
<status status="PASS" starttime="20201030 15:55:48.274" endtime="20201030 15:55:48.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.282" level="INFO">${ACCURACY} = {'diff': [0.00015790299999999743, 0.00015716600000000025, 0.00015686099999999772, 0.00015761099999999847, 0.0001575139999999975, 0.0001577220000000025, 0.0001573610000000017, 0.00015724999999999767, 0...</msg>
<status status="PASS" starttime="20201030 15:55:48.278" endtime="20201030 15:55:48.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.287" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.286" endtime="20201030 15:55:48.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.289" level="INFO">VALUE: [0.00015790299999999743, 0.00015716600000000025, 0.00015686099999999772, 0.00015761099999999847, 0.0001575139999999975, 0.0001577220000000025, 0.0001573610000000017, 0.00015724999999999767, 0.00015680599999999892, 0.0001569029999999999, 0.00015730599999999942, 0.00015722199999999853, 0.00015734700000000212, 0.00015684700000000162, 0.00015763900000000108, 0.00015697199999999828, 0.00015756899999999976, 0.00015761100000000194, 0.0001577220000000025, 0.00015679099999999987, 0.00015698600000000132, 0.00015720800000000243, 0.00015763899999999761, 0.00015756999999999924, 0.00015755599999999967, 0.00015726300000000124, 0.00015736099999999822, 0.00015716699999999972, 0.00015677799999999978, 0.00015720799999999896, 0.00015748600000000182, 0.00015713900000000058, 0.00015704099999999666, 0.0001575000000000014, 0.00015759700000000237, 0.00015719500000000233, 0.00015686200000000067, 0.0001570000000000009, 0.00015683299999999858, 0.00015743000000000007, 0.00015701300000000099, 0.0001575139999999975, 0.00015688900000000033, 0.00015698599999999785, 0.00015770899999999893, 0.00015688800000000086, 0.00015762499999999804, 0.00015701400000000046, 0.0001574030000000004, 0.00015695900000000165]</msg>
<status status="PASS" starttime="20201030 15:55:48.288" endtime="20201030 15:55:48.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.283" endtime="20201030 15:55:48.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.294" endtime="20201030 15:55:48.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.293" endtime="20201030 15:55:48.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.292" endtime="20201030 15:55:48.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.930" endtime="20201030 15:55:48.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.930" endtime="20201030 15:55:48.315"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.324" endtime="20201030 15:55:48.345"></status>
</kw>
<msg timestamp="20201030 15:55:48.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.322" endtime="20201030 15:55:48.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.346" endtime="20201030 15:55:48.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.349" endtime="20201030 15:55:48.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.319" endtime="20201030 15:55:48.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.317" endtime="20201030 15:55:48.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.357" endtime="20201030 15:55:48.644"></status>
</kw>
<msg timestamp="20201030 15:55:48.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.356" endtime="20201030 15:55:48.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.648" endtime="20201030 15:55:48.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.656" endtime="20201030 15:55:48.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.353" endtime="20201030 15:55:48.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.352" endtime="20201030 15:55:48.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.662" level="INFO">${RESULT} = [{'diff': 0.0001584030000000014}, {'diff': 0.0001585969999999999}, {'diff': 0.0001583749999999988}, {'diff': 0.0001581810000000003}, {'diff': 0.00015868099999999732}, {'diff': 0.0001578749999999983}, ...</msg>
<status status="PASS" starttime="20201030 15:55:48.659" endtime="20201030 15:55:48.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.666" level="INFO">${ACCURACY} = {'diff': [0.0001584030000000014, 0.0001585969999999999, 0.0001583749999999988, 0.0001581810000000003, 0.00015868099999999732, 0.0001578749999999983, 0.00015862499999999904, 0.0001582909999999979, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:48.663" endtime="20201030 15:55:48.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.671" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.670" endtime="20201030 15:55:48.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.673" level="INFO">VALUE: [0.0001584030000000014, 0.0001585969999999999, 0.0001583749999999988, 0.0001581810000000003, 0.00015868099999999732, 0.0001578749999999983, 0.00015862499999999904, 0.0001582909999999979, 0.00015801400000000146, 0.0001578749999999983, 0.00015829199999999738, 0.00015869500000000036, 0.00015857000000000024, 0.00015870899999999993, 0.00015856900000000076, 0.00015866600000000175, 0.00015858300000000033, 0.00015802800000000103, 0.00015798599999999885, 0.00015866599999999828, 0.0001584580000000002, 0.00015862500000000251, 0.0001578749999999983, 0.00015830600000000042, 0.0001584160000000015, 0.0001585139999999985, 0.00015804099999999766, 0.00015865300000000165, 0.00015841599999999803, 0.00015834699999999965, 0.00015827800000000128, 0.00015852800000000153, 0.00015872200000000003, 0.0001584450000000001, 0.00015791700000000047, 0.0001583610000000027, 0.00015777800000000078, 0.00015869500000000036, 0.00015861099999999947, 0.00015820799999999996, 0.00015798599999999885, 0.00015808299999999983, 0.00015865300000000165, 0.0001580969999999994, 0.00015856900000000076, 0.00015790199999999796, 0.00015824999999999867, 0.00015866700000000122, 0.00015797199999999928, 0.00015830500000000094]</msg>
<status status="PASS" starttime="20201030 15:55:48.672" endtime="20201030 15:55:48.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.667" endtime="20201030 15:55:48.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.678" endtime="20201030 15:55:48.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.676" endtime="20201030 15:55:48.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.675" endtime="20201030 15:55:48.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.316" endtime="20201030 15:55:48.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.315" endtime="20201030 15:55:48.699"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.707" endtime="20201030 15:55:48.729"></status>
</kw>
<msg timestamp="20201030 15:55:48.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.706" endtime="20201030 15:55:48.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.731" endtime="20201030 15:55:48.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.733" endtime="20201030 15:55:48.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.703" endtime="20201030 15:55:48.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.701" endtime="20201030 15:55:48.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.742" endtime="20201030 15:55:49.030"></status>
</kw>
<msg timestamp="20201030 15:55:49.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.741" endtime="20201030 15:55:49.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.034" endtime="20201030 15:55:49.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.042" endtime="20201030 15:55:49.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.738" endtime="20201030 15:55:49.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.737" endtime="20201030 15:55:49.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.048" level="INFO">${RESULT} = [{'diff': 0.000159320000000001}, {'diff': 0.00015912499999999954}, {'diff': 0.000159320000000001}, {'diff': 0.0001592779999999988}, {'diff': 0.0001592779999999988}, {'diff': 0.0001594580000000012}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:49.045" endtime="20201030 15:55:49.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.052" level="INFO">${ACCURACY} = {'diff': [0.000159320000000001, 0.00015912499999999954, 0.000159320000000001, 0.0001592779999999988, 0.0001592779999999988, 0.0001594580000000012, 0.00015966699999999875, 0.00015924999999999967, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:49.049" endtime="20201030 15:55:49.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.057" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.056" endtime="20201030 15:55:49.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.059" level="INFO">VALUE: [0.000159320000000001, 0.00015912499999999954, 0.000159320000000001, 0.0001592779999999988, 0.0001592779999999988, 0.0001594580000000012, 0.00015966699999999875, 0.00015924999999999967, 0.0001589580000000007, 0.00015911099999999997, 0.00015963899999999961, 0.0001590550000000017, 0.00015973599999999713, 0.00015916599999999878, 0.0001594299999999986, 0.00015938900000000283, 0.00015954199999999863, 0.00015936100000000022, 0.00015902799999999856, 0.00015979199999999888, 0.00015904099999999866, 0.00015941700000000197, 0.00015945899999999721, 0.00015949999999999992, 0.00015943100000000154, 0.00015972200000000103, 0.00015897299999999975, 0.00015908300000000083, 0.00015972200000000103, 0.00015931900000000151, 0.00015962500000000004, 0.00015943000000000207, 0.0001589580000000007, 0.00015952800000000253, 0.00015912500000000301, 0.00015926399999999924, 0.000159013999999999, 0.00015924999999999967, 0.00015924999999999967, 0.00015883300000000058, 0.00015927800000000228, 0.00015890299999999843, 0.0001590550000000017, 0.00015938899999999936, 0.00015894500000000061, 0.00015938899999999936, 0.00015916699999999825, 0.0001593060000000049, 0.00015898599999999985, 0.00015906999999999727]</msg>
<status status="PASS" starttime="20201030 15:55:49.058" endtime="20201030 15:55:49.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.053" endtime="20201030 15:55:49.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.065" endtime="20201030 15:55:49.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.063" endtime="20201030 15:55:49.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.062" endtime="20201030 15:55:49.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.700" endtime="20201030 15:55:49.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.699" endtime="20201030 15:55:49.086"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.094" endtime="20201030 15:55:49.116"></status>
</kw>
<msg timestamp="20201030 15:55:49.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.093" endtime="20201030 15:55:49.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.117" endtime="20201030 15:55:49.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.119" endtime="20201030 15:55:49.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.090" endtime="20201030 15:55:49.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.088" endtime="20201030 15:55:49.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.128" endtime="20201030 15:55:49.414"></status>
</kw>
<msg timestamp="20201030 15:55:49.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.127" endtime="20201030 15:55:49.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.418" endtime="20201030 15:55:49.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.426" endtime="20201030 15:55:49.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.124" endtime="20201030 15:55:49.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.123" endtime="20201030 15:55:49.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.433" level="INFO">${RESULT} = [{'diff': 0.0001606520000000007}, {'diff': 0.00016016699999999925}, {'diff': 0.0001605140000000005}, {'diff': 0.0001604719999999983}, {'diff': 0.0001601520000000002}, {'diff': 0.00016030599999999895},...</msg>
<status status="PASS" starttime="20201030 15:55:49.430" endtime="20201030 15:55:49.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.438" level="INFO">${ACCURACY} = {'diff': [0.0001606520000000007, 0.00016016699999999925, 0.0001605140000000005, 0.0001604719999999983, 0.0001601520000000002, 0.00016030599999999895, 0.00015997300000000075, 0.0001604719999999983, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:49.434" endtime="20201030 15:55:49.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.442" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.441" endtime="20201030 15:55:49.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.444" level="INFO">VALUE: [0.0001606520000000007, 0.00016016699999999925, 0.0001605140000000005, 0.0001604719999999983, 0.0001601520000000002, 0.00016030599999999895, 0.00015997300000000075, 0.0001604719999999983, 0.00015990299999999943, 0.00016026400000000024, 0.000159916999999999, 0.00016045799999999874, 0.00015990299999999943, 0.000160014, 0.00016063900000000061, 0.00015990299999999943, 0.0001597779999999993, 0.00016047200000000178, 0.00016033299999999862, 0.0001605140000000005, 0.00015995900000000118, 0.00016045799999999874, 0.00016044399999999917, 0.00016025000000000067, 0.0001603889999999969, 0.00016052800000000006, 0.0001604719999999983, 0.00015988899999999986, 0.00016063900000000061, 0.00016045799999999874, 0.00016052800000000006, 0.00016068099999999932, 0.00016012500000000054, 0.00016022200000000153, 0.0001602360000000011, 0.00015997200000000128, 0.0001599580000000017, 0.00016072200000000203, 0.00016063900000000061, 0.00016025000000000067, 0.0001598200000000015, 0.00016066700000000322, 0.00015993099999999857, 0.0001605970000000019, 0.0001605970000000019, 0.0001604169999999995, 0.00016045900000000168, 0.00016047200000000178, 0.00015980500000000245, 0.00016000000000000042]</msg>
<status status="PASS" starttime="20201030 15:55:49.443" endtime="20201030 15:55:49.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.438" endtime="20201030 15:55:49.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.449" endtime="20201030 15:55:49.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.448" endtime="20201030 15:55:49.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.447" endtime="20201030 15:55:49.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.087" endtime="20201030 15:55:49.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.086" endtime="20201030 15:55:49.470"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.479" endtime="20201030 15:55:49.500"></status>
</kw>
<msg timestamp="20201030 15:55:49.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.477" endtime="20201030 15:55:49.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.501" endtime="20201030 15:55:49.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.504" endtime="20201030 15:55:49.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.475" endtime="20201030 15:55:49.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.473" endtime="20201030 15:55:49.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.513" endtime="20201030 15:55:49.799"></status>
</kw>
<msg timestamp="20201030 15:55:49.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.511" endtime="20201030 15:55:49.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.803" endtime="20201030 15:55:49.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.811" endtime="20201030 15:55:49.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.509" endtime="20201030 15:55:49.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.507" endtime="20201030 15:55:49.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.818" level="INFO">${RESULT} = [{'diff': 0.00016129200000000038}, {'diff': 0.00016086099999999826}, {'diff': 0.00016104200000000013}, {'diff': 0.00016130500000000048}, {'diff': 0.00016162499999999858}, {'diff': 0.000161486000000002...</msg>
<status status="PASS" starttime="20201030 15:55:49.815" endtime="20201030 15:55:49.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.822" level="INFO">${ACCURACY} = {'diff': [0.00016129200000000038, 0.00016086099999999826, 0.00016104200000000013, 0.00016130500000000048, 0.00016162499999999858, 0.00016148600000000235, 0.00016149999999999845, 0.0001612910000000009,...</msg>
<status status="PASS" starttime="20201030 15:55:49.819" endtime="20201030 15:55:49.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.826" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.825" endtime="20201030 15:55:49.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.829" level="INFO">VALUE: [0.00016129200000000038, 0.00016086099999999826, 0.00016104200000000013, 0.00016130500000000048, 0.00016162499999999858, 0.00016148600000000235, 0.00016149999999999845, 0.0001612910000000009, 0.00016131999999999952, 0.00016097200000000228, 0.0001612780000000008, 0.00016093099999999957, 0.000160917, 0.00016080499999999998, 0.000161610999999999, 0.00016079199999999988, 0.00016137499999999833, 0.00016112500000000154, 0.00016109699999999894, 0.0001609300000000001, 0.0001615560000000002, 0.00016143100000000007, 0.00016086099999999826, 0.00016100000000000142, 0.00016095799999999924, 0.00016079199999999988, 0.000161708, 0.00016133299999999962, 0.00016170899999999946, 0.00016112500000000154, 0.00016118099999999982, 0.0001616659999999978, 0.00016162500000000204, 0.00016091600000000053, 0.00016165300000000118, 0.00016172199999999956, 0.00016136100000000222, 0.00016111100000000197, 0.0001617499999999987, 0.00016127699999999787, 0.00016095899999999871, 0.00016113899999999765, 0.0001611520000000012, 0.00016150000000000192, 0.00016154100000000116, 0.00016172199999999956, 0.00016159699999999944, 0.00016148600000000235, 0.00016087499999999783, 0.0001612780000000008]</msg>
<status status="PASS" starttime="20201030 15:55:49.827" endtime="20201030 15:55:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.823" endtime="20201030 15:55:49.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.834" endtime="20201030 15:55:49.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.832" endtime="20201030 15:55:49.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.831" endtime="20201030 15:55:49.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.471" endtime="20201030 15:55:49.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.471" endtime="20201030 15:55:49.854"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.863" endtime="20201030 15:55:49.887"></status>
</kw>
<msg timestamp="20201030 15:55:49.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.862" endtime="20201030 15:55:49.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.889" endtime="20201030 15:55:49.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.892" endtime="20201030 15:55:49.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.859" endtime="20201030 15:55:49.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.857" endtime="20201030 15:55:49.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.901" endtime="20201030 15:55:50.186"></status>
</kw>
<msg timestamp="20201030 15:55:50.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025175625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.899" endtime="20201030 15:55:50.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025175625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.190" endtime="20201030 15:55:50.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.199" endtime="20201030 15:55:50.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.897" endtime="20201030 15:55:50.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.895" endtime="20201030 15:55:50.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.205" level="INFO">${RESULT} = [{'diff': 0.00016298600000000038}, {'diff': 0.00016204200000000113}, {'diff': 0.00016186099999999926}, {'diff': 0.00016254199999999816}, {'diff': 0.000162611}, {'diff': 0.00016216600000000178}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:55:50.202" endtime="20201030 15:55:50.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.209" level="INFO">${ACCURACY} = {'diff': [0.00016298600000000038, 0.00016204200000000113, 0.00016186099999999926, 0.00016254199999999816, 0.000162611, 0.00016216600000000178, 0.0001624720000000003, 0.00016248599999999988, 0.00016258...</msg>
<status status="PASS" starttime="20201030 15:55:50.206" endtime="20201030 15:55:50.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.213" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.212" endtime="20201030 15:55:50.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.216" level="INFO">VALUE: [0.00016298600000000038, 0.00016204200000000113, 0.00016186099999999926, 0.00016254199999999816, 0.000162611, 0.00016216600000000178, 0.0001624720000000003, 0.00016248599999999988, 0.00016258300000000087, 0.0001625279999999986, 0.0001623340000000001, 0.00016254100000000216, 0.00016273600000000013, 0.00016209699999999994, 0.00016240300000000193, 0.00016180600000000045, 0.00016277700000000284, 0.00016245900000000021, 0.00016220799999999702, 0.00016236099999999976, 0.0001627499999999997, 0.0001627219999999971, 0.0001623889999999989, 0.00016218100000000082, 0.00016201399999999852, 0.00016222200000000006, 0.00016179200000000088, 0.0001624170000000015, 0.00016250000000000292, 0.00016276399999999927, 0.00016234700000000019, 0.00016245900000000021, 0.00016204200000000113, 0.0001618049999999975, 0.00016230600000000095, 0.00016273599999999666, 0.00016204200000000113, 0.0001619030000000049, 0.00016223599999999616, 0.00016244499999999717, 0.00016263900000000608, 0.00016207000000000027, 0.00016248700000000282, 0.00016270800000000446, 0.00016265199999999924, 0.00016207000000000027, 0.0001618889999999984, 0.00016180600000000045, 0.0001622639999999953, 0.00016176300000000227]</msg>
<status status="PASS" starttime="20201030 15:55:50.214" endtime="20201030 15:55:50.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.210" endtime="20201030 15:55:50.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.221" endtime="20201030 15:55:50.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.220" endtime="20201030 15:55:50.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.219" endtime="20201030 15:55:50.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.855" endtime="20201030 15:55:50.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.855" endtime="20201030 15:55:50.242"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.251" endtime="20201030 15:55:50.272"></status>
</kw>
<msg timestamp="20201030 15:55:50.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.249" endtime="20201030 15:55:50.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.274" endtime="20201030 15:55:50.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.276" endtime="20201030 15:55:50.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.247" endtime="20201030 15:55:50.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.245" endtime="20201030 15:55:50.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.285" endtime="20201030 15:55:50.570"></status>
</kw>
<msg timestamp="20201030 15:55:50.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.284" endtime="20201030 15:55:50.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.575" endtime="20201030 15:55:50.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.583" endtime="20201030 15:55:50.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.281" endtime="20201030 15:55:50.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.279" endtime="20201030 15:55:50.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.589" level="INFO">${RESULT} = [{'diff': 0.00016333300000000162}, {'diff': 0.00016302699999999962}, {'diff': 0.00016365299999999972}, {'diff': 0.00016277799999999884}, {'diff': 0.00016283299999999765}, {'diff': 0.000163709000000001...</msg>
<status status="PASS" starttime="20201030 15:55:50.586" endtime="20201030 15:55:50.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.594" level="INFO">${ACCURACY} = {'diff': [0.00016333300000000162, 0.00016302699999999962, 0.00016365299999999972, 0.00016277799999999884, 0.00016283299999999765, 0.00016370900000000146, 0.00016301300000000005, 0.00016334699999999772...</msg>
<status status="PASS" starttime="20201030 15:55:50.590" endtime="20201030 15:55:50.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.598" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.597" endtime="20201030 15:55:50.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.601" level="INFO">VALUE: [0.00016333300000000162, 0.00016302699999999962, 0.00016365299999999972, 0.00016277799999999884, 0.00016283299999999765, 0.00016370900000000146, 0.00016301300000000005, 0.00016334699999999772, 0.00016369499999999843, 0.00016308300000000137, 0.00016308400000000084, 0.00016280600000000145, 0.00016302800000000256, 0.00016287499999999983, 0.00016337500000000033, 0.00016376400000000027, 0.0001629019999999995, 0.0001628340000000006, 0.00016345799999999827, 0.0001629720000000008, 0.000162917000000002, 0.00016363900000000015, 0.0001634859999999974, 0.00016313899999999965, 0.00016363900000000015, 0.00016349999999999698, 0.00016316700000000225, 0.0001636379999999972, 0.00016347300000000078, 0.00016350000000000045, 0.00016288900000000286, 0.0001630279999999991, 0.00016283299999999765, 0.00016327799999999934, 0.00016316699999999879, 0.0001627499999999997, 0.0001627499999999997, 0.00016326399999999977, 0.00016357000000000177, 0.0001630829999999979, 0.00016308300000000137, 0.0001635279999999996, 0.00016283300000000112, 0.00016344400000000217, 0.00016307000000000127, 0.00016361099999999754, 0.0001629720000000008, 0.00016327799999999934, 0.00016312500000000008, 0.00016334700000000119]</msg>
<status status="PASS" starttime="20201030 15:55:50.600" endtime="20201030 15:55:50.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.595" endtime="20201030 15:55:50.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.610" endtime="20201030 15:55:50.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.609" endtime="20201030 15:55:50.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.607" endtime="20201030 15:55:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.243" endtime="20201030 15:55:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.243" endtime="20201030 15:55:50.631"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.640" endtime="20201030 15:55:50.661"></status>
</kw>
<msg timestamp="20201030 15:55:50.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.638" endtime="20201030 15:55:50.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.663" endtime="20201030 15:55:50.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.665" endtime="20201030 15:55:50.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.636" endtime="20201030 15:55:50.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.634" endtime="20201030 15:55:50.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.674" endtime="20201030 15:55:50.961"></status>
</kw>
<msg timestamp="20201030 15:55:50.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02180475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:50.672" endtime="20201030 15:55:50.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02180475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:50.965" endtime="20201030 15:55:50.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.973" endtime="20201030 15:55:50.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.670" endtime="20201030 15:55:50.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.668" endtime="20201030 15:55:50.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.979" level="INFO">${RESULT} = [{'diff': 0.00016415300000000022}, {'diff': 0.00016458300000000287}, {'diff': 0.00016420900000000196}, {'diff': 0.0001639309999999991}, {'diff': 0.00016416699999999979}, {'diff': 0.0001642079999999990...</msg>
<status status="PASS" starttime="20201030 15:55:50.976" endtime="20201030 15:55:50.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.983" level="INFO">${ACCURACY} = {'diff': [0.00016415300000000022, 0.00016458300000000287, 0.00016420900000000196, 0.0001639309999999991, 0.00016416699999999979, 0.00016420799999999902, 0.0001645280000000006, 0.00016390299999999997, ...</msg>
<status status="PASS" starttime="20201030 15:55:50.980" endtime="20201030 15:55:50.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.988" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.987" endtime="20201030 15:55:50.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.990" level="INFO">VALUE: [0.00016415300000000022, 0.00016458300000000287, 0.00016420900000000196, 0.0001639309999999991, 0.00016416699999999979, 0.00016420799999999902, 0.0001645280000000006, 0.00016390299999999997, 0.00016454200000000016, 0.000164611000000002, 0.00016473599999999866, 0.00016455599999999973, 0.00016441700000000004, 0.0001642219999999986, 0.00016434699999999872, 0.00016390299999999997, 0.00016417999999999988, 0.00016468099999999986, 0.00016391699999999954, 0.0001646249999999981, 0.00016386100000000126, 0.00016474999999999823, 0.00016441700000000004, 0.0001639720000000018, 0.00016386099999999779, 0.00016448600000000188, 0.0001648050000000005, 0.00016437500000000133, 0.00016451399999999755, 0.00016411099999999804, 0.00016405499999999976, 0.0001638479999999977, 0.00016473599999999866, 0.00016441700000000004, 0.00016381899999999908, 0.00016383300000000212, 0.00016381900000000255, 0.00016443000000000013, 0.0001646249999999981, 0.00016404199999999966, 0.00016459700000000244, 0.00016397199999999834, 0.00016424999999999773, 0.0001647219999999991, 0.00016391699999999954, 0.00016386099999999779, 0.00016458300000000287, 0.00016436100000000176, 0.0001644439999999997, 0.00016443000000000013]</msg>
<status status="PASS" starttime="20201030 15:55:50.989" endtime="20201030 15:55:50.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.984" endtime="20201030 15:55:50.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.995" endtime="20201030 15:55:51.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.994" endtime="20201030 15:55:51.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.992" endtime="20201030 15:55:51.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.632" endtime="20201030 15:55:51.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.631" endtime="20201030 15:55:51.016"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.024" endtime="20201030 15:55:51.047"></status>
</kw>
<msg timestamp="20201030 15:55:51.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.023" endtime="20201030 15:55:51.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.048" endtime="20201030 15:55:51.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.051" endtime="20201030 15:55:51.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.020" endtime="20201030 15:55:51.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.018" endtime="20201030 15:55:51.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.060" endtime="20201030 15:55:51.345"></status>
</kw>
<msg timestamp="20201030 15:55:51.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.058" endtime="20201030 15:55:51.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.349" endtime="20201030 15:55:51.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.358" endtime="20201030 15:55:51.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.056" endtime="20201030 15:55:51.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.054" endtime="20201030 15:55:51.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.364" level="INFO">${RESULT} = [{'diff': 0.00016588899999999893}, {'diff': 0.00016487500000000183}, {'diff': 0.00016533300000000015}, {'diff': 0.00016502799999999762}, {'diff': 0.00016570800000000052}, {'diff': 0.000164875000000001...</msg>
<status status="PASS" starttime="20201030 15:55:51.361" endtime="20201030 15:55:51.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.368" level="INFO">${ACCURACY} = {'diff': [0.00016588899999999893, 0.00016487500000000183, 0.00016533300000000015, 0.00016502799999999762, 0.00016570800000000052, 0.00016487500000000183, 0.0001650829999999999, 0.00016551399999999855,...</msg>
<status status="PASS" starttime="20201030 15:55:51.365" endtime="20201030 15:55:51.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.372" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.371" endtime="20201030 15:55:51.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.375" level="INFO">VALUE: [0.00016588899999999893, 0.00016487500000000183, 0.00016533300000000015, 0.00016502799999999762, 0.00016570800000000052, 0.00016487500000000183, 0.0001650829999999999, 0.00016551399999999855, 0.00016551399999999855, 0.00016511099999999904, 0.00016545800000000027, 0.0001656249999999991, 0.00016516700000000079, 0.00016486099999999879, 0.00016495899999999925, 0.00016515300000000122, 0.00016495799999999977, 0.0001650829999999999, 0.00016565200000000224, 0.00016534699999999972, 0.00016520800000000002, 0.00016518100000000036, 0.0001656660000000018, 0.0001652089999999995, 0.00016568100000000086, 0.00016545800000000027, 0.00016533300000000015, 0.00016545800000000027, 0.00016552799999999812, 0.00016574999999999923, 0.00016533300000000015, 0.0001657769999999989, 0.00016565300000000172, 0.00016531900000000058, 0.00016495799999999977, 0.00016563899999999868, 0.00016541700000000104, 0.0001653890000000019, 0.00016499999999999848, 0.00016541699999999757, 0.00016486100000000226, 0.00016509699999999947, 0.00016497299999999882, 0.000165709, 0.0001655419999999977, 0.00016529100000000144, 0.00016484700000000269, 0.00016516700000000079, 0.00016486200000000173, 0.000165014000000005]</msg>
<status status="PASS" starttime="20201030 15:55:51.373" endtime="20201030 15:55:51.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.369" endtime="20201030 15:55:51.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.381" endtime="20201030 15:55:51.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.379" endtime="20201030 15:55:51.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.378" endtime="20201030 15:55:51.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.017" endtime="20201030 15:55:51.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.016" endtime="20201030 15:55:51.401"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.410" endtime="20201030 15:55:51.431"></status>
</kw>
<msg timestamp="20201030 15:55:51.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.408" endtime="20201030 15:55:51.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.433" endtime="20201030 15:55:51.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.435" endtime="20201030 15:55:51.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.406" endtime="20201030 15:55:51.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.404" endtime="20201030 15:55:51.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.444" endtime="20201030 15:55:51.730"></status>
</kw>
<msg timestamp="20201030 15:55:51.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.443" endtime="20201030 15:55:51.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.734" endtime="20201030 15:55:51.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.742" endtime="20201030 15:55:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.440" endtime="20201030 15:55:51.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.438" endtime="20201030 15:55:51.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.748" level="INFO">${RESULT} = [{'diff': 0.00016681999999999808}, {'diff': 0.00016640199999999952}, {'diff': 0.0001660549999999983}, {'diff': 0.0001665830000000014}, {'diff': 0.00016583300000000065}, {'diff': 0.00016599999999999948...</msg>
<status status="PASS" starttime="20201030 15:55:51.745" endtime="20201030 15:55:51.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.753" level="INFO">${ACCURACY} = {'diff': [0.00016681999999999808, 0.00016640199999999952, 0.0001660549999999983, 0.0001665830000000014, 0.00016583300000000065, 0.00016599999999999948, 0.00016640300000000247, 0.00016665300000000272, ...</msg>
<status status="PASS" starttime="20201030 15:55:51.749" endtime="20201030 15:55:51.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.758" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.756" endtime="20201030 15:55:51.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.760" level="INFO">VALUE: [0.00016681999999999808, 0.00016640199999999952, 0.0001660549999999983, 0.0001665830000000014, 0.00016583300000000065, 0.00016599999999999948, 0.00016640300000000247, 0.00016665300000000272, 0.00016606900000000133, 0.00016627799999999887, 0.00016669499999999796, 0.00016597199999999687, 0.00016665299999999925, 0.00016652799999999912, 0.0001659579999999973, 0.0001660700000000008, 0.00016595800000000077, 0.0001662920000000019, 0.0001659159999999986, 0.0001666250000000001, 0.00016640199999999952, 0.00016669499999999796, 0.0001658890000000024, 0.00016640199999999952, 0.00016638899999999943, 0.00016643099999999814, 0.00016658400000000087, 0.0001662920000000019, 0.00016652699999999965, 0.00016632000000000105, 0.0001662220000000006, 0.0001657769999999989, 0.00016591700000000154, 0.0001662639999999993, 0.00016600000000000295, 0.0001668050000000025, 0.00016659700000000097, 0.00016675000000000023, 0.00016605600000000123, 0.0001659440000000012, 0.00016620800000000102, 0.00016638899999999943, 0.00016670799999999805, 0.00016599999999999948, 0.00016613899999999918, 0.00016637499999999986, 0.000166305000000002, 0.00016602699999999915, 0.0001660419999999982, 0.0001666250000000001]</msg>
<status status="PASS" starttime="20201030 15:55:51.759" endtime="20201030 15:55:51.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.754" endtime="20201030 15:55:51.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.765" endtime="20201030 15:55:51.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.763" endtime="20201030 15:55:51.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.762" endtime="20201030 15:55:51.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.402" endtime="20201030 15:55:51.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.402" endtime="20201030 15:55:51.786"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.794" endtime="20201030 15:55:51.816"></status>
</kw>
<msg timestamp="20201030 15:55:51.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.793" endtime="20201030 15:55:51.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.817" endtime="20201030 15:55:51.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.820" endtime="20201030 15:55:51.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.790" endtime="20201030 15:55:51.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.788" endtime="20201030 15:55:51.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.829" endtime="20201030 15:55:52.115"></status>
</kw>
<msg timestamp="20201030 15:55:52.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02176725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:51.827" endtime="20201030 15:55:52.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02176725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:52.119" endtime="20201030 15:55:52.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.127" endtime="20201030 15:55:52.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.825" endtime="20201030 15:55:52.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.823" endtime="20201030 15:55:52.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.134" level="INFO">${RESULT} = [{'diff': 0.0001674860000000014}, {'diff': 0.00016730499999999954}, {'diff': 0.0001673189999999991}, {'diff': 0.0001674160000000001}, {'diff': 0.00016695800000000177}, {'diff': 0.00016715299999999975}...</msg>
<status status="PASS" starttime="20201030 15:55:52.131" endtime="20201030 15:55:52.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.138" level="INFO">${ACCURACY} = {'diff': [0.0001674860000000014, 0.00016730499999999954, 0.0001673189999999991, 0.0001674160000000001, 0.00016695800000000177, 0.00016715299999999975, 0.00016688899999999993, 0.00016686200000000026, 0...</msg>
<status status="PASS" starttime="20201030 15:55:52.135" endtime="20201030 15:55:52.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.143" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.141" endtime="20201030 15:55:52.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.145" level="INFO">VALUE: [0.0001674860000000014, 0.00016730499999999954, 0.0001673189999999991, 0.0001674160000000001, 0.00016695800000000177, 0.00016715299999999975, 0.00016688899999999993, 0.00016686200000000026, 0.00016683399999999765, 0.00016716699999999932, 0.0001667769999999999, 0.00016763900000000068, 0.00016732000000000205, 0.00016758299999999893, 0.00016715299999999975, 0.00016763900000000068, 0.00016687500000000036, 0.00016683299999999818, 0.0001669860000000009, 0.00016679100000000294, 0.0001675419999999997, 0.00016691699999999907, 0.00016730499999999954, 0.00016769500000000243, 0.00016744399999999923, 0.0001671250000000006, 0.00016690200000000002, 0.000167403, 0.00016729199999999944, 0.00016751399999999708, 0.0001673610000000013, 0.00016720799999999855, 0.0001669860000000009, 0.00016774999999999776, 0.00016772199999999862, 0.00016747300000000132, 0.00016751399999999708, 0.00016774999999999776, 0.00016711100000000104, 0.00016768099999999939, 0.0001671250000000006, 0.0001677359999999982, 0.00016693000000000263, 0.00016736099999999782, 0.0001668189999999986, 0.0001672220000000016, 0.00016704099999999972, 0.00016769399999999948, 0.00016777800000000037, 0.00016680600000000198]</msg>
<status status="PASS" starttime="20201030 15:55:52.144" endtime="20201030 15:55:52.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.139" endtime="20201030 15:55:52.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.150" endtime="20201030 15:55:52.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.148" endtime="20201030 15:55:52.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.147" endtime="20201030 15:55:52.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.787" endtime="20201030 15:55:52.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.786" endtime="20201030 15:55:52.171"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.179" endtime="20201030 15:55:52.202"></status>
</kw>
<msg timestamp="20201030 15:55:52.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.178" endtime="20201030 15:55:52.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.203" endtime="20201030 15:55:52.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.206" endtime="20201030 15:55:52.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.175" endtime="20201030 15:55:52.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.173" endtime="20201030 15:55:52.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.215" endtime="20201030 15:55:52.502"></status>
</kw>
<msg timestamp="20201030 15:55:52.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.214" endtime="20201030 15:55:52.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.506" endtime="20201030 15:55:52.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.514" endtime="20201030 15:55:52.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.211" endtime="20201030 15:55:52.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.209" endtime="20201030 15:55:52.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.521" level="INFO">${RESULT} = [{'diff': 0.00016872300000000257}, {'diff': 0.0001684999999999985}, {'diff': 0.00016797200000000234}, {'diff': 0.00016856999999999983}, {'diff': 0.0001685969999999995}, {'diff': 0.00016795800000000277...</msg>
<status status="PASS" starttime="20201030 15:55:52.518" endtime="20201030 15:55:52.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.525" level="INFO">${ACCURACY} = {'diff': [0.00016872300000000257, 0.0001684999999999985, 0.00016797200000000234, 0.00016856999999999983, 0.0001685969999999995, 0.00016795800000000277, 0.00016801400000000105, 0.00016866700000000082, ...</msg>
<status status="PASS" starttime="20201030 15:55:52.522" endtime="20201030 15:55:52.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.529" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.528" endtime="20201030 15:55:52.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.532" level="INFO">VALUE: [0.00016872300000000257, 0.0001684999999999985, 0.00016797200000000234, 0.00016856999999999983, 0.0001685969999999995, 0.00016795800000000277, 0.00016801400000000105, 0.00016866700000000082, 0.00016841599999999762, 0.00016872199999999962, 0.00016788900000000093, 0.0001685969999999995, 0.00016800000000000148, 0.0001685969999999995, 0.00016859799999999897, 0.00016793000000000016, 0.00016868100000000039, 0.00016876399999999833, 0.00016800000000000148, 0.0001682909999999975, 0.00016834699999999925, 0.0001686250000000021, 0.00016855600000000026, 0.000168403000000001, 0.00016823700000000164, 0.00016815299999999728, 0.0001684579999999998, 0.00016788900000000093, 0.00016865299999999778, 0.00016793000000000016, 0.00016854100000000122, 0.0001686800000000009, 0.00016876399999999833, 0.0001685969999999995, 0.00016779199999999994, 0.00016837500000000186, 0.00016834799999999872, 0.0001684579999999998, 0.00016851400000000155, 0.000168403000000001, 0.00016783299999999918, 0.00016847199999999937, 0.0001685420000000007, 0.0001683749999999984, 0.0001680839999999989, 0.0001686519999999983, 0.00016841599999999762, 0.00016787500000000483, 0.00016825000000000173, 0.00016834799999999872]</msg>
<status status="PASS" starttime="20201030 15:55:52.530" endtime="20201030 15:55:52.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.526" endtime="20201030 15:55:52.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.538" endtime="20201030 15:55:52.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.536" endtime="20201030 15:55:52.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.535" endtime="20201030 15:55:52.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.172" endtime="20201030 15:55:52.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.171" endtime="20201030 15:55:52.558"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.567" endtime="20201030 15:55:52.589"></status>
</kw>
<msg timestamp="20201030 15:55:52.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.565" endtime="20201030 15:55:52.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.590" endtime="20201030 15:55:52.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.593" endtime="20201030 15:55:52.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.563" endtime="20201030 15:55:52.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.561" endtime="20201030 15:55:52.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.602" endtime="20201030 15:55:52.887"></status>
</kw>
<msg timestamp="20201030 15:55:52.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.600" endtime="20201030 15:55:52.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.892" endtime="20201030 15:55:52.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.900" endtime="20201030 15:55:52.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.597" endtime="20201030 15:55:52.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.596" endtime="20201030 15:55:52.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.906" level="INFO">${RESULT} = [{'diff': 0.00016961100000000007}, {'diff': 0.00016913799999999923}, {'diff': 0.00016952800000000212}, {'diff': 0.000169097}, {'diff': 0.00016934700000000025}, {'diff': 0.00016922200000000012}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:55:52.903" endtime="20201030 15:55:52.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.911" level="INFO">${ACCURACY} = {'diff': [0.00016961100000000007, 0.00016913799999999923, 0.00016952800000000212, 0.000169097, 0.00016934700000000025, 0.00016922200000000012, 0.0001694719999999969, 0.00016976399999999933, 0.00016875...</msg>
<status status="PASS" starttime="20201030 15:55:52.907" endtime="20201030 15:55:52.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.916" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.915" endtime="20201030 15:55:52.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.918" level="INFO">VALUE: [0.00016961100000000007, 0.00016913799999999923, 0.00016952800000000212, 0.000169097, 0.00016934700000000025, 0.00016922200000000012, 0.0001694719999999969, 0.00016976399999999933, 0.00016875000000000223, 0.0001692359999999997, 0.00016934700000000025, 0.00016965299999999878, 0.00016947200000000037, 0.00016898599999999944, 0.000169403000000002, 0.0001694580000000008, 0.00016970799999999758, 0.0001694580000000008, 0.00016961199999999954, 0.0001695840000000004, 0.00016933300000000068, 0.00016920800000000055, 0.0001694719999999969, 0.000169693999999998, 0.0001688199999999966, 0.0001695129999999996, 0.00016933400000000015, 0.00016904099999999825, 0.00016915299999999828, 0.00016952699999999918, 0.00016954099999999875, 0.00016909799999999947, 0.00016947200000000037, 0.00016895899999999978, 0.0001697360000000002, 0.00016915299999999828, 0.00016929199999999797, 0.0001692359999999997, 0.00016893000000000116, 0.00016938899999999896, 0.00016940299999999853, 0.0001692770000000024, 0.00016918100000000089, 0.000169403000000002, 0.00016954099999999875, 0.00016905600000000076, 0.00016976299999999986, 0.00016977800000000237, 0.000169097999999996, 0.00016897200000000334]</msg>
<status status="PASS" starttime="20201030 15:55:52.917" endtime="20201030 15:55:52.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.912" endtime="20201030 15:55:52.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.923" endtime="20201030 15:55:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.922" endtime="20201030 15:55:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.920" endtime="20201030 15:55:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.559" endtime="20201030 15:55:52.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.559" endtime="20201030 15:55:52.944"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.953" endtime="20201030 15:55:52.974"></status>
</kw>
<msg timestamp="20201030 15:55:52.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.951" endtime="20201030 15:55:52.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.976" endtime="20201030 15:55:52.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.978" endtime="20201030 15:55:52.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.948" endtime="20201030 15:55:52.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.946" endtime="20201030 15:55:52.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.987" endtime="20201030 15:55:53.273"></status>
</kw>
<msg timestamp="20201030 15:55:53.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.986" endtime="20201030 15:55:53.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.278" endtime="20201030 15:55:53.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.286" endtime="20201030 15:55:53.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.983" endtime="20201030 15:55:53.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.981" endtime="20201030 15:55:53.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.292" level="INFO">${RESULT} = [{'diff': 0.0001702360000000007}, {'diff': 0.00017029199999999897}, {'diff': 0.00016986100000000032}, {'diff': 0.00017022200000000112}, {'diff': 0.00017034700000000125}, {'diff': 0.0001698619999999998...</msg>
<status status="PASS" starttime="20201030 15:55:53.289" endtime="20201030 15:55:53.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.296" level="INFO">${ACCURACY} = {'diff': [0.0001702360000000007, 0.00017029199999999897, 0.00016986100000000032, 0.00017022200000000112, 0.00017034700000000125, 0.0001698619999999998, 0.00016997200000000087, 0.0001705139999999966, 0...</msg>
<status status="PASS" starttime="20201030 15:55:53.293" endtime="20201030 15:55:53.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.301" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.300" endtime="20201030 15:55:53.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.303" level="INFO">VALUE: [0.0001702360000000007, 0.00017029199999999897, 0.00016986100000000032, 0.00017022200000000112, 0.00017034700000000125, 0.0001698619999999998, 0.00016997200000000087, 0.0001705139999999966, 0.0001705840000000014, 0.00017022200000000112, 0.00016988899999999946, 0.00017065300000000325, 0.00017044399999999876, 0.00017054199999999922, 0.00016986100000000032, 0.000170693999999999, 0.00017001399999999958, 0.00017058299999999846, 0.00017026399999999983, 0.00017045799999999833, 0.0001707230000000011, 0.00017001400000000305, 0.00017052799999999965, 0.00016974999999999976, 0.00017027699999999993, 0.00017066699999999935, 0.00017058299999999846, 0.00017058299999999846, 0.00017052799999999965, 0.00016988899999999946, 0.00016997200000000087, 0.00017049999999999704, 0.000170194999999998, 0.00016988899999999946, 0.00017073599999999772, 0.00017063899999999674, 0.00017015299999999928, 0.00016983300000000118, 0.00017070900000000153, 0.00017040299999999953, 0.00016988899999999946, 0.00017059800000000097, 0.00017065299999999978, 0.00017040200000000005, 0.0001705130000000006, 0.00017001399999999958, 0.00017016700000000232, 0.00016983300000000118, 0.00017068099999999892, 0.0001703049999999956]</msg>
<status status="PASS" starttime="20201030 15:55:53.302" endtime="20201030 15:55:53.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.297" endtime="20201030 15:55:53.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.308" endtime="20201030 15:55:53.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.306" endtime="20201030 15:55:53.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.305" endtime="20201030 15:55:53.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.945" endtime="20201030 15:55:53.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.944" endtime="20201030 15:55:53.329"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.337" endtime="20201030 15:55:53.362"></status>
</kw>
<msg timestamp="20201030 15:55:53.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.336" endtime="20201030 15:55:53.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.364" endtime="20201030 15:55:53.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.366" endtime="20201030 15:55:53.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.333" endtime="20201030 15:55:53.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.331" endtime="20201030 15:55:53.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.375" endtime="20201030 15:55:53.661"></status>
</kw>
<msg timestamp="20201030 15:55:53.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025052472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.374" endtime="20201030 15:55:53.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025052472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.665" endtime="20201030 15:55:53.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.673" endtime="20201030 15:55:53.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.371" endtime="20201030 15:55:53.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.369" endtime="20201030 15:55:53.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.679" level="INFO">${RESULT} = [{'diff': 0.00017166700000000035}, {'diff': 0.000171194999999999}, {'diff': 0.00017094499999999874}, {'diff': 0.00017094399999999926}, {'diff': 0.00017101400000000058}, {'diff': 0.00017179200000000047...</msg>
<status status="PASS" starttime="20201030 15:55:53.676" endtime="20201030 15:55:53.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.683" level="INFO">${ACCURACY} = {'diff': [0.00017166700000000035, 0.000171194999999999, 0.00017094499999999874, 0.00017094399999999926, 0.00017101400000000058, 0.00017179200000000047, 0.00017155500000000032, 0.00017133300000000268, ...</msg>
<status status="PASS" starttime="20201030 15:55:53.680" endtime="20201030 15:55:53.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.688" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.687" endtime="20201030 15:55:53.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.690" level="INFO">VALUE: [0.00017166700000000035, 0.000171194999999999, 0.00017094499999999874, 0.00017094399999999926, 0.00017101400000000058, 0.00017179200000000047, 0.00017155500000000032, 0.00017133300000000268, 0.00017088900000000046, 0.0001713329999999992, 0.00017170799999999958, 0.00017152800000000065, 0.00017133400000000215, 0.00017102800000000015, 0.00017144399999999976, 0.00017077700000000043, 0.00017137499999999792, 0.0001716109999999986, 0.00017113800000000123, 0.0001708750000000009, 0.00017099999999999754, 0.00017073599999999772, 0.00017140300000000053, 0.00017108399999999843, 0.0001715689999999999, 0.0001714719999999989, 0.0001715689999999999, 0.00017144399999999976, 0.0001713199999999991, 0.00017144399999999976, 0.00017097200000000187, 0.00017126399999999736, 0.00017108299999999896, 0.0001712499999999978, 0.00017095799999999883, 0.00017118099999999942, 0.00017090200000000055, 0.00017083400000000165, 0.0001716390000000012, 0.00017145799999999933, 0.00017176300000000533, 0.0001709589999999983, 0.0001712919999999965, 0.000171694, 0.00017115300000000028, 0.00017116699999999985, 0.00017165300000000078, 0.00017179099999999753, 0.00017083300000000218, 0.0001709299999999997]</msg>
<status status="PASS" starttime="20201030 15:55:53.689" endtime="20201030 15:55:53.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.684" endtime="20201030 15:55:53.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.696" endtime="20201030 15:55:53.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.694" endtime="20201030 15:55:53.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.693" endtime="20201030 15:55:53.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.330" endtime="20201030 15:55:53.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.329" endtime="20201030 15:55:53.717"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.725" endtime="20201030 15:55:53.747"></status>
</kw>
<msg timestamp="20201030 15:55:53.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.724" endtime="20201030 15:55:53.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.749" endtime="20201030 15:55:53.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.751" endtime="20201030 15:55:53.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.721" endtime="20201030 15:55:53.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.719" endtime="20201030 15:55:53.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.760" endtime="20201030 15:55:54.046"></status>
</kw>
<msg timestamp="20201030 15:55:54.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.758" endtime="20201030 15:55:54.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.050" endtime="20201030 15:55:54.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.058" endtime="20201030 15:55:54.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.756" endtime="20201030 15:55:54.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.754" endtime="20201030 15:55:54.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.064" level="INFO">${RESULT} = [{'diff': 0.00017212500000000214}, {'diff': 0.00017193100000000017}, {'diff': 0.00017216700000000085}, {'diff': 0.00017195799999999983}, {'diff': 0.00017226400000000183}, {'diff': 0.000172318999999997...</msg>
<status status="PASS" starttime="20201030 15:55:54.061" endtime="20201030 15:55:54.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.069" level="INFO">${ACCURACY} = {'diff': [0.00017212500000000214, 0.00017193100000000017, 0.00017216700000000085, 0.00017195799999999983, 0.00017226400000000183, 0.00017231899999999717, 0.00017176400000000133, 0.00017241699999999763...</msg>
<status status="PASS" starttime="20201030 15:55:54.065" endtime="20201030 15:55:54.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.073" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.072" endtime="20201030 15:55:54.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.076" level="INFO">VALUE: [0.00017212500000000214, 0.00017193100000000017, 0.00017216700000000085, 0.00017195799999999983, 0.00017226400000000183, 0.00017231899999999717, 0.00017176400000000133, 0.00017241699999999763, 0.0001725690000000009, 0.00017257000000000036, 0.00017268100000000092, 0.000172195, 0.00017181900000000014, 0.00017218100000000042, 0.00017175000000000176, 0.000172195, 0.00017175000000000176, 0.00017270800000000058, 0.0001718329999999997, 0.0001723750000000024, 0.00017223599999999922, 0.0001718199999999996, 0.0001717499999999983, 0.00017255499999999785, 0.00017172200000000262, 0.00017206999999999986, 0.00017190200000000155, 0.00017216700000000085, 0.00017251400000000208, 0.0001718329999999997, 0.00017252799999999818, 0.00017208299999999996, 0.00017186099999999885, 0.0001725000000000025, 0.00017231900000000064, 0.00017262499999999917, 0.00017218100000000042, 0.00017218100000000042, 0.0001719170000000006, 0.00017217999999999747, 0.000172694000000001, 0.00017176400000000133, 0.00017194400000000026, 0.00017230600000000054, 0.0001724589999999998, 0.00017199999999999854, 0.0001726950000000005, 0.00017244400000000076, 0.00017245799999999686, 0.0001723620000000023]</msg>
<status status="PASS" starttime="20201030 15:55:54.074" endtime="20201030 15:55:54.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.070" endtime="20201030 15:55:54.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.081" endtime="20201030 15:55:54.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.079" endtime="20201030 15:55:54.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.078" endtime="20201030 15:55:54.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.718" endtime="20201030 15:55:54.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.717" endtime="20201030 15:55:54.102"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.110" endtime="20201030 15:55:54.132"></status>
</kw>
<msg timestamp="20201030 15:55:54.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.109" endtime="20201030 15:55:54.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.134" endtime="20201030 15:55:54.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.136" endtime="20201030 15:55:54.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.106" endtime="20201030 15:55:54.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.104" endtime="20201030 15:55:54.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.145" endtime="20201030 15:55:54.432"></status>
</kw>
<msg timestamp="20201030 15:55:54.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.143" endtime="20201030 15:55:54.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.436" endtime="20201030 15:55:54.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.444" endtime="20201030 15:55:54.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.141" endtime="20201030 15:55:54.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.139" endtime="20201030 15:55:54.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.450" level="INFO">${RESULT} = [{'diff': 0.0001738330000000017}, {'diff': 0.00017326400000000283}, {'diff': 0.00017317999999999847}, {'diff': 0.00017370900000000106}, {'diff': 0.00017288900000000246}, {'diff': 0.0001734720000000009...</msg>
<status status="PASS" starttime="20201030 15:55:54.447" endtime="20201030 15:55:54.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.454" level="INFO">${ACCURACY} = {'diff': [0.0001738330000000017, 0.00017326400000000283, 0.00017317999999999847, 0.00017370900000000106, 0.00017288900000000246, 0.0001734720000000009, 0.0001727499999999993, 0.0001730690000000014, 0....</msg>
<status status="PASS" starttime="20201030 15:55:54.451" endtime="20201030 15:55:54.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.459" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.458" endtime="20201030 15:55:54.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.461" level="INFO">VALUE: [0.0001738330000000017, 0.00017326400000000283, 0.00017317999999999847, 0.00017370900000000106, 0.00017288900000000246, 0.0001734720000000009, 0.0001727499999999993, 0.0001730690000000014, 0.0001735139999999996, 0.00017284700000000028, 0.00017347199999999743, 0.0001735139999999996, 0.00017299999999999954, 0.00017281999999999714, 0.00017326399999999936, 0.0001731529999999988, 0.0001732499999999998, 0.00017329200000000197, 0.00017329099999999903, 0.00017313899999999924, 0.0001735139999999996, 0.00017354099999999928, 0.000172888999999999, 0.00017287499999999942, 0.00017354199999999875, 0.00017358300000000146, 0.00017359700000000103, 0.0001731659999999989, 0.00017354099999999928, 0.00017336100000000035, 0.00017344499999999777, 0.00017336100000000035, 0.00017290299999999856, 0.00017362500000000017, 0.00017320800000000108, 0.00017301299999999964, 0.00017366700000000235, 0.00017331899999999817, 0.00017273599999999972, 0.00017294500000000074, 0.00017283400000000018, 0.00017333400000000068, 0.00017323600000000022, 0.00017352799999999918, 0.00017352799999999918, 0.00017344500000000124, 0.00017294400000000126, 0.00017329200000000197, 0.00017286099999999638, 0.00017363899999999627]</msg>
<status status="PASS" starttime="20201030 15:55:54.460" endtime="20201030 15:55:54.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.455" endtime="20201030 15:55:54.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.466" endtime="20201030 15:55:54.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.464" endtime="20201030 15:55:54.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.463" endtime="20201030 15:55:54.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.103" endtime="20201030 15:55:54.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.102" endtime="20201030 15:55:54.487"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.495" endtime="20201030 15:55:54.518"></status>
</kw>
<msg timestamp="20201030 15:55:54.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.494" endtime="20201030 15:55:54.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.520" endtime="20201030 15:55:54.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.522" endtime="20201030 15:55:54.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.491" endtime="20201030 15:55:54.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.489" endtime="20201030 15:55:54.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.531" endtime="20201030 15:55:54.817"></status>
</kw>
<msg timestamp="20201030 15:55:54.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.529" endtime="20201030 15:55:54.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.821" endtime="20201030 15:55:54.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.829" endtime="20201030 15:55:54.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.527" endtime="20201030 15:55:54.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.525" endtime="20201030 15:55:54.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.835" level="INFO">${RESULT} = [{'diff': 0.00017458300000000246}, {'diff': 0.000173889}, {'diff': 0.00017458399999999846}, {'diff': 0.00017390200000000008}, {'diff': 0.00017386100000000085}, {'diff': 0.00017430599999999907}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:55:54.832" endtime="20201030 15:55:54.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.839" level="INFO">${ACCURACY} = {'diff': [0.00017458300000000246, 0.000173889, 0.00017458399999999846, 0.00017390200000000008, 0.00017386100000000085, 0.00017430599999999907, 0.0001744309999999992, 0.00017480599999999957, 0.00017462...</msg>
<status status="PASS" starttime="20201030 15:55:54.836" endtime="20201030 15:55:54.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.844" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.843" endtime="20201030 15:55:54.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.846" level="INFO">VALUE: [0.00017458300000000246, 0.000173889, 0.00017458399999999846, 0.00017390200000000008, 0.00017386100000000085, 0.00017430599999999907, 0.0001744309999999992, 0.00017480599999999957, 0.0001746249999999977, 0.00017418100000000242, 0.0001739170000000026, 0.0001740270000000002, 0.00017448600000000147, 0.00017416700000000285, 0.00017450000000000104, 0.00017463899999999727, 0.00017450000000000104, 0.00017404199999999925, 0.00017386200000000032, 0.0001741110000000011, 0.00017467999999999997, 0.0001741249999999972, 0.00017400000000000054, 0.0001741110000000011, 0.00017395799999999836, 0.00017387500000000042, 0.00017441699999999963, 0.0001740829999999985, 0.00017472199999999868, 0.00017391699999999913, 0.00017376399999999986, 0.00017462500000000117, 0.00017412500000000067, 0.00017417999999999947, 0.00017387500000000042, 0.00017374999999999682, 0.00017391599999999965, 0.00017459700000000203, 0.0001743469999999983, 0.00017448600000000147, 0.00017445800000000233, 0.00017394499999999827, 0.0001738049999999991, 0.00017461099999999813, 0.00017454199999999975, 0.00017416600000000337, 0.00017383300000000518, 0.00017405600000000576, 0.00017431899999999917, 0.0001744449999999953]</msg>
<status status="PASS" starttime="20201030 15:55:54.845" endtime="20201030 15:55:54.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.840" endtime="20201030 15:55:54.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.852" endtime="20201030 15:55:54.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.851" endtime="20201030 15:55:54.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.849" endtime="20201030 15:55:54.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.488" endtime="20201030 15:55:54.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.487" endtime="20201030 15:55:54.873"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.881" endtime="20201030 15:55:54.903"></status>
</kw>
<msg timestamp="20201030 15:55:54.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.880" endtime="20201030 15:55:54.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.905" endtime="20201030 15:55:54.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.907" endtime="20201030 15:55:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.877" endtime="20201030 15:55:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.875" endtime="20201030 15:55:54.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.917" endtime="20201030 15:55:55.202"></status>
</kw>
<msg timestamp="20201030 15:55:55.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.915" endtime="20201030 15:55:55.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.207" endtime="20201030 15:55:55.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.215" endtime="20201030 15:55:55.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.912" endtime="20201030 15:55:55.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.910" endtime="20201030 15:55:55.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.221" level="INFO">${RESULT} = [{'diff': 0.00017511099999999863}, {'diff': 0.00017556900000000042}, {'diff': 0.00017531999999999964}, {'diff': 0.0001754720000000029}, {'diff': 0.00017551300000000214}, {'diff': 0.0001748200000000026...</msg>
<status status="PASS" starttime="20201030 15:55:55.218" endtime="20201030 15:55:55.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.226" level="INFO">${ACCURACY} = {'diff': [0.00017511099999999863, 0.00017556900000000042, 0.00017531999999999964, 0.0001754720000000029, 0.00017551300000000214, 0.0001748200000000026, 0.00017536100000000235, 0.00017520799999999961, ...</msg>
<status status="PASS" starttime="20201030 15:55:55.222" endtime="20201030 15:55:55.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.231" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.229" endtime="20201030 15:55:55.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.233" level="INFO">VALUE: [0.00017511099999999863, 0.00017556900000000042, 0.00017531999999999964, 0.0001754720000000029, 0.00017551300000000214, 0.0001748200000000026, 0.00017536100000000235, 0.00017520799999999961, 0.00017555599999999685, 0.00017550000000000204, 0.0001749439999999998, 0.00017480599999999957, 0.00017529099999999756, 0.00017523599999999875, 0.00017559699999999956, 0.00017561099999999913, 0.00017562500000000217, 0.00017512500000000167, 0.00017568000000000097, 0.00017519499999999952, 0.00017568099999999698, 0.00017491600000000065, 0.00017536199999999835, 0.00017533400000000268, 0.00017536099999999888, 0.00017509699999999906, 0.0001754310000000002, 0.00017534700000000278, 0.0001753890000000015, 0.00017506899999999992, 0.00017531900000000017, 0.00017552800000000118, 0.00017501399999999764, 0.00017519400000000004, 0.00017543000000000072, 0.00017530600000000007, 0.00017473600000000172, 0.0001748330000000027, 0.00017508400000000243, 0.00017512500000000167, 0.00017559799999999903, 0.0001755699999999999, 0.00017573599999999925, 0.00017480599999999957, 0.00017522199999999918, 0.00017537500000000192, 0.00017549999999999857, 0.00017495799999999936, 0.0001756249999999987, 0.00017530600000000007]</msg>
<status status="PASS" starttime="20201030 15:55:55.232" endtime="20201030 15:55:55.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.227" endtime="20201030 15:55:55.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.238" endtime="20201030 15:55:55.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.236" endtime="20201030 15:55:55.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.235" endtime="20201030 15:55:55.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.874" endtime="20201030 15:55:55.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.873" endtime="20201030 15:55:55.259"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.267" endtime="20201030 15:55:55.289"></status>
</kw>
<msg timestamp="20201030 15:55:55.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.266" endtime="20201030 15:55:55.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.291" endtime="20201030 15:55:55.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.294" endtime="20201030 15:55:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.263" endtime="20201030 15:55:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.261" endtime="20201030 15:55:55.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.305" endtime="20201030 15:55:55.593"></status>
</kw>
<msg timestamp="20201030 15:55:55.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.303" endtime="20201030 15:55:55.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.597" endtime="20201030 15:55:55.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.605" endtime="20201030 15:55:55.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.301" endtime="20201030 15:55:55.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.297" endtime="20201030 15:55:55.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.611" level="INFO">${RESULT} = [{'diff': 0.00017702799999999921}, {'diff': 0.00017668099999999798}, {'diff': 0.0001758469999999998}, {'diff': 0.00017622200000000018}, {'diff': 0.00017638899999999902}, {'diff': 0.0001763190000000011...</msg>
<status status="PASS" starttime="20201030 15:55:55.608" endtime="20201030 15:55:55.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.615" level="INFO">${ACCURACY} = {'diff': [0.00017702799999999921, 0.00017668099999999798, 0.0001758469999999998, 0.00017622200000000018, 0.00017638899999999902, 0.00017631900000000117, 0.00017599999999999907, 0.00017594500000000027,...</msg>
<status status="PASS" starttime="20201030 15:55:55.612" endtime="20201030 15:55:55.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.620" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.619" endtime="20201030 15:55:55.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.622" level="INFO">VALUE: [0.00017702799999999921, 0.00017668099999999798, 0.0001758469999999998, 0.00017622200000000018, 0.00017638899999999902, 0.00017631900000000117, 0.00017599999999999907, 0.00017594500000000027, 0.00017642999999999825, 0.0001759440000000008, 0.0001764440000000013, 0.00017574999999999882, 0.00017673600000000025, 0.00017655500000000185, 0.0001758189999999972, 0.00017602799999999821, 0.0001763470000000003, 0.00017663900000000274, 0.00017586099999999938, 0.00017655600000000132, 0.00017574999999999882, 0.00017656999999999742, 0.0001762920000000015, 0.00017636099999999988, 0.0001766249999999997, 0.00017659800000000003, 0.00017574999999999882, 0.00017633300000000074, 0.00017580600000000057, 0.00017649999999999957, 0.0001762920000000015, 0.00017587500000000242, 0.00017613899999999877, 0.00017587499999999895, 0.0001757500000000023, 0.0001766249999999997, 0.0001764440000000013, 0.00017645900000000034, 0.00017605600000000082, 0.0001765700000000009, 0.00017663899999999927, 0.0001764029999999986, 0.00017601299999999917, 0.0001758189999999972, 0.00017600000000000254, 0.00017631900000000117, 0.0001764310000000012, 0.00017591700000000113, 0.0001765549999999949, 0.00017655500000000185]</msg>
<status status="PASS" starttime="20201030 15:55:55.621" endtime="20201030 15:55:55.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.616" endtime="20201030 15:55:55.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.632" endtime="20201030 15:55:55.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.630" endtime="20201030 15:55:55.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.629" endtime="20201030 15:55:55.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.260" endtime="20201030 15:55:55.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.259" endtime="20201030 15:55:55.652"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.661" endtime="20201030 15:55:55.684"></status>
</kw>
<msg timestamp="20201030 15:55:55.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.659" endtime="20201030 15:55:55.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.686" endtime="20201030 15:55:55.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.688" endtime="20201030 15:55:55.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.657" endtime="20201030 15:55:55.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.655" endtime="20201030 15:55:55.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.697" endtime="20201030 15:55:55.984"></status>
</kw>
<msg timestamp="20201030 15:55:55.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.696" endtime="20201030 15:55:55.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.988" endtime="20201030 15:55:55.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.996" endtime="20201030 15:55:55.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.693" endtime="20201030 15:55:55.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.691" endtime="20201030 15:55:55.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.002" level="INFO">${RESULT} = [{'diff': 0.00017761100000000113}, {'diff': 0.00017701399999999964}, {'diff': 0.0001773609999999974}, {'diff': 0.0001776250000000007}, {'diff': 0.00017686100000000038}, {'diff': 0.00017718100000000195...</msg>
<status status="PASS" starttime="20201030 15:55:55.999" endtime="20201030 15:55:56.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.006" level="INFO">${ACCURACY} = {'diff': [0.00017761100000000113, 0.00017701399999999964, 0.0001773609999999974, 0.0001776250000000007, 0.00017686100000000038, 0.00017718100000000195, 0.00017704199999999878, 0.00017730499999999913, ...</msg>
<status status="PASS" starttime="20201030 15:55:56.003" endtime="20201030 15:55:56.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.011" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.010" endtime="20201030 15:55:56.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.013" level="INFO">VALUE: [0.00017761100000000113, 0.00017701399999999964, 0.0001773609999999974, 0.0001776250000000007, 0.00017686100000000038, 0.00017718100000000195, 0.00017704199999999878, 0.00017730499999999913, 0.00017705499999999888, 0.00017732000000000164, 0.0001773189999999987, 0.000177277, 0.00017751400000000014, 0.00017729199999999903, 0.00017756999999999842, 0.0001768050000000021, 0.0001776120000000006, 0.00017694399999999832, 0.00017747200000000143, 0.0001776250000000007, 0.00017748599999999753, 0.00017755600000000232, 0.00017672300000000016, 0.00017748599999999753, 0.00017755499999999938, 0.00017690199999999962, 0.00017765299999999984, 0.00017727799999999946, 0.00017709700000000106, 0.00017709700000000106, 0.00017680600000000157, 0.00017775000000000082, 0.00017713899999999977, 0.0001771250000000002, 0.00017744399999999882, 0.00017732000000000164, 0.00017716599999999944, 0.00017751400000000014, 0.00017731999999999817, 0.00017718100000000195, 0.0001776250000000007, 0.00017680600000000157, 0.00017715299999999934, 0.00017713899999999977, 0.00017733399999999427, 0.00017711100000000063, 0.00017718099999999848, 0.000177195000000005, 0.0001775140000000036, 0.00017704099999999584]</msg>
<status status="PASS" starttime="20201030 15:55:56.012" endtime="20201030 15:55:56.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.007" endtime="20201030 15:55:56.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.019" endtime="20201030 15:55:56.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.017" endtime="20201030 15:55:56.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.016" endtime="20201030 15:55:56.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.653" endtime="20201030 15:55:56.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.653" endtime="20201030 15:55:56.040"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.048" endtime="20201030 15:55:56.070"></status>
</kw>
<msg timestamp="20201030 15:55:56.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.047" endtime="20201030 15:55:56.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.072" endtime="20201030 15:55:56.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.074" endtime="20201030 15:55:56.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.044" endtime="20201030 15:55:56.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.042" endtime="20201030 15:55:56.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.083" endtime="20201030 15:55:56.368"></status>
</kw>
<msg timestamp="20201030 15:55:56.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.082" endtime="20201030 15:55:56.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.372" endtime="20201030 15:55:56.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.380" endtime="20201030 15:55:56.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.079" endtime="20201030 15:55:56.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.077" endtime="20201030 15:55:56.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.386" level="INFO">${RESULT} = [{'diff': 0.00017859800000000203}, {'diff': 0.00017806899999999945}, {'diff': 0.00017819499999999905}, {'diff': 0.00017858299999999952}, {'diff': 0.00017869400000000008}, {'diff': 0.000178347999999998...</msg>
<status status="PASS" starttime="20201030 15:55:56.383" endtime="20201030 15:55:56.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.391" level="INFO">${ACCURACY} = {'diff': [0.00017859800000000203, 0.00017806899999999945, 0.00017819499999999905, 0.00017858299999999952, 0.00017869400000000008, 0.0001783479999999983, 0.00017802700000000074, 0.00017829200000000003,...</msg>
<status status="PASS" starttime="20201030 15:55:56.387" endtime="20201030 15:55:56.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.397" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.395" endtime="20201030 15:55:56.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.400" level="INFO">VALUE: [0.00017859800000000203, 0.00017806899999999945, 0.00017819499999999905, 0.00017858299999999952, 0.00017869400000000008, 0.0001783479999999983, 0.00017802700000000074, 0.00017829200000000003, 0.00017866699999999694, 0.00017770899999999812, 0.00017833399999999874, 0.0001786389999999978, 0.00017815200000000087, 0.00017837500000000145, 0.00017819399999999957, 0.00017829100000000056, 0.00017773599999999778, 0.0001783189999999997, 0.0001784030000000006, 0.00017855500000000038, 0.0001779030000000001, 0.0001781250000000012, 0.00017800000000000107, 0.00017808400000000196, 0.00017791700000000313, 0.00017865300000000084, 0.00017856899999999995, 0.00017791699999999966, 0.00017795900000000184, 0.00017856999999999942, 0.00017829200000000003, 0.00017794399999999932, 0.00017856899999999995, 0.00017770799999999864, 0.00017858299999999952, 0.0001782909999999971, 0.00017825000000000132, 0.00017862499999999823, 0.0001786120000000016, 0.0001783189999999997, 0.00017850000000000157, 0.00017847199999999896, 0.00017777699999999702, 0.00017797199999999846, 0.00017819499999999905, 0.00017823600000000175, 0.00017816700000000338, 0.00017834699999999537, 0.00017794399999999932, 0.00017813900000000077]</msg>
<status status="PASS" starttime="20201030 15:55:56.398" endtime="20201030 15:55:56.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.392" endtime="20201030 15:55:56.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.406" endtime="20201030 15:55:56.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.404" endtime="20201030 15:55:56.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.403" endtime="20201030 15:55:56.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.040" endtime="20201030 15:55:56.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.040" endtime="20201030 15:55:56.426"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.435" endtime="20201030 15:55:56.457"></status>
</kw>
<msg timestamp="20201030 15:55:56.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.433" endtime="20201030 15:55:56.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.459" endtime="20201030 15:55:56.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.461" endtime="20201030 15:55:56.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.431" endtime="20201030 15:55:56.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.429" endtime="20201030 15:55:56.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.470" endtime="20201030 15:55:56.756"></status>
</kw>
<msg timestamp="20201030 15:55:56.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.468" endtime="20201030 15:55:56.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.760" endtime="20201030 15:55:56.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.768" endtime="20201030 15:55:56.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.466" endtime="20201030 15:55:56.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.464" endtime="20201030 15:55:56.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.775" level="INFO">${RESULT} = [{'diff': 0.0001792640000000019}, {'diff': 0.0001794999999999991}, {'diff': 0.00017906900000000045}, {'diff': 0.0001789449999999998}, {'diff': 0.00017958300000000052}, {'diff': 0.00017874999999999835}...</msg>
<status status="PASS" starttime="20201030 15:55:56.772" endtime="20201030 15:55:56.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.779" level="INFO">${ACCURACY} = {'diff': [0.0001792640000000019, 0.0001794999999999991, 0.00017906900000000045, 0.0001789449999999998, 0.00017958300000000052, 0.00017874999999999835, 0.0001796800000000015, 0.00017876300000000192, 0....</msg>
<status status="PASS" starttime="20201030 15:55:56.776" endtime="20201030 15:55:56.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.783" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.782" endtime="20201030 15:55:56.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.785" level="INFO">VALUE: [0.0001792640000000019, 0.0001794999999999991, 0.00017906900000000045, 0.0001789449999999998, 0.00017958300000000052, 0.00017874999999999835, 0.0001796800000000015, 0.00017876300000000192, 0.0001793060000000006, 0.00017950000000000257, 0.00017955599999999738, 0.00017968100000000098, 0.00017904200000000078, 0.00017920799999999668, 0.00017922199999999971, 0.00017967999999999804, 0.00017966599999999847, 0.00017957000000000042, 0.0001793060000000006, 0.00017974999999999935, 0.0001796519999999989, 0.00017944400000000083, 0.00017888800000000205, 0.00017906999999999992, 0.00017888899999999805, 0.00017926299999999895, 0.0001794450000000003, 0.0001790969999999996, 0.00017905600000000035, 0.0001796800000000015, 0.0001791250000000022, 0.00017941700000000116, 0.00017937499999999898, 0.00017904200000000078, 0.0001796670000000014, 0.00017961099999999966, 0.00017920800000000014, 0.00017911099999999916, 0.00017961100000000313, 0.0001791250000000022, 0.00017874999999999835, 0.00017954099999999834, 0.00017911100000000263, 0.00017955600000000085, 0.00017905500000000088, 0.00017962499999999923, 0.00017962499999999923, 0.00017938799999999908, 0.00017973599999999978, 0.00017959700000000356]</msg>
<status status="PASS" starttime="20201030 15:55:56.784" endtime="20201030 15:55:56.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.779" endtime="20201030 15:55:56.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.790" endtime="20201030 15:55:56.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.789" endtime="20201030 15:55:56.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.788" endtime="20201030 15:55:56.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.427" endtime="20201030 15:55:56.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.427" endtime="20201030 15:55:56.811"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.819" endtime="20201030 15:55:56.845"></status>
</kw>
<msg timestamp="20201030 15:55:56.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.818" endtime="20201030 15:55:56.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.846" endtime="20201030 15:55:56.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.849" endtime="20201030 15:55:56.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.815" endtime="20201030 15:55:56.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.813" endtime="20201030 15:55:56.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.858" endtime="20201030 15:55:57.143"></status>
</kw>
<msg timestamp="20201030 15:55:57.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02490675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:56.856" endtime="20201030 15:55:57.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02490675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:57.147" endtime="20201030 15:55:57.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.155" endtime="20201030 15:55:57.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.854" endtime="20201030 15:55:57.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.852" endtime="20201030 15:55:57.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.162" level="INFO">${RESULT} = [{'diff': 0.0001807779999999995}, {'diff': 0.00018044499999999783}, {'diff': 0.00018036099999999694}, {'diff': 0.00017987499999999948}, {'diff': 0.00018041600000000269}, {'diff': 0.0001803610000000004...</msg>
<status status="PASS" starttime="20201030 15:55:57.159" endtime="20201030 15:55:57.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.166" level="INFO">${ACCURACY} = {'diff': [0.0001807779999999995, 0.00018044499999999783, 0.00018036099999999694, 0.00017987499999999948, 0.00018041600000000269, 0.0001803610000000004, 0.00018058300000000152, 0.0001806939999999986, 0...</msg>
<status status="PASS" starttime="20201030 15:55:57.163" endtime="20201030 15:55:57.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.170" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.169" endtime="20201030 15:55:57.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.173" level="INFO">VALUE: [0.0001807779999999995, 0.00018044499999999783, 0.00018036099999999694, 0.00017987499999999948, 0.00018041600000000269, 0.0001803610000000004, 0.00018058300000000152, 0.0001806939999999986, 0.00018072200000000122, 0.00018066600000000294, 0.00018054199999999881, 0.00017993000000000176, 0.0001799999999999996, 0.00018023699999999976, 0.0001801389999999993, 0.00018024999999999985, 0.0001799580000000009, 0.00018062500000000023, 0.00018055599999999838, 0.00018061100000000066, 0.00017986199999999938, 0.00017998600000000003, 0.00018037499999999998, 0.00017981899999999773, 0.0001806109999999972, 0.00018034700000000084, 0.0001805549999999989, 0.00018058300000000152, 0.00018043100000000173, 0.00018017999999999854, 0.0001806519999999999, 0.00017972200000000368, 0.00017991599999999525, 0.00018058299999999805, 0.00018038899999999608, 0.000180277999999999, 0.00018026399999999942, 0.00018043000000000226, 0.00017984699999999687, 0.00018065300000000284, 0.00018004199999999831, 0.0001806670000000024, 0.00018006899999999798, 0.0001801120000000031, 0.0001797079999999937, 0.00018048600000000053, 0.00018009699999999712, 0.0001804859999999936, 0.00018055599999999838, 0.00018070800000000165]</msg>
<status status="PASS" starttime="20201030 15:55:57.171" endtime="20201030 15:55:57.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.167" endtime="20201030 15:55:57.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.178" endtime="20201030 15:55:57.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.177" endtime="20201030 15:55:57.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.176" endtime="20201030 15:55:57.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.812" endtime="20201030 15:55:57.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.811" endtime="20201030 15:55:57.199"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.207" endtime="20201030 15:55:57.230"></status>
</kw>
<msg timestamp="20201030 15:55:57.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.206" endtime="20201030 15:55:57.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.231" endtime="20201030 15:55:57.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.234" endtime="20201030 15:55:57.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.203" endtime="20201030 15:55:57.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.201" endtime="20201030 15:55:57.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.243" endtime="20201030 15:55:57.527"></status>
</kw>
<msg timestamp="20201030 15:55:57.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.241" endtime="20201030 15:55:57.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.532" endtime="20201030 15:55:57.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.540" endtime="20201030 15:55:57.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.239" endtime="20201030 15:55:57.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.237" endtime="20201030 15:55:57.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.546" level="INFO">${RESULT} = [{'diff': 0.00018180599999999963}, {'diff': 0.00018083300000000177}, {'diff': 0.00018097200000000147}, {'diff': 0.000181278}, {'diff': 0.00018119400000000258}, {'diff': 0.0001814169999999997}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:55:57.543" endtime="20201030 15:55:57.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.551" level="INFO">${ACCURACY} = {'diff': [0.00018180599999999963, 0.00018083300000000177, 0.00018097200000000147, 0.000181278, 0.00018119400000000258, 0.0001814169999999997, 0.0001807779999999995, 0.00018120800000000215, 0.000180875...</msg>
<status status="PASS" starttime="20201030 15:55:57.547" endtime="20201030 15:55:57.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.556" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.555" endtime="20201030 15:55:57.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.558" level="INFO">VALUE: [0.00018180599999999963, 0.00018083300000000177, 0.00018097200000000147, 0.000181278, 0.00018119400000000258, 0.0001814169999999997, 0.0001807779999999995, 0.00018120800000000215, 0.00018087500000000048, 0.0001815970000000021, 0.00018090200000000015, 0.00018133300000000227, 0.00018119500000000205, 0.00018133300000000227, 0.00018154199999999981, 0.0001813190000000027, 0.00018138900000000055, 0.00018090200000000015, 0.00018152800000000024, 0.00018129199999999956, 0.00018156899999999948, 0.00018166600000000047, 0.00018123600000000128, 0.0001815000000000011, 0.00018081899999999873, 0.00018070900000000112, 0.00018151400000000067, 0.00018134700000000184, 0.00018161100000000166, 0.0001810000000000006, 0.00018140199999999718, 0.00018126400000000042, 0.00018083300000000177, 0.00018156899999999948, 0.00018143099999999926, 0.0001815139999999972, 0.00018084700000000134, 0.00018162500000000123, 0.00018120799999999868, 0.00018169499999999908, 0.0001806809999999985, 0.00018144499999999883, 0.00018087500000000048, 0.000180971999999998, 0.00018090299999999962, 0.00018108399999999802, 0.0001809860000000045, 0.0001810830000000055, 0.00018102799999999974, 0.00018108400000000496]</msg>
<status status="PASS" starttime="20201030 15:55:57.557" endtime="20201030 15:55:57.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.552" endtime="20201030 15:55:57.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.563" endtime="20201030 15:55:57.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.561" endtime="20201030 15:55:57.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.560" endtime="20201030 15:55:57.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.200" endtime="20201030 15:55:57.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.199" endtime="20201030 15:55:57.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.904" endtime="20201030 15:55:57.584"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:18.837" endtime="20201030 15:55:57.584" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:38.684" endtime="20201030 15:55:57.588"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.640" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:57.649" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:58.865" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:57.639" endtime="20201030 15:55:58.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.868" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:55:58.867" endtime="20201030 15:55:58.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.638" endtime="20201030 15:55:58.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.871" endtime="20201030 15:55:59.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.869" endtime="20201030 15:55:59.056"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.069" endtime="20201030 15:55:59.082"></status>
</kw>
<msg timestamp="20201030 15:55:59.083" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.067" endtime="20201030 15:55:59.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.085" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.084" endtime="20201030 15:55:59.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.088" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:59.086" endtime="20201030 15:55:59.088"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:59.065" endtime="20201030 15:55:59.089"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:59.063" endtime="20201030 15:55:59.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.061" endtime="20201030 15:55:59.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:59.094" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:59.093" endtime="20201030 15:55:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.091" endtime="20201030 15:55:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.061" endtime="20201030 15:55:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.060" endtime="20201030 15:55:59.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.095" endtime="20201030 15:55:59.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.059" endtime="20201030 15:55:59.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.098" endtime="20201030 15:55:59.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.057" endtime="20201030 15:55:59.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.636" endtime="20201030 15:55:59.101"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.106" endtime="20201030 15:55:59.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.105" endtime="20201030 15:55:59.126"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.139" endtime="20201030 15:55:59.152"></status>
</kw>
<msg timestamp="20201030 15:55:59.152" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.138" endtime="20201030 15:55:59.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.153" endtime="20201030 15:55:59.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.158" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:59.156" endtime="20201030 15:55:59.159"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:59.135" endtime="20201030 15:55:59.159"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:59.133" endtime="20201030 15:55:59.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.132" endtime="20201030 15:55:59.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:59.164" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:59.163" endtime="20201030 15:55:59.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.161" endtime="20201030 15:55:59.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.131" endtime="20201030 15:55:59.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.130" endtime="20201030 15:55:59.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.165" endtime="20201030 15:55:59.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.129" endtime="20201030 15:55:59.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.127" endtime="20201030 15:55:59.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.104" endtime="20201030 15:55:59.168"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.176" endtime="20201030 15:56:05.281"></status>
</kw>
<msg timestamp="20201030 15:56:05.282" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.175" endtime="20201030 15:56:05.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.287" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.284" endtime="20201030 15:56:05.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.289" endtime="20201030 15:56:05.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.172" endtime="20201030 15:56:05.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.170" endtime="20201030 15:56:05.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.299" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:56:05.296" endtime="20201030 15:56:05.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.308" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:05.306" endtime="20201030 15:56:05.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.313" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:05.311" endtime="20201030 15:56:05.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.301" endtime="20201030 15:56:05.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.322" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:05.320" endtime="20201030 15:56:05.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.327" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:05.325" endtime="20201030 15:56:05.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.316" endtime="20201030 15:56:05.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.336" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:05.334" endtime="20201030 15:56:05.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.341" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:56:05.339" endtime="20201030 15:56:05.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.330" endtime="20201030 15:56:05.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.356" endtime="20201030 15:56:05.665"></status>
</kw>
<msg timestamp="20201030 15:56:05.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061075292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160833389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.353" endtime="20201030 15:56:05.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061075292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160833389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.669" endtime="20201030 15:56:05.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.677" endtime="20201030 15:56:05.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.347" endtime="20201030 15:56:05.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.344" endtime="20201030 15:56:05.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:05.684" level="INFO">${FILTERED} = [{'diff': 0.09975809699999999}, {'diff': 0.099654361}, {'diff': 0.09966719400000001}, {'diff': 0.09966970800000002}, {'diff': 0.09967280500000003}, {'diff': 0.099682347}, {'diff': 0.09968388900000003}...</msg>
<status status="PASS" starttime="20201030 15:56:05.681" endtime="20201030 15:56:05.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.688" level="INFO">${RESULT} = {'diff': [0.09975809699999999, 0.099654361, 0.09966719400000001, 0.09966970800000002, 0.09967280500000003, 0.099682347, 0.09968388900000003, 0.09968470899999993, 0.09968449999999995, 0.099681264000000...</msg>
<status status="PASS" starttime="20201030 15:56:05.685" endtime="20201030 15:56:05.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.692" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:05.691" endtime="20201030 15:56:05.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.694" level="INFO">VALUE: [0.09975809699999999, 0.099654361, 0.09966719400000001, 0.09966970800000002, 0.09967280500000003, 0.099682347, 0.09968388900000003, 0.09968470899999993, 0.09968449999999995, 0.0996812640000001, 0.09968037499999993, 0.09968304200000011, 0.099679611, 0.09968148599999993, 0.09968019399999983, 0.0996718470000002, 0.09967418099999992, 0.09966886199999991, 0.09966761099999988, 0.09966200000000014, 0.09966537499999983, 0.09966780500000016, 0.09966268000000023, 0.09966152799999994, 0.09965887499999981, 0.09965855499999998, 0.09965813800000012, 0.09965968099999989, 0.09965616599999993, 0.09965575000000015, 0.09965422299999993, 0.0996512359999997, 0.09965265300000015, 0.09965457000000022, 0.09965218100000017, 0.09964687500000036, 0.09965211100000015, 0.09964815299999996, 0.09965519499999997, 0.09965861099999973, 0.09965768100000005, 0.09965608300000017, 0.09965109799999983, 0.09965544499999979, 0.09965565299999923, 0.09965044499999998, 0.09965558300000055, 0.09965359699999965, 0.09965637499999946, 0.09965631900000016, 0.09966120800000056]</msg>
<status status="PASS" starttime="20201030 15:56:05.693" endtime="20201030 15:56:05.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.688" endtime="20201030 15:56:05.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.699" endtime="20201030 15:56:05.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.697" endtime="20201030 15:56:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.696" endtime="20201030 15:56:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.169" endtime="20201030 15:56:05.719"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:59.101" endtime="20201030 15:56:05.720" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.726" endtime="20201030 15:56:05.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.725" endtime="20201030 15:56:05.747"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.760" endtime="20201030 15:56:05.773"></status>
</kw>
<msg timestamp="20201030 15:56:05.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.759" endtime="20201030 15:56:05.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.774" endtime="20201030 15:56:05.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.778" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:05.777" endtime="20201030 15:56:05.779"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:05.756" endtime="20201030 15:56:05.779"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:05.754" endtime="20201030 15:56:05.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.753" endtime="20201030 15:56:05.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:05.784" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:05.783" endtime="20201030 15:56:05.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.781" endtime="20201030 15:56:05.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.752" endtime="20201030 15:56:05.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.751" endtime="20201030 15:56:05.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.786" endtime="20201030 15:56:05.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.749" endtime="20201030 15:56:05.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.747" endtime="20201030 15:56:05.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.724" endtime="20201030 15:56:05.788"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.797" endtime="20201030 15:56:11.897"></status>
</kw>
<msg timestamp="20201030 15:56:11.899" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.795" endtime="20201030 15:56:11.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.901" endtime="20201030 15:56:11.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.906" endtime="20201030 15:56:11.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.792" endtime="20201030 15:56:11.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.790" endtime="20201030 15:56:11.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.917" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:56:11.914" endtime="20201030 15:56:11.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.926" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:11.924" endtime="20201030 15:56:11.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.932" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:11.928" endtime="20201030 15:56:11.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.919" endtime="20201030 15:56:11.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.942" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:11.940" endtime="20201030 15:56:11.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.946" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:11.944" endtime="20201030 15:56:11.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.935" endtime="20201030 15:56:11.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.955" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:11.954" endtime="20201030 15:56:11.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.957" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:56:11.956" endtime="20201030 15:56:11.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.950" endtime="20201030 15:56:11.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.964" endtime="20201030 15:56:12.263"></status>
</kw>
<msg timestamp="20201030 15:56:12.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061432889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161264944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.962" endtime="20201030 15:56:12.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061432889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161264944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.267" endtime="20201030 15:56:12.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.275" endtime="20201030 15:56:12.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.960" endtime="20201030 15:56:12.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.958" endtime="20201030 15:56:12.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:12.281" level="INFO">${FILTERED} = [{'diff': 0.099832055}, {'diff': 0.09959388900000002}, {'diff': 0.09966616699999997}, {'diff': 0.09966412499999999}, {'diff': 0.099660792}, {'diff': 0.09965930500000009}, {'diff': 0.099658986}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:56:12.278" endtime="20201030 15:56:12.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.286" level="INFO">${RESULT} = {'diff': [0.099832055, 0.09959388900000002, 0.09966616699999997, 0.09966412499999999, 0.099660792, 0.09965930500000009, 0.099658986, 0.09966126400000008, 0.099658472, 0.09965654099999999, 0.0996665549...</msg>
<status status="PASS" starttime="20201030 15:56:12.282" endtime="20201030 15:56:12.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.290" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:12.289" endtime="20201030 15:56:12.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.293" level="INFO">VALUE: [0.099832055, 0.09959388900000002, 0.09966616699999997, 0.09966412499999999, 0.099660792, 0.09965930500000009, 0.099658986, 0.09966126400000008, 0.099658472, 0.09965654099999999, 0.09966655499999999, 0.09966495799999997, 0.09966301399999988, 0.09965908299999993, 0.09965100000000016, 0.09965541600000005, 0.09966341600000006, 0.09965802800000012, 0.09965493000000003, 0.09966150000000007, 0.09965933299999996, 0.09965233299999987, 0.09965633400000007, 0.09966148600000002, 0.09966480499999975, 0.0996628610000001, 0.09966373600000011, 0.09966627799999994, 0.09966040299999968, 0.0996627219999997, 0.09966338899999982, 0.0996614440000001, 0.09966404200000012, 0.0996652499999997, 0.09966534799999982, 0.09966597200000038, 0.09966938900000022, 0.09966452799999992, 0.09966750000000024, 0.09966461099999968, 0.09966804199999935, 0.0996672640000007, 0.09967294399999993, 0.09966636100000059, 0.09966644399999947, 0.09966976399999972, 0.0996665280000002, 0.09967058299999998, 0.09967065299999955, 0.09966588899999973, 0.09966463899999933]</msg>
<status status="PASS" starttime="20201030 15:56:12.291" endtime="20201030 15:56:12.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.287" endtime="20201030 15:56:12.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.297" endtime="20201030 15:56:12.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.296" endtime="20201030 15:56:12.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.295" endtime="20201030 15:56:12.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.789" endtime="20201030 15:56:12.318"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:05.722" endtime="20201030 15:56:12.318" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.325" endtime="20201030 15:56:12.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.323" endtime="20201030 15:56:12.345"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.358" endtime="20201030 15:56:12.370"></status>
</kw>
<msg timestamp="20201030 15:56:12.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.356" endtime="20201030 15:56:12.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.371" endtime="20201030 15:56:12.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.376" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:12.374" endtime="20201030 15:56:12.376"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:12.354" endtime="20201030 15:56:12.377"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:12.351" endtime="20201030 15:56:12.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.350" endtime="20201030 15:56:12.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:12.382" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:12.381" endtime="20201030 15:56:12.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.379" endtime="20201030 15:56:12.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.349" endtime="20201030 15:56:12.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.349" endtime="20201030 15:56:12.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.383" endtime="20201030 15:56:12.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.347" endtime="20201030 15:56:12.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.346" endtime="20201030 15:56:12.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.322" endtime="20201030 15:56:12.386"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.396" endtime="20201030 15:56:18.502"></status>
</kw>
<msg timestamp="20201030 15:56:18.503" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.395" endtime="20201030 15:56:18.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.508" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.505" endtime="20201030 15:56:18.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.511" endtime="20201030 15:56:18.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.392" endtime="20201030 15:56:18.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.389" endtime="20201030 15:56:18.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.522" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:56:18.518" endtime="20201030 15:56:18.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.530" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:18.528" endtime="20201030 15:56:18.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.534" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:18.532" endtime="20201030 15:56:18.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.523" endtime="20201030 15:56:18.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.544" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:18.542" endtime="20201030 15:56:18.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.548" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:18.546" endtime="20201030 15:56:18.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.537" endtime="20201030 15:56:18.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.558" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:18.556" endtime="20201030 15:56:18.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.562" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:56:18.560" endtime="20201030 15:56:18.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.551" endtime="20201030 15:56:18.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.584" endtime="20201030 15:56:18.887"></status>
</kw>
<msg timestamp="20201030 15:56:18.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063214222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163348069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.581" endtime="20201030 15:56:18.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063214222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163348069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.891" endtime="20201030 15:56:18.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.899" endtime="20201030 15:56:18.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.575" endtime="20201030 15:56:18.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.571" endtime="20201030 15:56:18.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:18.908" level="INFO">${FILTERED} = [{'diff': 0.10013384700000001}, {'diff': 0.099302417}, {'diff': 0.09967393100000005}, {'diff': 0.09967465200000003}, {'diff': 0.09967654199999998}, {'diff': 0.09967518099999995}, {'diff': 0.099667375}...</msg>
<status status="PASS" starttime="20201030 15:56:18.903" endtime="20201030 15:56:18.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.913" level="INFO">${RESULT} = {'diff': [0.10013384700000001, 0.099302417, 0.09967393100000005, 0.09967465200000003, 0.09967654199999998, 0.09967518099999995, 0.099667375, 0.09965713899999995, 0.09966359700000005, 0.099654611000000...</msg>
<status status="PASS" starttime="20201030 15:56:18.910" endtime="20201030 15:56:18.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.917" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:18.916" endtime="20201030 15:56:18.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.919" level="INFO">VALUE: [0.10013384700000001, 0.099302417, 0.09967393100000005, 0.09967465200000003, 0.09967654199999998, 0.09967518099999995, 0.099667375, 0.09965713899999995, 0.09966359700000005, 0.09965461100000006, 0.09965484799999991, 0.09965147199999991, 0.099652305, 0.0996601800000001, 0.09965961099999987, 0.09965976399999987, 0.09965505600000002, 0.09966850000000016, 0.09967026400000001, 0.09967219499999991, 0.09967413900000022, 0.09967784700000015, 0.09968263799999999, 0.09968038899999998, 0.09967952699999971, 0.09967411099999968, 0.09967523599999994, 0.09967638899999987, 0.09967608399999994, 0.09966841699999973, 0.09967361199999969, 0.09966944499999997, 0.09966922200000017, 0.09967401399999964, 0.09967587499999997, 0.09967620799999999, 0.09967319400000019, 0.0996709440000001, 0.09967552700000004, 0.0996803470000005, 0.09968095799999954, 0.09967804099999977, 0.09967941699999994, 0.09967683300000019, 0.09967811099999935, 0.09968262500000069, 0.09968248599999985, 0.09967792999999947, 0.09967955499999981, 0.099677389, 0.0996796669999993]</msg>
<status status="PASS" starttime="20201030 15:56:18.918" endtime="20201030 15:56:18.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.913" endtime="20201030 15:56:18.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.924" endtime="20201030 15:56:18.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.922" endtime="20201030 15:56:18.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.921" endtime="20201030 15:56:18.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.387" endtime="20201030 15:56:18.945"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:12.320" endtime="20201030 15:56:18.945" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.952" endtime="20201030 15:56:18.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.950" endtime="20201030 15:56:18.972"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.986" endtime="20201030 15:56:18.998"></status>
</kw>
<msg timestamp="20201030 15:56:18.998" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.984" endtime="20201030 15:56:18.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.002" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.999" endtime="20201030 15:56:19.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.008" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:19.005" endtime="20201030 15:56:19.008"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:18.981" endtime="20201030 15:56:19.009"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:18.978" endtime="20201030 15:56:19.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.977" endtime="20201030 15:56:19.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:19.019" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:19.016" endtime="20201030 15:56:19.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.014" endtime="20201030 15:56:19.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.976" endtime="20201030 15:56:19.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.975" endtime="20201030 15:56:19.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.022" endtime="20201030 15:56:19.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.974" endtime="20201030 15:56:19.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.972" endtime="20201030 15:56:19.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.949" endtime="20201030 15:56:19.029"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.038" endtime="20201030 15:56:25.144"></status>
</kw>
<msg timestamp="20201030 15:56:25.145" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.036" endtime="20201030 15:56:25.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.151" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.147" endtime="20201030 15:56:25.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.154" endtime="20201030 15:56:25.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.033" endtime="20201030 15:56:25.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.031" endtime="20201030 15:56:25.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.164" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:56:25.161" endtime="20201030 15:56:25.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.173" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:25.171" endtime="20201030 15:56:25.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.177" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:25.175" endtime="20201030 15:56:25.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.166" endtime="20201030 15:56:25.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.187" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:25.185" endtime="20201030 15:56:25.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.191" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:25.189" endtime="20201030 15:56:25.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.180" endtime="20201030 15:56:25.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.201" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:25.199" endtime="20201030 15:56:25.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.205" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:56:25.203" endtime="20201030 15:56:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.194" endtime="20201030 15:56:25.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.223" endtime="20201030 15:56:25.528"></status>
</kw>
<msg timestamp="20201030 15:56:25.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077504333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177839625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.220" endtime="20201030 15:56:25.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077504333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177839625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.533" endtime="20201030 15:56:25.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.541" endtime="20201030 15:56:25.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.215" endtime="20201030 15:56:25.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.208" endtime="20201030 15:56:25.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:25.547" level="INFO">${FILTERED} = [{'diff': 0.100335292}, {'diff': 0.09988226399999997}, {'diff': 0.09890774999999996}, {'diff': 0.09967784699999999}, {'diff': 0.09967826400000002}, {'diff': 0.09967913900000003}, {'diff': 0.099678237}...</msg>
<status status="PASS" starttime="20201030 15:56:25.544" endtime="20201030 15:56:25.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.551" level="INFO">${RESULT} = {'diff': [0.100335292, 0.09988226399999997, 0.09890774999999996, 0.09967784699999999, 0.09967826400000002, 0.09967913900000003, 0.099678237, 0.09967720800000002, 0.09968023599999998, 0.099677931, 0.09...</msg>
<status status="PASS" starttime="20201030 15:56:25.548" endtime="20201030 15:56:25.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.555" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:25.554" endtime="20201030 15:56:25.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.557" level="INFO">VALUE: [0.100335292, 0.09988226399999997, 0.09890774999999996, 0.09967784699999999, 0.09967826400000002, 0.09967913900000003, 0.099678237, 0.09967720800000002, 0.09968023599999998, 0.099677931, 0.09967759799999998, 0.09967408400000011, 0.09967051299999996, 0.09967341699999999, 0.09966886099999983, 0.0996716660000001, 0.09967079200000017, 0.09967366700000002, 0.09968027700000004, 0.09967506900000012, 0.09967331900000032, 0.0996755140000003, 0.09967668100000004, 0.09967822299999973, 0.09967773599999985, 0.099670959, 0.09966956900000001, 0.09966438899999996, 0.09966437500000014, 0.09966798600000004, 0.09966569400000003, 0.09966408299999996, 0.09967165200000005, 0.09966881899999969, 0.09966774999999961, 0.09965920899999992, 0.0996539860000003, 0.0996534579999997, 0.09965651399999986, 0.09966449999999982, 0.09966108400000007, 0.09965833299999982, 0.09966188899999917, 0.09966036100000064, 0.09965849999999943, 0.09966551399999979, 0.09966834699999971, 0.09966208300000012, 0.09966376299999968, 0.09965763900000013, 0.09965615299999975]</msg>
<status status="PASS" starttime="20201030 15:56:25.556" endtime="20201030 15:56:25.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.552" endtime="20201030 15:56:25.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.563" endtime="20201030 15:56:25.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.561" endtime="20201030 15:56:25.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.560" endtime="20201030 15:56:25.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.030" endtime="20201030 15:56:25.584"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:18.947" endtime="20201030 15:56:25.584" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.591" endtime="20201030 15:56:25.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.589" endtime="20201030 15:56:25.611"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.624" endtime="20201030 15:56:25.636"></status>
</kw>
<msg timestamp="20201030 15:56:25.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.622" endtime="20201030 15:56:25.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.638" endtime="20201030 15:56:25.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.642" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:25.640" endtime="20201030 15:56:25.643"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:25.620" endtime="20201030 15:56:25.643"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:25.617" endtime="20201030 15:56:25.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.616" endtime="20201030 15:56:25.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:25.648" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:25.647" endtime="20201030 15:56:25.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.645" endtime="20201030 15:56:25.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.615" endtime="20201030 15:56:25.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.615" endtime="20201030 15:56:25.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.649" endtime="20201030 15:56:25.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.613" endtime="20201030 15:56:25.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.612" endtime="20201030 15:56:25.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.588" endtime="20201030 15:56:25.652"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.661" endtime="20201030 15:56:31.768"></status>
</kw>
<msg timestamp="20201030 15:56:31.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.659" endtime="20201030 15:56:31.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.775" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.772" endtime="20201030 15:56:31.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.778" endtime="20201030 15:56:31.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.656" endtime="20201030 15:56:31.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.654" endtime="20201030 15:56:31.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:31.788" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:56:31.785" endtime="20201030 15:56:31.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.797" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:31.795" endtime="20201030 15:56:31.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.801" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:31.799" endtime="20201030 15:56:31.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.790" endtime="20201030 15:56:31.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.811" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:31.809" endtime="20201030 15:56:31.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.814" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:31.813" endtime="20201030 15:56:31.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.804" endtime="20201030 15:56:31.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.819" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:31.818" endtime="20201030 15:56:31.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.821" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:56:31.820" endtime="20201030 15:56:31.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.815" endtime="20201030 15:56:31.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.828" endtime="20201030 15:56:32.128"></status>
</kw>
<msg timestamp="20201030 15:56:32.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062174847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162787139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.826" endtime="20201030 15:56:32.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062174847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162787139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.132" endtime="20201030 15:56:32.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.140" endtime="20201030 15:56:32.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.824" endtime="20201030 15:56:32.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.822" endtime="20201030 15:56:32.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:32.147" level="INFO">${FILTERED} = [{'diff': 0.10061229199999999}, {'diff': 0.09990218099999998}, {'diff': 0.09857254099999996}, {'diff': 0.09966940299999999}, {'diff': 0.09966674999999997}, {'diff': 0.09966780600000003}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 15:56:32.144" endtime="20201030 15:56:32.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.152" level="INFO">${RESULT} = {'diff': [0.10061229199999999, 0.09990218099999998, 0.09857254099999996, 0.09966940299999999, 0.09966674999999997, 0.09966780600000003, 0.09966708300000005, 0.09966518000000002, 0.09966622199999997, 0...</msg>
<status status="PASS" starttime="20201030 15:56:32.148" endtime="20201030 15:56:32.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.156" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:32.155" endtime="20201030 15:56:32.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.158" level="INFO">VALUE: [0.10061229199999999, 0.09990218099999998, 0.09857254099999996, 0.09966940299999999, 0.09966674999999997, 0.09966780600000003, 0.09966708300000005, 0.09966518000000002, 0.09966622199999997, 0.09966588900000006, 0.09966969399999992, 0.09966872199999988, 0.099669805, 0.099671764, 0.09967040299999996, 0.09967349999999997, 0.09966629199999999, 0.09966590200000014, 0.09966898599999996, 0.09966799999999987, 0.09966661099999996, 0.09967095800000036, 0.09967330500000005, 0.09966851400000021, 0.09966820799999976, 0.09967055499999988, 0.09966281900000018, 0.09966600000000003, 0.09966091599999993, 0.09966069399999977, 0.09966552800000006, 0.09966565300000019, 0.09966523699999996, 0.09967423600000025, 0.09967626399999974, 0.09966726399999981, 0.09966877800000029, 0.09967211199999992, 0.0996701390000001, 0.0996748059999999, 0.09967479200000007, 0.09967357000000021, 0.09967316699999973, 0.0996847909999996, 0.09967522200000012, 0.09967288800000063, 0.09967098600000046, 0.09967266600000002, 0.0996719309999996, 0.09967033300000061, 0.09967080599999978]</msg>
<status status="PASS" starttime="20201030 15:56:32.157" endtime="20201030 15:56:32.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.153" endtime="20201030 15:56:32.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.163" endtime="20201030 15:56:32.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.162" endtime="20201030 15:56:32.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.161" endtime="20201030 15:56:32.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.653" endtime="20201030 15:56:32.184"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:25.586" endtime="20201030 15:56:32.184" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.191" endtime="20201030 15:56:32.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.189" endtime="20201030 15:56:32.211"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.224" endtime="20201030 15:56:32.237"></status>
</kw>
<msg timestamp="20201030 15:56:32.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.222" endtime="20201030 15:56:32.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.239" endtime="20201030 15:56:32.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.243" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:32.241" endtime="20201030 15:56:32.243"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:32.220" endtime="20201030 15:56:32.244"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:32.217" endtime="20201030 15:56:32.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.216" endtime="20201030 15:56:32.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:32.249" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:32.248" endtime="20201030 15:56:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.246" endtime="20201030 15:56:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.215" endtime="20201030 15:56:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.215" endtime="20201030 15:56:32.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.250" endtime="20201030 15:56:32.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.213" endtime="20201030 15:56:32.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.212" endtime="20201030 15:56:32.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.188" endtime="20201030 15:56:32.253"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.261" endtime="20201030 15:56:38.368"></status>
</kw>
<msg timestamp="20201030 15:56:38.369" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.260" endtime="20201030 15:56:38.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.375" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.372" endtime="20201030 15:56:38.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.378" endtime="20201030 15:56:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.257" endtime="20201030 15:56:38.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.255" endtime="20201030 15:56:38.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.388" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:56:38.385" endtime="20201030 15:56:38.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.397" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:38.395" endtime="20201030 15:56:38.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.401" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:38.399" endtime="20201030 15:56:38.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.390" endtime="20201030 15:56:38.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.411" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:38.409" endtime="20201030 15:56:38.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.416" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:38.414" endtime="20201030 15:56:38.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.404" endtime="20201030 15:56:38.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.425" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:38.423" endtime="20201030 15:56:38.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.430" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:56:38.428" endtime="20201030 15:56:38.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.419" endtime="20201030 15:56:38.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.447" endtime="20201030 15:56:38.758"></status>
</kw>
<msg timestamp="20201030 15:56:38.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061883375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162853861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.442" endtime="20201030 15:56:38.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061883375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162853861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.762" endtime="20201030 15:56:38.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.770" endtime="20201030 15:56:38.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.436" endtime="20201030 15:56:38.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.433" endtime="20201030 15:56:38.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:38.777" level="INFO">${FILTERED} = [{'diff': 0.100970486}, {'diff': 0.09993780599999999}, {'diff': 0.09820404100000002}, {'diff': 0.10039533300000003}, {'diff': 0.10094926399999998}, {'diff': 0.09769495799999994}, {'diff': 0.0996739580...</msg>
<status status="PASS" starttime="20201030 15:56:38.773" endtime="20201030 15:56:38.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.780" level="INFO">${RESULT} = {'diff': [0.100970486, 0.09993780599999999, 0.09820404100000002, 0.10039533300000003, 0.10094926399999998, 0.09769495799999994, 0.09967395800000001, 0.09967561199999997, 0.09967520899999993, 0.0996727...</msg>
<status status="PASS" starttime="20201030 15:56:38.777" endtime="20201030 15:56:38.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.785" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:38.784" endtime="20201030 15:56:38.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.787" level="INFO">VALUE: [0.100970486, 0.09993780599999999, 0.09820404100000002, 0.10039533300000003, 0.10094926399999998, 0.09769495799999994, 0.09967395800000001, 0.09967561199999997, 0.09967520899999993, 0.09967273600000015, 0.09967230599999999, 0.09967772200000002, 0.09967770799999998, 0.09967912499999998, 0.09968590200000005, 0.09968076400000014, 0.09968101399999996, 0.09967695799999987, 0.09967861100000008, 0.09967912499999998, 0.09968265300000034, 0.09967977800000005, 0.099673181, 0.09967659699999976, 0.09967702699999981, 0.09967919500000022, 0.09968398600000006, 0.09967915199999977, 0.09968934699999998, 0.09968952799999986, 0.09968627800000007, 0.0996884170000003, 0.09967990300000018, 0.09967791600000009, 0.09967980600000015, 0.09967679100000026, 0.0996753469999998, 0.09967101399999967, 0.09967415300000004, 0.09967320800000001, 0.09966677699999948, 0.09967890299999915, 0.09967977799999961, 0.09968000000000021, 0.09967706900000017, 0.0996750560000006, 0.09966486099999994, 0.09967223700000005, 0.09966765300000002, 0.09967259799999972, 0.09967141599999962]</msg>
<status status="PASS" starttime="20201030 15:56:38.786" endtime="20201030 15:56:38.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.781" endtime="20201030 15:56:38.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:38.792" endtime="20201030 15:56:38.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.790" endtime="20201030 15:56:38.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.789" endtime="20201030 15:56:38.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.254" endtime="20201030 15:56:38.813"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:32.186" endtime="20201030 15:56:38.813" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:57.596" endtime="20201030 15:56:38.820"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:53:51.274" endtime="20201030 15:56:38.852"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
