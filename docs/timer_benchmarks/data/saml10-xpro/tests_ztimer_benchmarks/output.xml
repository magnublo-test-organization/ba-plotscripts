<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:29:51.284" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.888" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:51.904" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:53.209" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:51.885" endtime="20201030 18:29:53.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.214" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:29:53.212" endtime="20201030 18:29:53.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.882" endtime="20201030 18:29:53.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.218" endtime="20201030 18:29:53.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.216" endtime="20201030 18:29:53.404"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.416" endtime="20201030 18:29:53.429"></status>
</kw>
<msg timestamp="20201030 18:29:53.429" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.415" endtime="20201030 18:29:53.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.430" endtime="20201030 18:29:53.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.435" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:53.433" endtime="20201030 18:29:53.435"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:53.412" endtime="20201030 18:29:53.436"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:53.410" endtime="20201030 18:29:53.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.409" endtime="20201030 18:29:53.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:53.441" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:53.440" endtime="20201030 18:29:53.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.438" endtime="20201030 18:29:53.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.408" endtime="20201030 18:29:53.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.407" endtime="20201030 18:29:53.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.443" endtime="20201030 18:29:53.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.406" endtime="20201030 18:29:53.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.446" endtime="20201030 18:29:53.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.405" endtime="20201030 18:29:53.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.879" endtime="20201030 18:29:53.448"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.455" endtime="20201030 18:29:53.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.453" endtime="20201030 18:29:53.475"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.489" endtime="20201030 18:29:53.503"></status>
</kw>
<msg timestamp="20201030 18:29:53.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.487" endtime="20201030 18:29:53.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.506" endtime="20201030 18:29:53.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.515" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:53.511" endtime="20201030 18:29:53.515"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:53.485" endtime="20201030 18:29:53.517"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:53.482" endtime="20201030 18:29:53.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.480" endtime="20201030 18:29:53.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:53.531" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:53.529" endtime="20201030 18:29:53.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.523" endtime="20201030 18:29:53.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.479" endtime="20201030 18:29:53.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.479" endtime="20201030 18:29:53.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.535" endtime="20201030 18:29:53.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.477" endtime="20201030 18:29:53.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.476" endtime="20201030 18:29:53.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.452" endtime="20201030 18:29:53.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.559" endtime="20201030 18:29:53.572"></status>
</kw>
<msg timestamp="20201030 18:29:53.573" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.553" endtime="20201030 18:29:53.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.578" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.576" endtime="20201030 18:29:53.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.581" endtime="20201030 18:29:53.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.546" endtime="20201030 18:29:53.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.543" endtime="20201030 18:29:53.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.593" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:29:53.592" endtime="20201030 18:29:53.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.595" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:29:53.594" endtime="20201030 18:29:53.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.587" endtime="20201030 18:29:53.596"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:53.449" endtime="20201030 18:29:53.596" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:51.411" endtime="20201030 18:29:53.599"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.650" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:53.658" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:54.851" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:53.648" endtime="20201030 18:29:54.852"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.855" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:29:54.853" endtime="20201030 18:29:54.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.647" endtime="20201030 18:29:54.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.857" endtime="20201030 18:29:55.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.856" endtime="20201030 18:29:55.080"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.092" endtime="20201030 18:29:55.105"></status>
</kw>
<msg timestamp="20201030 18:29:55.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.091" endtime="20201030 18:29:55.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.106" endtime="20201030 18:29:55.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.111" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:55.109" endtime="20201030 18:29:55.111"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:55.088" endtime="20201030 18:29:55.113"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:55.086" endtime="20201030 18:29:55.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.085" endtime="20201030 18:29:55.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:55.122" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:55.121" endtime="20201030 18:29:55.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.116" endtime="20201030 18:29:55.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.084" endtime="20201030 18:29:55.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.084" endtime="20201030 18:29:55.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.125" endtime="20201030 18:29:55.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.083" endtime="20201030 18:29:55.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.131" endtime="20201030 18:29:55.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.081" endtime="20201030 18:29:55.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.646" endtime="20201030 18:29:55.136"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.148" endtime="20201030 18:29:55.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.144" endtime="20201030 18:29:55.171"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.197" endtime="20201030 18:29:55.214"></status>
</kw>
<msg timestamp="20201030 18:29:55.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.194" endtime="20201030 18:29:55.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.216" endtime="20201030 18:29:55.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.220" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:55.218" endtime="20201030 18:29:55.220"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:55.189" endtime="20201030 18:29:55.221"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:55.184" endtime="20201030 18:29:55.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.182" endtime="20201030 18:29:55.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:55.225" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:55.225" endtime="20201030 18:29:55.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.223" endtime="20201030 18:29:55.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.180" endtime="20201030 18:29:55.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.179" endtime="20201030 18:29:55.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.227" endtime="20201030 18:29:55.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.176" endtime="20201030 18:29:55.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.173" endtime="20201030 18:29:55.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.141" endtime="20201030 18:29:55.230"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.238" endtime="20201030 18:29:55.248"></status>
</kw>
<msg timestamp="20201030 18:29:55.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.236" endtime="20201030 18:29:55.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.251" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.250" endtime="20201030 18:29:55.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.252" endtime="20201030 18:29:55.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.234" endtime="20201030 18:29:55.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.232" endtime="20201030 18:29:55.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.261" endtime="20201030 18:29:55.551"></status>
</kw>
<msg timestamp="20201030 18:29:55.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07969625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079697694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:55.260" endtime="20201030 18:29:55.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07969625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079697694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:55.556" endtime="20201030 18:29:55.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.564" endtime="20201030 18:29:55.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.257" endtime="20201030 18:29:55.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.256" endtime="20201030 18:29:55.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:55.590" level="INFO">${debug} = {'time': [0.07969625, 0.079697694, 0.079725583, 0.079726917, 0.079757611, 0.079758917, 0.079789931, 0.07979125, 0.079819778, 0.079821111, 0.07984775, 0.079849069, 0.079879764, 0.079881083, 0.079908056...</msg>
<status status="PASS" starttime="20201030 18:29:55.567" endtime="20201030 18:29:55.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.592" endtime="20201030 18:29:55.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.597" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:55.596" endtime="20201030 18:29:55.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.601" level="INFO">VALUE: {'time': [0.07969625, 0.079697694, 0.079725583, 0.079726917, 0.079757611, 0.079758917, 0.079789931, 0.07979125, 0.079819778, 0.079821111, 0.07984775, 0.079849069, 0.079879764, 0.079881083, 0.079908056, 0.079909347, 0.079932278, 0.079933583, 0.079965542, 0.079966847, 0.079991319, 0.079992639, 0.080018667, 0.080019972, 0.080050375, 0.080051722, 0.080078333, 0.080079653, 0.080109736, 0.080111042, 0.080142056, 0.080143375, 0.080172528, 0.080173833, 0.080197694, 0.080199056, 0.080226278, 0.080227583, 0.080258292, 0.080259611, 0.080291278, 0.080292556, 0.080317361, 0.080318667, 0.080341597, 0.080342917, 0.080368917, 0.080370222, 0.080394722, 0.080396014, 0.080420806, 0.080422125, 0.080445042, 0.080446347, 0.080477375, 0.080478694, 0.080510653, 0.080511944, 0.080544208, 0.080545514, 0.0805725, 0.080573792, 0.080598903, 0.080600208, 0.080630278, 0.080631597, 0.080654819, 0.080656125, 0.080686222, 0.080687528, 0.080715125, 0.080716431, 0.080747444, 0.080748764, 0.080777292, 0.080778625, 0.080808389, 0.080809681, 0.080835736, 0.080837014, 0.080864611, 0.080865931, 0.080896319, 0.080897681, 0.080925847, 0.080927153, 0.080952569, 0.080953875, 0.08098525, 0.080986514, 0.081015986, 0.081017306, 0.081041764, 0.081043097, 0.081073167, 0.081074472, 0.081105486, 0.081106806, 0.081139083, 0.081140389], 'source_diff': [0, 1.4440000000032205e-06, 2.788900000000316e-05, 1.3339999999917307e-06, 3.0694000000011656e-05, 1.3059999999925909e-06, 3.101399999999588e-05, 1.318999999999626e-06, 2.8527999999999887e-05, 1.3330000000061348e-06, 2.6638999999994972e-05, 1.318999999999626e-06, 3.069500000001113e-05, 1.318999999999626e-06, 2.697299999999958e-05, 1.2910000000004862e-06, 2.293099999998993e-05, 1.305000000006995e-06, 3.195899999999807e-05, 1.3049999999931172e-06, 2.4472000000011485e-05, 1.3199999999990997e-06, 2.6027999999997387e-05, 1.3049999999931172e-06, 3.0402999999998293e-05, 1.3470000000126436e-06, 2.6610999999995832e-05, 1.3199999999990997e-06, 3.0083000000000193e-05, 1.3059999999925909e-06, 3.1014000000009756e-05, 1.318999999999626e-06, 2.915300000000398e-05, 1.3049999999931172e-06, 2.386100000000002e-05, 1.3620000000047483e-06, 2.7221999999993418e-05, 1.305000000006995e-06, 3.070899999998988e-05, 1.318999999999626e-06, 3.166699999999911e-05, 1.2780000000073288e-06, 2.480500000000274e-05, 1.3059999999925909e-06, 2.2930000000004336e-05, 1.3199999999990997e-06, 2.5999999999998247e-05, 1.305000000006995e-06, 2.4499999999996747e-05, 1.2919999999999598e-06, 2.4791999999995706e-05, 1.318999999999626e-06, 2.29169999999973e-05, 1.305000000006995e-06, 3.102800000000239e-05, 1.318999999999626e-06, 3.195899999999807e-05, 1.2910000000004862e-06, 3.226400000000407e-05, 1.3059999999925909e-06, 2.6986000000006616e-05, 1.2919999999999598e-06, 2.5110999999994332e-05, 1.305000000006995e-06, 3.0069999999993158e-05, 1.318999999999626e-06, 2.3222000000003296e-05, 1.3059999999925909e-06, 3.0097000000006702e-05, 1.3059999999925909e-06, 2.75970000000042e-05, 1.3060000000064687e-06, 3.1012999999996405e-05, 1.3199999999990997e-06, 2.8527999999999887e-05, 1.3330000000061348e-06, 2.976399999998769e-05, 1.2919999999999598e-06, 2.605500000001093e-05, 1.277999999993451e-06, 2.75970000000042e-05, 1.3199999999990997e-06, 3.038799999999231e-05, 1.3620000000047483e-06, 2.816599999999614e-05, 1.3060000000064687e-06, 2.5416000000000327e-05, 1.3059999999925909e-06, 3.137500000000015e-05, 1.26400000000082e-06, 2.9472000000002607e-05, 1.3199999999990997e-06, 2.4458000000004976e-05, 1.332999999992257e-06, 3.0070000000007036e-05, 1.3049999999931172e-06, 3.1014000000009756e-05, 1.3199999999990997e-06, 3.2276999999997225e-05, 1.3059999999925909e-06], 'eventdiff': [0, 1.4440000000032205e-06, 2.788900000000316e-05, 1.3339999999917307e-06, 3.0694000000011656e-05, 1.3059999999925909e-06, 3.101399999999588e-05, 1.318999999999626e-06, 2.8527999999999887e-05, 1.3330000000061348e-06, 2.6638999999994972e-05, 1.318999999999626e-06, 3.069500000001113e-05, 1.318999999999626e-06, 2.697299999999958e-05, 1.2910000000004862e-06, 2.293099999998993e-05, 1.305000000006995e-06, 3.195899999999807e-05, 1.3049999999931172e-06, 2.4472000000011485e-05, 1.3199999999990997e-06, 2.6027999999997387e-05, 1.3049999999931172e-06, 3.0402999999998293e-05, 1.3470000000126436e-06, 2.6610999999995832e-05, 1.3199999999990997e-06, 3.0083000000000193e-05, 1.3059999999925909e-06, 3.1014000000009756e-05, 1.318999999999626e-06, 2.915300000000398e-05, 1.3049999999931172e-06, 2.386100000000002e-05, 1.3620000000047483e-06, 2.7221999999993418e-05, 1.305000000006995e-06, 3.070899999998988e-05, 1.318999999999626e-06, 3.166699999999911e-05, 1.2780000000073288e-06, 2.480500000000274e-05, 1.3059999999925909e-06, 2.2930000000004336e-05, 1.3199999999990997e-06, 2.5999999999998247e-05, 1.305000000006995e-06, 2.4499999999996747e-05, 1.2919999999999598e-06, 2.4791999999995706e-05, 1.318999999999626e-06, 2.29169999999973e-05, 1.305000000006995e-06, 3.102800000000239e-05, 1.318999999999626e-06, 3.195899999999807e-05, 1.2910000000004862e-06, 3.226400000000407e-05, 1.3059999999925909e-06, 2.6986000000006616e-05, 1.2919999999999598e-06, 2.5110999999994332e-05, 1.305000000006995e-06, 3.0069999999993158e-05, 1.318999999999626e-06, 2.3222000000003296e-05, 1.3059999999925909e-06, 3.0097000000006702e-05, 1.3059999999925909e-06, 2.75970000000042e-05, 1.3060000000064687e-06, 3.1012999999996405e-05, 1.3199999999990997e-06, 2.8527999999999887e-05, 1.3330000000061348e-06, 2.976399999998769e-05, 1.2919999999999598e-06, 2.605500000001093e-05, 1.277999999993451e-06, 2.75970000000042e-05, 1.3199999999990997e-06, 3.038799999999231e-05, 1.3620000000047483e-06, 2.816599999999614e-05, 1.3060000000064687e-06, 2.5416000000000327e-05, 1.3059999999925909e-06, 3.137500000000015e-05, 1.26400000000082e-06, 2.9472000000002607e-05, 1.3199999999990997e-06, 2.4458000000004976e-05, 1.332999999992257e-06, 3.0070000000007036e-05, 1.3049999999931172e-06, 3.1014000000009756e-05, 1.3199999999990997e-06, 3.2276999999997225e-05, 1.3059999999925909e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:55.598" endtime="20201030 18:29:55.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.594" endtime="20201030 18:29:55.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.606" level="INFO">${RESULT} = [{'diff': 1.4440000000032205e-06}, {'diff': 1.3339999999917307e-06}, {'diff': 1.3059999999925909e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3330000000061348e-06}, {'diff': 1.318999999999626e-06...</msg>
<status status="PASS" starttime="20201030 18:29:55.603" endtime="20201030 18:29:55.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:55.611" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4440000000032205e-06, 1.3339999999917307e-06, 1.3059999999925909e-06, 1.318999999999626e-06, 1.3330000000061348e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:29:55.607" endtime="20201030 18:29:55.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.615" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:55.614" endtime="20201030 18:29:55.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.618" level="INFO">VALUE: [1.4440000000032205e-06, 1.3339999999917307e-06, 1.3059999999925909e-06, 1.318999999999626e-06, 1.3330000000061348e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.305000000006995e-06, 1.3049999999931172e-06, 1.3199999999990997e-06, 1.3049999999931172e-06, 1.3470000000126436e-06, 1.3199999999990997e-06, 1.3059999999925909e-06, 1.318999999999626e-06, 1.3049999999931172e-06, 1.3620000000047483e-06, 1.305000000006995e-06, 1.318999999999626e-06, 1.2780000000073288e-06, 1.3059999999925909e-06, 1.3199999999990997e-06, 1.305000000006995e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.305000000006995e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.3059999999925909e-06, 1.2919999999999598e-06, 1.305000000006995e-06, 1.318999999999626e-06, 1.3059999999925909e-06, 1.3059999999925909e-06, 1.3060000000064687e-06, 1.3199999999990997e-06, 1.3330000000061348e-06, 1.2919999999999598e-06, 1.277999999993451e-06, 1.3199999999990997e-06, 1.3620000000047483e-06, 1.3060000000064687e-06, 1.3059999999925909e-06, 1.26400000000082e-06, 1.3199999999990997e-06, 1.332999999992257e-06, 1.3049999999931172e-06, 1.3199999999990997e-06, 1.3059999999925909e-06]</msg>
<status status="PASS" starttime="20201030 18:29:55.616" endtime="20201030 18:29:55.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.612" endtime="20201030 18:29:55.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.622" endtime="20201030 18:29:55.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.621" endtime="20201030 18:29:55.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.619" endtime="20201030 18:29:55.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.231" endtime="20201030 18:29:55.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.231" endtime="20201030 18:29:55.644"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.653" endtime="20201030 18:29:55.663"></status>
</kw>
<msg timestamp="20201030 18:29:55.664" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.651" endtime="20201030 18:29:55.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.666" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.665" endtime="20201030 18:29:55.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.668" endtime="20201030 18:29:55.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.648" endtime="20201030 18:29:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.646" endtime="20201030 18:29:55.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.676" endtime="20201030 18:29:55.962"></status>
</kw>
<msg timestamp="20201030 18:29:55.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.675" endtime="20201030 18:29:55.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.966" endtime="20201030 18:29:55.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.975" endtime="20201030 18:29:55.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.672" endtime="20201030 18:29:55.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.671" endtime="20201030 18:29:55.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:56.005" level="INFO">${debug} = {'time': [0.021743931, 0.021745431, 0.021772347, 0.021773653, 0.021803417, 0.021804736, 0.021827958, 0.021829278, 0.021857486, 0.021858792, 0.021885458, 0.021886778, 0.021909694, 0.021911014, 0.021942...</msg>
<status status="PASS" starttime="20201030 18:29:55.979" endtime="20201030 18:29:56.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.006" endtime="20201030 18:29:56.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.011" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:56.010" endtime="20201030 18:29:56.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.015" level="INFO">VALUE: {'time': [0.021743931, 0.021745431, 0.021772347, 0.021773653, 0.021803417, 0.021804736, 0.021827958, 0.021829278, 0.021857486, 0.021858792, 0.021885458, 0.021886778, 0.021909694, 0.021911014, 0.021942014, 0.021943319, 0.021967569, 0.021968806, 0.021997972, 0.021999333, 0.022030944, 0.022032222, 0.02205825, 0.022059583, 0.022083417, 0.022084792, 0.022112014, 0.022113333, 0.022143417, 0.022144722, 0.022172958, 0.02217425, 0.022200639, 0.022201917, 0.022228875, 0.022230194, 0.022259667, 0.022260986, 0.022287944, 0.02228925, 0.022313097, 0.022314417, 0.022342389, 0.022343625, 0.022367819, 0.022369125, 0.022398597, 0.022399889, 0.022423125, 0.022424444, 0.022456722, 0.022458056, 0.022485306, 0.022486625, 0.022509847, 0.022511153, 0.022535667, 0.022536944, 0.022568903, 0.022570222, 0.022594125, 0.022595389, 0.022623986, 0.022625236, 0.022654389, 0.022655694, 0.022679236, 0.022680542, 0.022703153, 0.022704472, 0.022732708, 0.022734, 0.022759111, 0.022760417, 0.022786764, 0.022788069, 0.022820028, 0.022821333, 0.022852375, 0.022853681, 0.022879083, 0.022880431, 0.022910806, 0.022912097, 0.022936264, 0.022937583, 0.022963625, 0.022964944, 0.022990028, 0.022991347, 0.023018625, 0.023019944, 0.023044431, 0.023045764, 0.02307675, 0.023078056, 0.023102861, 0.023104153, 0.023134861, 0.023136167], 'source_diff': [0, 1.4999999999980307e-06, 2.6916000000001827e-05, 1.3059999999995298e-06, 2.9763999999998098e-05, 1.3190000000030955e-06, 2.3221999999999826e-05, 1.3199999999990997e-06, 2.8207999999998318e-05, 1.3059999999995298e-06, 2.6666000000001577e-05, 1.3199999999990997e-06, 2.2916000000001296e-05, 1.3199999999990997e-06, 3.099999999999978e-05, 1.3050000000000561e-06, 2.4249999999999966e-05, 1.2370000000011538e-06, 2.9166000000000608e-05, 1.3609999999983358e-06, 3.161100000000083e-05, 1.27800000000039e-06, 2.6028000000000856e-05, 1.332999999999196e-06, 2.3834000000000355e-05, 1.3749999999979057e-06, 2.7222000000000357e-05, 1.318999999999626e-06, 3.0083999999999667e-05, 1.3050000000000561e-06, 2.8236000000000927e-05, 1.2919999999999598e-06, 2.638900000000166e-05, 1.27800000000039e-06, 2.6957999999997068e-05, 1.3190000000030955e-06, 2.947299999999861e-05, 1.318999999999626e-06, 2.6958000000000537e-05, 1.3059999999995298e-06, 2.384700000000045e-05, 1.3199999999990997e-06, 2.7972000000001107e-05, 1.2359999999982108e-06, 2.4194000000001686e-05, 1.3059999999995298e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 2.3235999999999396e-05, 1.3190000000030955e-06, 3.22779999999967e-05, 1.334000000002139e-06, 2.7249999999999497e-05, 1.318999999999626e-06, 2.3221999999999826e-05, 1.3059999999995298e-06, 2.4513999999999786e-05, 1.2770000000009163e-06, 3.195900000000154e-05, 1.318999999999626e-06, 2.390299999999873e-05, 1.26400000000082e-06, 2.8596999999998263e-05, 1.2500000000012501e-06, 2.9153000000000512e-05, 1.3050000000000561e-06, 2.3541999999997926e-05, 1.3060000000029992e-06, 2.261099999999877e-05, 1.318999999999626e-06, 2.8236000000000927e-05, 1.2919999999999598e-06, 2.5110999999997802e-05, 1.3060000000029992e-06, 2.6346999999999482e-05, 1.3050000000000561e-06, 3.195899999999807e-05, 1.3050000000000561e-06, 3.104200000000196e-05, 1.3059999999995298e-06, 2.5402000000000757e-05, 1.3479999999982395e-06, 3.0374999999999153e-05, 1.2910000000004862e-06, 2.416700000000202e-05, 1.318999999999626e-06, 2.6042000000000426e-05, 1.318999999999626e-06, 2.5083999999998136e-05, 1.318999999999626e-06, 2.7278000000002106e-05, 1.318999999999626e-06, 2.448700000000012e-05, 1.332999999999196e-06, 3.098600000000021e-05, 1.3059999999995298e-06, 2.4804999999999272e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3059999999995298e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 1.4999999999980307e-06, 2.6916000000001827e-05, 1.3059999999995298e-06, 2.9763999999998098e-05, 1.3190000000030955e-06, 2.3221999999999826e-05, 1.3199999999990997e-06, 2.8207999999998318e-05, 1.3059999999995298e-06, 2.6666000000001577e-05, 1.3199999999990997e-06, 2.2916000000001296e-05, 1.3199999999990997e-06, 3.099999999999978e-05, 1.3050000000000561e-06, 2.4249999999999966e-05, 1.2370000000011538e-06, 2.9166000000000608e-05, 1.3609999999983358e-06, 3.161100000000083e-05, 1.27800000000039e-06, 2.6028000000000856e-05, 1.332999999999196e-06, 2.3834000000000355e-05, 1.3749999999979057e-06, 2.7222000000000357e-05, 1.318999999999626e-06, 3.0083999999999667e-05, 1.3050000000000561e-06, 2.8236000000000927e-05, 1.2919999999999598e-06, 2.638900000000166e-05, 1.27800000000039e-06, 2.6957999999997068e-05, 1.3190000000030955e-06, 2.947299999999861e-05, 1.318999999999626e-06, 2.6958000000000537e-05, 1.3059999999995298e-06, 2.384700000000045e-05, 1.3199999999990997e-06, 2.7972000000001107e-05, 1.2359999999982108e-06, 2.4194000000001686e-05, 1.3059999999995298e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 2.3235999999999396e-05, 1.3190000000030955e-06, 3.22779999999967e-05, 1.334000000002139e-06, 2.7249999999999497e-05, 1.318999999999626e-06, 2.3221999999999826e-05, 1.3059999999995298e-06, 2.4513999999999786e-05, 1.2770000000009163e-06, 3.195900000000154e-05, 1.318999999999626e-06, 2.390299999999873e-05, 1.26400000000082e-06, 2.8596999999998263e-05, 1.2500000000012501e-06, 2.9153000000000512e-05, 1.3050000000000561e-06, 2.3541999999997926e-05, 1.3060000000029992e-06, 2.261099999999877e-05, 1.318999999999626e-06, 2.8236000000000927e-05, 1.2919999999999598e-06, 2.5110999999997802e-05, 1.3060000000029992e-06, 2.6346999999999482e-05, 1.3050000000000561e-06, 3.195899999999807e-05, 1.3050000000000561e-06, 3.104200000000196e-05, 1.3059999999995298e-06, 2.5402000000000757e-05, 1.3479999999982395e-06, 3.0374999999999153e-05, 1.2910000000004862e-06, 2.416700000000202e-05, 1.318999999999626e-06, 2.6042000000000426e-05, 1.318999999999626e-06, 2.5083999999998136e-05, 1.318999999999626e-06, 2.7278000000002106e-05, 1.318999999999626e-06, 2.448700000000012e-05, 1.332999999999196e-06, 3.098600000000021e-05, 1.3059999999995298e-06, 2.4804999999999272e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3059999999995298e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:56.012" endtime="20201030 18:29:56.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.008" endtime="20201030 18:29:56.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:56.020" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3190000000030955e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3199999999990997e-...</msg>
<status status="PASS" starttime="20201030 18:29:56.017" endtime="20201030 18:29:56.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:56.024" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.3059999999995298e-06, 1.3190000000030955e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.3050000000000561e-06...</msg>
<status status="PASS" starttime="20201030 18:29:56.021" endtime="20201030 18:29:56.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.029" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:56.028" endtime="20201030 18:29:56.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.032" level="INFO">VALUE: [1.4999999999980307e-06, 1.3059999999995298e-06, 1.3190000000030955e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.2370000000011538e-06, 1.3609999999983358e-06, 1.27800000000039e-06, 1.332999999999196e-06, 1.3749999999979057e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.27800000000039e-06, 1.3190000000030955e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.2359999999982108e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3190000000030955e-06, 1.334000000002139e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.2770000000009163e-06, 1.318999999999626e-06, 1.26400000000082e-06, 1.2500000000012501e-06, 1.3050000000000561e-06, 1.3060000000029992e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.3060000000029992e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3479999999982395e-06, 1.2910000000004862e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.332999999999196e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201030 18:29:56.030" endtime="20201030 18:29:56.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.025" endtime="20201030 18:29:56.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.036" endtime="20201030 18:29:56.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.034" endtime="20201030 18:29:56.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.033" endtime="20201030 18:29:56.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.645" endtime="20201030 18:29:56.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.644" endtime="20201030 18:29:56.057"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.064" endtime="20201030 18:29:56.074"></status>
</kw>
<msg timestamp="20201030 18:29:56.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.063" endtime="20201030 18:29:56.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.075" endtime="20201030 18:29:56.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.078" endtime="20201030 18:29:56.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.060" endtime="20201030 18:29:56.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.059" endtime="20201030 18:29:56.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.086" endtime="20201030 18:29:56.373"></status>
</kw>
<msg timestamp="20201030 18:29:56.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018500583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018502083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.085" endtime="20201030 18:29:56.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018500583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018502083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.378" endtime="20201030 18:29:56.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.387" endtime="20201030 18:29:56.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.082" endtime="20201030 18:29:56.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.081" endtime="20201030 18:29:56.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:56.416" level="INFO">${debug} = {'time': [0.018500583, 0.018502083, 0.018528111, 0.018529444, 0.018560458, 0.018561764, 0.018594028, 0.018595319, 0.018619806, 0.018621111, 0.018649333, 0.018650639, 0.018678847, 0.018680167, 0.018708...</msg>
<status status="PASS" starttime="20201030 18:29:56.391" endtime="20201030 18:29:56.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.417" endtime="20201030 18:29:56.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.422" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:56.421" endtime="20201030 18:29:56.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.426" level="INFO">VALUE: {'time': [0.018500583, 0.018502083, 0.018528111, 0.018529444, 0.018560458, 0.018561764, 0.018594028, 0.018595319, 0.018619806, 0.018621111, 0.018649333, 0.018650639, 0.018678847, 0.018680167, 0.018708111, 0.018709389, 0.018731986, 0.018733292, 0.018765236, 0.018766583, 0.018792889, 0.018794222, 0.018825208, 0.018826528, 0.018856292, 0.018857625, 0.01888925, 0.018890556, 0.018917528, 0.018918833, 0.018946736, 0.018948042, 0.018974708, 0.018976014, 0.019002056, 0.019003347, 0.019028208, 0.019029444, 0.019055819, 0.019057111, 0.019084083, 0.019085389, 0.019110806, 0.019112097, 0.019134722, 0.019136056, 0.019163014, 0.019164306, 0.019193444, 0.01919475, 0.019225764, 0.019227097, 0.019250319, 0.019251625, 0.019282347, 0.019283639, 0.019313417, 0.019314722, 0.019339208, 0.019340528, 0.019369986, 0.019371319, 0.019401681, 0.019403, 0.019426847, 0.019428153, 0.019451722, 0.019453, 0.019475931, 0.01947725, 0.019505444, 0.01950675, 0.019530931, 0.019532236, 0.019564181, 0.0195655, 0.019593083, 0.019594403, 0.019625736, 0.019627042, 0.019651222, 0.019652514, 0.019677319, 0.019678611, 0.019710264, 0.019711569, 0.019741653, 0.019742972, 0.019775264, 0.019776569, 0.019803222, 0.019804514, 0.019832736, 0.019834042, 0.019858208, 0.019859514, 0.019891181, 0.019892458, 0.0199235, 0.019924792], 'source_diff': [0, 1.4999999999980307e-06, 2.6028000000000856e-05, 1.332999999999196e-06, 3.101399999999935e-05, 1.3060000000029992e-06, 3.226399999999713e-05, 1.2910000000004862e-06, 2.448700000000012e-05, 1.3050000000000561e-06, 2.8222000000001357e-05, 1.3059999999995298e-06, 2.8207999999998318e-05, 1.3200000000025691e-06, 2.7943999999998498e-05, 1.27800000000039e-06, 2.25969999999992e-05, 1.3059999999995298e-06, 3.19440000000025e-05, 1.3469999999987659e-06, 2.6306000000000246e-05, 1.332999999999196e-06, 3.098600000000021e-05, 1.3199999999990997e-06, 2.9764000000001567e-05, 1.332999999999196e-06, 3.16250000000004e-05, 1.3059999999995298e-06, 2.6972000000000107e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3059999999995298e-06, 2.6666000000001577e-05, 1.3059999999995298e-06, 2.6042000000000426e-05, 1.2910000000004862e-06, 2.486100000000102e-05, 1.2359999999982108e-06, 2.637500000000209e-05, 1.2919999999999598e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 2.54169999999998e-05, 1.2910000000004862e-06, 2.262499999999834e-05, 1.3339999999986696e-06, 2.6958000000000537e-05, 1.2919999999999598e-06, 2.9138000000001468e-05, 1.3059999999995298e-06, 3.101399999999935e-05, 1.332999999999196e-06, 2.3221999999999826e-05, 1.3060000000029992e-06, 3.072199999999692e-05, 1.2920000000034293e-06, 2.9777999999997667e-05, 1.3050000000000561e-06, 2.4486000000000646e-05, 1.3199999999990997e-06, 2.9457999999999568e-05, 1.3330000000026654e-06, 3.0361999999999056e-05, 1.318999999999626e-06, 2.384700000000045e-05, 1.3059999999995298e-06, 2.356900000000106e-05, 1.27800000000039e-06, 2.293099999999687e-05, 1.3190000000030955e-06, 2.8193999999998748e-05, 1.3059999999995298e-06, 2.418100000000159e-05, 1.3050000000000561e-06, 3.19449999999985e-05, 1.318999999999626e-06, 2.7583000000001162e-05, 1.3199999999990997e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.4179999999998647e-05, 1.2919999999999598e-06, 2.4804999999999272e-05, 1.2919999999999598e-06, 3.165300000000301e-05, 1.3050000000000561e-06, 3.0083999999999667e-05, 1.318999999999626e-06, 3.229199999999974e-05, 1.3050000000000561e-06, 2.665299999999801e-05, 1.2919999999999598e-06, 2.8222000000001357e-05, 1.3059999999995298e-06, 2.4165999999999077e-05, 1.3060000000029992e-06, 3.166699999999911e-05, 1.2769999999974468e-06, 3.104200000000196e-05, 1.2919999999999598e-06], 'eventdiff': [0, 1.4999999999980307e-06, 2.6028000000000856e-05, 1.332999999999196e-06, 3.101399999999935e-05, 1.3060000000029992e-06, 3.226399999999713e-05, 1.2910000000004862e-06, 2.448700000000012e-05, 1.3050000000000561e-06, 2.8222000000001357e-05, 1.3059999999995298e-06, 2.8207999999998318e-05, 1.3200000000025691e-06, 2.7943999999998498e-05, 1.27800000000039e-06, 2.25969999999992e-05, 1.3059999999995298e-06, 3.19440000000025e-05, 1.3469999999987659e-06, 2.6306000000000246e-05, 1.332999999999196e-06, 3.098600000000021e-05, 1.3199999999990997e-06, 2.9764000000001567e-05, 1.332999999999196e-06, 3.16250000000004e-05, 1.3059999999995298e-06, 2.6972000000000107e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3059999999995298e-06, 2.6666000000001577e-05, 1.3059999999995298e-06, 2.6042000000000426e-05, 1.2910000000004862e-06, 2.486100000000102e-05, 1.2359999999982108e-06, 2.637500000000209e-05, 1.2919999999999598e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 2.54169999999998e-05, 1.2910000000004862e-06, 2.262499999999834e-05, 1.3339999999986696e-06, 2.6958000000000537e-05, 1.2919999999999598e-06, 2.9138000000001468e-05, 1.3059999999995298e-06, 3.101399999999935e-05, 1.332999999999196e-06, 2.3221999999999826e-05, 1.3060000000029992e-06, 3.072199999999692e-05, 1.2920000000034293e-06, 2.9777999999997667e-05, 1.3050000000000561e-06, 2.4486000000000646e-05, 1.3199999999990997e-06, 2.9457999999999568e-05, 1.3330000000026654e-06, 3.0361999999999056e-05, 1.318999999999626e-06, 2.384700000000045e-05, 1.3059999999995298e-06, 2.356900000000106e-05, 1.27800000000039e-06, 2.293099999999687e-05, 1.3190000000030955e-06, 2.8193999999998748e-05, 1.3059999999995298e-06, 2.418100000000159e-05, 1.3050000000000561e-06, 3.19449999999985e-05, 1.318999999999626e-06, 2.7583000000001162e-05, 1.3199999999990997e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.4179999999998647e-05, 1.2919999999999598e-06, 2.4804999999999272e-05, 1.2919999999999598e-06, 3.165300000000301e-05, 1.3050000000000561e-06, 3.0083999999999667e-05, 1.318999999999626e-06, 3.229199999999974e-05, 1.3050000000000561e-06, 2.665299999999801e-05, 1.2919999999999598e-06, 2.8222000000001357e-05, 1.3059999999995298e-06, 2.4165999999999077e-05, 1.3060000000029992e-06, 3.166699999999911e-05, 1.2769999999974468e-06, 3.104200000000196e-05, 1.2919999999999598e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:56.423" endtime="20201030 18:29:56.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.419" endtime="20201030 18:29:56.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:56.431" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.332999999999196e-06}, {'diff': 1.3060000000029992e-06}, {'diff': 1.2910000000004862e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.3059999999995298e-0...</msg>
<status status="PASS" starttime="20201030 18:29:56.428" endtime="20201030 18:29:56.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:56.435" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.332999999999196e-06, 1.3060000000029992e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3200000000025691e-06, 1.27800000000039e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:29:56.432" endtime="20201030 18:29:56.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.439" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:56.438" endtime="20201030 18:29:56.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.442" level="INFO">VALUE: [1.4999999999980307e-06, 1.332999999999196e-06, 1.3060000000029992e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3200000000025691e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.3469999999987659e-06, 1.332999999999196e-06, 1.3199999999990997e-06, 1.332999999999196e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.2910000000004862e-06, 1.2359999999982108e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.2910000000004862e-06, 1.3339999999986696e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.3060000000029992e-06, 1.2920000000034293e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.3330000000026654e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3190000000030955e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3060000000029992e-06, 1.2769999999974468e-06, 1.2919999999999598e-06]</msg>
<status status="PASS" starttime="20201030 18:29:56.441" endtime="20201030 18:29:56.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.436" endtime="20201030 18:29:56.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.446" endtime="20201030 18:29:56.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.445" endtime="20201030 18:29:56.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.444" endtime="20201030 18:29:56.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.057" endtime="20201030 18:29:56.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.057" endtime="20201030 18:29:56.467"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.476" endtime="20201030 18:29:56.485"></status>
</kw>
<msg timestamp="20201030 18:29:56.486" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.474" endtime="20201030 18:29:56.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.487" endtime="20201030 18:29:56.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.489" endtime="20201030 18:29:56.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.471" endtime="20201030 18:29:56.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.469" endtime="20201030 18:29:56.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.499" endtime="20201030 18:29:56.785"></status>
</kw>
<msg timestamp="20201030 18:29:56.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019292792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019294292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.497" endtime="20201030 18:29:56.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019292792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019294292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.789" endtime="20201030 18:29:56.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.798" endtime="20201030 18:29:56.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.495" endtime="20201030 18:29:56.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.493" endtime="20201030 18:29:56.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:56.825" level="INFO">${debug} = {'time': [0.019292792, 0.019294292, 0.019316917, 0.019318222, 0.019345194, 0.019346486, 0.019378125, 0.019379444, 0.019407667, 0.019408972, 0.019437514, 0.019438806, 0.019469514, 0.019470903, 0.019503...</msg>
<status status="PASS" starttime="20201030 18:29:56.801" endtime="20201030 18:29:56.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.826" endtime="20201030 18:29:56.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.831" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:56.830" endtime="20201030 18:29:56.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.835" level="INFO">VALUE: {'time': [0.019292792, 0.019294292, 0.019316917, 0.019318222, 0.019345194, 0.019346486, 0.019378125, 0.019379444, 0.019407667, 0.019408972, 0.019437514, 0.019438806, 0.019469514, 0.019470903, 0.019503097, 0.019504417, 0.019536361, 0.019537667, 0.019564639, 0.019565958, 0.019588875, 0.019590222, 0.019615014, 0.019616292, 0.019648569, 0.019649875, 0.019674361, 0.019675681, 0.019700778, 0.019702083, 0.019728111, 0.019729417, 0.019754847, 0.019756153, 0.019783764, 0.019785042, 0.019817, 0.019818306, 0.019843403, 0.019844722, 0.019870764, 0.019872056, 0.019902764, 0.019904069, 0.019929792, 0.019931111, 0.0199615, 0.019962819, 0.019990417, 0.019991722, 0.020023375, 0.020024681, 0.020049181, 0.020050542, 0.020073708, 0.020075014, 0.020105722, 0.020107042, 0.020136194, 0.0201375, 0.020166042, 0.020167347, 0.020198681, 0.0202, 0.020225417, 0.020226708, 0.020249639, 0.020250944, 0.020277, 0.020278292, 0.020304639, 0.020305958, 0.020335111, 0.020336431, 0.020366833, 0.020368153, 0.020400403, 0.020401694, 0.020426819, 0.020428111, 0.020454458, 0.020455778, 0.020479944, 0.02048125, 0.020509778, 0.020511125, 0.020536819, 0.020538125, 0.0205695, 0.020570764, 0.020599611, 0.020600917, 0.020626347, 0.020627653, 0.020655861, 0.020657181, 0.020681028, 0.020682347, 0.020705972, 0.020707194], 'source_diff': [0, 1.5000000000015001e-06, 2.262499999999834e-05, 1.3050000000000561e-06, 2.6972000000000107e-05, 1.2919999999999598e-06, 3.163899999999997e-05, 1.318999999999626e-06, 2.822300000000083e-05, 1.3050000000000561e-06, 2.8541999999999457e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.389000000000945e-06, 3.219399999999928e-05, 1.3199999999990997e-06, 3.194399999999903e-05, 1.3060000000029992e-06, 2.6972000000000107e-05, 1.318999999999626e-06, 2.29169999999973e-05, 1.3470000000022353e-06, 2.4791999999999176e-05, 1.27800000000039e-06, 3.2277000000000694e-05, 1.3059999999995298e-06, 2.4486000000000646e-05, 1.3199999999990997e-06, 2.5096999999998232e-05, 1.3050000000000561e-06, 2.6028000000000856e-05, 1.3059999999995298e-06, 2.5429999999999897e-05, 1.3059999999995298e-06, 2.7611000000000302e-05, 1.27800000000039e-06, 3.195800000000207e-05, 1.3059999999995298e-06, 2.5096999999998232e-05, 1.318999999999626e-06, 2.6042000000000426e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3050000000000561e-06, 2.57230000000018e-05, 1.318999999999626e-06, 3.0388999999998723e-05, 1.318999999999626e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 3.165299999999954e-05, 1.3059999999995298e-06, 2.4500000000000216e-05, 1.3610000000018052e-06, 2.3165999999998077e-05, 1.3059999999995298e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.9152000000001038e-05, 1.3059999999995298e-06, 2.8541999999999457e-05, 1.3050000000000561e-06, 3.133400000000092e-05, 1.318999999999626e-06, 2.54169999999998e-05, 1.2910000000004862e-06, 2.293100000000034e-05, 1.3050000000000561e-06, 2.6055999999999996e-05, 1.2919999999999598e-06, 2.6346999999999482e-05, 1.318999999999626e-06, 2.9153000000000512e-05, 1.3199999999990997e-06, 3.0402000000002288e-05, 1.3199999999990997e-06, 3.225000000000103e-05, 1.2910000000004862e-06, 2.512499999999737e-05, 1.2919999999999598e-06, 2.6346999999999482e-05, 1.3200000000025691e-06, 2.4165999999999077e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.3470000000022353e-06, 2.5693999999999717e-05, 1.3059999999995298e-06, 3.137500000000015e-05, 1.2639999999973506e-06, 2.8847000000001982e-05, 1.3059999999995298e-06, 2.5429999999999897e-05, 1.3059999999995298e-06, 2.8208000000001787e-05, 1.3199999999990997e-06, 2.384700000000045e-05, 1.318999999999626e-06, 2.362499999999934e-05, 1.2220000000021103e-06], 'eventdiff': [0, 1.5000000000015001e-06, 2.262499999999834e-05, 1.3050000000000561e-06, 2.6972000000000107e-05, 1.2919999999999598e-06, 3.163899999999997e-05, 1.318999999999626e-06, 2.822300000000083e-05, 1.3050000000000561e-06, 2.8541999999999457e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.389000000000945e-06, 3.219399999999928e-05, 1.3199999999990997e-06, 3.194399999999903e-05, 1.3060000000029992e-06, 2.6972000000000107e-05, 1.318999999999626e-06, 2.29169999999973e-05, 1.3470000000022353e-06, 2.4791999999999176e-05, 1.27800000000039e-06, 3.2277000000000694e-05, 1.3059999999995298e-06, 2.4486000000000646e-05, 1.3199999999990997e-06, 2.5096999999998232e-05, 1.3050000000000561e-06, 2.6028000000000856e-05, 1.3059999999995298e-06, 2.5429999999999897e-05, 1.3059999999995298e-06, 2.7611000000000302e-05, 1.27800000000039e-06, 3.195800000000207e-05, 1.3059999999995298e-06, 2.5096999999998232e-05, 1.318999999999626e-06, 2.6042000000000426e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3050000000000561e-06, 2.57230000000018e-05, 1.318999999999626e-06, 3.0388999999998723e-05, 1.318999999999626e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 3.165299999999954e-05, 1.3059999999995298e-06, 2.4500000000000216e-05, 1.3610000000018052e-06, 2.3165999999998077e-05, 1.3059999999995298e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.9152000000001038e-05, 1.3059999999995298e-06, 2.8541999999999457e-05, 1.3050000000000561e-06, 3.133400000000092e-05, 1.318999999999626e-06, 2.54169999999998e-05, 1.2910000000004862e-06, 2.293100000000034e-05, 1.3050000000000561e-06, 2.6055999999999996e-05, 1.2919999999999598e-06, 2.6346999999999482e-05, 1.318999999999626e-06, 2.9153000000000512e-05, 1.3199999999990997e-06, 3.0402000000002288e-05, 1.3199999999990997e-06, 3.225000000000103e-05, 1.2910000000004862e-06, 2.512499999999737e-05, 1.2919999999999598e-06, 2.6346999999999482e-05, 1.3200000000025691e-06, 2.4165999999999077e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.3470000000022353e-06, 2.5693999999999717e-05, 1.3059999999995298e-06, 3.137500000000015e-05, 1.2639999999973506e-06, 2.8847000000001982e-05, 1.3059999999995298e-06, 2.5429999999999897e-05, 1.3059999999995298e-06, 2.8208000000001787e-05, 1.3199999999990997e-06, 2.384700000000045e-05, 1.318999999999626e-06, 2.362499999999934e-05, 1.2220000000021103e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:56.832" endtime="20201030 18:29:56.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.828" endtime="20201030 18:29:56.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:56.841" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.2919999999999598e-0...</msg>
<status status="PASS" starttime="20201030 18:29:56.837" endtime="20201030 18:29:56.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:56.846" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.389000000000945e-06, 1.3199999999990997e-06, ...</msg>
<status status="PASS" starttime="20201030 18:29:56.842" endtime="20201030 18:29:56.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.851" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:56.850" endtime="20201030 18:29:56.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.854" level="INFO">VALUE: [1.5000000000015001e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.389000000000945e-06, 1.3199999999990997e-06, 1.3060000000029992e-06, 1.318999999999626e-06, 1.3470000000022353e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.2919999999999598e-06, 1.3200000000025691e-06, 1.3059999999995298e-06, 1.3470000000022353e-06, 1.3059999999995298e-06, 1.2639999999973506e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.2220000000021103e-06]</msg>
<status status="PASS" starttime="20201030 18:29:56.852" endtime="20201030 18:29:56.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.848" endtime="20201030 18:29:56.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.859" endtime="20201030 18:29:56.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.858" endtime="20201030 18:29:56.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.856" endtime="20201030 18:29:56.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.468" endtime="20201030 18:29:56.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.467" endtime="20201030 18:29:56.881"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.889" endtime="20201030 18:29:56.899"></status>
</kw>
<msg timestamp="20201030 18:29:56.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.888" endtime="20201030 18:29:56.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.902" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.900" endtime="20201030 18:29:56.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.903" endtime="20201030 18:29:56.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.885" endtime="20201030 18:29:56.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.883" endtime="20201030 18:29:56.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.912" endtime="20201030 18:29:57.197"></status>
</kw>
<msg timestamp="20201030 18:29:57.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.910" endtime="20201030 18:29:57.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.202" endtime="20201030 18:29:57.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.210" endtime="20201030 18:29:57.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.908" endtime="20201030 18:29:57.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.906" endtime="20201030 18:29:57.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:57.237" level="INFO">${debug} = {'time': [0.020181792, 0.020183306, 0.020210875, 0.020212181, 0.020243264, 0.020244583, 0.020270222, 0.020271569, 0.020302861, 0.020304181, 0.020334903, 0.020336222, 0.020361292, 0.020362597, 0.020388...</msg>
<status status="PASS" starttime="20201030 18:29:57.214" endtime="20201030 18:29:57.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.238" endtime="20201030 18:29:57.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.243" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:57.242" endtime="20201030 18:29:57.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.247" level="INFO">VALUE: {'time': [0.020181792, 0.020183306, 0.020210875, 0.020212181, 0.020243264, 0.020244583, 0.020270222, 0.020271569, 0.020302861, 0.020304181, 0.020334903, 0.020336222, 0.020361292, 0.020362597, 0.020388625, 0.020389917, 0.020412847, 0.020414139, 0.020442361, 0.020443667, 0.020468222, 0.020469444, 0.020497347, 0.020498667, 0.020524681, 0.020526083, 0.020553583, 0.020554903, 0.020584681, 0.020585972, 0.020615431, 0.02061675, 0.020645278, 0.020646611, 0.020671056, 0.020672417, 0.020695583, 0.020696889, 0.020726042, 0.020727361, 0.020753389, 0.020754681, 0.020781056, 0.020782333, 0.020809292, 0.020810639, 0.020840056, 0.020841375, 0.020869264, 0.020870569, 0.020894736, 0.020896056, 0.020924264, 0.020925597, 0.020957819, 0.020959139, 0.020990764, 0.020992069, 0.021020278, 0.021021583, 0.021048556, 0.021049861, 0.021079375, 0.021080625, 0.021103528, 0.021104833, 0.021132431, 0.021133736, 0.021158514, 0.021159833, 0.021189278, 0.021190653, 0.021222542, 0.021223847, 0.021252375, 0.021253667, 0.021278458, 0.021279764, 0.021303931, 0.021305236, 0.021330958, 0.021332319, 0.021358597, 0.021359931, 0.021390931, 0.021392236, 0.021421681, 0.021422986, 0.021452153, 0.021453458, 0.021483208, 0.021484514, 0.021509931, 0.021511236, 0.021535417, 0.021536708, 0.021559639, 0.021560931, 0.021585097, 0.021586403], 'source_diff': [0, 1.51400000000107e-06, 2.7568999999998123e-05, 1.3059999999995298e-06, 3.108300000000119e-05, 1.318999999999626e-06, 2.563900000000091e-05, 1.3469999999987659e-06, 3.129199999999874e-05, 1.3200000000025691e-06, 3.072200000000039e-05, 1.318999999999626e-06, 2.5069999999998566e-05, 1.3050000000000561e-06, 2.6028000000000856e-05, 1.2919999999999598e-06, 2.2930000000000866e-05, 1.2919999999999598e-06, 2.8221999999997888e-05, 1.3059999999995298e-06, 2.455500000000249e-05, 1.2219999999986408e-06, 2.7902999999999262e-05, 1.3200000000025691e-06, 2.6013999999997817e-05, 1.4020000000010413e-06, 2.7499999999999747e-05, 1.3199999999990997e-06, 2.9778000000001137e-05, 1.2910000000004862e-06, 2.945899999999904e-05, 1.318999999999626e-06, 2.8527999999999887e-05, 1.332999999999196e-06, 2.444500000000141e-05, 1.3609999999983358e-06, 2.3166000000001546e-05, 1.3059999999995298e-06, 2.9153000000000512e-05, 1.318999999999626e-06, 2.6028000000000856e-05, 1.2919999999999598e-06, 2.6374999999998622e-05, 1.2770000000009163e-06, 2.695900000000001e-05, 1.3469999999987659e-06, 2.9417000000000332e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3050000000000561e-06, 2.416700000000202e-05, 1.3199999999990997e-06, 2.8208000000001787e-05, 1.332999999999196e-06, 3.222199999999842e-05, 1.3200000000025691e-06, 3.162499999999693e-05, 1.3050000000000561e-06, 2.820900000000126e-05, 1.3050000000000561e-06, 2.697299999999958e-05, 1.3050000000000561e-06, 2.9514000000001317e-05, 1.2499999999977807e-06, 2.29030000000012e-05, 1.3050000000000561e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 2.4777999999999606e-05, 1.318999999999626e-06, 2.944499999999947e-05, 1.3750000000013751e-06, 3.188900000000022e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.2919999999999598e-06, 2.4790999999999702e-05, 1.3059999999995298e-06, 2.416700000000202e-05, 1.3050000000000561e-06, 2.5721999999998857e-05, 1.3609999999983358e-06, 2.6278000000001106e-05, 1.3339999999986696e-06, 3.099999999999978e-05, 1.3050000000000561e-06, 2.944500000000294e-05, 1.3050000000000561e-06, 2.9167000000000082e-05, 1.3050000000000561e-06, 2.9749999999998528e-05, 1.3059999999995298e-06, 2.54169999999998e-05, 1.3050000000000561e-06, 2.418100000000159e-05, 1.2910000000004862e-06, 2.293099999999687e-05, 1.2919999999999598e-06, 2.4166000000002547e-05, 1.3059999999995298e-06], 'eventdiff': [0, 1.51400000000107e-06, 2.7568999999998123e-05, 1.3059999999995298e-06, 3.108300000000119e-05, 1.318999999999626e-06, 2.563900000000091e-05, 1.3469999999987659e-06, 3.129199999999874e-05, 1.3200000000025691e-06, 3.072200000000039e-05, 1.318999999999626e-06, 2.5069999999998566e-05, 1.3050000000000561e-06, 2.6028000000000856e-05, 1.2919999999999598e-06, 2.2930000000000866e-05, 1.2919999999999598e-06, 2.8221999999997888e-05, 1.3059999999995298e-06, 2.455500000000249e-05, 1.2219999999986408e-06, 2.7902999999999262e-05, 1.3200000000025691e-06, 2.6013999999997817e-05, 1.4020000000010413e-06, 2.7499999999999747e-05, 1.3199999999990997e-06, 2.9778000000001137e-05, 1.2910000000004862e-06, 2.945899999999904e-05, 1.318999999999626e-06, 2.8527999999999887e-05, 1.332999999999196e-06, 2.444500000000141e-05, 1.3609999999983358e-06, 2.3166000000001546e-05, 1.3059999999995298e-06, 2.9153000000000512e-05, 1.318999999999626e-06, 2.6028000000000856e-05, 1.2919999999999598e-06, 2.6374999999998622e-05, 1.2770000000009163e-06, 2.695900000000001e-05, 1.3469999999987659e-06, 2.9417000000000332e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3050000000000561e-06, 2.416700000000202e-05, 1.3199999999990997e-06, 2.8208000000001787e-05, 1.332999999999196e-06, 3.222199999999842e-05, 1.3200000000025691e-06, 3.162499999999693e-05, 1.3050000000000561e-06, 2.820900000000126e-05, 1.3050000000000561e-06, 2.697299999999958e-05, 1.3050000000000561e-06, 2.9514000000001317e-05, 1.2499999999977807e-06, 2.29030000000012e-05, 1.3050000000000561e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 2.4777999999999606e-05, 1.318999999999626e-06, 2.944499999999947e-05, 1.3750000000013751e-06, 3.188900000000022e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.2919999999999598e-06, 2.4790999999999702e-05, 1.3059999999995298e-06, 2.416700000000202e-05, 1.3050000000000561e-06, 2.5721999999998857e-05, 1.3609999999983358e-06, 2.6278000000001106e-05, 1.3339999999986696e-06, 3.099999999999978e-05, 1.3050000000000561e-06, 2.944500000000294e-05, 1.3050000000000561e-06, 2.9167000000000082e-05, 1.3050000000000561e-06, 2.9749999999998528e-05, 1.3059999999995298e-06, 2.54169999999998e-05, 1.3050000000000561e-06, 2.418100000000159e-05, 1.2910000000004862e-06, 2.293099999999687e-05, 1.2919999999999598e-06, 2.4166000000002547e-05, 1.3059999999995298e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:57.244" endtime="20201030 18:29:57.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.240" endtime="20201030 18:29:57.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.252" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3469999999987659e-06}, {'diff': 1.3200000000025691e-06}, {'diff': 1.318999999999626e-06},...</msg>
<status status="PASS" starttime="20201030 18:29:57.249" endtime="20201030 18:29:57.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:57.256" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.51400000000107e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3469999999987659e-06, 1.3200000000025691e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:29:57.253" endtime="20201030 18:29:57.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.261" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:57.260" endtime="20201030 18:29:57.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.264" level="INFO">VALUE: [1.51400000000107e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3469999999987659e-06, 1.3200000000025691e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.2219999999986408e-06, 1.3200000000025691e-06, 1.4020000000010413e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.318999999999626e-06, 1.332999999999196e-06, 1.3609999999983358e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.2770000000009163e-06, 1.3469999999987659e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.332999999999196e-06, 1.3200000000025691e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2499999999977807e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3750000000013751e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3609999999983358e-06, 1.3339999999986696e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.2919999999999598e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201030 18:29:57.262" endtime="20201030 18:29:57.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.257" endtime="20201030 18:29:57.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.268" endtime="20201030 18:29:57.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.267" endtime="20201030 18:29:57.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.266" endtime="20201030 18:29:57.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.882" endtime="20201030 18:29:57.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.881" endtime="20201030 18:29:57.289"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.296" endtime="20201030 18:29:57.306"></status>
</kw>
<msg timestamp="20201030 18:29:57.306" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.295" endtime="20201030 18:29:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.307" endtime="20201030 18:29:57.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.310" endtime="20201030 18:29:57.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.293" endtime="20201030 18:29:57.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.291" endtime="20201030 18:29:57.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.319" endtime="20201030 18:29:57.605"></status>
</kw>
<msg timestamp="20201030 18:29:57.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018395597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.317" endtime="20201030 18:29:57.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018395597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.609" endtime="20201030 18:29:57.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.618" endtime="20201030 18:29:57.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.315" endtime="20201030 18:29:57.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.313" endtime="20201030 18:29:57.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:57.645" level="INFO">${debug} = {'time': [0.018395597, 0.018397069, 0.018422181, 0.018423486, 0.018451694, 0.018453, 0.018477181, 0.018478472, 0.018503306, 0.018504583, 0.018529361, 0.018530667, 0.018556389, 0.018557708, 0.018581236...</msg>
<status status="PASS" starttime="20201030 18:29:57.621" endtime="20201030 18:29:57.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.646" endtime="20201030 18:29:57.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.651" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:57.650" endtime="20201030 18:29:57.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.655" level="INFO">VALUE: {'time': [0.018395597, 0.018397069, 0.018422181, 0.018423486, 0.018451694, 0.018453, 0.018477181, 0.018478472, 0.018503306, 0.018504583, 0.018529361, 0.018530667, 0.018556389, 0.018557708, 0.018581236, 0.018582556, 0.018607958, 0.018609264, 0.018641528, 0.018642847, 0.018668278, 0.018669556, 0.018693431, 0.01869475, 0.018726375, 0.018727681, 0.018754014, 0.018755319, 0.018781681, 0.018782986, 0.018807167, 0.018808458, 0.018839167, 0.018840486, 0.018868375, 0.018869694, 0.018899778, 0.018901083, 0.018929319, 0.018930625, 0.018958819, 0.018960139, 0.018989597, 0.018990917, 0.019021625, 0.019022931, 0.019053681, 0.019054944, 0.019086875, 0.019088208, 0.019119208, 0.019120514, 0.019145625, 0.019146931, 0.019178889, 0.019180208, 0.019207792, 0.019209097, 0.019232319, 0.019233653, 0.019260931, 0.019262236, 0.019293611, 0.019294875, 0.019322139, 0.019323458, 0.019354792, 0.019356083, 0.019383681, 0.019384986, 0.019411958, 0.019413264, 0.019443653, 0.019444972, 0.019475681, 0.019476986, 0.019500528, 0.019501833, 0.019530056, 0.019531361, 0.019561444, 0.019562778, 0.019586, 0.019587292, 0.019616153, 0.019617444, 0.019649708, 0.019651028, 0.019674583, 0.019675875, 0.019700667, 0.019701972, 0.019725222, 0.019726528, 0.019750986, 0.019752306, 0.019776792, 0.019778083, 0.019805375, 0.019806722], 'source_diff': [0, 1.4719999999988909e-06, 2.5112000000000745e-05, 1.3050000000000561e-06, 2.8208000000001787e-05, 1.3059999999995298e-06, 2.418099999999812e-05, 1.2910000000004862e-06, 2.4834000000001355e-05, 1.2770000000009163e-06, 2.4777999999999606e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.318999999999626e-06, 2.3528000000001825e-05, 1.3199999999990997e-06, 2.5402000000000757e-05, 1.3059999999995298e-06, 3.22640000000006e-05, 1.318999999999626e-06, 2.543099999999937e-05, 1.27800000000039e-06, 2.387499999999959e-05, 1.318999999999626e-06, 3.16250000000004e-05, 1.3059999999995298e-06, 2.6332999999999912e-05, 1.3050000000000561e-06, 2.6362000000001995e-05, 1.3050000000000561e-06, 2.418099999999812e-05, 1.2910000000004862e-06, 3.070900000000029e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.318999999999626e-06, 3.0083999999999667e-05, 1.3050000000000561e-06, 2.8236000000000927e-05, 1.3059999999995298e-06, 2.8193999999998748e-05, 1.3200000000025691e-06, 2.9457999999999568e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3059999999995298e-06, 3.074999999999953e-05, 1.2630000000013464e-06, 3.193099999999893e-05, 1.332999999999196e-06, 3.099999999999978e-05, 1.3060000000029992e-06, 2.5110999999997802e-05, 1.3059999999995298e-06, 3.195800000000207e-05, 1.318999999999626e-06, 2.7584000000000636e-05, 1.3050000000000561e-06, 2.3221999999999826e-05, 1.3339999999986696e-06, 2.7277999999998637e-05, 1.3050000000000561e-06, 3.137500000000015e-05, 1.26400000000082e-06, 2.7263999999999067e-05, 1.3190000000030955e-06, 3.133399999999745e-05, 1.2910000000004862e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 3.0389000000002192e-05, 1.318999999999626e-06, 3.070900000000029e-05, 1.3050000000000561e-06, 2.3541999999997926e-05, 1.3050000000000561e-06, 2.822300000000083e-05, 1.3050000000000561e-06, 3.0083000000000193e-05, 1.3339999999986696e-06, 2.3221999999999826e-05, 1.2919999999999598e-06, 2.8861000000001552e-05, 1.2910000000004862e-06, 3.226399999999713e-05, 1.3200000000025691e-06, 2.3554999999998022e-05, 1.2919999999999598e-06, 2.4792000000002645e-05, 1.3050000000000561e-06, 2.3249999999998966e-05, 1.3059999999995298e-06, 2.4458000000001506e-05, 1.3199999999990997e-06, 2.4486000000000646e-05, 1.2909999999970168e-06, 2.7292000000001676e-05, 1.3469999999987659e-06], 'eventdiff': [0, 1.4719999999988909e-06, 2.5112000000000745e-05, 1.3050000000000561e-06, 2.8208000000001787e-05, 1.3059999999995298e-06, 2.418099999999812e-05, 1.2910000000004862e-06, 2.4834000000001355e-05, 1.2770000000009163e-06, 2.4777999999999606e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.318999999999626e-06, 2.3528000000001825e-05, 1.3199999999990997e-06, 2.5402000000000757e-05, 1.3059999999995298e-06, 3.22640000000006e-05, 1.318999999999626e-06, 2.543099999999937e-05, 1.27800000000039e-06, 2.387499999999959e-05, 1.318999999999626e-06, 3.16250000000004e-05, 1.3059999999995298e-06, 2.6332999999999912e-05, 1.3050000000000561e-06, 2.6362000000001995e-05, 1.3050000000000561e-06, 2.418099999999812e-05, 1.2910000000004862e-06, 3.070900000000029e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.318999999999626e-06, 3.0083999999999667e-05, 1.3050000000000561e-06, 2.8236000000000927e-05, 1.3059999999995298e-06, 2.8193999999998748e-05, 1.3200000000025691e-06, 2.9457999999999568e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3059999999995298e-06, 3.074999999999953e-05, 1.2630000000013464e-06, 3.193099999999893e-05, 1.332999999999196e-06, 3.099999999999978e-05, 1.3060000000029992e-06, 2.5110999999997802e-05, 1.3059999999995298e-06, 3.195800000000207e-05, 1.318999999999626e-06, 2.7584000000000636e-05, 1.3050000000000561e-06, 2.3221999999999826e-05, 1.3339999999986696e-06, 2.7277999999998637e-05, 1.3050000000000561e-06, 3.137500000000015e-05, 1.26400000000082e-06, 2.7263999999999067e-05, 1.3190000000030955e-06, 3.133399999999745e-05, 1.2910000000004862e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 3.0389000000002192e-05, 1.318999999999626e-06, 3.070900000000029e-05, 1.3050000000000561e-06, 2.3541999999997926e-05, 1.3050000000000561e-06, 2.822300000000083e-05, 1.3050000000000561e-06, 3.0083000000000193e-05, 1.3339999999986696e-06, 2.3221999999999826e-05, 1.2919999999999598e-06, 2.8861000000001552e-05, 1.2910000000004862e-06, 3.226399999999713e-05, 1.3200000000025691e-06, 2.3554999999998022e-05, 1.2919999999999598e-06, 2.4792000000002645e-05, 1.3050000000000561e-06, 2.3249999999998966e-05, 1.3059999999995298e-06, 2.4458000000001506e-05, 1.3199999999990997e-06, 2.4486000000000646e-05, 1.2909999999970168e-06, 2.7292000000001676e-05, 1.3469999999987659e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:29:57.652" endtime="20201030 18:29:57.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.648" endtime="20201030 18:29:57.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.661" level="INFO">${RESULT} = [{'diff': 1.4719999999988909e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.2910000000004862e-06}, {'diff': 1.2770000000009163e-06}, {'diff': 1.3059999999995298e-...</msg>
<status status="PASS" starttime="20201030 18:29:57.658" endtime="20201030 18:29:57.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:57.665" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4719999999988909e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.2910000000004862e-06, 1.2770000000009163e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3199999999990997e-06,...</msg>
<status status="PASS" starttime="20201030 18:29:57.662" endtime="20201030 18:29:57.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.669" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:57.668" endtime="20201030 18:29:57.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.671" level="INFO">VALUE: [1.4719999999988909e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.2910000000004862e-06, 1.2770000000009163e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.27800000000039e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3200000000025691e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.2630000000013464e-06, 1.332999999999196e-06, 1.3060000000029992e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3339999999986696e-06, 1.3050000000000561e-06, 1.26400000000082e-06, 1.3190000000030955e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3339999999986696e-06, 1.2919999999999598e-06, 1.2910000000004862e-06, 1.3200000000025691e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.2909999999970168e-06, 1.3469999999987659e-06]</msg>
<status status="PASS" starttime="20201030 18:29:57.670" endtime="20201030 18:29:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.666" endtime="20201030 18:29:57.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.676" endtime="20201030 18:29:57.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.674" endtime="20201030 18:29:57.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.673" endtime="20201030 18:29:57.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.290" endtime="20201030 18:29:57.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.289" endtime="20201030 18:29:57.696"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.705" endtime="20201030 18:29:57.714"></status>
</kw>
<msg timestamp="20201030 18:29:57.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.703" endtime="20201030 18:29:57.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.717" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.716" endtime="20201030 18:29:57.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.718" endtime="20201030 18:29:57.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.700" endtime="20201030 18:29:57.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.698" endtime="20201030 18:29:57.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.727" endtime="20201030 18:29:58.012"></status>
</kw>
<msg timestamp="20201030 18:29:58.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019225139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019226639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.726" endtime="20201030 18:29:58.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019225139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019226639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.016" endtime="20201030 18:29:58.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.025" endtime="20201030 18:29:58.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.723" endtime="20201030 18:29:58.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.722" endtime="20201030 18:29:58.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:58.051" level="INFO">${debug} = {'time': [0.019225139, 0.019226639, 0.019258903, 0.019260222, 0.019291292, 0.019292528, 0.019321069, 0.019322361, 0.019349014, 0.019350333, 0.019373556, 0.019374861, 0.019401833, 0.019403139, 0.019426...</msg>
<status status="PASS" starttime="20201030 18:29:58.028" endtime="20201030 18:29:58.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.052" endtime="20201030 18:29:58.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.057" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:58.056" endtime="20201030 18:29:58.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.062" level="INFO">VALUE: {'time': [0.019225139, 0.019226639, 0.019258903, 0.019260222, 0.019291292, 0.019292528, 0.019321069, 0.019322361, 0.019349014, 0.019350333, 0.019373556, 0.019374861, 0.019401833, 0.019403139, 0.019426681, 0.019427986, 0.019454347, 0.019455667, 0.019479514, 0.019480806, 0.019509333, 0.019510653, 0.019533875, 0.019535181, 0.019561833, 0.019563153, 0.019592931, 0.019594222, 0.019626472, 0.019627792, 0.019651694, 0.019652944, 0.019677431, 0.01967875, 0.019706014, 0.019707319, 0.019734917, 0.019736222, 0.019763514, 0.019764847, 0.01979675, 0.019798083, 0.019828458, 0.019829764, 0.019854236, 0.019855556, 0.019884708, 0.019886, 0.019909861, 0.019911167, 0.019936569, 0.019937889, 0.019968597, 0.019969903, 0.020001861, 0.020003167, 0.020026708, 0.020028, 0.020053417, 0.020054736, 0.020086667, 0.020087972, 0.020110889, 0.020112208, 0.020139819, 0.020141097, 0.020164333, 0.020165653, 0.020188264, 0.020189583, 0.020213111, 0.020214417, 0.020244194, 0.020245514, 0.020275889, 0.020277194, 0.020307903, 0.020309208, 0.020335875, 0.020337208, 0.020369444, 0.020370764, 0.020397097, 0.020398444, 0.020430667, 0.020431986, 0.020454597, 0.020455903, 0.02047975, 0.020481069, 0.020504292, 0.020505597, 0.020528208, 0.020529514, 0.020560847, 0.020562153, 0.020585389, 0.020586694, 0.020614597, 0.020615944], 'source_diff': [0, 1.5000000000015001e-06, 3.22640000000006e-05, 1.318999999999626e-06, 3.10700000000011e-05, 1.2359999999982108e-06, 2.8540999999999983e-05, 1.2919999999999598e-06, 2.665300000000148e-05, 1.318999999999626e-06, 2.32229999999993e-05, 1.3050000000000561e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 2.3542000000001395e-05, 1.3050000000000561e-06, 2.6360999999999052e-05, 1.3199999999990997e-06, 2.384700000000045e-05, 1.2919999999999598e-06, 2.8527000000000413e-05, 1.3199999999990997e-06, 2.3221999999999826e-05, 1.3059999999995298e-06, 2.6652000000002007e-05, 1.3199999999990997e-06, 2.9778000000001137e-05, 1.2910000000004862e-06, 3.224999999999756e-05, 1.3200000000025691e-06, 2.3901999999999257e-05, 1.2499999999977807e-06, 2.448700000000012e-05, 1.318999999999626e-06, 2.7264000000002536e-05, 1.3050000000000561e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 2.7291999999998207e-05, 1.332999999999196e-06, 3.190299999999979e-05, 1.3330000000026654e-06, 3.0374999999999153e-05, 1.3059999999995298e-06, 2.4472000000001076e-05, 1.3199999999990997e-06, 2.9152000000001038e-05, 1.2919999999999598e-06, 2.386100000000002e-05, 1.3059999999995298e-06, 2.5402000000000757e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3059999999995298e-06, 3.19579999999986e-05, 1.3059999999995298e-06, 2.354100000000192e-05, 1.2919999999999598e-06, 2.54169999999998e-05, 1.318999999999626e-06, 3.193099999999893e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.318999999999626e-06, 2.7611000000000302e-05, 1.27800000000039e-06, 2.3235999999999396e-05, 1.3199999999990997e-06, 2.261100000000224e-05, 1.318999999999626e-06, 2.3527999999998356e-05, 1.3059999999995298e-06, 2.9777000000001663e-05, 1.3199999999990997e-06, 3.0374999999999153e-05, 1.3050000000000561e-06, 3.070900000000029e-05, 1.3050000000000561e-06, 2.666700000000105e-05, 1.332999999999196e-06, 3.223600000000146e-05, 1.3199999999990997e-06, 2.6332999999999912e-05, 1.3470000000022353e-06, 3.222299999999789e-05, 1.318999999999626e-06, 2.261100000000224e-05, 1.3059999999995298e-06, 2.384700000000045e-05, 1.318999999999626e-06, 2.32229999999993e-05, 1.3050000000000561e-06, 2.261099999999877e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.3235999999999396e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3470000000022353e-06], 'eventdiff': [0, 1.5000000000015001e-06, 3.22640000000006e-05, 1.318999999999626e-06, 3.10700000000011e-05, 1.2359999999982108e-06, 2.8540999999999983e-05, 1.2919999999999598e-06, 2.665300000000148e-05, 1.318999999999626e-06, 2.32229999999993e-05, 1.3050000000000561e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 2.3542000000001395e-05, 1.3050000000000561e-06, 2.6360999999999052e-05, 1.3199999999990997e-06, 2.384700000000045e-05, 1.2919999999999598e-06, 2.8527000000000413e-05, 1.3199999999990997e-06, 2.3221999999999826e-05, 1.3059999999995298e-06, 2.6652000000002007e-05, 1.3199999999990997e-06, 2.9778000000001137e-05, 1.2910000000004862e-06, 3.224999999999756e-05, 1.3200000000025691e-06, 2.3901999999999257e-05, 1.2499999999977807e-06, 2.448700000000012e-05, 1.318999999999626e-06, 2.7264000000002536e-05, 1.3050000000000561e-06, 2.7598000000000206e-05, 1.3050000000000561e-06, 2.7291999999998207e-05, 1.332999999999196e-06, 3.190299999999979e-05, 1.3330000000026654e-06, 3.0374999999999153e-05, 1.3059999999995298e-06, 2.4472000000001076e-05, 1.3199999999990997e-06, 2.9152000000001038e-05, 1.2919999999999598e-06, 2.386100000000002e-05, 1.3059999999995298e-06, 2.5402000000000757e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3059999999995298e-06, 3.19579999999986e-05, 1.3059999999995298e-06, 2.354100000000192e-05, 1.2919999999999598e-06, 2.54169999999998e-05, 1.318999999999626e-06, 3.193099999999893e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.318999999999626e-06, 2.7611000000000302e-05, 1.27800000000039e-06, 2.3235999999999396e-05, 1.3199999999990997e-06, 2.261100000000224e-05, 1.318999999999626e-06, 2.3527999999998356e-05, 1.3059999999995298e-06, 2.9777000000001663e-05, 1.3199999999990997e-06, 3.0374999999999153e-05, 1.3050000000000561e-06, 3.070900000000029e-05, 1.3050000000000561e-06, 2.666700000000105e-05, 1.332999999999196e-06, 3.223600000000146e-05, 1.3199999999990997e-06, 2.6332999999999912e-05, 1.3470000000022353e-06, 3.222299999999789e-05, 1.318999999999626e-06, 2.261100000000224e-05, 1.3059999999995298e-06, 2.384700000000045e-05, 1.318999999999626e-06, 2.32229999999993e-05, 1.3050000000000561e-06, 2.261099999999877e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.3235999999999396e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3470000000022353e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:58.059" endtime="20201030 18:29:58.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.054" endtime="20201030 18:29:58.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.069" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.2359999999982108e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3050000000000561e-06...</msg>
<status status="PASS" starttime="20201030 18:29:58.065" endtime="20201030 18:29:58.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:58.074" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.318999999999626e-06, 1.2359999999982108e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, ...</msg>
<status status="PASS" starttime="20201030 18:29:58.070" endtime="20201030 18:29:58.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.079" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:58.078" endtime="20201030 18:29:58.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.082" level="INFO">VALUE: [1.5000000000015001e-06, 1.318999999999626e-06, 1.2359999999982108e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.3200000000025691e-06, 1.2499999999977807e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.332999999999196e-06, 1.3330000000026654e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.27800000000039e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.332999999999196e-06, 1.3199999999990997e-06, 1.3470000000022353e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3470000000022353e-06]</msg>
<status status="PASS" starttime="20201030 18:29:58.080" endtime="20201030 18:29:58.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.075" endtime="20201030 18:29:58.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.088" endtime="20201030 18:29:58.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.086" endtime="20201030 18:29:58.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.084" endtime="20201030 18:29:58.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.697" endtime="20201030 18:29:58.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.697" endtime="20201030 18:29:58.109"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.117" endtime="20201030 18:29:58.126"></status>
</kw>
<msg timestamp="20201030 18:29:58.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.115" endtime="20201030 18:29:58.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.129" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.128" endtime="20201030 18:29:58.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.130" endtime="20201030 18:29:58.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.113" endtime="20201030 18:29:58.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.111" endtime="20201030 18:29:58.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.139" endtime="20201030 18:29:58.425"></status>
</kw>
<msg timestamp="20201030 18:29:58.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018642694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.137" endtime="20201030 18:29:58.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018642694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.430" endtime="20201030 18:29:58.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.438" endtime="20201030 18:29:58.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.135" endtime="20201030 18:29:58.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.133" endtime="20201030 18:29:58.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:58.465" level="INFO">${debug} = {'time': [0.018642694, 0.018644125, 0.018674208, 0.018675528, 0.018707472, 0.018708792, 0.018741056, 0.018742375, 0.018772125, 0.018773444, 0.018803542, 0.018804833, 0.018828375, 0.01882975, 0.0188544...</msg>
<status status="PASS" starttime="20201030 18:29:58.442" endtime="20201030 18:29:58.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.466" endtime="20201030 18:29:58.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.471" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:58.470" endtime="20201030 18:29:58.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.475" level="INFO">VALUE: {'time': [0.018642694, 0.018644125, 0.018674208, 0.018675528, 0.018707472, 0.018708792, 0.018741056, 0.018742375, 0.018772125, 0.018773444, 0.018803542, 0.018804833, 0.018828375, 0.01882975, 0.018854486, 0.018855792, 0.018887444, 0.018888736, 0.018915069, 0.018916375, 0.018948347, 0.018949653, 0.018976653, 0.018977917, 0.019006764, 0.019008097, 0.019040028, 0.019041319, 0.019067694, 0.019069, 0.019093444, 0.01909475, 0.019119861, 0.019121167, 0.019147194, 0.0191485, 0.019175806, 0.019177111, 0.019205639, 0.019206944, 0.019237958, 0.01923925, 0.019269958, 0.019271278, 0.019294806, 0.019296139, 0.019326861, 0.019328181, 0.019358208, 0.019359528, 0.019385861, 0.019387194, 0.019414764, 0.019416069, 0.019444917, 0.019446222, 0.019469764, 0.019471069, 0.019502389, 0.019503708, 0.019534403, 0.019535722, 0.019559889, 0.019561194, 0.019589097, 0.019590417, 0.019616125, 0.019617431, 0.019642847, 0.019644153, 0.019668319, 0.019669667, 0.019699708, 0.019701042, 0.019726125, 0.019727444, 0.019755333, 0.019756653, 0.019787361, 0.019788722, 0.0198175, 0.019818806, 0.019842986, 0.019844292, 0.019870931, 0.01987225, 0.019899222, 0.019900528, 0.019923125, 0.019924431, 0.019955764, 0.019957083, 0.019987472, 0.019988778, 0.020014194, 0.0200155, 0.020039361, 0.020040708, 0.020071681, 0.020073028], 'source_diff': [0, 1.4309999999996548e-06, 3.0083000000000193e-05, 1.3199999999990997e-06, 3.194399999999903e-05, 1.3199999999990997e-06, 3.22640000000006e-05, 1.318999999999626e-06, 2.9750000000001997e-05, 1.318999999999626e-06, 3.0097999999999236e-05, 1.2910000000004862e-06, 2.3542000000001395e-05, 1.3749999999979057e-06, 2.4736000000000896e-05, 1.3059999999995298e-06, 3.165200000000007e-05, 1.2919999999999598e-06, 2.6332999999999912e-05, 1.3059999999995298e-06, 3.197200000000164e-05, 1.3059999999995298e-06, 2.6999999999999247e-05, 1.26400000000082e-06, 2.8846999999998513e-05, 1.3330000000026654e-06, 3.193099999999893e-05, 1.2910000000004862e-06, 2.6374999999998622e-05, 1.3059999999995298e-06, 2.4444000000001936e-05, 1.3059999999995298e-06, 2.5110999999997802e-05, 1.3060000000029992e-06, 2.6026999999997913e-05, 1.3059999999995298e-06, 2.7306000000001246e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3050000000000561e-06, 3.101399999999935e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.3528000000001825e-05, 1.332999999999196e-06, 3.072200000000039e-05, 1.3199999999990997e-06, 3.0026999999998444e-05, 1.3200000000025691e-06, 2.6332999999999912e-05, 1.332999999999196e-06, 2.7570000000001066e-05, 1.3050000000000561e-06, 2.8847999999997986e-05, 1.3050000000000561e-06, 2.3542000000001395e-05, 1.3050000000000561e-06, 3.131999999999788e-05, 1.3190000000030955e-06, 3.069499999999725e-05, 1.318999999999626e-06, 2.416700000000202e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3199999999990997e-06, 2.5708000000002756e-05, 1.3059999999995298e-06, 2.5416000000000327e-05, 1.3059999999995298e-06, 2.4165999999999077e-05, 1.3479999999982395e-06, 3.0041000000001483e-05, 1.3339999999986696e-06, 2.508300000000213e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3610000000018052e-06, 2.8777999999996667e-05, 1.3060000000029992e-06, 2.4179999999998647e-05, 1.3059999999995298e-06, 2.663900000000191e-05, 1.318999999999626e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 2.25969999999992e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.318999999999626e-06, 3.0388999999998723e-05, 1.3059999999995298e-06, 2.5416000000000327e-05, 1.3059999999995298e-06, 2.386100000000002e-05, 1.3470000000022353e-06, 3.097300000000011e-05, 1.3469999999987659e-06], 'eventdiff': [0, 1.4309999999996548e-06, 3.0083000000000193e-05, 1.3199999999990997e-06, 3.194399999999903e-05, 1.3199999999990997e-06, 3.22640000000006e-05, 1.318999999999626e-06, 2.9750000000001997e-05, 1.318999999999626e-06, 3.0097999999999236e-05, 1.2910000000004862e-06, 2.3542000000001395e-05, 1.3749999999979057e-06, 2.4736000000000896e-05, 1.3059999999995298e-06, 3.165200000000007e-05, 1.2919999999999598e-06, 2.6332999999999912e-05, 1.3059999999995298e-06, 3.197200000000164e-05, 1.3059999999995298e-06, 2.6999999999999247e-05, 1.26400000000082e-06, 2.8846999999998513e-05, 1.3330000000026654e-06, 3.193099999999893e-05, 1.2910000000004862e-06, 2.6374999999998622e-05, 1.3059999999995298e-06, 2.4444000000001936e-05, 1.3059999999995298e-06, 2.5110999999997802e-05, 1.3060000000029992e-06, 2.6026999999997913e-05, 1.3059999999995298e-06, 2.7306000000001246e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3050000000000561e-06, 3.101399999999935e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.3528000000001825e-05, 1.332999999999196e-06, 3.072200000000039e-05, 1.3199999999990997e-06, 3.0026999999998444e-05, 1.3200000000025691e-06, 2.6332999999999912e-05, 1.332999999999196e-06, 2.7570000000001066e-05, 1.3050000000000561e-06, 2.8847999999997986e-05, 1.3050000000000561e-06, 2.3542000000001395e-05, 1.3050000000000561e-06, 3.131999999999788e-05, 1.3190000000030955e-06, 3.069499999999725e-05, 1.318999999999626e-06, 2.416700000000202e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3199999999990997e-06, 2.5708000000002756e-05, 1.3059999999995298e-06, 2.5416000000000327e-05, 1.3059999999995298e-06, 2.4165999999999077e-05, 1.3479999999982395e-06, 3.0041000000001483e-05, 1.3339999999986696e-06, 2.508300000000213e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3610000000018052e-06, 2.8777999999996667e-05, 1.3060000000029992e-06, 2.4179999999998647e-05, 1.3059999999995298e-06, 2.663900000000191e-05, 1.318999999999626e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 2.25969999999992e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.318999999999626e-06, 3.0388999999998723e-05, 1.3059999999995298e-06, 2.5416000000000327e-05, 1.3059999999995298e-06, 2.386100000000002e-05, 1.3470000000022353e-06, 3.097300000000011e-05, 1.3469999999987659e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:58.472" endtime="20201030 18:29:58.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.468" endtime="20201030 18:29:58.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.481" level="INFO">${RESULT} = [{'diff': 1.4309999999996548e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.2910000000004862e-06...</msg>
<status status="PASS" starttime="20201030 18:29:58.478" endtime="20201030 18:29:58.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:58.485" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4309999999996548e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.3749999999979057e-06, 1.3059999999995298e-06, ...</msg>
<status status="PASS" starttime="20201030 18:29:58.482" endtime="20201030 18:29:58.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:58.488" endtime="20201030 18:29:58.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.492" level="INFO">VALUE: [1.4309999999996548e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.3749999999979057e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.26400000000082e-06, 1.3330000000026654e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3060000000029992e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.332999999999196e-06, 1.3199999999990997e-06, 1.3200000000025691e-06, 1.332999999999196e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3190000000030955e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3479999999982395e-06, 1.3339999999986696e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.3610000000018052e-06, 1.3060000000029992e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3470000000022353e-06, 1.3469999999987659e-06]</msg>
<status status="PASS" starttime="20201030 18:29:58.491" endtime="20201030 18:29:58.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.486" endtime="20201030 18:29:58.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.497" endtime="20201030 18:29:58.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.495" endtime="20201030 18:29:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.494" endtime="20201030 18:29:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.110" endtime="20201030 18:29:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.109" endtime="20201030 18:29:58.517"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.526" endtime="20201030 18:29:58.535"></status>
</kw>
<msg timestamp="20201030 18:29:58.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.524" endtime="20201030 18:29:58.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.537" endtime="20201030 18:29:58.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.539" endtime="20201030 18:29:58.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.521" endtime="20201030 18:29:58.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.519" endtime="20201030 18:29:58.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.548" endtime="20201030 18:29:58.834"></status>
</kw>
<msg timestamp="20201030 18:29:58.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.547" endtime="20201030 18:29:58.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.838" endtime="20201030 18:29:58.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.847" endtime="20201030 18:29:58.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.544" endtime="20201030 18:29:58.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.543" endtime="20201030 18:29:58.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:58.877" level="INFO">${debug} = {'time': [0.019344014, 0.019345514, 0.019368111, 0.019369431, 0.019401694, 0.019402986, 0.019430597, 0.019431889, 0.019458861, 0.019460181, 0.019483722, 0.019485056, 0.019516042, 0.019517347, 0.019546...</msg>
<status status="PASS" starttime="20201030 18:29:58.852" endtime="20201030 18:29:58.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.878" endtime="20201030 18:29:58.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.883" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:58.882" endtime="20201030 18:29:58.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.887" level="INFO">VALUE: {'time': [0.019344014, 0.019345514, 0.019368111, 0.019369431, 0.019401694, 0.019402986, 0.019430597, 0.019431889, 0.019458861, 0.019460181, 0.019483722, 0.019485056, 0.019516042, 0.019517347, 0.019546819, 0.019548111, 0.019579139, 0.019580444, 0.019609903, 0.019611208, 0.019636361, 0.019637625, 0.019663958, 0.019665292, 0.019687944, 0.019689208, 0.019714931, 0.019716222, 0.0197435, 0.019744819, 0.019773333, 0.019774667, 0.019802236, 0.019803556, 0.019831139, 0.019832444, 0.019855361, 0.019856681, 0.019882083, 0.019883389, 0.01990975, 0.019911056, 0.019936472, 0.019937778, 0.019962917, 0.019964194, 0.019989583, 0.019990903, 0.020020667, 0.020021986, 0.020052375, 0.020053681, 0.020081292, 0.020082597, 0.020105194, 0.0201065, 0.020135028, 0.020136347, 0.020160806, 0.020162111, 0.020192819, 0.020194139, 0.020222958, 0.020224292, 0.020256528, 0.020257889, 0.020286986, 0.020288292, 0.020319625, 0.020320931, 0.020346028, 0.020347347, 0.020371819, 0.020373125, 0.020397306, 0.020398597, 0.020423069, 0.020424417, 0.020448542, 0.020449875, 0.020476542, 0.020477819, 0.020510083, 0.020511403, 0.020541181, 0.0205425, 0.020572569, 0.020573875, 0.020598972, 0.020600278, 0.02063225, 0.020633542, 0.020662069, 0.020663375, 0.020688819, 0.020690111, 0.020713028, 0.020714347, 0.020742861, 0.020744167], 'source_diff': [0, 1.5000000000015001e-06, 2.25969999999992e-05, 1.3199999999990997e-06, 3.2263000000001124e-05, 1.2919999999999598e-06, 2.7611000000000302e-05, 1.2919999999999598e-06, 2.6972000000000107e-05, 1.3199999999990997e-06, 2.3540999999998452e-05, 1.334000000002139e-06, 3.098600000000021e-05, 1.3050000000000561e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 3.102799999999892e-05, 1.3050000000000561e-06, 2.945900000000251e-05, 1.3050000000000561e-06, 2.515299999999998e-05, 1.2639999999973506e-06, 2.6332999999999912e-05, 1.334000000002139e-06, 2.2651999999998007e-05, 1.26400000000082e-06, 2.57230000000018e-05, 1.2909999999970168e-06, 2.7278000000002106e-05, 1.318999999999626e-06, 2.8514000000000317e-05, 1.3339999999986696e-06, 2.7569000000001592e-05, 1.3199999999990997e-06, 2.7583000000001162e-05, 1.3050000000000561e-06, 2.29169999999973e-05, 1.3200000000025691e-06, 2.5401999999997288e-05, 1.3060000000029992e-06, 2.6360999999999052e-05, 1.3059999999995298e-06, 2.5416000000000327e-05, 1.3059999999995298e-06, 2.513900000000041e-05, 1.2770000000009163e-06, 2.538899999999719e-05, 1.3200000000025691e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 3.0389000000002192e-05, 1.3059999999995298e-06, 2.7611000000000302e-05, 1.3050000000000561e-06, 2.25969999999992e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.318999999999626e-06, 2.445900000000098e-05, 1.3050000000000561e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.8818999999999373e-05, 1.334000000002139e-06, 3.223599999999799e-05, 1.3610000000018052e-06, 2.9096999999998763e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.5096999999998232e-05, 1.318999999999626e-06, 2.4472000000001076e-05, 1.3059999999995298e-06, 2.418100000000159e-05, 1.2910000000004862e-06, 2.4471999999997607e-05, 1.348000000001709e-06, 2.412499999999984e-05, 1.332999999999196e-06, 2.666700000000105e-05, 1.2770000000009163e-06, 3.226399999999713e-05, 1.3200000000025691e-06, 2.9777999999997667e-05, 1.3190000000030955e-06, 3.0068999999997154e-05, 1.3059999999995298e-06, 2.50970000000017e-05, 1.3059999999995298e-06, 3.197200000000164e-05, 1.2919999999999598e-06, 2.8527000000000413e-05, 1.3059999999995298e-06, 2.5443999999999467e-05, 1.2919999999999598e-06, 2.291700000000077e-05, 1.318999999999626e-06, 2.8514000000000317e-05, 1.3059999999995298e-06], 'eventdiff': [0, 1.5000000000015001e-06, 2.25969999999992e-05, 1.3199999999990997e-06, 3.2263000000001124e-05, 1.2919999999999598e-06, 2.7611000000000302e-05, 1.2919999999999598e-06, 2.6972000000000107e-05, 1.3199999999990997e-06, 2.3540999999998452e-05, 1.334000000002139e-06, 3.098600000000021e-05, 1.3050000000000561e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 3.102799999999892e-05, 1.3050000000000561e-06, 2.945900000000251e-05, 1.3050000000000561e-06, 2.515299999999998e-05, 1.2639999999973506e-06, 2.6332999999999912e-05, 1.334000000002139e-06, 2.2651999999998007e-05, 1.26400000000082e-06, 2.57230000000018e-05, 1.2909999999970168e-06, 2.7278000000002106e-05, 1.318999999999626e-06, 2.8514000000000317e-05, 1.3339999999986696e-06, 2.7569000000001592e-05, 1.3199999999990997e-06, 2.7583000000001162e-05, 1.3050000000000561e-06, 2.29169999999973e-05, 1.3200000000025691e-06, 2.5401999999997288e-05, 1.3060000000029992e-06, 2.6360999999999052e-05, 1.3059999999995298e-06, 2.5416000000000327e-05, 1.3059999999995298e-06, 2.513900000000041e-05, 1.2770000000009163e-06, 2.538899999999719e-05, 1.3200000000025691e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 3.0389000000002192e-05, 1.3059999999995298e-06, 2.7611000000000302e-05, 1.3050000000000561e-06, 2.25969999999992e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.318999999999626e-06, 2.445900000000098e-05, 1.3050000000000561e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.8818999999999373e-05, 1.334000000002139e-06, 3.223599999999799e-05, 1.3610000000018052e-06, 2.9096999999998763e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.5096999999998232e-05, 1.318999999999626e-06, 2.4472000000001076e-05, 1.3059999999995298e-06, 2.418100000000159e-05, 1.2910000000004862e-06, 2.4471999999997607e-05, 1.348000000001709e-06, 2.412499999999984e-05, 1.332999999999196e-06, 2.666700000000105e-05, 1.2770000000009163e-06, 3.226399999999713e-05, 1.3200000000025691e-06, 2.9777999999997667e-05, 1.3190000000030955e-06, 3.0068999999997154e-05, 1.3059999999995298e-06, 2.50970000000017e-05, 1.3059999999995298e-06, 3.197200000000164e-05, 1.2919999999999598e-06, 2.8527000000000413e-05, 1.3059999999995298e-06, 2.5443999999999467e-05, 1.2919999999999598e-06, 2.291700000000077e-05, 1.318999999999626e-06, 2.8514000000000317e-05, 1.3059999999995298e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:58.884" endtime="20201030 18:29:58.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.880" endtime="20201030 18:29:58.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.893" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.334000000002139e-0...</msg>
<status status="PASS" starttime="20201030 18:29:58.890" endtime="20201030 18:29:58.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:58.897" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.334000000002139e-06, 1.3050000000000561e-06, 1.2919999999999598e-06,...</msg>
<status status="PASS" starttime="20201030 18:29:58.894" endtime="20201030 18:29:58.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.901" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:58.900" endtime="20201030 18:29:58.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.903" level="INFO">VALUE: [1.5000000000015001e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.334000000002139e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2639999999973506e-06, 1.334000000002139e-06, 1.26400000000082e-06, 1.2909999999970168e-06, 1.318999999999626e-06, 1.3339999999986696e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3200000000025691e-06, 1.3060000000029992e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.2770000000009163e-06, 1.3200000000025691e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.334000000002139e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.2910000000004862e-06, 1.348000000001709e-06, 1.332999999999196e-06, 1.2770000000009163e-06, 1.3200000000025691e-06, 1.3190000000030955e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201030 18:29:58.902" endtime="20201030 18:29:58.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.898" endtime="20201030 18:29:58.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.908" endtime="20201030 18:29:58.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.906" endtime="20201030 18:29:58.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.905" endtime="20201030 18:29:58.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.518" endtime="20201030 18:29:58.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.518" endtime="20201030 18:29:58.929"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.937" endtime="20201030 18:29:58.947"></status>
</kw>
<msg timestamp="20201030 18:29:58.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.936" endtime="20201030 18:29:58.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.950" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.948" endtime="20201030 18:29:58.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.951" endtime="20201030 18:29:58.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.932" endtime="20201030 18:29:58.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.931" endtime="20201030 18:29:58.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.959" endtime="20201030 18:29:59.246"></status>
</kw>
<msg timestamp="20201030 18:29:59.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.958" endtime="20201030 18:29:59.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.250" endtime="20201030 18:29:59.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.259" endtime="20201030 18:29:59.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.955" endtime="20201030 18:29:59.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.954" endtime="20201030 18:29:59.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:59.286" level="INFO">${debug} = {'time': [0.019326403, 0.019327875, 0.019353306, 0.019354597, 0.019385306, 0.019386611, 0.019416083, 0.019417375, 0.019448708, 0.019450014, 0.019474875, 0.019476194, 0.019502458, 0.019503764, 0.019532...</msg>
<status status="PASS" starttime="20201030 18:29:59.262" endtime="20201030 18:29:59.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.287" endtime="20201030 18:29:59.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.292" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:59.291" endtime="20201030 18:29:59.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.296" level="INFO">VALUE: {'time': [0.019326403, 0.019327875, 0.019353306, 0.019354597, 0.019385306, 0.019386611, 0.019416083, 0.019417375, 0.019448708, 0.019450014, 0.019474875, 0.019476194, 0.019502458, 0.019503764, 0.019532292, 0.019533611, 0.019556528, 0.019557847, 0.019581375, 0.019582681, 0.019614972, 0.019616264, 0.01964075, 0.019642069, 0.019665903, 0.019667208, 0.019692069, 0.019693319, 0.019716236, 0.019717569, 0.019740153, 0.019741556, 0.019770014, 0.019771306, 0.019798333, 0.019799611, 0.019829986, 0.019831306, 0.019863569, 0.019864875, 0.019892153, 0.019893472, 0.019923556, 0.019924861, 0.019948736, 0.019950014, 0.019978861, 0.019980167, 0.020004958, 0.020006292, 0.0200345, 0.020035806, 0.020061208, 0.020062528, 0.020089806, 0.020091111, 0.020117458, 0.020118778, 0.020142333, 0.020143625, 0.020174333, 0.020175653, 0.020206667, 0.020208014, 0.020235958, 0.020237194, 0.020263861, 0.020265167, 0.0202915, 0.020292819, 0.020320708, 0.020322028, 0.02035025, 0.020351556, 0.020381014, 0.020382319, 0.020410903, 0.020412222, 0.020443792, 0.020445125, 0.020473944, 0.02047525, 0.020500972, 0.020502278, 0.020524889, 0.020526194, 0.020548875, 0.020550125, 0.020576167, 0.020577458, 0.020607236, 0.020608542, 0.020637708, 0.020639, 0.020664125, 0.020665417, 0.020692083, 0.020693403, 0.020716931, 0.020718236], 'source_diff': [0, 1.4720000000023603e-06, 2.543099999999937e-05, 1.2910000000004862e-06, 3.070900000000029e-05, 1.3050000000000561e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 3.1332999999997974e-05, 1.3060000000029992e-06, 2.4860999999997552e-05, 1.318999999999626e-06, 2.6264000000001536e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.318999999999626e-06, 2.291700000000077e-05, 1.318999999999626e-06, 2.3528000000001825e-05, 1.3059999999995298e-06, 3.2291000000000264e-05, 1.2919999999999598e-06, 2.4485999999997177e-05, 1.3190000000030955e-06, 2.3833999999996885e-05, 1.3050000000000561e-06, 2.486100000000102e-05, 1.2500000000012501e-06, 2.291700000000077e-05, 1.332999999999196e-06, 2.2583999999999105e-05, 1.403000000000515e-06, 2.8457999999998568e-05, 1.2919999999999598e-06, 2.7027000000002382e-05, 1.27800000000039e-06, 3.0374999999999153e-05, 1.3199999999990997e-06, 3.2263000000001124e-05, 1.3059999999995298e-06, 2.7277999999998637e-05, 1.318999999999626e-06, 3.0083999999999667e-05, 1.3050000000000561e-06, 2.387500000000306e-05, 1.2779999999969205e-06, 2.8847000000001982e-05, 1.3059999999995298e-06, 2.4790999999999702e-05, 1.3339999999986696e-06, 2.8208000000001787e-05, 1.3059999999995298e-06, 2.5402000000000757e-05, 1.3199999999990997e-06, 2.7278000000002106e-05, 1.3049999999965867e-06, 2.634700000000295e-05, 1.3199999999990997e-06, 2.3554999999998022e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3200000000025691e-06, 3.101399999999935e-05, 1.3469999999987659e-06, 2.7943999999998498e-05, 1.2360000000016802e-06, 2.666700000000105e-05, 1.3059999999995298e-06, 2.6332999999999912e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3199999999990997e-06, 2.8222000000001357e-05, 1.3059999999995298e-06, 2.9457999999999568e-05, 1.3050000000000561e-06, 2.8584000000001636e-05, 1.318999999999626e-06, 3.156999999999813e-05, 1.3330000000026654e-06, 2.8818999999999373e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.3059999999995298e-06, 2.261100000000224e-05, 1.3050000000000561e-06, 2.268100000000009e-05, 1.2499999999977807e-06, 2.6042000000000426e-05, 1.2910000000004862e-06, 2.9778000000001137e-05, 1.3059999999995298e-06, 2.9166000000000608e-05, 1.2919999999999598e-06, 2.512499999999737e-05, 1.2919999999999598e-06, 2.6666000000001577e-05, 1.3199999999990997e-06, 2.3528000000001825e-05, 1.3050000000000561e-06], 'eventdiff': [0, 1.4720000000023603e-06, 2.543099999999937e-05, 1.2910000000004862e-06, 3.070900000000029e-05, 1.3050000000000561e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 3.1332999999997974e-05, 1.3060000000029992e-06, 2.4860999999997552e-05, 1.318999999999626e-06, 2.6264000000001536e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.318999999999626e-06, 2.291700000000077e-05, 1.318999999999626e-06, 2.3528000000001825e-05, 1.3059999999995298e-06, 3.2291000000000264e-05, 1.2919999999999598e-06, 2.4485999999997177e-05, 1.3190000000030955e-06, 2.3833999999996885e-05, 1.3050000000000561e-06, 2.486100000000102e-05, 1.2500000000012501e-06, 2.291700000000077e-05, 1.332999999999196e-06, 2.2583999999999105e-05, 1.403000000000515e-06, 2.8457999999998568e-05, 1.2919999999999598e-06, 2.7027000000002382e-05, 1.27800000000039e-06, 3.0374999999999153e-05, 1.3199999999990997e-06, 3.2263000000001124e-05, 1.3059999999995298e-06, 2.7277999999998637e-05, 1.318999999999626e-06, 3.0083999999999667e-05, 1.3050000000000561e-06, 2.387500000000306e-05, 1.2779999999969205e-06, 2.8847000000001982e-05, 1.3059999999995298e-06, 2.4790999999999702e-05, 1.3339999999986696e-06, 2.8208000000001787e-05, 1.3059999999995298e-06, 2.5402000000000757e-05, 1.3199999999990997e-06, 2.7278000000002106e-05, 1.3049999999965867e-06, 2.634700000000295e-05, 1.3199999999990997e-06, 2.3554999999998022e-05, 1.2919999999999598e-06, 3.070800000000082e-05, 1.3200000000025691e-06, 3.101399999999935e-05, 1.3469999999987659e-06, 2.7943999999998498e-05, 1.2360000000016802e-06, 2.666700000000105e-05, 1.3059999999995298e-06, 2.6332999999999912e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3199999999990997e-06, 2.8222000000001357e-05, 1.3059999999995298e-06, 2.9457999999999568e-05, 1.3050000000000561e-06, 2.8584000000001636e-05, 1.318999999999626e-06, 3.156999999999813e-05, 1.3330000000026654e-06, 2.8818999999999373e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.3059999999995298e-06, 2.261100000000224e-05, 1.3050000000000561e-06, 2.268100000000009e-05, 1.2499999999977807e-06, 2.6042000000000426e-05, 1.2910000000004862e-06, 2.9778000000001137e-05, 1.3059999999995298e-06, 2.9166000000000608e-05, 1.2919999999999598e-06, 2.512499999999737e-05, 1.2919999999999598e-06, 2.6666000000001577e-05, 1.3199999999990997e-06, 2.3528000000001825e-05, 1.3050000000000561e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:59.293" endtime="20201030 18:29:59.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.289" endtime="20201030 18:29:59.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:59.302" level="INFO">${RESULT} = [{'diff': 1.4720000000023603e-06}, {'diff': 1.2910000000004862e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.3060000000029992e-06}, {'diff': 1.318999999999626e-0...</msg>
<status status="PASS" starttime="20201030 18:29:59.298" endtime="20201030 18:29:59.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:59.306" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4720000000023603e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3060000000029992e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.318999999999626e-06, ...</msg>
<status status="PASS" starttime="20201030 18:29:59.302" endtime="20201030 18:29:59.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.310" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:59.309" endtime="20201030 18:29:59.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.313" level="INFO">VALUE: [1.4720000000023603e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3060000000029992e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3190000000030955e-06, 1.3050000000000561e-06, 1.2500000000012501e-06, 1.332999999999196e-06, 1.403000000000515e-06, 1.2919999999999598e-06, 1.27800000000039e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2779999999969205e-06, 1.3059999999995298e-06, 1.3339999999986696e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3049999999965867e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.3200000000025691e-06, 1.3469999999987659e-06, 1.2360000000016802e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3330000000026654e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.2499999999977807e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3050000000000561e-06]</msg>
<status status="PASS" starttime="20201030 18:29:59.311" endtime="20201030 18:29:59.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.307" endtime="20201030 18:29:59.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.317" endtime="20201030 18:29:59.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.316" endtime="20201030 18:29:59.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.315" endtime="20201030 18:29:59.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.929" endtime="20201030 18:29:59.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.929" endtime="20201030 18:29:59.338"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.345" endtime="20201030 18:29:59.355"></status>
</kw>
<msg timestamp="20201030 18:29:59.355" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.344" endtime="20201030 18:29:59.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.358" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.356" endtime="20201030 18:29:59.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.359" endtime="20201030 18:29:59.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.342" endtime="20201030 18:29:59.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.340" endtime="20201030 18:29:59.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.368" endtime="20201030 18:29:59.654"></status>
</kw>
<msg timestamp="20201030 18:29:59.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018393514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018395028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.366" endtime="20201030 18:29:59.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018393514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018395028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.659" endtime="20201030 18:29:59.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.667" endtime="20201030 18:29:59.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.364" endtime="20201030 18:29:59.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.362" endtime="20201030 18:29:59.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:59.694" level="INFO">${debug} = {'time': [0.018393514, 0.018395028, 0.018424472, 0.018425778, 0.018450889, 0.01845225, 0.018478542, 0.018479847, 0.018505569, 0.018506875, 0.018536653, 0.018538, 0.018567139, 0.0185685, 0.018598181, 0...</msg>
<status status="PASS" starttime="20201030 18:29:59.671" endtime="20201030 18:29:59.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.695" endtime="20201030 18:29:59.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.701" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:59.699" endtime="20201030 18:29:59.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.705" level="INFO">VALUE: {'time': [0.018393514, 0.018395028, 0.018424472, 0.018425778, 0.018450889, 0.01845225, 0.018478542, 0.018479847, 0.018505569, 0.018506875, 0.018536653, 0.018538, 0.018567139, 0.0185685, 0.018598181, 0.018599486, 0.018629569, 0.018630875, 0.018655986, 0.018657319, 0.018686139, 0.018687431, 0.018710972, 0.018712278, 0.018743611, 0.018744917, 0.01877375, 0.018775083, 0.018798625, 0.018799931, 0.018825014, 0.018826319, 0.018854861, 0.018856194, 0.018883444, 0.01888475, 0.018913333, 0.018914611, 0.018943125, 0.018944417, 0.018970764, 0.018972069, 0.019000597, 0.019001917, 0.019027944, 0.019029319, 0.019058111, 0.019059417, 0.019084194, 0.019085514, 0.019115597, 0.019116903, 0.019146667, 0.019147986, 0.019172764, 0.019174069, 0.019206333, 0.019207653, 0.019237431, 0.019238736, 0.019268486, 0.019269806, 0.019299889, 0.019301208, 0.019329403, 0.019330736, 0.019353708, 0.019354958, 0.019383792, 0.019385153, 0.019415181, 0.019416486, 0.019439111, 0.019440472, 0.019468611, 0.019469931, 0.019496278, 0.019497583, 0.019522694, 0.019523986, 0.019551597, 0.019552889, 0.019581722, 0.019583028, 0.019608139, 0.019609444, 0.019632986, 0.019634292, 0.019659403, 0.019660722, 0.019686431, 0.01968775, 0.019719056, 0.019720431, 0.019751694, 0.019753, 0.019782778, 0.019784083, 0.019815722, 0.019817028], 'source_diff': [0, 1.51400000000107e-06, 2.9443999999999998e-05, 1.3059999999995298e-06, 2.511100000000127e-05, 1.3609999999983358e-06, 2.6292000000000676e-05, 1.3050000000000561e-06, 2.5721999999998857e-05, 1.3059999999995298e-06, 2.9778000000001137e-05, 1.3469999999987659e-06, 2.9139000000000942e-05, 1.3610000000018052e-06, 2.9680999999996682e-05, 1.3050000000000561e-06, 3.0083000000000193e-05, 1.3060000000029992e-06, 2.5110999999997802e-05, 1.332999999999196e-06, 2.8820000000002316e-05, 1.2919999999999598e-06, 2.3540999999998452e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.8832999999998943e-05, 1.3330000000026654e-06, 2.3541999999997926e-05, 1.3059999999995298e-06, 2.508300000000213e-05, 1.3050000000000561e-06, 2.8541999999999457e-05, 1.332999999999196e-06, 2.7249999999999497e-05, 1.3059999999995298e-06, 2.8583000000002162e-05, 1.27800000000039e-06, 2.8514000000000317e-05, 1.2919999999999598e-06, 2.6346999999999482e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3199999999990997e-06, 2.6027000000001382e-05, 1.3749999999979057e-06, 2.8791999999999707e-05, 1.3059999999995298e-06, 2.4777000000000132e-05, 1.3200000000025691e-06, 3.0083000000000193e-05, 1.3059999999995298e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 2.4777999999999606e-05, 1.3050000000000561e-06, 3.22640000000006e-05, 1.3200000000025691e-06, 2.9777999999997667e-05, 1.3050000000000561e-06, 2.9750000000001997e-05, 1.3199999999990997e-06, 3.0083000000000193e-05, 1.318999999999626e-06, 2.819499999999822e-05, 1.3330000000026654e-06, 2.2971999999999576e-05, 1.2499999999977807e-06, 2.8834000000001886e-05, 1.3609999999983358e-06, 3.0028000000001387e-05, 1.3050000000000561e-06, 2.262499999999834e-05, 1.3610000000018052e-06, 2.8138999999999942e-05, 1.3199999999990997e-06, 2.6346999999999482e-05, 1.3050000000000561e-06, 2.511100000000127e-05, 1.2919999999999598e-06, 2.7611000000000302e-05, 1.2919999999999598e-06, 2.8832999999998943e-05, 1.3059999999995298e-06, 2.511100000000127e-05, 1.3050000000000561e-06, 2.3542000000001395e-05, 1.3059999999995298e-06, 2.5110999999997802e-05, 1.318999999999626e-06, 2.570900000000223e-05, 1.318999999999626e-06, 3.130599999999831e-05, 1.3750000000013751e-06, 3.1263000000000124e-05, 1.3059999999995298e-06, 2.9778000000001137e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06], 'eventdiff': [0, 1.51400000000107e-06, 2.9443999999999998e-05, 1.3059999999995298e-06, 2.511100000000127e-05, 1.3609999999983358e-06, 2.6292000000000676e-05, 1.3050000000000561e-06, 2.5721999999998857e-05, 1.3059999999995298e-06, 2.9778000000001137e-05, 1.3469999999987659e-06, 2.9139000000000942e-05, 1.3610000000018052e-06, 2.9680999999996682e-05, 1.3050000000000561e-06, 3.0083000000000193e-05, 1.3060000000029992e-06, 2.5110999999997802e-05, 1.332999999999196e-06, 2.8820000000002316e-05, 1.2919999999999598e-06, 2.3540999999998452e-05, 1.3059999999995298e-06, 3.133300000000144e-05, 1.3059999999995298e-06, 2.8832999999998943e-05, 1.3330000000026654e-06, 2.3541999999997926e-05, 1.3059999999995298e-06, 2.508300000000213e-05, 1.3050000000000561e-06, 2.8541999999999457e-05, 1.332999999999196e-06, 2.7249999999999497e-05, 1.3059999999995298e-06, 2.8583000000002162e-05, 1.27800000000039e-06, 2.8514000000000317e-05, 1.2919999999999598e-06, 2.6346999999999482e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3199999999990997e-06, 2.6027000000001382e-05, 1.3749999999979057e-06, 2.8791999999999707e-05, 1.3059999999995298e-06, 2.4777000000000132e-05, 1.3200000000025691e-06, 3.0083000000000193e-05, 1.3059999999995298e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 2.4777999999999606e-05, 1.3050000000000561e-06, 3.22640000000006e-05, 1.3200000000025691e-06, 2.9777999999997667e-05, 1.3050000000000561e-06, 2.9750000000001997e-05, 1.3199999999990997e-06, 3.0083000000000193e-05, 1.318999999999626e-06, 2.819499999999822e-05, 1.3330000000026654e-06, 2.2971999999999576e-05, 1.2499999999977807e-06, 2.8834000000001886e-05, 1.3609999999983358e-06, 3.0028000000001387e-05, 1.3050000000000561e-06, 2.262499999999834e-05, 1.3610000000018052e-06, 2.8138999999999942e-05, 1.3199999999990997e-06, 2.6346999999999482e-05, 1.3050000000000561e-06, 2.511100000000127e-05, 1.2919999999999598e-06, 2.7611000000000302e-05, 1.2919999999999598e-06, 2.8832999999998943e-05, 1.3059999999995298e-06, 2.511100000000127e-05, 1.3050000000000561e-06, 2.3542000000001395e-05, 1.3059999999995298e-06, 2.5110999999997802e-05, 1.318999999999626e-06, 2.570900000000223e-05, 1.318999999999626e-06, 3.130599999999831e-05, 1.3750000000013751e-06, 3.1263000000000124e-05, 1.3059999999995298e-06, 2.9778000000001137e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:29:59.702" endtime="20201030 18:29:59.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.698" endtime="20201030 18:29:59.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:59.710" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3469999999987659e-06...</msg>
<status status="PASS" starttime="20201030 18:29:59.707" endtime="20201030 18:29:59.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:59.714" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.51400000000107e-06, 1.3059999999995298e-06, 1.3609999999983358e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3469999999987659e-06, 1.3610000000018052e-06, 1.3050000000000561e-06, ...</msg>
<status status="PASS" starttime="20201030 18:29:59.711" endtime="20201030 18:29:59.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.719" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:59.718" endtime="20201030 18:29:59.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.722" level="INFO">VALUE: [1.51400000000107e-06, 1.3059999999995298e-06, 1.3609999999983358e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3469999999987659e-06, 1.3610000000018052e-06, 1.3050000000000561e-06, 1.3060000000029992e-06, 1.332999999999196e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3330000000026654e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.332999999999196e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.3749999999979057e-06, 1.3059999999995298e-06, 1.3200000000025691e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3200000000025691e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.3330000000026654e-06, 1.2499999999977807e-06, 1.3609999999983358e-06, 1.3050000000000561e-06, 1.3610000000018052e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3750000000013751e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201030 18:29:59.720" endtime="20201030 18:29:59.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.715" endtime="20201030 18:29:59.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.726" endtime="20201030 18:29:59.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.725" endtime="20201030 18:29:59.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.723" endtime="20201030 18:29:59.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.339" endtime="20201030 18:29:59.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.338" endtime="20201030 18:29:59.747"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.754" endtime="20201030 18:29:59.764"></status>
</kw>
<msg timestamp="20201030 18:29:59.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.753" endtime="20201030 18:29:59.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.767" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.765" endtime="20201030 18:29:59.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.768" endtime="20201030 18:29:59.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.750" endtime="20201030 18:29:59.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.749" endtime="20201030 18:29:59.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.776" endtime="20201030 18:30:00.063"></status>
</kw>
<msg timestamp="20201030 18:30:00.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018358889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.775" endtime="20201030 18:30:00.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018358889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.067" endtime="20201030 18:30:00.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.075" endtime="20201030 18:30:00.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.773" endtime="20201030 18:30:00.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.771" endtime="20201030 18:30:00.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:00.103" level="INFO">${debug} = {'time': [0.018357389, 0.018358889, 0.018384611, 0.018385972, 0.018411944, 0.018413306, 0.018440528, 0.018441847, 0.0184685, 0.018469806, 0.018498347, 0.018499681, 0.018531889, 0.018533208, 0.01856515...</msg>
<status status="PASS" starttime="20201030 18:30:00.078" endtime="20201030 18:30:00.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.104" endtime="20201030 18:30:00.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.109" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:00.108" endtime="20201030 18:30:00.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.113" level="INFO">VALUE: {'time': [0.018357389, 0.018358889, 0.018384611, 0.018385972, 0.018411944, 0.018413306, 0.018440528, 0.018441847, 0.0184685, 0.018469806, 0.018498347, 0.018499681, 0.018531889, 0.018533208, 0.018565153, 0.018566458, 0.018594667, 0.018595986, 0.018623569, 0.018624917, 0.018657139, 0.018658444, 0.018681972, 0.018683292, 0.018711194, 0.018712514, 0.018744139, 0.018745444, 0.018776458, 0.018777764, 0.018806597, 0.018807917, 0.018836444, 0.018837764, 0.018869083, 0.018870375, 0.018894847, 0.018896167, 0.018920944, 0.01892225, 0.018952681, 0.018953958, 0.018984972, 0.018986278, 0.019012, 0.019013319, 0.019038708, 0.019040042, 0.019068542, 0.019069847, 0.01909775, 0.019099111, 0.019123222, 0.019124542, 0.019149944, 0.019151264, 0.019178236, 0.019179569, 0.019211236, 0.019212472, 0.019244431, 0.019245736, 0.019275833, 0.019277139, 0.019305028, 0.019306333, 0.019331444, 0.019332736, 0.019360944, 0.019362264, 0.019388625, 0.019389931, 0.019415944, 0.01941725, 0.0194405, 0.019441792, 0.019471264, 0.019472569, 0.019502958, 0.019504292, 0.01953625, 0.019537528, 0.019567667, 0.019568931, 0.019601181, 0.0196025, 0.019630389, 0.019631722, 0.019663653, 0.019664958, 0.019696583, 0.019697931, 0.019727042, 0.019728389, 0.019754389, 0.019755694, 0.019778611, 0.019779931, 0.019805347, 0.019806639], 'source_diff': [0, 1.4999999999980307e-06, 2.5721999999998857e-05, 1.3610000000018052e-06, 2.5971999999999107e-05, 1.3620000000012789e-06, 2.7222000000000357e-05, 1.318999999999626e-06, 2.665299999999801e-05, 1.3059999999995298e-06, 2.8540999999999983e-05, 1.334000000002139e-06, 3.220799999999885e-05, 1.318999999999626e-06, 3.194500000000197e-05, 1.3050000000000561e-06, 2.820899999999779e-05, 1.318999999999626e-06, 2.7583000000001162e-05, 1.348000000001709e-06, 3.222199999999842e-05, 1.3050000000000561e-06, 2.3528000000001825e-05, 1.3199999999990997e-06, 2.7901999999999788e-05, 1.3199999999990997e-06, 3.16250000000004e-05, 1.3050000000000561e-06, 3.101399999999935e-05, 1.3059999999995298e-06, 2.8833000000002412e-05, 1.3199999999990997e-06, 2.8527000000000413e-05, 1.3199999999990997e-06, 3.1318999999998404e-05, 1.2920000000034293e-06, 2.4471999999997607e-05, 1.3199999999990997e-06, 2.4777000000000132e-05, 1.3060000000029992e-06, 3.0430999999997432e-05, 1.2770000000009163e-06, 3.101399999999935e-05, 1.3059999999995298e-06, 2.5722000000002326e-05, 1.318999999999626e-06, 2.538900000000066e-05, 1.3339999999986696e-06, 2.8500000000000747e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3609999999983358e-06, 2.411100000000027e-05, 1.3200000000025691e-06, 2.5401999999997288e-05, 1.3200000000025691e-06, 2.6972000000000107e-05, 1.332999999999196e-06, 3.166699999999911e-05, 1.2360000000016802e-06, 3.195899999999807e-05, 1.3050000000000561e-06, 3.0096999999999763e-05, 1.3059999999995298e-06, 2.7888999999999692e-05, 1.3050000000000561e-06, 2.511100000000127e-05, 1.2919999999999598e-06, 2.8208000000001787e-05, 1.3199999999990997e-06, 2.6360999999999052e-05, 1.3059999999995298e-06, 2.6013000000001812e-05, 1.3059999999995298e-06, 2.3249999999998966e-05, 1.2919999999999598e-06, 2.9471999999999138e-05, 1.3050000000000561e-06, 3.0389000000002192e-05, 1.3339999999986696e-06, 3.195800000000207e-05, 1.2779999999969205e-06, 3.0139000000001942e-05, 1.26400000000082e-06, 3.224999999999756e-05, 1.318999999999626e-06, 2.788900000000316e-05, 1.332999999999196e-06, 3.193099999999893e-05, 1.3050000000000561e-06, 3.16250000000004e-05, 1.3479999999982395e-06, 2.9111000000001802e-05, 1.3469999999987659e-06, 2.6000000000001716e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3199999999990997e-06, 2.5416000000000327e-05, 1.2919999999999598e-06], 'eventdiff': [0, 1.4999999999980307e-06, 2.5721999999998857e-05, 1.3610000000018052e-06, 2.5971999999999107e-05, 1.3620000000012789e-06, 2.7222000000000357e-05, 1.318999999999626e-06, 2.665299999999801e-05, 1.3059999999995298e-06, 2.8540999999999983e-05, 1.334000000002139e-06, 3.220799999999885e-05, 1.318999999999626e-06, 3.194500000000197e-05, 1.3050000000000561e-06, 2.820899999999779e-05, 1.318999999999626e-06, 2.7583000000001162e-05, 1.348000000001709e-06, 3.222199999999842e-05, 1.3050000000000561e-06, 2.3528000000001825e-05, 1.3199999999990997e-06, 2.7901999999999788e-05, 1.3199999999990997e-06, 3.16250000000004e-05, 1.3050000000000561e-06, 3.101399999999935e-05, 1.3059999999995298e-06, 2.8833000000002412e-05, 1.3199999999990997e-06, 2.8527000000000413e-05, 1.3199999999990997e-06, 3.1318999999998404e-05, 1.2920000000034293e-06, 2.4471999999997607e-05, 1.3199999999990997e-06, 2.4777000000000132e-05, 1.3060000000029992e-06, 3.0430999999997432e-05, 1.2770000000009163e-06, 3.101399999999935e-05, 1.3059999999995298e-06, 2.5722000000002326e-05, 1.318999999999626e-06, 2.538900000000066e-05, 1.3339999999986696e-06, 2.8500000000000747e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.3609999999983358e-06, 2.411100000000027e-05, 1.3200000000025691e-06, 2.5401999999997288e-05, 1.3200000000025691e-06, 2.6972000000000107e-05, 1.332999999999196e-06, 3.166699999999911e-05, 1.2360000000016802e-06, 3.195899999999807e-05, 1.3050000000000561e-06, 3.0096999999999763e-05, 1.3059999999995298e-06, 2.7888999999999692e-05, 1.3050000000000561e-06, 2.511100000000127e-05, 1.2919999999999598e-06, 2.8208000000001787e-05, 1.3199999999990997e-06, 2.6360999999999052e-05, 1.3059999999995298e-06, 2.6013000000001812e-05, 1.3059999999995298e-06, 2.3249999999998966e-05, 1.2919999999999598e-06, 2.9471999999999138e-05, 1.3050000000000561e-06, 3.0389000000002192e-05, 1.3339999999986696e-06, 3.195800000000207e-05, 1.2779999999969205e-06, 3.0139000000001942e-05, 1.26400000000082e-06, 3.224999999999756e-05, 1.318999999999626e-06, 2.788900000000316e-05, 1.332999999999196e-06, 3.193099999999893e-05, 1.3050000000000561e-06, 3.16250000000004e-05, 1.3479999999982395e-06, 2.9111000000001802e-05, 1.3469999999987659e-06, 2.6000000000001716e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3199999999990997e-06, 2.5416000000000327e-05, 1.2919999999999598e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:30:00.110" endtime="20201030 18:30:00.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.106" endtime="20201030 18:30:00.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:00.118" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.3610000000018052e-06}, {'diff': 1.3620000000012789e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.334000000002139e-06...</msg>
<status status="PASS" starttime="20201030 18:30:00.115" endtime="20201030 18:30:00.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:00.123" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.3610000000018052e-06, 1.3620000000012789e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.334000000002139e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:30:00.119" endtime="20201030 18:30:00.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.127" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:00.126" endtime="20201030 18:30:00.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.129" level="INFO">VALUE: [1.4999999999980307e-06, 1.3610000000018052e-06, 1.3620000000012789e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.334000000002139e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.348000000001709e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.2920000000034293e-06, 1.3199999999990997e-06, 1.3060000000029992e-06, 1.2770000000009163e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3339999999986696e-06, 1.3050000000000561e-06, 1.3609999999983358e-06, 1.3200000000025691e-06, 1.3200000000025691e-06, 1.332999999999196e-06, 1.2360000000016802e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3339999999986696e-06, 1.2779999999969205e-06, 1.26400000000082e-06, 1.318999999999626e-06, 1.332999999999196e-06, 1.3050000000000561e-06, 1.3479999999982395e-06, 1.3469999999987659e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.2919999999999598e-06]</msg>
<status status="PASS" starttime="20201030 18:30:00.128" endtime="20201030 18:30:00.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.123" endtime="20201030 18:30:00.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.133" endtime="20201030 18:30:00.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.132" endtime="20201030 18:30:00.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.131" endtime="20201030 18:30:00.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.747" endtime="20201030 18:30:00.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.747" endtime="20201030 18:30:00.154"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.163" endtime="20201030 18:30:00.172"></status>
</kw>
<msg timestamp="20201030 18:30:00.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.161" endtime="20201030 18:30:00.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.175" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.174" endtime="20201030 18:30:00.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.176" endtime="20201030 18:30:00.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.159" endtime="20201030 18:30:00.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.156" endtime="20201030 18:30:00.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.185" endtime="20201030 18:30:00.471"></status>
</kw>
<msg timestamp="20201030 18:30:00.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019396236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.184" endtime="20201030 18:30:00.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019396236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.475" endtime="20201030 18:30:00.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.485" endtime="20201030 18:30:00.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.181" endtime="20201030 18:30:00.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.179" endtime="20201030 18:30:00.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:00.511" level="INFO">${debug} = {'time': [0.019396236, 0.019397722, 0.019422528, 0.019423847, 0.01944675, 0.019448042, 0.019473486, 0.019474778, 0.019497694, 0.019499014, 0.019530014, 0.019531319, 0.019560778, 0.019562083, 0.0195865...</msg>
<status status="PASS" starttime="20201030 18:30:00.488" endtime="20201030 18:30:00.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.512" endtime="20201030 18:30:00.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.517" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:00.516" endtime="20201030 18:30:00.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.521" level="INFO">VALUE: {'time': [0.019396236, 0.019397722, 0.019422528, 0.019423847, 0.01944675, 0.019448042, 0.019473486, 0.019474778, 0.019497694, 0.019499014, 0.019530014, 0.019531319, 0.019560778, 0.019562083, 0.019586583, 0.019587875, 0.019613292, 0.019614583, 0.019645014, 0.019646292, 0.019670153, 0.019671472, 0.019703403, 0.019704708, 0.019727944, 0.019729264, 0.019753722, 0.019755028, 0.019780764, 0.019782069, 0.019809722, 0.019810958, 0.019842917, 0.019844236, 0.019874931, 0.019876264, 0.019902583, 0.019903889, 0.019928375, 0.019929708, 0.019957903, 0.019959194, 0.019991444, 0.019992764, 0.020021972, 0.020023292, 0.020047069, 0.020048375, 0.020080014, 0.020081347, 0.020104556, 0.020105917, 0.020129778, 0.020131097, 0.020156819, 0.020158097, 0.020184153, 0.020185403, 0.02021675, 0.020218056, 0.020244069, 0.020245431, 0.020270542, 0.020271806, 0.020303125, 0.020304458, 0.020332028, 0.020333417, 0.020364361, 0.020365708, 0.020393889, 0.020395194, 0.020426847, 0.020428139, 0.020458542, 0.020459861, 0.020483389, 0.020484694, 0.020511972, 0.020513292, 0.020544, 0.020545306, 0.020575083, 0.020576389, 0.020606778, 0.020608083, 0.020633514, 0.020634806, 0.020661194, 0.020662472, 0.020690417, 0.020691667, 0.020716778, 0.020718083, 0.02074475, 0.020746042, 0.020776431, 0.02077775, 0.020807833, 0.020809139], 'source_diff': [0, 1.4859999999984608e-06, 2.4806000000002215e-05, 1.318999999999626e-06, 2.290299999999773e-05, 1.2919999999999598e-06, 2.5444000000002936e-05, 1.2919999999999598e-06, 2.2915999999997827e-05, 1.3199999999990997e-06, 3.099999999999978e-05, 1.3050000000000561e-06, 2.945900000000251e-05, 1.3050000000000561e-06, 2.4500000000000216e-05, 1.2919999999999598e-06, 2.54169999999998e-05, 1.2910000000004862e-06, 3.0430999999997432e-05, 1.27800000000039e-06, 2.386100000000002e-05, 1.318999999999626e-06, 3.19310000000024e-05, 1.3050000000000561e-06, 2.3235999999999396e-05, 1.3199999999990997e-06, 2.4458000000001506e-05, 1.3059999999995298e-06, 2.5735999999998427e-05, 1.3050000000000561e-06, 2.7652999999999012e-05, 1.2360000000016802e-06, 3.195900000000154e-05, 1.318999999999626e-06, 3.069499999999725e-05, 1.3330000000026654e-06, 2.6319000000000342e-05, 1.3059999999995298e-06, 2.4486000000000646e-05, 1.332999999999196e-06, 2.819499999999822e-05, 1.2910000000004862e-06, 3.225000000000103e-05, 1.3199999999990997e-06, 2.9207999999999318e-05, 1.3200000000025691e-06, 2.3776999999999132e-05, 1.3059999999995298e-06, 3.163899999999997e-05, 1.332999999999196e-06, 2.320899999999973e-05, 1.3610000000018052e-06, 2.386100000000002e-05, 1.318999999999626e-06, 2.5721999999998857e-05, 1.27800000000039e-06, 2.6055999999999996e-05, 1.2500000000012501e-06, 3.1346999999997543e-05, 1.3060000000029992e-06, 2.6012999999998343e-05, 1.3620000000012789e-06, 2.5110999999997802e-05, 1.26400000000082e-06, 3.131900000000187e-05, 1.332999999999196e-06, 2.7569999999997596e-05, 1.389000000000945e-06, 3.09440000000015e-05, 1.3469999999987659e-06, 2.818099999999865e-05, 1.3050000000000561e-06, 3.165300000000301e-05, 1.2919999999999598e-06, 3.0402999999998293e-05, 1.318999999999626e-06, 2.3528000000001825e-05, 1.3050000000000561e-06, 2.7277999999998637e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3059999999995298e-06, 2.9777000000001663e-05, 1.3059999999995298e-06, 3.0388999999998723e-05, 1.3050000000000561e-06, 2.543099999999937e-05, 1.2919999999999598e-06, 2.6388000000002187e-05, 1.27800000000039e-06, 2.794499999999797e-05, 1.2500000000012501e-06, 2.511100000000127e-05, 1.3050000000000561e-06, 2.666699999999758e-05, 1.2919999999999598e-06, 3.0389000000002192e-05, 1.318999999999626e-06, 3.0083000000000193e-05, 1.3059999999995298e-06], 'eventdiff': [0, 1.4859999999984608e-06, 2.4806000000002215e-05, 1.318999999999626e-06, 2.290299999999773e-05, 1.2919999999999598e-06, 2.5444000000002936e-05, 1.2919999999999598e-06, 2.2915999999997827e-05, 1.3199999999990997e-06, 3.099999999999978e-05, 1.3050000000000561e-06, 2.945900000000251e-05, 1.3050000000000561e-06, 2.4500000000000216e-05, 1.2919999999999598e-06, 2.54169999999998e-05, 1.2910000000004862e-06, 3.0430999999997432e-05, 1.27800000000039e-06, 2.386100000000002e-05, 1.318999999999626e-06, 3.19310000000024e-05, 1.3050000000000561e-06, 2.3235999999999396e-05, 1.3199999999990997e-06, 2.4458000000001506e-05, 1.3059999999995298e-06, 2.5735999999998427e-05, 1.3050000000000561e-06, 2.7652999999999012e-05, 1.2360000000016802e-06, 3.195900000000154e-05, 1.318999999999626e-06, 3.069499999999725e-05, 1.3330000000026654e-06, 2.6319000000000342e-05, 1.3059999999995298e-06, 2.4486000000000646e-05, 1.332999999999196e-06, 2.819499999999822e-05, 1.2910000000004862e-06, 3.225000000000103e-05, 1.3199999999990997e-06, 2.9207999999999318e-05, 1.3200000000025691e-06, 2.3776999999999132e-05, 1.3059999999995298e-06, 3.163899999999997e-05, 1.332999999999196e-06, 2.320899999999973e-05, 1.3610000000018052e-06, 2.386100000000002e-05, 1.318999999999626e-06, 2.5721999999998857e-05, 1.27800000000039e-06, 2.6055999999999996e-05, 1.2500000000012501e-06, 3.1346999999997543e-05, 1.3060000000029992e-06, 2.6012999999998343e-05, 1.3620000000012789e-06, 2.5110999999997802e-05, 1.26400000000082e-06, 3.131900000000187e-05, 1.332999999999196e-06, 2.7569999999997596e-05, 1.389000000000945e-06, 3.09440000000015e-05, 1.3469999999987659e-06, 2.818099999999865e-05, 1.3050000000000561e-06, 3.165300000000301e-05, 1.2919999999999598e-06, 3.0402999999998293e-05, 1.318999999999626e-06, 2.3528000000001825e-05, 1.3050000000000561e-06, 2.7277999999998637e-05, 1.3199999999990997e-06, 3.070800000000082e-05, 1.3059999999995298e-06, 2.9777000000001663e-05, 1.3059999999995298e-06, 3.0388999999998723e-05, 1.3050000000000561e-06, 2.543099999999937e-05, 1.2919999999999598e-06, 2.6388000000002187e-05, 1.27800000000039e-06, 2.794499999999797e-05, 1.2500000000012501e-06, 2.511100000000127e-05, 1.3050000000000561e-06, 2.666699999999758e-05, 1.2919999999999598e-06, 3.0389000000002192e-05, 1.318999999999626e-06, 3.0083000000000193e-05, 1.3059999999995298e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:30:00.518" endtime="20201030 18:30:00.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.514" endtime="20201030 18:30:00.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:00.527" level="INFO">${RESULT} = [{'diff': 1.4859999999984608e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.3050000000000561e-0...</msg>
<status status="PASS" starttime="20201030 18:30:00.524" endtime="20201030 18:30:00.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:00.532" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4859999999984608e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2919999999999598e-06,...</msg>
<status status="PASS" starttime="20201030 18:30:00.528" endtime="20201030 18:30:00.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.536" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:00.535" endtime="20201030 18:30:00.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.538" level="INFO">VALUE: [1.4859999999984608e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.2910000000004862e-06, 1.27800000000039e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.2360000000016802e-06, 1.318999999999626e-06, 1.3330000000026654e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.2910000000004862e-06, 1.3199999999990997e-06, 1.3200000000025691e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.3610000000018052e-06, 1.318999999999626e-06, 1.27800000000039e-06, 1.2500000000012501e-06, 1.3060000000029992e-06, 1.3620000000012789e-06, 1.26400000000082e-06, 1.332999999999196e-06, 1.389000000000945e-06, 1.3469999999987659e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.27800000000039e-06, 1.2500000000012501e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201030 18:30:00.537" endtime="20201030 18:30:00.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.532" endtime="20201030 18:30:00.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.542" endtime="20201030 18:30:00.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.541" endtime="20201030 18:30:00.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.540" endtime="20201030 18:30:00.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.155" endtime="20201030 18:30:00.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.154" endtime="20201030 18:30:00.563"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.571" endtime="20201030 18:30:00.581"></status>
</kw>
<msg timestamp="20201030 18:30:00.581" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.570" endtime="20201030 18:30:00.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.584" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.582" endtime="20201030 18:30:00.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.585" endtime="20201030 18:30:00.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.567" endtime="20201030 18:30:00.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.565" endtime="20201030 18:30:00.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.593" endtime="20201030 18:30:00.879"></status>
</kw>
<msg timestamp="20201030 18:30:00.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018790944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.592" endtime="20201030 18:30:00.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018790944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.883" endtime="20201030 18:30:00.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.892" endtime="20201030 18:30:00.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.589" endtime="20201030 18:30:00.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.588" endtime="20201030 18:30:00.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:00.919" level="INFO">${debug} = {'time': [0.018789458, 0.018790944, 0.018818556, 0.018819861, 0.01885025, 0.018851556, 0.01887575, 0.018877042, 0.018904639, 0.018905944, 0.018937583, 0.018938889, 0.018964611, 0.018965958, 0.01899288...</msg>
<status status="PASS" starttime="20201030 18:30:00.895" endtime="20201030 18:30:00.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.920" endtime="20201030 18:30:00.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.929" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:00.927" endtime="20201030 18:30:00.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.933" level="INFO">VALUE: {'time': [0.018789458, 0.018790944, 0.018818556, 0.018819861, 0.01885025, 0.018851556, 0.01887575, 0.018877042, 0.018904639, 0.018905944, 0.018937583, 0.018938889, 0.018964611, 0.018965958, 0.018992889, 0.018994194, 0.019019931, 0.01902125, 0.019049194, 0.019050458, 0.019078375, 0.019079681, 0.019107597, 0.019108889, 0.019132125, 0.019133431, 0.019164458, 0.019165764, 0.019192764, 0.019194042, 0.019226306, 0.019227611, 0.019259875, 0.019261222, 0.019287528, 0.019288847, 0.019320181, 0.0193215, 0.019353444, 0.01935475, 0.019384569, 0.019385833, 0.019415611, 0.019416917, 0.019442639, 0.019443944, 0.019471917, 0.019473167, 0.019495819, 0.019497083, 0.019527194, 0.019528472, 0.019551403, 0.019552708, 0.019577806, 0.019579125, 0.019603278, 0.019604611, 0.019630319, 0.019631625, 0.019662028, 0.019663347, 0.019685944, 0.019687264, 0.019715806, 0.019717097, 0.019741569, 0.019742903, 0.019772972, 0.019774278, 0.019803736, 0.019805069, 0.019832028, 0.019833347, 0.019857819, 0.019859125, 0.019887333, 0.019888639, 0.019919347, 0.019920667, 0.019945764, 0.019947069, 0.019975917, 0.019977208, 0.020009167, 0.020010486, 0.020040875, 0.020042194, 0.020072264, 0.020073583, 0.020105542, 0.020106847, 0.020135375, 0.020136681, 0.020164278, 0.020165597, 0.020197236, 0.020198556, 0.020228319, 0.020229611], 'source_diff': [0, 1.4860000000019302e-06, 2.7611999999999776e-05, 1.3050000000000561e-06, 3.0388999999998723e-05, 1.3059999999995298e-06, 2.4194000000001686e-05, 1.2919999999999598e-06, 2.7597000000000732e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.3470000000022353e-06, 2.69309999999974e-05, 1.3050000000000561e-06, 2.573700000000137e-05, 1.318999999999626e-06, 2.7943999999998498e-05, 1.26400000000082e-06, 2.79170000000023e-05, 1.3059999999995298e-06, 2.7915999999999358e-05, 1.2919999999999598e-06, 2.3235999999999396e-05, 1.3059999999995298e-06, 3.1026999999999444e-05, 1.3059999999995298e-06, 2.7000000000002716e-05, 1.27800000000039e-06, 3.226399999999713e-05, 1.3050000000000561e-06, 3.22640000000006e-05, 1.3470000000022353e-06, 2.6306000000000246e-05, 1.318999999999626e-06, 3.133399999999745e-05, 1.318999999999626e-06, 3.19440000000025e-05, 1.3059999999995298e-06, 2.9819000000000373e-05, 1.26400000000082e-06, 2.9777999999997667e-05, 1.3059999999995298e-06, 2.5722000000002326e-05, 1.3050000000000561e-06, 2.797299999999711e-05, 1.2500000000012501e-06, 2.2652000000001477e-05, 1.2639999999973506e-06, 3.0111000000002802e-05, 1.27800000000039e-06, 2.293099999999687e-05, 1.3050000000000561e-06, 2.5098000000001175e-05, 1.318999999999626e-06, 2.415299999999898e-05, 1.3330000000026654e-06, 2.5707999999999287e-05, 1.3059999999995298e-06, 3.0403000000001762e-05, 1.318999999999626e-06, 2.25969999999992e-05, 1.3199999999990997e-06, 2.8541999999999457e-05, 1.2910000000004862e-06, 2.4472000000001076e-05, 1.3339999999986696e-06, 3.0069000000000623e-05, 1.3059999999995298e-06, 2.9457999999999568e-05, 1.3330000000026654e-06, 2.695900000000001e-05, 1.318999999999626e-06, 2.4471999999997607e-05, 1.3059999999995298e-06, 2.8208000000001787e-05, 1.3059999999995298e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.50970000000017e-05, 1.3050000000000561e-06, 2.8847999999997986e-05, 1.2910000000004862e-06, 3.195900000000154e-05, 1.318999999999626e-06, 3.0388999999998723e-05, 1.318999999999626e-06, 3.0070000000000097e-05, 1.318999999999626e-06, 3.195900000000154e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3059999999995298e-06, 2.7597000000000732e-05, 1.318999999999626e-06, 3.163899999999997e-05, 1.3199999999990997e-06, 2.9763000000002093e-05, 1.2919999999999598e-06], 'eventdiff': [0, 1.4860000000019302e-06, 2.7611999999999776e-05, 1.3050000000000561e-06, 3.0388999999998723e-05, 1.3059999999995298e-06, 2.4194000000001686e-05, 1.2919999999999598e-06, 2.7597000000000732e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.3470000000022353e-06, 2.69309999999974e-05, 1.3050000000000561e-06, 2.573700000000137e-05, 1.318999999999626e-06, 2.7943999999998498e-05, 1.26400000000082e-06, 2.79170000000023e-05, 1.3059999999995298e-06, 2.7915999999999358e-05, 1.2919999999999598e-06, 2.3235999999999396e-05, 1.3059999999995298e-06, 3.1026999999999444e-05, 1.3059999999995298e-06, 2.7000000000002716e-05, 1.27800000000039e-06, 3.226399999999713e-05, 1.3050000000000561e-06, 3.22640000000006e-05, 1.3470000000022353e-06, 2.6306000000000246e-05, 1.318999999999626e-06, 3.133399999999745e-05, 1.318999999999626e-06, 3.19440000000025e-05, 1.3059999999995298e-06, 2.9819000000000373e-05, 1.26400000000082e-06, 2.9777999999997667e-05, 1.3059999999995298e-06, 2.5722000000002326e-05, 1.3050000000000561e-06, 2.797299999999711e-05, 1.2500000000012501e-06, 2.2652000000001477e-05, 1.2639999999973506e-06, 3.0111000000002802e-05, 1.27800000000039e-06, 2.293099999999687e-05, 1.3050000000000561e-06, 2.5098000000001175e-05, 1.318999999999626e-06, 2.415299999999898e-05, 1.3330000000026654e-06, 2.5707999999999287e-05, 1.3059999999995298e-06, 3.0403000000001762e-05, 1.318999999999626e-06, 2.25969999999992e-05, 1.3199999999990997e-06, 2.8541999999999457e-05, 1.2910000000004862e-06, 2.4472000000001076e-05, 1.3339999999986696e-06, 3.0069000000000623e-05, 1.3059999999995298e-06, 2.9457999999999568e-05, 1.3330000000026654e-06, 2.695900000000001e-05, 1.318999999999626e-06, 2.4471999999997607e-05, 1.3059999999995298e-06, 2.8208000000001787e-05, 1.3059999999995298e-06, 3.070800000000082e-05, 1.3199999999990997e-06, 2.50970000000017e-05, 1.3050000000000561e-06, 2.8847999999997986e-05, 1.2910000000004862e-06, 3.195900000000154e-05, 1.318999999999626e-06, 3.0388999999998723e-05, 1.318999999999626e-06, 3.0070000000000097e-05, 1.318999999999626e-06, 3.195900000000154e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3059999999995298e-06, 2.7597000000000732e-05, 1.318999999999626e-06, 3.163899999999997e-05, 1.3199999999990997e-06, 2.9763000000002093e-05, 1.2919999999999598e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:30:00.930" endtime="20201030 18:30:00.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.924" endtime="20201030 18:30:00.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:00.940" level="INFO">${RESULT} = [{'diff': 1.4860000000019302e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.3059999999995298e-...</msg>
<status status="PASS" starttime="20201030 18:30:00.937" endtime="20201030 18:30:00.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:00.944" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4860000000019302e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3470000000022353e-06, 1.3050000000000561e-06...</msg>
<status status="PASS" starttime="20201030 18:30:00.941" endtime="20201030 18:30:00.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.950" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:00.949" endtime="20201030 18:30:00.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.953" level="INFO">VALUE: [1.4860000000019302e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3470000000022353e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.26400000000082e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3050000000000561e-06, 1.3470000000022353e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.26400000000082e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.2500000000012501e-06, 1.2639999999973506e-06, 1.27800000000039e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3330000000026654e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.3339999999986696e-06, 1.3059999999995298e-06, 1.3330000000026654e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.2919999999999598e-06]</msg>
<status status="PASS" starttime="20201030 18:30:00.952" endtime="20201030 18:30:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.945" endtime="20201030 18:30:00.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.959" endtime="20201030 18:30:00.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.957" endtime="20201030 18:30:00.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.955" endtime="20201030 18:30:00.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.564" endtime="20201030 18:30:00.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.564" endtime="20201030 18:30:00.980"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.987" endtime="20201030 18:30:00.997"></status>
</kw>
<msg timestamp="20201030 18:30:00.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.986" endtime="20201030 18:30:00.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.000" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.998" endtime="20201030 18:30:01.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.001" endtime="20201030 18:30:01.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.983" endtime="20201030 18:30:01.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.982" endtime="20201030 18:30:01.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.010" endtime="20201030 18:30:01.298"></status>
</kw>
<msg timestamp="20201030 18:30:01.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018539583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.008" endtime="20201030 18:30:01.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018539583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.302" endtime="20201030 18:30:01.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.311" endtime="20201030 18:30:01.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.006" endtime="20201030 18:30:01.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.004" endtime="20201030 18:30:01.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:01.338" level="INFO">${debug} = {'time': [0.018539583, 0.018541069, 0.018568972, 0.018570278, 0.018595069, 0.018596389, 0.018626778, 0.018628097, 0.018652875, 0.018654194, 0.018679917, 0.018681222, 0.018710708, 0.018712042, 0.018734...</msg>
<status status="PASS" starttime="20201030 18:30:01.314" endtime="20201030 18:30:01.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.339" endtime="20201030 18:30:01.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.344" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:01.343" endtime="20201030 18:30:01.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.348" level="INFO">VALUE: {'time': [0.018539583, 0.018541069, 0.018568972, 0.018570278, 0.018595069, 0.018596389, 0.018626778, 0.018628097, 0.018652875, 0.018654194, 0.018679917, 0.018681222, 0.018710708, 0.018712042, 0.018734903, 0.018736222, 0.018768167, 0.0187695, 0.018795847, 0.018797167, 0.018828792, 0.018830097, 0.018854556, 0.018855875, 0.018880069, 0.018881347, 0.018904597, 0.018905889, 0.018930389, 0.018931681, 0.018962708, 0.018964, 0.018986917, 0.018988236, 0.019018, 0.019019361, 0.019045986, 0.019047292, 0.019071806, 0.019073083, 0.019103764, 0.019105083, 0.019135778, 0.019137083, 0.019161556, 0.019162903, 0.019195125, 0.019196431, 0.019220917, 0.019222222, 0.019251986, 0.019253306, 0.019285583, 0.019286875, 0.019311361, 0.019312681, 0.019337444, 0.019338764, 0.019367597, 0.019368958, 0.019398056, 0.019399361, 0.019425417, 0.019426708, 0.019456819, 0.019458097, 0.019489444, 0.019490736, 0.019520819, 0.019522125, 0.019545056, 0.019546417, 0.019575514, 0.019576819, 0.019601597, 0.019602917, 0.019632681, 0.019634, 0.019657847, 0.019659153, 0.019687681, 0.019689014, 0.019719375, 0.019720722, 0.019752014, 0.019753333, 0.019780639, 0.019781917, 0.019808917, 0.019810194, 0.019834653, 0.019835972, 0.019861097, 0.019862375, 0.019885625, 0.019886958, 0.019909514, 0.019910819, 0.019938417, 0.019939736], 'source_diff': [0, 1.4860000000019302e-06, 2.7902999999999262e-05, 1.3059999999995298e-06, 2.4790999999999702e-05, 1.3200000000025691e-06, 3.0388999999998723e-05, 1.318999999999626e-06, 2.4777999999999606e-05, 1.318999999999626e-06, 2.57230000000018e-05, 1.3050000000000561e-06, 2.9485999999998708e-05, 1.334000000002139e-06, 2.286099999999902e-05, 1.318999999999626e-06, 3.19449999999985e-05, 1.3330000000026654e-06, 2.6346999999999482e-05, 1.3199999999990997e-06, 3.16250000000004e-05, 1.3050000000000561e-06, 2.445900000000098e-05, 1.318999999999626e-06, 2.4193999999998217e-05, 1.27800000000039e-06, 2.3249999999998966e-05, 1.2919999999999598e-06, 2.4500000000000216e-05, 1.2919999999999598e-06, 3.102700000000291e-05, 1.2919999999999598e-06, 2.29169999999973e-05, 1.318999999999626e-06, 2.9764000000001567e-05, 1.3609999999983358e-06, 2.662500000000234e-05, 1.3059999999995298e-06, 2.4513999999999786e-05, 1.2770000000009163e-06, 3.068099999999768e-05, 1.318999999999626e-06, 3.069500000000072e-05, 1.3050000000000561e-06, 2.447300000000055e-05, 1.3469999999987659e-06, 3.222200000000189e-05, 1.3059999999995298e-06, 2.4486000000000646e-05, 1.3050000000000561e-06, 2.9763999999998098e-05, 1.3200000000025691e-06, 3.2276999999997225e-05, 1.2919999999999598e-06, 2.4486000000000646e-05, 1.3200000000025691e-06, 2.4762999999997093e-05, 1.3200000000025691e-06, 2.8832999999998943e-05, 1.3609999999983358e-06, 2.9098000000001706e-05, 1.3050000000000561e-06, 2.6055999999999996e-05, 1.2910000000004862e-06, 3.0110999999999333e-05, 1.27800000000039e-06, 3.134700000000101e-05, 1.2919999999999598e-06, 3.0082999999996723e-05, 1.3060000000029992e-06, 2.293100000000034e-05, 1.3609999999983358e-06, 2.9096999999998763e-05, 1.3050000000000561e-06, 2.4777999999999606e-05, 1.3200000000025691e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 2.384700000000045e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.3330000000026654e-06, 3.0360999999999583e-05, 1.3469999999987659e-06, 3.129199999999874e-05, 1.3190000000030955e-06, 2.7305999999997776e-05, 1.27800000000039e-06, 2.6999999999999247e-05, 1.2770000000009163e-06, 2.445900000000098e-05, 1.318999999999626e-06, 2.512500000000084e-05, 1.27800000000039e-06, 2.3249999999998966e-05, 1.332999999999196e-06, 2.2555999999999965e-05, 1.3050000000000561e-06, 2.7598000000000206e-05, 1.318999999999626e-06], 'eventdiff': [0, 1.4860000000019302e-06, 2.7902999999999262e-05, 1.3059999999995298e-06, 2.4790999999999702e-05, 1.3200000000025691e-06, 3.0388999999998723e-05, 1.318999999999626e-06, 2.4777999999999606e-05, 1.318999999999626e-06, 2.57230000000018e-05, 1.3050000000000561e-06, 2.9485999999998708e-05, 1.334000000002139e-06, 2.286099999999902e-05, 1.318999999999626e-06, 3.19449999999985e-05, 1.3330000000026654e-06, 2.6346999999999482e-05, 1.3199999999990997e-06, 3.16250000000004e-05, 1.3050000000000561e-06, 2.445900000000098e-05, 1.318999999999626e-06, 2.4193999999998217e-05, 1.27800000000039e-06, 2.3249999999998966e-05, 1.2919999999999598e-06, 2.4500000000000216e-05, 1.2919999999999598e-06, 3.102700000000291e-05, 1.2919999999999598e-06, 2.29169999999973e-05, 1.318999999999626e-06, 2.9764000000001567e-05, 1.3609999999983358e-06, 2.662500000000234e-05, 1.3059999999995298e-06, 2.4513999999999786e-05, 1.2770000000009163e-06, 3.068099999999768e-05, 1.318999999999626e-06, 3.069500000000072e-05, 1.3050000000000561e-06, 2.447300000000055e-05, 1.3469999999987659e-06, 3.222200000000189e-05, 1.3059999999995298e-06, 2.4486000000000646e-05, 1.3050000000000561e-06, 2.9763999999998098e-05, 1.3200000000025691e-06, 3.2276999999997225e-05, 1.2919999999999598e-06, 2.4486000000000646e-05, 1.3200000000025691e-06, 2.4762999999997093e-05, 1.3200000000025691e-06, 2.8832999999998943e-05, 1.3609999999983358e-06, 2.9098000000001706e-05, 1.3050000000000561e-06, 2.6055999999999996e-05, 1.2910000000004862e-06, 3.0110999999999333e-05, 1.27800000000039e-06, 3.134700000000101e-05, 1.2919999999999598e-06, 3.0082999999996723e-05, 1.3060000000029992e-06, 2.293100000000034e-05, 1.3609999999983358e-06, 2.9096999999998763e-05, 1.3050000000000561e-06, 2.4777999999999606e-05, 1.3200000000025691e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 2.384700000000045e-05, 1.3059999999995298e-06, 2.8527999999999887e-05, 1.3330000000026654e-06, 3.0360999999999583e-05, 1.3469999999987659e-06, 3.129199999999874e-05, 1.3190000000030955e-06, 2.7305999999997776e-05, 1.27800000000039e-06, 2.6999999999999247e-05, 1.2770000000009163e-06, 2.445900000000098e-05, 1.318999999999626e-06, 2.512500000000084e-05, 1.27800000000039e-06, 2.3249999999998966e-05, 1.332999999999196e-06, 2.2555999999999965e-05, 1.3050000000000561e-06, 2.7598000000000206e-05, 1.318999999999626e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:30:01.345" endtime="20201030 18:30:01.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.341" endtime="20201030 18:30:01.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:01.353" level="INFO">${RESULT} = [{'diff': 1.4860000000019302e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3200000000025691e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3050000000000561e-06...</msg>
<status status="PASS" starttime="20201030 18:30:01.350" endtime="20201030 18:30:01.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:01.357" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4860000000019302e-06, 1.3059999999995298e-06, 1.3200000000025691e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.334000000002139e-06, 1.318999999999626e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:01.354" endtime="20201030 18:30:01.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.361" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:01.360" endtime="20201030 18:30:01.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.364" level="INFO">VALUE: [1.4860000000019302e-06, 1.3059999999995298e-06, 1.3200000000025691e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.334000000002139e-06, 1.318999999999626e-06, 1.3330000000026654e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.27800000000039e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3609999999983358e-06, 1.3059999999995298e-06, 1.2770000000009163e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3469999999987659e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3200000000025691e-06, 1.2919999999999598e-06, 1.3200000000025691e-06, 1.3200000000025691e-06, 1.3609999999983358e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.27800000000039e-06, 1.2919999999999598e-06, 1.3060000000029992e-06, 1.3609999999983358e-06, 1.3050000000000561e-06, 1.3200000000025691e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3330000000026654e-06, 1.3469999999987659e-06, 1.3190000000030955e-06, 1.27800000000039e-06, 1.2770000000009163e-06, 1.318999999999626e-06, 1.27800000000039e-06, 1.332999999999196e-06, 1.3050000000000561e-06, 1.318999999999626e-06]</msg>
<status status="PASS" starttime="20201030 18:30:01.362" endtime="20201030 18:30:01.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.358" endtime="20201030 18:30:01.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:01.368" endtime="20201030 18:30:01.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.367" endtime="20201030 18:30:01.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.366" endtime="20201030 18:30:01.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.981" endtime="20201030 18:30:01.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.980" endtime="20201030 18:30:01.389"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.397" endtime="20201030 18:30:01.407"></status>
</kw>
<msg timestamp="20201030 18:30:01.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.396" endtime="20201030 18:30:01.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.408" endtime="20201030 18:30:01.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.411" endtime="20201030 18:30:01.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.393" endtime="20201030 18:30:01.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.391" endtime="20201030 18:30:01.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.420" endtime="20201030 18:30:01.706"></status>
</kw>
<msg timestamp="20201030 18:30:01.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.418" endtime="20201030 18:30:01.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.710" endtime="20201030 18:30:01.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.718" endtime="20201030 18:30:01.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.416" endtime="20201030 18:30:01.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.414" endtime="20201030 18:30:01.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:01.745" level="INFO">${debug} = {'time': [0.019335125, 0.019336625, 0.019360458, 0.019361806, 0.019384694, 0.019386, 0.019414861, 0.019416139, 0.019444069, 0.019445375, 0.019476375, 0.019477681, 0.019503403, 0.019504708, 0.019527625...</msg>
<status status="PASS" starttime="20201030 18:30:01.722" endtime="20201030 18:30:01.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.746" endtime="20201030 18:30:01.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.751" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:01.750" endtime="20201030 18:30:01.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.755" level="INFO">VALUE: {'time': [0.019335125, 0.019336625, 0.019360458, 0.019361806, 0.019384694, 0.019386, 0.019414861, 0.019416139, 0.019444069, 0.019445375, 0.019476375, 0.019477681, 0.019503403, 0.019504708, 0.019527625, 0.019528931, 0.019554042, 0.019555347, 0.019586653, 0.019588, 0.019615556, 0.019616861, 0.019640111, 0.019641417, 0.019666556, 0.019667819, 0.019695403, 0.019696708, 0.019728722, 0.019729986, 0.019755375, 0.019756708, 0.019779611, 0.019780958, 0.0198085, 0.019809861, 0.019838653, 0.019839944, 0.019869403, 0.019870708, 0.019900792, 0.019902111, 0.019933486, 0.019934806, 0.019962639, 0.019963958, 0.019995917, 0.019997208, 0.020019833, 0.020021125, 0.020044708, 0.020046028, 0.020076708, 0.020078, 0.020103097, 0.020104403, 0.020132306, 0.020133611, 0.020164625, 0.020165944, 0.020194458, 0.020195764, 0.020220264, 0.020221542, 0.02025225, 0.020253611, 0.020281778, 0.020283097, 0.020308181, 0.0203095, 0.020333028, 0.020334347, 0.020366625, 0.020367958, 0.020398708, 0.020399972, 0.020426597, 0.020427903, 0.020453931, 0.020455264, 0.020485, 0.020486319, 0.020515764, 0.020517097, 0.020548083, 0.020549417, 0.020575764, 0.020577042, 0.020608069, 0.020609375, 0.020635097, 0.020636403, 0.020666167, 0.020667486, 0.020698181, 0.020699486, 0.020728639, 0.020729958, 0.020756306, 0.020757597], 'source_diff': [0, 1.4999999999980307e-06, 2.383300000000088e-05, 1.3479999999982395e-06, 2.2888000000002157e-05, 1.3059999999995298e-06, 2.8860999999998083e-05, 1.27800000000039e-06, 2.7930000000002397e-05, 1.3059999999995298e-06, 3.099999999999978e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3059999999995298e-06, 2.511100000000127e-05, 1.3050000000000561e-06, 3.130599999999831e-05, 1.3470000000022353e-06, 2.7555999999998027e-05, 1.3050000000000561e-06, 2.3249999999998966e-05, 1.3060000000029992e-06, 2.513900000000041e-05, 1.262999999997877e-06, 2.7584000000000636e-05, 1.3050000000000561e-06, 3.201400000000035e-05, 1.26400000000082e-06, 2.538899999999719e-05, 1.3330000000026654e-06, 2.290299999999773e-05, 1.3470000000022353e-06, 2.7541999999998457e-05, 1.3610000000018052e-06, 2.8791999999999707e-05, 1.2910000000004862e-06, 2.945899999999904e-05, 1.3050000000000561e-06, 3.0083999999999667e-05, 1.318999999999626e-06, 3.137500000000015e-05, 1.3199999999990997e-06, 2.7833000000001412e-05, 1.318999999999626e-06, 3.195899999999807e-05, 1.2910000000004862e-06, 2.262500000000181e-05, 1.2919999999999598e-06, 2.358300000000063e-05, 1.3199999999990997e-06, 3.067999999999821e-05, 1.2919999999999598e-06, 2.50970000000017e-05, 1.3059999999995298e-06, 2.7902999999999262e-05, 1.3050000000000561e-06, 3.101399999999935e-05, 1.3190000000030955e-06, 2.8513999999996847e-05, 1.3060000000029992e-06, 2.4500000000000216e-05, 1.2779999999969205e-06, 3.070800000000082e-05, 1.3610000000018052e-06, 2.816699999999908e-05, 1.318999999999626e-06, 2.5084000000001605e-05, 1.318999999999626e-06, 2.3527999999998356e-05, 1.318999999999626e-06, 3.227800000000017e-05, 1.332999999999196e-06, 3.0750000000003e-05, 1.2639999999973506e-06, 2.662500000000234e-05, 1.3059999999995298e-06, 2.6028000000000856e-05, 1.332999999999196e-06, 2.9735999999998958e-05, 1.318999999999626e-06, 2.944499999999947e-05, 1.3330000000026654e-06, 3.098600000000021e-05, 1.3339999999986696e-06, 2.6346999999999482e-05, 1.27800000000039e-06, 3.1026999999999444e-05, 1.3059999999995298e-06, 2.5722000000002326e-05, 1.3059999999995298e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 3.069500000000072e-05, 1.3050000000000561e-06, 2.9153000000000512e-05, 1.318999999999626e-06, 2.6347999999998956e-05, 1.2910000000004862e-06], 'eventdiff': [0, 1.4999999999980307e-06, 2.383300000000088e-05, 1.3479999999982395e-06, 2.2888000000002157e-05, 1.3059999999995298e-06, 2.8860999999998083e-05, 1.27800000000039e-06, 2.7930000000002397e-05, 1.3059999999995298e-06, 3.099999999999978e-05, 1.3059999999995298e-06, 2.5721999999998857e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3059999999995298e-06, 2.511100000000127e-05, 1.3050000000000561e-06, 3.130599999999831e-05, 1.3470000000022353e-06, 2.7555999999998027e-05, 1.3050000000000561e-06, 2.3249999999998966e-05, 1.3060000000029992e-06, 2.513900000000041e-05, 1.262999999997877e-06, 2.7584000000000636e-05, 1.3050000000000561e-06, 3.201400000000035e-05, 1.26400000000082e-06, 2.538899999999719e-05, 1.3330000000026654e-06, 2.290299999999773e-05, 1.3470000000022353e-06, 2.7541999999998457e-05, 1.3610000000018052e-06, 2.8791999999999707e-05, 1.2910000000004862e-06, 2.945899999999904e-05, 1.3050000000000561e-06, 3.0083999999999667e-05, 1.318999999999626e-06, 3.137500000000015e-05, 1.3199999999990997e-06, 2.7833000000001412e-05, 1.318999999999626e-06, 3.195899999999807e-05, 1.2910000000004862e-06, 2.262500000000181e-05, 1.2919999999999598e-06, 2.358300000000063e-05, 1.3199999999990997e-06, 3.067999999999821e-05, 1.2919999999999598e-06, 2.50970000000017e-05, 1.3059999999995298e-06, 2.7902999999999262e-05, 1.3050000000000561e-06, 3.101399999999935e-05, 1.3190000000030955e-06, 2.8513999999996847e-05, 1.3060000000029992e-06, 2.4500000000000216e-05, 1.2779999999969205e-06, 3.070800000000082e-05, 1.3610000000018052e-06, 2.816699999999908e-05, 1.318999999999626e-06, 2.5084000000001605e-05, 1.318999999999626e-06, 2.3527999999998356e-05, 1.318999999999626e-06, 3.227800000000017e-05, 1.332999999999196e-06, 3.0750000000003e-05, 1.2639999999973506e-06, 2.662500000000234e-05, 1.3059999999995298e-06, 2.6028000000000856e-05, 1.332999999999196e-06, 2.9735999999998958e-05, 1.318999999999626e-06, 2.944499999999947e-05, 1.3330000000026654e-06, 3.098600000000021e-05, 1.3339999999986696e-06, 2.6346999999999482e-05, 1.27800000000039e-06, 3.1026999999999444e-05, 1.3059999999995298e-06, 2.5722000000002326e-05, 1.3059999999995298e-06, 2.9763999999998098e-05, 1.318999999999626e-06, 3.069500000000072e-05, 1.3050000000000561e-06, 2.9153000000000512e-05, 1.318999999999626e-06, 2.6347999999998956e-05, 1.2910000000004862e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:30:01.752" endtime="20201030 18:30:01.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.748" endtime="20201030 18:30:01.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:01.760" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.3479999999982395e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.27800000000039e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3059999999995298e-06...</msg>
<status status="PASS" starttime="20201030 18:30:01.757" endtime="20201030 18:30:01.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:01.765" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.3479999999982395e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, ...</msg>
<status status="PASS" starttime="20201030 18:30:01.761" endtime="20201030 18:30:01.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.769" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:01.768" endtime="20201030 18:30:01.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.772" level="INFO">VALUE: [1.4999999999980307e-06, 1.3479999999982395e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3470000000022353e-06, 1.3050000000000561e-06, 1.3060000000029992e-06, 1.262999999997877e-06, 1.3050000000000561e-06, 1.26400000000082e-06, 1.3330000000026654e-06, 1.3470000000022353e-06, 1.3610000000018052e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3190000000030955e-06, 1.3060000000029992e-06, 1.2779999999969205e-06, 1.3610000000018052e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.332999999999196e-06, 1.2639999999973506e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.318999999999626e-06, 1.3330000000026654e-06, 1.3339999999986696e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.2910000000004862e-06]</msg>
<status status="PASS" starttime="20201030 18:30:01.770" endtime="20201030 18:30:01.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.766" endtime="20201030 18:30:01.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:01.776" endtime="20201030 18:30:01.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.775" endtime="20201030 18:30:01.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.774" endtime="20201030 18:30:01.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.390" endtime="20201030 18:30:01.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.389" endtime="20201030 18:30:01.797"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.805" endtime="20201030 18:30:01.814"></status>
</kw>
<msg timestamp="20201030 18:30:01.815" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.803" endtime="20201030 18:30:01.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.816" endtime="20201030 18:30:01.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.818" endtime="20201030 18:30:01.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.801" endtime="20201030 18:30:01.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.799" endtime="20201030 18:30:01.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.827" endtime="20201030 18:30:02.115"></status>
</kw>
<msg timestamp="20201030 18:30:02.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018483931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.825" endtime="20201030 18:30:02.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018483931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.119" endtime="20201030 18:30:02.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.128" endtime="20201030 18:30:02.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.823" endtime="20201030 18:30:02.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.821" endtime="20201030 18:30:02.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:02.155" level="INFO">${debug} = {'time': [0.018482444, 0.018483931, 0.018515264, 0.018516569, 0.018548208, 0.018549514, 0.018581847, 0.018583097, 0.018614722, 0.018616056, 0.018643653, 0.018645, 0.018670972, 0.018672292, 0.018698333...</msg>
<status status="PASS" starttime="20201030 18:30:02.132" endtime="20201030 18:30:02.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.156" endtime="20201030 18:30:02.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.161" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:02.160" endtime="20201030 18:30:02.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.165" level="INFO">VALUE: {'time': [0.018482444, 0.018483931, 0.018515264, 0.018516569, 0.018548208, 0.018549514, 0.018581847, 0.018583097, 0.018614722, 0.018616056, 0.018643653, 0.018645, 0.018670972, 0.018672292, 0.018698333, 0.018699639, 0.018729111, 0.018730403, 0.018754889, 0.018756194, 0.018786917, 0.018788208, 0.018817361, 0.018818681, 0.018843778, 0.018845069, 0.018875778, 0.018877111, 0.018907208, 0.018908542, 0.018938889, 0.018940208, 0.018970944, 0.018972222, 0.019003583, 0.019004847, 0.0190365, 0.019037792, 0.019061347, 0.019062639, 0.019088361, 0.019089667, 0.019119444, 0.019120806, 0.019146167, 0.019147486, 0.019176653, 0.019177931, 0.019208319, 0.019209625, 0.019237528, 0.019238833, 0.019262056, 0.019263403, 0.019288778, 0.019290097, 0.0193155, 0.019316861, 0.019349069, 0.019350375, 0.019374847, 0.019376194, 0.019405, 0.019406306, 0.019433278, 0.019434583, 0.019463111, 0.019464417, 0.019487958, 0.019489278, 0.019514986, 0.019516347, 0.019543292, 0.019544583, 0.019570306, 0.019571611, 0.019595514, 0.019596778, 0.019627222, 0.019628486, 0.019654514, 0.019655819, 0.019679361, 0.019680667, 0.019708569, 0.019709875, 0.019734042, 0.019735361, 0.019762944, 0.01976425, 0.019793083, 0.019794389, 0.019819792, 0.019821125, 0.019852431, 0.019853833, 0.019880403, 0.019881708, 0.019907431, 0.01990875], 'source_diff': [0, 1.4869999999979344e-06, 3.133300000000144e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06, 3.2332999999998974e-05, 1.2500000000012501e-06, 3.16250000000004e-05, 1.3339999999986696e-06, 2.7597000000000732e-05, 1.3469999999987659e-06, 2.5972000000002576e-05, 1.3199999999990997e-06, 2.6041000000000952e-05, 1.3059999999995298e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 2.4486000000000646e-05, 1.3050000000000561e-06, 3.072299999999986e-05, 1.2910000000004862e-06, 2.9153000000000512e-05, 1.3199999999990997e-06, 2.5096999999998232e-05, 1.2910000000004862e-06, 3.070900000000029e-05, 1.332999999999196e-06, 3.0096999999999763e-05, 1.334000000002139e-06, 3.0347000000000013e-05, 1.318999999999626e-06, 3.073599999999996e-05, 1.27800000000039e-06, 3.136100000000058e-05, 1.2639999999973506e-06, 3.165300000000301e-05, 1.2919999999999598e-06, 2.3554999999998022e-05, 1.2919999999999598e-06, 2.5722000000002326e-05, 1.3059999999995298e-06, 2.9776999999998194e-05, 1.3620000000012789e-06, 2.5360999999998052e-05, 1.318999999999626e-06, 2.9167000000000082e-05, 1.27800000000039e-06, 3.038800000000272e-05, 1.3059999999995298e-06, 2.7902999999999262e-05, 1.3050000000000561e-06, 2.32229999999993e-05, 1.3469999999987659e-06, 2.537500000000109e-05, 1.318999999999626e-06, 2.540300000000023e-05, 1.3610000000018052e-06, 3.220799999999885e-05, 1.3059999999995298e-06, 2.4472000000001076e-05, 1.3469999999987659e-06, 2.8805999999999277e-05, 1.3060000000029992e-06, 2.6971999999996638e-05, 1.3050000000000561e-06, 2.8528000000003356e-05, 1.3059999999995298e-06, 2.3540999999998452e-05, 1.3199999999990997e-06, 2.5708000000002756e-05, 1.3609999999983358e-06, 2.694500000000044e-05, 1.2910000000004862e-06, 2.572299999999833e-05, 1.3050000000000561e-06, 2.39030000000022e-05, 1.2639999999973506e-06, 3.0444000000000998e-05, 1.26400000000082e-06, 2.6028000000000856e-05, 1.3050000000000561e-06, 2.3541999999997926e-05, 1.3059999999995298e-06, 2.7901999999999788e-05, 1.3060000000029992e-06, 2.416699999999855e-05, 1.318999999999626e-06, 2.7583000000001162e-05, 1.3059999999995298e-06, 2.8832999999998943e-05, 1.3059999999995298e-06, 2.540300000000023e-05, 1.332999999999196e-06, 3.130600000000178e-05, 1.4020000000010413e-06, 2.6570000000000066e-05, 1.3050000000000561e-06, 2.572299999999833e-05, 1.318999999999626e-06], 'eventdiff': [0, 1.4869999999979344e-06, 3.133300000000144e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06, 3.2332999999998974e-05, 1.2500000000012501e-06, 3.16250000000004e-05, 1.3339999999986696e-06, 2.7597000000000732e-05, 1.3469999999987659e-06, 2.5972000000002576e-05, 1.3199999999990997e-06, 2.6041000000000952e-05, 1.3059999999995298e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 2.4486000000000646e-05, 1.3050000000000561e-06, 3.072299999999986e-05, 1.2910000000004862e-06, 2.9153000000000512e-05, 1.3199999999990997e-06, 2.5096999999998232e-05, 1.2910000000004862e-06, 3.070900000000029e-05, 1.332999999999196e-06, 3.0096999999999763e-05, 1.334000000002139e-06, 3.0347000000000013e-05, 1.318999999999626e-06, 3.073599999999996e-05, 1.27800000000039e-06, 3.136100000000058e-05, 1.2639999999973506e-06, 3.165300000000301e-05, 1.2919999999999598e-06, 2.3554999999998022e-05, 1.2919999999999598e-06, 2.5722000000002326e-05, 1.3059999999995298e-06, 2.9776999999998194e-05, 1.3620000000012789e-06, 2.5360999999998052e-05, 1.318999999999626e-06, 2.9167000000000082e-05, 1.27800000000039e-06, 3.038800000000272e-05, 1.3059999999995298e-06, 2.7902999999999262e-05, 1.3050000000000561e-06, 2.32229999999993e-05, 1.3469999999987659e-06, 2.537500000000109e-05, 1.318999999999626e-06, 2.540300000000023e-05, 1.3610000000018052e-06, 3.220799999999885e-05, 1.3059999999995298e-06, 2.4472000000001076e-05, 1.3469999999987659e-06, 2.8805999999999277e-05, 1.3060000000029992e-06, 2.6971999999996638e-05, 1.3050000000000561e-06, 2.8528000000003356e-05, 1.3059999999995298e-06, 2.3540999999998452e-05, 1.3199999999990997e-06, 2.5708000000002756e-05, 1.3609999999983358e-06, 2.694500000000044e-05, 1.2910000000004862e-06, 2.572299999999833e-05, 1.3050000000000561e-06, 2.39030000000022e-05, 1.2639999999973506e-06, 3.0444000000000998e-05, 1.26400000000082e-06, 2.6028000000000856e-05, 1.3050000000000561e-06, 2.3541999999997926e-05, 1.3059999999995298e-06, 2.7901999999999788e-05, 1.3060000000029992e-06, 2.416699999999855e-05, 1.318999999999626e-06, 2.7583000000001162e-05, 1.3059999999995298e-06, 2.8832999999998943e-05, 1.3059999999995298e-06, 2.540300000000023e-05, 1.332999999999196e-06, 3.130600000000178e-05, 1.4020000000010413e-06, 2.6570000000000066e-05, 1.3050000000000561e-06, 2.572299999999833e-05, 1.318999999999626e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:30:02.162" endtime="20201030 18:30:02.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.158" endtime="20201030 18:30:02.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:02.171" level="INFO">${RESULT} = [{'diff': 1.4869999999979344e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.2500000000012501e-06}, {'diff': 1.3339999999986696e-06}, {'diff': 1.3469999999987659e-...</msg>
<status status="PASS" starttime="20201030 18:30:02.168" endtime="20201030 18:30:02.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:02.175" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4869999999979344e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.2500000000012501e-06, 1.3339999999986696e-06, 1.3469999999987659e-06, 1.3199999999990997e-06, 1.3059999999995298e-06...</msg>
<status status="PASS" starttime="20201030 18:30:02.172" endtime="20201030 18:30:02.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.180" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:02.179" endtime="20201030 18:30:02.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.182" level="INFO">VALUE: [1.4869999999979344e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.2500000000012501e-06, 1.3339999999986696e-06, 1.3469999999987659e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.332999999999196e-06, 1.334000000002139e-06, 1.318999999999626e-06, 1.27800000000039e-06, 1.2639999999973506e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3620000000012789e-06, 1.318999999999626e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3469999999987659e-06, 1.318999999999626e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3469999999987659e-06, 1.3060000000029992e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3609999999983358e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.2639999999973506e-06, 1.26400000000082e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3060000000029992e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.4020000000010413e-06, 1.3050000000000561e-06, 1.318999999999626e-06]</msg>
<status status="PASS" starttime="20201030 18:30:02.181" endtime="20201030 18:30:02.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.176" endtime="20201030 18:30:02.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:02.187" endtime="20201030 18:30:02.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.185" endtime="20201030 18:30:02.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.184" endtime="20201030 18:30:02.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.798" endtime="20201030 18:30:02.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.797" endtime="20201030 18:30:02.207"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.215" endtime="20201030 18:30:02.225"></status>
</kw>
<msg timestamp="20201030 18:30:02.225" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.213" endtime="20201030 18:30:02.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.226" endtime="20201030 18:30:02.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.228" endtime="20201030 18:30:02.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.211" endtime="20201030 18:30:02.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.209" endtime="20201030 18:30:02.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.237" endtime="20201030 18:30:02.524"></status>
</kw>
<msg timestamp="20201030 18:30:02.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018475431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018476931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.236" endtime="20201030 18:30:02.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018475431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018476931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.528" endtime="20201030 18:30:02.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.537" endtime="20201030 18:30:02.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.233" endtime="20201030 18:30:02.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.232" endtime="20201030 18:30:02.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:02.564" level="INFO">${debug} = {'time': [0.018475431, 0.018476931, 0.018506694, 0.018508014, 0.01853125, 0.018532569, 0.018561694, 0.018563, 0.018594319, 0.018595639, 0.018626333, 0.018627639, 0.018659903, 0.018661222, 0.018683889,...</msg>
<status status="PASS" starttime="20201030 18:30:02.540" endtime="20201030 18:30:02.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.565" endtime="20201030 18:30:02.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.570" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:02.569" endtime="20201030 18:30:02.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.574" level="INFO">VALUE: {'time': [0.018475431, 0.018476931, 0.018506694, 0.018508014, 0.01853125, 0.018532569, 0.018561694, 0.018563, 0.018594319, 0.018595639, 0.018626333, 0.018627639, 0.018659903, 0.018661222, 0.018683889, 0.018685139, 0.018711167, 0.018712458, 0.018743792, 0.018745097, 0.018770208, 0.0187715, 0.018798472, 0.018799778, 0.018832042, 0.018833347, 0.018856264, 0.018857569, 0.018884889, 0.018886153, 0.018910639, 0.018911944, 0.018935833, 0.018937153, 0.018969083, 0.018970375, 0.018999208, 0.0190005, 0.019028389, 0.019029792, 0.019056042, 0.019057375, 0.019089611, 0.019090931, 0.019120375, 0.019121694, 0.019153667, 0.019154986, 0.019182542, 0.019183847, 0.019213319, 0.019214611, 0.019241569, 0.019242889, 0.019269625, 0.019270847, 0.019300972, 0.019302236, 0.019328278, 0.019329569, 0.0193525, 0.019353806, 0.019380778, 0.019382097, 0.019404681, 0.019406, 0.019434819, 0.019436153, 0.019463111, 0.019464417, 0.019496667, 0.019497986, 0.019521542, 0.019522819, 0.019553514, 0.019554833, 0.019587083, 0.019588389, 0.019616, 0.019617333, 0.019640833, 0.019642167, 0.01966475, 0.019666069, 0.019696764, 0.019698083, 0.019724722, 0.019726028, 0.019749583, 0.019750889, 0.019773792, 0.019775097, 0.019798639, 0.019799958, 0.019828792, 0.019830097, 0.0198555, 0.019856819, 0.019884708, 0.019886042], 'source_diff': [0, 1.4999999999980307e-06, 2.9763000000002093e-05, 1.3199999999990997e-06, 2.3235999999999396e-05, 1.318999999999626e-06, 2.9125000000001372e-05, 1.3059999999995298e-06, 3.131900000000187e-05, 1.3199999999990997e-06, 3.069399999999778e-05, 1.3060000000029992e-06, 3.226399999999713e-05, 1.3190000000030955e-06, 2.266699999999705e-05, 1.2500000000012501e-06, 2.6028000000000856e-05, 1.2910000000004862e-06, 3.133399999999745e-05, 1.3050000000000561e-06, 2.511100000000127e-05, 1.2919999999999598e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 3.22640000000006e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3050000000000561e-06, 2.7319999999997346e-05, 1.26400000000082e-06, 2.4486000000000646e-05, 1.3050000000000561e-06, 2.388899999999916e-05, 1.3200000000025691e-06, 3.192999999999946e-05, 1.2919999999999598e-06, 2.8832999999998943e-05, 1.2919999999999598e-06, 2.7888999999999692e-05, 1.403000000000515e-06, 2.6249999999998497e-05, 1.3330000000026654e-06, 3.223599999999799e-05, 1.3199999999990997e-06, 2.9443999999999998e-05, 1.3190000000030955e-06, 3.197299999999764e-05, 1.318999999999626e-06, 2.7556000000001496e-05, 1.3050000000000561e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 2.6958000000000537e-05, 1.3199999999990997e-06, 2.6735999999999427e-05, 1.2220000000021103e-06, 3.0124999999998903e-05, 1.26400000000082e-06, 2.6042000000000426e-05, 1.2910000000004862e-06, 2.293100000000034e-05, 1.3059999999995298e-06, 2.6972000000000107e-05, 1.318999999999626e-06, 2.2583999999999105e-05, 1.318999999999626e-06, 2.8818999999999373e-05, 1.334000000002139e-06, 2.6958000000000537e-05, 1.3059999999995298e-06, 3.224999999999756e-05, 1.318999999999626e-06, 2.3556000000000965e-05, 1.2770000000009163e-06, 3.069500000000072e-05, 1.318999999999626e-06, 3.225000000000103e-05, 1.3059999999995298e-06, 2.7611000000000302e-05, 1.332999999999196e-06, 2.3499999999999216e-05, 1.3339999999986696e-06, 2.25830000000031e-05, 1.318999999999626e-06, 3.069499999999725e-05, 1.3190000000030955e-06, 2.6638999999998442e-05, 1.3059999999995298e-06, 2.355500000000149e-05, 1.3059999999995298e-06, 2.290299999999773e-05, 1.3050000000000561e-06, 2.3542000000001395e-05, 1.318999999999626e-06, 2.8834000000001886e-05, 1.3050000000000561e-06, 2.540300000000023e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3339999999986696e-06], 'eventdiff': [0, 1.4999999999980307e-06, 2.9763000000002093e-05, 1.3199999999990997e-06, 2.3235999999999396e-05, 1.318999999999626e-06, 2.9125000000001372e-05, 1.3059999999995298e-06, 3.131900000000187e-05, 1.3199999999990997e-06, 3.069399999999778e-05, 1.3060000000029992e-06, 3.226399999999713e-05, 1.3190000000030955e-06, 2.266699999999705e-05, 1.2500000000012501e-06, 2.6028000000000856e-05, 1.2910000000004862e-06, 3.133399999999745e-05, 1.3050000000000561e-06, 2.511100000000127e-05, 1.2919999999999598e-06, 2.6972000000000107e-05, 1.3059999999995298e-06, 3.22640000000006e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3050000000000561e-06, 2.7319999999997346e-05, 1.26400000000082e-06, 2.4486000000000646e-05, 1.3050000000000561e-06, 2.388899999999916e-05, 1.3200000000025691e-06, 3.192999999999946e-05, 1.2919999999999598e-06, 2.8832999999998943e-05, 1.2919999999999598e-06, 2.7888999999999692e-05, 1.403000000000515e-06, 2.6249999999998497e-05, 1.3330000000026654e-06, 3.223599999999799e-05, 1.3199999999990997e-06, 2.9443999999999998e-05, 1.3190000000030955e-06, 3.197299999999764e-05, 1.318999999999626e-06, 2.7556000000001496e-05, 1.3050000000000561e-06, 2.9471999999999138e-05, 1.2919999999999598e-06, 2.6958000000000537e-05, 1.3199999999990997e-06, 2.6735999999999427e-05, 1.2220000000021103e-06, 3.0124999999998903e-05, 1.26400000000082e-06, 2.6042000000000426e-05, 1.2910000000004862e-06, 2.293100000000034e-05, 1.3059999999995298e-06, 2.6972000000000107e-05, 1.318999999999626e-06, 2.2583999999999105e-05, 1.318999999999626e-06, 2.8818999999999373e-05, 1.334000000002139e-06, 2.6958000000000537e-05, 1.3059999999995298e-06, 3.224999999999756e-05, 1.318999999999626e-06, 2.3556000000000965e-05, 1.2770000000009163e-06, 3.069500000000072e-05, 1.318999999999626e-06, 3.225000000000103e-05, 1.3059999999995298e-06, 2.7611000000000302e-05, 1.332999999999196e-06, 2.3499999999999216e-05, 1.3339999999986696e-06, 2.25830000000031e-05, 1.318999999999626e-06, 3.069499999999725e-05, 1.3190000000030955e-06, 2.6638999999998442e-05, 1.3059999999995298e-06, 2.355500000000149e-05, 1.3059999999995298e-06, 2.290299999999773e-05, 1.3050000000000561e-06, 2.3542000000001395e-05, 1.318999999999626e-06, 2.8834000000001886e-05, 1.3050000000000561e-06, 2.540300000000023e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3339999999986696e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:30:02.571" endtime="20201030 18:30:02.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.567" endtime="20201030 18:30:02.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:02.579" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.3060000000029992e-0...</msg>
<status status="PASS" starttime="20201030 18:30:02.576" endtime="20201030 18:30:02.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:02.584" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3060000000029992e-06, 1.3190000000030955e-06, 1.2500000000012501e-06,...</msg>
<status status="PASS" starttime="20201030 18:30:02.581" endtime="20201030 18:30:02.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.588" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:02.587" endtime="20201030 18:30:02.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.591" level="INFO">VALUE: [1.4999999999980307e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3060000000029992e-06, 1.3190000000030955e-06, 1.2500000000012501e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.26400000000082e-06, 1.3050000000000561e-06, 1.3200000000025691e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.403000000000515e-06, 1.3330000000026654e-06, 1.3199999999990997e-06, 1.3190000000030955e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.2220000000021103e-06, 1.26400000000082e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.334000000002139e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.2770000000009163e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.3339999999986696e-06, 1.318999999999626e-06, 1.3190000000030955e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3339999999986696e-06]</msg>
<status status="PASS" starttime="20201030 18:30:02.590" endtime="20201030 18:30:02.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.585" endtime="20201030 18:30:02.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:02.596" endtime="20201030 18:30:02.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.594" endtime="20201030 18:30:02.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.593" endtime="20201030 18:30:02.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.208" endtime="20201030 18:30:02.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.208" endtime="20201030 18:30:02.616"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.625" endtime="20201030 18:30:02.635"></status>
</kw>
<msg timestamp="20201030 18:30:02.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.624" endtime="20201030 18:30:02.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.638" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.636" endtime="20201030 18:30:02.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.639" endtime="20201030 18:30:02.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.621" endtime="20201030 18:30:02.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.618" endtime="20201030 18:30:02.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.647" endtime="20201030 18:30:02.934"></status>
</kw>
<msg timestamp="20201030 18:30:02.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.646" endtime="20201030 18:30:02.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.938" endtime="20201030 18:30:02.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.947" endtime="20201030 18:30:02.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.643" endtime="20201030 18:30:02.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.642" endtime="20201030 18:30:02.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:02.974" level="INFO">${debug} = {'time': [0.019444944, 0.019446458, 0.019478097, 0.019479389, 0.01950575, 0.019507042, 0.019539319, 0.019540653, 0.019563847, 0.019565181, 0.019597125, 0.019598417, 0.019630375, 0.019631681, 0.0196552...</msg>
<status status="PASS" starttime="20201030 18:30:02.950" endtime="20201030 18:30:02.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.975" endtime="20201030 18:30:02.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.980" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:02.979" endtime="20201030 18:30:02.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.984" level="INFO">VALUE: {'time': [0.019444944, 0.019446458, 0.019478097, 0.019479389, 0.01950575, 0.019507042, 0.019539319, 0.019540653, 0.019563847, 0.019565181, 0.019597125, 0.019598417, 0.019630375, 0.019631681, 0.019655236, 0.019656542, 0.019683819, 0.019685139, 0.019708403, 0.019709681, 0.019741653, 0.019742972, 0.019765569, 0.019766861, 0.019792903, 0.019794208, 0.019819681, 0.019820944, 0.019849833, 0.019851097, 0.019875569, 0.019876889, 0.019902306, 0.019903597, 0.019934056, 0.019935333, 0.019965403, 0.019966694, 0.019998653, 0.019999986, 0.020032222, 0.020033528, 0.020065486, 0.020066792, 0.020095639, 0.020096944, 0.020128278, 0.020129583, 0.020160903, 0.020162208, 0.020191667, 0.020192972, 0.020220875, 0.020222194, 0.020248528, 0.020249847, 0.020279292, 0.020280611, 0.020303528, 0.020304833, 0.020334292, 0.020335597, 0.020364125, 0.020365472, 0.020391514, 0.020392778, 0.020425097, 0.020426347, 0.020449306, 0.020450583, 0.020473194, 0.020474514, 0.020497764, 0.020499042, 0.020522917, 0.020524222, 0.02055025, 0.020551625, 0.020582264, 0.020583569, 0.020613069, 0.020614389, 0.02063725, 0.020638569, 0.020668042, 0.020669333, 0.020693208, 0.0206945, 0.020717417, 0.020718722, 0.020741333, 0.020742639, 0.020773042, 0.020774347, 0.020803514, 0.020804833, 0.020837083, 0.020838403, 0.020868486, 0.020869792], 'source_diff': [0, 1.51400000000107e-06, 3.163899999999997e-05, 1.2919999999999598e-06, 2.6360999999999052e-05, 1.2919999999999598e-06, 3.2277000000000694e-05, 1.334000000002139e-06, 2.3193999999997217e-05, 1.334000000002139e-06, 3.194399999999903e-05, 1.2919999999999598e-06, 3.19579999999986e-05, 1.3060000000029992e-06, 2.3554999999998022e-05, 1.3059999999995298e-06, 2.7277000000002632e-05, 1.3199999999990997e-06, 2.3263999999998536e-05, 1.27800000000039e-06, 3.197200000000164e-05, 1.318999999999626e-06, 2.25969999999992e-05, 1.2919999999999598e-06, 2.6042000000000426e-05, 1.3050000000000561e-06, 2.547299999999808e-05, 1.2630000000013464e-06, 2.8889000000000692e-05, 1.26400000000082e-06, 2.4471999999997607e-05, 1.3199999999990997e-06, 2.541700000000327e-05, 1.2909999999970168e-06, 3.045900000000004e-05, 1.2770000000009163e-06, 3.0070000000000097e-05, 1.2910000000004862e-06, 3.195900000000154e-05, 1.332999999999196e-06, 3.223599999999799e-05, 1.3059999999995298e-06, 3.195800000000207e-05, 1.3059999999995298e-06, 2.8846999999998513e-05, 1.3050000000000561e-06, 3.133400000000092e-05, 1.3050000000000561e-06, 3.132000000000135e-05, 1.3050000000000561e-06, 2.945899999999904e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.318999999999626e-06, 2.6333999999999386e-05, 1.3190000000030955e-06, 2.944499999999947e-05, 1.318999999999626e-06, 2.291700000000077e-05, 1.3050000000000561e-06, 2.945899999999904e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3469999999987659e-06, 2.6042000000000426e-05, 1.26400000000082e-06, 3.2318999999999404e-05, 1.2500000000012501e-06, 2.295899999999948e-05, 1.2770000000009163e-06, 2.261099999999877e-05, 1.3199999999990997e-06, 2.3250000000002435e-05, 1.2779999999969205e-06, 2.387500000000306e-05, 1.3050000000000561e-06, 2.6027999999997387e-05, 1.3750000000013751e-06, 3.063899999999897e-05, 1.3050000000000561e-06, 2.9500000000001747e-05, 1.3199999999990997e-06, 2.286099999999902e-05, 1.318999999999626e-06, 2.947300000000208e-05, 1.2910000000004862e-06, 2.387499999999959e-05, 1.2919999999999598e-06, 2.29169999999973e-05, 1.3050000000000561e-06, 2.261100000000224e-05, 1.3059999999995298e-06, 3.0402999999998293e-05, 1.3050000000000561e-06, 2.9167000000000082e-05, 1.318999999999626e-06, 3.225000000000103e-05, 1.3199999999990997e-06, 3.0083000000000193e-05, 1.3060000000029992e-06], 'eventdiff': [0, 1.51400000000107e-06, 3.163899999999997e-05, 1.2919999999999598e-06, 2.6360999999999052e-05, 1.2919999999999598e-06, 3.2277000000000694e-05, 1.334000000002139e-06, 2.3193999999997217e-05, 1.334000000002139e-06, 3.194399999999903e-05, 1.2919999999999598e-06, 3.19579999999986e-05, 1.3060000000029992e-06, 2.3554999999998022e-05, 1.3059999999995298e-06, 2.7277000000002632e-05, 1.3199999999990997e-06, 2.3263999999998536e-05, 1.27800000000039e-06, 3.197200000000164e-05, 1.318999999999626e-06, 2.25969999999992e-05, 1.2919999999999598e-06, 2.6042000000000426e-05, 1.3050000000000561e-06, 2.547299999999808e-05, 1.2630000000013464e-06, 2.8889000000000692e-05, 1.26400000000082e-06, 2.4471999999997607e-05, 1.3199999999990997e-06, 2.541700000000327e-05, 1.2909999999970168e-06, 3.045900000000004e-05, 1.2770000000009163e-06, 3.0070000000000097e-05, 1.2910000000004862e-06, 3.195900000000154e-05, 1.332999999999196e-06, 3.223599999999799e-05, 1.3059999999995298e-06, 3.195800000000207e-05, 1.3059999999995298e-06, 2.8846999999998513e-05, 1.3050000000000561e-06, 3.133400000000092e-05, 1.3050000000000561e-06, 3.132000000000135e-05, 1.3050000000000561e-06, 2.945899999999904e-05, 1.3050000000000561e-06, 2.7902999999999262e-05, 1.318999999999626e-06, 2.6333999999999386e-05, 1.3190000000030955e-06, 2.944499999999947e-05, 1.318999999999626e-06, 2.291700000000077e-05, 1.3050000000000561e-06, 2.945899999999904e-05, 1.3050000000000561e-06, 2.8527999999999887e-05, 1.3469999999987659e-06, 2.6042000000000426e-05, 1.26400000000082e-06, 3.2318999999999404e-05, 1.2500000000012501e-06, 2.295899999999948e-05, 1.2770000000009163e-06, 2.261099999999877e-05, 1.3199999999990997e-06, 2.3250000000002435e-05, 1.2779999999969205e-06, 2.387500000000306e-05, 1.3050000000000561e-06, 2.6027999999997387e-05, 1.3750000000013751e-06, 3.063899999999897e-05, 1.3050000000000561e-06, 2.9500000000001747e-05, 1.3199999999990997e-06, 2.286099999999902e-05, 1.318999999999626e-06, 2.947300000000208e-05, 1.2910000000004862e-06, 2.387499999999959e-05, 1.2919999999999598e-06, 2.29169999999973e-05, 1.3050000000000561e-06, 2.261100000000224e-05, 1.3059999999995298e-06, 3.0402999999998293e-05, 1.3050000000000561e-06, 2.9167000000000082e-05, 1.318999999999626e-06, 3.225000000000103e-05, 1.3199999999990997e-06, 3.0083000000000193e-05, 1.3060000000029992e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:30:02.981" endtime="20201030 18:30:02.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.977" endtime="20201030 18:30:02.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:02.989" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.2919999999999598e-06}, {'diff': 1.334000000002139e-06}, {'diff': 1.334000000002139e-06}, {'diff': 1.2919999999999598e-06},...</msg>
<status status="PASS" starttime="20201030 18:30:02.986" endtime="20201030 18:30:02.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:02.994" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.51400000000107e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.334000000002139e-06, 1.334000000002139e-06, 1.2919999999999598e-06, 1.3060000000029992e-06, 1.3059999999995298e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:02.990" endtime="20201030 18:30:02.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.998" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:02.997" endtime="20201030 18:30:02.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.001" level="INFO">VALUE: [1.51400000000107e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.334000000002139e-06, 1.334000000002139e-06, 1.2919999999999598e-06, 1.3060000000029992e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.27800000000039e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.2630000000013464e-06, 1.26400000000082e-06, 1.3199999999990997e-06, 1.2909999999970168e-06, 1.2770000000009163e-06, 1.2910000000004862e-06, 1.332999999999196e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3190000000030955e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3469999999987659e-06, 1.26400000000082e-06, 1.2500000000012501e-06, 1.2770000000009163e-06, 1.3199999999990997e-06, 1.2779999999969205e-06, 1.3050000000000561e-06, 1.3750000000013751e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.3060000000029992e-06]</msg>
<status status="PASS" starttime="20201030 18:30:02.999" endtime="20201030 18:30:03.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.995" endtime="20201030 18:30:03.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.005" endtime="20201030 18:30:03.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.003" endtime="20201030 18:30:03.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.002" endtime="20201030 18:30:03.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.617" endtime="20201030 18:30:03.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.617" endtime="20201030 18:30:03.026"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.033" endtime="20201030 18:30:03.043"></status>
</kw>
<msg timestamp="20201030 18:30:03.043" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.032" endtime="20201030 18:30:03.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.044" endtime="20201030 18:30:03.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.047" endtime="20201030 18:30:03.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.029" endtime="20201030 18:30:03.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.028" endtime="20201030 18:30:03.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.056" endtime="20201030 18:30:03.342"></status>
</kw>
<msg timestamp="20201030 18:30:03.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018469208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018470694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.054" endtime="20201030 18:30:03.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018469208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018470694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.346" endtime="20201030 18:30:03.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.354" endtime="20201030 18:30:03.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.052" endtime="20201030 18:30:03.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.050" endtime="20201030 18:30:03.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:03.381" level="INFO">${debug} = {'time': [0.018469208, 0.018470694, 0.018495806, 0.018497111, 0.018527181, 0.018528514, 0.018554833, 0.018556167, 0.018588431, 0.018589722, 0.018617319, 0.018618625, 0.018649347, 0.018650639, 0.018682...</msg>
<status status="PASS" starttime="20201030 18:30:03.358" endtime="20201030 18:30:03.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.382" endtime="20201030 18:30:03.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.387" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:03.386" endtime="20201030 18:30:03.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.391" level="INFO">VALUE: {'time': [0.018469208, 0.018470694, 0.018495806, 0.018497111, 0.018527181, 0.018528514, 0.018554833, 0.018556167, 0.018588431, 0.018589722, 0.018617319, 0.018618625, 0.018649347, 0.018650639, 0.018682292, 0.018683583, 0.01871025, 0.018711542, 0.018734792, 0.018736083, 0.018762181, 0.018763431, 0.018794125, 0.018795458, 0.018823667, 0.018824958, 0.018853486, 0.018854792, 0.018885819, 0.018887153, 0.018914417, 0.018915778, 0.01894175, 0.018943056, 0.018965972, 0.018967292, 0.018997667, 0.018998986, 0.019030944, 0.019032236, 0.019061083, 0.019062403, 0.019094333, 0.019095639, 0.019118264, 0.019119597, 0.019144667, 0.019145972, 0.019168889, 0.019170194, 0.019200319, 0.019201583, 0.01922575, 0.019227097, 0.019254028, 0.019255347, 0.019282347, 0.019283611, 0.019307153, 0.019308472, 0.019339167, 0.0193405, 0.019364653, 0.019365958, 0.019397903, 0.019399222, 0.019424625, 0.019425931, 0.019450097, 0.019451403, 0.019475597, 0.019476875, 0.019505722, 0.019507028, 0.019530875, 0.019532194, 0.019556667, 0.019558, 0.019588375, 0.019589681, 0.019617583, 0.019618903, 0.019642139, 0.019643444, 0.019675083, 0.019676389, 0.019705542, 0.019706847, 0.019736306, 0.019737653, 0.019769264, 0.019770569, 0.019800694, 0.019801972, 0.019829875, 0.019831181, 0.019861264, 0.019862583, 0.019890472, 0.019891778], 'source_diff': [0, 1.4859999999984608e-06, 2.5112000000000745e-05, 1.3050000000000561e-06, 3.0070000000000097e-05, 1.332999999999196e-06, 2.6319000000000342e-05, 1.3339999999986696e-06, 3.22640000000006e-05, 1.2910000000004862e-06, 2.7597000000000732e-05, 1.3059999999995298e-06, 3.072200000000039e-05, 1.2919999999999598e-06, 3.165299999999954e-05, 1.2910000000004862e-06, 2.666700000000105e-05, 1.2919999999999598e-06, 2.3249999999998966e-05, 1.2910000000004862e-06, 2.6097999999998706e-05, 1.2500000000012501e-06, 3.069399999999778e-05, 1.3330000000026654e-06, 2.820899999999779e-05, 1.2910000000004862e-06, 2.8527999999999887e-05, 1.3059999999995298e-06, 3.102700000000291e-05, 1.3339999999986696e-06, 2.7263999999999067e-05, 1.3610000000018052e-06, 2.5971999999999107e-05, 1.3059999999995298e-06, 2.2916000000001296e-05, 1.3199999999990997e-06, 3.0374999999999153e-05, 1.318999999999626e-06, 3.195800000000207e-05, 1.2919999999999598e-06, 2.8846999999998513e-05, 1.3199999999990997e-06, 3.193000000000293e-05, 1.3059999999995298e-06, 2.262499999999834e-05, 1.332999999999196e-06, 2.5070000000002035e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3050000000000561e-06, 3.0124999999998903e-05, 1.26400000000082e-06, 2.416699999999855e-05, 1.3469999999987659e-06, 2.693100000000087e-05, 1.318999999999626e-06, 2.6999999999999247e-05, 1.26400000000082e-06, 2.3542000000001395e-05, 1.318999999999626e-06, 3.069500000000072e-05, 1.332999999999196e-06, 2.415299999999898e-05, 1.3050000000000561e-06, 3.194500000000197e-05, 1.318999999999626e-06, 2.540300000000023e-05, 1.3059999999995298e-06, 2.4165999999999077e-05, 1.3059999999995298e-06, 2.4194000000001686e-05, 1.27800000000039e-06, 2.8846999999998513e-05, 1.3059999999995298e-06, 2.384700000000045e-05, 1.318999999999626e-06, 2.447300000000055e-05, 1.332999999999196e-06, 3.0375000000002622e-05, 1.3059999999995298e-06, 2.7901999999999788e-05, 1.3199999999990997e-06, 2.3235999999999396e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06, 2.9153000000000512e-05, 1.3050000000000561e-06, 2.945899999999904e-05, 1.3470000000022353e-06, 3.161100000000083e-05, 1.3050000000000561e-06, 3.0124999999998903e-05, 1.27800000000039e-06, 2.7902999999999262e-05, 1.3059999999995298e-06, 3.0083000000000193e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3059999999995298e-06], 'eventdiff': [0, 1.4859999999984608e-06, 2.5112000000000745e-05, 1.3050000000000561e-06, 3.0070000000000097e-05, 1.332999999999196e-06, 2.6319000000000342e-05, 1.3339999999986696e-06, 3.22640000000006e-05, 1.2910000000004862e-06, 2.7597000000000732e-05, 1.3059999999995298e-06, 3.072200000000039e-05, 1.2919999999999598e-06, 3.165299999999954e-05, 1.2910000000004862e-06, 2.666700000000105e-05, 1.2919999999999598e-06, 2.3249999999998966e-05, 1.2910000000004862e-06, 2.6097999999998706e-05, 1.2500000000012501e-06, 3.069399999999778e-05, 1.3330000000026654e-06, 2.820899999999779e-05, 1.2910000000004862e-06, 2.8527999999999887e-05, 1.3059999999995298e-06, 3.102700000000291e-05, 1.3339999999986696e-06, 2.7263999999999067e-05, 1.3610000000018052e-06, 2.5971999999999107e-05, 1.3059999999995298e-06, 2.2916000000001296e-05, 1.3199999999990997e-06, 3.0374999999999153e-05, 1.318999999999626e-06, 3.195800000000207e-05, 1.2919999999999598e-06, 2.8846999999998513e-05, 1.3199999999990997e-06, 3.193000000000293e-05, 1.3059999999995298e-06, 2.262499999999834e-05, 1.332999999999196e-06, 2.5070000000002035e-05, 1.3050000000000561e-06, 2.291700000000077e-05, 1.3050000000000561e-06, 3.0124999999998903e-05, 1.26400000000082e-06, 2.416699999999855e-05, 1.3469999999987659e-06, 2.693100000000087e-05, 1.318999999999626e-06, 2.6999999999999247e-05, 1.26400000000082e-06, 2.3542000000001395e-05, 1.318999999999626e-06, 3.069500000000072e-05, 1.332999999999196e-06, 2.415299999999898e-05, 1.3050000000000561e-06, 3.194500000000197e-05, 1.318999999999626e-06, 2.540300000000023e-05, 1.3059999999995298e-06, 2.4165999999999077e-05, 1.3059999999995298e-06, 2.4194000000001686e-05, 1.27800000000039e-06, 2.8846999999998513e-05, 1.3059999999995298e-06, 2.384700000000045e-05, 1.318999999999626e-06, 2.447300000000055e-05, 1.332999999999196e-06, 3.0375000000002622e-05, 1.3059999999995298e-06, 2.7901999999999788e-05, 1.3199999999990997e-06, 2.3235999999999396e-05, 1.3050000000000561e-06, 3.163899999999997e-05, 1.3059999999995298e-06, 2.9153000000000512e-05, 1.3050000000000561e-06, 2.945899999999904e-05, 1.3470000000022353e-06, 3.161100000000083e-05, 1.3050000000000561e-06, 3.0124999999998903e-05, 1.27800000000039e-06, 2.7902999999999262e-05, 1.3059999999995298e-06, 3.0083000000000193e-05, 1.318999999999626e-06, 2.7888999999999692e-05, 1.3059999999995298e-06], 'source}</msg>
<status status="PASS" starttime="20201030 18:30:03.388" endtime="20201030 18:30:03.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.384" endtime="20201030 18:30:03.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.396" level="INFO">${RESULT} = [{'diff': 1.4859999999984608e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.332999999999196e-06}, {'diff': 1.3339999999986696e-06}, {'diff': 1.2910000000004862e-06}, {'diff': 1.3059999999995298e-0...</msg>
<status status="PASS" starttime="20201030 18:30:03.393" endtime="20201030 18:30:03.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:03.400" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4859999999984608e-06, 1.3050000000000561e-06, 1.332999999999196e-06, 1.3339999999986696e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.2910000000004862e-06,...</msg>
<status status="PASS" starttime="20201030 18:30:03.397" endtime="20201030 18:30:03.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.405" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:03.404" endtime="20201030 18:30:03.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.408" level="INFO">VALUE: [1.4859999999984608e-06, 1.3050000000000561e-06, 1.332999999999196e-06, 1.3339999999986696e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.2910000000004862e-06, 1.2919999999999598e-06, 1.2910000000004862e-06, 1.2500000000012501e-06, 1.3330000000026654e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.3339999999986696e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.26400000000082e-06, 1.3469999999987659e-06, 1.318999999999626e-06, 1.26400000000082e-06, 1.318999999999626e-06, 1.332999999999196e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.332999999999196e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3470000000022353e-06, 1.3050000000000561e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201030 18:30:03.406" endtime="20201030 18:30:03.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.401" endtime="20201030 18:30:03.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.412" endtime="20201030 18:30:03.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.411" endtime="20201030 18:30:03.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.409" endtime="20201030 18:30:03.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.026" endtime="20201030 18:30:03.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.026" endtime="20201030 18:30:03.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.230" endtime="20201030 18:30:03.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.437" endtime="20201030 18:30:03.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.435" endtime="20201030 18:30:03.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.434" endtime="20201030 18:30:03.457"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:55.137" endtime="20201030 18:30:03.457" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.464" endtime="20201030 18:30:03.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.462" endtime="20201030 18:30:03.484"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.496" endtime="20201030 18:30:03.509"></status>
</kw>
<msg timestamp="20201030 18:30:03.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.495" endtime="20201030 18:30:03.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.512" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.510" endtime="20201030 18:30:03.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.515" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:03.513" endtime="20201030 18:30:03.515"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:03.492" endtime="20201030 18:30:03.516"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:03.490" endtime="20201030 18:30:03.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.489" endtime="20201030 18:30:03.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:03.521" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:03.520" endtime="20201030 18:30:03.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.518" endtime="20201030 18:30:03.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.488" endtime="20201030 18:30:03.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.487" endtime="20201030 18:30:03.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.523" endtime="20201030 18:30:03.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.486" endtime="20201030 18:30:03.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.484" endtime="20201030 18:30:03.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.461" endtime="20201030 18:30:03.526"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.534" endtime="20201030 18:30:03.545"></status>
</kw>
<msg timestamp="20201030 18:30:03.546" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.533" endtime="20201030 18:30:03.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.548" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.547" endtime="20201030 18:30:03.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.549" endtime="20201030 18:30:03.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.530" endtime="20201030 18:30:03.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.528" endtime="20201030 18:30:03.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.558" endtime="20201030 18:30:03.843"></status>
</kw>
<msg timestamp="20201030 18:30:03.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061192486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061202111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.556" endtime="20201030 18:30:03.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061192486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061202111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.847" endtime="20201030 18:30:03.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.857" endtime="20201030 18:30:03.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.554" endtime="20201030 18:30:03.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.552" endtime="20201030 18:30:03.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.866" level="INFO">${RESULT} = [{'diff': 9.624999999999218e-06}, {'diff': 9.486000000002992e-06}, {'diff': 9.556000000000842e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.527999999994763e-06}, {'diff': 9.486000000002992e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:03.862" endtime="20201030 18:30:03.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:03.873" level="INFO">${OVERHEAD} = {'diff': [9.624999999999218e-06, 9.486000000002992e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.527999999994763e-06, 9.486000000002992e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.5140...</msg>
<status status="PASS" starttime="20201030 18:30:03.867" endtime="20201030 18:30:03.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.879" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:03.878" endtime="20201030 18:30:03.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.883" level="INFO">VALUE: [9.624999999999218e-06, 9.486000000002992e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.527999999994763e-06, 9.486000000002992e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.583999999999981e-06, 9.528000000001702e-06, 9.513999999995193e-06, 9.583999999999981e-06, 9.541999999994333e-06, 9.459000000003326e-06, 9.569000000000938e-06, 9.540999999994859e-06, 9.485999999996053e-06, 9.527000000002228e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.486000000002992e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.555999999993903e-06, 9.52800000000864e-06, 9.52800000000864e-06, 9.555999999993903e-06, 9.554999999994429e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.486000000002992e-06, 9.527999999994763e-06, 9.52800000000864e-06, 9.542000000001272e-06, 9.486000000002992e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201030 18:30:03.881" endtime="20201030 18:30:03.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.874" endtime="20201030 18:30:03.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.889" endtime="20201030 18:30:03.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.887" endtime="20201030 18:30:03.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.886" endtime="20201030 18:30:03.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.527" endtime="20201030 18:30:03.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.527" endtime="20201030 18:30:03.911"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.918" endtime="20201030 18:30:03.929"></status>
</kw>
<msg timestamp="20201030 18:30:03.930" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.917" endtime="20201030 18:30:03.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.932" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.931" endtime="20201030 18:30:03.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.933" endtime="20201030 18:30:03.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.914" endtime="20201030 18:30:03.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.913" endtime="20201030 18:30:03.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.942" endtime="20201030 18:30:04.229"></status>
</kw>
<msg timestamp="20201030 18:30:04.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019171486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.941" endtime="20201030 18:30:04.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019171486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.233" endtime="20201030 18:30:04.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.241" endtime="20201030 18:30:04.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.938" endtime="20201030 18:30:04.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.936" endtime="20201030 18:30:04.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.248" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.541999999997802e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.527999999998232e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:04.244" endtime="20201030 18:30:04.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:04.253" level="INFO">${OVERHEAD} = {'diff': [9.597000000000078e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.5280...</msg>
<status status="PASS" starttime="20201030 18:30:04.249" endtime="20201030 18:30:04.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.257" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:04.256" endtime="20201030 18:30:04.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.259" level="INFO">VALUE: [9.597000000000078e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.526999999998759e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.583999999999981e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.486000000002992e-06, 9.458999999999856e-06, 9.570000000000412e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.443999999997343e-06, 9.528000000001702e-06, 9.582999999997038e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.526999999998759e-06, 9.556000000000842e-06, 9.486999999998996e-06, 9.570000000000412e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.527000000002228e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201030 18:30:04.258" endtime="20201030 18:30:04.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.254" endtime="20201030 18:30:04.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.264" endtime="20201030 18:30:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.262" endtime="20201030 18:30:04.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.261" endtime="20201030 18:30:04.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.911" endtime="20201030 18:30:04.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.911" endtime="20201030 18:30:04.285"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.292" endtime="20201030 18:30:04.303"></status>
</kw>
<msg timestamp="20201030 18:30:04.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.291" endtime="20201030 18:30:04.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.305" endtime="20201030 18:30:04.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.307" endtime="20201030 18:30:04.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.288" endtime="20201030 18:30:04.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.287" endtime="20201030 18:30:04.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.317" endtime="20201030 18:30:04.602"></status>
</kw>
<msg timestamp="20201030 18:30:04.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019074417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019084028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.315" endtime="20201030 18:30:04.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019074417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019084028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.607" endtime="20201030 18:30:04.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.615" endtime="20201030 18:30:04.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.312" endtime="20201030 18:30:04.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.310" endtime="20201030 18:30:04.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.623" level="INFO">${RESULT} = [{'diff': 9.610999999999648e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.540999999998329e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.555000000001368e-06}, {'diff': 9.541999999997802e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:04.619" endtime="20201030 18:30:04.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:04.627" level="INFO">${OVERHEAD} = {'diff': [9.610999999999648e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.5139...</msg>
<status status="PASS" starttime="20201030 18:30:04.624" endtime="20201030 18:30:04.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.631" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:04.630" endtime="20201030 18:30:04.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.633" level="INFO">VALUE: [9.610999999999648e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.513999999998662e-06, 9.597000000000078e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.611000000003117e-06, 9.542000000001272e-06, 9.486999999998996e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.512999999999189e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.527000000002228e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.583999999999981e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.485999999999523e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.527999999998232e-06]</msg>
<status status="PASS" starttime="20201030 18:30:04.632" endtime="20201030 18:30:04.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.627" endtime="20201030 18:30:04.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.638" endtime="20201030 18:30:04.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.636" endtime="20201030 18:30:04.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.635" endtime="20201030 18:30:04.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.285" endtime="20201030 18:30:04.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.285" endtime="20201030 18:30:04.658"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.667" endtime="20201030 18:30:04.678"></status>
</kw>
<msg timestamp="20201030 18:30:04.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.665" endtime="20201030 18:30:04.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.679" endtime="20201030 18:30:04.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.682" endtime="20201030 18:30:04.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.663" endtime="20201030 18:30:04.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.660" endtime="20201030 18:30:04.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.691" endtime="20201030 18:30:04.977"></status>
</kw>
<msg timestamp="20201030 18:30:04.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.689" endtime="20201030 18:30:04.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.981" endtime="20201030 18:30:04.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.989" endtime="20201030 18:30:04.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.687" endtime="20201030 18:30:04.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.685" endtime="20201030 18:30:04.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.997" level="INFO">${RESULT} = [{'diff': 9.583000000000508e-06}, {'diff': 9.541999999997802e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.499999999999093e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.514000000002132e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:04.994" endtime="20201030 18:30:04.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:05.003" level="INFO">${OVERHEAD} = {'diff': [9.583000000000508e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.554999999997899e-06, 9.5279...</msg>
<status status="PASS" starttime="20201030 18:30:04.998" endtime="20201030 18:30:05.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.007" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:05.006" endtime="20201030 18:30:05.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.010" level="INFO">VALUE: [9.583000000000508e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.554999999997899e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.527000000002228e-06, 9.500000000002562e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.541999999997802e-06, 9.610999999999648e-06, 9.471999999999953e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.471999999999953e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527000000002228e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.513000000002658e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.541999999997802e-06, 9.471999999999953e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.583000000000508e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.486000000002992e-06, 9.554999999997899e-06, 9.527999999998232e-06]</msg>
<status status="PASS" starttime="20201030 18:30:05.008" endtime="20201030 18:30:05.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.004" endtime="20201030 18:30:05.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.014" endtime="20201030 18:30:05.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.013" endtime="20201030 18:30:05.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.012" endtime="20201030 18:30:05.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.659" endtime="20201030 18:30:05.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.659" endtime="20201030 18:30:05.035"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.045" endtime="20201030 18:30:05.056"></status>
</kw>
<msg timestamp="20201030 18:30:05.056" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.043" endtime="20201030 18:30:05.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.063" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.058" endtime="20201030 18:30:05.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.064" endtime="20201030 18:30:05.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.040" endtime="20201030 18:30:05.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.038" endtime="20201030 18:30:05.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.073" endtime="20201030 18:30:05.359"></status>
</kw>
<msg timestamp="20201030 18:30:05.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021124236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.072" endtime="20201030 18:30:05.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021124236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.364" endtime="20201030 18:30:05.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.374" endtime="20201030 18:30:05.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.069" endtime="20201030 18:30:05.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.067" endtime="20201030 18:30:05.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.381" level="INFO">${RESULT} = [{'diff': 9.583000000000508e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.542000000001272e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:05.378" endtime="20201030 18:30:05.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:05.386" level="INFO">${OVERHEAD} = {'diff': [9.583000000000508e-06, 9.597000000000078e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.5419...</msg>
<status status="PASS" starttime="20201030 18:30:05.382" endtime="20201030 18:30:05.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.390" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:05.389" endtime="20201030 18:30:05.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.392" level="INFO">VALUE: [9.583000000000508e-06, 9.597000000000078e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.527000000002228e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.512999999999189e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527000000002228e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.570000000000412e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.513999999998662e-06]</msg>
<status status="PASS" starttime="20201030 18:30:05.391" endtime="20201030 18:30:05.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.387" endtime="20201030 18:30:05.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.397" endtime="20201030 18:30:05.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.395" endtime="20201030 18:30:05.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.394" endtime="20201030 18:30:05.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.036" endtime="20201030 18:30:05.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.035" endtime="20201030 18:30:05.417"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.425" endtime="20201030 18:30:05.436"></status>
</kw>
<msg timestamp="20201030 18:30:05.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.424" endtime="20201030 18:30:05.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.438" endtime="20201030 18:30:05.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.440" endtime="20201030 18:30:05.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.421" endtime="20201030 18:30:05.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.419" endtime="20201030 18:30:05.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.449" endtime="20201030 18:30:05.735"></status>
</kw>
<msg timestamp="20201030 18:30:05.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019106028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019115625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.447" endtime="20201030 18:30:05.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019106028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019115625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.739" endtime="20201030 18:30:05.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.748" endtime="20201030 18:30:05.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.445" endtime="20201030 18:30:05.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.443" endtime="20201030 18:30:05.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.754" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.555000000001368e-06}, {'diff': 9.541999999997802e-06}, {'diff': 9.540999999998329e-06}, {'diff': 9.527999999998232e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:05.751" endtime="20201030 18:30:05.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:05.758" level="INFO">${OVERHEAD} = {'diff': [9.597000000000078e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.5420...</msg>
<status status="PASS" starttime="20201030 18:30:05.755" endtime="20201030 18:30:05.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.762" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:05.761" endtime="20201030 18:30:05.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.764" level="INFO">VALUE: [9.597000000000078e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.583000000000508e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.471999999999953e-06, 9.527999999998232e-06, 9.471999999999953e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.568999999997468e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.556000000000842e-06, 9.597000000000078e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.500000000002562e-06, 9.554999999997899e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.555999999997372e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.541000000001798e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.526999999998759e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201030 18:30:05.763" endtime="20201030 18:30:05.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.759" endtime="20201030 18:30:05.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.769" endtime="20201030 18:30:05.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.767" endtime="20201030 18:30:05.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.766" endtime="20201030 18:30:05.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.418" endtime="20201030 18:30:05.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.418" endtime="20201030 18:30:05.789"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.797" endtime="20201030 18:30:05.809"></status>
</kw>
<msg timestamp="20201030 18:30:05.809" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.796" endtime="20201030 18:30:05.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.812" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.811" endtime="20201030 18:30:05.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.813" endtime="20201030 18:30:05.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.793" endtime="20201030 18:30:05.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.792" endtime="20201030 18:30:05.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.822" endtime="20201030 18:30:06.108"></status>
</kw>
<msg timestamp="20201030 18:30:06.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.820" endtime="20201030 18:30:06.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.113" endtime="20201030 18:30:06.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.121" endtime="20201030 18:30:06.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.818" endtime="20201030 18:30:06.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.816" endtime="20201030 18:30:06.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:06.127" level="INFO">${RESULT} = [{'diff': 9.583999999999981e-06}, {'diff': 9.556000000000842e-06}, {'diff': 9.527000000002228e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.541999999997802e-06}, {'diff': 9.527999999998232e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:06.124" endtime="20201030 18:30:06.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:06.131" level="INFO">${OVERHEAD} = {'diff': [9.583999999999981e-06, 9.556000000000842e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.5560...</msg>
<status status="PASS" starttime="20201030 18:30:06.128" endtime="20201030 18:30:06.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.135" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:06.134" endtime="20201030 18:30:06.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.138" level="INFO">VALUE: [9.583999999999981e-06, 9.556000000000842e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.597000000000078e-06, 9.527000000002228e-06, 9.527000000002228e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.526999999998759e-06, 9.541000000001798e-06, 9.513999999998662e-06, 9.471999999999953e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.541999999997802e-06, 9.555000000001368e-06, 9.541000000001798e-06, 9.540999999998329e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.513999999998662e-06]</msg>
<status status="PASS" starttime="20201030 18:30:06.136" endtime="20201030 18:30:06.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.132" endtime="20201030 18:30:06.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:06.143" endtime="20201030 18:30:06.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.142" endtime="20201030 18:30:06.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.140" endtime="20201030 18:30:06.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.790" endtime="20201030 18:30:06.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.790" endtime="20201030 18:30:06.164"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.171" endtime="20201030 18:30:06.183"></status>
</kw>
<msg timestamp="20201030 18:30:06.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.170" endtime="20201030 18:30:06.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.185" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.184" endtime="20201030 18:30:06.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.186" endtime="20201030 18:30:06.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.167" endtime="20201030 18:30:06.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.166" endtime="20201030 18:30:06.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.196" endtime="20201030 18:30:06.481"></status>
</kw>
<msg timestamp="20201030 18:30:06.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019183597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019193194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.194" endtime="20201030 18:30:06.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019183597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019193194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.485" endtime="20201030 18:30:06.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.493" endtime="20201030 18:30:06.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.192" endtime="20201030 18:30:06.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.189" endtime="20201030 18:30:06.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:06.499" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.541000000001798e-06}, {'diff': 9.499999999999093e-06}, {'diff': 9.512999999999189e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.527999999998232e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:06.496" endtime="20201030 18:30:06.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:06.504" level="INFO">${OVERHEAD} = {'diff': [9.597000000000078e-06, 9.541000000001798e-06, 9.499999999999093e-06, 9.512999999999189e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.499999999999093e-06, 9.5279...</msg>
<status status="PASS" starttime="20201030 18:30:06.500" endtime="20201030 18:30:06.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.508" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:06.507" endtime="20201030 18:30:06.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.511" level="INFO">VALUE: [9.597000000000078e-06, 9.541000000001798e-06, 9.499999999999093e-06, 9.512999999999189e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.485999999999523e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.597000000000078e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.570000000000412e-06, 9.528000000001702e-06, 9.583999999999981e-06, 9.541000000001798e-06, 9.527000000002228e-06, 9.554999999997899e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.500000000002562e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.568999999997468e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.582999999997038e-06, 9.554999999997899e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.471999999999953e-06, 9.540999999998329e-06]</msg>
<status status="PASS" starttime="20201030 18:30:06.509" endtime="20201030 18:30:06.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.505" endtime="20201030 18:30:06.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:06.515" endtime="20201030 18:30:06.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.514" endtime="20201030 18:30:06.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.513" endtime="20201030 18:30:06.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.164" endtime="20201030 18:30:06.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.164" endtime="20201030 18:30:06.536"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.544" endtime="20201030 18:30:06.555"></status>
</kw>
<msg timestamp="20201030 18:30:06.555" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.542" endtime="20201030 18:30:06.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.558" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.557" endtime="20201030 18:30:06.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.559" endtime="20201030 18:30:06.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.540" endtime="20201030 18:30:06.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.538" endtime="20201030 18:30:06.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.571" endtime="20201030 18:30:06.857"></status>
</kw>
<msg timestamp="20201030 18:30:06.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019041986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019051569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.569" endtime="20201030 18:30:06.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019041986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019051569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.861" endtime="20201030 18:30:06.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.869" endtime="20201030 18:30:06.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.566" endtime="20201030 18:30:06.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.564" endtime="20201030 18:30:06.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:06.875" level="INFO">${RESULT} = [{'diff': 9.583000000000508e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.527000000002228e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.513999999998662e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:06.872" endtime="20201030 18:30:06.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:06.879" level="INFO">${OVERHEAD} = {'diff': [9.583000000000508e-06, 9.527999999998232e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.5409...</msg>
<status status="PASS" starttime="20201030 18:30:06.876" endtime="20201030 18:30:06.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.883" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:06.882" endtime="20201030 18:30:06.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.886" level="INFO">VALUE: [9.583000000000508e-06, 9.527999999998232e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.540999999998329e-06, 9.570000000000412e-06, 9.499999999999093e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.458000000000383e-06, 9.527999999998232e-06, 9.540999999998329e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.527000000002228e-06, 9.486999999998996e-06, 9.457999999996913e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.512999999999189e-06, 9.540999999998329e-06, 9.514000000002132e-06, 9.526999999998759e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.555000000001368e-06, 9.513999999998662e-06, 9.610999999999648e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201030 18:30:06.884" endtime="20201030 18:30:06.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.880" endtime="20201030 18:30:06.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:06.890" endtime="20201030 18:30:06.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.889" endtime="20201030 18:30:06.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.888" endtime="20201030 18:30:06.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.537" endtime="20201030 18:30:06.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.536" endtime="20201030 18:30:06.911"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.918" endtime="20201030 18:30:06.929"></status>
</kw>
<msg timestamp="20201030 18:30:06.930" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.917" endtime="20201030 18:30:06.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.931" endtime="20201030 18:30:06.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.934" endtime="20201030 18:30:06.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.914" endtime="20201030 18:30:06.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.913" endtime="20201030 18:30:06.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.943" endtime="20201030 18:30:07.229"></status>
</kw>
<msg timestamp="20201030 18:30:07.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018927472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.942" endtime="20201030 18:30:07.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018927472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.233" endtime="20201030 18:30:07.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.241" endtime="20201030 18:30:07.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.939" endtime="20201030 18:30:07.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.938" endtime="20201030 18:30:07.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.248" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.500000000002562e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.541999999997802e-06}, {'diff': 9.514000000002132e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:07.245" endtime="20201030 18:30:07.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:07.252" level="INFO">${OVERHEAD} = {'diff': [9.597000000000078e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.445000000000286e-06, 9.5419...</msg>
<status status="PASS" starttime="20201030 18:30:07.249" endtime="20201030 18:30:07.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.256" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:07.255" endtime="20201030 18:30:07.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.258" level="INFO">VALUE: [9.597000000000078e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.445000000000286e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.540999999998329e-06, 9.540999999998329e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.555000000001368e-06, 9.569000000000938e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.458000000000383e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.541000000001798e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.556000000000842e-06]</msg>
<status status="PASS" starttime="20201030 18:30:07.257" endtime="20201030 18:30:07.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.253" endtime="20201030 18:30:07.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.265" endtime="20201030 18:30:07.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.264" endtime="20201030 18:30:07.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.263" endtime="20201030 18:30:07.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.912" endtime="20201030 18:30:07.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.911" endtime="20201030 18:30:07.286"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.294" endtime="20201030 18:30:07.305"></status>
</kw>
<msg timestamp="20201030 18:30:07.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.292" endtime="20201030 18:30:07.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.307" endtime="20201030 18:30:07.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.309" endtime="20201030 18:30:07.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.289" endtime="20201030 18:30:07.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.288" endtime="20201030 18:30:07.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.318" endtime="20201030 18:30:07.603"></status>
</kw>
<msg timestamp="20201030 18:30:07.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:07.316" endtime="20201030 18:30:07.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:07.607" endtime="20201030 18:30:07.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.616" endtime="20201030 18:30:07.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.314" endtime="20201030 18:30:07.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.312" endtime="20201030 18:30:07.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.622" level="INFO">${RESULT} = [{'diff': 9.541999999997802e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.542000000001272e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:07.619" endtime="20201030 18:30:07.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:07.627" level="INFO">${OVERHEAD} = {'diff': [9.541999999997802e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.5279...</msg>
<status status="PASS" starttime="20201030 18:30:07.623" endtime="20201030 18:30:07.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.631" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:07.630" endtime="20201030 18:30:07.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.633" level="INFO">VALUE: [9.541999999997802e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.540999999998329e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.445000000000286e-06, 9.583999999999981e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.527000000002228e-06, 9.487000000002466e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201030 18:30:07.632" endtime="20201030 18:30:07.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.628" endtime="20201030 18:30:07.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.638" endtime="20201030 18:30:07.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.636" endtime="20201030 18:30:07.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.635" endtime="20201030 18:30:07.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.287" endtime="20201030 18:30:07.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.286" endtime="20201030 18:30:07.658"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.727" endtime="20201030 18:30:07.738"></status>
</kw>
<msg timestamp="20201030 18:30:07.738" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.725" endtime="20201030 18:30:07.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.741" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.739" endtime="20201030 18:30:07.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.742" endtime="20201030 18:30:07.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.722" endtime="20201030 18:30:07.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.661" endtime="20201030 18:30:07.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.750" endtime="20201030 18:30:08.051"></status>
</kw>
<msg timestamp="20201030 18:30:08.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079728903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0797385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:07.749" endtime="20201030 18:30:08.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079728903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0797385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:08.056" endtime="20201030 18:30:08.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.064" endtime="20201030 18:30:08.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.746" endtime="20201030 18:30:08.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.745" endtime="20201030 18:30:08.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.072" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.541000000001798e-06}, {'diff': 9.527999999994763e-06}, {'diff': 9.527000000009167e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:08.068" endtime="20201030 18:30:08.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:08.076" level="INFO">${OVERHEAD} = {'diff': [9.597000000000078e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.527999999994763e-06, 9.527000000009167e-06, 9.52800000000864e-06, 9.514000000002132e-06, 9.52800...</msg>
<status status="PASS" starttime="20201030 18:30:08.072" endtime="20201030 18:30:08.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.080" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:08.079" endtime="20201030 18:30:08.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.082" level="INFO">VALUE: [9.597000000000078e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.527999999994763e-06, 9.527000000009167e-06, 9.52800000000864e-06, 9.514000000002132e-06, 9.52800000000864e-06, 9.527000000009167e-06, 9.541000000001798e-06, 9.527999999994763e-06, 9.499999999995623e-06, 9.513999999988254e-06, 9.527000000009167e-06, 9.527999999994763e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.527999999994763e-06, 9.527999999994763e-06, 9.499999999995623e-06, 9.527999999994763e-06, 9.541999999987394e-06, 9.513999999988254e-06, 9.554999999994429e-06, 9.527999999994763e-06, 9.486000000002992e-06, 9.52800000000864e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.52699999999529e-06, 9.527999999994763e-06, 9.499999999995623e-06, 9.555999999993903e-06, 9.542000000001272e-06, 9.52699999999529e-06, 9.542000000001272e-06, 9.527999999994763e-06, 9.52699999999529e-06, 9.569000000000938e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.52800000000864e-06, 9.527000000009167e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.513999999988254e-06, 9.52800000000864e-06, 9.570000000000412e-06, 9.499999999995623e-06]</msg>
<status status="PASS" starttime="20201030 18:30:08.081" endtime="20201030 18:30:08.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.076" endtime="20201030 18:30:08.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.086" endtime="20201030 18:30:08.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.085" endtime="20201030 18:30:08.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.084" endtime="20201030 18:30:08.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.659" endtime="20201030 18:30:08.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.659" endtime="20201030 18:30:08.107"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.115" endtime="20201030 18:30:08.126"></status>
</kw>
<msg timestamp="20201030 18:30:08.127" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.114" endtime="20201030 18:30:08.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.128" endtime="20201030 18:30:08.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.130" endtime="20201030 18:30:08.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.111" endtime="20201030 18:30:08.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.109" endtime="20201030 18:30:08.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.141" endtime="20201030 18:30:08.427"></status>
</kw>
<msg timestamp="20201030 18:30:08.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019448708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.139" endtime="20201030 18:30:08.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019448708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.432" endtime="20201030 18:30:08.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.440" endtime="20201030 18:30:08.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.136" endtime="20201030 18:30:08.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.134" endtime="20201030 18:30:08.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.446" level="INFO">${RESULT} = [{'diff': 9.568999999997468e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.500000000002562e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.610999999999648e-06}, {'diff': 9.513999999998662e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:08.443" endtime="20201030 18:30:08.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:08.450" level="INFO">${OVERHEAD} = {'diff': [9.568999999997468e-06, 9.527999999998232e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.610999999999648e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.5420...</msg>
<status status="PASS" starttime="20201030 18:30:08.447" endtime="20201030 18:30:08.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.454" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:08.453" endtime="20201030 18:30:08.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.456" level="INFO">VALUE: [9.568999999997468e-06, 9.527999999998232e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.610999999999648e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.568999999997468e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.512999999999189e-06, 9.527999999998232e-06, 9.540999999998329e-06, 9.583000000000508e-06, 9.555000000001368e-06, 9.513999999998662e-06, 9.500000000002562e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.555000000001368e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.486000000002992e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.485999999999523e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.526999999998759e-06, 9.512999999999189e-06, 9.540999999998329e-06]</msg>
<status status="PASS" starttime="20201030 18:30:08.455" endtime="20201030 18:30:08.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.451" endtime="20201030 18:30:08.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.462" endtime="20201030 18:30:08.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.461" endtime="20201030 18:30:08.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.459" endtime="20201030 18:30:08.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.108" endtime="20201030 18:30:08.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.108" endtime="20201030 18:30:08.483"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.491" endtime="20201030 18:30:08.502"></status>
</kw>
<msg timestamp="20201030 18:30:08.502" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.489" endtime="20201030 18:30:08.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.503" endtime="20201030 18:30:08.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.506" endtime="20201030 18:30:08.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.487" endtime="20201030 18:30:08.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.485" endtime="20201030 18:30:08.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.514" endtime="20201030 18:30:08.800"></status>
</kw>
<msg timestamp="20201030 18:30:08.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019228708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019238292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.513" endtime="20201030 18:30:08.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019228708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019238292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.804" endtime="20201030 18:30:08.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.813" endtime="20201030 18:30:08.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.510" endtime="20201030 18:30:08.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.509" endtime="20201030 18:30:08.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.819" level="INFO">${RESULT} = [{'diff': 9.583999999999981e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.555000000001368e-06}, {'diff': 9.471999999999953e-06}, {'diff': 9.512999999999189e-06}, {'diff': 9.528000000001702e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:08.816" endtime="20201030 18:30:08.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:08.824" level="INFO">${OVERHEAD} = {'diff': [9.583999999999981e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.471999999999953e-06, 9.512999999999189e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.5420...</msg>
<status status="PASS" starttime="20201030 18:30:08.820" endtime="20201030 18:30:08.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.828" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:08.827" endtime="20201030 18:30:08.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.830" level="INFO">VALUE: [9.583999999999981e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.471999999999953e-06, 9.512999999999189e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.568999999997468e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.610999999999648e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.527000000002228e-06, 9.527000000002228e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.471999999999953e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.570000000000412e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.555000000001368e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.610999999999648e-06, 9.554999999997899e-06, 9.500000000002562e-06]</msg>
<status status="PASS" starttime="20201030 18:30:08.829" endtime="20201030 18:30:08.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.825" endtime="20201030 18:30:08.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.835" endtime="20201030 18:30:08.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.834" endtime="20201030 18:30:08.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.833" endtime="20201030 18:30:08.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.484" endtime="20201030 18:30:08.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.483" endtime="20201030 18:30:08.856"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.864" endtime="20201030 18:30:08.875"></status>
</kw>
<msg timestamp="20201030 18:30:08.875" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.862" endtime="20201030 18:30:08.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.878" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.876" endtime="20201030 18:30:08.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.879" endtime="20201030 18:30:08.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.860" endtime="20201030 18:30:08.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.858" endtime="20201030 18:30:08.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.887" endtime="20201030 18:30:09.172"></status>
</kw>
<msg timestamp="20201030 18:30:09.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019065653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:08.886" endtime="20201030 18:30:09.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019065653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:09.177" endtime="20201030 18:30:09.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.185" endtime="20201030 18:30:09.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.883" endtime="20201030 18:30:09.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.882" endtime="20201030 18:30:09.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.192" level="INFO">${RESULT} = [{'diff': 9.652999999998357e-06}, {'diff': 9.513000000002658e-06}, {'diff': 9.540999999998329e-06}, {'diff': 9.569000000000938e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.583999999999981e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:09.189" endtime="20201030 18:30:09.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:09.196" level="INFO">${OVERHEAD} = {'diff': [9.652999999998357e-06, 9.513000000002658e-06, 9.540999999998329e-06, 9.569000000000938e-06, 9.513999999998662e-06, 9.583999999999981e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.5549...</msg>
<status status="PASS" starttime="20201030 18:30:09.193" endtime="20201030 18:30:09.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.200" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:09.199" endtime="20201030 18:30:09.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.203" level="INFO">VALUE: [9.652999999998357e-06, 9.513000000002658e-06, 9.540999999998329e-06, 9.569000000000938e-06, 9.513999999998662e-06, 9.583999999999981e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.554999999997899e-06, 9.526999999998759e-06, 9.568999999997468e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.526999999998759e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.528000000001702e-06, 9.458000000000383e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.583000000000508e-06, 9.513999999998662e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.597999999999551e-06, 9.527000000002228e-06, 9.527999999998232e-06]</msg>
<status status="PASS" starttime="20201030 18:30:09.201" endtime="20201030 18:30:09.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.197" endtime="20201030 18:30:09.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.208" endtime="20201030 18:30:09.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.206" endtime="20201030 18:30:09.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.205" endtime="20201030 18:30:09.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.857" endtime="20201030 18:30:09.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.856" endtime="20201030 18:30:09.228"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.236" endtime="20201030 18:30:09.247"></status>
</kw>
<msg timestamp="20201030 18:30:09.247" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.234" endtime="20201030 18:30:09.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.248" endtime="20201030 18:30:09.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.251" endtime="20201030 18:30:09.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.232" endtime="20201030 18:30:09.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.230" endtime="20201030 18:30:09.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.261" endtime="20201030 18:30:09.568"></status>
</kw>
<msg timestamp="20201030 18:30:09.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019113153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.259" endtime="20201030 18:30:09.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019113153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.574" endtime="20201030 18:30:09.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.582" endtime="20201030 18:30:09.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.257" endtime="20201030 18:30:09.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.255" endtime="20201030 18:30:09.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.588" level="INFO">${RESULT} = [{'diff': 9.667000000001397e-06}, {'diff': 9.556000000000842e-06}, {'diff': 9.526999999998759e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.458000000000383e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:09.585" endtime="20201030 18:30:09.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:09.593" level="INFO">${OVERHEAD} = {'diff': [9.667000000001397e-06, 9.556000000000842e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.458000000000383e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.5279...</msg>
<status status="PASS" starttime="20201030 18:30:09.589" endtime="20201030 18:30:09.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.597" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:09.596" endtime="20201030 18:30:09.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.599" level="INFO">VALUE: [9.667000000001397e-06, 9.556000000000842e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.458000000000383e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.499999999999093e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.568999999997468e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.570000000000412e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.583000000000508e-06, 9.527000000002228e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.554999999997899e-06, 9.513000000002658e-06]</msg>
<status status="PASS" starttime="20201030 18:30:09.598" endtime="20201030 18:30:09.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.593" endtime="20201030 18:30:09.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.605" endtime="20201030 18:30:09.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.603" endtime="20201030 18:30:09.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.602" endtime="20201030 18:30:09.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.229" endtime="20201030 18:30:09.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.229" endtime="20201030 18:30:09.625"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.633" endtime="20201030 18:30:09.644"></status>
</kw>
<msg timestamp="20201030 18:30:09.645" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.632" endtime="20201030 18:30:09.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.646" endtime="20201030 18:30:09.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.648" endtime="20201030 18:30:09.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.629" endtime="20201030 18:30:09.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.627" endtime="20201030 18:30:09.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.657" endtime="20201030 18:30:09.951"></status>
</kw>
<msg timestamp="20201030 18:30:09.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01926925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:09.656" endtime="20201030 18:30:09.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01926925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:09.955" endtime="20201030 18:30:09.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.964" endtime="20201030 18:30:09.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.653" endtime="20201030 18:30:09.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.651" endtime="20201030 18:30:09.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.970" level="INFO">${RESULT} = [{'diff': 9.555999999997372e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.499999999999093e-06}, {'diff': 9.541999999997802e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:09.967" endtime="20201030 18:30:09.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:09.975" level="INFO">${OVERHEAD} = {'diff': [9.555999999997372e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.5420...</msg>
<status status="PASS" starttime="20201030 18:30:09.971" endtime="20201030 18:30:09.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.979" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:09.978" endtime="20201030 18:30:09.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.982" level="INFO">VALUE: [9.555999999997372e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.540999999998329e-06, 9.540999999998329e-06, 9.555999999997372e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.583000000000508e-06, 9.541999999997802e-06, 9.554999999997899e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.526999999998759e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.499999999999093e-06, 9.568999999997468e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.569000000000938e-06, 9.527999999998232e-06, 9.554999999997899e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.485999999999523e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201030 18:30:09.980" endtime="20201030 18:30:09.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.976" endtime="20201030 18:30:09.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.986" endtime="20201030 18:30:10.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.985" endtime="20201030 18:30:10.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.984" endtime="20201030 18:30:10.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.626" endtime="20201030 18:30:10.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.626" endtime="20201030 18:30:10.007"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.015" endtime="20201030 18:30:10.026"></status>
</kw>
<msg timestamp="20201030 18:30:10.027" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.014" endtime="20201030 18:30:10.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.029" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.028" endtime="20201030 18:30:10.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.030" endtime="20201030 18:30:10.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.011" endtime="20201030 18:30:10.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.009" endtime="20201030 18:30:10.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.039" endtime="20201030 18:30:10.324"></status>
</kw>
<msg timestamp="20201030 18:30:10.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019321708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019331306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.037" endtime="20201030 18:30:10.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019321708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019331306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.328" endtime="20201030 18:30:10.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.336" endtime="20201030 18:30:10.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.035" endtime="20201030 18:30:10.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.033" endtime="20201030 18:30:10.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.344" level="INFO">${RESULT} = [{'diff': 9.597999999999551e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.541999999997802e-06}, {'diff': 9.527999999998232e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:10.341" endtime="20201030 18:30:10.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:10.348" level="INFO">${OVERHEAD} = {'diff': [9.597999999999551e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.5140...</msg>
<status status="PASS" starttime="20201030 18:30:10.345" endtime="20201030 18:30:10.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.352" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:10.351" endtime="20201030 18:30:10.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.354" level="INFO">VALUE: [9.597999999999551e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.583000000000508e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.458999999999856e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.541000000001798e-06, 9.514000000002132e-06, 9.554999999997899e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.555999999997372e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.485999999999523e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.526999999998759e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.471999999999953e-06]</msg>
<status status="PASS" starttime="20201030 18:30:10.353" endtime="20201030 18:30:10.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.349" endtime="20201030 18:30:10.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.359" endtime="20201030 18:30:10.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.358" endtime="20201030 18:30:10.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.356" endtime="20201030 18:30:10.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.008" endtime="20201030 18:30:10.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.008" endtime="20201030 18:30:10.380"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.388" endtime="20201030 18:30:10.399"></status>
</kw>
<msg timestamp="20201030 18:30:10.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.386" endtime="20201030 18:30:10.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.402" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.400" endtime="20201030 18:30:10.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.403" endtime="20201030 18:30:10.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.384" endtime="20201030 18:30:10.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.382" endtime="20201030 18:30:10.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.412" endtime="20201030 18:30:10.697"></status>
</kw>
<msg timestamp="20201030 18:30:10.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019228681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019238278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.411" endtime="20201030 18:30:10.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019228681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019238278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.705" endtime="20201030 18:30:10.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.713" endtime="20201030 18:30:10.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.408" endtime="20201030 18:30:10.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.407" endtime="20201030 18:30:10.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.719" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.540999999998329e-06}, {'diff': 9.541999999997802e-06}, {'diff': 9.528000000001702e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:10.716" endtime="20201030 18:30:10.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:10.724" level="INFO">${OVERHEAD} = {'diff': [9.597000000000078e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.5830...</msg>
<status status="PASS" starttime="20201030 18:30:10.721" endtime="20201030 18:30:10.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.728" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:10.727" endtime="20201030 18:30:10.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.730" level="INFO">VALUE: [9.597000000000078e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.527000000002228e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.597000000000078e-06, 9.527999999998232e-06, 9.555000000001368e-06, 9.526999999998759e-06, 9.569999999996942e-06, 9.570000000000412e-06, 9.500000000002562e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.512999999999189e-06, 9.527000000002228e-06]</msg>
<status status="PASS" starttime="20201030 18:30:10.729" endtime="20201030 18:30:10.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.724" endtime="20201030 18:30:10.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.738" endtime="20201030 18:30:10.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.736" endtime="20201030 18:30:10.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.735" endtime="20201030 18:30:10.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.381" endtime="20201030 18:30:10.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.380" endtime="20201030 18:30:10.759"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.769" endtime="20201030 18:30:10.781"></status>
</kw>
<msg timestamp="20201030 18:30:10.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.768" endtime="20201030 18:30:10.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.785" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.783" endtime="20201030 18:30:10.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.786" endtime="20201030 18:30:10.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.765" endtime="20201030 18:30:10.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.762" endtime="20201030 18:30:10.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.797" endtime="20201030 18:30:11.097"></status>
</kw>
<msg timestamp="20201030 18:30:11.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.795" endtime="20201030 18:30:11.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.101" endtime="20201030 18:30:11.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.109" endtime="20201030 18:30:11.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.792" endtime="20201030 18:30:11.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.790" endtime="20201030 18:30:11.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.116" level="INFO">${RESULT} = [{'diff': 9.540999999998329e-06}, {'diff': 9.499999999999093e-06}, {'diff': 9.458000000000383e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.485999999999523e-06}, {'diff': 9.528000000001702e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:11.113" endtime="20201030 18:30:11.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:11.121" level="INFO">${OVERHEAD} = {'diff': [9.540999999998329e-06, 9.499999999999093e-06, 9.458000000000383e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.528000000001702e-06, 9.526999999998759e-06, 9.541000000001798e-06, 9.5419...</msg>
<status status="PASS" starttime="20201030 18:30:11.117" endtime="20201030 18:30:11.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.125" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:11.124" endtime="20201030 18:30:11.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.127" level="INFO">VALUE: [9.540999999998329e-06, 9.499999999999093e-06, 9.458000000000383e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.528000000001702e-06, 9.526999999998759e-06, 9.541000000001798e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.570000000000412e-06, 9.527000000002228e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.569000000000938e-06, 9.597000000000078e-06, 9.512999999999189e-06, 9.527000000002228e-06, 9.526999999998759e-06, 9.541999999997802e-06, 9.527000000002228e-06, 9.540999999998329e-06, 9.458999999999856e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.527000000002228e-06, 9.569000000000938e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.569000000000938e-06, 9.513999999998662e-06, 9.555999999997372e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.542000000001272e-06, 9.527999999998232e-06]</msg>
<status status="PASS" starttime="20201030 18:30:11.126" endtime="20201030 18:30:11.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.121" endtime="20201030 18:30:11.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.132" endtime="20201030 18:30:11.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.130" endtime="20201030 18:30:11.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.129" endtime="20201030 18:30:11.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.760" endtime="20201030 18:30:11.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.759" endtime="20201030 18:30:11.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.526" endtime="20201030 18:30:11.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.157" endtime="20201030 18:30:11.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.155" endtime="20201030 18:30:11.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.154" endtime="20201030 18:30:11.177"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:03.459" endtime="20201030 18:30:11.177" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.184" endtime="20201030 18:30:11.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.182" endtime="20201030 18:30:11.204"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.216" endtime="20201030 18:30:11.229"></status>
</kw>
<msg timestamp="20201030 18:30:11.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.215" endtime="20201030 18:30:11.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.232" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.231" endtime="20201030 18:30:11.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.235" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:11.233" endtime="20201030 18:30:11.236"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:11.212" endtime="20201030 18:30:11.236"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:11.210" endtime="20201030 18:30:11.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.209" endtime="20201030 18:30:11.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:11.241" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:11.240" endtime="20201030 18:30:11.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.238" endtime="20201030 18:30:11.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.208" endtime="20201030 18:30:11.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.207" endtime="20201030 18:30:11.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.242" endtime="20201030 18:30:11.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.206" endtime="20201030 18:30:11.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.204" endtime="20201030 18:30:11.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.181" endtime="20201030 18:30:11.245"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.253" endtime="20201030 18:30:11.273"></status>
</kw>
<msg timestamp="20201030 18:30:11.274" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.252" endtime="20201030 18:30:11.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.277" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.275" endtime="20201030 18:30:11.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.278" endtime="20201030 18:30:11.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.249" endtime="20201030 18:30:11.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.247" endtime="20201030 18:30:11.280"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.282" endtime="20201030 18:30:11.284"></status>
</kw>
<msg timestamp="20201030 18:30:11.284" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:11.281" endtime="20201030 18:30:11.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.288" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:11.287" endtime="20201030 18:30:11.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.290" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:11.289" endtime="20201030 18:30:11.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.285" endtime="20201030 18:30:11.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.295" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:11.294" endtime="20201030 18:30:11.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.297" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:11.296" endtime="20201030 18:30:11.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.292" endtime="20201030 18:30:11.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.304" endtime="20201030 18:30:11.590"></status>
</kw>
<msg timestamp="20201030 18:30:11.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061832417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061866097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.302" endtime="20201030 18:30:11.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061832417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061866097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.594" endtime="20201030 18:30:11.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.603" endtime="20201030 18:30:11.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.300" endtime="20201030 18:30:11.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.298" endtime="20201030 18:30:11.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.609" level="INFO">${RESULT} = [{'diff': 3.368000000000121e-05}, {'diff': 3.8625000000000465e-05}, {'diff': 3.794399999999809e-05}, {'diff': 3.792999999999852e-05}, {'diff': 3.7930999999997994e-05}, {'diff': 3.7930999999997994e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:11.606" endtime="20201030 18:30:11.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:11.613" level="INFO">${OVERHEAD} = {'diff': [3.368000000000121e-05, 3.8625000000000465e-05, 3.794399999999809e-05, 3.792999999999852e-05, 3.7930999999997994e-05, 3.7930999999997994e-05, 3.793000000000546e-05, 3.7916999999998424e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:30:11.610" endtime="20201030 18:30:11.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.617" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:30:11.616" endtime="20201030 18:30:11.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.620" level="INFO">VALUE: [3.368000000000121e-05, 3.8625000000000465e-05, 3.794399999999809e-05, 3.792999999999852e-05, 3.7930999999997994e-05, 3.7930999999997994e-05, 3.793000000000546e-05, 3.7916999999998424e-05, 3.793000000000546e-05, 3.7930999999997994e-05, 3.7916999999998424e-05, 3.7916999999998424e-05, 3.798599999998986e-05, 3.790199999999244e-05, 3.7930999999991055e-05, 3.794399999999809e-05, 3.794399999999809e-05, 3.7944999999997564e-05, 3.791600000001283e-05, 3.7916999999998424e-05, 3.794399999999809e-05, 3.7916999999998424e-05, 3.798600000000374e-05, 3.7930999999991055e-05, 3.793100000000493e-05, 3.793100000000493e-05, 3.793100000000493e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.7916999999998424e-05, 3.792999999999158e-05, 3.793000000000546e-05, 3.7944999999997564e-05, 3.793100000000493e-05, 3.791599999999895e-05, 3.793100000000493e-05, 3.793100000000493e-05, 3.7930999999991055e-05, 3.794399999999809e-05, 3.79580000000046e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.793100000000493e-05, 3.798600000000374e-05, 3.7916999999998424e-05, 3.793000000000546e-05, 3.793100000000493e-05]</msg>
<status status="PASS" starttime="20201030 18:30:11.618" endtime="20201030 18:30:11.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.614" endtime="20201030 18:30:11.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.625" endtime="20201030 18:30:11.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.623" endtime="20201030 18:30:11.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.622" endtime="20201030 18:30:11.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.246" endtime="20201030 18:30:11.645"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:11.179" endtime="20201030 18:30:11.646" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.653" endtime="20201030 18:30:11.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.651" endtime="20201030 18:30:11.673"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.686" endtime="20201030 18:30:11.698"></status>
</kw>
<msg timestamp="20201030 18:30:11.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.685" endtime="20201030 18:30:11.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.700" endtime="20201030 18:30:11.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.704" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:11.702" endtime="20201030 18:30:11.705"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:11.682" endtime="20201030 18:30:11.705"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:11.680" endtime="20201030 18:30:11.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.678" endtime="20201030 18:30:11.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:11.710" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:11.709" endtime="20201030 18:30:11.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.707" endtime="20201030 18:30:11.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.678" endtime="20201030 18:30:11.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.677" endtime="20201030 18:30:11.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.711" endtime="20201030 18:30:11.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.675" endtime="20201030 18:30:11.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.673" endtime="20201030 18:30:11.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.650" endtime="20201030 18:30:11.714"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.724" endtime="20201030 18:30:11.867"></status>
</kw>
<msg timestamp="20201030 18:30:11.867" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.722" endtime="20201030 18:30:11.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.870" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.869" endtime="20201030 18:30:11.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.871" endtime="20201030 18:30:11.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.719" endtime="20201030 18:30:11.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.716" endtime="20201030 18:30:11.874"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.876" endtime="20201030 18:30:11.877"></status>
</kw>
<msg timestamp="20201030 18:30:11.878" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:11.874" endtime="20201030 18:30:11.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.883" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:11.881" endtime="20201030 18:30:11.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.885" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:11.884" endtime="20201030 18:30:11.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.878" endtime="20201030 18:30:11.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.889" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:11.888" endtime="20201030 18:30:11.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.891" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:11.890" endtime="20201030 18:30:11.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.886" endtime="20201030 18:30:11.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.898" endtime="20201030 18:30:12.190"></status>
</kw>
<msg timestamp="20201030 18:30:12.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065630056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065683431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.897" endtime="20201030 18:30:12.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065630056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065683431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.194" endtime="20201030 18:30:12.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.202" endtime="20201030 18:30:12.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.894" endtime="20201030 18:30:12.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.893" endtime="20201030 18:30:12.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.208" level="INFO">${RESULT} = [{'diff': 5.33749999999944e-05}, {'diff': 7.655500000000592e-05}, {'diff': 7.654200000001277e-05}, {'diff': 7.654099999999942e-05}, {'diff': 7.654199999999889e-05}, {'diff': 7.65560000000054e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:12.205" endtime="20201030 18:30:12.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:12.213" level="INFO">${OVERHEAD} = {'diff': [5.33749999999944e-05, 7.655500000000592e-05, 7.654200000001277e-05, 7.654099999999942e-05, 7.654199999999889e-05, 7.65560000000054e-05, 7.656999999999803e-05, 7.658400000000454e-05, 7.654199...</msg>
<status status="PASS" starttime="20201030 18:30:12.209" endtime="20201030 18:30:12.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.218" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:30:12.217" endtime="20201030 18:30:12.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.221" level="INFO">VALUE: [5.33749999999944e-05, 7.655500000000592e-05, 7.654200000001277e-05, 7.654099999999942e-05, 7.654199999999889e-05, 7.65560000000054e-05, 7.656999999999803e-05, 7.658400000000454e-05, 7.654199999999889e-05, 7.652700000000678e-05, 7.652800000000626e-05, 7.654099999999942e-05, 7.655500000000592e-05, 7.65560000000054e-05, 7.656899999999855e-05, 7.658299999999119e-05, 7.651399999999975e-05, 7.65560000000054e-05, 7.654199999999889e-05, 7.658400000000454e-05, 7.654199999999889e-05, 7.648600000000061e-05, 7.654099999999942e-05, 7.656999999999803e-05, 7.65560000000054e-05, 7.65560000000054e-05, 7.658399999999066e-05, 7.658399999999066e-05, 7.655500000000592e-05, 7.655500000000592e-05, 7.654200000001277e-05, 7.65560000000054e-05, 7.654200000001277e-05, 7.652800000002014e-05, 7.648599999998673e-05, 7.658299999999119e-05, 7.652799999999238e-05, 7.648600000001449e-05, 7.652800000002014e-05, 7.655500000000592e-05, 7.652799999999238e-05, 7.663899999998947e-05, 7.650000000000712e-05, 7.65560000000054e-05, 7.65269999999929e-05, 7.654200000001277e-05, 7.652799999999238e-05, 7.655499999997817e-05, 7.658299999999119e-05, 7.654199999998501e-05]</msg>
<status status="PASS" starttime="20201030 18:30:12.219" endtime="20201030 18:30:12.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.213" endtime="20201030 18:30:12.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.225" endtime="20201030 18:30:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.224" endtime="20201030 18:30:12.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.222" endtime="20201030 18:30:12.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.715" endtime="20201030 18:30:12.245"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:11.647" endtime="20201030 18:30:12.246" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.253" endtime="20201030 18:30:12.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.251" endtime="20201030 18:30:12.273"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.285" endtime="20201030 18:30:12.298"></status>
</kw>
<msg timestamp="20201030 18:30:12.298" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.284" endtime="20201030 18:30:12.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.299" endtime="20201030 18:30:12.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.303" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:12.302" endtime="20201030 18:30:12.304"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:12.281" endtime="20201030 18:30:12.304"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:12.279" endtime="20201030 18:30:12.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.278" endtime="20201030 18:30:12.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:12.309" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:12.308" endtime="20201030 18:30:12.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.306" endtime="20201030 18:30:12.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.277" endtime="20201030 18:30:12.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.276" endtime="20201030 18:30:12.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.311" endtime="20201030 18:30:12.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.275" endtime="20201030 18:30:12.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.273" endtime="20201030 18:30:12.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.250" endtime="20201030 18:30:12.313"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.323" endtime="20201030 18:30:12.747"></status>
</kw>
<msg timestamp="20201030 18:30:12.748" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.322" endtime="20201030 18:30:12.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.753" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.750" endtime="20201030 18:30:12.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.755" endtime="20201030 18:30:12.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.318" endtime="20201030 18:30:12.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.315" endtime="20201030 18:30:12.761"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.766" endtime="20201030 18:30:12.769"></status>
</kw>
<msg timestamp="20201030 18:30:12.770" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:12.763" endtime="20201030 18:30:12.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.778" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:12.776" endtime="20201030 18:30:12.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.782" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:12.780" endtime="20201030 18:30:12.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.771" endtime="20201030 18:30:12.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.792" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:12.790" endtime="20201030 18:30:12.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.798" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:12.795" endtime="20201030 18:30:12.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.785" endtime="20201030 18:30:12.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.816" endtime="20201030 18:30:13.114"></status>
</kw>
<msg timestamp="20201030 18:30:13.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067945375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068036069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.812" endtime="20201030 18:30:13.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067945375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068036069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.118" endtime="20201030 18:30:13.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.125" endtime="20201030 18:30:13.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.806" endtime="20201030 18:30:13.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.801" endtime="20201030 18:30:13.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:13.132" level="INFO">${RESULT} = [{'diff': 9.069400000000227e-05}, {'diff': 0.0001335969999999992}, {'diff': 0.00013352800000000775}, {'diff': 0.00013352700000000828}, {'diff': 0.00013355599999999301}, {'diff': 0.0001335560000000069}...</msg>
<status status="PASS" starttime="20201030 18:30:13.129" endtime="20201030 18:30:13.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:13.136" level="INFO">${OVERHEAD} = {'diff': [9.069400000000227e-05, 0.0001335969999999992, 0.00013352800000000775, 0.00013352700000000828, 0.00013355599999999301, 0.0001335560000000069, 0.0001334860000000021, 0.00013352800000000775, 0....</msg>
<status status="PASS" starttime="20201030 18:30:13.133" endtime="20201030 18:30:13.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.143" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:30:13.141" endtime="20201030 18:30:13.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.146" level="INFO">VALUE: [9.069400000000227e-05, 0.0001335969999999992, 0.00013352800000000775, 0.00013352700000000828, 0.00013355599999999301, 0.0001335560000000069, 0.0001334860000000021, 0.00013352800000000775, 0.0001335419999999865, 0.00013351400000000124, 0.00013354200000001426, 0.00013356900000000005, 0.0001334719999999956, 0.00013349999999998086, 0.0001335419999999865, 0.00013355500000000742, 0.00013356900000000005, 0.0001335560000000069, 0.00013354200000001426, 0.00013352800000002163, 0.00013355500000000742, 0.0001335419999999865, 0.00013359700000001307, 0.00013355599999997914, 0.00013352799999999387, 0.00013355500000000742, 0.0001335419999999865, 0.0001335410000000148, 0.00013356900000000005, 0.00013355599999997914, 0.00013354099999995928, 0.00013351399999994573, 0.00013351400000000124, 0.00013359800000001254, 0.00013358299999999268, 0.00013356900000000005, 0.0001335419999999865, 0.00013355599999997914, 0.00013355599999997914, 0.00013356999999997177, 0.00013352700000002216, 0.00013354200000004202, 0.00013351400000000124, 0.00013356900000000005, 0.00013355599999997914, 0.00013358299999999268, 0.00013355599999997914, 0.00013352799999999387, 0.00013356900000000005, 0.00013358299999999268]</msg>
<status status="PASS" starttime="20201030 18:30:13.144" endtime="20201030 18:30:13.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.138" endtime="20201030 18:30:13.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.151" endtime="20201030 18:30:13.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.149" endtime="20201030 18:30:13.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.148" endtime="20201030 18:30:13.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.314" endtime="20201030 18:30:13.171"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:12.247" endtime="20201030 18:30:13.172" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.180" endtime="20201030 18:30:13.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.178" endtime="20201030 18:30:13.200"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.212" endtime="20201030 18:30:13.225"></status>
</kw>
<msg timestamp="20201030 18:30:13.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.211" endtime="20201030 18:30:13.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.227" endtime="20201030 18:30:13.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.231" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:13.229" endtime="20201030 18:30:13.232"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:13.208" endtime="20201030 18:30:13.232"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:13.206" endtime="20201030 18:30:13.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.205" endtime="20201030 18:30:13.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:13.237" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:13.236" endtime="20201030 18:30:13.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.234" endtime="20201030 18:30:13.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.204" endtime="20201030 18:30:13.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.204" endtime="20201030 18:30:13.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.238" endtime="20201030 18:30:13.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.202" endtime="20201030 18:30:13.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.201" endtime="20201030 18:30:13.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.177" endtime="20201030 18:30:13.242"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.250" endtime="20201030 18:30:13.271"></status>
</kw>
<msg timestamp="20201030 18:30:13.272" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.248" endtime="20201030 18:30:13.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.274" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.273" endtime="20201030 18:30:13.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.275" endtime="20201030 18:30:13.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.246" endtime="20201030 18:30:13.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.244" endtime="20201030 18:30:13.278"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.280" endtime="20201030 18:30:13.282"></status>
</kw>
<msg timestamp="20201030 18:30:13.282" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:13.279" endtime="20201030 18:30:13.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.286" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:13.285" endtime="20201030 18:30:13.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.288" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:13.287" endtime="20201030 18:30:13.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.283" endtime="20201030 18:30:13.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.293" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:13.292" endtime="20201030 18:30:13.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.294" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:13.294" endtime="20201030 18:30:13.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.289" endtime="20201030 18:30:13.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.302" endtime="20201030 18:30:13.588"></status>
</kw>
<msg timestamp="20201030 18:30:13.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062827375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062850417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.300" endtime="20201030 18:30:13.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062827375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062850417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.592" endtime="20201030 18:30:13.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.600" endtime="20201030 18:30:13.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.298" endtime="20201030 18:30:13.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.296" endtime="20201030 18:30:13.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:13.607" level="INFO">${RESULT} = [{'diff': 2.3042000000000895e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.205500000000693e-05...</msg>
<status status="PASS" starttime="20201030 18:30:13.604" endtime="20201030 18:30:13.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:13.611" level="INFO">${OVERHEAD} = {'diff': [2.3042000000000895e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.205500000000693e-05, 2.202700000000779e-05, 2.2014000000000755e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:30:13.608" endtime="20201030 18:30:13.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.616" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:30:13.615" endtime="20201030 18:30:13.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.618" level="INFO">VALUE: [2.3042000000000895e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.205500000000693e-05, 2.202700000000779e-05, 2.2014000000000755e-05, 2.2055999999992526e-05, 2.2028000000007264e-05, 2.2069999999999035e-05, 2.204100000000042e-05, 2.2054999999993052e-05, 2.2041999999999895e-05, 2.2056000000006404e-05, 2.204100000000042e-05, 2.2054999999993052e-05, 2.206899999999956e-05, 2.2056000000006404e-05, 2.2054999999993052e-05, 2.206899999999956e-05, 2.2028000000007264e-05, 2.2055999999992526e-05, 2.2028000000007264e-05, 2.2041999999999895e-05, 2.205500000000693e-05, 2.2028000000007264e-05, 2.206899999999956e-05, 2.2054999999993052e-05, 2.2055999999992526e-05, 2.2069999999999035e-05, 2.2055999999992526e-05, 2.2014000000000755e-05, 2.2055999999992526e-05, 2.2041999999999895e-05, 2.204100000000042e-05, 2.2069999999999035e-05, 2.2000000000008124e-05, 2.204100000000042e-05, 2.2041999999999895e-05, 2.2055999999992526e-05, 2.2041999999999895e-05, 2.1985999999987738e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.204100000000042e-05, 2.205500000000693e-05, 2.2069999999999035e-05, 2.205500000000693e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:30:13.617" endtime="20201030 18:30:13.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.612" endtime="20201030 18:30:13.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.623" endtime="20201030 18:30:13.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.621" endtime="20201030 18:30:13.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.620" endtime="20201030 18:30:13.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.242" endtime="20201030 18:30:13.643"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:13.174" endtime="20201030 18:30:13.644" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.651" endtime="20201030 18:30:13.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.649" endtime="20201030 18:30:13.671"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.684" endtime="20201030 18:30:13.696"></status>
</kw>
<msg timestamp="20201030 18:30:13.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.683" endtime="20201030 18:30:13.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.698" endtime="20201030 18:30:13.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.702" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:13.700" endtime="20201030 18:30:13.703"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:13.680" endtime="20201030 18:30:13.703"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:13.678" endtime="20201030 18:30:13.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.677" endtime="20201030 18:30:13.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:13.708" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:13.707" endtime="20201030 18:30:13.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.705" endtime="20201030 18:30:13.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.676" endtime="20201030 18:30:13.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.675" endtime="20201030 18:30:13.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.710" endtime="20201030 18:30:13.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.673" endtime="20201030 18:30:13.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.671" endtime="20201030 18:30:13.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.648" endtime="20201030 18:30:13.713"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.721" endtime="20201030 18:30:13.867"></status>
</kw>
<msg timestamp="20201030 18:30:13.867" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.719" endtime="20201030 18:30:13.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.870" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.868" endtime="20201030 18:30:13.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.871" endtime="20201030 18:30:13.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.717" endtime="20201030 18:30:13.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.715" endtime="20201030 18:30:13.874"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.877" endtime="20201030 18:30:13.879"></status>
</kw>
<msg timestamp="20201030 18:30:13.880" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:13.876" endtime="20201030 18:30:13.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.889" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:13.883" endtime="20201030 18:30:13.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.892" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:13.891" endtime="20201030 18:30:13.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.881" endtime="20201030 18:30:13.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.897" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:13.896" endtime="20201030 18:30:13.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.899" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:13.898" endtime="20201030 18:30:13.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.894" endtime="20201030 18:30:13.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.906" endtime="20201030 18:30:14.199"></status>
</kw>
<msg timestamp="20201030 18:30:14.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065032097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065087819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.904" endtime="20201030 18:30:14.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065032097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065087819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.203" endtime="20201030 18:30:14.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.211" endtime="20201030 18:30:14.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.902" endtime="20201030 18:30:14.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.900" endtime="20201030 18:30:14.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:14.218" level="INFO">${RESULT} = [{'diff': 5.572200000000804e-05}, {'diff': 5.4999999999999494e-05}, {'diff': 5.493100000000806e-05}, {'diff': 5.4957999999993845e-05}, {'diff': 5.4943999999987336e-05}, {'diff': 5.5013999999992125e-05...</msg>
<status status="PASS" starttime="20201030 18:30:14.215" endtime="20201030 18:30:14.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:14.222" level="INFO">${OVERHEAD} = {'diff': [5.572200000000804e-05, 5.4999999999999494e-05, 5.493100000000806e-05, 5.4957999999993845e-05, 5.4943999999987336e-05, 5.5013999999992125e-05, 5.4944000000001214e-05, 5.493099999999418e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:30:14.219" endtime="20201030 18:30:14.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.227" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:30:14.226" endtime="20201030 18:30:14.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.230" level="INFO">VALUE: [5.572200000000804e-05, 5.4999999999999494e-05, 5.493100000000806e-05, 5.4957999999993845e-05, 5.4943999999987336e-05, 5.5013999999992125e-05, 5.4944000000001214e-05, 5.493099999999418e-05, 5.4957999999993845e-05, 5.494500000000069e-05, 5.494500000000069e-05, 5.494500000000069e-05, 5.494499999998681e-05, 5.491700000000155e-05, 5.493100000000806e-05, 5.490299999999504e-05, 5.490299999999504e-05, 5.493099999999418e-05, 5.4972000000000354e-05, 5.4972000000000354e-05, 5.497299999999983e-05, 5.493100000000806e-05, 5.4929999999994705e-05, 5.494500000000069e-05, 5.4971999999986476e-05, 5.494500000000069e-05, 5.4944000000001214e-05, 5.495899999999332e-05, 5.493000000000858e-05, 5.4944000000001214e-05, 5.49580000000216e-05, 5.4944000000001214e-05, 5.4944000000001214e-05, 5.4999999999999494e-05, 5.4944000000001214e-05, 5.4944000000001214e-05, 5.494500000000069e-05, 5.497200000001423e-05, 5.494500000000069e-05, 5.4944000000001214e-05, 5.493100000000806e-05, 5.49309999999803e-05, 5.4917000000015426e-05, 5.491699999998767e-05, 5.4915999999988196e-05, 5.494500000000069e-05, 5.49309999999803e-05, 5.493100000000806e-05, 5.4903000000022795e-05, 5.4915999999988196e-05]</msg>
<status status="PASS" starttime="20201030 18:30:14.229" endtime="20201030 18:30:14.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.223" endtime="20201030 18:30:14.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:14.234" endtime="20201030 18:30:14.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.233" endtime="20201030 18:30:14.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.232" endtime="20201030 18:30:14.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.713" endtime="20201030 18:30:14.255"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:13.645" endtime="20201030 18:30:14.255" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:14.262" endtime="20201030 18:30:14.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.261" endtime="20201030 18:30:14.284"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.310" endtime="20201030 18:30:14.326"></status>
</kw>
<msg timestamp="20201030 18:30:14.327" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.307" endtime="20201030 18:30:14.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.329" endtime="20201030 18:30:14.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.338" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:14.334" endtime="20201030 18:30:14.339"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:14.302" endtime="20201030 18:30:14.340"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:14.297" endtime="20201030 18:30:14.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.294" endtime="20201030 18:30:14.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:14.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:14.348" endtime="20201030 18:30:14.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.344" endtime="20201030 18:30:14.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.293" endtime="20201030 18:30:14.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.292" endtime="20201030 18:30:14.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.354" endtime="20201030 18:30:14.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.289" endtime="20201030 18:30:14.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.285" endtime="20201030 18:30:14.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.259" endtime="20201030 18:30:14.359"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.378" endtime="20201030 18:30:14.804"></status>
</kw>
<msg timestamp="20201030 18:30:14.805" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.375" endtime="20201030 18:30:14.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.807" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.806" endtime="20201030 18:30:14.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.809" endtime="20201030 18:30:14.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.368" endtime="20201030 18:30:14.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.364" endtime="20201030 18:30:14.812"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.815" endtime="20201030 18:30:14.817"></status>
</kw>
<msg timestamp="20201030 18:30:14.817" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:14.813" endtime="20201030 18:30:14.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.821" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:14.820" endtime="20201030 18:30:14.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.824" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:14.823" endtime="20201030 18:30:14.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.818" endtime="20201030 18:30:14.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.830" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:14.828" endtime="20201030 18:30:14.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.832" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:14.831" endtime="20201030 18:30:14.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.826" endtime="20201030 18:30:14.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.841" endtime="20201030 18:30:15.140"></status>
</kw>
<msg timestamp="20201030 18:30:15.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.115763736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.115841278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.839" endtime="20201030 18:30:15.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.115763736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.115841278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.150" endtime="20201030 18:30:15.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.169" endtime="20201030 18:30:15.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.836" endtime="20201030 18:30:15.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.834" endtime="20201030 18:30:15.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:15.184" level="INFO">${RESULT} = [{'diff': 7.754199999999989e-05}, {'diff': 7.67910000000066e-05}, {'diff': 7.676400000000694e-05}, {'diff': 7.673600000002168e-05}, {'diff': 7.673600000002168e-05}, {'diff': 7.673599999999392e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:15.177" endtime="20201030 18:30:15.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:15.193" level="INFO">${OVERHEAD} = {'diff': [7.754199999999989e-05, 7.67910000000066e-05, 7.676400000000694e-05, 7.673600000002168e-05, 7.673600000002168e-05, 7.673599999999392e-05, 7.674999999998655e-05, 7.672200000000129e-05, 7.67910...</msg>
<status status="PASS" starttime="20201030 18:30:15.187" endtime="20201030 18:30:15.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.197" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:30:15.196" endtime="20201030 18:30:15.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.200" level="INFO">VALUE: [7.754199999999989e-05, 7.67910000000066e-05, 7.676400000000694e-05, 7.673600000002168e-05, 7.673600000002168e-05, 7.673599999999392e-05, 7.674999999998655e-05, 7.672200000000129e-05, 7.679100000002048e-05, 7.673599999999392e-05, 7.673599999999392e-05, 7.672200000000129e-05, 7.670800000000866e-05, 7.670900000000813e-05, 7.675000000001431e-05, 7.672200000000129e-05, 7.670900000000813e-05, 7.673600000002168e-05, 7.673599999996616e-05, 7.673599999996616e-05, 7.676400000000694e-05, 7.668100000002287e-05, 7.673600000002168e-05, 7.672199999997353e-05, 7.673600000002168e-05, 7.672300000000076e-05, 7.673599999996616e-05, 7.673599999996616e-05, 7.673600000002168e-05, 7.673600000002168e-05, 7.673600000002168e-05, 7.673599999996616e-05, 7.672199999997353e-05, 7.673600000002168e-05, 7.673600000002168e-05, 7.675000000001431e-05, 7.672199999997353e-05, 7.67079999999809e-05, 7.67499999999588e-05, 7.667999999999564e-05, 7.672200000002904e-05, 7.67079999999809e-05, 7.673600000002168e-05, 7.672200000002904e-05, 7.673600000002168e-05, 7.672300000000076e-05, 7.673600000002168e-05, 7.673599999996616e-05, 7.67369999999934e-05, 7.672199999997353e-05]</msg>
<status status="PASS" starttime="20201030 18:30:15.198" endtime="20201030 18:30:15.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.194" endtime="20201030 18:30:15.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.204" endtime="20201030 18:30:15.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.203" endtime="20201030 18:30:15.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.201" endtime="20201030 18:30:15.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.360" endtime="20201030 18:30:15.224"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:14.257" endtime="20201030 18:30:15.225" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.232" endtime="20201030 18:30:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.230" endtime="20201030 18:30:15.252"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.264" endtime="20201030 18:30:15.277"></status>
</kw>
<msg timestamp="20201030 18:30:15.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.263" endtime="20201030 18:30:15.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.279" endtime="20201030 18:30:15.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.283" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:15.281" endtime="20201030 18:30:15.283"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:15.260" endtime="20201030 18:30:15.284"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:15.258" endtime="20201030 18:30:15.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.257" endtime="20201030 18:30:15.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:15.289" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:15.288" endtime="20201030 18:30:15.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.286" endtime="20201030 18:30:15.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.256" endtime="20201030 18:30:15.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.255" endtime="20201030 18:30:15.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.291" endtime="20201030 18:30:15.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.254" endtime="20201030 18:30:15.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.252" endtime="20201030 18:30:15.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.229" endtime="20201030 18:30:15.293"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.297" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:15.305" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:16.455" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:15.295" endtime="20201030 18:30:16.456"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.459" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:16.457" endtime="20201030 18:30:16.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.294" endtime="20201030 18:30:16.459"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.469" endtime="20201030 18:30:16.477"></status>
</kw>
<msg timestamp="20201030 18:30:16.478" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.467" endtime="20201030 18:30:16.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.480" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.479" endtime="20201030 18:30:16.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.481" endtime="20201030 18:30:16.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.465" endtime="20201030 18:30:16.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.463" endtime="20201030 18:30:16.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.490" endtime="20201030 18:30:16.790"></status>
</kw>
<msg timestamp="20201030 18:30:16.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.847272361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171902194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.489" endtime="20201030 18:30:16.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.847272361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171902194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.795" endtime="20201030 18:30:16.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.803" endtime="20201030 18:30:16.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.486" endtime="20201030 18:30:16.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.485" endtime="20201030 18:30:16.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:16.810" level="INFO">${PHILIP_RES} = [{'diff': 0.32462983300000003}, {'diff': 3.544400000010661e-05}, {'diff': 3.376300000001997e-05}, {'diff': 3.375000000005457e-05}, {'diff': 3.373600000000643e-05}, {'diff': 3.379199999997695e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:16.806" endtime="20201030 18:30:16.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:16.815" level="INFO">${RESULT} = {'diff': [0.32462983300000003, 3.544400000010661e-05, 3.376300000001997e-05, 3.375000000005457e-05, 3.373600000000643e-05, 3.379199999997695e-05, 3.370799999991014e-05, 3.375000000005457e-05, 3.375000...</msg>
<status status="PASS" starttime="20201030 18:30:16.811" endtime="20201030 18:30:16.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.821" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:16.819" endtime="20201030 18:30:16.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.823" level="INFO">VALUE: [0.32462983300000003, 3.544400000010661e-05, 3.376300000001997e-05, 3.375000000005457e-05, 3.373600000000643e-05, 3.379199999997695e-05, 3.370799999991014e-05, 3.375000000005457e-05, 3.375000000005457e-05, 3.376399999988067e-05, 3.376300000001997e-05, 3.376400000010271e-05, 3.376399999988067e-05, 3.3791000000116256e-05, 3.376400000010271e-05, 3.376399999988067e-05, 3.375000000005457e-05, 3.373600000000643e-05, 3.3693999999862e-05, 3.373600000000643e-05, 3.375000000005457e-05, 3.373700000008917e-05, 3.376399999988067e-05, 3.38050000001644e-05, 3.373600000000643e-05, 3.3778000000150854e-05, 3.377799999992881e-05, 3.376399999988067e-05, 3.375000000005457e-05, 3.376400000010271e-05, 3.379099999989421e-05, 3.376400000010271e-05, 3.376400000010271e-05, 3.373600000000643e-05, 3.375000000005457e-05, 3.3749999999832525e-05, 3.373600000000643e-05, 3.376399999988067e-05, 3.376400000010271e-05, 3.375000000005457e-05, 3.3708999999992884e-05, 3.3749999999832525e-05, 3.375000000005457e-05, 3.3694000000084046e-05, 3.383400000012138e-05, 3.3749999999832525e-05, 3.375000000005457e-05, 3.375000000005457e-05, 3.376399999988067e-05, 3.369499999994474e-05, 3.379199999997695e-05]</msg>
<status status="PASS" starttime="20201030 18:30:16.822" endtime="20201030 18:30:16.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.817" endtime="20201030 18:30:16.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:16.828" endtime="20201030 18:30:16.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.826" endtime="20201030 18:30:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.825" endtime="20201030 18:30:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.461" endtime="20201030 18:30:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.461" endtime="20201030 18:30:16.848"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.857" endtime="20201030 18:30:16.868"></status>
</kw>
<msg timestamp="20201030 18:30:16.868" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.855" endtime="20201030 18:30:16.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.870" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.869" endtime="20201030 18:30:16.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.872" endtime="20201030 18:30:16.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.853" endtime="20201030 18:30:16.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.851" endtime="20201030 18:30:16.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.882" endtime="20201030 18:30:17.171"></status>
</kw>
<msg timestamp="20201030 18:30:17.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018420417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018473431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.879" endtime="20201030 18:30:17.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018420417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018473431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.175" endtime="20201030 18:30:17.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.183" endtime="20201030 18:30:17.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.876" endtime="20201030 18:30:17.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.875" endtime="20201030 18:30:17.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:17.190" level="INFO">${PHILIP_RES} = [{'diff': 5.3013999999997063e-05}, {'diff': 5.127800000000182e-05}, {'diff': 5.132000000000053e-05}, {'diff': 5.130600000000096e-05}, {'diff': 5.130500000000149e-05}, {'diff': 5.123599999999964e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:17.186" endtime="20201030 18:30:17.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.194" level="INFO">${RESULT} = {'diff': [5.3013999999997063e-05, 5.127800000000182e-05, 5.132000000000053e-05, 5.130600000000096e-05, 5.130500000000149e-05, 5.123599999999964e-05, 5.131900000000106e-05, 5.131899999999759e-05, 5.129...</msg>
<status status="PASS" starttime="20201030 18:30:17.191" endtime="20201030 18:30:17.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.198" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:17.197" endtime="20201030 18:30:17.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.201" level="INFO">VALUE: [5.3013999999997063e-05, 5.127800000000182e-05, 5.132000000000053e-05, 5.130600000000096e-05, 5.130500000000149e-05, 5.123599999999964e-05, 5.131900000000106e-05, 5.131899999999759e-05, 5.129200000000139e-05, 5.131900000000106e-05, 5.130599999999749e-05, 5.127699999999888e-05, 5.131900000000106e-05, 5.132000000000053e-05, 5.131900000000106e-05, 5.129199999999792e-05, 5.132000000000053e-05, 5.131900000000106e-05, 5.124999999999921e-05, 5.130500000000149e-05, 5.133300000000063e-05, 5.132000000000053e-05, 5.132000000000053e-05, 5.130499999999802e-05, 5.130600000000096e-05, 5.129100000000192e-05, 5.130599999999749e-05, 5.132000000000053e-05, 5.131900000000106e-05, 5.129199999999792e-05, 5.130600000000096e-05, 5.130499999999802e-05, 5.129200000000139e-05, 5.129100000000192e-05, 5.129199999999792e-05, 5.126400000000225e-05, 5.131899999999759e-05, 5.130500000000149e-05, 5.131999999999706e-05, 5.130499999999802e-05, 5.130500000000149e-05, 5.127799999999835e-05, 5.133300000000063e-05, 5.130499999999802e-05, 5.132000000000053e-05, 5.130500000000149e-05, 5.130600000000096e-05, 5.131899999999759e-05, 5.129200000000139e-05, 5.131999999999706e-05]</msg>
<status status="PASS" starttime="20201030 18:30:17.199" endtime="20201030 18:30:17.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.195" endtime="20201030 18:30:17.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.205" endtime="20201030 18:30:17.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.204" endtime="20201030 18:30:17.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.203" endtime="20201030 18:30:17.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.849" endtime="20201030 18:30:17.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.849" endtime="20201030 18:30:17.226"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.235" endtime="20201030 18:30:17.248"></status>
</kw>
<msg timestamp="20201030 18:30:17.249" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.234" endtime="20201030 18:30:17.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.251" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.250" endtime="20201030 18:30:17.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.252" endtime="20201030 18:30:17.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.230" endtime="20201030 18:30:17.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.228" endtime="20201030 18:30:17.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.265" endtime="20201030 18:30:17.553"></status>
</kw>
<msg timestamp="20201030 18:30:17.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019112083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019183111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.263" endtime="20201030 18:30:17.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019112083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019183111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.557" endtime="20201030 18:30:17.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.565" endtime="20201030 18:30:17.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.259" endtime="20201030 18:30:17.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.256" endtime="20201030 18:30:17.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:17.572" level="INFO">${PHILIP_RES} = [{'diff': 7.102800000000076e-05}, {'diff': 6.92360000000003e-05}, {'diff': 6.923599999999683e-05}, {'diff': 6.918100000000149e-05}, {'diff': 6.924999999999987e-05}, {'diff': 6.924999999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:17.568" endtime="20201030 18:30:17.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.576" level="INFO">${RESULT} = {'diff': [7.102800000000076e-05, 6.92360000000003e-05, 6.923599999999683e-05, 6.918100000000149e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.926299999999996e-05, 6.926399999999944e-05, 6.92499...</msg>
<status status="PASS" starttime="20201030 18:30:17.573" endtime="20201030 18:30:17.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.581" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:17.580" endtime="20201030 18:30:17.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.583" level="INFO">VALUE: [7.102800000000076e-05, 6.92360000000003e-05, 6.923599999999683e-05, 6.918100000000149e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.926299999999996e-05, 6.926399999999944e-05, 6.924999999999987e-05, 6.92360000000003e-05, 6.924999999999987e-05, 6.92360000000003e-05, 6.931999999999772e-05, 6.919400000000159e-05, 6.92360000000003e-05, 6.922200000000073e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.92360000000003e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.919500000000106e-05, 6.916699999999845e-05, 6.926399999999944e-05, 6.926399999999944e-05, 6.92360000000003e-05, 6.926399999999944e-05, 6.920800000000116e-05, 6.932000000000119e-05, 6.930600000000162e-05, 6.930499999999867e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.926399999999944e-05, 6.926399999999944e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.92360000000003e-05, 6.926399999999944e-05, 6.924999999999987e-05, 6.923699999999977e-05, 6.924999999999987e-05, 6.922200000000073e-05, 6.924999999999987e-05, 6.927799999999901e-05]</msg>
<status status="PASS" starttime="20201030 18:30:17.582" endtime="20201030 18:30:17.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.577" endtime="20201030 18:30:17.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.588" endtime="20201030 18:30:17.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.586" endtime="20201030 18:30:17.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.585" endtime="20201030 18:30:17.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.227" endtime="20201030 18:30:17.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.226" endtime="20201030 18:30:17.608"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.616" endtime="20201030 18:30:17.632"></status>
</kw>
<msg timestamp="20201030 18:30:17.633" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.615" endtime="20201030 18:30:17.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.635" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.634" endtime="20201030 18:30:17.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.636" endtime="20201030 18:30:17.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.613" endtime="20201030 18:30:17.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.611" endtime="20201030 18:30:17.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.646" endtime="20201030 18:30:17.932"></status>
</kw>
<msg timestamp="20201030 18:30:17.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018265236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018354917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.644" endtime="20201030 18:30:17.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018265236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018354917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.936" endtime="20201030 18:30:17.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.944" endtime="20201030 18:30:17.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.641" endtime="20201030 18:30:17.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.639" endtime="20201030 18:30:17.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:17.951" level="INFO">${PHILIP_RES} = [{'diff': 8.968099999999771e-05}, {'diff': 8.787499999999768e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.788800000000124e-05}, {'diff': 8.786099999999811e-05}, {'diff': 8.78189999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:17.947" endtime="20201030 18:30:17.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.956" level="INFO">${RESULT} = {'diff': [8.968099999999771e-05, 8.787499999999768e-05, 8.787500000000115e-05, 8.788800000000124e-05, 8.786099999999811e-05, 8.78189999999994e-05, 8.786099999999811e-05, 8.786100000000158e-05, 8.79030...</msg>
<status status="PASS" starttime="20201030 18:30:17.952" endtime="20201030 18:30:17.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.960" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:17.959" endtime="20201030 18:30:17.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.962" level="INFO">VALUE: [8.968099999999771e-05, 8.787499999999768e-05, 8.787500000000115e-05, 8.788800000000124e-05, 8.786099999999811e-05, 8.78189999999994e-05, 8.786099999999811e-05, 8.786100000000158e-05, 8.790300000000029e-05, 8.788900000000072e-05, 8.790300000000029e-05, 8.788900000000072e-05, 8.788900000000072e-05, 8.787499999999768e-05, 8.787500000000115e-05, 8.791600000000038e-05, 8.787500000000115e-05, 8.791699999999986e-05, 8.794400000000299e-05, 8.787500000000115e-05, 8.788799999999777e-05, 8.779100000000026e-05, 8.787499999999768e-05, 8.791699999999986e-05, 8.787500000000115e-05, 8.786099999999811e-05, 8.788800000000124e-05, 8.791699999999986e-05, 8.783299999999897e-05, 8.795799999999909e-05, 8.787500000000115e-05, 8.790200000000081e-05, 8.788899999999725e-05, 8.787500000000115e-05, 8.786099999999811e-05, 8.783300000000244e-05, 8.787499999999768e-05, 8.790300000000029e-05, 8.790200000000081e-05, 8.786100000000158e-05, 8.788900000000072e-05, 8.790300000000029e-05, 8.788900000000072e-05, 8.786099999999811e-05, 8.788900000000072e-05, 8.787499999999768e-05, 8.790300000000029e-05, 8.790300000000029e-05, 8.787500000000115e-05, 8.787499999999768e-05]</msg>
<status status="PASS" starttime="20201030 18:30:17.961" endtime="20201030 18:30:17.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.956" endtime="20201030 18:30:17.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.967" endtime="20201030 18:30:17.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.965" endtime="20201030 18:30:17.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.964" endtime="20201030 18:30:17.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.609" endtime="20201030 18:30:17.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.609" endtime="20201030 18:30:17.987"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.996" endtime="20201030 18:30:18.014"></status>
</kw>
<msg timestamp="20201030 18:30:18.015" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.994" endtime="20201030 18:30:18.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.017" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.016" endtime="20201030 18:30:18.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.018" endtime="20201030 18:30:18.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.992" endtime="20201030 18:30:18.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.990" endtime="20201030 18:30:18.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.027" endtime="20201030 18:30:18.313"></status>
</kw>
<msg timestamp="20201030 18:30:18.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018455208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.025" endtime="20201030 18:30:18.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018455208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.317" endtime="20201030 18:30:18.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.334" endtime="20201030 18:30:18.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.023" endtime="20201030 18:30:18.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.021" endtime="20201030 18:30:18.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:18.341" level="INFO">${PHILIP_RES} = [{'diff': 0.00010897200000000232}, {'diff': 0.00010723600000000014}, {'diff': 0.00010727799999999885}, {'diff': 0.00010723600000000014}, {'diff': 0.00010726399999999928}, {'diff': 0.000107236000000000...</msg>
<status status="PASS" starttime="20201030 18:30:18.338" endtime="20201030 18:30:18.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.346" level="INFO">${RESULT} = {'diff': [0.00010897200000000232, 0.00010723600000000014, 0.00010727799999999885, 0.00010723600000000014, 0.00010726399999999928, 0.00010723600000000014, 0.0001072499999999997, 0.00010719399999999796,...</msg>
<status status="PASS" starttime="20201030 18:30:18.342" endtime="20201030 18:30:18.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.350" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:18.349" endtime="20201030 18:30:18.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.353" level="INFO">VALUE: [0.00010897200000000232, 0.00010723600000000014, 0.00010727799999999885, 0.00010723600000000014, 0.00010726399999999928, 0.00010723600000000014, 0.0001072499999999997, 0.00010719399999999796, 0.00010722200000000057, 0.0001072499999999997, 0.00010720799999999753, 0.00010722200000000057, 0.00010723600000000014, 0.00010720900000000047, 0.0001072499999999997, 0.00010727800000000232, 0.00010722200000000057, 0.00010723600000000014, 0.0001072499999999997, 0.00010727699999999937, 0.00010726399999999928, 0.00010726399999999928, 0.0001072499999999997, 0.00010726399999999928, 0.0001072499999999997, 0.00010722200000000057, 0.0001072499999999997, 0.00010729100000000241, 0.00010723600000000014, 0.00010723600000000014, 0.00010726400000000275, 0.00010723699999999961, 0.00010722300000000004, 0.00010725000000000318, 0.00010722300000000004, 0.00010723600000000014, 0.0001072499999999997, 0.0001072499999999997, 0.00010727799999999885, 0.00010722200000000057, 0.00010729099999999894, 0.00010729199999999842, 0.0001072499999999997, 0.0001072499999999997, 0.0001072499999999997, 0.00010723600000000014, 0.00010722200000000057, 0.00010726399999999928, 0.0001072499999999997, 0.00010723600000000014]</msg>
<status status="PASS" starttime="20201030 18:30:18.352" endtime="20201030 18:30:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.347" endtime="20201030 18:30:18.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.357" endtime="20201030 18:30:18.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.356" endtime="20201030 18:30:18.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.355" endtime="20201030 18:30:18.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.988" endtime="20201030 18:30:18.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.988" endtime="20201030 18:30:18.378"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.386" endtime="20201030 18:30:18.408"></status>
</kw>
<msg timestamp="20201030 18:30:18.409" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.385" endtime="20201030 18:30:18.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.411" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.410" endtime="20201030 18:30:18.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.412" endtime="20201030 18:30:18.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.382" endtime="20201030 18:30:18.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.380" endtime="20201030 18:30:18.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.421" endtime="20201030 18:30:18.706"></status>
</kw>
<msg timestamp="20201030 18:30:18.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.419" endtime="20201030 18:30:18.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.711" endtime="20201030 18:30:18.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.718" endtime="20201030 18:30:18.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.417" endtime="20201030 18:30:18.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.415" endtime="20201030 18:30:18.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:18.725" level="INFO">${PHILIP_RES} = [{'diff': 0.00012912500000000077}, {'diff': 0.00012736099999999945}, {'diff': 0.00012736099999999945}, {'diff': 0.00012737499999999902}, {'diff': 0.00012730600000000064}, {'diff': 0.000127346999999999...</msg>
<status status="PASS" starttime="20201030 18:30:18.722" endtime="20201030 18:30:18.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.729" level="INFO">${RESULT} = {'diff': [0.00012912500000000077, 0.00012736099999999945, 0.00012736099999999945, 0.00012737499999999902, 0.00012730600000000064, 0.00012734699999999988, 0.00012730600000000064, 0.00012731900000000074...</msg>
<status status="PASS" starttime="20201030 18:30:18.726" endtime="20201030 18:30:18.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.733" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:18.732" endtime="20201030 18:30:18.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.735" level="INFO">VALUE: [0.00012912500000000077, 0.00012736099999999945, 0.00012736099999999945, 0.00012737499999999902, 0.00012730600000000064, 0.00012734699999999988, 0.00012730600000000064, 0.00012731900000000074, 0.00012736100000000292, 0.00012734699999999988, 0.00012730500000000117, 0.00012736099999999945, 0.00012736099999999945, 0.00012740199999999868, 0.00012737499999999902, 0.00012740300000000163, 0.00012736099999999945, 0.00012736099999999945, 0.00012737499999999902, 0.00012734699999999988, 0.00012734699999999988, 0.00012736099999999945, 0.0001273330000000003, 0.00012736099999999945, 0.0001273330000000003, 0.00012734699999999988, 0.00012731900000000074, 0.00012736099999999945, 0.00012736099999999945, 0.00012734699999999988, 0.00012736099999999945, 0.0001273330000000003, 0.00012730600000000064, 0.00012734699999999988, 0.00012734699999999988, 0.00012731999999999674, 0.00012734799999999935, 0.00012736199999999892, 0.00012734799999999935, 0.00012734799999999935, 0.00012733399999999978, 0.00012733399999999978, 0.00012737499999999902, 0.00012730500000000117, 0.0001273330000000003, 0.00012736099999999945, 0.00012740299999999816, 0.00012734699999999988, 0.0001273889999999986, 0.00012734699999999988]</msg>
<status status="PASS" starttime="20201030 18:30:18.734" endtime="20201030 18:30:18.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.729" endtime="20201030 18:30:18.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.743" endtime="20201030 18:30:18.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.741" endtime="20201030 18:30:18.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.740" endtime="20201030 18:30:18.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.379" endtime="20201030 18:30:18.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.378" endtime="20201030 18:30:18.763"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.772" endtime="20201030 18:30:18.795"></status>
</kw>
<msg timestamp="20201030 18:30:18.796" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.770" endtime="20201030 18:30:18.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.798" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.797" endtime="20201030 18:30:18.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.799" endtime="20201030 18:30:18.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.768" endtime="20201030 18:30:18.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.766" endtime="20201030 18:30:18.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.808" endtime="20201030 18:30:19.094"></status>
</kw>
<msg timestamp="20201030 18:30:19.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018358944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.807" endtime="20201030 18:30:19.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018358944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.099" endtime="20201030 18:30:19.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.108" endtime="20201030 18:30:19.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.804" endtime="20201030 18:30:19.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.802" endtime="20201030 18:30:19.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:19.115" level="INFO">${PHILIP_RES} = [{'diff': 0.00014995799999999865}, {'diff': 0.00014822199999999994}, {'diff': 0.00014820800000000037}, {'diff': 0.0001482359999999995}, {'diff': 0.0001482359999999995}, {'diff': 0.0001482359999999995}...</msg>
<status status="PASS" starttime="20201030 18:30:19.111" endtime="20201030 18:30:19.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.121" level="INFO">${RESULT} = {'diff': [0.00014995799999999865, 0.00014822199999999994, 0.00014820800000000037, 0.0001482359999999995, 0.0001482359999999995, 0.0001482359999999995, 0.0001482229999999994, 0.00014822199999999994, 0....</msg>
<status status="PASS" starttime="20201030 18:30:19.116" endtime="20201030 18:30:19.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.125" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:19.124" endtime="20201030 18:30:19.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.128" level="INFO">VALUE: [0.00014995799999999865, 0.00014822199999999994, 0.00014820800000000037, 0.0001482359999999995, 0.0001482359999999995, 0.0001482359999999995, 0.0001482229999999994, 0.00014822199999999994, 0.00014827800000000169, 0.0001482359999999995, 0.00014822199999999994, 0.00014822199999999994, 0.00014823700000000245, 0.00014823600000000298, 0.00014822199999999994, 0.00014827799999999822, 0.00014822199999999994, 0.00014826399999999865, 0.0001482359999999995, 0.00014826399999999865, 0.00014819399999999733, 0.00014822199999999994, 0.00014822199999999994, 0.00014823700000000245, 0.0001482359999999995, 0.00014819399999999733, 0.00014819399999999733, 0.00014827799999999822, 0.00014823699999999898, 0.00014812500000000242, 0.0001481940000000008, 0.0001481940000000008, 0.00014820899999999984, 0.00014819399999999733, 0.00014820800000000037, 0.00014826400000000212, 0.00014820899999999637, 0.0001482090000000033, 0.00014829200000000126, 0.00014820899999999637, 0.00014822299999999594, 0.0001482090000000033, 0.00014820800000000384, 0.0001482079999999969, 0.00014818099999999723, 0.0001481949999999968, 0.0001482220000000034, 0.00014819500000000374, 0.00014820899999999637, 0.00014820899999999637]</msg>
<status status="PASS" starttime="20201030 18:30:19.127" endtime="20201030 18:30:19.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.122" endtime="20201030 18:30:19.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.132" endtime="20201030 18:30:19.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.131" endtime="20201030 18:30:19.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.130" endtime="20201030 18:30:19.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.764" endtime="20201030 18:30:19.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.764" endtime="20201030 18:30:19.153"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.161" endtime="20201030 18:30:19.188"></status>
</kw>
<msg timestamp="20201030 18:30:19.188" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.160" endtime="20201030 18:30:19.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.190" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.189" endtime="20201030 18:30:19.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.192" endtime="20201030 18:30:19.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.157" endtime="20201030 18:30:19.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.155" endtime="20201030 18:30:19.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.201" endtime="20201030 18:30:19.486"></status>
</kw>
<msg timestamp="20201030 18:30:19.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018371153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01854275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:19.199" endtime="20201030 18:30:19.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018371153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01854275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:19.490" endtime="20201030 18:30:19.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.498" endtime="20201030 18:30:19.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.197" endtime="20201030 18:30:19.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.195" endtime="20201030 18:30:19.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:19.505" level="INFO">${PHILIP_RES} = [{'diff': 0.00017159699999999903}, {'diff': 0.00016988799999999998}, {'diff': 0.0001698199999999976}, {'diff': 0.00016983400000000065}, {'diff': 0.00016984700000000075}, {'diff': 0.0001698200000000010...</msg>
<status status="PASS" starttime="20201030 18:30:19.502" endtime="20201030 18:30:19.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.509" level="INFO">${RESULT} = {'diff': [0.00017159699999999903, 0.00016988799999999998, 0.0001698199999999976, 0.00016983400000000065, 0.00016984700000000075, 0.00016982000000000108, 0.00016983400000000065, 0.00016984800000000022,...</msg>
<status status="PASS" starttime="20201030 18:30:19.506" endtime="20201030 18:30:19.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.513" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:19.512" endtime="20201030 18:30:19.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.515" level="INFO">VALUE: [0.00017159699999999903, 0.00016988799999999998, 0.0001698199999999976, 0.00016983400000000065, 0.00016984700000000075, 0.00016982000000000108, 0.00016983400000000065, 0.00016984800000000022, 0.00016986100000000032, 0.00016984700000000075, 0.00016984700000000075, 0.00016983400000000065, 0.0001698749999999999, 0.00016986100000000032, 0.00016984700000000075, 0.00016983399999999718, 0.00016988899999999946, 0.00016983400000000065, 0.00016983400000000065, 0.0001697779999999989, 0.00016976299999999986, 0.00016984700000000075, 0.00016988899999999946, 0.00016984700000000075, 0.00016982000000000108, 0.00016984700000000075, 0.00016988900000000293, 0.00016983300000000118, 0.00016984800000000022, 0.00016984700000000075, 0.00016983300000000118, 0.00016984700000000075, 0.00016984800000000022, 0.00016984700000000075, 0.00016986100000000032, 0.00016986100000000032, 0.00016988899999999946, 0.00016986100000000032, 0.00016984800000000022, 0.0001699169999999986, 0.00016984800000000022, 0.00016982000000000108, 0.00016983299999999424, 0.00016983400000000065, 0.00016983400000000065, 0.00016977800000000237, 0.00016983300000000118, 0.00016977799999999543, 0.00016984800000000022, 0.00016984700000000075]</msg>
<status status="PASS" starttime="20201030 18:30:19.514" endtime="20201030 18:30:19.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.510" endtime="20201030 18:30:19.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.520" endtime="20201030 18:30:19.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.518" endtime="20201030 18:30:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.517" endtime="20201030 18:30:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.154" endtime="20201030 18:30:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.153" endtime="20201030 18:30:19.540"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.549" endtime="20201030 18:30:19.579"></status>
</kw>
<msg timestamp="20201030 18:30:19.579" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.547" endtime="20201030 18:30:19.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.582" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.580" endtime="20201030 18:30:19.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.583" endtime="20201030 18:30:19.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.545" endtime="20201030 18:30:19.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.543" endtime="20201030 18:30:19.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.592" endtime="20201030 18:30:19.877"></status>
</kw>
<msg timestamp="20201030 18:30:19.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01917175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019365681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:19.590" endtime="20201030 18:30:19.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01917175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019365681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:19.881" endtime="20201030 18:30:19.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.889" endtime="20201030 18:30:19.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.588" endtime="20201030 18:30:19.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.586" endtime="20201030 18:30:19.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:19.895" level="INFO">${PHILIP_RES} = [{'diff': 0.00019393099999999788}, {'diff': 0.00019220799999999927}, {'diff': 0.0001922229999999983}, {'diff': 0.0001921939999999997}, {'diff': 0.0001922220000000023}, {'diff': 0.00019223600000000188}...</msg>
<status status="PASS" starttime="20201030 18:30:19.892" endtime="20201030 18:30:19.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.899" level="INFO">${RESULT} = {'diff': [0.00019393099999999788, 0.00019220799999999927, 0.0001922229999999983, 0.0001921939999999997, 0.0001922220000000023, 0.00019223600000000188, 0.00019220899999999874, 0.00019220799999999927, 0...</msg>
<status status="PASS" starttime="20201030 18:30:19.896" endtime="20201030 18:30:19.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.903" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:19.902" endtime="20201030 18:30:19.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.906" level="INFO">VALUE: [0.00019393099999999788, 0.00019220799999999927, 0.0001922229999999983, 0.0001921939999999997, 0.0001922220000000023, 0.00019223600000000188, 0.00019220899999999874, 0.00019220799999999927, 0.0001922229999999983, 0.00019220899999999874, 0.0001922359999999984, 0.00019219499999999917, 0.0001921809999999996, 0.00019220799999999927, 0.00019216600000000056, 0.00019219499999999917, 0.00019216700000000003, 0.00019220799999999927, 0.00019216700000000003, 0.00019211099999999828, 0.0001921809999999996, 0.00019220799999999927, 0.00019220800000000274, 0.0001921939999999997, 0.00019220899999999874, 0.0001922359999999984, 0.00019223600000000535, 0.00019223600000000535, 0.00019220900000000568, 0.0001921809999999996, 0.00019220899999999874, 0.00019220799999999927, 0.0001921939999999997, 0.00019220899999999874, 0.00019218000000000013, 0.00019219499999999917, 0.00019222199999999884, 0.0001921390000000009, 0.00019220799999999927, 0.0001921939999999997, 0.00019220799999999927, 0.0001922359999999984, 0.00019222199999999884, 0.00019220899999999874, 0.00019220799999999927, 0.0001921950000000061, 0.0001922080000000062, 0.00019222200000000578, 0.00019220799999999927, 0.0001922359999999984]</msg>
<status status="PASS" starttime="20201030 18:30:19.905" endtime="20201030 18:30:19.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.900" endtime="20201030 18:30:19.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.911" endtime="20201030 18:30:19.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.910" endtime="20201030 18:30:19.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.908" endtime="20201030 18:30:19.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.541" endtime="20201030 18:30:19.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.541" endtime="20201030 18:30:19.932"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.940" endtime="20201030 18:30:19.972"></status>
</kw>
<msg timestamp="20201030 18:30:19.973" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.939" endtime="20201030 18:30:19.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.975" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.974" endtime="20201030 18:30:19.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.976" endtime="20201030 18:30:19.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.936" endtime="20201030 18:30:19.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.934" endtime="20201030 18:30:19.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.985" endtime="20201030 18:30:20.278"></status>
</kw>
<msg timestamp="20201030 18:30:20.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018950069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019167125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.984" endtime="20201030 18:30:20.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018950069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019167125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.286" endtime="20201030 18:30:20.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.303" endtime="20201030 18:30:20.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.981" endtime="20201030 18:30:20.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.979" endtime="20201030 18:30:20.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:20.316" level="INFO">${PHILIP_RES} = [{'diff': 0.0002170560000000002}, {'diff': 0.0002153060000000019}, {'diff': 0.00021536100000000072}, {'diff': 0.00021530499999999897}, {'diff': 0.00021529200000000234}, {'diff': 0.00021532000000000148...</msg>
<status status="PASS" starttime="20201030 18:30:20.310" endtime="20201030 18:30:20.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.327" level="INFO">${RESULT} = {'diff': [0.0002170560000000002, 0.0002153060000000019, 0.00021536100000000072, 0.00021530499999999897, 0.00021529200000000234, 0.00021532000000000148, 0.000215319999999998, 0.00021530500000000244, 0....</msg>
<status status="PASS" starttime="20201030 18:30:20.318" endtime="20201030 18:30:20.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.335" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:20.333" endtime="20201030 18:30:20.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.341" level="INFO">VALUE: [0.0002170560000000002, 0.0002153060000000019, 0.00021536100000000072, 0.00021530499999999897, 0.00021529200000000234, 0.00021532000000000148, 0.000215319999999998, 0.00021530500000000244, 0.00021529200000000234, 0.00021533400000000105, 0.000215319999999998, 0.000215319999999998, 0.00021532000000000148, 0.00021532000000000148, 0.00021534799999999715, 0.00021534700000000115, 0.0002153060000000019, 0.0002153329999999981, 0.0002153329999999981, 0.0002153329999999981, 0.00021525000000000016, 0.00021529199999999887, 0.00021530499999999897, 0.000215319000000002, 0.00021531899999999854, 0.00021530599999999844, 0.00021531900000000548, 0.00021533399999999758, 0.00021534699999999768, 0.00021533400000000452, 0.00021531899999999854, 0.0002153329999999981, 0.0002152909999999994, 0.00021530599999999844, 0.00021531899999999854, 0.00021530499999999897, 0.00021530600000000538, 0.00021531899999999854, 0.00021536099999999725, 0.00021532000000000495, 0.0002153329999999981, 0.00021534699999999768, 0.00021531900000000548, 0.000215319999999998, 0.00021531899999999854, 0.00021530599999999844, 0.00021534699999999768, 0.00021533400000000452, 0.0002153329999999981, 0.0002153329999999981]</msg>
<status status="PASS" starttime="20201030 18:30:20.338" endtime="20201030 18:30:20.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.328" endtime="20201030 18:30:20.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.346" endtime="20201030 18:30:20.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.344" endtime="20201030 18:30:20.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.343" endtime="20201030 18:30:20.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.933" endtime="20201030 18:30:20.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.932" endtime="20201030 18:30:20.367"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.375" endtime="20201030 18:30:20.410"></status>
</kw>
<msg timestamp="20201030 18:30:20.410" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.374" endtime="20201030 18:30:20.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.413" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.412" endtime="20201030 18:30:20.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.414" endtime="20201030 18:30:20.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.371" endtime="20201030 18:30:20.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.369" endtime="20201030 18:30:20.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.423" endtime="20201030 18:30:20.709"></status>
</kw>
<msg timestamp="20201030 18:30:20.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018882903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019123806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.421" endtime="20201030 18:30:20.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018882903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019123806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.713" endtime="20201030 18:30:20.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.721" endtime="20201030 18:30:20.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.419" endtime="20201030 18:30:20.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.417" endtime="20201030 18:30:20.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:20.728" level="INFO">${PHILIP_RES} = [{'diff': 0.00024090300000000064}, {'diff': 0.00023916600000000246}, {'diff': 0.00023919500000000107}, {'diff': 0.00023919399999999813}, {'diff': 0.00023916700000000193}, {'diff': 0.000239111000000000...</msg>
<status status="PASS" starttime="20201030 18:30:20.725" endtime="20201030 18:30:20.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.732" level="INFO">${RESULT} = {'diff': [0.00024090300000000064, 0.00023916600000000246, 0.00023919500000000107, 0.00023919399999999813, 0.00023916700000000193, 0.00023911100000000018, 0.00023916700000000193, 0.00023918099999999803...</msg>
<status status="PASS" starttime="20201030 18:30:20.729" endtime="20201030 18:30:20.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.736" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:20.735" endtime="20201030 18:30:20.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.739" level="INFO">VALUE: [0.00024090300000000064, 0.00023916600000000246, 0.00023919500000000107, 0.00023919399999999813, 0.00023916700000000193, 0.00023911100000000018, 0.00023916700000000193, 0.00023918099999999803, 0.00023926299999999998, 0.00023913899999999932, 0.00023916700000000193, 0.0002391810000000015, 0.0002391810000000015, 0.0002391940000000016, 0.0002391529999999989, 0.00023913899999999932, 0.00023920800000000117, 0.0002391529999999989, 0.00023917999999999856, 0.00023915199999999942, 0.00023909700000000061, 0.00023916700000000193, 0.000239165999999999, 0.0002391949999999976, 0.00023913899999999932, 0.0002391800000000055, 0.0002391670000000054, 0.0002392220000000042, 0.00023916699999999846, 0.00023923599999999684, 0.00023916699999999846, 0.00023916699999999846, 0.00023919399999999813, 0.00023916699999999846, 0.00023917999999999856, 0.00023916699999999846, 0.00023922199999999727, 0.0002391800000000055, 0.00023918099999999803, 0.0002391949999999976, 0.00023919399999999813, 0.00023922299999999674, 0.00023917999999999856, 0.00023922199999999727, 0.00023922199999999727, 0.00023917999999999856, 0.00023920800000000464, 0.00023918099999999803, 0.00023918099999999803, 0.000239165999999999]</msg>
<status status="PASS" starttime="20201030 18:30:20.737" endtime="20201030 18:30:20.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.733" endtime="20201030 18:30:20.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.743" endtime="20201030 18:30:20.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.742" endtime="20201030 18:30:20.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.740" endtime="20201030 18:30:20.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.367" endtime="20201030 18:30:20.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.367" endtime="20201030 18:30:20.764"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.772" endtime="20201030 18:30:20.811"></status>
</kw>
<msg timestamp="20201030 18:30:20.811" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.771" endtime="20201030 18:30:20.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.814" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.812" endtime="20201030 18:30:20.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.815" endtime="20201030 18:30:20.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.768" endtime="20201030 18:30:20.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.766" endtime="20201030 18:30:20.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.824" endtime="20201030 18:30:21.119"></status>
</kw>
<msg timestamp="20201030 18:30:21.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.822" endtime="20201030 18:30:21.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.128" endtime="20201030 18:30:21.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.145" endtime="20201030 18:30:21.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.819" endtime="20201030 18:30:21.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.818" endtime="20201030 18:30:21.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:21.155" level="INFO">${PHILIP_RES} = [{'diff': 0.00026555500000000065}, {'diff': 0.0002638200000000014}, {'diff': 0.00026386100000000065}, {'diff': 0.0002637780000000027}, {'diff': 0.0002638049999999989}, {'diff': 0.00026377799999999924}...</msg>
<status status="PASS" starttime="20201030 18:30:21.152" endtime="20201030 18:30:21.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.160" level="INFO">${RESULT} = {'diff': [0.00026555500000000065, 0.0002638200000000014, 0.00026386100000000065, 0.0002637780000000027, 0.0002638049999999989, 0.00026377799999999924, 0.00026381899999999847, 0.0002637920000000023, 0....</msg>
<status status="PASS" starttime="20201030 18:30:21.156" endtime="20201030 18:30:21.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.165" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:21.164" endtime="20201030 18:30:21.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.168" level="INFO">VALUE: [0.00026555500000000065, 0.0002638200000000014, 0.00026386100000000065, 0.0002637780000000027, 0.0002638049999999989, 0.00026377799999999924, 0.00026381899999999847, 0.0002637920000000023, 0.0002637780000000027, 0.0002637910000000028, 0.0002638469999999976, 0.00026380500000000237, 0.00026386100000000065, 0.0002637500000000001, 0.00026380500000000237, 0.0002637780000000027, 0.0002637920000000023, 0.00026377799999999924, 0.0002637630000000002, 0.0002637919999999988, 0.0002637360000000005, 0.00026381899999999847, 0.0002638059999999984, 0.0002638200000000049, 0.0002637360000000005, 0.00026383299999999804, 0.000263833000000005, 0.00026377799999999924, 0.0002638200000000049, 0.000263833000000005, 0.00026379099999999933, 0.00026376399999999967, 0.0002637360000000005, 0.00026379200000000574, 0.00026381999999999795, 0.00026381899999999847, 0.0002638059999999984, 0.00026381899999999847, 0.0002637919999999988, 0.00026383400000000445, 0.00026383299999999804, 0.0002637919999999988, 0.0002638049999999989, 0.0002637919999999988, 0.0002638060000000053, 0.0002637919999999988, 0.0002638889999999963, 0.00026379099999999933, 0.00026381899999999847, 0.0002638049999999989]</msg>
<status status="PASS" starttime="20201030 18:30:21.166" endtime="20201030 18:30:21.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.161" endtime="20201030 18:30:21.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.175" endtime="20201030 18:30:21.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.173" endtime="20201030 18:30:21.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.171" endtime="20201030 18:30:21.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.765" endtime="20201030 18:30:21.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.764" endtime="20201030 18:30:21.196"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.204" endtime="20201030 18:30:21.245"></status>
</kw>
<msg timestamp="20201030 18:30:21.245" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.203" endtime="20201030 18:30:21.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.248" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.246" endtime="20201030 18:30:21.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.249" endtime="20201030 18:30:21.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.200" endtime="20201030 18:30:21.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.198" endtime="20201030 18:30:21.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.258" endtime="20201030 18:30:21.542"></status>
</kw>
<msg timestamp="20201030 18:30:21.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018662097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.256" endtime="20201030 18:30:21.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018662097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.546" endtime="20201030 18:30:21.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.554" endtime="20201030 18:30:21.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.254" endtime="20201030 18:30:21.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.252" endtime="20201030 18:30:21.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:21.560" level="INFO">${PHILIP_RES} = [{'diff': 0.0002908609999999999}, {'diff': 0.00028919399999999956}, {'diff': 0.0002891110000000016}, {'diff': 0.0002891110000000016}, {'diff': 0.000289082999999999}, {'diff': 0.00028911099999999815}, ...</msg>
<status status="PASS" starttime="20201030 18:30:21.557" endtime="20201030 18:30:21.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.565" level="INFO">${RESULT} = {'diff': [0.0002908609999999999, 0.00028919399999999956, 0.0002891110000000016, 0.0002891110000000016, 0.000289082999999999, 0.00028911099999999815, 0.00028911099999999815, 0.00028906899999999944, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:21.561" endtime="20201030 18:30:21.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.569" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:21.568" endtime="20201030 18:30:21.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.572" level="INFO">VALUE: [0.0002908609999999999, 0.00028919399999999956, 0.0002891110000000016, 0.0002891110000000016, 0.000289082999999999, 0.00028911099999999815, 0.00028911099999999815, 0.00028906899999999944, 0.0002890969999999986, 0.0002890699999999989, 0.0002890969999999986, 0.00028911099999999815, 0.00028911099999999815, 0.0002891110000000016, 0.00028906899999999944, 0.0002891669999999999, 0.000289082999999999, 0.00028905599999999934, 0.000289082999999999, 0.0002890969999999951, 0.00028908400000000195, 0.0002891669999999999, 0.00028913900000000076, 0.0002890979999999946, 0.00028904200000000324, 0.0002891250000000012, 0.000289083999999995, 0.00028906899999999597, 0.0002890700000000024, 0.00028913900000000076, 0.0002891110000000016, 0.0002891530000000003, 0.0002891250000000012, 0.0002891530000000003, 0.00028909700000000205, 0.00028908299999999554, 0.00028918, 0.0002891110000000016, 0.00028909700000000205, 0.00028909700000000205, 0.0002890830000000025, 0.0002891109999999947, 0.00028918099999999947, 0.0002891250000000012, 0.0002891120000000011, 0.0002891110000000016, 0.0002890969999999951, 0.0002890270000000042, 0.0002891250000000012, 0.00028913900000000076]</msg>
<status status="PASS" starttime="20201030 18:30:21.570" endtime="20201030 18:30:21.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.566" endtime="20201030 18:30:21.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.576" endtime="20201030 18:30:21.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.575" endtime="20201030 18:30:21.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.574" endtime="20201030 18:30:21.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.197" endtime="20201030 18:30:21.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.196" endtime="20201030 18:30:21.597"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.605" endtime="20201030 18:30:21.648"></status>
</kw>
<msg timestamp="20201030 18:30:21.649" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.604" endtime="20201030 18:30:21.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.651" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.650" endtime="20201030 18:30:21.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.652" endtime="20201030 18:30:21.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.601" endtime="20201030 18:30:21.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.599" endtime="20201030 18:30:21.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.661" endtime="20201030 18:30:21.960"></status>
</kw>
<msg timestamp="20201030 18:30:21.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018474542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018791486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.660" endtime="20201030 18:30:21.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018474542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018791486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.964" endtime="20201030 18:30:21.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.971" endtime="20201030 18:30:21.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.657" endtime="20201030 18:30:21.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.656" endtime="20201030 18:30:21.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:21.979" level="INFO">${PHILIP_RES} = [{'diff': 0.00031694399999999956}, {'diff': 0.0003152090000000003}, {'diff': 0.0003152090000000003}, {'diff': 0.0003151810000000012}, {'diff': 0.0003151670000000016}, {'diff': 0.0003151670000000016}, ...</msg>
<status status="PASS" starttime="20201030 18:30:21.975" endtime="20201030 18:30:21.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.983" level="INFO">${RESULT} = {'diff': [0.00031694399999999956, 0.0003152090000000003, 0.0003152090000000003, 0.0003151810000000012, 0.0003151670000000016, 0.0003151670000000016, 0.0003150970000000003, 0.0003151810000000012, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:21.979" endtime="20201030 18:30:21.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.987" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:21.986" endtime="20201030 18:30:21.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.989" level="INFO">VALUE: [0.00031694399999999956, 0.0003152090000000003, 0.0003152090000000003, 0.0003151810000000012, 0.0003151670000000016, 0.0003151670000000016, 0.0003150970000000003, 0.0003151810000000012, 0.00031516599999999867, 0.00031516600000000214, 0.0003151810000000012, 0.00031524999999999956, 0.0003151529999999986, 0.0003151800000000017, 0.00031517999999999824, 0.00031519500000000075, 0.0003151800000000017, 0.0003151530000000055, 0.0003151939999999978, 0.00031512499999999943, 0.00031520899999999685, 0.0003151950000000042, 0.0003152079999999974, 0.00031516699999999814, 0.0003152229999999964, 0.0003152640000000026, 0.00031522199999999695, 0.00031516599999999867, 0.0003152079999999974, 0.0003152090000000038, 0.0003152640000000026, 0.0003151809999999977, 0.0003151660000000056, 0.00031520899999999685, 0.00031517999999999824, 0.00031522199999999695, 0.0003151809999999977, 0.0003151939999999978, 0.0003151939999999978, 0.00031527799999999523, 0.00031518100000000465, 0.0003152359999999965, 0.00031517999999999824, 0.00031522300000000336, 0.0003152229999999964, 0.00031525000000000303, 0.00031523600000000346, 0.0003152090000000038, 0.0003151939999999978, 0.00031522199999999695]</msg>
<status status="PASS" starttime="20201030 18:30:21.988" endtime="20201030 18:30:21.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.983" endtime="20201030 18:30:21.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.994" endtime="20201030 18:30:22.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.992" endtime="20201030 18:30:22.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.991" endtime="20201030 18:30:22.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.598" endtime="20201030 18:30:22.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.597" endtime="20201030 18:30:22.015"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.023" endtime="20201030 18:30:22.070"></status>
</kw>
<msg timestamp="20201030 18:30:22.071" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.022" endtime="20201030 18:30:22.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.073" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.072" endtime="20201030 18:30:22.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.074" endtime="20201030 18:30:22.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.019" endtime="20201030 18:30:22.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.017" endtime="20201030 18:30:22.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.083" endtime="20201030 18:30:22.368"></status>
</kw>
<msg timestamp="20201030 18:30:22.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.081" endtime="20201030 18:30:22.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.372" endtime="20201030 18:30:22.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.380" endtime="20201030 18:30:22.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.079" endtime="20201030 18:30:22.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.077" endtime="20201030 18:30:22.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:22.387" level="INFO">${PHILIP_RES} = [{'diff': 0.0003438049999999991}, {'diff': 0.00034202800000000116}, {'diff': 0.00034204200000000073}, {'diff': 0.0003420699999999999}, {'diff': 0.0003419589999999993}, {'diff': 0.0003420140000000016},...</msg>
<status status="PASS" starttime="20201030 18:30:22.384" endtime="20201030 18:30:22.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.391" level="INFO">${RESULT} = {'diff': [0.0003438049999999991, 0.00034202800000000116, 0.00034204200000000073, 0.0003420699999999999, 0.0003419589999999993, 0.0003420140000000016, 0.00034204100000000126, 0.0003420560000000003, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:22.388" endtime="20201030 18:30:22.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.395" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:22.394" endtime="20201030 18:30:22.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.397" level="INFO">VALUE: [0.0003438049999999991, 0.00034202800000000116, 0.00034204200000000073, 0.0003420699999999999, 0.0003419589999999993, 0.0003420140000000016, 0.00034204100000000126, 0.0003420560000000003, 0.0003420560000000003, 0.00034202800000000116, 0.00034199999999999856, 0.0003420140000000016, 0.00034204200000000073, 0.00034204199999999726, 0.000342000000000002, 0.00034202800000000116, 0.00034209699999999954, 0.0003419729999999954, 0.00034198600000000245, 0.00034202800000000116, 0.00034202800000000116, 0.0003420690000000004, 0.0003420140000000016, 0.00034197199999999595, 0.00034205500000000083, 0.0003420560000000003, 0.00034204200000000073, 0.00034204200000000073, 0.00034209699999999954, 0.0003420690000000004, 0.00034202800000000116, 0.00034204100000000126, 0.00034205500000000083, 0.0003420560000000003, 0.0003421109999999991, 0.0003420699999999999, 0.00034201399999999466, 0.00034209699999999954, 0.000342000000000002, 0.00034204200000000073, 0.00034202800000000116, 0.0003419859999999955, 0.0003420560000000003, 0.00034202800000000116, 0.00034201399999999466, 0.0003420140000000016, 0.00034198600000000245, 0.00034204100000000126, 0.0003420140000000016, 0.00034205500000000083]</msg>
<status status="PASS" starttime="20201030 18:30:22.396" endtime="20201030 18:30:22.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.392" endtime="20201030 18:30:22.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.405" endtime="20201030 18:30:22.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.404" endtime="20201030 18:30:22.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.403" endtime="20201030 18:30:22.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.016" endtime="20201030 18:30:22.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.015" endtime="20201030 18:30:22.426"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.434" endtime="20201030 18:30:22.483"></status>
</kw>
<msg timestamp="20201030 18:30:22.484" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.432" endtime="20201030 18:30:22.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.486" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.485" endtime="20201030 18:30:22.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.488" endtime="20201030 18:30:22.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.430" endtime="20201030 18:30:22.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.428" endtime="20201030 18:30:22.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.498" endtime="20201030 18:30:22.797"></status>
</kw>
<msg timestamp="20201030 18:30:22.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018341861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.497" endtime="20201030 18:30:22.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018341861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.801" endtime="20201030 18:30:22.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.808" endtime="20201030 18:30:22.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.494" endtime="20201030 18:30:22.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.492" endtime="20201030 18:30:22.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:22.815" level="INFO">${PHILIP_RES} = [{'diff': 0.00037134699999999757}, {'diff': 0.00036963900000000147}, {'diff': 0.0003696110000000023}, {'diff': 0.0003695839999999992}, {'diff': 0.00036959799999999876}, {'diff': 0.0003695829999999997}...</msg>
<status status="PASS" starttime="20201030 18:30:22.812" endtime="20201030 18:30:22.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.819" level="INFO">${RESULT} = {'diff': [0.00037134699999999757, 0.00036963900000000147, 0.0003696110000000023, 0.0003695839999999992, 0.00036959799999999876, 0.0003695829999999997, 0.0003696250000000019, 0.00036959700000000276, 0....</msg>
<status status="PASS" starttime="20201030 18:30:22.816" endtime="20201030 18:30:22.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.824" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:22.823" endtime="20201030 18:30:22.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.826" level="INFO">VALUE: [0.00037134699999999757, 0.00036963900000000147, 0.0003696110000000023, 0.0003695839999999992, 0.00036959799999999876, 0.0003695829999999997, 0.0003696250000000019, 0.00036959700000000276, 0.00036961099999999886, 0.0003695969999999993, 0.0003696250000000019, 0.0003695969999999993, 0.0003695699999999996, 0.0003695969999999993, 0.00036963900000000147, 0.0003695280000000009, 0.0003696249999999984, 0.00036956900000000015, 0.00036963900000000494, 0.000369638999999998, 0.0003695969999999993, 0.0003695829999999997, 0.0003696660000000046, 0.00036958300000000666, 0.00036961099999999886, 0.0003696379999999985, 0.0003695969999999993, 0.00036961099999999886, 0.0003695969999999993, 0.00036961099999999886, 0.00036966599999999766, 0.00036967999999999723, 0.00036970799999999637, 0.0003696670000000041, 0.0003696249999999984, 0.00036961099999999886, 0.00036963900000000494, 0.00036963900000000494, 0.000369638999999998, 0.000369541000000001, 0.000369638999999998, 0.0003695969999999993, 0.00036965299999999757, 0.00036962500000000537, 0.00036966699999999714, 0.000369638999999998, 0.00036966599999999766, 0.000369638999999998, 0.0003696249999999984, 0.0003696249999999984]</msg>
<status status="PASS" starttime="20201030 18:30:22.825" endtime="20201030 18:30:22.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.820" endtime="20201030 18:30:22.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.831" endtime="20201030 18:30:22.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.829" endtime="20201030 18:30:22.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.828" endtime="20201030 18:30:22.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.427" endtime="20201030 18:30:22.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.426" endtime="20201030 18:30:22.852"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.860" endtime="20201030 18:30:22.912"></status>
</kw>
<msg timestamp="20201030 18:30:22.913" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.858" endtime="20201030 18:30:22.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.915" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.914" endtime="20201030 18:30:22.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.916" endtime="20201030 18:30:22.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.856" endtime="20201030 18:30:22.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.854" endtime="20201030 18:30:22.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.926" endtime="20201030 18:30:23.212"></status>
</kw>
<msg timestamp="20201030 18:30:23.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018817861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.924" endtime="20201030 18:30:23.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018817861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.216" endtime="20201030 18:30:23.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.224" endtime="20201030 18:30:23.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.922" endtime="20201030 18:30:23.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.920" endtime="20201030 18:30:23.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:23.231" level="INFO">${PHILIP_RES} = [{'diff': 0.0003997500000000008}, {'diff': 0.0003979729999999994}, {'diff': 0.0003979729999999994}, {'diff': 0.0003979719999999999}, {'diff': 0.0003979589999999998}, {'diff': 0.0003979729999999994}, {...</msg>
<status status="PASS" starttime="20201030 18:30:23.228" endtime="20201030 18:30:23.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.235" level="INFO">${RESULT} = {'diff': [0.0003997500000000008, 0.0003979729999999994, 0.0003979729999999994, 0.0003979719999999999, 0.0003979589999999998, 0.0003979729999999994, 0.0003979310000000007, 0.0003979719999999999, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:30:23.232" endtime="20201030 18:30:23.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.239" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:23.238" endtime="20201030 18:30:23.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.241" level="INFO">VALUE: [0.0003997500000000008, 0.0003979729999999994, 0.0003979729999999994, 0.0003979719999999999, 0.0003979589999999998, 0.0003979729999999994, 0.0003979310000000007, 0.0003979719999999999, 0.0003979859999999995, 0.0003979719999999999, 0.00039799999999999905, 0.0003980550000000013, 0.0003979859999999995, 0.0003979859999999995, 0.0003979999999999956, 0.00039804100000000175, 0.0003980000000000025, 0.00039791599999999816, 0.00039797199999999644, 0.0003979720000000034, 0.0003979590000000033, 0.00039798600000000295, 0.00039795899999999634, 0.000397985999999996, 0.0003980550000000013, 0.0003980000000000025, 0.00039801399999999515, 0.00039795799999999687, 0.00039801399999999515, 0.0003978889999999985, 0.00039792999999999773, 0.0003978749999999989, 0.00039790299999999806, 0.00039791699999999763, 0.0003979720000000034, 0.000397985999999996, 0.000397985999999996, 0.0003979450000000037, 0.0003980140000000021, 0.0003979999999999956, 0.0003980000000000025, 0.0003980000000000025, 0.00039797199999999644, 0.0003980000000000025, 0.00039798600000000295, 0.00039797199999999644, 0.0003980140000000021, 0.0003979999999999956, 0.0003979580000000038, 0.00039797199999999644]</msg>
<status status="PASS" starttime="20201030 18:30:23.240" endtime="20201030 18:30:23.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.236" endtime="20201030 18:30:23.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.246" endtime="20201030 18:30:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.245" endtime="20201030 18:30:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.244" endtime="20201030 18:30:23.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.853" endtime="20201030 18:30:23.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.852" endtime="20201030 18:30:23.267"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.275" endtime="20201030 18:30:23.331"></status>
</kw>
<msg timestamp="20201030 18:30:23.332" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.274" endtime="20201030 18:30:23.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.334" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.333" endtime="20201030 18:30:23.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.335" endtime="20201030 18:30:23.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.271" endtime="20201030 18:30:23.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.269" endtime="20201030 18:30:23.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.344" endtime="20201030 18:30:23.639"></status>
</kw>
<msg timestamp="20201030 18:30:23.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019275361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.342" endtime="20201030 18:30:23.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019275361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.643" endtime="20201030 18:30:23.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.651" endtime="20201030 18:30:23.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.340" endtime="20201030 18:30:23.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.338" endtime="20201030 18:30:23.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:23.657" level="INFO">${PHILIP_RES} = [{'diff': 0.0004287919999999973}, {'diff': 0.000427041999999999}, {'diff': 0.00042702799999999944}, {'diff': 0.0004270969999999978}, {'diff': 0.00042706899999999867}, {'diff': 0.0004270549999999991}, ...</msg>
<status status="PASS" starttime="20201030 18:30:23.654" endtime="20201030 18:30:23.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.661" level="INFO">${RESULT} = {'diff': [0.0004287919999999973, 0.000427041999999999, 0.00042702799999999944, 0.0004270969999999978, 0.00042706899999999867, 0.0004270549999999991, 0.00042698599999999726, 0.0004270000000000003, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:23.658" endtime="20201030 18:30:23.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.665" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:23.664" endtime="20201030 18:30:23.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.668" level="INFO">VALUE: [0.0004287919999999973, 0.000427041999999999, 0.00042702799999999944, 0.0004270969999999978, 0.00042706899999999867, 0.0004270549999999991, 0.00042698599999999726, 0.0004270000000000003, 0.00042701400000000334, 0.00042702799999999944, 0.00042701399999999987, 0.0004269589999999976, 0.0004270280000000029, 0.0004270280000000029, 0.0004269999999999968, 0.00042705600000000205, 0.00042706900000000214, 0.0004270280000000029, 0.0004270269999999965, 0.00042701400000000334, 0.0004269999999999968, 0.00042698599999999726, 0.00042701400000000334, 0.0004270139999999964, 0.00042701400000000334, 0.00042698599999999726, 0.0004269719999999977, 0.000427041000000003, 0.00042701400000000334, 0.00042698599999999726, 0.0004270280000000029, 0.00042698699999999673, 0.0004269719999999977, 0.0004269860000000042, 0.00042701400000000334, 0.00042704099999999606, 0.00042702799999999597, 0.0004270280000000029, 0.00042704099999999606, 0.0004270420000000025, 0.0004269860000000042, 0.0004270139999999964, 0.00042701400000000334, 0.0004270420000000025, 0.0004270409999999891, 0.00042702799999999597, 0.000426944999999998, 0.00042702799999999597, 0.0004269999999999968, 0.0004269860000000042]</msg>
<status status="PASS" starttime="20201030 18:30:23.666" endtime="20201030 18:30:23.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.662" endtime="20201030 18:30:23.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.677" endtime="20201030 18:30:23.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.675" endtime="20201030 18:30:23.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.674" endtime="20201030 18:30:23.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.268" endtime="20201030 18:30:23.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.267" endtime="20201030 18:30:23.698"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.706" endtime="20201030 18:30:23.764"></status>
</kw>
<msg timestamp="20201030 18:30:23.765" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.704" endtime="20201030 18:30:23.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.767" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.766" endtime="20201030 18:30:23.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.768" endtime="20201030 18:30:23.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.702" endtime="20201030 18:30:23.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.700" endtime="20201030 18:30:23.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.777" endtime="20201030 18:30:24.062"></status>
</kw>
<msg timestamp="20201030 18:30:24.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019072167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.776" endtime="20201030 18:30:24.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019072167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.067" endtime="20201030 18:30:24.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.075" endtime="20201030 18:30:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.773" endtime="20201030 18:30:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.771" endtime="20201030 18:30:24.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:24.082" level="INFO">${PHILIP_RES} = [{'diff': 0.00045861100000000113}, {'diff': 0.0004569029999999981}, {'diff': 0.0004568469999999998}, {'diff': 0.00045683300000000024}, {'diff': 0.00045690300000000156}, {'diff': 0.000456889000000002},...</msg>
<status status="PASS" starttime="20201030 18:30:24.078" endtime="20201030 18:30:24.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.088" level="INFO">${RESULT} = {'diff': [0.00045861100000000113, 0.0004569029999999981, 0.0004568469999999998, 0.00045683300000000024, 0.00045690300000000156, 0.000456889000000002, 0.0004568889999999985, 0.000456889000000002, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:24.084" endtime="20201030 18:30:24.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.093" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:24.092" endtime="20201030 18:30:24.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.096" level="INFO">VALUE: [0.00045861100000000113, 0.0004569029999999981, 0.0004568469999999998, 0.00045683300000000024, 0.00045690300000000156, 0.000456889000000002, 0.0004568889999999985, 0.000456889000000002, 0.0004569159999999982, 0.0004568750000000024, 0.00045691600000000165, 0.0004569029999999981, 0.0004568609999999994, 0.00045679199999999753, 0.00045690300000000156, 0.00045688899999999505, 0.0004568749999999955, 0.0004568750000000024, 0.00045686100000000285, 0.0004568470000000033, 0.0004568749999999955, 0.000456889000000002, 0.0004568340000000032, 0.00045680500000000457, 0.0004568750000000024, 0.0004568340000000032, 0.0004568470000000033, 0.000456889000000002, 0.0004568750000000024, 0.00045688899999999505, 0.00045690300000000156, 0.0004569300000000012, 0.00045686100000000285, 0.00045690300000000156, 0.00045690300000000156, 0.00045690300000000156, 0.0004569169999999942, 0.0004568750000000024, 0.0004568609999999959, 0.0004568479999999958, 0.0004568749999999955, 0.0004568609999999959, 0.0004567780000000049, 0.00045687500000000936, 0.00045687500000000936, 0.00045686100000000285, 0.0004568190000000111, 0.000456889000000002, 0.0004568749999999955, 0.00045687500000000936]</msg>
<status status="PASS" starttime="20201030 18:30:24.094" endtime="20201030 18:30:24.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.089" endtime="20201030 18:30:24.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.101" endtime="20201030 18:30:24.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.100" endtime="20201030 18:30:24.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.098" endtime="20201030 18:30:24.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.698" endtime="20201030 18:30:24.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.698" endtime="20201030 18:30:24.122"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.130" endtime="20201030 18:30:24.192"></status>
</kw>
<msg timestamp="20201030 18:30:24.192" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.129" endtime="20201030 18:30:24.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.195" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.193" endtime="20201030 18:30:24.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.196" endtime="20201030 18:30:24.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.126" endtime="20201030 18:30:24.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.125" endtime="20201030 18:30:24.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.205" endtime="20201030 18:30:24.504"></status>
</kw>
<msg timestamp="20201030 18:30:24.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018537444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019026667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.203" endtime="20201030 18:30:24.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018537444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019026667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.507" endtime="20201030 18:30:24.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.515" endtime="20201030 18:30:24.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.201" endtime="20201030 18:30:24.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.199" endtime="20201030 18:30:24.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:24.522" level="INFO">${PHILIP_RES} = [{'diff': 0.0004892230000000004}, {'diff': 0.0004874859999999988}, {'diff': 0.0004874719999999992}, {'diff': 0.00048748600000000225}, {'diff': 0.0004874719999999992}, {'diff': 0.0004874589999999991}, ...</msg>
<status status="PASS" starttime="20201030 18:30:24.519" endtime="20201030 18:30:24.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.526" level="INFO">${RESULT} = {'diff': [0.0004892230000000004, 0.0004874859999999988, 0.0004874719999999992, 0.00048748600000000225, 0.0004874719999999992, 0.0004874589999999991, 0.0004874300000000005, 0.00048745799999999964, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:24.523" endtime="20201030 18:30:24.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.531" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:24.529" endtime="20201030 18:30:24.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.533" level="INFO">VALUE: [0.0004892230000000004, 0.0004874859999999988, 0.0004874719999999992, 0.00048748600000000225, 0.0004874719999999992, 0.0004874589999999991, 0.0004874300000000005, 0.00048745799999999964, 0.0004874580000000031, 0.0004875000000000018, 0.0004874729999999987, 0.00048745799999999617, 0.00048744400000000354, 0.0004873889999999978, 0.000487445000000003, 0.0004874439999999966, 0.0004874720000000027, 0.00048747199999999574, 0.0004874870000000017, 0.0004874449999999961, 0.0004874580000000031, 0.0004873889999999978, 0.0004874590000000026, 0.0004874439999999966, 0.0004875000000000018, 0.00048748600000000225, 0.0004874859999999953, 0.00048743100000000344, 0.0004874030000000043, 0.0004874439999999966, 0.00048745799999999617, 0.00048748600000000225, 0.00048747199999999574, 0.00048742999999999703, 0.00048744400000000354, 0.0004874019999999979, 0.0004874720000000027, 0.0004874580000000031, 0.0004875000000000018, 0.0004875000000000018, 0.00048745799999999617, 0.0004874860000000092, 0.0004874310000000104, 0.00048745799999999617, 0.0004874309999999965, 0.00048745799999999617, 0.0004874309999999965, 0.0004874170000000039, 0.00048744400000000354, 0.00048738900000000474]</msg>
<status status="PASS" starttime="20201030 18:30:24.532" endtime="20201030 18:30:24.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.527" endtime="20201030 18:30:24.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.538" endtime="20201030 18:30:24.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.536" endtime="20201030 18:30:24.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.535" endtime="20201030 18:30:24.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.123" endtime="20201030 18:30:24.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.123" endtime="20201030 18:30:24.558"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.567" endtime="20201030 18:30:24.632"></status>
</kw>
<msg timestamp="20201030 18:30:24.633" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.565" endtime="20201030 18:30:24.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.635" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.634" endtime="20201030 18:30:24.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.636" endtime="20201030 18:30:24.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.563" endtime="20201030 18:30:24.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.561" endtime="20201030 18:30:24.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.645" endtime="20201030 18:30:24.930"></status>
</kw>
<msg timestamp="20201030 18:30:24.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.643" endtime="20201030 18:30:24.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.934" endtime="20201030 18:30:24.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.942" endtime="20201030 18:30:24.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.641" endtime="20201030 18:30:24.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.639" endtime="20201030 18:30:24.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:24.949" level="INFO">${PHILIP_RES} = [{'diff': 0.0005205560000000019}, {'diff': 0.0005188190000000002}, {'diff': 0.0005188610000000024}, {'diff': 0.0005187920000000006}, {'diff': 0.0005188060000000001}, {'diff': 0.0005188749999999985}, {...</msg>
<status status="PASS" starttime="20201030 18:30:24.945" endtime="20201030 18:30:24.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.953" level="INFO">${RESULT} = {'diff': [0.0005205560000000019, 0.0005188190000000002, 0.0005188610000000024, 0.0005187920000000006, 0.0005188060000000001, 0.0005188749999999985, 0.0005187910000000011, 0.0005188329999999998, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:30:24.950" endtime="20201030 18:30:24.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.958" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:24.957" endtime="20201030 18:30:24.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.960" level="INFO">VALUE: [0.0005205560000000019, 0.0005188190000000002, 0.0005188610000000024, 0.0005187920000000006, 0.0005188060000000001, 0.0005188749999999985, 0.0005187910000000011, 0.0005188329999999998, 0.0005188329999999998, 0.0005188050000000007, 0.0005188329999999998, 0.0005188470000000028, 0.0005188469999999959, 0.0005188470000000028, 0.0005188330000000033, 0.000518763999999998, 0.0005189160000000012, 0.0005188340000000027, 0.0005188470000000028, 0.0005188469999999959, 0.0005188480000000023, 0.000518875000000002, 0.000518875000000002, 0.0005188339999999958, 0.0005188890000000015, 0.0005188470000000028, 0.0005188329999999963, 0.000518792000000004, 0.000518875000000002, 0.0005188189999999968, 0.0005188890000000015, 0.0005188890000000015, 0.000518875000000002, 0.0005188189999999968, 0.0005188470000000028, 0.0005188059999999967, 0.0005188330000000033, 0.0005188199999999893, 0.000518846999999989, 0.0005188610000000093, 0.0005188329999999963, 0.0005189020000000016, 0.000518875000000002, 0.0005188329999999963, 0.0005188470000000028, 0.0005188609999999955, 0.0005188050000000111, 0.000518792000000004, 0.0005188200000000032, 0.0005188049999999972]</msg>
<status status="PASS" starttime="20201030 18:30:24.959" endtime="20201030 18:30:24.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.954" endtime="20201030 18:30:24.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.966" endtime="20201030 18:30:24.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.964" endtime="20201030 18:30:24.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.963" endtime="20201030 18:30:24.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.559" endtime="20201030 18:30:24.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.559" endtime="20201030 18:30:24.987"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.995" endtime="20201030 18:30:25.063"></status>
</kw>
<msg timestamp="20201030 18:30:25.063" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.993" endtime="20201030 18:30:25.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.066" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.064" endtime="20201030 18:30:25.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.067" endtime="20201030 18:30:25.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.991" endtime="20201030 18:30:25.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.989" endtime="20201030 18:30:25.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.075" endtime="20201030 18:30:25.378"></status>
</kw>
<msg timestamp="20201030 18:30:25.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018499528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019052222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.074" endtime="20201030 18:30:25.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018499528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019052222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.382" endtime="20201030 18:30:25.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.390" endtime="20201030 18:30:25.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.072" endtime="20201030 18:30:25.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.070" endtime="20201030 18:30:25.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:25.396" level="INFO">${PHILIP_RES} = [{'diff': 0.0005526939999999994}, {'diff': 0.0005510000000000029}, {'diff': 0.0005509999999999994}, {'diff': 0.0005509999999999994}, {'diff': 0.0005509720000000003}, {'diff': 0.000551013999999999}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:25.393" endtime="20201030 18:30:25.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.401" level="INFO">${RESULT} = {'diff': [0.0005526939999999994, 0.0005510000000000029, 0.0005509999999999994, 0.0005509999999999994, 0.0005509720000000003, 0.000551013999999999, 0.0005509999999999994, 0.0005509720000000003, 0.00055...</msg>
<status status="PASS" starttime="20201030 18:30:25.397" endtime="20201030 18:30:25.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.405" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:25.404" endtime="20201030 18:30:25.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.407" level="INFO">VALUE: [0.0005526939999999994, 0.0005510000000000029, 0.0005509999999999994, 0.0005509999999999994, 0.0005509720000000003, 0.000551013999999999, 0.0005509999999999994, 0.0005509720000000003, 0.000551013999999999, 0.0005509439999999977, 0.0005509590000000002, 0.0005509580000000042, 0.0005509170000000049, 0.0005510140000000024, 0.0005509860000000033, 0.0005509580000000042, 0.0005509860000000033, 0.0005509720000000037, 0.0005510140000000024, 0.0005509580000000042, 0.0005510000000000029, 0.0005509590000000036, 0.0005510270000000025, 0.0005509720000000037, 0.0005510270000000025, 0.0005509859999999964, 0.0005509999999999959, 0.0005509449999999971, 0.0005509730000000032, 0.0005509309999999976, 0.0005509720000000037, 0.0005509590000000036, 0.0005509299999999981, 0.0005509439999999977, 0.0005509999999999959, 0.0005510140000000024, 0.0005509310000000045, 0.0005509580000000042, 0.0005509719999999968, 0.0005509720000000107, 0.000551028000000009, 0.0005509719999999968, 0.0005509439999999977, 0.0005510419999999877, 0.0005509580000000042, 0.0005509999999999959, 0.0005509309999999906, 0.0005509999999999959, 0.0005509030000000054, 0.000550916999999998]</msg>
<status status="PASS" starttime="20201030 18:30:25.406" endtime="20201030 18:30:25.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.401" endtime="20201030 18:30:25.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.412" endtime="20201030 18:30:25.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.411" endtime="20201030 18:30:25.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.410" endtime="20201030 18:30:25.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.987" endtime="20201030 18:30:25.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.987" endtime="20201030 18:30:25.433"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.441" endtime="20201030 18:30:25.512"></status>
</kw>
<msg timestamp="20201030 18:30:25.513" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.440" endtime="20201030 18:30:25.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.515" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.514" endtime="20201030 18:30:25.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.516" endtime="20201030 18:30:25.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.437" endtime="20201030 18:30:25.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.435" endtime="20201030 18:30:25.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.525" endtime="20201030 18:30:25.811"></status>
</kw>
<msg timestamp="20201030 18:30:25.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018433375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019018889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.524" endtime="20201030 18:30:25.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018433375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019018889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.814" endtime="20201030 18:30:25.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.822" endtime="20201030 18:30:25.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.521" endtime="20201030 18:30:25.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.519" endtime="20201030 18:30:25.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:25.829" level="INFO">${PHILIP_RES} = [{'diff': 0.0005855140000000023}, {'diff': 0.0005838200000000023}, {'diff': 0.0005837910000000002}, {'diff': 0.0005837360000000014}, {'diff': 0.0005837640000000005}, {'diff': 0.0005837919999999996}, {...</msg>
<status status="PASS" starttime="20201030 18:30:25.826" endtime="20201030 18:30:25.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.833" level="INFO">${RESULT} = {'diff': [0.0005855140000000023, 0.0005838200000000023, 0.0005837910000000002, 0.0005837360000000014, 0.0005837640000000005, 0.0005837919999999996, 0.0005837780000000001, 0.0005837770000000006, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:30:25.830" endtime="20201030 18:30:25.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.837" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:25.836" endtime="20201030 18:30:25.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.840" level="INFO">VALUE: [0.0005855140000000023, 0.0005838200000000023, 0.0005837910000000002, 0.0005837360000000014, 0.0005837640000000005, 0.0005837919999999996, 0.0005837780000000001, 0.0005837770000000006, 0.0005837910000000002, 0.0005837499999999975, 0.0005838049999999997, 0.0005837080000000022, 0.0005837230000000013, 0.0005836529999999965, 0.0005836799999999961, 0.0005837080000000022, 0.0005836390000000038, 0.0005837079999999953, 0.0005837360000000014, 0.0005838059999999992, 0.0005837500000000009, 0.0005837500000000009, 0.0005837640000000005, 0.0005837770000000006, 0.000583763000000001, 0.0005837360000000014, 0.0005837640000000005, 0.0005837639999999936, 0.0005837780000000001, 0.0005837360000000014, 0.0005837089999999948, 0.0005838479999999979, 0.0005837500000000009, 0.0005837360000000014, 0.0005837779999999931, 0.0005837220000000087, 0.0005837360000000014, 0.0005838059999999923, 0.000583778000000007, 0.0005837500000000079, 0.0005837229999999943, 0.0005837779999999931, 0.000583778000000007, 0.0005837080000000022, 0.0005837360000000014, 0.0005837360000000014, 0.0005837370000000008, 0.0005837779999999931, 0.0005837219999999949, 0.0005837359999999875]</msg>
<status status="PASS" starttime="20201030 18:30:25.838" endtime="20201030 18:30:25.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.834" endtime="20201030 18:30:25.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.845" endtime="20201030 18:30:25.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.843" endtime="20201030 18:30:25.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.842" endtime="20201030 18:30:25.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.434" endtime="20201030 18:30:25.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.433" endtime="20201030 18:30:25.865"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.873" endtime="20201030 18:30:25.950"></status>
</kw>
<msg timestamp="20201030 18:30:25.951" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.872" endtime="20201030 18:30:25.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.956" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.953" endtime="20201030 18:30:25.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.958" endtime="20201030 18:30:25.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.869" endtime="20201030 18:30:25.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.868" endtime="20201030 18:30:25.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.003" endtime="20201030 18:30:26.313"></status>
</kw>
<msg timestamp="20201030 18:30:26.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.997" endtime="20201030 18:30:26.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.317" endtime="20201030 18:30:26.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.325" endtime="20201030 18:30:26.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.978" endtime="20201030 18:30:26.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.967" endtime="20201030 18:30:26.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:26.331" level="INFO">${PHILIP_RES} = [{'diff': 0.0006190970000000025}, {'diff': 0.0006173330000000012}, {'diff': 0.0006173189999999981}, {'diff': 0.000617290999999999}, {'diff': 0.0006173199999999976}, {'diff': 0.0006173470000000007}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:26.328" endtime="20201030 18:30:26.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.335" level="INFO">${RESULT} = {'diff': [0.0006190970000000025, 0.0006173330000000012, 0.0006173189999999981, 0.000617290999999999, 0.0006173199999999976, 0.0006173470000000007, 0.0006173610000000003, 0.0006173480000000002, 0.00061...</msg>
<status status="PASS" starttime="20201030 18:30:26.332" endtime="20201030 18:30:26.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.339" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:26.338" endtime="20201030 18:30:26.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.342" level="INFO">VALUE: [0.0006190970000000025, 0.0006173330000000012, 0.0006173189999999981, 0.000617290999999999, 0.0006173199999999976, 0.0006173470000000007, 0.0006173610000000003, 0.0006173480000000002, 0.0006172769999999994, 0.0006173049999999985, 0.0006173469999999973, 0.0006173190000000051, 0.0006173329999999977, 0.0006173330000000046, 0.0006173329999999977, 0.000617305999999998, 0.0006173199999999976, 0.0006172919999999985, 0.0006173340000000041, 0.0006173189999999981, 0.0006173470000000042, 0.0006173609999999968, 0.0006173469999999973, 0.0006173750000000033, 0.0006173469999999973, 0.0006173750000000033, 0.0006173189999999981, 0.0006172639999999993, 0.0006172499999999997, 0.0006172639999999993, 0.0006173620000000032, 0.0006172920000000054, 0.0006173329999999977, 0.0006173750000000033, 0.0006172639999999924, 0.000617388999999996, 0.0006172499999999997, 0.0006173049999999985, 0.0006173480000000037, 0.0006173049999999985, 0.0006173329999999977, 0.0006173750000000033, 0.0006173339999999972, 0.0006173329999999977, 0.000617305999999998, 0.000617305999999998, 0.0006173610000000107, 0.0006173469999999903, 0.000617305999999998, 0.0006173750000000033]</msg>
<status status="PASS" starttime="20201030 18:30:26.341" endtime="20201030 18:30:26.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.336" endtime="20201030 18:30:26.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.350" endtime="20201030 18:30:26.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.348" endtime="20201030 18:30:26.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.347" endtime="20201030 18:30:26.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.866" endtime="20201030 18:30:26.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.866" endtime="20201030 18:30:26.371"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.379" endtime="20201030 18:30:26.457"></status>
</kw>
<msg timestamp="20201030 18:30:26.457" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.377" endtime="20201030 18:30:26.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.459" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.458" endtime="20201030 18:30:26.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.461" endtime="20201030 18:30:26.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.375" endtime="20201030 18:30:26.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.373" endtime="20201030 18:30:26.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.469" endtime="20201030 18:30:26.755"></status>
</kw>
<msg timestamp="20201030 18:30:26.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.468" endtime="20201030 18:30:26.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.758" endtime="20201030 18:30:26.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.766" endtime="20201030 18:30:26.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.465" endtime="20201030 18:30:26.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.464" endtime="20201030 18:30:26.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:26.773" level="INFO">${PHILIP_RES} = [{'diff': 0.0006533610000000016}, {'diff': 0.000651653000000002}, {'diff': 0.0006515970000000003}, {'diff': 0.0006516670000000016}, {'diff': 0.000651638999999999}, {'diff': 0.0006517080000000008}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:26.769" endtime="20201030 18:30:26.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.777" level="INFO">${RESULT} = {'diff': [0.0006533610000000016, 0.000651653000000002, 0.0006515970000000003, 0.0006516670000000016, 0.000651638999999999, 0.0006517080000000008, 0.0006516519999999991, 0.000651638999999999, 0.0006516...</msg>
<status status="PASS" starttime="20201030 18:30:26.773" endtime="20201030 18:30:26.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.782" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:26.781" endtime="20201030 18:30:26.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.784" level="INFO">VALUE: [0.0006533610000000016, 0.000651653000000002, 0.0006515970000000003, 0.0006516670000000016, 0.000651638999999999, 0.0006517080000000008, 0.0006516519999999991, 0.000651638999999999, 0.0006516249999999994, 0.000651624999999996, 0.0006516110000000033, 0.0006516810000000012, 0.0006516250000000029, 0.0006516389999999955, 0.0006517229999999999, 0.0006516389999999955, 0.0006516520000000026, 0.0006516389999999955, 0.0006516670000000016, 0.0006516799999999948, 0.0006516390000000025, 0.0006517090000000003, 0.0006516949999999938, 0.000651653000000002, 0.0006516659999999952, 0.0006516250000000029, 0.0006517090000000003, 0.0006517769999999992, 0.0006517220000000004, 0.0006516949999999938, 0.0006516950000000007, 0.0006516949999999938, 0.000651653000000002, 0.0006516659999999952, 0.000651624999999989, 0.0006516950000000077, 0.0006517230000000068, 0.000651653000000002, 0.000651653000000002, 0.000651653000000002, 0.0006516669999999947, 0.0006516659999999952, 0.0006516939999999943, 0.000651653000000002, 0.000651707999999987, 0.0006516389999999955, 0.0006516800000000017, 0.0006516250000000029, 0.0006516529999999882, 0.0006516669999999947]</msg>
<status status="PASS" starttime="20201030 18:30:26.783" endtime="20201030 18:30:26.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.778" endtime="20201030 18:30:26.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.789" endtime="20201030 18:30:26.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.788" endtime="20201030 18:30:26.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.786" endtime="20201030 18:30:26.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.371" endtime="20201030 18:30:26.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.371" endtime="20201030 18:30:26.810"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.818" endtime="20201030 18:30:26.899"></status>
</kw>
<msg timestamp="20201030 18:30:26.899" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.816" endtime="20201030 18:30:26.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.902" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.901" endtime="20201030 18:30:26.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.903" endtime="20201030 18:30:26.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.814" endtime="20201030 18:30:26.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.812" endtime="20201030 18:30:26.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.912" endtime="20201030 18:30:27.198"></status>
</kw>
<msg timestamp="20201030 18:30:27.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01856025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:26.911" endtime="20201030 18:30:27.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01856025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:27.202" endtime="20201030 18:30:27.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.209" endtime="20201030 18:30:27.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.908" endtime="20201030 18:30:27.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.906" endtime="20201030 18:30:27.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:27.217" level="INFO">${PHILIP_RES} = [{'diff': 0.0006883609999999984}, {'diff': 0.0006866389999999993}, {'diff': 0.0006866529999999989}, {'diff': 0.0006866669999999984}, {'diff': 0.0006867090000000006}, {'diff': 0.0006866669999999984}, {...</msg>
<status status="PASS" starttime="20201030 18:30:27.214" endtime="20201030 18:30:27.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.221" level="INFO">${RESULT} = {'diff': [0.0006883609999999984, 0.0006866389999999993, 0.0006866529999999989, 0.0006866669999999984, 0.0006867090000000006, 0.0006866669999999984, 0.0006867220000000007, 0.0006866940000000016, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:30:27.218" endtime="20201030 18:30:27.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.225" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:27.224" endtime="20201030 18:30:27.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.228" level="INFO">VALUE: [0.0006883609999999984, 0.0006866389999999993, 0.0006866529999999989, 0.0006866669999999984, 0.0006867090000000006, 0.0006866669999999984, 0.0006867220000000007, 0.0006866940000000016, 0.000686665999999999, 0.0006867089999999937, 0.0006866940000000016, 0.0006866379999999964, 0.0006866950000000011, 0.0006866659999999955, 0.0006866670000000019, 0.0006866670000000019, 0.0006866530000000023, 0.0006866110000000036, 0.0006866660000000024, 0.0006866939999999946, 0.0006866940000000016, 0.0006866120000000031, 0.0006866660000000024, 0.0006866670000000019, 0.0006867499999999999, 0.0006867360000000003, 0.0006867360000000003, 0.000686680000000002, 0.000686680000000002, 0.0006867220000000007, 0.0006867359999999934, 0.0006866389999999889, 0.0006866250000000101, 0.0006866250000000101, 0.0006867079999999942, 0.0006866519999999959, 0.0006866670000000019, 0.0006867220000000007, 0.0006866799999999951, 0.0006866659999999886, 0.0006866940000000016, 0.0006866670000000019, 0.0006867360000000072, 0.0006866529999999954, 0.0006866110000000036, 0.0006866529999999954, 0.0006866390000000028, 0.0006866390000000028, 0.000686568999999998, 0.0006866250000000101]</msg>
<status status="PASS" starttime="20201030 18:30:27.226" endtime="20201030 18:30:27.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.222" endtime="20201030 18:30:27.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.233" endtime="20201030 18:30:27.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.231" endtime="20201030 18:30:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.230" endtime="20201030 18:30:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.811" endtime="20201030 18:30:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.810" endtime="20201030 18:30:27.253"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.262" endtime="20201030 18:30:27.347"></status>
</kw>
<msg timestamp="20201030 18:30:27.348" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.260" endtime="20201030 18:30:27.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.350" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.349" endtime="20201030 18:30:27.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.351" endtime="20201030 18:30:27.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.258" endtime="20201030 18:30:27.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.256" endtime="20201030 18:30:27.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.360" endtime="20201030 18:30:27.666"></status>
</kw>
<msg timestamp="20201030 18:30:27.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.359" endtime="20201030 18:30:27.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.670" endtime="20201030 18:30:27.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.678" endtime="20201030 18:30:27.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.356" endtime="20201030 18:30:27.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.354" endtime="20201030 18:30:27.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:27.684" level="INFO">${PHILIP_RES} = [{'diff': 0.0007242220000000001}, {'diff': 0.000722610999999998}, {'diff': 0.0007225280000000001}, {'diff': 0.0007225410000000002}, {'diff': 0.000722610999999998}, {'diff': 0.0007225689999999993}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:27.681" endtime="20201030 18:30:27.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.688" level="INFO">${RESULT} = {'diff': [0.0007242220000000001, 0.000722610999999998, 0.0007225280000000001, 0.0007225410000000002, 0.000722610999999998, 0.0007225689999999993, 0.0007224859999999979, 0.000722610999999998, 0.0007225...</msg>
<status status="PASS" starttime="20201030 18:30:27.685" endtime="20201030 18:30:27.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.692" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:27.691" endtime="20201030 18:30:27.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.695" level="INFO">VALUE: [0.0007242220000000001, 0.000722610999999998, 0.0007225280000000001, 0.0007225410000000002, 0.000722610999999998, 0.0007225689999999993, 0.0007224859999999979, 0.000722610999999998, 0.0007225699999999988, 0.0007225270000000006, 0.0007225829999999989, 0.0007225280000000001, 0.0007225419999999996, 0.0007225419999999996, 0.0007225969999999984, 0.0007225559999999992, 0.0007225559999999992, 0.0007225270000000006, 0.0007225969999999984, 0.0007224720000000018, 0.0007225270000000006, 0.0007225280000000001, 0.0007225839999999983, 0.0007225140000000005, 0.0007225410000000002, 0.0007225690000000062, 0.0007224720000000018, 0.0007224720000000018, 0.0007225699999999918, 0.0007225700000000057, 0.0007225280000000001, 0.0007225700000000057, 0.0007225139999999936, 0.0007225549999999997, 0.0007225140000000074, 0.0007225270000000006, 0.0007225280000000001, 0.0007224720000000018, 0.0007225000000000009, 0.0007225139999999936, 0.0007225000000000009, 0.0007225000000000009, 0.0007225839999999983, 0.0007225000000000009, 0.0007224860000000083, 0.0007225139999999936, 0.0007225689999999924, 0.0007226530000000037, 0.0007226530000000037, 0.0007225280000000001]</msg>
<status status="PASS" starttime="20201030 18:30:27.693" endtime="20201030 18:30:27.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.689" endtime="20201030 18:30:27.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.700" endtime="20201030 18:30:27.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.699" endtime="20201030 18:30:27.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.698" endtime="20201030 18:30:27.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.254" endtime="20201030 18:30:27.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.254" endtime="20201030 18:30:27.721"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.730" endtime="20201030 18:30:27.817"></status>
</kw>
<msg timestamp="20201030 18:30:27.818" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.728" endtime="20201030 18:30:27.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.820" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.819" endtime="20201030 18:30:27.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.821" endtime="20201030 18:30:27.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.726" endtime="20201030 18:30:27.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.724" endtime="20201030 18:30:27.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.830" endtime="20201030 18:30:28.117"></status>
</kw>
<msg timestamp="20201030 18:30:28.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.829" endtime="20201030 18:30:28.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.121" endtime="20201030 18:30:28.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.128" endtime="20201030 18:30:28.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.826" endtime="20201030 18:30:28.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.825" endtime="20201030 18:30:28.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:28.135" level="INFO">${PHILIP_RES} = [{'diff': 0.0007607640000000006}, {'diff': 0.0007590140000000023}, {'diff': 0.0007589859999999997}, {'diff': 0.0007589859999999997}, {'diff': 0.0007589859999999997}, {'diff': 0.000759041999999998}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:28.132" endtime="20201030 18:30:28.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:28.139" level="INFO">${RESULT} = {'diff': [0.0007607640000000006, 0.0007590140000000023, 0.0007589859999999997, 0.0007589859999999997, 0.0007589859999999997, 0.000759041999999998, 0.0007591249999999994, 0.0007590550000000015, 0.00075...</msg>
<status status="PASS" starttime="20201030 18:30:28.136" endtime="20201030 18:30:28.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.144" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:28.143" endtime="20201030 18:30:28.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.146" level="INFO">VALUE: [0.0007607640000000006, 0.0007590140000000023, 0.0007589859999999997, 0.0007589859999999997, 0.0007589859999999997, 0.000759041999999998, 0.0007591249999999994, 0.0007590550000000015, 0.0007589439999999975, 0.0007590140000000023, 0.000759040999999995, 0.0007589870000000026, 0.0007590140000000023, 0.0007590139999999954, 0.0007589450000000039, 0.0007590000000000027, 0.0007589729999999961, 0.0007590140000000023, 0.0007590270000000024, 0.0007591379999999995, 0.0007591390000000059, 0.0007589999999999958, 0.0007590700000000006, 0.0007591109999999998, 0.0007590270000000024, 0.0007590420000000014, 0.0007590970000000002, 0.0007590689999999872, 0.0007590830000000076, 0.0007590690000000011, 0.0007589439999999975, 0.0007590829999999937, 0.000758958000000004, 0.0007590559999999941, 0.0007590279999999949, 0.0007589440000000114, 0.0007589310000000044, 0.0007589860000000032, 0.0007589860000000032, 0.0007590130000000028, 0.000758958000000004, 0.0007589719999999966, 0.0007589999999999958, 0.0007589860000000032, 0.0007589860000000032, 0.0007589999999999958, 0.0007589579999999901, 0.0007590280000000088, 0.0007590689999999872, 0.0007590000000000097]</msg>
<status status="PASS" starttime="20201030 18:30:28.145" endtime="20201030 18:30:28.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.140" endtime="20201030 18:30:28.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:28.151" endtime="20201030 18:30:28.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.150" endtime="20201030 18:30:28.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.148" endtime="20201030 18:30:28.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.722" endtime="20201030 18:30:28.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.722" endtime="20201030 18:30:28.172"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.180" endtime="20201030 18:30:28.272"></status>
</kw>
<msg timestamp="20201030 18:30:28.272" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.179" endtime="20201030 18:30:28.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.274" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.273" endtime="20201030 18:30:28.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.276" endtime="20201030 18:30:28.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.176" endtime="20201030 18:30:28.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.174" endtime="20201030 18:30:28.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.286" endtime="20201030 18:30:28.597"></status>
</kw>
<msg timestamp="20201030 18:30:28.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018677264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.284" endtime="20201030 18:30:28.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018677264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.601" endtime="20201030 18:30:28.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.608" endtime="20201030 18:30:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.280" endtime="20201030 18:30:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.279" endtime="20201030 18:30:28.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:28.616" level="INFO">${PHILIP_RES} = [{'diff': 0.0007981529999999994}, {'diff': 0.0007963050000000006}, {'diff': 0.0007964030000000011}, {'diff': 0.0007963190000000002}, {'diff': 0.0007963750000000019}, {'diff': 0.0007963480000000023}, {...</msg>
<status status="PASS" starttime="20201030 18:30:28.613" endtime="20201030 18:30:28.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:28.620" level="INFO">${RESULT} = {'diff': [0.0007981529999999994, 0.0007963050000000006, 0.0007964030000000011, 0.0007963190000000002, 0.0007963750000000019, 0.0007963480000000023, 0.000796388999999998, 0.0007963190000000002, 0.00079...</msg>
<status status="PASS" starttime="20201030 18:30:28.617" endtime="20201030 18:30:28.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.624" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:28.623" endtime="20201030 18:30:28.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.626" level="INFO">VALUE: [0.0007981529999999994, 0.0007963050000000006, 0.0007964030000000011, 0.0007963190000000002, 0.0007963750000000019, 0.0007963480000000023, 0.000796388999999998, 0.0007963190000000002, 0.0007963750000000019, 0.0007963610000000024, 0.0007962909999999976, 0.0007963050000000041, 0.0007963200000000031, 0.0007963200000000031, 0.0007963750000000019, 0.0007964020000000016, 0.0007962639999999979, 0.0007962779999999975, 0.0007963189999999967, 0.0007963189999999967, 0.0007963750000000019, 0.0007963050000000041, 0.0007963610000000024, 0.0007963609999999954, 0.0007963750000000019, 0.0007964310000000002, 0.0007963889999999946, 0.0007963890000000085, 0.0007963890000000085, 0.0007964030000000011, 0.0007963610000000093, 0.0007963329999999963, 0.0007963470000000028, 0.0007963200000000031, 0.0007964169999999937, 0.0007964579999999999, 0.0007963750000000019, 0.0007964300000000007, 0.0007964580000000138, 0.0007964579999999999, 0.0007964579999999999, 0.0007964300000000007, 0.0007964449999999929, 0.0007964579999999999, 0.0007964439999999934, 0.0007964170000000076, 0.0007964440000000073, 0.0007963339999999958, 0.0007963329999999963, 0.0007963749999999881]</msg>
<status status="PASS" starttime="20201030 18:30:28.625" endtime="20201030 18:30:28.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.621" endtime="20201030 18:30:28.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:28.631" endtime="20201030 18:30:28.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.630" endtime="20201030 18:30:28.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.629" endtime="20201030 18:30:28.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.173" endtime="20201030 18:30:28.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.172" endtime="20201030 18:30:28.652"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.660" endtime="20201030 18:30:28.756"></status>
</kw>
<msg timestamp="20201030 18:30:28.757" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.659" endtime="20201030 18:30:28.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.759" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.758" endtime="20201030 18:30:28.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.760" endtime="20201030 18:30:28.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.656" endtime="20201030 18:30:28.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.654" endtime="20201030 18:30:28.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.769" endtime="20201030 18:30:29.056"></status>
</kw>
<msg timestamp="20201030 18:30:29.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019470708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.768" endtime="20201030 18:30:29.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019470708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.060" endtime="20201030 18:30:29.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.068" endtime="20201030 18:30:29.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.765" endtime="20201030 18:30:29.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.763" endtime="20201030 18:30:29.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:29.075" level="INFO">${PHILIP_RES} = [{'diff': 0.0008361110000000005}, {'diff': 0.0008344589999999992}, {'diff': 0.0008343339999999991}, {'diff': 0.0008344579999999997}, {'diff': 0.0008343749999999983}, {'diff': 0.0008344170000000005}, {...</msg>
<status status="PASS" starttime="20201030 18:30:29.072" endtime="20201030 18:30:29.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:29.079" level="INFO">${RESULT} = {'diff': [0.0008361110000000005, 0.0008344589999999992, 0.0008343339999999991, 0.0008344579999999997, 0.0008343749999999983, 0.0008344170000000005, 0.0008344170000000005, 0.0008343329999999996, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:30:29.076" endtime="20201030 18:30:29.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.084" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:29.083" endtime="20201030 18:30:29.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.086" level="INFO">VALUE: [0.0008361110000000005, 0.0008344589999999992, 0.0008343339999999991, 0.0008344579999999997, 0.0008343749999999983, 0.0008344170000000005, 0.0008344170000000005, 0.0008343329999999996, 0.0008343609999999987, 0.0008343889999999979, 0.0008344730000000022, 0.0008344029999999975, 0.000834528000000001, 0.000834499999999995, 0.0008344580000000032, 0.0008344589999999957, 0.0008344299999999971, 0.0008344720000000028, 0.0008345000000000019, 0.0008344160000000045, 0.0008344590000000027, 0.0008345000000000019, 0.000834528000000001, 0.0008345270000000016, 0.0008345000000000019, 0.0008344589999999957, 0.0008344729999999884, 0.0008344860000000093, 0.0008344580000000101, 0.0008345839999999993, 0.0008345140000000084, 0.0008345700000000067, 0.0008345560000000002, 0.0008344589999999957, 0.0008344299999999971, 0.000834417000000004, 0.0008344730000000022, 0.0008343889999999909, 0.0008344440000000036, 0.0008344720000000028, 0.0008344440000000036, 0.0008344579999999963, 0.0008344450000000031, 0.0008344579999999963, 0.0008344720000000028, 0.0008344579999999963, 0.0008344029999999975, 0.0008345410000000081, 0.0008345139999999945, 0.0008344720000000028]</msg>
<status status="PASS" starttime="20201030 18:30:29.085" endtime="20201030 18:30:29.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.080" endtime="20201030 18:30:29.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:29.092" endtime="20201030 18:30:29.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.091" endtime="20201030 18:30:29.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.089" endtime="20201030 18:30:29.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.653" endtime="20201030 18:30:29.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.652" endtime="20201030 18:30:29.113"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.121" endtime="20201030 18:30:29.222"></status>
</kw>
<msg timestamp="20201030 18:30:29.223" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.120" endtime="20201030 18:30:29.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.228" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.225" endtime="20201030 18:30:29.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.230" endtime="20201030 18:30:29.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.117" endtime="20201030 18:30:29.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.115" endtime="20201030 18:30:29.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.249" endtime="20201030 18:30:29.555"></status>
</kw>
<msg timestamp="20201030 18:30:29.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018883431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.246" endtime="20201030 18:30:29.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018883431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.559" endtime="20201030 18:30:29.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.567" endtime="20201030 18:30:29.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.240" endtime="20201030 18:30:29.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.237" endtime="20201030 18:30:29.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:29.573" level="INFO">${PHILIP_RES} = [{'diff': 0.0008750270000000004}, {'diff': 0.0008732080000000003}, {'diff': 0.0008731809999999972}, {'diff': 0.0008732769999999987}, {'diff': 0.0008732359999999995}, {'diff': 0.0008731810000000007}, {...</msg>
<status status="PASS" starttime="20201030 18:30:29.570" endtime="20201030 18:30:29.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:29.578" level="INFO">${RESULT} = {'diff': [0.0008750270000000004, 0.0008732080000000003, 0.0008731809999999972, 0.0008732769999999987, 0.0008732359999999995, 0.0008731810000000007, 0.0008732919999999977, 0.0008732919999999977, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:30:29.574" endtime="20201030 18:30:29.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.582" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:29.581" endtime="20201030 18:30:29.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.585" level="INFO">VALUE: [0.0008750270000000004, 0.0008732080000000003, 0.0008731809999999972, 0.0008732769999999987, 0.0008732359999999995, 0.0008731810000000007, 0.0008732919999999977, 0.0008732919999999977, 0.000873332999999997, 0.0008732909999999983, 0.0008732919999999977, 0.0008732909999999983, 0.0008733199999999969, 0.000873347999999996, 0.0008733189999999974, 0.0008732080000000003, 0.0008732359999999995, 0.0008731810000000007, 0.0008732080000000003, 0.0008733340000000034, 0.000873249999999999, 0.0008732359999999995, 0.0008733060000000042, 0.0008732780000000051, 0.0008732229999999924, 0.0008733340000000034, 0.0008732220000000068, 0.000873221999999993, 0.0008732639999999986, 0.0008732780000000051, 0.0008732639999999986, 0.0008732639999999986, 0.0008732359999999995, 0.0008732780000000051, 0.0008733189999999974, 0.0008732369999999989, 0.0008733060000000042, 0.0008732499999999921, 0.0008733469999999965, 0.000873221999999993, 0.0008732639999999986, 0.0008732080000000003, 0.0008732220000000068, 0.0008732080000000003, 0.0008732080000000003, 0.0008732639999999986, 0.0008732080000000003, 0.0008732220000000068, 0.0008733189999999974, 0.0008732220000000068]</msg>
<status status="PASS" starttime="20201030 18:30:29.583" endtime="20201030 18:30:29.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.579" endtime="20201030 18:30:29.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:29.589" endtime="20201030 18:30:29.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.588" endtime="20201030 18:30:29.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.587" endtime="20201030 18:30:29.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.114" endtime="20201030 18:30:29.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.113" endtime="20201030 18:30:29.610"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.619" endtime="20201030 18:30:29.720"></status>
</kw>
<msg timestamp="20201030 18:30:29.721" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.617" endtime="20201030 18:30:29.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.723" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.722" endtime="20201030 18:30:29.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.724" endtime="20201030 18:30:29.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.614" endtime="20201030 18:30:29.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.613" endtime="20201030 18:30:29.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.733" endtime="20201030 18:30:30.021"></status>
</kw>
<msg timestamp="20201030 18:30:30.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018727806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.732" endtime="20201030 18:30:30.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018727806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.025" endtime="20201030 18:30:30.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.032" endtime="20201030 18:30:30.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.729" endtime="20201030 18:30:30.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.728" endtime="20201030 18:30:30.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:30.039" level="INFO">${PHILIP_RES} = [{'diff': 0.0009145410000000014}, {'diff': 0.0009128750000000005}, {'diff': 0.0009128750000000005}, {'diff': 0.0009127920000000025}, {'diff': 0.0009128470000000014}, {'diff': 0.0009129159999999997}, {...</msg>
<status status="PASS" starttime="20201030 18:30:30.036" endtime="20201030 18:30:30.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.044" level="INFO">${RESULT} = {'diff': [0.0009145410000000014, 0.0009128750000000005, 0.0009128750000000005, 0.0009127920000000025, 0.0009128470000000014, 0.0009129159999999997, 0.0009128199999999982, 0.0009129309999999988, 0.0009...</msg>
<status status="PASS" starttime="20201030 18:30:30.040" endtime="20201030 18:30:30.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.048" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:30.047" endtime="20201030 18:30:30.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.051" level="INFO">VALUE: [0.0009145410000000014, 0.0009128750000000005, 0.0009128750000000005, 0.0009127920000000025, 0.0009128470000000014, 0.0009129159999999997, 0.0009128199999999982, 0.0009129309999999988, 0.0009128340000000013, 0.0009128890000000001, 0.0009129020000000002, 0.0009128340000000013, 0.0009127640000000034, 0.0009128750000000005, 0.0009128470000000014, 0.0009128469999999944, 0.0009128480000000008, 0.0009128890000000001, 0.0009128480000000008, 0.0009128050000000026, 0.000912778000000003, 0.0009128890000000001, 0.0009128189999999953, 0.0009128340000000013, 0.0009128749999999936, 0.0009128470000000083, 0.0009129439999999989, 0.0009128610000000009, 0.0009127909999999961, 0.0009127919999999956, 0.0009128750000000074, 0.0009127919999999956, 0.0009128330000000018, 0.0009128470000000083, 0.0009127920000000095, 0.0009129300000000062, 0.0009129159999999997, 0.0009128750000000074, 0.0009129169999999992, 0.0009128190000000092, 0.0009128890000000001, 0.0009128060000000021, 0.0009128330000000018, 0.0009128330000000018, 0.0009127919999999956, 0.0009128199999999947, 0.0009128330000000018, 0.0009127919999999956, 0.0009128610000000009, 0.0009128330000000018]</msg>
<status status="PASS" starttime="20201030 18:30:30.049" endtime="20201030 18:30:30.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.044" endtime="20201030 18:30:30.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.056" endtime="20201030 18:30:30.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.054" endtime="20201030 18:30:30.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.053" endtime="20201030 18:30:30.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.611" endtime="20201030 18:30:30.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.611" endtime="20201030 18:30:30.080"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.097" endtime="20201030 18:30:30.207"></status>
</kw>
<msg timestamp="20201030 18:30:30.208" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.094" endtime="20201030 18:30:30.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.214" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.211" endtime="20201030 18:30:30.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.216" endtime="20201030 18:30:30.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.089" endtime="20201030 18:30:30.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.085" endtime="20201030 18:30:30.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.235" endtime="20201030 18:30:30.532"></status>
</kw>
<msg timestamp="20201030 18:30:30.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034039389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034994375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.232" endtime="20201030 18:30:30.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034039389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034994375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.536" endtime="20201030 18:30:30.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.544" endtime="20201030 18:30:30.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.226" endtime="20201030 18:30:30.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.223" endtime="20201030 18:30:30.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:30.550" level="INFO">${PHILIP_RES} = [{'diff': 0.000954985999999998}, {'diff': 0.0009531529999999983}, {'diff': 0.0009531799999999979}, {'diff': 0.0009531939999999975}, {'diff': 0.0009531389999999987}, {'diff': 0.0009531809999999974}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:30.547" endtime="20201030 18:30:30.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.554" level="INFO">${RESULT} = {'diff': [0.000954985999999998, 0.0009531529999999983, 0.0009531799999999979, 0.0009531939999999975, 0.0009531389999999987, 0.0009531809999999974, 0.0009531659999999983, 0.0009530690000000008, 0.00095...</msg>
<status status="PASS" starttime="20201030 18:30:30.551" endtime="20201030 18:30:30.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.559" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:30.557" endtime="20201030 18:30:30.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.561" level="INFO">VALUE: [0.000954985999999998, 0.0009531529999999983, 0.0009531799999999979, 0.0009531939999999975, 0.0009531389999999987, 0.0009531809999999974, 0.0009531659999999983, 0.0009530690000000008, 0.0009530550000000013, 0.000953097, 0.0009531809999999974, 0.0009532079999999971, 0.000953111999999999, 0.0009531109999999995, 0.0009530970000000069, 0.0009530280000000085, 0.0009530700000000003, 0.0009530700000000003, 0.0009530420000000012, 0.0009530830000000073, 0.000953097, 0.0009530550000000082, 0.0009530830000000073, 0.0009530410000000017, 0.0009532220000000036, 0.0009530420000000012, 0.0009531249999999991, 0.0009531249999999991, 0.000953097, 0.0009531109999999926, 0.0009531389999999917, 0.0009530829999999935, 0.0009531249999999991, 0.0009529999999999955, 0.0009530559999999938, 0.0009529999999999955, 0.000953014000000002, 0.0009529860000000029, 0.0009530549999999943, 0.000953097, 0.0009530690000000008, 0.000953014000000002, 0.0009530420000000012, 0.0009530839999999929, 0.0009530829999999935, 0.0009529999999999955, 0.0009530000000000094, 0.0009530279999999947, 0.0009529999999999816, 0.0009530560000000077]</msg>
<status status="PASS" starttime="20201030 18:30:30.560" endtime="20201030 18:30:30.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.555" endtime="20201030 18:30:30.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.569" endtime="20201030 18:30:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.568" endtime="20201030 18:30:30.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.566" endtime="20201030 18:30:30.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.082" endtime="20201030 18:30:30.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.080" endtime="20201030 18:30:30.590"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.598" endtime="20201030 18:30:30.707"></status>
</kw>
<msg timestamp="20201030 18:30:30.708" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.597" endtime="20201030 18:30:30.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.710" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.709" endtime="20201030 18:30:30.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.711" endtime="20201030 18:30:30.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.594" endtime="20201030 18:30:30.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.592" endtime="20201030 18:30:30.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.720" endtime="20201030 18:30:31.009"></status>
</kw>
<msg timestamp="20201030 18:30:31.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.719" endtime="20201030 18:30:31.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.016" endtime="20201030 18:30:31.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.033" endtime="20201030 18:30:31.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.716" endtime="20201030 18:30:31.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.714" endtime="20201030 18:30:31.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:31.047" level="INFO">${PHILIP_RES} = [{'diff': 0.0009959729999999972}, {'diff': 0.0009941660000000012}, {'diff': 0.0009940969999999993}, {'diff': 0.0009941390000000015}, {'diff': 0.000994153000000001}, {'diff': 0.0009941249999999985}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:31.040" endtime="20201030 18:30:31.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.058" level="INFO">${RESULT} = {'diff': [0.0009959729999999972, 0.0009941660000000012, 0.0009940969999999993, 0.0009941390000000015, 0.000994153000000001, 0.0009941249999999985, 0.0009942499999999986, 0.0009940550000000006, 0.00099...</msg>
<status status="PASS" starttime="20201030 18:30:31.049" endtime="20201030 18:30:31.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.067" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:31.065" endtime="20201030 18:30:31.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.073" level="INFO">VALUE: [0.0009959729999999972, 0.0009941660000000012, 0.0009940969999999993, 0.0009941390000000015, 0.000994153000000001, 0.0009941249999999985, 0.0009942499999999986, 0.0009940550000000006, 0.000994013000000002, 0.000994056, 0.0009940969999999993, 0.000994056, 0.000994028000000001, 0.0009940829999999998, 0.000994028000000001, 0.0009940419999999936, 0.0009940420000000005, 0.0009940829999999998, 0.0009941529999999976, 0.0009941800000000042, 0.0009940840000000062, 0.000994041000000001, 0.0009940969999999993, 0.0009940829999999928, 0.0009940699999999997, 0.0009941660000000047, 0.000994041000000001, 0.0009941660000000047, 0.000994139000000005, 0.0009941249999999985, 0.0009941809999999968, 0.0009941249999999985, 0.0009941810000000106, 0.000994250000000002, 0.0009941799999999973, 0.0009941110000000059, 0.000994139000000005, 0.0009940969999999993, 0.000994110999999992, 0.0009940830000000067, 0.0009940559999999932, 0.0009941110000000059, 0.000994041000000001, 0.0009939580000000031, 0.0009940829999999928, 0.0009941249999999985, 0.000994027999999994, 0.0009940969999999993, 0.000994152000000012, 0.0009940829999999928]</msg>
<status status="PASS" starttime="20201030 18:30:31.070" endtime="20201030 18:30:31.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.059" endtime="20201030 18:30:31.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.084" endtime="20201030 18:30:31.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.080" endtime="20201030 18:30:31.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.077" endtime="20201030 18:30:31.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.591" endtime="20201030 18:30:31.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.590" endtime="20201030 18:30:31.108"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.119" endtime="20201030 18:30:31.232"></status>
</kw>
<msg timestamp="20201030 18:30:31.232" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.117" endtime="20201030 18:30:31.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.235" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.233" endtime="20201030 18:30:31.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.236" endtime="20201030 18:30:31.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.115" endtime="20201030 18:30:31.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.113" endtime="20201030 18:30:31.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.245" endtime="20201030 18:30:31.534"></status>
</kw>
<msg timestamp="20201030 18:30:31.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.243" endtime="20201030 18:30:31.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.538" endtime="20201030 18:30:31.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.546" endtime="20201030 18:30:31.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.241" endtime="20201030 18:30:31.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.239" endtime="20201030 18:30:31.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:31.553" level="INFO">${PHILIP_RES} = [{'diff': 0.0010376250000000004}, {'diff': 0.001035945}, {'diff': 0.0010360560000000005}, {'diff': 0.0010359030000000012}, {'diff': 0.001035847999999999}, {'diff': 0.001035860999999999}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:31.549" endtime="20201030 18:30:31.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.556" level="INFO">${RESULT} = {'diff': [0.0010376250000000004, 0.001035945, 0.0010360560000000005, 0.0010359030000000012, 0.001035847999999999, 0.001035860999999999, 0.0010358469999999995, 0.001035861000000006, 0.00103588899999999...</msg>
<status status="PASS" starttime="20201030 18:30:31.553" endtime="20201030 18:30:31.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.561" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:31.560" endtime="20201030 18:30:31.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.563" level="INFO">VALUE: [0.0010376250000000004, 0.001035945, 0.0010360560000000005, 0.0010359030000000012, 0.001035847999999999, 0.001035860999999999, 0.0010358469999999995, 0.001035861000000006, 0.0010358889999999982, 0.0010359019999999983, 0.0010358889999999982, 0.001035833, 0.0010358469999999995, 0.0010357920000000007, 0.0010358050000000008, 0.001035860999999999, 0.0010359170000000043, 0.0010358749999999986, 0.0010358749999999917, 0.0010358189999999934, 0.0010358060000000002, 0.0010358749999999917, 0.0010358749999999917, 0.0010358470000000064, 0.0010358889999999982, 0.001035833, 0.0010358619999999985, 0.0010358750000000055, 0.0010358889999999982, 0.0010357640000000085, 0.0010357919999999937, 0.0010357230000000023, 0.001035750000000002, 0.001035833, 0.001035750000000002, 0.0010358749999999917, 0.0010358050000000008, 0.0010357909999999942, 0.0010358050000000008, 0.0010359030000000047, 0.0010358339999999994, 0.0010358339999999994, 0.001035860999999999, 0.0010359160000000117, 0.001035833, 0.0010359160000000117, 0.001035833, 0.0010358049999999869, 0.0010358060000000002, 0.0010357910000000081]</msg>
<status status="PASS" starttime="20201030 18:30:31.562" endtime="20201030 18:30:31.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.557" endtime="20201030 18:30:31.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.568" endtime="20201030 18:30:31.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.567" endtime="20201030 18:30:31.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.565" endtime="20201030 18:30:31.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.110" endtime="20201030 18:30:31.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.109" endtime="20201030 18:30:31.589"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.597" endtime="20201030 18:30:31.714"></status>
</kw>
<msg timestamp="20201030 18:30:31.715" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.596" endtime="20201030 18:30:31.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.717" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.716" endtime="20201030 18:30:31.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.718" endtime="20201030 18:30:31.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.593" endtime="20201030 18:30:31.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.591" endtime="20201030 18:30:31.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.727" endtime="20201030 18:30:32.027"></status>
</kw>
<msg timestamp="20201030 18:30:32.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.726" endtime="20201030 18:30:32.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.031" endtime="20201030 18:30:32.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.039" endtime="20201030 18:30:32.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.723" endtime="20201030 18:30:32.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.722" endtime="20201030 18:30:32.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:32.045" level="INFO">${PHILIP_RES} = [{'diff': 0.0010800410000000003}, {'diff': 0.0010784170000000017}, {'diff': 0.0010784309999999978}, {'diff': 0.0010785270000000027}, {'diff': 0.0010784300000000017}, {'diff': 0.001078388999999999}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:32.042" endtime="20201030 18:30:32.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.049" level="INFO">${RESULT} = {'diff': [0.0010800410000000003, 0.0010784170000000017, 0.0010784309999999978, 0.0010785270000000027, 0.0010784300000000017, 0.001078388999999999, 0.0010784029999999986, 0.0010784310000000047, 0.00107...</msg>
<status status="PASS" starttime="20201030 18:30:32.046" endtime="20201030 18:30:32.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.053" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:32.052" endtime="20201030 18:30:32.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.056" level="INFO">VALUE: [0.0010800410000000003, 0.0010784170000000017, 0.0010784309999999978, 0.0010785270000000027, 0.0010784300000000017, 0.001078388999999999, 0.0010784029999999986, 0.0010784310000000047, 0.0010784439999999978, 0.001078472000000004, 0.001078500000000003, 0.0010784579999999974, 0.0010784590000000038, 0.0010783470000000003, 0.0010784309999999978, 0.0010783190000000012, 0.0010784299999999983, 0.001078388999999999, 0.0010784439999999978, 0.0010784310000000047, 0.0010782770000000025, 0.0010783750000000064, 0.0010784030000000056, 0.0010784449999999973, 0.0010784030000000056, 0.0010785140000000026, 0.0010785140000000026, 0.0010784310000000047, 0.0010783749999999925, 0.0010782770000000025, 0.0010784159999999987, 0.0010784029999999917, 0.001078471999999997, 0.0010784720000000109, 0.00107850000000001, 0.0010783749999999925, 0.0010783469999999934, 0.0010783619999999994, 0.0010784439999999978, 0.0010783469999999934, 0.0010784310000000047, 0.0010784300000000052, 0.0010784449999999973, 0.0010783480000000067, 0.0010784030000000056, 0.0010784449999999973, 0.0010783470000000073, 0.0010784169999999982, 0.001078443999999984, 0.001078389000000013]</msg>
<status status="PASS" starttime="20201030 18:30:32.054" endtime="20201030 18:30:32.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.050" endtime="20201030 18:30:32.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.062" endtime="20201030 18:30:32.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.060" endtime="20201030 18:30:32.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.059" endtime="20201030 18:30:32.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.590" endtime="20201030 18:30:32.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.589" endtime="20201030 18:30:32.082"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.092" endtime="20201030 18:30:32.212"></status>
</kw>
<msg timestamp="20201030 18:30:32.213" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.090" endtime="20201030 18:30:32.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.215" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.214" endtime="20201030 18:30:32.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.216" endtime="20201030 18:30:32.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.087" endtime="20201030 18:30:32.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.085" endtime="20201030 18:30:32.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.225" endtime="20201030 18:30:32.514"></status>
</kw>
<msg timestamp="20201030 18:30:32.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019773361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020896667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.224" endtime="20201030 18:30:32.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019773361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020896667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.518" endtime="20201030 18:30:32.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.526" endtime="20201030 18:30:32.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.221" endtime="20201030 18:30:32.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.219" endtime="20201030 18:30:32.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:32.532" level="INFO">${PHILIP_RES} = [{'diff': 0.001123306000000001}, {'diff': 0.001121612000000001}, {'diff': 0.0011215559999999992}, {'diff': 0.0011214860000000014}, {'diff': 0.0011216390000000007}, {'diff': 0.0011216250000000046}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:32.529" endtime="20201030 18:30:32.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.537" level="INFO">${RESULT} = {'diff': [0.001123306000000001, 0.001121612000000001, 0.0011215559999999992, 0.0011214860000000014, 0.0011216390000000007, 0.0011216250000000046, 0.0011216669999999998, 0.00112168, 0.00112177799999999...</msg>
<status status="PASS" starttime="20201030 18:30:32.533" endtime="20201030 18:30:32.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.542" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:32.541" endtime="20201030 18:30:32.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.544" level="INFO">VALUE: [0.001123306000000001, 0.001121612000000001, 0.0011215559999999992, 0.0011214860000000014, 0.0011216390000000007, 0.0011216250000000046, 0.0011216669999999998, 0.00112168, 0.0011217779999999969, 0.0011216660000000003, 0.0011216520000000008, 0.0011216939999999995, 0.0011216660000000003, 0.0011216530000000002, 0.0011216109999999946, 0.001121708000000006, 0.001121625000000001, 0.0011217219999999986, 0.0011215840000000019, 0.001121611999999994, 0.0011217219999999917, 0.0011216530000000002, 0.0011217919999999965, 0.0011216939999999925, 0.0011216950000000059, 0.0011216109999999946, 0.0011215980000000014, 0.0011216110000000085, 0.0011215550000000102, 0.0011217639999999973, 0.0011216530000000002, 0.0011216390000000076, 0.001121597000000002, 0.0011215980000000014, 0.0011216389999999937, 0.0011216110000000085, 0.0011216389999999937, 0.001121625000000001, 0.0011215420000000031, 0.001121707999999999, 0.001121625000000001, 0.001121625000000001, 0.0011216109999999946, 0.00112168, 0.00112177799999999, 0.0011216659999999934, 0.0011216940000000064, 0.00112177799999999, 0.0011217770000000182, 0.0011215830000000093]</msg>
<status status="PASS" starttime="20201030 18:30:32.543" endtime="20201030 18:30:32.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.538" endtime="20201030 18:30:32.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.549" endtime="20201030 18:30:32.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.547" endtime="20201030 18:30:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.546" endtime="20201030 18:30:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.083" endtime="20201030 18:30:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.083" endtime="20201030 18:30:32.570"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.578" endtime="20201030 18:30:32.704"></status>
</kw>
<msg timestamp="20201030 18:30:32.705" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.576" endtime="20201030 18:30:32.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.710" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.707" endtime="20201030 18:30:32.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.712" endtime="20201030 18:30:32.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.574" endtime="20201030 18:30:32.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.572" endtime="20201030 18:30:32.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.731" endtime="20201030 18:30:33.025"></status>
</kw>
<msg timestamp="20201030 18:30:33.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.728" endtime="20201030 18:30:33.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.028" endtime="20201030 18:30:33.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.036" endtime="20201030 18:30:33.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.722" endtime="20201030 18:30:33.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.719" endtime="20201030 18:30:33.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:33.043" level="INFO">${PHILIP_RES} = [{'diff': 0.0011673890000000013}, {'diff': 0.0011656809999999983}, {'diff': 0.0011655830000000013}, {'diff': 0.001165527999999999}, {'diff': 0.001165625}, {'diff': 0.0011656389999999996}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:33.040" endtime="20201030 18:30:33.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.047" level="INFO">${RESULT} = {'diff': [0.0011673890000000013, 0.0011656809999999983, 0.0011655830000000013, 0.001165527999999999, 0.001165625, 0.0011656389999999996, 0.0011655559999999981, 0.0011655830000000048, 0.001165554999999...</msg>
<status status="PASS" starttime="20201030 18:30:33.044" endtime="20201030 18:30:33.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.051" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:33.050" endtime="20201030 18:30:33.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.053" level="INFO">VALUE: [0.0011673890000000013, 0.0011656809999999983, 0.0011655830000000013, 0.001165527999999999, 0.001165625, 0.0011656389999999996, 0.0011655559999999981, 0.0011655830000000048, 0.0011655549999999987, 0.001165556000000005, 0.0011655700000000047, 0.001165611000000004, 0.0011655969999999974, 0.001165611000000004, 0.0011655689999999982, 0.0011656529999999957, 0.0011655979999999969, 0.001165693999999995, 0.0011657090000000009, 0.001165610999999997, 0.0011656809999999879, 0.0011656670000000091, 0.0011656530000000026, 0.0011656530000000026, 0.0011656809999999879, 0.0011656249999999896, 0.0011655969999999904, 0.001165610999999997, 0.001165722000000008, 0.001165610999999997, 0.0011655549999999987, 0.0011656250000000035, 0.001165638999999996, 0.0011656800000000023, 0.001165638999999996, 0.0011657080000000014, 0.0011657080000000014, 0.0011657090000000009, 0.0011656949999999944, 0.0011656119999999964, 0.001165638999999996, 0.0011655829999999978, 0.0011656110000000108, 0.0011656249999999896, 0.0011655700000000047, 0.0011655829999999978, 0.0011656250000000035, 0.0011655690000000052, 0.0011656120000000103, 0.0011656810000000017]</msg>
<status status="PASS" starttime="20201030 18:30:33.052" endtime="20201030 18:30:33.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.048" endtime="20201030 18:30:33.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.058" endtime="20201030 18:30:33.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.057" endtime="20201030 18:30:33.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.056" endtime="20201030 18:30:33.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.571" endtime="20201030 18:30:33.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.570" endtime="20201030 18:30:33.079"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.088" endtime="20201030 18:30:33.216"></status>
</kw>
<msg timestamp="20201030 18:30:33.217" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.086" endtime="20201030 18:30:33.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.219" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.218" endtime="20201030 18:30:33.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.220" endtime="20201030 18:30:33.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.084" endtime="20201030 18:30:33.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.082" endtime="20201030 18:30:33.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.229" endtime="20201030 18:30:33.532"></status>
</kw>
<msg timestamp="20201030 18:30:33.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020874, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:33.228" endtime="20201030 18:30:33.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020874, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:33.541" endtime="20201030 18:30:33.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.559" endtime="20201030 18:30:33.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.225" endtime="20201030 18:30:33.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.224" endtime="20201030 18:30:33.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:33.572" level="INFO">${PHILIP_RES} = [{'diff': 0.0012122359999999985}, {'diff': 0.0012104720000000006}, {'diff': 0.0012105980000000002}, {'diff': 0.0012105549999999986}, {'diff': 0.0012105840000000007}, {'diff': 0.0012106110000000003}, {...</msg>
<status status="PASS" starttime="20201030 18:30:33.566" endtime="20201030 18:30:33.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.577" level="INFO">${RESULT} = {'diff': [0.0012122359999999985, 0.0012104720000000006, 0.0012105980000000002, 0.0012105549999999986, 0.0012105840000000007, 0.0012106110000000003, 0.0012106110000000003, 0.001210541999999995, 0.00121...</msg>
<status status="PASS" starttime="20201030 18:30:33.573" endtime="20201030 18:30:33.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.581" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:33.580" endtime="20201030 18:30:33.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.583" level="INFO">VALUE: [0.0012122359999999985, 0.0012104720000000006, 0.0012105980000000002, 0.0012105549999999986, 0.0012105840000000007, 0.0012106110000000003, 0.0012106110000000003, 0.001210541999999995, 0.0012105689999999947, 0.0012105559999999946, 0.0012105560000000015, 0.0012105689999999947, 0.001210625, 0.0012106110000000003, 0.0012106110000000003, 0.0012106389999999995, 0.001210625, 0.0012105969999999938, 0.001210653000000006, 0.0012106669999999986, 0.0012105690000000086, 0.001210624999999993, 0.001210541999999995, 0.0012105830000000012, 0.0012104859999999967, 0.0012104019999999993, 0.001210472000000004, 0.0012104579999999976, 0.001210458999999997, 0.0012105549999999882, 0.0012105560000000015, 0.0012105139999999959, 0.001210444000000005, 0.0012104719999999902, 0.0012105139999999959, 0.001210458999999997, 0.0012104859999999967, 0.0012104859999999967, 0.0012104579999999976, 0.0012104169999999914, 0.001210443999999991, 0.0012105560000000015, 0.001210555000000002, 0.0012104170000000053, 0.0012103880000000067, 0.001210444000000005, 0.0012102920000000017, 0.0012103329999999801, 0.0012103470000000005, 0.0012103330000000079]</msg>
<status status="PASS" starttime="20201030 18:30:33.582" endtime="20201030 18:30:33.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.577" endtime="20201030 18:30:33.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.589" endtime="20201030 18:30:33.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.587" endtime="20201030 18:30:33.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.586" endtime="20201030 18:30:33.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.080" endtime="20201030 18:30:33.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.079" endtime="20201030 18:30:33.610"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.618" endtime="20201030 18:30:33.750"></status>
</kw>
<msg timestamp="20201030 18:30:33.750" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.616" endtime="20201030 18:30:33.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.753" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.751" endtime="20201030 18:30:33.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.754" endtime="20201030 18:30:33.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.614" endtime="20201030 18:30:33.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.612" endtime="20201030 18:30:33.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.768" endtime="20201030 18:30:34.058"></status>
</kw>
<msg timestamp="20201030 18:30:34.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018632181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.767" endtime="20201030 18:30:34.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018632181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.062" endtime="20201030 18:30:34.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.070" endtime="20201030 18:30:34.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.764" endtime="20201030 18:30:34.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.757" endtime="20201030 18:30:34.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:34.076" level="INFO">${PHILIP_RES} = [{'diff': 0.0012579999999999987}, {'diff': 0.001256181000000002}, {'diff': 0.0012560689999999985}, {'diff': 0.0012561110000000007}, {'diff': 0.0012562219999999978}, {'diff': 0.0012562219999999978}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:34.073" endtime="20201030 18:30:34.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.081" level="INFO">${RESULT} = {'diff': [0.0012579999999999987, 0.001256181000000002, 0.0012560689999999985, 0.0012561110000000007, 0.0012562219999999978, 0.0012562219999999978, 0.0012561950000000016, 0.0012561389999999964, 0.00125...</msg>
<status status="PASS" starttime="20201030 18:30:34.077" endtime="20201030 18:30:34.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.086" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:34.085" endtime="20201030 18:30:34.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.088" level="INFO">VALUE: [0.0012579999999999987, 0.001256181000000002, 0.0012560689999999985, 0.0012561110000000007, 0.0012562219999999978, 0.0012562219999999978, 0.0012561950000000016, 0.0012561389999999964, 0.0012561669999999955, 0.0012561250000000038, 0.0012561670000000025, 0.001256083000000005, 0.0012560000000000002, 0.0012561390000000033, 0.0012561109999999973, 0.0012560979999999972, 0.0012560970000000046, 0.0012561109999999973, 0.0012561110000000042, 0.0012561950000000016, 0.001256152999999996, 0.0012561249999999968, 0.0012561390000000033, 0.0012561799999999956, 0.0012560139999999997, 0.0012560979999999972, 0.001256069999999998, 0.0012560000000000071, 0.0012560139999999997, 0.0012560969999999977, 0.0012561249999999968, 0.001256083000000005, 0.001256180999999995, 0.0012559729999999936, 0.001256264000000007, 0.0012562220000000013, 0.0012562079999999948, 0.0012560689999999985, 0.001256166000000003, 0.0012560970000000116, 0.0012560560000000054, 0.001256055000000006, 0.0012560139999999997, 0.0012561249999999968, 0.0012560829999999912, 0.0012560839999999907, 0.0012560970000000116, 0.0012560689999999985, 0.0012562230000000008, 0.0012560829999999912]</msg>
<status status="PASS" starttime="20201030 18:30:34.087" endtime="20201030 18:30:34.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.082" endtime="20201030 18:30:34.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.098" endtime="20201030 18:30:34.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.096" endtime="20201030 18:30:34.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.095" endtime="20201030 18:30:34.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.611" endtime="20201030 18:30:34.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.610" endtime="20201030 18:30:34.118"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.128" endtime="20201030 18:30:34.264"></status>
</kw>
<msg timestamp="20201030 18:30:34.264" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.126" endtime="20201030 18:30:34.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.267" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.266" endtime="20201030 18:30:34.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.268" endtime="20201030 18:30:34.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.123" endtime="20201030 18:30:34.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.121" endtime="20201030 18:30:34.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.277" endtime="20201030 18:30:34.591"></status>
</kw>
<msg timestamp="20201030 18:30:34.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:34.275" endtime="20201030 18:30:34.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:34.595" endtime="20201030 18:30:34.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.602" endtime="20201030 18:30:34.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.273" endtime="20201030 18:30:34.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.271" endtime="20201030 18:30:34.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:34.609" level="INFO">${PHILIP_RES} = [{'diff': 0.0013041530000000023}, {'diff': 0.0013024309999999997}, {'diff': 0.0013024300000000003}, {'diff': 0.001302374999999998}, {'diff': 0.0013024720000000024}, {'diff': 0.001302499999999998}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:34.606" endtime="20201030 18:30:34.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.613" level="INFO">${RESULT} = {'diff': [0.0013041530000000023, 0.0013024309999999997, 0.0013024300000000003, 0.001302374999999998, 0.0013024720000000024, 0.001302499999999998, 0.0013024579999999994, 0.0013023750000000014, 0.001302...</msg>
<status status="PASS" starttime="20201030 18:30:34.610" endtime="20201030 18:30:34.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.617" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:34.616" endtime="20201030 18:30:34.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.619" level="INFO">VALUE: [0.0013041530000000023, 0.0013024309999999997, 0.0013024300000000003, 0.001302374999999998, 0.0013024720000000024, 0.001302499999999998, 0.0013024579999999994, 0.0013023750000000014, 0.0013023330000000027, 0.001302472000000006, 0.0013023750000000014, 0.0013023470000000023, 0.0013024030000000006, 0.001302499999999998, 0.0013024859999999985, 0.001302500000000005, 0.0013025269999999978, 0.0013025140000000046, 0.001302471999999999, 0.0013024299999999933, 0.0013023330000000027, 0.0013024439999999998, 0.0013024439999999998, 0.0013024439999999998, 0.001302306000000003, 0.001302290999999997, 0.0013023610000000019, 0.0013023749999999945, 0.0013023749999999945, 0.0013024310000000067, 0.0013024299999999933, 0.0013023749999999945, 0.0013024170000000002, 0.0013024170000000002, 0.001302389000000001, 0.0013024449999999993, 0.0013024309999999928, 0.0013025410000000043, 0.0013024590000000058, 0.0013023750000000084, 0.0013024579999999925, 0.0013025140000000046, 0.0013023339999999883, 0.001302443999999986, 0.0013024859999999916, 0.0013023749999999945, 0.0013024030000000075, 0.001302389000000015, 0.0013024030000000075, 0.0013022220000000195]</msg>
<status status="PASS" starttime="20201030 18:30:34.618" endtime="20201030 18:30:34.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.614" endtime="20201030 18:30:34.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.624" endtime="20201030 18:30:34.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.623" endtime="20201030 18:30:34.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.622" endtime="20201030 18:30:34.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.119" endtime="20201030 18:30:34.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.119" endtime="20201030 18:30:34.645"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.653" endtime="20201030 18:30:34.794"></status>
</kw>
<msg timestamp="20201030 18:30:34.794" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.652" endtime="20201030 18:30:34.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.797" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.795" endtime="20201030 18:30:34.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.798" endtime="20201030 18:30:34.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.649" endtime="20201030 18:30:34.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.647" endtime="20201030 18:30:34.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.807" endtime="20201030 18:30:35.101"></status>
</kw>
<msg timestamp="20201030 18:30:35.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.805" endtime="20201030 18:30:35.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.110" endtime="20201030 18:30:35.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.127" endtime="20201030 18:30:35.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.803" endtime="20201030 18:30:35.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.801" endtime="20201030 18:30:35.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:35.142" level="INFO">${PHILIP_RES} = [{'diff': 0.0013511250000000016}, {'diff': 0.0013493749999999999}, {'diff': 0.0013494590000000008}, {'diff': 0.0013494440000000017}, {'diff': 0.0013493750000000033}, {'diff': 0.0013494169999999986}, {...</msg>
<status status="PASS" starttime="20201030 18:30:35.135" endtime="20201030 18:30:35.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.151" level="INFO">${RESULT} = {'diff': [0.0013511250000000016, 0.0013493749999999999, 0.0013494590000000008, 0.0013494440000000017, 0.0013493750000000033, 0.0013494169999999986, 0.0013493749999999999, 0.0013492639999999959, 0.0013...</msg>
<status status="PASS" starttime="20201030 18:30:35.144" endtime="20201030 18:30:35.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.161" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:35.158" endtime="20201030 18:30:35.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.166" level="INFO">VALUE: [0.0013511250000000016, 0.0013493749999999999, 0.0013494590000000008, 0.0013494440000000017, 0.0013493750000000033, 0.0013494169999999986, 0.0013493749999999999, 0.0013492639999999959, 0.0013492779999999954, 0.0013494159999999991, 0.0013494299999999987, 0.0013493749999999999, 0.0013493619999999998, 0.0013494999999999965, 0.0013494299999999987, 0.001349431000000005, 0.0013494309999999982, 0.0013494309999999982, 0.0013493889999999925, 0.0013493609999999934, 0.0013494169999999917, 0.0013493059999999946, 0.0013494309999999982, 0.0013494720000000043, 0.0013494299999999987, 0.0013494579999999978, 0.0013495690000000088, 0.001349513999999996, 0.0013495280000000026, 0.0013495279999999887, 0.001349612, 0.0013495830000000014, 0.0013493339999999937, 0.0013493749999999999, 0.0013494019999999995, 0.0013494580000000117, 0.0013494589999999973, 0.0013495409999999958, 0.0013495000000000035, 0.0013495000000000035, 0.0013495000000000035, 0.0013494170000000194, 0.001349444999999977, 0.0013494579999999978, 0.0013495000000000035, 0.0013494579999999978, 0.001349431000000012, 0.0013493750000000138, 0.0013494309999999843, 0.0013494439999999774]</msg>
<status status="PASS" starttime="20201030 18:30:35.163" endtime="20201030 18:30:35.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.153" endtime="20201030 18:30:35.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.183" endtime="20201030 18:30:35.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.179" endtime="20201030 18:30:35.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.177" endtime="20201030 18:30:35.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.646" endtime="20201030 18:30:35.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.645" endtime="20201030 18:30:35.204"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.213" endtime="20201030 18:30:35.356"></status>
</kw>
<msg timestamp="20201030 18:30:35.357" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.211" endtime="20201030 18:30:35.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.359" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.358" endtime="20201030 18:30:35.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.360" endtime="20201030 18:30:35.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.209" endtime="20201030 18:30:35.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.207" endtime="20201030 18:30:35.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.369" endtime="20201030 18:30:35.660"></status>
</kw>
<msg timestamp="20201030 18:30:35.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:35.368" endtime="20201030 18:30:35.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:35.664" endtime="20201030 18:30:35.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.672" endtime="20201030 18:30:35.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.365" endtime="20201030 18:30:35.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.364" endtime="20201030 18:30:35.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:35.678" level="INFO">${PHILIP_RES} = [{'diff': 0.001399125000000001}, {'diff': 0.0013973330000000006}, {'diff': 0.0013972920000000014}, {'diff': 0.0013973479999999996}, {'diff': 0.001397306000000001}, {'diff': 0.001397334}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:35.675" endtime="20201030 18:30:35.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.683" level="INFO">${RESULT} = {'diff': [0.001399125000000001, 0.0013973330000000006, 0.0013972920000000014, 0.0013973479999999996, 0.001397306000000001, 0.001397334, 0.0013972919999999944, 0.001397417000000005, 0.00139736099999999...</msg>
<status status="PASS" starttime="20201030 18:30:35.679" endtime="20201030 18:30:35.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.687" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:35.686" endtime="20201030 18:30:35.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.690" level="INFO">VALUE: [0.001399125000000001, 0.0013973330000000006, 0.0013972920000000014, 0.0013973479999999996, 0.001397306000000001, 0.001397334, 0.0013972919999999944, 0.001397417000000005, 0.0013973609999999997, 0.001397291000000002, 0.0013973609999999997, 0.0013973479999999996, 0.0013973609999999997, 0.0013973200000000005, 0.0013972359999999961, 0.001397319000000001, 0.001397318999999994, 0.0013973609999999997, 0.0013973050000000015, 0.001397290999999995, 0.001397290999999995, 0.0013973889999999989, 0.0013971950000000039, 0.0013972780000000018, 0.0013973889999999989, 0.001397290999999995, 0.0013972639999999953, 0.0013972640000000092, 0.0013972220000000035, 0.0013971670000000047, 0.001397207999999997, 0.0013971390000000056, 0.0013972220000000035, 0.0013972639999999953, 0.0013972780000000018, 0.001397318999999994, 0.0013973050000000015, 0.0013972500000000027, 0.0013972359999999961, 0.0013972919999999944, 0.0013972089999999826, 0.0013972220000000035, 0.0013972359999999961, 0.0013972780000000018, 0.0013971950000000177, 0.0013972919999999944, 0.0013971809999999973, 0.0013971950000000177, 0.001397096999999986, 0.001397181000000025]</msg>
<status status="PASS" starttime="20201030 18:30:35.688" endtime="20201030 18:30:35.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.684" endtime="20201030 18:30:35.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.695" endtime="20201030 18:30:35.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.693" endtime="20201030 18:30:35.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.692" endtime="20201030 18:30:35.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.205" endtime="20201030 18:30:35.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.205" endtime="20201030 18:30:35.715"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.724" endtime="20201030 18:30:35.871"></status>
</kw>
<msg timestamp="20201030 18:30:35.872" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.722" endtime="20201030 18:30:35.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.874" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.873" endtime="20201030 18:30:35.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.875" endtime="20201030 18:30:35.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.720" endtime="20201030 18:30:35.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.718" endtime="20201030 18:30:35.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.884" endtime="20201030 18:30:36.194"></status>
</kw>
<msg timestamp="20201030 18:30:36.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.883" endtime="20201030 18:30:36.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.198" endtime="20201030 18:30:36.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.205" endtime="20201030 18:30:36.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.880" endtime="20201030 18:30:36.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.878" endtime="20201030 18:30:36.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:36.212" level="INFO">${PHILIP_RES} = [{'diff': 0.0014474169999999995}, {'diff': 0.0014456530000000016}, {'diff': 0.0014457640000000022}, {'diff': 0.0014456530000000016}, {'diff': 0.0014457359999999995}, {'diff': 0.001445707999999997}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:36.209" endtime="20201030 18:30:36.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.216" level="INFO">${RESULT} = {'diff': [0.0014474169999999995, 0.0014456530000000016, 0.0014457640000000022, 0.0014456530000000016, 0.0014457359999999995, 0.001445707999999997, 0.001445624999999999, 0.0014456670000000046, 0.001445...</msg>
<status status="PASS" starttime="20201030 18:30:36.213" endtime="20201030 18:30:36.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.220" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:36.219" endtime="20201030 18:30:36.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.223" level="INFO">VALUE: [0.0014474169999999995, 0.0014456530000000016, 0.0014457640000000022, 0.0014456530000000016, 0.0014457359999999995, 0.001445707999999997, 0.001445624999999999, 0.0014456670000000046, 0.001445653000000005, 0.0014456390000000055, 0.0014455280000000015, 0.0014455969999999999, 0.0014455969999999999, 0.0014455280000000015, 0.0014455410000000016, 0.0014456389999999916, 0.0014456949999999968, 0.001445653000000005, 0.0014456939999999974, 0.001445653000000005, 0.001445625000000006, 0.001445666000000012, 0.0014455690000000077, 0.001445596999999993, 0.0014457639999999883, 0.00144570799999999, 0.0014456659999999982, 0.0014457230000000099, 0.0014456810000000042, 0.0014458060000000078, 0.001445736000000003, 0.0014456669999999977, 0.0014456800000000047, 0.0014457500000000095, 0.001445736000000003, 0.0014456389999999986, 0.0014457080000000039, 0.0014456659999999982, 0.001445805999999994, 0.0014457910000000018, 0.0014456800000000047, 0.0014457370000000025, 0.0014457629999999888, 0.0014457220000000104, 0.0014458199999999866, 0.001445805999999994, 0.001445805999999994, 0.0014457499999999956, 0.0014456949999999968, 0.0014456800000000047]</msg>
<status status="PASS" starttime="20201030 18:30:36.221" endtime="20201030 18:30:36.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.217" endtime="20201030 18:30:36.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.227" endtime="20201030 18:30:36.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.226" endtime="20201030 18:30:36.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.225" endtime="20201030 18:30:36.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.716" endtime="20201030 18:30:36.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.716" endtime="20201030 18:30:36.248"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.257" endtime="20201030 18:30:36.409"></status>
</kw>
<msg timestamp="20201030 18:30:36.410" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.255" endtime="20201030 18:30:36.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.412" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.411" endtime="20201030 18:30:36.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.413" endtime="20201030 18:30:36.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.253" endtime="20201030 18:30:36.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.251" endtime="20201030 18:30:36.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.422" endtime="20201030 18:30:36.716"></status>
</kw>
<msg timestamp="20201030 18:30:36.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.420" endtime="20201030 18:30:36.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.725" endtime="20201030 18:30:36.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.742" endtime="20201030 18:30:36.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.418" endtime="20201030 18:30:36.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.416" endtime="20201030 18:30:36.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:36.756" level="INFO">${PHILIP_RES} = [{'diff': 0.0014966939999999998}, {'diff': 0.0014947920000000017}, {'diff': 0.0014948470000000005}, {'diff': 0.0014949169999999984}, {'diff': 0.0014947499999999996}, {'diff': 0.0014947629999999962}, {...</msg>
<status status="PASS" starttime="20201030 18:30:36.749" endtime="20201030 18:30:36.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.765" level="INFO">${RESULT} = {'diff': [0.0014966939999999998, 0.0014947920000000017, 0.0014948470000000005, 0.0014949169999999984, 0.0014947499999999996, 0.0014947629999999962, 0.0014947780000000022, 0.0014948889999999992, 0.0014...</msg>
<status status="PASS" starttime="20201030 18:30:36.758" endtime="20201030 18:30:36.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.774" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:36.772" endtime="20201030 18:30:36.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.779" level="INFO">VALUE: [0.0014966939999999998, 0.0014947920000000017, 0.0014948470000000005, 0.0014949169999999984, 0.0014947499999999996, 0.0014947629999999962, 0.0014947780000000022, 0.0014948889999999992, 0.0014948060000000013, 0.0014949450000000045, 0.001494915999999999, 0.0014949169999999984, 0.001494915999999999, 0.0014946809999999977, 0.0014949299999999985, 0.001494833000000001, 0.001494819999999994, 0.0014948749999999927, 0.0014948889999999992, 0.001494930999999991, 0.0014948889999999992, 0.001494943999999998, 0.0014948469999999936, 0.0014948200000000078, 0.0014948889999999992, 0.001494861, 0.0014949300000000054, 0.0014949449999999975, 0.0014949029999999919, 0.0014950279999999955, 0.001494930999999991, 0.0014948889999999992, 0.001494861, 0.0014949169999999984, 0.0014948469999999936, 0.001494819999999994, 0.0014948469999999936, 0.0014949169999999845, 0.001494972000000011, 0.0014949449999999975, 0.0014948609999999862, 0.0014949170000000123, 0.0014949029999999919, 0.0014949719999999833, 0.0014949169999999845, 0.0014947770000000027, 0.001494943999999998, 0.0014949029999999919, 0.0014950269999999821, 0.0014950689999999878]</msg>
<status status="PASS" starttime="20201030 18:30:36.776" endtime="20201030 18:30:36.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.767" endtime="20201030 18:30:36.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.791" endtime="20201030 18:30:36.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.788" endtime="20201030 18:30:36.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.785" endtime="20201030 18:30:36.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.249" endtime="20201030 18:30:36.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.249" endtime="20201030 18:30:36.813"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.821" endtime="20201030 18:30:36.977"></status>
</kw>
<msg timestamp="20201030 18:30:36.977" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.819" endtime="20201030 18:30:36.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.980" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.978" endtime="20201030 18:30:36.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.981" endtime="20201030 18:30:36.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.817" endtime="20201030 18:30:36.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.815" endtime="20201030 18:30:36.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.990" endtime="20201030 18:30:37.280"></status>
</kw>
<msg timestamp="20201030 18:30:37.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018645528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.988" endtime="20201030 18:30:37.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018645528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.284" endtime="20201030 18:30:37.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.291" endtime="20201030 18:30:37.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.986" endtime="20201030 18:30:37.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.984" endtime="20201030 18:30:37.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:37.298" level="INFO">${PHILIP_RES} = [{'diff': 0.0015467079999999973}, {'diff': 0.0015448750000000011}, {'diff': 0.0015449030000000002}, {'diff': 0.0015449030000000002}, {'diff': 0.001544944999999999}, {'diff': 0.0015448060000000027}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:37.295" endtime="20201030 18:30:37.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.303" level="INFO">${RESULT} = {'diff': [0.0015467079999999973, 0.0015448750000000011, 0.0015449030000000002, 0.0015449030000000002, 0.001544944999999999, 0.0015448060000000027, 0.001544735999999998, 0.001544833999999995, 0.0015449...</msg>
<status status="PASS" starttime="20201030 18:30:37.299" endtime="20201030 18:30:37.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.307" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:37.306" endtime="20201030 18:30:37.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.310" level="INFO">VALUE: [0.0015467079999999973, 0.0015448750000000011, 0.0015449030000000002, 0.0015449030000000002, 0.001544944999999999, 0.0015448060000000027, 0.001544735999999998, 0.001544833999999995, 0.0015449859999999982, 0.0015449439999999995, 0.0015448060000000027, 0.0015448060000000027, 0.0015448610000000015, 0.0015448049999999963, 0.0015449030000000002, 0.0015448330000000093, 0.0015448890000000076, 0.0015448750000000011, 0.001544818999999989, 0.001545056000000003, 0.00154493, 0.001544986000000012, 0.0015448480000000014, 0.0015450000000000047, 0.001544957999999999, 0.0015451379999999876, 0.001545055999999989, 0.0015450280000000038, 0.0015450000000000047, 0.0015449170000000068, 0.0015449720000000056, 0.0015449309999999994, 0.001544957999999999, 0.001544945000000006, 0.0015449439999999925, 0.0015448060000000097, 0.0015449999999999908, 0.0015449720000000056, 0.0015450140000000112, 0.0015450830000000026, 0.0015449439999999925, 0.0015449859999999982, 0.0015451110000000157, 0.001544958000000013, 0.001545110999999988, 0.0015450549999999896, 0.00154493, 0.0015450280000000038, 0.0015449720000000056, 0.0015449999999999908]</msg>
<status status="PASS" starttime="20201030 18:30:37.308" endtime="20201030 18:30:37.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.304" endtime="20201030 18:30:37.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:37.314" endtime="20201030 18:30:37.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.313" endtime="20201030 18:30:37.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.312" endtime="20201030 18:30:37.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.813" endtime="20201030 18:30:37.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.813" endtime="20201030 18:30:37.335"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.344" endtime="20201030 18:30:37.503"></status>
</kw>
<msg timestamp="20201030 18:30:37.504" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.342" endtime="20201030 18:30:37.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.506" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.505" endtime="20201030 18:30:37.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.507" endtime="20201030 18:30:37.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.339" endtime="20201030 18:30:37.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.338" endtime="20201030 18:30:37.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.516" endtime="20201030 18:30:37.828"></status>
</kw>
<msg timestamp="20201030 18:30:37.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018739194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02033675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:37.515" endtime="20201030 18:30:37.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018739194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02033675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:37.832" endtime="20201030 18:30:37.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.839" endtime="20201030 18:30:37.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.512" endtime="20201030 18:30:37.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.511" endtime="20201030 18:30:37.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:37.846" level="INFO">${PHILIP_RES} = [{'diff': 0.001597556}, {'diff': 0.0015959299999999989}, {'diff': 0.0015959019999999997}, {'diff': 0.0015959030000000027}, {'diff': 0.0015959169999999988}, {'diff': 0.0015958890000000031}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:30:37.843" endtime="20201030 18:30:37.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.850" level="INFO">${RESULT} = {'diff': [0.001597556, 0.0015959299999999989, 0.0015959019999999997, 0.0015959030000000027, 0.0015959169999999988, 0.0015958890000000031, 0.0015959030000000027, 0.0015958749999999966, 0.00159591700000...</msg>
<status status="PASS" starttime="20201030 18:30:37.847" endtime="20201030 18:30:37.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.854" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:37.853" endtime="20201030 18:30:37.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.857" level="INFO">VALUE: [0.001597556, 0.0015959299999999989, 0.0015959019999999997, 0.0015959030000000027, 0.0015959169999999988, 0.0015958890000000031, 0.0015959030000000027, 0.0015958749999999966, 0.0015959170000000023, 0.001595832999999998, 0.001595860999999997, 0.0015958889999999962, 0.0015958890000000031, 0.0015957360000000004, 0.0015958050000000057, 0.0015957079999999874, 0.0015957779999999921, 0.0015958880000000036, 0.0015960139999999928, 0.0015958890000000031, 0.0015959310000000088, 0.0015958749999999966, 0.0015959450000000014, 0.0015959170000000023, 0.001595861000000004, 0.001595972000000001, 0.001595959000000008, 0.0015960420000000058, 0.0015959860000000076, 0.001596083000000012, 0.0015962080000000017, 0.001596041999999992, 0.0015960559999999985, 0.0015959860000000076, 0.0015959170000000161, 0.0015960140000000067, 0.0015958470000000113, 0.001595847999999983, 0.0015959020000000101, 0.001596013999999979, 0.0015959029999999819, 0.0015959860000000214, 0.0015959309999999949, 0.0015959020000000101, 0.001595959000000008, 0.0015960690000000055, 0.001595972000000001, 0.0015959030000000096, 0.0015959730000000005, 0.001595959000000008]</msg>
<status status="PASS" starttime="20201030 18:30:37.855" endtime="20201030 18:30:37.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.851" endtime="20201030 18:30:37.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:37.861" endtime="20201030 18:30:37.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.860" endtime="20201030 18:30:37.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.859" endtime="20201030 18:30:37.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.336" endtime="20201030 18:30:37.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.336" endtime="20201030 18:30:37.882"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.891" endtime="20201030 18:30:38.056"></status>
</kw>
<msg timestamp="20201030 18:30:38.056" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.889" endtime="20201030 18:30:38.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.058" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.057" endtime="20201030 18:30:38.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.060" endtime="20201030 18:30:38.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.886" endtime="20201030 18:30:38.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.885" endtime="20201030 18:30:38.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.069" endtime="20201030 18:30:38.381"></status>
</kw>
<msg timestamp="20201030 18:30:38.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021179, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:38.067" endtime="20201030 18:30:38.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021179, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:38.390" endtime="20201030 18:30:38.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.408" endtime="20201030 18:30:38.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.065" endtime="20201030 18:30:38.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.063" endtime="20201030 18:30:38.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:38.421" level="INFO">${PHILIP_RES} = [{'diff': 0.0016491530000000004}, {'diff': 0.0016474720000000005}, {'diff': 0.0016474440000000014}, {'diff': 0.0016474999999999997}, {'diff': 0.0016474859999999966}, {'diff': 0.0016473340000000003}, {...</msg>
<status status="PASS" starttime="20201030 18:30:38.415" endtime="20201030 18:30:38.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.430" level="INFO">${RESULT} = {'diff': [0.0016491530000000004, 0.0016474720000000005, 0.0016474440000000014, 0.0016474999999999997, 0.0016474859999999966, 0.0016473340000000003, 0.0016472920000000016, 0.0016474029999999987, 0.0016...</msg>
<status status="PASS" starttime="20201030 18:30:38.423" endtime="20201030 18:30:38.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.436" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:38.435" endtime="20201030 18:30:38.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.438" level="INFO">VALUE: [0.0016491530000000004, 0.0016474720000000005, 0.0016474440000000014, 0.0016474999999999997, 0.0016474859999999966, 0.0016473340000000003, 0.0016472920000000016, 0.0016474029999999987, 0.0016474859999999966, 0.0016474999999999962, 0.0016475970000000006, 0.0016475279999999953, 0.0016475420000000018, 0.0016475410000000024, 0.0016475280000000092, 0.001647541999999988, 0.0016476519999999995, 0.0016473470000000073, 0.0016474169999999982, 0.0016475279999999953, 0.0016476119999999927, 0.0016474300000000053, 0.001647471999999997, 0.0016474449999999974, 0.0016475559999999945, 0.0016475280000000092, 0.0016474999999999962, 0.0016475550000000089, 0.0016474860000000036, 0.0016474860000000036, 0.0016475420000000018, 0.0016475279999999953, 0.0016475140000000027, 0.0016474440000000118, 0.0016473469999999935, 0.0016474579999999905, 0.0016475410000000024, 0.0016475970000000006, 0.0016475420000000018, 0.0016475140000000166, 0.0016474579999999905, 0.0016473750000000065, 0.001647472000000011, 0.0016475690000000154, 0.0016475279999999815, 0.00164726300000001, 0.0016475279999999815, 0.0016475139999999888, 0.0016474579999999905, 0.0016474169999999844]</msg>
<status status="PASS" starttime="20201030 18:30:38.437" endtime="20201030 18:30:38.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.432" endtime="20201030 18:30:38.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.444" endtime="20201030 18:30:38.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.442" endtime="20201030 18:30:38.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.441" endtime="20201030 18:30:38.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.883" endtime="20201030 18:30:38.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.883" endtime="20201030 18:30:38.464"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.473" endtime="20201030 18:30:38.641"></status>
</kw>
<msg timestamp="20201030 18:30:38.641" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.471" endtime="20201030 18:30:38.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.644" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.642" endtime="20201030 18:30:38.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.645" endtime="20201030 18:30:38.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.469" endtime="20201030 18:30:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.467" endtime="20201030 18:30:38.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.654" endtime="20201030 18:30:38.944"></status>
</kw>
<msg timestamp="20201030 18:30:38.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018619014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.652" endtime="20201030 18:30:38.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018619014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.948" endtime="20201030 18:30:38.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.955" endtime="20201030 18:30:38.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.650" endtime="20201030 18:30:38.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.648" endtime="20201030 18:30:38.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:38.962" level="INFO">${PHILIP_RES} = [{'diff': 0.0017015000000000016}, {'diff': 0.0016997080000000012}, {'diff': 0.0016997499999999999}, {'diff': 0.0016995829999999976}, {'diff': 0.0016996530000000024}, {'diff': 0.001699695000000001}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:38.959" endtime="20201030 18:30:38.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.966" level="INFO">${RESULT} = {'diff': [0.0017015000000000016, 0.0016997080000000012, 0.0016997499999999999, 0.0016995829999999976, 0.0016996530000000024, 0.001699695000000001, 0.0016997360000000003, 0.0016998879999999966, 0.00169...</msg>
<status status="PASS" starttime="20201030 18:30:38.963" endtime="20201030 18:30:38.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.971" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:38.970" endtime="20201030 18:30:38.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.973" level="INFO">VALUE: [0.0017015000000000016, 0.0016997080000000012, 0.0016997499999999999, 0.0016995829999999976, 0.0016996530000000024, 0.001699695000000001, 0.0016997360000000003, 0.0016998879999999966, 0.0016997919999999986, 0.0016997499999999999, 0.0016998469999999974, 0.0016998050000000056, 0.001699667000000002, 0.0016997090000000076, 0.0016996390000000028, 0.0016999169999999952, 0.0016997499999999999, 0.0016997220000000007, 0.001699667000000002, 0.0016996529999999954, 0.0016998059999999982, 0.0016998329999999978, 0.0016997090000000076, 0.001699777999999999, 0.0016996390000000028, 0.0016997499999999999, 0.001699708000000008, 0.0016998610000000108, 0.0016997360000000072, 0.0016997909999999922, 0.0016998750000000035, 0.0016996529999999954, 0.0016998059999999982, 0.0016996250000000102, 0.0016997359999999795, 0.001699762999999993, 0.001699723000000014, 0.0016998189999999913, 0.0016998049999999987, 0.0016997219999999869, 0.0016997360000000072, 0.0016996390000000028, 0.0016997920000000055, 0.0016998750000000173, 0.0016997780000000129, 0.0016997920000000055, 0.001699832999999984, 0.001699860999999997, 0.001699860999999997, 0.0016998749999999896]</msg>
<status status="PASS" starttime="20201030 18:30:38.972" endtime="20201030 18:30:38.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.967" endtime="20201030 18:30:38.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.978" endtime="20201030 18:30:38.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.977" endtime="20201030 18:30:38.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.975" endtime="20201030 18:30:38.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.465" endtime="20201030 18:30:38.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.465" endtime="20201030 18:30:38.999"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.007" endtime="20201030 18:30:39.181"></status>
</kw>
<msg timestamp="20201030 18:30:39.182" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.006" endtime="20201030 18:30:39.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.187" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.184" endtime="20201030 18:30:39.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.189" endtime="20201030 18:30:39.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.003" endtime="20201030 18:30:39.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.001" endtime="20201030 18:30:39.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.212" endtime="20201030 18:30:39.510"></status>
</kw>
<msg timestamp="20201030 18:30:39.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018745542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.205" endtime="20201030 18:30:39.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018745542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.514" endtime="20201030 18:30:39.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.521" endtime="20201030 18:30:39.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.199" endtime="20201030 18:30:39.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.195" endtime="20201030 18:30:39.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:39.528" level="INFO">${PHILIP_RES} = [{'diff': 0.0017545269999999988}, {'diff': 0.001752903}, {'diff': 0.001752763999999997}, {'diff': 0.0017527640000000004}, {'diff': 0.001752763999999997}, {'diff': 0.0017528189999999957}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:39.525" endtime="20201030 18:30:39.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.532" level="INFO">${RESULT} = {'diff': [0.0017545269999999988, 0.001752903, 0.001752763999999997, 0.0017527640000000004, 0.001752763999999997, 0.0017528189999999957, 0.0017528610000000014, 0.0017528189999999957, 0.0017526520000000...</msg>
<status status="PASS" starttime="20201030 18:30:39.529" endtime="20201030 18:30:39.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.536" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:39.535" endtime="20201030 18:30:39.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.538" level="INFO">VALUE: [0.0017545269999999988, 0.001752903, 0.001752763999999997, 0.0017527640000000004, 0.001752763999999997, 0.0017528189999999957, 0.0017528610000000014, 0.0017528189999999957, 0.0017526520000000004, 0.0017527640000000039, 0.0017528469999999949, 0.0017527359999999978, 0.0017527909999999966, 0.0017527780000000034, 0.0017528200000000022, 0.0017527779999999965, 0.0017528609999999945, 0.0017530419999999963, 0.0017529299999999998, 0.0017527779999999965, 0.001752792000000003, 0.001752652999999993, 0.001752666, 0.0017526520000000073, 0.0017527080000000056, 0.001752652999999993, 0.001752693999999999, 0.0017527640000000039, 0.0017527499999999974, 0.0017527359999999909, 0.0017528889999999936, 0.001752792000000003, 0.0017529159999999933, 0.0017528049999999962, 0.0017527780000000104, 0.0017528049999999962, 0.0017528330000000092, 0.0017528470000000018, 0.00175276399999999, 0.0017528609999999945, 0.0017528049999999962, 0.001752903, 0.0017528199999999883, 0.0017528060000000234, 0.0017527500000000251, 0.0017529169999999927, 0.0017529300000000136, 0.0017528059999999956, 0.0017526949999999986, 0.0017527080000000195]</msg>
<status status="PASS" starttime="20201030 18:30:39.537" endtime="20201030 18:30:39.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.532" endtime="20201030 18:30:39.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.543" endtime="20201030 18:30:39.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.542" endtime="20201030 18:30:39.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.541" endtime="20201030 18:30:39.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.000" endtime="20201030 18:30:39.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.999" endtime="20201030 18:30:39.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.460" endtime="20201030 18:30:39.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.568" endtime="20201030 18:30:39.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.566" endtime="20201030 18:30:39.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.565" endtime="20201030 18:30:39.588"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:15.226" endtime="20201030 18:30:39.588" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:53.603" endtime="20201030 18:30:39.597"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.667" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:39.675" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:40.854" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:39.666" endtime="20201030 18:30:40.855"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.858" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:40.856" endtime="20201030 18:30:40.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.665" endtime="20201030 18:30:40.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.861" endtime="20201030 18:30:41.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.859" endtime="20201030 18:30:41.047"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.059" endtime="20201030 18:30:41.071"></status>
</kw>
<msg timestamp="20201030 18:30:41.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.058" endtime="20201030 18:30:41.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.073" endtime="20201030 18:30:41.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.078" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:41.076" endtime="20201030 18:30:41.078"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:41.055" endtime="20201030 18:30:41.078"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:41.053" endtime="20201030 18:30:41.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.052" endtime="20201030 18:30:41.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:41.083" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:41.082" endtime="20201030 18:30:41.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.080" endtime="20201030 18:30:41.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.051" endtime="20201030 18:30:41.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.050" endtime="20201030 18:30:41.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.086" endtime="20201030 18:30:41.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.049" endtime="20201030 18:30:41.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.089" endtime="20201030 18:30:41.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.047" endtime="20201030 18:30:41.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.663" endtime="20201030 18:30:41.092"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.097" endtime="20201030 18:30:41.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.096" endtime="20201030 18:30:41.117"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.130" endtime="20201030 18:30:41.142"></status>
</kw>
<msg timestamp="20201030 18:30:41.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.128" endtime="20201030 18:30:41.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.145" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.143" endtime="20201030 18:30:41.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.148" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:41.146" endtime="20201030 18:30:41.148"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:41.126" endtime="20201030 18:30:41.149"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:41.123" endtime="20201030 18:30:41.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.122" endtime="20201030 18:30:41.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:41.153" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:41.152" endtime="20201030 18:30:41.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.150" endtime="20201030 18:30:41.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.121" endtime="20201030 18:30:41.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.121" endtime="20201030 18:30:41.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.155" endtime="20201030 18:30:41.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.119" endtime="20201030 18:30:41.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.118" endtime="20201030 18:30:41.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.094" endtime="20201030 18:30:41.158"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.168" endtime="20201030 18:30:41.184"></status>
</kw>
<msg timestamp="20201030 18:30:41.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.166" endtime="20201030 18:30:41.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.186" endtime="20201030 18:30:41.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.188" endtime="20201030 18:30:41.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.163" endtime="20201030 18:30:41.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.161" endtime="20201030 18:30:41.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.197" endtime="20201030 18:30:41.488"></status>
</kw>
<msg timestamp="20201030 18:30:41.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062934306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.196" endtime="20201030 18:30:41.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062934306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.492" endtime="20201030 18:30:41.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.500" endtime="20201030 18:30:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.193" endtime="20201030 18:30:41.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.191" endtime="20201030 18:30:41.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.507" level="INFO">${RESULT} = [{'diff': 4.28339999999916e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.204200000000602e-05}, {'diff': 4.2027000000000037e-05}, {'diff': 4.204200000000602e-05}, {'diff': 4.202799999999951e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:41.504" endtime="20201030 18:30:41.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:41.511" level="INFO">${ACCURACY} = {'diff': [4.28339999999916e-05, 4.202799999999951e-05, 4.204200000000602e-05, 4.2027000000000037e-05, 4.204200000000602e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.204199999999214e-05, 4.2069...</msg>
<status status="PASS" starttime="20201030 18:30:41.508" endtime="20201030 18:30:41.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.516" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:30:41.515" endtime="20201030 18:30:41.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.519" level="INFO">VALUE: [4.28339999999916e-05, 4.202799999999951e-05, 4.204200000000602e-05, 4.2027000000000037e-05, 4.204200000000602e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.204199999999214e-05, 4.2069000000005685e-05, 4.2111000000011334e-05, 4.2082999999998316e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.2054999999999176e-05, 4.2069000000005685e-05, 4.207000000000516e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.204200000000602e-05, 4.202799999999951e-05, 4.2027000000000037e-05, 4.204200000000602e-05, 4.204099999999267e-05, 4.198600000000774e-05, 4.209699999999095e-05, 4.2041000000006545e-05, 4.202799999999951e-05, 4.2027000000000037e-05, 4.202800000001339e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.204200000000602e-05, 4.204199999999214e-05, 4.204200000000602e-05, 4.204199999999214e-05, 4.202799999999951e-05, 4.204199999999214e-05, 4.2069000000005685e-05, 4.202800000001339e-05, 4.204200000000602e-05, 4.2013999999993e-05, 4.202799999999951e-05, 4.200000000000037e-05, 4.2041000000006545e-05, 4.2013999999993e-05, 4.204199999999214e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.2054999999999176e-05, 4.2069000000005685e-05]</msg>
<status status="PASS" starttime="20201030 18:30:41.518" endtime="20201030 18:30:41.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.512" endtime="20201030 18:30:41.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.523" endtime="20201030 18:30:41.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.522" endtime="20201030 18:30:41.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.521" endtime="20201030 18:30:41.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.159" endtime="20201030 18:30:41.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.159" endtime="20201030 18:30:41.544"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.552" endtime="20201030 18:30:41.568"></status>
</kw>
<msg timestamp="20201030 18:30:41.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.551" endtime="20201030 18:30:41.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.570" endtime="20201030 18:30:41.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.573" endtime="20201030 18:30:41.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.548" endtime="20201030 18:30:41.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.546" endtime="20201030 18:30:41.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.582" endtime="20201030 18:30:41.867"></status>
</kw>
<msg timestamp="20201030 18:30:41.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021126125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.580" endtime="20201030 18:30:41.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021126125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.871" endtime="20201030 18:30:41.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.879" endtime="20201030 18:30:41.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.578" endtime="20201030 18:30:41.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.576" endtime="20201030 18:30:41.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.886" level="INFO">${RESULT} = [{'diff': 4.277800000000026e-05}, {'diff': 4.2097000000001356e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.204199999999908e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:41.883" endtime="20201030 18:30:41.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:41.891" level="INFO">${ACCURACY} = {'diff': [4.277800000000026e-05, 4.2097000000001356e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.205...</msg>
<status status="PASS" starttime="20201030 18:30:41.887" endtime="20201030 18:30:41.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.895" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:30:41.894" endtime="20201030 18:30:41.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.898" level="INFO">VALUE: [4.277800000000026e-05, 4.2097000000001356e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.205600000000212e-05, 4.2097000000001356e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.2054999999999176e-05, 4.2069000000002216e-05, 4.2040999999999606e-05, 4.2040999999999606e-05, 4.2083000000001786e-05, 4.2054999999999176e-05, 4.2027000000000037e-05, 4.2041000000003076e-05, 4.204199999999908e-05, 4.200000000000037e-05, 4.2054999999999176e-05, 4.202799999999951e-05, 4.2055000000002646e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.204200000000255e-05, 4.200000000000037e-05, 4.19860000000008e-05, 4.204199999999908e-05, 4.208399999999779e-05, 4.205600000000212e-05, 4.204199999999908e-05, 4.205599999999865e-05, 4.1987000000000274e-05, 4.207000000000169e-05, 4.2055000000002646e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.204200000000255e-05, 4.204199999999908e-05, 4.205599999999865e-05, 4.2040999999999606e-05, 4.2027000000000037e-05, 4.208400000000126e-05, 4.2040999999999606e-05, 4.19999999999969e-05]</msg>
<status status="PASS" starttime="20201030 18:30:41.896" endtime="20201030 18:30:41.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.892" endtime="20201030 18:30:41.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.902" endtime="20201030 18:30:41.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.901" endtime="20201030 18:30:41.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.900" endtime="20201030 18:30:41.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.545" endtime="20201030 18:30:41.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.544" endtime="20201030 18:30:41.923"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.931" endtime="20201030 18:30:41.947"></status>
</kw>
<msg timestamp="20201030 18:30:41.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.930" endtime="20201030 18:30:41.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.949" endtime="20201030 18:30:41.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.952" endtime="20201030 18:30:41.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.927" endtime="20201030 18:30:41.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.925" endtime="20201030 18:30:41.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.961" endtime="20201030 18:30:42.247"></status>
</kw>
<msg timestamp="20201030 18:30:42.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021055806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021098611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.959" endtime="20201030 18:30:42.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021055806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021098611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.251" endtime="20201030 18:30:42.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.260" endtime="20201030 18:30:42.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.957" endtime="20201030 18:30:42.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.955" endtime="20201030 18:30:42.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.266" level="INFO">${RESULT} = [{'diff': 4.2804999999999926e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.2027000000000037e-05}, {'diff': 4.2082999999998316e-05}, {'diff': 4.204199999999908e-05...</msg>
<status status="PASS" starttime="20201030 18:30:42.263" endtime="20201030 18:30:42.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:42.270" level="INFO">${ACCURACY} = {'diff': [4.2804999999999926e-05, 4.2054999999999176e-05, 4.202799999999951e-05, 4.2027000000000037e-05, 4.2082999999998316e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:30:42.267" endtime="20201030 18:30:42.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.275" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:30:42.274" endtime="20201030 18:30:42.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.277" level="INFO">VALUE: [4.2804999999999926e-05, 4.2054999999999176e-05, 4.202799999999951e-05, 4.2027000000000037e-05, 4.2082999999998316e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.204200000000255e-05, 4.201399999999994e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.2054999999999176e-05, 4.205599999999865e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.2111000000000925e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.208400000000126e-05, 4.205600000000212e-05, 4.200000000000037e-05, 4.2096999999997886e-05, 4.2054999999999176e-05, 4.202799999999951e-05, 4.2068999999998746e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.2096999999997886e-05, 4.201399999999994e-05, 4.204200000000255e-05, 4.2040999999999606e-05, 4.19860000000008e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.200000000000037e-05, 4.204200000000255e-05, 4.204200000000255e-05, 4.205599999999865e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.205599999999865e-05, 4.2027000000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:30:42.276" endtime="20201030 18:30:42.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.271" endtime="20201030 18:30:42.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.282" endtime="20201030 18:30:42.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.281" endtime="20201030 18:30:42.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.279" endtime="20201030 18:30:42.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.924" endtime="20201030 18:30:42.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.923" endtime="20201030 18:30:42.303"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.313" endtime="20201030 18:30:42.329"></status>
</kw>
<msg timestamp="20201030 18:30:42.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.311" endtime="20201030 18:30:42.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.331" endtime="20201030 18:30:42.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.333" endtime="20201030 18:30:42.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.308" endtime="20201030 18:30:42.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.306" endtime="20201030 18:30:42.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.342" endtime="20201030 18:30:42.627"></status>
</kw>
<msg timestamp="20201030 18:30:42.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.341" endtime="20201030 18:30:42.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.631" endtime="20201030 18:30:42.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.640" endtime="20201030 18:30:42.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.338" endtime="20201030 18:30:42.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.336" endtime="20201030 18:30:42.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.646" level="INFO">${RESULT} = [{'diff': 4.2804999999999926e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.206999999999822e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:42.643" endtime="20201030 18:30:42.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:42.650" level="INFO">${ACCURACY} = {'diff': [4.2804999999999926e-05, 4.204199999999908e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.2054999999999176e-05, 4.206999999999822e-05, 4.208399999999779e-05, 4.2110999999997456e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:30:42.647" endtime="20201030 18:30:42.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.654" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:30:42.653" endtime="20201030 18:30:42.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.657" level="INFO">VALUE: [4.2804999999999926e-05, 4.204199999999908e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.2054999999999176e-05, 4.206999999999822e-05, 4.208399999999779e-05, 4.2110999999997456e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.202799999999951e-05, 4.201399999999994e-05, 4.205600000000212e-05, 4.205599999999865e-05, 4.2040999999999606e-05, 4.205599999999865e-05, 4.208399999999779e-05, 4.204199999999908e-05, 4.205599999999865e-05, 4.2054999999999176e-05, 4.19860000000008e-05, 4.19860000000008e-05, 4.205600000000212e-05, 4.205600000000212e-05, 4.2040999999999606e-05, 4.2068999999998746e-05, 4.205600000000212e-05, 4.204199999999908e-05, 4.200000000000037e-05, 4.205599999999865e-05, 4.204199999999908e-05, 4.2068999999998746e-05, 4.205600000000212e-05, 4.2069000000002216e-05, 4.2040999999999606e-05, 4.205600000000212e-05, 4.2096999999997886e-05, 4.205599999999865e-05, 4.204199999999908e-05, 4.205600000000212e-05, 4.2054999999999176e-05, 4.206999999999822e-05, 4.2111000000000925e-05, 4.202799999999951e-05, 4.202800000000298e-05, 4.202800000000298e-05, 4.2054999999999176e-05, 4.209800000000083e-05, 4.2040999999999606e-05]</msg>
<status status="PASS" starttime="20201030 18:30:42.655" endtime="20201030 18:30:42.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.651" endtime="20201030 18:30:42.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.662" endtime="20201030 18:30:42.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.661" endtime="20201030 18:30:42.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.660" endtime="20201030 18:30:42.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.304" endtime="20201030 18:30:42.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.304" endtime="20201030 18:30:42.683"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.692" endtime="20201030 18:30:42.708"></status>
</kw>
<msg timestamp="20201030 18:30:42.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.690" endtime="20201030 18:30:42.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.709" endtime="20201030 18:30:42.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.712" endtime="20201030 18:30:42.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.688" endtime="20201030 18:30:42.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.686" endtime="20201030 18:30:42.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.721" endtime="20201030 18:30:43.007"></status>
</kw>
<msg timestamp="20201030 18:30:43.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.719" endtime="20201030 18:30:43.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.011" endtime="20201030 18:30:43.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.019" endtime="20201030 18:30:43.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.717" endtime="20201030 18:30:43.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.715" endtime="20201030 18:30:43.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.025" level="INFO">${RESULT} = [{'diff': 4.280600000000287e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.208399999999779e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.204199999999908e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:43.022" endtime="20201030 18:30:43.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:43.034" level="INFO">${ACCURACY} = {'diff': [4.280600000000287e-05, 4.2054999999999176e-05, 4.208399999999779e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.20...</msg>
<status status="PASS" starttime="20201030 18:30:43.026" endtime="20201030 18:30:43.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.039" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:30:43.038" endtime="20201030 18:30:43.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.044" level="INFO">VALUE: [4.280600000000287e-05, 4.2054999999999176e-05, 4.208399999999779e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.19860000000008e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.2125000000000495e-05, 4.205599999999865e-05, 4.2055000000002646e-05, 4.204199999999908e-05, 4.2068999999998746e-05, 4.205600000000212e-05, 4.204200000000255e-05, 4.19860000000008e-05, 4.208400000000126e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.205600000000212e-05, 4.2054999999999176e-05, 4.204200000000255e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.202800000000298e-05, 4.208399999999779e-05, 4.200000000000037e-05, 4.2040999999999606e-05, 4.205600000000212e-05, 4.201399999999994e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.21120000000004e-05, 4.2040999999999606e-05, 4.2054999999999176e-05, 4.2027000000000037e-05, 4.205600000000212e-05, 4.204199999999908e-05, 4.205600000000212e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.2097000000001356e-05, 4.204199999999908e-05, 4.204200000000255e-05]</msg>
<status status="PASS" starttime="20201030 18:30:43.042" endtime="20201030 18:30:43.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.035" endtime="20201030 18:30:43.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.050" endtime="20201030 18:30:43.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.048" endtime="20201030 18:30:43.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.046" endtime="20201030 18:30:43.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.684" endtime="20201030 18:30:43.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.684" endtime="20201030 18:30:43.072"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.080" endtime="20201030 18:30:43.096"></status>
</kw>
<msg timestamp="20201030 18:30:43.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.078" endtime="20201030 18:30:43.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.098" endtime="20201030 18:30:43.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.100" endtime="20201030 18:30:43.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.076" endtime="20201030 18:30:43.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.074" endtime="20201030 18:30:43.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.109" endtime="20201030 18:30:43.409"></status>
</kw>
<msg timestamp="20201030 18:30:43.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021459986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.108" endtime="20201030 18:30:43.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021459986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.414" endtime="20201030 18:30:43.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.423" endtime="20201030 18:30:43.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.105" endtime="20201030 18:30:43.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.103" endtime="20201030 18:30:43.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.431" level="INFO">${RESULT} = [{'diff': 4.277800000000026e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.204200000000255e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.200000000000037e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:43.427" endtime="20201030 18:30:43.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:43.435" level="INFO">${ACCURACY} = {'diff': [4.277800000000026e-05, 4.202799999999951e-05, 4.204200000000255e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.200000000000037e-05, 4.204200000000255e-05, 4.201399999999994e-05, 4.205...</msg>
<status status="PASS" starttime="20201030 18:30:43.432" endtime="20201030 18:30:43.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.441" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:30:43.439" endtime="20201030 18:30:43.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.445" level="INFO">VALUE: [4.277800000000026e-05, 4.202799999999951e-05, 4.204200000000255e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.200000000000037e-05, 4.204200000000255e-05, 4.201399999999994e-05, 4.205599999999865e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.201399999999994e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.2040999999999606e-05, 4.207000000000169e-05, 4.202799999999951e-05, 4.2097000000001356e-05, 4.2055000000002646e-05, 4.2054999999999176e-05, 4.2040999999999606e-05, 4.200000000000037e-05, 4.2139000000000065e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.2125000000000495e-05, 4.202799999999951e-05, 4.2041000000003076e-05, 4.2040999999999606e-05, 4.202800000000298e-05, 4.204199999999908e-05, 4.205600000000212e-05, 4.2068999999998746e-05, 4.201399999999994e-05, 4.2040999999999606e-05, 4.204200000000255e-05, 4.205599999999865e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.204200000000255e-05, 4.205599999999865e-05, 4.202799999999951e-05, 4.2041000000003076e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.207000000000169e-05]</msg>
<status status="PASS" starttime="20201030 18:30:43.443" endtime="20201030 18:30:43.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.436" endtime="20201030 18:30:43.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.451" endtime="20201030 18:30:43.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.449" endtime="20201030 18:30:43.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.448" endtime="20201030 18:30:43.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.072" endtime="20201030 18:30:43.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.072" endtime="20201030 18:30:43.472"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.482" endtime="20201030 18:30:43.501"></status>
</kw>
<msg timestamp="20201030 18:30:43.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.481" endtime="20201030 18:30:43.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.502" endtime="20201030 18:30:43.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.505" endtime="20201030 18:30:43.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.477" endtime="20201030 18:30:43.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.475" endtime="20201030 18:30:43.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.514" endtime="20201030 18:30:43.814"></status>
</kw>
<msg timestamp="20201030 18:30:43.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02487275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024915542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:43.513" endtime="20201030 18:30:43.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02487275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024915542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:43.820" endtime="20201030 18:30:43.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.829" endtime="20201030 18:30:43.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.510" endtime="20201030 18:30:43.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.508" endtime="20201030 18:30:43.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.837" level="INFO">${RESULT} = [{'diff': 4.279199999999983e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.2027000000000037e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:43.833" endtime="20201030 18:30:43.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:43.842" level="INFO">${ACCURACY} = {'diff': [4.279199999999983e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.202799999999951e-05, 4.2040999999999606e-05, 4.2027000000000037e-05, 4.2083000000001786e-05, 4.204199999999908e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:30:43.838" endtime="20201030 18:30:43.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.846" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:30:43.845" endtime="20201030 18:30:43.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.849" level="INFO">VALUE: [4.279199999999983e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.202799999999951e-05, 4.2040999999999606e-05, 4.2027000000000037e-05, 4.2083000000001786e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.2054999999999176e-05, 4.201399999999994e-05, 4.2054999999999176e-05, 4.205600000000212e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.2054999999999176e-05, 4.2082999999998316e-05, 4.200000000000037e-05, 4.2096999999997886e-05, 4.204199999999908e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.206999999999822e-05, 4.2054999999999176e-05, 4.2041000000003076e-05, 4.202799999999951e-05, 4.205600000000212e-05, 4.2027000000000037e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.2125000000000495e-05, 4.19860000000008e-05, 4.2041000000003076e-05, 4.205599999999865e-05, 4.202799999999951e-05, 4.1972999999997235e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.205599999999865e-05, 4.202800000000298e-05, 4.201399999999994e-05, 4.205600000000212e-05, 4.2027000000000037e-05, 4.204200000000255e-05, 4.2054999999999176e-05, 4.2040999999999606e-05]</msg>
<status status="PASS" starttime="20201030 18:30:43.847" endtime="20201030 18:30:43.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.843" endtime="20201030 18:30:43.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.857" endtime="20201030 18:30:43.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.854" endtime="20201030 18:30:43.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.853" endtime="20201030 18:30:43.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.473" endtime="20201030 18:30:43.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.473" endtime="20201030 18:30:43.878"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.887" endtime="20201030 18:30:43.903"></status>
</kw>
<msg timestamp="20201030 18:30:43.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.885" endtime="20201030 18:30:43.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.905" endtime="20201030 18:30:43.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.907" endtime="20201030 18:30:43.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.883" endtime="20201030 18:30:43.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.881" endtime="20201030 18:30:43.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.916" endtime="20201030 18:30:44.202"></status>
</kw>
<msg timestamp="20201030 18:30:44.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.915" endtime="20201030 18:30:44.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.208" endtime="20201030 18:30:44.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.217" endtime="20201030 18:30:44.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.912" endtime="20201030 18:30:44.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.910" endtime="20201030 18:30:44.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.223" level="INFO">${RESULT} = [{'diff': 4.275000000000112e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.2125000000000495e-05}, {'diff': 4.208400000000126e-05}, {'diff': 4.2027000000000037e-05}, {'diff': 4.2054999999999176e-05...</msg>
<status status="PASS" starttime="20201030 18:30:44.220" endtime="20201030 18:30:44.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:44.230" level="INFO">${ACCURACY} = {'diff': [4.275000000000112e-05, 4.2054999999999176e-05, 4.2125000000000495e-05, 4.208400000000126e-05, 4.2027000000000037e-05, 4.2054999999999176e-05, 4.204200000000255e-05, 4.201399999999994e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:30:44.224" endtime="20201030 18:30:44.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.235" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:30:44.234" endtime="20201030 18:30:44.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.237" level="INFO">VALUE: [4.275000000000112e-05, 4.2054999999999176e-05, 4.2125000000000495e-05, 4.208400000000126e-05, 4.2027000000000037e-05, 4.2054999999999176e-05, 4.204200000000255e-05, 4.201399999999994e-05, 4.200000000000037e-05, 4.2110999999997456e-05, 4.2054999999999176e-05, 4.2040999999999606e-05, 4.2040999999999606e-05, 4.202800000000298e-05, 4.204199999999908e-05, 4.205600000000212e-05, 4.204199999999908e-05, 4.201399999999994e-05, 4.205599999999865e-05, 4.2040999999999606e-05, 4.208400000000126e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.2111000000000925e-05, 4.205599999999865e-05, 4.204199999999908e-05, 4.2068999999998746e-05, 4.204200000000255e-05, 4.202799999999951e-05, 4.2054999999999176e-05, 4.207000000000169e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.200000000000037e-05, 4.2040999999999606e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.204199999999908e-05, 4.209800000000083e-05, 4.205599999999865e-05, 4.204199999999908e-05]</msg>
<status status="PASS" starttime="20201030 18:30:44.236" endtime="20201030 18:30:44.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.231" endtime="20201030 18:30:44.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.243" endtime="20201030 18:30:44.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.241" endtime="20201030 18:30:44.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.240" endtime="20201030 18:30:44.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.879" endtime="20201030 18:30:44.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.878" endtime="20201030 18:30:44.265"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.276" endtime="20201030 18:30:44.293"></status>
</kw>
<msg timestamp="20201030 18:30:44.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.275" endtime="20201030 18:30:44.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.294" endtime="20201030 18:30:44.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.297" endtime="20201030 18:30:44.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.271" endtime="20201030 18:30:44.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.268" endtime="20201030 18:30:44.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.306" endtime="20201030 18:30:44.593"></status>
</kw>
<msg timestamp="20201030 18:30:44.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025236014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025278806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.305" endtime="20201030 18:30:44.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025236014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025278806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.597" endtime="20201030 18:30:44.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.605" endtime="20201030 18:30:44.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.302" endtime="20201030 18:30:44.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.300" endtime="20201030 18:30:44.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.612" level="INFO">${RESULT} = [{'diff': 4.279199999999983e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.207000000000169e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:44.608" endtime="20201030 18:30:44.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:44.616" level="INFO">${ACCURACY} = {'diff': [4.279199999999983e-05, 4.204199999999908e-05, 4.2054999999999176e-05, 4.2040999999999606e-05, 4.2040999999999606e-05, 4.207000000000169e-05, 4.2040999999999606e-05, 4.2040999999999606e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:30:44.613" endtime="20201030 18:30:44.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.620" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:30:44.619" endtime="20201030 18:30:44.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.623" level="INFO">VALUE: [4.279199999999983e-05, 4.204199999999908e-05, 4.2054999999999176e-05, 4.2040999999999606e-05, 4.2040999999999606e-05, 4.207000000000169e-05, 4.2040999999999606e-05, 4.2040999999999606e-05, 4.207000000000169e-05, 4.204200000000255e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.2110999999997456e-05, 4.2097000000001356e-05, 4.2041000000003076e-05, 4.205600000000212e-05, 4.202799999999951e-05, 4.2097000000001356e-05, 4.2040999999999606e-05, 4.2040999999999606e-05, 4.2054999999999176e-05, 4.208400000000126e-05, 4.204199999999908e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.2082999999998316e-05, 4.204200000000255e-05, 4.2068999999998746e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.205600000000212e-05, 4.200000000000037e-05, 4.205600000000212e-05, 4.2027000000000037e-05, 4.2027000000000037e-05, 4.2041000000003076e-05, 4.2027000000000037e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.2041000000003076e-05, 4.204199999999908e-05, 4.2082999999998316e-05, 4.2027000000000037e-05, 4.2054999999999176e-05, 4.2040999999999606e-05, 4.2069000000002216e-05, 4.2054999999999176e-05, 4.2083000000001786e-05, 4.200000000000037e-05, 4.202799999999951e-05]</msg>
<status status="PASS" starttime="20201030 18:30:44.621" endtime="20201030 18:30:44.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.617" endtime="20201030 18:30:44.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.635" endtime="20201030 18:30:44.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.633" endtime="20201030 18:30:44.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.632" endtime="20201030 18:30:44.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.266" endtime="20201030 18:30:44.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.265" endtime="20201030 18:30:44.656"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.664" endtime="20201030 18:30:44.681"></status>
</kw>
<msg timestamp="20201030 18:30:44.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.663" endtime="20201030 18:30:44.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.683" endtime="20201030 18:30:44.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.685" endtime="20201030 18:30:44.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.660" endtime="20201030 18:30:44.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.658" endtime="20201030 18:30:44.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.694" endtime="20201030 18:30:44.980"></status>
</kw>
<msg timestamp="20201030 18:30:44.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.693" endtime="20201030 18:30:44.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.984" endtime="20201030 18:30:44.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.992" endtime="20201030 18:30:44.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.690" endtime="20201030 18:30:44.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.688" endtime="20201030 18:30:44.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.999" level="INFO">${RESULT} = [{'diff': 4.279199999999983e-05}, {'diff': 4.208400000000126e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.205600000000212e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.202799999999951e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:44.996" endtime="20201030 18:30:44.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:45.003" level="INFO">${ACCURACY} = {'diff': [4.279199999999983e-05, 4.208400000000126e-05, 4.202799999999951e-05, 4.205600000000212e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.2040999999999606e-05, 4.205600000000212e-05, 4.204...</msg>
<status status="PASS" starttime="20201030 18:30:45.000" endtime="20201030 18:30:45.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.007" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:30:45.006" endtime="20201030 18:30:45.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.010" level="INFO">VALUE: [4.279199999999983e-05, 4.208400000000126e-05, 4.202799999999951e-05, 4.205600000000212e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.2040999999999606e-05, 4.205600000000212e-05, 4.2040999999999606e-05, 4.2096999999997886e-05, 4.2110999999997456e-05, 4.2069000000002216e-05, 4.207000000000169e-05, 4.2082999999998316e-05, 4.205600000000212e-05, 4.2054999999999176e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204200000000255e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.205599999999865e-05, 4.2068999999998746e-05, 4.204199999999908e-05, 4.206999999999822e-05, 4.2027000000000037e-05, 4.204200000000255e-05, 4.202799999999951e-05, 4.2054999999999176e-05, 4.2054999999999176e-05, 4.205600000000212e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.2054999999999176e-05, 4.2054999999999176e-05, 4.2069000000002216e-05, 4.201399999999994e-05, 4.2027000000000037e-05, 4.2054999999999176e-05, 4.202799999999951e-05, 4.2041000000003076e-05, 4.200000000000037e-05, 4.201399999999994e-05, 4.200000000000037e-05, 4.204199999999908e-05, 4.2111000000000925e-05, 4.204199999999908e-05, 4.202799999999951e-05]</msg>
<status status="PASS" starttime="20201030 18:30:45.009" endtime="20201030 18:30:45.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.004" endtime="20201030 18:30:45.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.016" endtime="20201030 18:30:45.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.014" endtime="20201030 18:30:45.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.013" endtime="20201030 18:30:45.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.657" endtime="20201030 18:30:45.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.656" endtime="20201030 18:30:45.036"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.045" endtime="20201030 18:30:45.061"></status>
</kw>
<msg timestamp="20201030 18:30:45.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.044" endtime="20201030 18:30:45.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.063" endtime="20201030 18:30:45.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.065" endtime="20201030 18:30:45.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.041" endtime="20201030 18:30:45.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.039" endtime="20201030 18:30:45.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.074" endtime="20201030 18:30:45.360"></status>
</kw>
<msg timestamp="20201030 18:30:45.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021405819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.073" endtime="20201030 18:30:45.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021405819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.364" endtime="20201030 18:30:45.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.372" endtime="20201030 18:30:45.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.070" endtime="20201030 18:30:45.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.068" endtime="20201030 18:30:45.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.379" level="INFO">${RESULT} = [{'diff': 4.2804999999999926e-05}, {'diff': 4.2055000000002646e-05}, {'diff': 4.227799999999976e-05}, {'diff': 4.2097000000001356e-05}, {'diff': 4.2083000000001786e-05}, {'diff': 4.2360999999997706e-0...</msg>
<status status="PASS" starttime="20201030 18:30:45.376" endtime="20201030 18:30:45.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:45.384" level="INFO">${ACCURACY} = {'diff': [4.2804999999999926e-05, 4.2055000000002646e-05, 4.227799999999976e-05, 4.2097000000001356e-05, 4.2083000000001786e-05, 4.2360999999997706e-05, 4.229199999999933e-05, 4.200000000000037e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:30:45.380" endtime="20201030 18:30:45.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.388" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:30:45.387" endtime="20201030 18:30:45.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.391" level="INFO">VALUE: [4.2804999999999926e-05, 4.2055000000002646e-05, 4.227799999999976e-05, 4.2097000000001356e-05, 4.2083000000001786e-05, 4.2360999999997706e-05, 4.229199999999933e-05, 4.200000000000037e-05, 4.204199999999908e-05, 4.2277000000000287e-05, 4.2054999999999176e-05, 4.250000000000087e-05, 4.2125000000000495e-05, 4.209800000000083e-05, 4.247199999999826e-05, 4.2332999999998566e-05, 4.205599999999865e-05, 4.2041000000003076e-05, 4.205600000000212e-05, 4.2068999999998746e-05, 4.2054999999999176e-05, 4.201399999999994e-05, 4.215200000000016e-05, 4.202800000000298e-05, 4.225000000000062e-05, 4.233399999999804e-05, 4.197200000000123e-05, 4.227799999999976e-05, 4.216599999999973e-05, 4.201399999999994e-05, 4.2277000000000287e-05, 4.2361000000001175e-05, 4.225000000000062e-05, 4.252800000000001e-05, 4.205600000000212e-05, 4.2111000000000925e-05, 4.205599999999865e-05, 4.207000000000169e-05, 4.200000000000037e-05, 4.229199999999933e-05, 4.205599999999865e-05, 4.2375000000000745e-05, 4.234800000000108e-05, 4.19860000000008e-05, 4.2223000000000954e-05, 4.2040999999999606e-05, 4.2069000000002216e-05, 4.205599999999865e-05, 4.247200000000173e-05, 4.19860000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:30:45.389" endtime="20201030 18:30:45.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.385" endtime="20201030 18:30:45.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.396" endtime="20201030 18:30:45.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.394" endtime="20201030 18:30:45.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.393" endtime="20201030 18:30:45.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.037" endtime="20201030 18:30:45.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.037" endtime="20201030 18:30:45.416"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.425" endtime="20201030 18:30:45.441"></status>
</kw>
<msg timestamp="20201030 18:30:45.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.423" endtime="20201030 18:30:45.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.443" endtime="20201030 18:30:45.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.445" endtime="20201030 18:30:45.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.421" endtime="20201030 18:30:45.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.419" endtime="20201030 18:30:45.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.454" endtime="20201030 18:30:45.741"></status>
</kw>
<msg timestamp="20201030 18:30:45.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.453" endtime="20201030 18:30:45.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.745" endtime="20201030 18:30:45.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.753" endtime="20201030 18:30:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.450" endtime="20201030 18:30:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.448" endtime="20201030 18:30:45.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.760" level="INFO">${RESULT} = [{'diff': 4.327800000000076e-05}, {'diff': 4.298599999999833e-05}, {'diff': 4.3167000000000205e-05}, {'diff': 4.2695000000002314e-05}, {'diff': 4.34860000000023e-05}, {'diff': 4.341600000000098e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:45.757" endtime="20201030 18:30:45.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:45.764" level="INFO">${ACCURACY} = {'diff': [4.327800000000076e-05, 4.298599999999833e-05, 4.3167000000000205e-05, 4.2695000000002314e-05, 4.34860000000023e-05, 4.341600000000098e-05, 4.2902999999996916e-05, 4.3082999999999316e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:30:45.761" endtime="20201030 18:30:45.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.768" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:30:45.767" endtime="20201030 18:30:45.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.771" level="INFO">VALUE: [4.327800000000076e-05, 4.298599999999833e-05, 4.3167000000000205e-05, 4.2695000000002314e-05, 4.34860000000023e-05, 4.341600000000098e-05, 4.2902999999996916e-05, 4.3082999999999316e-05, 4.298599999999833e-05, 4.2597000000001856e-05, 4.2959000000002134e-05, 4.3555000000000677e-05, 4.3167000000000205e-05, 4.3305000000000426e-05, 4.3153000000000635e-05, 4.309800000000183e-05, 4.2722999999997985e-05, 4.2818999999999496e-05, 4.2791000000000357e-05, 4.3360999999998706e-05, 4.279199999999983e-05, 4.315200000000116e-05, 4.322200000000248e-05, 4.274999999999765e-05, 4.2625000000000995e-05, 4.3291000000000857e-05, 4.304200000000008e-05, 4.279199999999983e-05, 4.323600000000205e-05, 4.3417000000000455e-05, 4.3208999999998915e-05, 4.294400000000309e-05, 4.329200000000033e-05, 4.3083000000002786e-05, 4.297200000000223e-05, 4.277700000000079e-05, 4.2916999999999955e-05, 4.2861000000001676e-05, 4.3458999999999165e-05, 4.3541000000001107e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.293000000000005e-05, 4.3180999999999775e-05, 4.2973000000001704e-05, 4.351399999999797e-05, 4.2874999999997776e-05, 4.3110999999998456e-05, 4.327799999999729e-05, 4.2804999999999926e-05]</msg>
<status status="PASS" starttime="20201030 18:30:45.769" endtime="20201030 18:30:45.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.765" endtime="20201030 18:30:45.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.776" endtime="20201030 18:30:45.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.774" endtime="20201030 18:30:45.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.773" endtime="20201030 18:30:45.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.417" endtime="20201030 18:30:45.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.417" endtime="20201030 18:30:45.796"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.805" endtime="20201030 18:30:45.825"></status>
</kw>
<msg timestamp="20201030 18:30:45.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.803" endtime="20201030 18:30:45.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.828" endtime="20201030 18:30:45.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.834" endtime="20201030 18:30:45.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.801" endtime="20201030 18:30:45.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.799" endtime="20201030 18:30:45.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.852" endtime="20201030 18:30:46.146"></status>
</kw>
<msg timestamp="20201030 18:30:46.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:45.849" endtime="20201030 18:30:46.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:46.150" endtime="20201030 18:30:46.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.158" endtime="20201030 18:30:46.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.844" endtime="20201030 18:30:46.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.840" endtime="20201030 18:30:46.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.165" level="INFO">${RESULT} = [{'diff': 4.452800000000201e-05}, {'diff': 4.3653000000001135e-05}, {'diff': 4.43060000000009e-05}, {'diff': 4.38060000000004e-05}, {'diff': 4.405600000000065e-05}, {'diff': 4.4166999999997736e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:46.161" endtime="20201030 18:30:46.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:46.169" level="INFO">${ACCURACY} = {'diff': [4.452800000000201e-05, 4.3653000000001135e-05, 4.43060000000009e-05, 4.38060000000004e-05, 4.405600000000065e-05, 4.4166999999997736e-05, 4.3666999999997236e-05, 4.3737000000002024e-05, 4.37...</msg>
<status status="PASS" starttime="20201030 18:30:46.166" endtime="20201030 18:30:46.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.173" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:30:46.172" endtime="20201030 18:30:46.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.176" level="INFO">VALUE: [4.452800000000201e-05, 4.3653000000001135e-05, 4.43060000000009e-05, 4.38060000000004e-05, 4.405600000000065e-05, 4.4166999999997736e-05, 4.3666999999997236e-05, 4.3737000000002024e-05, 4.376399999999822e-05, 4.452799999999854e-05, 4.4360999999999706e-05, 4.422200000000001e-05, 4.398599999999933e-05, 4.3722999999998985e-05, 4.450000000000287e-05, 4.445800000000069e-05, 4.4152999999998166e-05, 4.422200000000001e-05, 4.379200000000083e-05, 4.3569000000000246e-05, 4.397199999999976e-05, 4.391600000000148e-05, 4.405600000000065e-05, 4.4347000000000136e-05, 4.448599999999983e-05, 4.402799999999804e-05, 4.434799999999961e-05, 4.44999999999994e-05, 4.402800000000151e-05, 4.3846999999999636e-05, 4.404200000000108e-05, 4.4096999999999886e-05, 4.3596999999999386e-05, 4.3610999999998956e-05, 4.4139000000002065e-05, 4.383399999999954e-05, 4.4403000000001885e-05, 4.455599999999768e-05, 4.3653000000001135e-05, 4.3903000000001385e-05, 4.447200000000026e-05, 4.43060000000009e-05, 4.377700000000179e-05, 4.451399999999897e-05, 4.3861000000002676e-05, 4.4180999999997306e-05, 4.404200000000108e-05, 4.452799999999854e-05, 4.379099999999789e-05, 4.3875000000002246e-05]</msg>
<status status="PASS" starttime="20201030 18:30:46.174" endtime="20201030 18:30:46.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.170" endtime="20201030 18:30:46.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.181" endtime="20201030 18:30:46.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.180" endtime="20201030 18:30:46.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.179" endtime="20201030 18:30:46.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.797" endtime="20201030 18:30:46.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.797" endtime="20201030 18:30:46.202"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.211" endtime="20201030 18:30:46.227"></status>
</kw>
<msg timestamp="20201030 18:30:46.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.209" endtime="20201030 18:30:46.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.229" endtime="20201030 18:30:46.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.231" endtime="20201030 18:30:46.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.207" endtime="20201030 18:30:46.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.205" endtime="20201030 18:30:46.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.240" endtime="20201030 18:30:46.526"></status>
</kw>
<msg timestamp="20201030 18:30:46.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021715319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.239" endtime="20201030 18:30:46.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021715319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.530" endtime="20201030 18:30:46.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.538" endtime="20201030 18:30:46.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.236" endtime="20201030 18:30:46.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.235" endtime="20201030 18:30:46.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.545" level="INFO">${RESULT} = [{'diff': 4.60000000000009e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.479100000000236e-05}, {'diff': 4.4902999999998916e-05}, {'diff': 4.459799999999986e-05}, {'diff': 4.554199999999911e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:46.542" endtime="20201030 18:30:46.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:46.550" level="INFO">${ACCURACY} = {'diff': [4.60000000000009e-05, 4.4874999999999776e-05, 4.479100000000236e-05, 4.4902999999998916e-05, 4.459799999999986e-05, 4.554199999999911e-05, 4.5444999999998126e-05, 4.522200000000101e-05, 4.54...</msg>
<status status="PASS" starttime="20201030 18:30:46.546" endtime="20201030 18:30:46.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.554" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:30:46.553" endtime="20201030 18:30:46.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.557" level="INFO">VALUE: [4.60000000000009e-05, 4.4874999999999776e-05, 4.479100000000236e-05, 4.4902999999998916e-05, 4.459799999999986e-05, 4.554199999999911e-05, 4.5444999999998126e-05, 4.522200000000101e-05, 4.5445000000001595e-05, 4.526300000000025e-05, 4.527800000000276e-05, 4.525000000000015e-05, 4.497200000000076e-05, 4.5152999999999166e-05, 4.5223000000000485e-05, 4.488799999999987e-05, 4.4916999999998486e-05, 4.484800000000011e-05, 4.484699999999717e-05, 4.51800000000023e-05, 4.5402999999999416e-05, 4.527699999999982e-05, 4.552700000000007e-05, 4.531899999999853e-05, 4.4597000000000386e-05, 4.5097000000000886e-05, 4.5138999999999596e-05, 4.5097000000000886e-05, 4.4931000000001525e-05, 4.547200000000126e-05, 4.479200000000183e-05, 4.5459000000001165e-05, 4.4666999999998236e-05, 4.4695000000000845e-05, 4.4819000000001497e-05, 4.473600000000008e-05, 4.497199999999729e-05, 4.4709000000000415e-05, 4.4708999999996946e-05, 4.522200000000101e-05, 4.508400000000079e-05, 4.520799999999797e-05, 4.522200000000101e-05, 4.481899999999803e-05, 4.4888999999999346e-05, 4.522199999999754e-05, 4.4610999999999956e-05, 4.4610999999999956e-05, 4.554200000000258e-05, 4.538800000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:30:46.556" endtime="20201030 18:30:46.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.551" endtime="20201030 18:30:46.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.562" endtime="20201030 18:30:46.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.560" endtime="20201030 18:30:46.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.559" endtime="20201030 18:30:46.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.203" endtime="20201030 18:30:46.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.203" endtime="20201030 18:30:46.583"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.591" endtime="20201030 18:30:46.608"></status>
</kw>
<msg timestamp="20201030 18:30:46.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.590" endtime="20201030 18:30:46.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.609" endtime="20201030 18:30:46.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.612" endtime="20201030 18:30:46.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.587" endtime="20201030 18:30:46.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.585" endtime="20201030 18:30:46.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.621" endtime="20201030 18:30:46.907"></status>
</kw>
<msg timestamp="20201030 18:30:46.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:46.619" endtime="20201030 18:30:46.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:46.911" endtime="20201030 18:30:46.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.919" endtime="20201030 18:30:46.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.617" endtime="20201030 18:30:46.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.615" endtime="20201030 18:30:46.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.926" level="INFO">${RESULT} = [{'diff': 4.704200000000061e-05}, {'diff': 4.652800000000054e-05}, {'diff': 4.640200000000094e-05}, {'diff': 4.583400000000154e-05}, {'diff': 4.640299999999695e-05}, {'diff': 4.647199999999879e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:46.923" endtime="20201030 18:30:46.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:46.930" level="INFO">${ACCURACY} = {'diff': [4.704200000000061e-05, 4.652800000000054e-05, 4.640200000000094e-05, 4.583400000000154e-05, 4.640299999999695e-05, 4.647199999999879e-05, 4.572200000000151e-05, 4.615200000000069e-05, 4.6193...</msg>
<status status="PASS" starttime="20201030 18:30:46.927" endtime="20201030 18:30:46.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.934" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:30:46.933" endtime="20201030 18:30:46.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.937" level="INFO">VALUE: [4.704200000000061e-05, 4.652800000000054e-05, 4.640200000000094e-05, 4.583400000000154e-05, 4.640299999999695e-05, 4.647199999999879e-05, 4.572200000000151e-05, 4.615200000000069e-05, 4.61939999999994e-05, 4.584800000000111e-05, 4.65130000000015e-05, 4.570799999999847e-05, 4.5902999999999916e-05, 4.597199999999829e-05, 4.6472999999998266e-05, 4.613800000000112e-05, 4.629199999999986e-05, 4.6139000000000596e-05, 4.652800000000054e-05, 4.5709000000001415e-05, 4.634699999999867e-05, 4.63329999999991e-05, 4.5583000000001817e-05, 4.5917000000002955e-05, 4.5680999999998806e-05, 4.627799999999682e-05, 4.5666999999999236e-05, 4.648600000000183e-05, 4.6403000000000416e-05, 4.636099999999824e-05, 4.5902999999999916e-05, 4.6153000000000166e-05, 4.6139000000000596e-05, 4.584699999999817e-05, 4.6097000000001886e-05, 4.63329999999991e-05, 4.577799999999979e-05, 4.640199999999747e-05, 4.6444999999999126e-05, 4.636199999999771e-05, 4.649999999999793e-05, 4.579199999999936e-05, 4.583400000000154e-05, 4.5902999999999916e-05, 4.623600000000158e-05, 4.569400000000237e-05, 4.598600000000133e-05, 4.5625000000000526e-05, 4.647199999999879e-05, 4.561099999999749e-05]</msg>
<status status="PASS" starttime="20201030 18:30:46.935" endtime="20201030 18:30:46.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.931" endtime="20201030 18:30:46.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.941" endtime="20201030 18:30:46.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.940" endtime="20201030 18:30:46.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.939" endtime="20201030 18:30:46.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.584" endtime="20201030 18:30:46.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.583" endtime="20201030 18:30:46.962"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.971" endtime="20201030 18:30:46.988"></status>
</kw>
<msg timestamp="20201030 18:30:46.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.969" endtime="20201030 18:30:46.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.990" endtime="20201030 18:30:46.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.992" endtime="20201030 18:30:46.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.967" endtime="20201030 18:30:46.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.965" endtime="20201030 18:30:46.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.001" endtime="20201030 18:30:47.287"></status>
</kw>
<msg timestamp="20201030 18:30:47.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.999" endtime="20201030 18:30:47.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.291" endtime="20201030 18:30:47.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.299" endtime="20201030 18:30:47.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.997" endtime="20201030 18:30:47.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.995" endtime="20201030 18:30:47.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.306" level="INFO">${RESULT} = [{'diff': 4.7972999999999766e-05}, {'diff': 4.659799999999839e-05}, {'diff': 4.704200000000061e-05}, {'diff': 4.740200000000194e-05}, {'diff': 4.727800000000129e-05}, {'diff': 4.704100000000114e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:47.303" endtime="20201030 18:30:47.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:47.310" level="INFO">${ACCURACY} = {'diff': [4.7972999999999766e-05, 4.659799999999839e-05, 4.704200000000061e-05, 4.740200000000194e-05, 4.727800000000129e-05, 4.704100000000114e-05, 4.745800000000022e-05, 4.723599999999911e-05, 4.697...</msg>
<status status="PASS" starttime="20201030 18:30:47.307" endtime="20201030 18:30:47.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.314" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:30:47.313" endtime="20201030 18:30:47.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.317" level="INFO">VALUE: [4.7972999999999766e-05, 4.659799999999839e-05, 4.704200000000061e-05, 4.740200000000194e-05, 4.727800000000129e-05, 4.704100000000114e-05, 4.745800000000022e-05, 4.723599999999911e-05, 4.697199999999929e-05, 4.673599999999861e-05, 4.6611000000001956e-05, 4.672199999999904e-05, 4.709799999999889e-05, 4.658299999999935e-05, 4.695799999999972e-05, 4.6639000000001096e-05, 4.71529999999977e-05, 4.658299999999935e-05, 4.708399999999932e-05, 4.670799999999947e-05, 4.708299999999985e-05, 4.68329999999996e-05, 4.726400000000172e-05, 4.708299999999985e-05, 4.658299999999935e-05, 4.7403000000001416e-05, 4.747199999999979e-05, 4.708299999999985e-05, 4.726399999999825e-05, 4.701400000000147e-05, 4.6639000000001096e-05, 4.655599999999968e-05, 4.719399999999693e-05, 4.674999999999818e-05, 4.709799999999889e-05, 4.663899999999763e-05, 4.676400000000122e-05, 4.745799999999675e-05, 4.755500000000121e-05, 4.6889000000001346e-05, 4.712499999999856e-05, 4.6708999999998946e-05, 4.713899999999813e-05, 4.6847000000002637e-05, 4.7167000000000736e-05, 4.748599999999936e-05, 4.741699999999752e-05, 4.7472999999999266e-05, 4.70269999999981e-05, 4.6903000000000916e-05]</msg>
<status status="PASS" starttime="20201030 18:30:47.315" endtime="20201030 18:30:47.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.311" endtime="20201030 18:30:47.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.323" endtime="20201030 18:30:47.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.321" endtime="20201030 18:30:47.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.320" endtime="20201030 18:30:47.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.963" endtime="20201030 18:30:47.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.963" endtime="20201030 18:30:47.347"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.366" endtime="20201030 18:30:47.387"></status>
</kw>
<msg timestamp="20201030 18:30:47.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.362" endtime="20201030 18:30:47.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.391" endtime="20201030 18:30:47.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.396" endtime="20201030 18:30:47.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.357" endtime="20201030 18:30:47.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.352" endtime="20201030 18:30:47.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.415" endtime="20201030 18:30:47.704"></status>
</kw>
<msg timestamp="20201030 18:30:47.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036805764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036853958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.411" endtime="20201030 18:30:47.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036805764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036853958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.708" endtime="20201030 18:30:47.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.718" endtime="20201030 18:30:47.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.406" endtime="20201030 18:30:47.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.402" endtime="20201030 18:30:47.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.726" level="INFO">${RESULT} = [{'diff': 4.81940000000014e-05}, {'diff': 4.808399999999685e-05}, {'diff': 4.85269999999996e-05}, {'diff': 4.776399999999875e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.849999999999993e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:47.722" endtime="20201030 18:30:47.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:47.736" level="INFO">${ACCURACY} = {'diff': [4.81940000000014e-05, 4.808399999999685e-05, 4.85269999999996e-05, 4.776399999999875e-05, 4.85139999999995e-05, 4.849999999999993e-05, 4.786099999999627e-05, 4.805599999999771e-05, 4.7667000...</msg>
<status status="PASS" starttime="20201030 18:30:47.727" endtime="20201030 18:30:47.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.740" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:30:47.739" endtime="20201030 18:30:47.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.743" level="INFO">VALUE: [4.81940000000014e-05, 4.808399999999685e-05, 4.85269999999996e-05, 4.776399999999875e-05, 4.85139999999995e-05, 4.849999999999993e-05, 4.786099999999627e-05, 4.805599999999771e-05, 4.7667000000001236e-05, 4.774999999999918e-05, 4.844400000000165e-05, 4.781999999999703e-05, 4.8111000000003457e-05, 4.843000000000208e-05, 4.783300000000407e-05, 4.85139999999995e-05, 4.831899999999806e-05, 4.783299999999713e-05, 4.827799999999882e-05, 4.755500000000468e-05, 4.844400000000165e-05, 4.8153000000002166e-05, 4.85139999999995e-05, 4.791600000000201e-05, 4.7639000000002096e-05, 4.826399999999925e-05, 4.797200000000029e-05, 4.777799999999832e-05, 4.774999999999918e-05, 4.783400000000354e-05, 4.755500000000468e-05, 4.822200000000054e-05, 4.808299999999738e-05, 4.7597000000003387e-05, 4.7665999999994824e-05, 4.8429999999995144e-05, 4.7931000000001056e-05, 4.849999999999993e-05, 4.808299999999738e-05, 4.777799999999832e-05, 4.8125000000003026e-05, 4.8401999999996004e-05, 4.826399999999925e-05, 4.8013999999999e-05, 4.755599999999721e-05, 4.8209000000000446e-05, 4.7667000000001236e-05, 4.784700000000364e-05, 4.827799999999882e-05, 4.8375000000003276e-05]</msg>
<status status="PASS" starttime="20201030 18:30:47.741" endtime="20201030 18:30:47.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.737" endtime="20201030 18:30:47.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.748" endtime="20201030 18:30:47.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.746" endtime="20201030 18:30:47.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.745" endtime="20201030 18:30:47.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.349" endtime="20201030 18:30:47.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.347" endtime="20201030 18:30:47.768"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.780" endtime="20201030 18:30:47.796"></status>
</kw>
<msg timestamp="20201030 18:30:47.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.777" endtime="20201030 18:30:47.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.798" endtime="20201030 18:30:47.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.800" endtime="20201030 18:30:47.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.775" endtime="20201030 18:30:47.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.772" endtime="20201030 18:30:47.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.809" endtime="20201030 18:30:48.095"></status>
</kw>
<msg timestamp="20201030 18:30:48.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.808" endtime="20201030 18:30:48.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.099" endtime="20201030 18:30:48.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.107" endtime="20201030 18:30:48.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.805" endtime="20201030 18:30:48.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.803" endtime="20201030 18:30:48.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.114" level="INFO">${RESULT} = [{'diff': 4.995899999999873e-05}, {'diff': 4.95140000000005e-05}, {'diff': 4.895800000000172e-05}, {'diff': 4.900000000000043e-05}, {'diff': 4.884800000000064e-05}, {'diff': 4.931999999999853e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:48.111" endtime="20201030 18:30:48.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:48.118" level="INFO">${ACCURACY} = {'diff': [4.995899999999873e-05, 4.95140000000005e-05, 4.895800000000172e-05, 4.900000000000043e-05, 4.884800000000064e-05, 4.931999999999853e-05, 4.890199999999997e-05, 4.859700000000092e-05, 4.91390...</msg>
<status status="PASS" starttime="20201030 18:30:48.115" endtime="20201030 18:30:48.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.123" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:30:48.122" endtime="20201030 18:30:48.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.125" level="INFO">VALUE: [4.995899999999873e-05, 4.95140000000005e-05, 4.895800000000172e-05, 4.900000000000043e-05, 4.884800000000064e-05, 4.931999999999853e-05, 4.890199999999997e-05, 4.859700000000092e-05, 4.913900000000013e-05, 4.877799999999932e-05, 4.909700000000142e-05, 4.894499999999816e-05, 4.890299999999945e-05, 4.924999999999721e-05, 4.888899999999988e-05, 4.8709000000000946e-05, 4.93330000000021e-05, 4.920800000000197e-05, 4.9320000000002e-05, 4.927700000000035e-05, 4.886100000000074e-05, 4.8723000000000516e-05, 4.942999999999961e-05, 4.908299999999838e-05, 4.93339999999981e-05, 4.8707999999998e-05, 4.91529999999997e-05, 4.954199999999964e-05, 4.908300000000185e-05, 4.891699999999902e-05, 4.927700000000035e-05, 4.922200000000154e-05, 4.859800000000039e-05, 4.933400000000157e-05, 4.916599999999979e-05, 4.887500000000031e-05, 4.862500000000006e-05, 4.945799999999875e-05, 4.870800000000147e-05, 4.93469999999982e-05, 4.865199999999972e-05, 4.858300000000135e-05, 4.944499999999866e-05, 4.945799999999875e-05, 4.938900000000038e-05, 4.905499999999924e-05, 4.858299999999788e-05, 4.93469999999982e-05, 4.877699999999985e-05, 4.905600000000218e-05]</msg>
<status status="PASS" starttime="20201030 18:30:48.124" endtime="20201030 18:30:48.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.119" endtime="20201030 18:30:48.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.130" endtime="20201030 18:30:48.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.128" endtime="20201030 18:30:48.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.127" endtime="20201030 18:30:48.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.770" endtime="20201030 18:30:48.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.769" endtime="20201030 18:30:48.154"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.172" endtime="20201030 18:30:48.197"></status>
</kw>
<msg timestamp="20201030 18:30:48.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.169" endtime="20201030 18:30:48.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.200" endtime="20201030 18:30:48.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.206" endtime="20201030 18:30:48.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.163" endtime="20201030 18:30:48.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.159" endtime="20201030 18:30:48.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.224" endtime="20201030 18:30:48.516"></status>
</kw>
<msg timestamp="20201030 18:30:48.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037135681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037186542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.221" endtime="20201030 18:30:48.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037135681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037186542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.520" endtime="20201030 18:30:48.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.528" endtime="20201030 18:30:48.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.216" endtime="20201030 18:30:48.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.212" endtime="20201030 18:30:48.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.535" level="INFO">${RESULT} = [{'diff': 5.086100000000621e-05}, {'diff': 4.965299999999673e-05}, {'diff': 4.981999999999903e-05}, {'diff': 4.9889000000004347e-05}, {'diff': 4.998600000000186e-05}, {'diff': 5.020800000000297e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:48.532" endtime="20201030 18:30:48.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:48.539" level="INFO">${ACCURACY} = {'diff': [5.086100000000621e-05, 4.965299999999673e-05, 4.981999999999903e-05, 4.9889000000004347e-05, 4.998600000000186e-05, 5.020800000000297e-05, 5.0221999999995603e-05, 4.968000000000333e-05, 4.99...</msg>
<status status="PASS" starttime="20201030 18:30:48.536" endtime="20201030 18:30:48.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.543" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:30:48.542" endtime="20201030 18:30:48.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.546" level="INFO">VALUE: [5.086100000000621e-05, 4.965299999999673e-05, 4.981999999999903e-05, 4.9889000000004347e-05, 4.998600000000186e-05, 5.020800000000297e-05, 5.0221999999995603e-05, 4.968000000000333e-05, 4.990299999999698e-05, 4.9943999999996214e-05, 5.0195000000002876e-05, 4.956899999999931e-05, 5.013899999999766e-05, 4.975000000000118e-05, 5.013899999999766e-05, 4.9707999999995534e-05, 5.05140000000015e-05, 4.975000000000118e-05, 5.000000000000143e-05, 5.0223000000002016e-05, 4.995800000000272e-05, 5.0193999999996464e-05, 5.031900000000006e-05, 4.955499999999974e-05, 4.980599999999946e-05, 4.970800000000247e-05, 5.0014000000001e-05, 4.957000000000572e-05, 4.9625000000004527e-05, 5.002800000000057e-05, 5.0415999999997574e-05, 4.959699999999845e-05, 5.011099999999852e-05, 4.9903000000003916e-05, 5.026400000000125e-05, 4.948600000000136e-05, 4.9943999999996214e-05, 5.031900000000006e-05, 4.988899999999741e-05, 5.045899999999576e-05, 4.970899999999501e-05, 5.0014000000001e-05, 5.044400000000365e-05, 5.031999999999953e-05, 5.001300000000153e-05, 5.033299999999963e-05, 5.056999999999978e-05, 5.000000000000143e-05, 4.961099999999802e-05, 5.006999999999928e-05]</msg>
<status status="PASS" starttime="20201030 18:30:48.545" endtime="20201030 18:30:48.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.540" endtime="20201030 18:30:48.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.552" endtime="20201030 18:30:48.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.550" endtime="20201030 18:30:48.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.549" endtime="20201030 18:30:48.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.156" endtime="20201030 18:30:48.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.155" endtime="20201030 18:30:48.573"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.581" endtime="20201030 18:30:48.598"></status>
</kw>
<msg timestamp="20201030 18:30:48.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.580" endtime="20201030 18:30:48.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.599" endtime="20201030 18:30:48.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.602" endtime="20201030 18:30:48.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.577" endtime="20201030 18:30:48.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.575" endtime="20201030 18:30:48.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.611" endtime="20201030 18:30:48.898"></status>
</kw>
<msg timestamp="20201030 18:30:48.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.609" endtime="20201030 18:30:48.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.902" endtime="20201030 18:30:48.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.910" endtime="20201030 18:30:48.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.607" endtime="20201030 18:30:48.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.605" endtime="20201030 18:30:48.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.917" level="INFO">${RESULT} = [{'diff': 5.168000000000186e-05}, {'diff': 5.131999999999706e-05}, {'diff': 5.091700000000102e-05}, {'diff': 5.058299999999988e-05}, {'diff': 5.080500000000099e-05}, {'diff': 5.055600000000021e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:48.914" endtime="20201030 18:30:48.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:48.922" level="INFO">${ACCURACY} = {'diff': [5.168000000000186e-05, 5.131999999999706e-05, 5.091700000000102e-05, 5.058299999999988e-05, 5.080500000000099e-05, 5.055600000000021e-05, 5.14729999999998e-05, 5.155499999999827e-05, 5.15139...</msg>
<status status="PASS" starttime="20201030 18:30:48.918" endtime="20201030 18:30:48.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.926" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:30:48.925" endtime="20201030 18:30:48.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.928" level="INFO">VALUE: [5.168000000000186e-05, 5.131999999999706e-05, 5.091700000000102e-05, 5.058299999999988e-05, 5.080500000000099e-05, 5.055600000000021e-05, 5.14729999999998e-05, 5.155499999999827e-05, 5.151399999999903e-05, 5.095899999999973e-05, 5.088899999999841e-05, 5.145800000000075e-05, 5.097199999999982e-05, 5.1415999999998574e-05, 5.1137999999999184e-05, 5.091699999999755e-05, 5.105499999999777e-05, 5.124999999999921e-05, 5.151299999999956e-05, 5.12080000000005e-05, 5.130499999999802e-05, 5.1165999999998324e-05, 5.059699999999945e-05, 5.106900000000081e-05, 5.126400000000225e-05, 5.082000000000003e-05, 5.105600000000071e-05, 5.10279999999981e-05, 5.119500000000041e-05, 5.062499999999859e-05, 5.12080000000005e-05, 5.100000000000243e-05, 5.099999999999896e-05, 5.074999999999871e-05, 5.099999999999896e-05, 5.087500000000231e-05, 5.129200000000139e-05, 5.12080000000005e-05, 5.069499999999991e-05, 5.0651999999998254e-05, 5.1014000000002e-05, 5.081900000000056e-05, 5.151399999999903e-05, 5.0973000000002766e-05, 5.058299999999988e-05, 5.151399999999903e-05, 5.108300000000038e-05, 5.126400000000225e-05, 5.081900000000056e-05, 5.127799999999835e-05]</msg>
<status status="PASS" starttime="20201030 18:30:48.927" endtime="20201030 18:30:48.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.923" endtime="20201030 18:30:48.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.933" endtime="20201030 18:30:48.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.932" endtime="20201030 18:30:48.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.931" endtime="20201030 18:30:48.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.573" endtime="20201030 18:30:48.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.573" endtime="20201030 18:30:48.955"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.973" endtime="20201030 18:30:48.992"></status>
</kw>
<msg timestamp="20201030 18:30:48.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.970" endtime="20201030 18:30:48.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.995" endtime="20201030 18:30:48.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.000" endtime="20201030 18:30:49.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.965" endtime="20201030 18:30:49.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.960" endtime="20201030 18:30:49.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.019" endtime="20201030 18:30:49.312"></status>
</kw>
<msg timestamp="20201030 18:30:49.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033129931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033182306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.016" endtime="20201030 18:30:49.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033129931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033182306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.316" endtime="20201030 18:30:49.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.324" endtime="20201030 18:30:49.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.011" endtime="20201030 18:30:49.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.007" endtime="20201030 18:30:49.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.331" level="INFO">${RESULT} = [{'diff': 5.237500000000034e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.1667000000005237e-05}, {'diff': 5.1721999999997104e-05}, {'diff': 5.205600000000171e-05}, {'diff': 5.191600000000601e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:49.328" endtime="20201030 18:30:49.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:49.335" level="INFO">${ACCURACY} = {'diff': [5.237500000000034e-05, 5.237500000000034e-05, 5.1667000000005237e-05, 5.1721999999997104e-05, 5.205600000000171e-05, 5.191600000000601e-05, 5.2193999999998464e-05, 5.250000000000393e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 18:30:49.332" endtime="20201030 18:30:49.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.340" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:30:49.339" endtime="20201030 18:30:49.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.342" level="INFO">VALUE: [5.237500000000034e-05, 5.237500000000034e-05, 5.1667000000005237e-05, 5.1721999999997104e-05, 5.205600000000171e-05, 5.191600000000601e-05, 5.2193999999998464e-05, 5.250000000000393e-05, 5.158300000000088e-05, 5.223600000000411e-05, 5.162499999999959e-05, 5.213899999999966e-05, 5.233300000000163e-05, 5.1901999999999504e-05, 5.188899999999941e-05, 5.2263999999996313e-05, 5.1957999999997784e-05, 5.238899999999991e-05, 5.252800000000307e-05, 5.225000000000368e-05, 5.177799999999538e-05, 5.194499999999769e-05, 5.179200000000189e-05, 5.227799999999588e-05, 5.212500000000009e-05, 5.163899999999916e-05, 5.206900000000181e-05, 5.2207999999998034e-05, 5.237500000000034e-05, 5.213899999999966e-05, 5.213899999999966e-05, 5.204200000000214e-05, 5.237500000000034e-05, 5.201300000000353e-05, 5.1943999999998214e-05, 5.213899999999966e-05, 5.219499999999794e-05, 5.251300000000403e-05, 5.2179999999998894e-05, 5.208300000000138e-05, 5.212500000000009e-05, 5.186100000000027e-05, 5.238899999999991e-05, 5.2207999999998034e-05, 5.202799999999563e-05, 5.215299999999923e-05, 5.172200000000404e-05, 5.2499999999996994e-05, 5.176300000000328e-05, 5.18340000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:30:49.341" endtime="20201030 18:30:49.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.336" endtime="20201030 18:30:49.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.347" endtime="20201030 18:30:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.346" endtime="20201030 18:30:49.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.344" endtime="20201030 18:30:49.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.957" endtime="20201030 18:30:49.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.956" endtime="20201030 18:30:49.368"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.376" endtime="20201030 18:30:49.394"></status>
</kw>
<msg timestamp="20201030 18:30:49.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.375" endtime="20201030 18:30:49.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.396" endtime="20201030 18:30:49.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.399" endtime="20201030 18:30:49.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.372" endtime="20201030 18:30:49.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.370" endtime="20201030 18:30:49.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.408" endtime="20201030 18:30:49.694"></status>
</kw>
<msg timestamp="20201030 18:30:49.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.407" endtime="20201030 18:30:49.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.698" endtime="20201030 18:30:49.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.706" endtime="20201030 18:30:49.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.404" endtime="20201030 18:30:49.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.402" endtime="20201030 18:30:49.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.713" level="INFO">${RESULT} = [{'diff': 5.332000000000253e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.254100000000317e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.2680000000002863e-05}, {'diff': 5.306899999999934e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:49.710" endtime="20201030 18:30:49.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:49.717" level="INFO">${ACCURACY} = {'diff': [5.332000000000253e-05, 5.251400000000003e-05, 5.254100000000317e-05, 5.312500000000109e-05, 5.2680000000002863e-05, 5.306899999999934e-05, 5.331999999999906e-05, 5.319499999999894e-05, 5.283...</msg>
<status status="PASS" starttime="20201030 18:30:49.714" endtime="20201030 18:30:49.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.721" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:30:49.720" endtime="20201030 18:30:49.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.724" level="INFO">VALUE: [5.332000000000253e-05, 5.251400000000003e-05, 5.254100000000317e-05, 5.312500000000109e-05, 5.2680000000002863e-05, 5.306899999999934e-05, 5.331999999999906e-05, 5.319499999999894e-05, 5.283299999999866e-05, 5.309699999999848e-05, 5.319499999999894e-05, 5.2652000000000254e-05, 5.338899999999744e-05, 5.33609999999983e-05, 5.2693999999998964e-05, 5.280600000000246e-05, 5.313900000000066e-05, 5.3443999999999714e-05, 5.333399999999863e-05, 5.318099999999937e-05, 5.3457999999999284e-05, 5.3485999999998424e-05, 5.291699999999955e-05, 5.309700000000195e-05, 5.350000000000146e-05, 5.279199999999942e-05, 5.32080000000025e-05, 5.263900000000016e-05, 5.256999999999831e-05, 5.2943999999999214e-05, 5.283299999999866e-05, 5.26669999999993e-05, 5.306899999999934e-05, 5.308300000000238e-05, 5.255599999999874e-05, 5.306900000000281e-05, 5.338900000000091e-05, 5.338899999999744e-05, 5.305499999999977e-05, 5.283299999999866e-05, 5.276400000000028e-05, 5.3193999999999464e-05, 5.327800000000035e-05, 5.294500000000216e-05, 5.28340000000016e-05, 5.304199999999967e-05, 5.329199999999992e-05, 5.3485999999998424e-05, 5.350000000000146e-05, 5.301400000000053e-05]</msg>
<status status="PASS" starttime="20201030 18:30:49.723" endtime="20201030 18:30:49.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.718" endtime="20201030 18:30:49.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.735" endtime="20201030 18:30:49.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.733" endtime="20201030 18:30:49.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.732" endtime="20201030 18:30:49.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.369" endtime="20201030 18:30:49.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.368" endtime="20201030 18:30:49.755"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.768" endtime="20201030 18:30:49.791"></status>
</kw>
<msg timestamp="20201030 18:30:49.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.764" endtime="20201030 18:30:49.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.794" endtime="20201030 18:30:49.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.799" endtime="20201030 18:30:49.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.760" endtime="20201030 18:30:49.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.758" endtime="20201030 18:30:49.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.818" endtime="20201030 18:30:50.112"></status>
</kw>
<msg timestamp="20201030 18:30:50.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026456847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026511708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.815" endtime="20201030 18:30:50.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026456847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026511708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.116" endtime="20201030 18:30:50.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.125" endtime="20201030 18:30:50.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.810" endtime="20201030 18:30:50.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.806" endtime="20201030 18:30:50.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.131" level="INFO">${RESULT} = [{'diff': 5.48609999999998e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.4444000000000714e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:50.128" endtime="20201030 18:30:50.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:50.136" level="INFO">${ACCURACY} = {'diff': [5.48609999999998e-05, 5.4499999999998994e-05, 5.380599999999999e-05, 5.3985999999998924e-05, 5.3999999999998494e-05, 5.4444000000000714e-05, 5.405600000000024e-05, 5.4194000000000464e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:30:50.132" endtime="20201030 18:30:50.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.141" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:30:50.140" endtime="20201030 18:30:50.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.143" level="INFO">VALUE: [5.48609999999998e-05, 5.4499999999998994e-05, 5.380599999999999e-05, 5.3985999999998924e-05, 5.3999999999998494e-05, 5.4444000000000714e-05, 5.405600000000024e-05, 5.4194000000000464e-05, 5.405600000000024e-05, 5.437499999999887e-05, 5.391700000000055e-05, 5.405599999999677e-05, 5.355599999999974e-05, 5.3763999999997814e-05, 5.3929999999997175e-05, 5.375000000000171e-05, 5.441700000000105e-05, 5.415299999999776e-05, 5.3957999999999784e-05, 5.381900000000009e-05, 5.444500000000019e-05, 5.430600000000049e-05, 5.4458000000000284e-05, 5.4513999999998564e-05, 5.4513999999998564e-05, 5.381999999999956e-05, 5.455600000000074e-05, 5.369500000000291e-05, 5.430500000000102e-05, 5.3999999999998494e-05, 5.358399999999888e-05, 5.408299999999991e-05, 5.436100000000277e-05, 5.356899999999984e-05, 5.388899999999794e-05, 5.3735999999998674e-05, 5.406999999999981e-05, 5.398600000000239e-05, 5.4430000000001144e-05, 5.3999999999998494e-05, 5.394499999999969e-05, 5.4401999999998535e-05, 5.427699999999841e-05, 5.388900000000141e-05, 5.3930000000000644e-05, 5.4499999999998994e-05, 5.398600000000239e-05, 5.426400000000525e-05, 5.3749999999998244e-05, 5.4249999999998744e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.142" endtime="20201030 18:30:50.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.137" endtime="20201030 18:30:50.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.148" endtime="20201030 18:30:50.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.147" endtime="20201030 18:30:50.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.146" endtime="20201030 18:30:50.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.756" endtime="20201030 18:30:50.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.756" endtime="20201030 18:30:50.172"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.184" endtime="20201030 18:30:50.201"></status>
</kw>
<msg timestamp="20201030 18:30:50.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.182" endtime="20201030 18:30:50.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.203" endtime="20201030 18:30:50.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.205" endtime="20201030 18:30:50.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.179" endtime="20201030 18:30:50.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.175" endtime="20201030 18:30:50.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.214" endtime="20201030 18:30:50.502"></status>
</kw>
<msg timestamp="20201030 18:30:50.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028236264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028291764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.213" endtime="20201030 18:30:50.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028236264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028291764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.506" endtime="20201030 18:30:50.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.514" endtime="20201030 18:30:50.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.210" endtime="20201030 18:30:50.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.208" endtime="20201030 18:30:50.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.521" level="INFO">${RESULT} = [{'diff': 5.5499999999999994e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5249999999999744e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.46809999999974e-05}, {'diff': 5.519500000000094e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:50.517" endtime="20201030 18:30:50.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:50.525" level="INFO">${ACCURACY} = {'diff': [5.5499999999999994e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 5.4735999999999674e-05, 5.46809999999974e-05, 5.519500000000094e-05, 5.50549999999983e-05, 5.483300000000066e-05, 5.51...</msg>
<status status="PASS" starttime="20201030 18:30:50.522" endtime="20201030 18:30:50.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.529" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:30:50.528" endtime="20201030 18:30:50.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.532" level="INFO">VALUE: [5.5499999999999994e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 5.4735999999999674e-05, 5.46809999999974e-05, 5.519500000000094e-05, 5.50549999999983e-05, 5.483300000000066e-05, 5.5180000000001894e-05, 5.530499999999855e-05, 5.531899999999812e-05, 5.466699999999783e-05, 5.533299999999769e-05, 5.454200000000117e-05, 5.480600000000099e-05, 5.516699999999833e-05, 5.544500000000119e-05, 5.5472000000000854e-05, 5.459699999999998e-05, 5.487499999999937e-05, 5.5305999999998023e-05, 5.50549999999983e-05, 5.5443999999998245e-05, 5.509700000000048e-05, 5.5236000000000174e-05, 5.5387999999999965e-05, 5.529200000000192e-05, 5.5499999999999994e-05, 5.4679999999997925e-05, 5.5430000000002144e-05, 5.5527999999999134e-05, 5.462499999999565e-05, 5.4471999999999854e-05, 5.5193999999994525e-05, 5.505600000000471e-05, 5.508300000000438e-05, 5.505600000000471e-05, 5.500000000000643e-05, 5.4999999999999494e-05, 5.5457999999994345e-05, 5.468100000000087e-05, 5.457000000000378e-05, 5.531999999999759e-05, 5.512500000000309e-05, 5.5513999999999564e-05, 5.5249999999999744e-05, 5.541700000000205e-05, 5.488900000000241e-05, 5.461099999999608e-05, 5.536100000000377e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.530" endtime="20201030 18:30:50.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.526" endtime="20201030 18:30:50.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.537" endtime="20201030 18:30:50.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.535" endtime="20201030 18:30:50.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.534" endtime="20201030 18:30:50.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.173" endtime="20201030 18:30:50.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.173" endtime="20201030 18:30:50.557"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.566" endtime="20201030 18:30:50.589"></status>
</kw>
<msg timestamp="20201030 18:30:50.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.565" endtime="20201030 18:30:50.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.593" endtime="20201030 18:30:50.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.598" endtime="20201030 18:30:50.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.562" endtime="20201030 18:30:50.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.560" endtime="20201030 18:30:50.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.617" endtime="20201030 18:30:50.912"></status>
</kw>
<msg timestamp="20201030 18:30:50.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.614" endtime="20201030 18:30:50.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.916" endtime="20201030 18:30:50.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.924" endtime="20201030 18:30:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.608" endtime="20201030 18:30:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.604" endtime="20201030 18:30:50.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.931" level="INFO">${RESULT} = [{'diff': 5.637500000000087e-05}, {'diff': 5.5915999999999605e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.555500000000227e-05}, {'diff': 5.6138000000000715e-05}, {'diff': 5.608299999999844e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:50.928" endtime="20201030 18:30:50.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:50.935" level="INFO">${ACCURACY} = {'diff': [5.637500000000087e-05, 5.5915999999999605e-05, 5.55549999999988e-05, 5.555500000000227e-05, 5.6138000000000715e-05, 5.608299999999844e-05, 5.606999999999834e-05, 5.612499999999715e-05, 5.594...</msg>
<status status="PASS" starttime="20201030 18:30:50.932" endtime="20201030 18:30:50.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.939" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:30:50.938" endtime="20201030 18:30:50.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.942" level="INFO">VALUE: [5.637500000000087e-05, 5.5915999999999605e-05, 5.55549999999988e-05, 5.555500000000227e-05, 5.6138000000000715e-05, 5.608299999999844e-05, 5.606999999999834e-05, 5.612499999999715e-05, 5.5943999999998745e-05, 5.586099999999733e-05, 5.643099999999915e-05, 5.5943999999998745e-05, 5.644500000000219e-05, 5.6499999999997524e-05, 5.6458000000002284e-05, 5.5943999999998745e-05, 5.636200000000077e-05, 5.618100000000237e-05, 5.5777999999999384e-05, 5.587500000000037e-05, 5.556899999999837e-05, 5.637500000000087e-05, 5.6277999999999884e-05, 5.612500000000062e-05, 5.611099999999758e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.5929999999999175e-05, 5.5986000000000924e-05, 5.608300000000191e-05, 5.6500000000000994e-05, 5.568100000000187e-05, 5.581899999999862e-05, 5.6179999999999425e-05, 5.609699999999801e-05, 5.612499999999715e-05, 5.6014000000000064e-05, 5.562500000000012e-05, 5.55280000000026e-05, 5.6458000000002284e-05, 5.6000000000000494e-05, 5.6000000000000494e-05, 5.612500000000062e-05, 5.6014000000000064e-05, 5.563899999999969e-05, 5.637500000000087e-05, 5.606999999999834e-05, 5.63610000000013e-05, 5.6291999999999454e-05, 5.556900000000184e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.940" endtime="20201030 18:30:50.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.936" endtime="20201030 18:30:50.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.948" endtime="20201030 18:30:50.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.946" endtime="20201030 18:30:50.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.945" endtime="20201030 18:30:50.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.558" endtime="20201030 18:30:50.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.558" endtime="20201030 18:30:50.968"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.977" endtime="20201030 18:30:50.994"></status>
</kw>
<msg timestamp="20201030 18:30:50.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.975" endtime="20201030 18:30:50.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.996" endtime="20201030 18:30:50.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.998" endtime="20201030 18:30:51.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.973" endtime="20201030 18:30:51.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.971" endtime="20201030 18:30:51.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.007" endtime="20201030 18:30:51.292"></status>
</kw>
<msg timestamp="20201030 18:30:51.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.006" endtime="20201030 18:30:51.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.296" endtime="20201030 18:30:51.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.304" endtime="20201030 18:30:51.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.003" endtime="20201030 18:30:51.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.001" endtime="20201030 18:30:51.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.311" level="INFO">${RESULT} = [{'diff': 5.7736000000002674e-05}, {'diff': 5.6749999999997774e-05}, {'diff': 5.73749999999984e-05}, {'diff': 5.7222000000002604e-05}, {'diff': 5.66809999999994e-05}, {'diff': 5.7306000000000024e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:51.307" endtime="20201030 18:30:51.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:51.318" level="INFO">${ACCURACY} = {'diff': [5.7736000000002674e-05, 5.6749999999997774e-05, 5.73749999999984e-05, 5.7222000000002604e-05, 5.66809999999994e-05, 5.7306000000000024e-05, 5.6943999999999745e-05, 5.7500000000001994e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:30:51.312" endtime="20201030 18:30:51.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.323" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:30:51.322" endtime="20201030 18:30:51.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.325" level="INFO">VALUE: [5.7736000000002674e-05, 5.6749999999997774e-05, 5.73749999999984e-05, 5.7222000000002604e-05, 5.66809999999994e-05, 5.7306000000000024e-05, 5.6943999999999745e-05, 5.7500000000001994e-05, 5.6679999999999925e-05, 5.7222000000002604e-05, 5.71809999999999e-05, 5.6555999999999274e-05, 5.709700000000248e-05, 5.711099999999858e-05, 5.7235999999998705e-05, 5.6943999999999745e-05, 5.694499999999922e-05, 5.70550000000003e-05, 5.6957999999999315e-05, 5.6735999999998205e-05, 5.6915999999997136e-05, 5.7249999999998274e-05, 5.683299999999919e-05, 5.738899999999797e-05, 5.6735999999998205e-05, 5.733299999999969e-05, 5.65549999999998e-05, 5.7306000000000024e-05, 5.693099999999965e-05, 5.666699999999983e-05, 5.6708000000002534e-05, 5.7028000000000634e-05, 5.6708000000002534e-05, 5.7221999999999135e-05, 5.6679999999999925e-05, 5.6749999999997774e-05, 5.6541999999999704e-05, 5.6971999999998885e-05, 5.68749999999979e-05, 5.6722000000002104e-05, 5.691700000000008e-05, 5.6749999999997774e-05, 5.747299999999886e-05, 5.7471999999999385e-05, 5.6555999999999274e-05, 5.658299999999894e-05, 5.686099999999833e-05, 5.6693999999999495e-05, 5.6528000000000134e-05, 5.691700000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:30:51.324" endtime="20201030 18:30:51.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.319" endtime="20201030 18:30:51.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.330" endtime="20201030 18:30:51.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.329" endtime="20201030 18:30:51.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.327" endtime="20201030 18:30:51.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.969" endtime="20201030 18:30:51.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.969" endtime="20201030 18:30:51.351"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.359" endtime="20201030 18:30:51.377"></status>
</kw>
<msg timestamp="20201030 18:30:51.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.358" endtime="20201030 18:30:51.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.378" endtime="20201030 18:30:51.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.381" endtime="20201030 18:30:51.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.355" endtime="20201030 18:30:51.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.353" endtime="20201030 18:30:51.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.390" endtime="20201030 18:30:51.677"></status>
</kw>
<msg timestamp="20201030 18:30:51.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.388" endtime="20201030 18:30:51.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.681" endtime="20201030 18:30:51.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.689" endtime="20201030 18:30:51.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.386" endtime="20201030 18:30:51.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.384" endtime="20201030 18:30:51.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.696" level="INFO">${RESULT} = [{'diff': 5.841700000000158e-05}, {'diff': 5.8180000000001425e-05}, {'diff': 5.805499999999783e-05}, {'diff': 5.836099999999983e-05}, {'diff': 5.765300000000126e-05}, {'diff': 5.7985999999999455e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:51.693" endtime="20201030 18:30:51.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:51.700" level="INFO">${ACCURACY} = {'diff': [5.841700000000158e-05, 5.8180000000001425e-05, 5.805499999999783e-05, 5.836099999999983e-05, 5.765300000000126e-05, 5.7985999999999455e-05, 5.76810000000004e-05, 5.8485999999999955e-05, 5.82...</msg>
<status status="PASS" starttime="20201030 18:30:51.697" endtime="20201030 18:30:51.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.704" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:30:51.703" endtime="20201030 18:30:51.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.707" level="INFO">VALUE: [5.841700000000158e-05, 5.8180000000001425e-05, 5.805499999999783e-05, 5.836099999999983e-05, 5.765300000000126e-05, 5.7985999999999455e-05, 5.76810000000004e-05, 5.8485999999999955e-05, 5.8235999999999705e-05, 5.847299999999986e-05, 5.8235999999999705e-05, 5.8334000000000163e-05, 5.8319999999997124e-05, 5.8278000000001884e-05, 5.8278000000001884e-05, 5.8235999999999705e-05, 5.754100000000123e-05, 5.83619999999993e-05, 5.8277999999998414e-05, 5.8278000000001884e-05, 5.7652000000001785e-05, 5.7777999999997914e-05, 5.773699999999868e-05, 5.784699999999976e-05, 5.8056000000000774e-05, 5.779100000000148e-05, 5.812499999999915e-05, 5.773700000000215e-05, 5.7971999999999885e-05, 5.754099999999776e-05, 5.816700000000133e-05, 5.7985999999999455e-05, 5.809700000000001e-05, 5.8334000000000163e-05, 5.762499999999865e-05, 5.8320000000000594e-05, 5.8027999999998164e-05, 5.761100000000255e-05, 5.7985999999999455e-05, 5.843099999999768e-05, 5.8000000000002494e-05, 5.761099999999908e-05, 5.7916000000001605e-05, 5.7930000000001175e-05, 5.7735999999999205e-05, 5.7985999999999455e-05, 5.7694000000000495e-05, 5.761099999999908e-05, 5.768099999999693e-05, 5.7764000000001814e-05]</msg>
<status status="PASS" starttime="20201030 18:30:51.705" endtime="20201030 18:30:51.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.701" endtime="20201030 18:30:51.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.712" endtime="20201030 18:30:51.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.710" endtime="20201030 18:30:51.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.709" endtime="20201030 18:30:51.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.352" endtime="20201030 18:30:51.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.351" endtime="20201030 18:30:51.733"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.741" endtime="20201030 18:30:51.760"></status>
</kw>
<msg timestamp="20201030 18:30:51.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.740" endtime="20201030 18:30:51.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.761" endtime="20201030 18:30:51.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.765" endtime="20201030 18:30:51.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.737" endtime="20201030 18:30:51.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.735" endtime="20201030 18:30:51.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.778" endtime="20201030 18:30:52.066"></status>
</kw>
<msg timestamp="20201030 18:30:52.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.775" endtime="20201030 18:30:52.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.070" endtime="20201030 18:30:52.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.078" endtime="20201030 18:30:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.773" endtime="20201030 18:30:52.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.770" endtime="20201030 18:30:52.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.085" level="INFO">${RESULT} = [{'diff': 5.984700000000176e-05}, {'diff': 5.8958000000001315e-05}, {'diff': 5.9208000000001565e-05}, {'diff': 5.9165999999999386e-05}, {'diff': 5.915299999999929e-05}, {'diff': 5.9000000000000025e-05...</msg>
<status status="PASS" starttime="20201030 18:30:52.082" endtime="20201030 18:30:52.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:52.089" level="INFO">${ACCURACY} = {'diff': [5.984700000000176e-05, 5.8958000000001315e-05, 5.9208000000001565e-05, 5.9165999999999386e-05, 5.915299999999929e-05, 5.9000000000000025e-05, 5.891699999999861e-05, 5.9471999999997915e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:30:52.086" endtime="20201030 18:30:52.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.094" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:30:52.093" endtime="20201030 18:30:52.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.096" level="INFO">VALUE: [5.984700000000176e-05, 5.8958000000001315e-05, 5.9208000000001565e-05, 5.9165999999999386e-05, 5.915299999999929e-05, 5.9000000000000025e-05, 5.891699999999861e-05, 5.9471999999997915e-05, 5.916699999999886e-05, 5.8792000000001954e-05, 5.911100000000058e-05, 5.8764000000002814e-05, 5.894500000000122e-05, 5.890299999999904e-05, 5.859700000000051e-05, 5.941700000000258e-05, 5.9041999999998734e-05, 5.859700000000051e-05, 5.927699999999994e-05, 5.9041999999998734e-05, 5.911100000000058e-05, 5.8915999999999136e-05, 5.9179999999998956e-05, 5.9471999999997915e-05, 5.888899999999947e-05, 5.8736000000000205e-05, 5.8834000000000664e-05, 5.8694000000001495e-05, 5.891699999999861e-05, 5.933299999999822e-05, 5.909699999999754e-05, 5.936100000000083e-05, 5.866699999999836e-05, 5.891700000000208e-05, 5.8749999999999775e-05, 5.8735999999996735e-05, 5.9250000000000275e-05, 5.9306000000002024e-05, 5.883299999999772e-05, 5.854099999999876e-05, 5.8986000000000455e-05, 5.911100000000058e-05, 5.852699999999919e-05, 5.9334000000001164e-05, 5.861199999999955e-05, 5.938899999999997e-05, 5.9222000000001135e-05, 5.9098000000000483e-05, 5.9165999999999386e-05, 5.906900000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:30:52.095" endtime="20201030 18:30:52.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.090" endtime="20201030 18:30:52.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.102" endtime="20201030 18:30:52.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.100" endtime="20201030 18:30:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.099" endtime="20201030 18:30:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.733" endtime="20201030 18:30:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.733" endtime="20201030 18:30:52.123"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.131" endtime="20201030 18:30:52.148"></status>
</kw>
<msg timestamp="20201030 18:30:52.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.130" endtime="20201030 18:30:52.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.150" endtime="20201030 18:30:52.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.152" endtime="20201030 18:30:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.127" endtime="20201030 18:30:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.125" endtime="20201030 18:30:52.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.161" endtime="20201030 18:30:52.445"></status>
</kw>
<msg timestamp="20201030 18:30:52.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:52.160" endtime="20201030 18:30:52.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:52.450" endtime="20201030 18:30:52.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.458" endtime="20201030 18:30:52.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.157" endtime="20201030 18:30:52.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.156" endtime="20201030 18:30:52.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.465" level="INFO">${RESULT} = [{'diff': 6.0957999999999846e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.0041999999999734e-05}, {'diff': 5.9916000000000136e-05}, {'diff': 5.965299999999979e-05}, {'diff': 6.045899999999882e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:52.462" endtime="20201030 18:30:52.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:52.470" level="INFO">${ACCURACY} = {'diff': [6.0957999999999846e-05, 6.016699999999986e-05, 6.0041999999999734e-05, 5.9916000000000136e-05, 5.965299999999979e-05, 6.045899999999882e-05, 6.022299999999814e-05, 5.9528000000003134e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:30:52.466" endtime="20201030 18:30:52.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.475" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:30:52.474" endtime="20201030 18:30:52.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.477" level="INFO">VALUE: [6.0957999999999846e-05, 6.016699999999986e-05, 6.0041999999999734e-05, 5.9916000000000136e-05, 5.965299999999979e-05, 6.045899999999882e-05, 6.022299999999814e-05, 5.9528000000003134e-05, 5.9555999999998804e-05, 5.9763999999996875e-05, 6.034699999999879e-05, 6.0278000000000415e-05, 5.968099999999893e-05, 6.016700000000333e-05, 6.0264000000000845e-05, 5.984699999999829e-05, 5.954099999999976e-05, 6.0528000000000665e-05, 5.991699999999961e-05, 6.0112000000001053e-05, 6.011100000000158e-05, 5.9777999999999915e-05, 6.0485999999998485e-05, 6.016699999999986e-05, 5.9764000000000345e-05, 6.0362000000001304e-05, 5.98750000000009e-05, 6.0471999999998916e-05, 5.993099999999918e-05, 6.011099999999811e-05, 6.0208000000002565e-05, 6.009700000000201e-05, 6.0402000000001066e-05, 5.9736000000001205e-05, 5.990300000000004e-05, 6.0041999999999734e-05, 6.016699999999986e-05, 6.013900000000072e-05, 6.0457999999999346e-05, 6.026300000000137e-05, 5.9777999999999915e-05, 5.9541999999999234e-05, 5.9943999999999276e-05, 6.033299999999922e-05, 6.022299999999814e-05, 6.047299999999839e-05, 5.9527999999999665e-05, 5.995899999999832e-05, 5.9985999999997985e-05, 5.991699999999961e-05]</msg>
<status status="PASS" starttime="20201030 18:30:52.476" endtime="20201030 18:30:52.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.471" endtime="20201030 18:30:52.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.482" endtime="20201030 18:30:52.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.481" endtime="20201030 18:30:52.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.479" endtime="20201030 18:30:52.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.123" endtime="20201030 18:30:52.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.123" endtime="20201030 18:30:52.503"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.511" endtime="20201030 18:30:52.529"></status>
</kw>
<msg timestamp="20201030 18:30:52.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.510" endtime="20201030 18:30:52.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.530" endtime="20201030 18:30:52.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.533" endtime="20201030 18:30:52.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.507" endtime="20201030 18:30:52.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.505" endtime="20201030 18:30:52.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.542" endtime="20201030 18:30:52.828"></status>
</kw>
<msg timestamp="20201030 18:30:52.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021628292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.540" endtime="20201030 18:30:52.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021628292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.832" endtime="20201030 18:30:52.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.841" endtime="20201030 18:30:52.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.538" endtime="20201030 18:30:52.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.536" endtime="20201030 18:30:52.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.847" level="INFO">${RESULT} = [{'diff': 6.120899999999957e-05}, {'diff': 6.134699999999979e-05}, {'diff': 6.122199999999967e-05}, {'diff': 6.0902000000001566e-05}, {'diff': 6.116700000000086e-05}, {'diff': 6.065300000000079e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:52.844" endtime="20201030 18:30:52.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:52.851" level="INFO">${ACCURACY} = {'diff': [6.120899999999957e-05, 6.134699999999979e-05, 6.122199999999967e-05, 6.0902000000001566e-05, 6.116700000000086e-05, 6.065300000000079e-05, 6.133300000000022e-05, 6.147299999999939e-05, 6.065...</msg>
<status status="PASS" starttime="20201030 18:30:52.848" endtime="20201030 18:30:52.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.856" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:30:52.855" endtime="20201030 18:30:52.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.858" level="INFO">VALUE: [6.120899999999957e-05, 6.134699999999979e-05, 6.122199999999967e-05, 6.0902000000001566e-05, 6.116700000000086e-05, 6.065300000000079e-05, 6.133300000000022e-05, 6.147299999999939e-05, 6.065300000000079e-05, 6.0848000000002234e-05, 6.13880000000025e-05, 6.1028000000001165e-05, 6.084699999999929e-05, 6.108299999999997e-05, 6.0986000000002455e-05, 6.0848000000002234e-05, 6.140300000000154e-05, 6.0792000000000485e-05, 6.140299999999807e-05, 6.154200000000123e-05, 6.147199999999992e-05, 6.13750000000024e-05, 6.134699999999979e-05, 6.0542000000000235e-05, 6.147199999999992e-05, 6.0930000000000706e-05, 6.0666000000000886e-05, 6.109699999999954e-05, 6.104200000000073e-05, 6.104200000000073e-05, 6.113899999999825e-05, 6.136099999999936e-05, 6.088799999999853e-05, 6.134799999999926e-05, 6.0707999999999596e-05, 6.0735999999998735e-05, 6.0528000000000665e-05, 6.12499999999988e-05, 6.0651999999997847e-05, 6.077699999999797e-05, 6.115300000000129e-05, 6.134699999999979e-05, 6.113799999999878e-05, 6.0861999999998334e-05, 6.133300000000022e-05, 6.112500000000215e-05, 6.083299999999972e-05, 6.129100000000151e-05, 6.109700000000301e-05, 6.0749999999998305e-05]</msg>
<status status="PASS" starttime="20201030 18:30:52.857" endtime="20201030 18:30:52.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.852" endtime="20201030 18:30:52.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.863" endtime="20201030 18:30:52.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.862" endtime="20201030 18:30:52.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.860" endtime="20201030 18:30:52.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.504" endtime="20201030 18:30:52.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.503" endtime="20201030 18:30:52.884"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.893" endtime="20201030 18:30:52.911"></status>
</kw>
<msg timestamp="20201030 18:30:52.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.891" endtime="20201030 18:30:52.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.912" endtime="20201030 18:30:52.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.915" endtime="20201030 18:30:52.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.888" endtime="20201030 18:30:52.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.886" endtime="20201030 18:30:52.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.924" endtime="20201030 18:30:53.210"></status>
</kw>
<msg timestamp="20201030 18:30:53.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022475111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.922" endtime="20201030 18:30:53.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022475111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.214" endtime="20201030 18:30:53.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.224" endtime="20201030 18:30:53.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.920" endtime="20201030 18:30:53.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.918" endtime="20201030 18:30:53.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.231" level="INFO">${RESULT} = [{'diff': 6.244500000000125e-05}, {'diff': 6.1888000000003e-05}, {'diff': 6.163899999999875e-05}, {'diff': 6.15140000000021e-05}, {'diff': 6.197299999999989e-05}, {'diff': 6.218100000000143e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:53.228" endtime="20201030 18:30:53.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:53.235" level="INFO">${ACCURACY} = {'diff': [6.244500000000125e-05, 6.1888000000003e-05, 6.163899999999875e-05, 6.15140000000021e-05, 6.197299999999989e-05, 6.218100000000143e-05, 6.165300000000179e-05, 6.244500000000125e-05, 6.1778000...</msg>
<status status="PASS" starttime="20201030 18:30:53.232" endtime="20201030 18:30:53.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.239" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:30:53.238" endtime="20201030 18:30:53.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.242" level="INFO">VALUE: [6.244500000000125e-05, 6.1888000000003e-05, 6.163899999999875e-05, 6.15140000000021e-05, 6.197299999999989e-05, 6.218100000000143e-05, 6.165300000000179e-05, 6.244500000000125e-05, 6.177800000000191e-05, 6.162499999999918e-05, 6.22080000000011e-05, 6.175000000000277e-05, 6.216600000000239e-05, 6.154200000000123e-05, 6.166700000000136e-05, 6.226399999999938e-05, 6.166600000000189e-05, 6.184700000000029e-05, 6.237499999999993e-05, 6.188799999999953e-05, 6.209700000000054e-05, 6.247200000000092e-05, 6.20140000000026e-05, 6.163899999999875e-05, 6.24019999999996e-05, 6.245799999999788e-05, 6.190299999999857e-05, 6.172200000000017e-05, 6.179199999999802e-05, 6.172200000000017e-05, 6.177699999999897e-05, 6.17629999999994e-05, 6.211100000000011e-05, 6.234699999999732e-05, 6.205599999999784e-05, 6.17080000000006e-05, 6.206899999999793e-05, 6.208300000000097e-05, 6.173599999999974e-05, 6.182000000000062e-05, 6.195900000000032e-05, 6.163900000000222e-05, 6.229199999999852e-05, 6.20560000000013e-05, 6.226399999999938e-05, 6.198599999999999e-05, 6.204199999999827e-05, 6.158399999999994e-05, 6.183300000000072e-05, 6.227800000000241e-05]</msg>
<status status="PASS" starttime="20201030 18:30:53.241" endtime="20201030 18:30:53.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.236" endtime="20201030 18:30:53.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.248" endtime="20201030 18:30:53.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.246" endtime="20201030 18:30:53.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.245" endtime="20201030 18:30:53.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.885" endtime="20201030 18:30:53.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.884" endtime="20201030 18:30:53.268"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.277" endtime="20201030 18:30:53.295"></status>
</kw>
<msg timestamp="20201030 18:30:53.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.276" endtime="20201030 18:30:53.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.296" endtime="20201030 18:30:53.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.298" endtime="20201030 18:30:53.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.273" endtime="20201030 18:30:53.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.271" endtime="20201030 18:30:53.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.307" endtime="20201030 18:30:53.593"></status>
</kw>
<msg timestamp="20201030 18:30:53.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.306" endtime="20201030 18:30:53.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.598" endtime="20201030 18:30:53.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.606" endtime="20201030 18:30:53.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.303" endtime="20201030 18:30:53.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.302" endtime="20201030 18:30:53.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.612" level="INFO">${RESULT} = [{'diff': 6.327799999999995e-05}, {'diff': 6.315299999999982e-05}, {'diff': 6.327799999999995e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.266599999999942e-05}, {'diff': 6.272300000000064e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:53.609" endtime="20201030 18:30:53.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:53.617" level="INFO">${ACCURACY} = {'diff': [6.327799999999995e-05, 6.315299999999982e-05, 6.327799999999995e-05, 6.331899999999918e-05, 6.266599999999942e-05, 6.272300000000064e-05, 6.334699999999832e-05, 6.277699999999997e-05, 6.2944...</msg>
<status status="PASS" starttime="20201030 18:30:53.613" endtime="20201030 18:30:53.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.622" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:30:53.621" endtime="20201030 18:30:53.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.624" level="INFO">VALUE: [6.327799999999995e-05, 6.315299999999982e-05, 6.327799999999995e-05, 6.331899999999918e-05, 6.266599999999942e-05, 6.272300000000064e-05, 6.334699999999832e-05, 6.277699999999997e-05, 6.294499999999828e-05, 6.345799999999888e-05, 6.319399999999906e-05, 6.276399999999988e-05, 6.295800000000185e-05, 6.330600000000255e-05, 6.30279999999997e-05, 6.252800000000266e-05, 6.276399999999988e-05, 6.329199999999952e-05, 6.27630000000004e-05, 6.340300000000007e-05, 6.291699999999914e-05, 6.30560000000023e-05, 6.258300000000147e-05, 6.315299999999982e-05, 6.276399999999988e-05, 6.295899999999785e-05, 6.331999999999866e-05, 6.311100000000111e-05, 6.2582999999998e-05, 6.327700000000047e-05, 6.309800000000101e-05, 6.327799999999995e-05, 6.333300000000222e-05, 6.297200000000142e-05, 6.326400000000038e-05, 6.348600000000149e-05, 6.30279999999997e-05, 6.32080000000021e-05, 6.334700000000179e-05, 6.341699999999964e-05, 6.277800000000291e-05, 6.276399999999988e-05, 6.307000000000187e-05, 6.250000000000006e-05, 6.259700000000104e-05, 6.333300000000222e-05, 6.277799999999945e-05, 6.276399999999988e-05, 6.329200000000298e-05, 6.254099999999929e-05]</msg>
<status status="PASS" starttime="20201030 18:30:53.623" endtime="20201030 18:30:53.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.618" endtime="20201030 18:30:53.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.629" endtime="20201030 18:30:53.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.628" endtime="20201030 18:30:53.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.627" endtime="20201030 18:30:53.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.269" endtime="20201030 18:30:53.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.269" endtime="20201030 18:30:53.651"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.662" endtime="20201030 18:30:53.680"></status>
</kw>
<msg timestamp="20201030 18:30:53.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.659" endtime="20201030 18:30:53.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.682" endtime="20201030 18:30:53.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.686" endtime="20201030 18:30:53.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.656" endtime="20201030 18:30:53.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.653" endtime="20201030 18:30:53.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.696" endtime="20201030 18:30:53.982"></status>
</kw>
<msg timestamp="20201030 18:30:53.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0255515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025616056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:53.695" endtime="20201030 18:30:53.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0255515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025616056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:53.986" endtime="20201030 18:30:53.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.995" endtime="20201030 18:30:53.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.692" endtime="20201030 18:30:53.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.689" endtime="20201030 18:30:53.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.002" level="INFO">${RESULT} = [{'diff': 6.455600000000034e-05}, {'diff': 6.348600000000149e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.406899999999993e-05}, {'diff': 6.349999999999759e-05}, {'diff': 6.39159999999972e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:53.998" endtime="20201030 18:30:54.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:54.006" level="INFO">${ACCURACY} = {'diff': [6.455600000000034e-05, 6.348600000000149e-05, 6.436099999999889e-05, 6.406899999999993e-05, 6.349999999999759e-05, 6.39159999999972e-05, 6.427800000000095e-05, 6.3582999999999e-05, 6.4375000...</msg>
<status status="PASS" starttime="20201030 18:30:54.003" endtime="20201030 18:30:54.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.011" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:30:54.010" endtime="20201030 18:30:54.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.014" level="INFO">VALUE: [6.455600000000034e-05, 6.348600000000149e-05, 6.436099999999889e-05, 6.406899999999993e-05, 6.349999999999759e-05, 6.39159999999972e-05, 6.427800000000095e-05, 6.3582999999999e-05, 6.437500000000193e-05, 6.391600000000067e-05, 6.431999999999966e-05, 6.374999999999784e-05, 6.420799999999963e-05, 6.415300000000082e-05, 6.35280000000002e-05, 6.359699999999857e-05, 6.397199999999895e-05, 6.362500000000118e-05, 6.363900000000075e-05, 6.418099999999996e-05, 6.409699999999907e-05, 6.37630000000014e-05, 6.42639999999979e-05, 6.35690000000029e-05, 6.40280000000007e-05, 6.413900000000125e-05, 6.377800000000045e-05, 6.37630000000014e-05, 6.430600000000009e-05, 6.423599999999877e-05, 6.395799999999938e-05, 6.419400000000006e-05, 6.444499999999978e-05, 6.40699999999994e-05, 6.35690000000029e-05, 6.369499999999903e-05, 6.43890000000015e-05, 6.42639999999979e-05, 6.390199999999763e-05, 6.377800000000045e-05, 6.415300000000082e-05, 6.3889000000001e-05, 6.433399999999923e-05, 6.37639999999974e-05, 6.412500000000168e-05, 6.383299999999925e-05, 6.373599999999827e-05, 6.444499999999978e-05, 6.381899999999968e-05, 6.408399999999898e-05]</msg>
<status status="PASS" starttime="20201030 18:30:54.012" endtime="20201030 18:30:54.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.007" endtime="20201030 18:30:54.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.019" endtime="20201030 18:30:54.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.017" endtime="20201030 18:30:54.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.016" endtime="20201030 18:30:54.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.651" endtime="20201030 18:30:54.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.651" endtime="20201030 18:30:54.039"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.048" endtime="20201030 18:30:54.067"></status>
</kw>
<msg timestamp="20201030 18:30:54.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.047" endtime="20201030 18:30:54.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.068" endtime="20201030 18:30:54.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.071" endtime="20201030 18:30:54.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.044" endtime="20201030 18:30:54.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.042" endtime="20201030 18:30:54.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.080" endtime="20201030 18:30:54.366"></status>
</kw>
<msg timestamp="20201030 18:30:54.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.078" endtime="20201030 18:30:54.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.370" endtime="20201030 18:30:54.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.378" endtime="20201030 18:30:54.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.076" endtime="20201030 18:30:54.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.074" endtime="20201030 18:30:54.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.385" level="INFO">${RESULT} = [{'diff': 6.551400000000263e-05}, {'diff': 6.531899999999771e-05}, {'diff': 6.477799999999798e-05}, {'diff': 6.451400000000163e-05}, {'diff': 6.500000000000256e-05}, {'diff': 6.501399999999866e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:54.382" endtime="20201030 18:30:54.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:54.389" level="INFO">${ACCURACY} = {'diff': [6.551400000000263e-05, 6.531899999999771e-05, 6.477799999999798e-05, 6.451400000000163e-05, 6.500000000000256e-05, 6.501399999999866e-05, 6.530600000000109e-05, 6.545800000000088e-05, 6.4708...</msg>
<status status="PASS" starttime="20201030 18:30:54.386" endtime="20201030 18:30:54.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.393" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:30:54.392" endtime="20201030 18:30:54.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.396" level="INFO">VALUE: [6.551400000000263e-05, 6.531899999999771e-05, 6.477799999999798e-05, 6.451400000000163e-05, 6.500000000000256e-05, 6.501399999999866e-05, 6.530600000000109e-05, 6.545800000000088e-05, 6.470800000000013e-05, 6.50280000000017e-05, 6.513900000000225e-05, 6.505499999999789e-05, 6.490300000000157e-05, 6.487500000000243e-05, 6.458399999999948e-05, 6.50419999999978e-05, 6.473599999999927e-05, 6.47639999999984e-05, 6.465299999999785e-05, 6.4889000000002e-05, 6.448599999999902e-05, 6.538899999999903e-05, 6.54029999999986e-05, 6.513900000000225e-05, 6.537499999999946e-05, 6.544500000000078e-05, 6.540300000000207e-05, 6.526400000000238e-05, 6.455500000000086e-05, 6.469500000000003e-05, 6.508299999999703e-05, 6.482000000000016e-05, 6.49440000000008e-05, 6.493000000000124e-05, 6.531999999999719e-05, 6.445799999999988e-05, 6.462500000000218e-05, 6.508399999999998e-05, 6.53890000000025e-05, 6.515199999999888e-05, 6.512499999999921e-05, 6.47219999999997e-05, 6.533300000000075e-05, 6.545900000000035e-05, 6.52639999999989e-05, 6.544399999999784e-05, 6.4583e-05, 6.511099999999964e-05, 6.527799999999848e-05, 6.500000000000256e-05]</msg>
<status status="PASS" starttime="20201030 18:30:54.395" endtime="20201030 18:30:54.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.390" endtime="20201030 18:30:54.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.402" endtime="20201030 18:30:54.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.400" endtime="20201030 18:30:54.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.399" endtime="20201030 18:30:54.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.041" endtime="20201030 18:30:54.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.040" endtime="20201030 18:30:54.423"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.431" endtime="20201030 18:30:54.449"></status>
</kw>
<msg timestamp="20201030 18:30:54.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.430" endtime="20201030 18:30:54.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.450" endtime="20201030 18:30:54.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.453" endtime="20201030 18:30:54.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.427" endtime="20201030 18:30:54.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.425" endtime="20201030 18:30:54.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.462" endtime="20201030 18:30:54.747"></status>
</kw>
<msg timestamp="20201030 18:30:54.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.460" endtime="20201030 18:30:54.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.751" endtime="20201030 18:30:54.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.759" endtime="20201030 18:30:54.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.458" endtime="20201030 18:30:54.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.456" endtime="20201030 18:30:54.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.766" level="INFO">${RESULT} = [{'diff': 6.620800000000163e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.583300000000125e-05}, {'diff': 6.619499999999806e-05}, {'diff': 6.570799999999766e-05}, {'diff': 6.584700000000082e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:54.762" endtime="20201030 18:30:54.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:54.773" level="INFO">${ACCURACY} = {'diff': [6.620800000000163e-05, 6.612500000000021e-05, 6.583300000000125e-05, 6.619499999999806e-05, 6.570799999999766e-05, 6.584700000000082e-05, 6.583400000000073e-05, 6.584700000000082e-05, 6.6500...</msg>
<status status="PASS" starttime="20201030 18:30:54.767" endtime="20201030 18:30:54.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.778" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:30:54.777" endtime="20201030 18:30:54.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.780" level="INFO">VALUE: [6.620800000000163e-05, 6.612500000000021e-05, 6.583300000000125e-05, 6.619499999999806e-05, 6.570799999999766e-05, 6.584700000000082e-05, 6.583400000000073e-05, 6.584700000000082e-05, 6.650000000000059e-05, 6.594500000000128e-05, 6.601399999999966e-05, 6.615299999999935e-05, 6.554200000000177e-05, 6.620799999999816e-05, 6.565300000000232e-05, 6.584700000000082e-05, 6.634699999999785e-05, 6.57639999999994e-05, 6.562499999999971e-05, 6.59029999999991e-05, 6.594399999999834e-05, 6.572300000000017e-05, 6.556899999999796e-05, 6.613800000000031e-05, 6.569499999999756e-05, 6.602799999999923e-05, 6.548600000000002e-05, 6.63480000000008e-05, 6.574999999999984e-05, 6.587499999999996e-05, 6.601399999999966e-05, 6.60419999999988e-05, 6.580600000000159e-05, 6.630600000000209e-05, 6.619399999999859e-05, 6.574999999999984e-05, 6.549999999999959e-05, 6.592999999999877e-05, 6.638800000000056e-05, 6.600000000000009e-05, 6.617999999999902e-05, 6.59440000000018e-05, 6.57639999999994e-05, 6.555600000000134e-05, 6.552799999999873e-05, 6.565199999999938e-05, 6.551399999999916e-05, 6.609700000000107e-05, 6.62639999999999e-05, 6.57639999999994e-05]</msg>
<status status="PASS" starttime="20201030 18:30:54.779" endtime="20201030 18:30:54.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.774" endtime="20201030 18:30:54.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.793" endtime="20201030 18:30:54.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.791" endtime="20201030 18:30:54.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.790" endtime="20201030 18:30:54.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.424" endtime="20201030 18:30:54.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.423" endtime="20201030 18:30:54.814"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.822" endtime="20201030 18:30:54.840"></status>
</kw>
<msg timestamp="20201030 18:30:54.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.821" endtime="20201030 18:30:54.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.841" endtime="20201030 18:30:54.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.844" endtime="20201030 18:30:54.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.818" endtime="20201030 18:30:54.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.816" endtime="20201030 18:30:54.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.852" endtime="20201030 18:30:55.154"></status>
</kw>
<msg timestamp="20201030 18:30:55.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:54.851" endtime="20201030 18:30:55.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:55.158" endtime="20201030 18:30:55.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.167" endtime="20201030 18:30:55.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.848" endtime="20201030 18:30:55.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.847" endtime="20201030 18:30:55.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.173" level="INFO">${RESULT} = [{'diff': 6.737500000000146e-05}, {'diff': 6.650000000000059e-05}, {'diff': 6.70419999999998e-05}, {'diff': 6.655499999999939e-05}, {'diff': 6.687500000000096e-05}, {'diff': 6.731999999999919e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:55.170" endtime="20201030 18:30:55.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:55.177" level="INFO">${ACCURACY} = {'diff': [6.737500000000146e-05, 6.650000000000059e-05, 6.70419999999998e-05, 6.655499999999939e-05, 6.687500000000096e-05, 6.731999999999919e-05, 6.670800000000213e-05, 6.697200000000195e-05, 6.72370...</msg>
<status status="PASS" starttime="20201030 18:30:55.174" endtime="20201030 18:30:55.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.182" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:30:55.181" endtime="20201030 18:30:55.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.184" level="INFO">VALUE: [6.737500000000146e-05, 6.650000000000059e-05, 6.70419999999998e-05, 6.655499999999939e-05, 6.687500000000096e-05, 6.731999999999919e-05, 6.670800000000213e-05, 6.697200000000195e-05, 6.723700000000124e-05, 6.67640000000004e-05, 6.681899999999921e-05, 6.692999999999977e-05, 6.736099999999842e-05, 6.712500000000121e-05, 6.74030000000006e-05, 6.661099999999767e-05, 6.716699999999992e-05, 6.651400000000016e-05, 6.70419999999998e-05, 6.652799999999973e-05, 6.744399999999984e-05, 6.701400000000066e-05, 6.687500000000096e-05, 6.727800000000048e-05, 6.659700000000157e-05, 6.731999999999919e-05, 6.695799999999891e-05, 6.669400000000256e-05, 6.651299999999721e-05, 6.712500000000121e-05, 6.706899999999946e-05, 6.688900000000053e-05, 6.661099999999767e-05, 6.726399999999744e-05, 6.675000000000084e-05, 6.702700000000075e-05, 6.695899999999838e-05, 6.675000000000084e-05, 6.688899999999706e-05, 6.693099999999924e-05, 6.734699999999885e-05, 6.669399999999909e-05, 6.694399999999934e-05, 6.745899999999888e-05, 6.651400000000016e-05, 6.713799999999784e-05, 6.675000000000084e-05, 6.704099999999685e-05, 6.745899999999888e-05, 6.701400000000066e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.183" endtime="20201030 18:30:55.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.178" endtime="20201030 18:30:55.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.189" endtime="20201030 18:30:55.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.187" endtime="20201030 18:30:55.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.186" endtime="20201030 18:30:55.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.815" endtime="20201030 18:30:55.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.814" endtime="20201030 18:30:55.210"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.218" endtime="20201030 18:30:55.236"></status>
</kw>
<msg timestamp="20201030 18:30:55.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.217" endtime="20201030 18:30:55.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.238" endtime="20201030 18:30:55.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.240" endtime="20201030 18:30:55.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.214" endtime="20201030 18:30:55.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.212" endtime="20201030 18:30:55.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.249" endtime="20201030 18:30:55.535"></status>
</kw>
<msg timestamp="20201030 18:30:55.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.248" endtime="20201030 18:30:55.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.539" endtime="20201030 18:30:55.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.547" endtime="20201030 18:30:55.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.245" endtime="20201030 18:30:55.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.243" endtime="20201030 18:30:55.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.554" level="INFO">${RESULT} = [{'diff': 6.837500000000246e-05}, {'diff': 6.762499999999824e-05}, {'diff': 6.77640000000014e-05}, {'diff': 6.838899999999856e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.790299999999763e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:55.550" endtime="20201030 18:30:55.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:55.558" level="INFO">${ACCURACY} = {'diff': [6.837500000000246e-05, 6.762499999999824e-05, 6.77640000000014e-05, 6.838899999999856e-05, 6.824999999999887e-05, 6.790299999999763e-05, 6.802699999999828e-05, 6.756999999999944e-05, 6.80830...</msg>
<status status="PASS" starttime="20201030 18:30:55.555" endtime="20201030 18:30:55.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.562" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:30:55.561" endtime="20201030 18:30:55.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.564" level="INFO">VALUE: [6.837500000000246e-05, 6.762499999999824e-05, 6.77640000000014e-05, 6.838899999999856e-05, 6.824999999999887e-05, 6.790299999999763e-05, 6.802699999999828e-05, 6.756999999999944e-05, 6.808300000000003e-05, 6.784700000000282e-05, 6.80969999999996e-05, 6.801399999999819e-05, 6.829200000000105e-05, 6.777800000000098e-05, 6.7583000000003e-05, 6.79030000000011e-05, 6.770799999999966e-05, 6.781900000000021e-05, 6.770899999999913e-05, 6.770799999999966e-05, 6.795799999999991e-05, 6.813900000000178e-05, 6.808300000000003e-05, 6.772199999999923e-05, 6.833300000000028e-05, 6.788900000000153e-05, 6.813899999999831e-05, 6.77640000000014e-05, 6.843100000000074e-05, 6.812499999999874e-05, 6.82359999999993e-05, 6.752799999999726e-05, 6.811100000000264e-05, 6.752800000000073e-05, 6.787500000000196e-05, 6.824999999999887e-05, 6.812499999999874e-05, 6.826399999999844e-05, 6.806900000000046e-05, 6.780600000000012e-05, 6.833300000000028e-05, 6.812500000000221e-05, 6.761099999999867e-05, 6.802799999999776e-05, 6.77359999999988e-05, 6.837500000000246e-05, 6.749999999999812e-05, 6.840299999999813e-05, 6.813899999999831e-05, 6.772199999999923e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.563" endtime="20201030 18:30:55.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.558" endtime="20201030 18:30:55.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.570" endtime="20201030 18:30:55.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.569" endtime="20201030 18:30:55.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.567" endtime="20201030 18:30:55.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.211" endtime="20201030 18:30:55.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.210" endtime="20201030 18:30:55.591"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.599" endtime="20201030 18:30:55.617"></status>
</kw>
<msg timestamp="20201030 18:30:55.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.598" endtime="20201030 18:30:55.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.618" endtime="20201030 18:30:55.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.621" endtime="20201030 18:30:55.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.595" endtime="20201030 18:30:55.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.593" endtime="20201030 18:30:55.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.630" endtime="20201030 18:30:55.915"></status>
</kw>
<msg timestamp="20201030 18:30:55.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021273569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.628" endtime="20201030 18:30:55.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021273569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.919" endtime="20201030 18:30:55.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.928" endtime="20201030 18:30:55.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.626" endtime="20201030 18:30:55.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.624" endtime="20201030 18:30:55.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.934" level="INFO">${RESULT} = [{'diff': 6.944500000000131e-05}, {'diff': 6.897200000000048e-05}, {'diff': 6.936100000000042e-05}, {'diff': 6.940299999999913e-05}, {'diff': 6.945900000000088e-05}, {'diff': 6.906899999999799e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:55.931" endtime="20201030 18:30:55.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:55.940" level="INFO">${ACCURACY} = {'diff': [6.944500000000131e-05, 6.897200000000048e-05, 6.936100000000042e-05, 6.940299999999913e-05, 6.945900000000088e-05, 6.906899999999799e-05, 6.888899999999906e-05, 6.927799999999901e-05, 6.8680...</msg>
<status status="PASS" starttime="20201030 18:30:55.935" endtime="20201030 18:30:55.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.946" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:30:55.945" endtime="20201030 18:30:55.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.949" level="INFO">VALUE: [6.944500000000131e-05, 6.897200000000048e-05, 6.936100000000042e-05, 6.940299999999913e-05, 6.945900000000088e-05, 6.906899999999799e-05, 6.888899999999906e-05, 6.927799999999901e-05, 6.868000000000152e-05, 6.8584e-05, 6.872200000000023e-05, 6.926399999999944e-05, 6.934700000000085e-05, 6.884700000000035e-05, 6.865299999999838e-05, 6.849999999999912e-05, 6.884700000000035e-05, 6.937499999999999e-05, 6.89169999999982e-05, 6.884700000000035e-05, 6.926399999999944e-05, 6.856900000000096e-05, 6.895799999999744e-05, 6.888899999999906e-05, 6.938899999999956e-05, 6.936100000000042e-05, 6.918100000000149e-05, 6.85970000000001e-05, 6.884799999999983e-05, 6.887499999999949e-05, 6.872200000000023e-05, 6.906899999999799e-05, 6.897200000000048e-05, 6.847299999999945e-05, 6.852800000000173e-05, 6.924999999999987e-05, 6.851400000000216e-05, 6.856900000000096e-05, 6.87640000000024e-05, 6.863899999999881e-05, 6.919400000000159e-05, 6.897200000000048e-05, 6.890299999999863e-05, 6.938800000000009e-05, 6.877800000000198e-05, 6.913899999999931e-05, 6.890299999999863e-05, 6.855600000000087e-05, 6.920799999999769e-05, 6.883400000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.947" endtime="20201030 18:30:55.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.941" endtime="20201030 18:30:55.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.954" endtime="20201030 18:30:55.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.952" endtime="20201030 18:30:55.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.951" endtime="20201030 18:30:55.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.592" endtime="20201030 18:30:55.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.591" endtime="20201030 18:30:55.975"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.986" endtime="20201030 18:30:56.005"></status>
</kw>
<msg timestamp="20201030 18:30:56.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.983" endtime="20201030 18:30:56.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.007" endtime="20201030 18:30:56.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.009" endtime="20201030 18:30:56.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.980" endtime="20201030 18:30:56.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.977" endtime="20201030 18:30:56.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.018" endtime="20201030 18:30:56.305"></status>
</kw>
<msg timestamp="20201030 18:30:56.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025357875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025428792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.016" endtime="20201030 18:30:56.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025357875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025428792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.309" endtime="20201030 18:30:56.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.317" endtime="20201030 18:30:56.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.014" endtime="20201030 18:30:56.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.012" endtime="20201030 18:30:56.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.324" level="INFO">${RESULT} = [{'diff': 7.09170000000002e-05}, {'diff': 6.966700000000242e-05}, {'diff': 7.025000000000087e-05}, {'diff': 6.954100000000282e-05}, {'diff': 6.969500000000156e-05}, {'diff': 6.99169999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:56.321" endtime="20201030 18:30:56.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:56.328" level="INFO">${ACCURACY} = {'diff': [7.09170000000002e-05, 6.966700000000242e-05, 7.025000000000087e-05, 6.954100000000282e-05, 6.969500000000156e-05, 6.99169999999992e-05, 6.982000000000169e-05, 7.037500000000099e-05, 6.994399...</msg>
<status status="PASS" starttime="20201030 18:30:56.325" endtime="20201030 18:30:56.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.332" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:30:56.331" endtime="20201030 18:30:56.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.335" level="INFO">VALUE: [7.09170000000002e-05, 6.966700000000242e-05, 7.025000000000087e-05, 6.954100000000282e-05, 6.969500000000156e-05, 6.99169999999992e-05, 6.982000000000169e-05, 7.037500000000099e-05, 6.994399999999887e-05, 6.968099999999852e-05, 7.043099999999927e-05, 6.97360000000008e-05, 7.013900000000031e-05, 7.006899999999899e-05, 7.036100000000142e-05, 6.963899999999981e-05, 6.990200000000016e-05, 6.997199999999801e-05, 6.963899999999981e-05, 6.994399999999887e-05, 6.983300000000178e-05, 7.002700000000028e-05, 6.995899999999791e-05, 6.981999999999822e-05, 7.045799999999894e-05, 6.990299999999963e-05, 6.977799999999951e-05, 6.977700000000003e-05, 6.987500000000049e-05, 6.965299999999938e-05, 7.016699999999945e-05, 6.994499999999834e-05, 6.962500000000024e-05, 7.030500000000314e-05, 7.043099999999927e-05, 6.955500000000239e-05, 7.015200000000041e-05, 7.037499999999752e-05, 6.951399999999969e-05, 7.040300000000013e-05, 7.030499999999967e-05, 7.017999999999955e-05, 7.002799999999976e-05, 6.961100000000067e-05, 7.019499999999859e-05, 6.995799999999844e-05, 7.025000000000087e-05, 6.961200000000015e-05, 7.032000000000219e-05, 7.034699999999838e-05]</msg>
<status status="PASS" starttime="20201030 18:30:56.334" endtime="20201030 18:30:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.329" endtime="20201030 18:30:56.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.340" endtime="20201030 18:30:56.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.338" endtime="20201030 18:30:56.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.337" endtime="20201030 18:30:56.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.976" endtime="20201030 18:30:56.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.975" endtime="20201030 18:30:56.361"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.369" endtime="20201030 18:30:56.388"></status>
</kw>
<msg timestamp="20201030 18:30:56.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.368" endtime="20201030 18:30:56.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.389" endtime="20201030 18:30:56.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.392" endtime="20201030 18:30:56.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.365" endtime="20201030 18:30:56.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.363" endtime="20201030 18:30:56.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.401" endtime="20201030 18:30:56.704"></status>
</kw>
<msg timestamp="20201030 18:30:56.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.399" endtime="20201030 18:30:56.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.708" endtime="20201030 18:30:56.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.716" endtime="20201030 18:30:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.397" endtime="20201030 18:30:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.395" endtime="20201030 18:30:56.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.723" level="INFO">${RESULT} = [{'diff': 7.115300000000088e-05}, {'diff': 7.105500000000042e-05}, {'diff': 7.120899999999916e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.095799999999944e-05}, {'diff': 7.065200000000091e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:56.719" endtime="20201030 18:30:56.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:56.727" level="INFO">${ACCURACY} = {'diff': [7.115300000000088e-05, 7.105500000000042e-05, 7.120899999999916e-05, 7.058399999999854e-05, 7.095799999999944e-05, 7.065200000000091e-05, 7.069499999999909e-05, 7.138899999999809e-05, 7.1319...</msg>
<status status="PASS" starttime="20201030 18:30:56.724" endtime="20201030 18:30:56.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.731" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:30:56.730" endtime="20201030 18:30:56.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.734" level="INFO">VALUE: [7.115300000000088e-05, 7.105500000000042e-05, 7.120899999999916e-05, 7.058399999999854e-05, 7.095799999999944e-05, 7.065200000000091e-05, 7.069499999999909e-05, 7.138899999999809e-05, 7.131900000000024e-05, 7.063900000000081e-05, 7.108299999999956e-05, 7.062500000000124e-05, 7.101400000000119e-05, 7.127799999999754e-05, 7.083399999999879e-05, 7.101400000000119e-05, 7.120799999999969e-05, 7.113899999999784e-05, 7.050000000000112e-05, 7.105500000000042e-05, 7.152800000000126e-05, 7.081899999999974e-05, 7.099999999999815e-05, 7.075000000000137e-05, 7.118100000000002e-05, 7.081899999999974e-05, 7.076400000000094e-05, 7.095799999999944e-05, 7.070900000000213e-05, 7.119400000000012e-05, 7.1069e-05, 7.12499999999984e-05, 7.062499999999777e-05, 7.068099999999952e-05, 7.07499999999979e-05, 7.077700000000103e-05, 7.145899999999941e-05, 7.094400000000334e-05, 7.09170000000002e-05, 7.091600000000073e-05, 7.051400000000069e-05, 7.112500000000174e-05, 7.105499999999695e-05, 7.075000000000137e-05, 7.081999999999922e-05, 7.098600000000205e-05, 7.09300000000003e-05, 7.143100000000027e-05, 7.122299999999873e-05, 7.063899999999734e-05]</msg>
<status status="PASS" starttime="20201030 18:30:56.732" endtime="20201030 18:30:56.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.728" endtime="20201030 18:30:56.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.739" endtime="20201030 18:30:56.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.738" endtime="20201030 18:30:56.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.737" endtime="20201030 18:30:56.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.362" endtime="20201030 18:30:56.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.361" endtime="20201030 18:30:56.760"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.769" endtime="20201030 18:30:56.786"></status>
</kw>
<msg timestamp="20201030 18:30:56.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.767" endtime="20201030 18:30:56.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.788" endtime="20201030 18:30:56.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.790" endtime="20201030 18:30:56.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.765" endtime="20201030 18:30:56.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.763" endtime="20201030 18:30:56.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.799" endtime="20201030 18:30:57.086"></status>
</kw>
<msg timestamp="20201030 18:30:57.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021436847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.798" endtime="20201030 18:30:57.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021436847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.090" endtime="20201030 18:30:57.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.098" endtime="20201030 18:30:57.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.795" endtime="20201030 18:30:57.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.794" endtime="20201030 18:30:57.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.105" level="INFO">${RESULT} = [{'diff': 7.233400000000029e-05}, {'diff': 7.163899999999834e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.170899999999966e-05}, {'diff': 7.182000000000022e-05}, {'diff': 7.212499999999927e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:57.102" endtime="20201030 18:30:57.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:57.110" level="INFO">${ACCURACY} = {'diff': [7.233400000000029e-05, 7.163899999999834e-05, 7.21109999999997e-05, 7.170899999999966e-05, 7.182000000000022e-05, 7.212499999999927e-05, 7.163899999999834e-05, 7.238899999999909e-05, 7.17629...</msg>
<status status="PASS" starttime="20201030 18:30:57.106" endtime="20201030 18:30:57.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.115" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:30:57.114" endtime="20201030 18:30:57.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.117" level="INFO">VALUE: [7.233400000000029e-05, 7.163899999999834e-05, 7.21109999999997e-05, 7.170899999999966e-05, 7.182000000000022e-05, 7.212499999999927e-05, 7.163899999999834e-05, 7.238899999999909e-05, 7.1762999999999e-05, 7.216699999999798e-05, 7.162499999999877e-05, 7.208300000000056e-05, 7.144400000000037e-05, 7.149999999999865e-05, 7.176400000000194e-05, 7.195899999999991e-05, 7.206899999999752e-05, 7.237499999999952e-05, 7.213899999999884e-05, 7.194500000000034e-05, 7.226399999999897e-05, 7.170899999999966e-05, 7.151399999999822e-05, 7.227800000000201e-05, 7.183300000000031e-05, 7.193100000000077e-05, 7.154200000000083e-05, 7.205500000000142e-05, 7.245900000000041e-05, 7.168099999999705e-05, 7.151400000000169e-05, 7.233300000000081e-05, 7.232000000000072e-05, 7.188899999999859e-05, 7.176399999999847e-05, 7.150000000000212e-05, 7.238799999999962e-05, 7.170899999999966e-05, 7.177800000000151e-05, 7.187499999999902e-05, 7.194400000000087e-05, 7.183300000000031e-05, 7.156999999999997e-05, 7.216700000000145e-05, 7.202799999999829e-05, 7.163900000000181e-05, 7.19309999999973e-05, 7.163899999999834e-05, 7.244400000000137e-05, 7.165199999999844e-05]</msg>
<status status="PASS" starttime="20201030 18:30:57.116" endtime="20201030 18:30:57.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.111" endtime="20201030 18:30:57.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.122" endtime="20201030 18:30:57.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.120" endtime="20201030 18:30:57.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.119" endtime="20201030 18:30:57.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.761" endtime="20201030 18:30:57.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.761" endtime="20201030 18:30:57.143"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.151" endtime="20201030 18:30:57.169"></status>
</kw>
<msg timestamp="20201030 18:30:57.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.150" endtime="20201030 18:30:57.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.171" endtime="20201030 18:30:57.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.173" endtime="20201030 18:30:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.147" endtime="20201030 18:30:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.145" endtime="20201030 18:30:57.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.182" endtime="20201030 18:30:57.469"></status>
</kw>
<msg timestamp="20201030 18:30:57.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.181" endtime="20201030 18:30:57.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.473" endtime="20201030 18:30:57.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.482" endtime="20201030 18:30:57.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.178" endtime="20201030 18:30:57.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.176" endtime="20201030 18:30:57.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.488" level="INFO">${RESULT} = [{'diff': 7.376400000000047e-05}, {'diff': 7.318000000000255e-05}, {'diff': 7.291600000000273e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.258300000000106e-05}, {'diff': 7.283300000000131e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:57.485" endtime="20201030 18:30:57.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:57.493" level="INFO">${ACCURACY} = {'diff': [7.376400000000047e-05, 7.318000000000255e-05, 7.291600000000273e-05, 7.288899999999959e-05, 7.258300000000106e-05, 7.283300000000131e-05, 7.25690000000015e-05, 7.290300000000263e-05, 7.31519...</msg>
<status status="PASS" starttime="20201030 18:30:57.489" endtime="20201030 18:30:57.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.497" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:30:57.496" endtime="20201030 18:30:57.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.499" level="INFO">VALUE: [7.376400000000047e-05, 7.318000000000255e-05, 7.291600000000273e-05, 7.288899999999959e-05, 7.258300000000106e-05, 7.283300000000131e-05, 7.25690000000015e-05, 7.290300000000263e-05, 7.315199999999994e-05, 7.270900000000066e-05, 7.270800000000119e-05, 7.267999999999858e-05, 7.304199999999886e-05, 7.283300000000131e-05, 7.286100000000045e-05, 7.265299999999891e-05, 7.269400000000162e-05, 7.330599999999868e-05, 7.286100000000045e-05, 7.27499999999999e-05, 7.309699999999766e-05, 7.337500000000052e-05, 7.306899999999852e-05, 7.344400000000237e-05, 7.351400000000022e-05, 7.337499999999705e-05, 7.336099999999748e-05, 7.322300000000073e-05, 7.29439999999984e-05, 7.249999999999965e-05, 7.287500000000002e-05, 7.280599999999818e-05, 7.319400000000212e-05, 7.307000000000147e-05, 7.34439999999989e-05, 7.315299999999941e-05, 7.308300000000156e-05, 7.272200000000076e-05, 7.249999999999965e-05, 7.306899999999852e-05, 7.27369999999998e-05, 7.273600000000033e-05, 7.262499999999977e-05, 7.347200000000151e-05, 7.300000000000015e-05, 7.327799999999954e-05, 7.319400000000212e-05, 7.313899999999984e-05, 7.323600000000083e-05, 7.319399999999865e-05]</msg>
<status status="PASS" starttime="20201030 18:30:57.498" endtime="20201030 18:30:57.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.493" endtime="20201030 18:30:57.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.504" endtime="20201030 18:30:57.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.503" endtime="20201030 18:30:57.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.502" endtime="20201030 18:30:57.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.144" endtime="20201030 18:30:57.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.143" endtime="20201030 18:30:57.525"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.535" endtime="20201030 18:30:57.554"></status>
</kw>
<msg timestamp="20201030 18:30:57.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.533" endtime="20201030 18:30:57.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.556" endtime="20201030 18:30:57.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.558" endtime="20201030 18:30:57.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.530" endtime="20201030 18:30:57.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.528" endtime="20201030 18:30:57.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.567" endtime="20201030 18:30:57.851"></status>
</kw>
<msg timestamp="20201030 18:30:57.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023800472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.565" endtime="20201030 18:30:57.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023800472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.856" endtime="20201030 18:30:57.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.864" endtime="20201030 18:30:57.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.563" endtime="20201030 18:30:57.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.561" endtime="20201030 18:30:57.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.870" level="INFO">${RESULT} = [{'diff': 7.415300000000041e-05}, {'diff': 7.391699999999973e-05}, {'diff': 7.345799999999847e-05}, {'diff': 7.412500000000127e-05}, {'diff': 7.39309999999993e-05}, {'diff': 7.40560000000029e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:57.867" endtime="20201030 18:30:57.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:57.875" level="INFO">${ACCURACY} = {'diff': [7.415300000000041e-05, 7.391699999999973e-05, 7.345799999999847e-05, 7.412500000000127e-05, 7.39309999999993e-05, 7.40560000000029e-05, 7.379199999999961e-05, 7.44309999999998e-05, 7.4292000...</msg>
<status status="PASS" starttime="20201030 18:30:57.871" endtime="20201030 18:30:57.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.879" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:30:57.878" endtime="20201030 18:30:57.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.881" level="INFO">VALUE: [7.415300000000041e-05, 7.391699999999973e-05, 7.345799999999847e-05, 7.412500000000127e-05, 7.39309999999993e-05, 7.40560000000029e-05, 7.379199999999961e-05, 7.44309999999998e-05, 7.429200000000011e-05, 7.436100000000195e-05, 7.430600000000315e-05, 7.438899999999762e-05, 7.441600000000076e-05, 7.436099999999848e-05, 7.412500000000127e-05, 7.35829999999986e-05, 7.342999999999933e-05, 7.44309999999998e-05, 7.398600000000158e-05, 7.368100000000252e-05, 7.44309999999998e-05, 7.361199999999721e-05, 7.34309999999988e-05, 7.436100000000195e-05, 7.363900000000034e-05, 7.362500000000077e-05, 7.398600000000158e-05, 7.419499999999912e-05, 7.398599999999811e-05, 7.419399999999965e-05, 7.373599999999786e-05, 7.399999999999768e-05, 7.366699999999948e-05, 7.419399999999965e-05, 7.401400000000072e-05, 7.437500000000152e-05, 7.441599999999729e-05, 7.438899999999762e-05, 7.41249999999978e-05, 7.348600000000108e-05, 7.416699999999998e-05, 7.355499999999945e-05, 7.437499999999805e-05, 7.355499999999945e-05, 7.381900000000274e-05, 7.351400000000022e-05, 7.359699999999816e-05, 7.348600000000108e-05, 7.35560000000024e-05, 7.44439999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:30:57.880" endtime="20201030 18:30:57.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.875" endtime="20201030 18:30:57.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.887" endtime="20201030 18:30:57.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.886" endtime="20201030 18:30:57.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.885" endtime="20201030 18:30:57.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.526" endtime="20201030 18:30:57.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.526" endtime="20201030 18:30:57.908"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.917" endtime="20201030 18:30:57.934"></status>
</kw>
<msg timestamp="20201030 18:30:57.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.915" endtime="20201030 18:30:57.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.936" endtime="20201030 18:30:57.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.938" endtime="20201030 18:30:57.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.912" endtime="20201030 18:30:57.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.910" endtime="20201030 18:30:57.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.947" endtime="20201030 18:30:58.233"></status>
</kw>
<msg timestamp="20201030 18:30:58.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.946" endtime="20201030 18:30:58.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.237" endtime="20201030 18:30:58.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.246" endtime="20201030 18:30:58.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.943" endtime="20201030 18:30:58.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.942" endtime="20201030 18:30:58.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.252" level="INFO">${RESULT} = [{'diff': 7.519400000000065e-05}, {'diff': 7.451400000000122e-05}, {'diff': 7.512500000000227e-05}, {'diff': 7.501400000000172e-05}, {'diff': 7.481900000000027e-05}, {'diff': 7.54310000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:58.249" endtime="20201030 18:30:58.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:58.260" level="INFO">${ACCURACY} = {'diff': [7.519400000000065e-05, 7.451400000000122e-05, 7.512500000000227e-05, 7.501400000000172e-05, 7.481900000000027e-05, 7.54310000000008e-05, 7.451399999999775e-05, 7.45699999999995e-05, 7.462500...</msg>
<status status="PASS" starttime="20201030 18:30:58.253" endtime="20201030 18:30:58.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.264" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:30:58.263" endtime="20201030 18:30:58.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.267" level="INFO">VALUE: [7.519400000000065e-05, 7.451400000000122e-05, 7.512500000000227e-05, 7.501400000000172e-05, 7.481900000000027e-05, 7.54310000000008e-05, 7.451399999999775e-05, 7.45699999999995e-05, 7.462500000000177e-05, 7.52639999999985e-05, 7.522199999999979e-05, 7.481900000000027e-05, 7.519500000000012e-05, 7.468100000000005e-05, 7.526400000000197e-05, 7.506900000000052e-05, 7.536099999999948e-05, 7.466600000000101e-05, 7.501400000000172e-05, 7.504200000000086e-05, 7.497199999999954e-05, 7.500000000000215e-05, 7.526400000000197e-05, 7.455599999999993e-05, 7.536099999999948e-05, 7.536099999999948e-05, 7.495799999999997e-05, 7.518100000000055e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.481999999999975e-05, 7.540300000000166e-05, 7.538799999999915e-05, 7.450000000000165e-05, 7.52639999999985e-05, 7.545800000000047e-05, 7.538899999999862e-05, 7.544500000000037e-05, 7.451400000000122e-05, 7.486100000000245e-05, 7.479100000000113e-05, 7.481999999999975e-05, 7.454100000000088e-05, 7.450000000000165e-05, 7.469400000000015e-05, 7.49440000000004e-05, 7.487500000000202e-05, 7.454200000000036e-05, 7.53890000000021e-05, 7.52639999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:30:58.265" endtime="20201030 18:30:58.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.261" endtime="20201030 18:30:58.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.272" endtime="20201030 18:30:58.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.270" endtime="20201030 18:30:58.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.269" endtime="20201030 18:30:58.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.909" endtime="20201030 18:30:58.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.908" endtime="20201030 18:30:58.292"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.301" endtime="20201030 18:30:58.319"></status>
</kw>
<msg timestamp="20201030 18:30:58.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.299" endtime="20201030 18:30:58.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.321" endtime="20201030 18:30:58.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.323" endtime="20201030 18:30:58.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.297" endtime="20201030 18:30:58.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.295" endtime="20201030 18:30:58.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.332" endtime="20201030 18:30:58.620"></status>
</kw>
<msg timestamp="20201030 18:30:58.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021455958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.331" endtime="20201030 18:30:58.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021455958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.624" endtime="20201030 18:30:58.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.632" endtime="20201030 18:30:58.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.328" endtime="20201030 18:30:58.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.326" endtime="20201030 18:30:58.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.639" level="INFO">${RESULT} = [{'diff': 7.616699999999851e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.597300000000001e-05}, {'diff': 7.630599999999821e-05}, {'diff': 7.637500000000005e-05}, {'diff': 7.55700000000005e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:58.635" endtime="20201030 18:30:58.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:58.643" level="INFO">${ACCURACY} = {'diff': [7.616699999999851e-05, 7.56249999999993e-05, 7.597300000000001e-05, 7.630599999999821e-05, 7.637500000000005e-05, 7.55700000000005e-05, 7.549999999999918e-05, 7.630499999999873e-05, 7.599999...</msg>
<status status="PASS" starttime="20201030 18:30:58.640" endtime="20201030 18:30:58.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.647" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:30:58.646" endtime="20201030 18:30:58.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.650" level="INFO">VALUE: [7.616699999999851e-05, 7.56249999999993e-05, 7.597300000000001e-05, 7.630599999999821e-05, 7.637500000000005e-05, 7.55700000000005e-05, 7.549999999999918e-05, 7.630499999999873e-05, 7.599999999999968e-05, 7.609700000000066e-05, 7.637500000000005e-05, 7.5763999999999e-05, 7.644399999999843e-05, 7.545899999999994e-05, 7.580499999999823e-05, 7.568100000000105e-05, 7.595900000000044e-05, 7.599999999999968e-05, 7.624999999999993e-05, 7.56249999999993e-05, 7.568000000000158e-05, 7.624999999999993e-05, 7.555599999999746e-05, 7.586199999999946e-05, 7.577799999999857e-05, 7.58189999999978e-05, 7.645899999999747e-05, 7.605500000000195e-05, 7.591699999999826e-05, 7.549999999999918e-05, 7.619400000000165e-05, 7.630599999999821e-05, 7.561099999999973e-05, 7.619400000000165e-05, 7.616700000000198e-05, 7.641600000000276e-05, 7.615299999999894e-05, 7.561099999999973e-05, 7.58050000000017e-05, 7.606899999999805e-05, 7.586099999999998e-05, 7.641599999999929e-05, 7.586099999999998e-05, 7.604200000000186e-05, 7.616600000000251e-05, 7.561099999999973e-05, 7.636100000000048e-05, 7.606900000000152e-05, 7.573599999999986e-05, 7.644399999999843e-05]</msg>
<status status="PASS" starttime="20201030 18:30:58.648" endtime="20201030 18:30:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.644" endtime="20201030 18:30:58.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.655" endtime="20201030 18:30:58.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.653" endtime="20201030 18:30:58.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.652" endtime="20201030 18:30:58.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.293" endtime="20201030 18:30:58.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.293" endtime="20201030 18:30:58.675"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.684" endtime="20201030 18:30:58.703"></status>
</kw>
<msg timestamp="20201030 18:30:58.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.683" endtime="20201030 18:30:58.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.705" endtime="20201030 18:30:58.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.707" endtime="20201030 18:30:58.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.680" endtime="20201030 18:30:58.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.678" endtime="20201030 18:30:58.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.716" endtime="20201030 18:30:59.007"></status>
</kw>
<msg timestamp="20201030 18:30:59.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.714" endtime="20201030 18:30:59.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.014" endtime="20201030 18:30:59.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.024" endtime="20201030 18:30:59.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.712" endtime="20201030 18:30:59.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.710" endtime="20201030 18:30:59.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.036" level="INFO">${RESULT} = [{'diff': 7.788900000000112e-05}, {'diff': 7.654199999999889e-05}, {'diff': 7.669399999999868e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.743099999999933e-05}, {'diff': 7.675000000000043e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:59.030" endtime="20201030 18:30:59.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:59.044" level="INFO">${ACCURACY} = {'diff': [7.788900000000112e-05, 7.654199999999889e-05, 7.669399999999868e-05, 7.673600000000086e-05, 7.743099999999933e-05, 7.675000000000043e-05, 7.693099999999883e-05, 7.734699999999844e-05, 7.7069...</msg>
<status status="PASS" starttime="20201030 18:30:59.039" endtime="20201030 18:30:59.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.055" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:30:59.053" endtime="20201030 18:30:59.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.059" level="INFO">VALUE: [7.788900000000112e-05, 7.654199999999889e-05, 7.669399999999868e-05, 7.673600000000086e-05, 7.743099999999933e-05, 7.675000000000043e-05, 7.693099999999883e-05, 7.734699999999844e-05, 7.706999999999853e-05, 7.741600000000029e-05, 7.695900000000144e-05, 7.741600000000029e-05, 7.736200000000096e-05, 7.726300000000103e-05, 7.672199999999782e-05, 7.647299999999704e-05, 7.704099999999992e-05, 7.722200000000179e-05, 7.69579999999985e-05, 7.720900000000169e-05, 7.695800000000197e-05, 7.74440000000029e-05, 7.701400000000025e-05, 7.673599999999739e-05, 7.725000000000093e-05, 7.737500000000105e-05, 7.71250000000008e-05, 7.647200000000104e-05, 7.692999999999936e-05, 7.686100000000098e-05, 7.729100000000017e-05, 7.738899999999715e-05, 7.661100000000073e-05, 7.668099999999858e-05, 7.698600000000111e-05, 7.702799999999982e-05, 7.690300000000316e-05, 7.733300000000234e-05, 7.736100000000148e-05, 7.722300000000126e-05, 7.704199999999939e-05, 7.738800000000115e-05, 7.73189999999993e-05, 7.722199999999832e-05, 7.691699999999926e-05, 7.741600000000029e-05, 7.691699999999926e-05, 7.74030000000002e-05, 7.65830000000016e-05, 7.727800000000007e-05]</msg>
<status status="PASS" starttime="20201030 18:30:59.057" endtime="20201030 18:30:59.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.047" endtime="20201030 18:30:59.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.069" endtime="20201030 18:30:59.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.067" endtime="20201030 18:30:59.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.064" endtime="20201030 18:30:59.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.676" endtime="20201030 18:30:59.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.676" endtime="20201030 18:30:59.090"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.102" endtime="20201030 18:30:59.120"></status>
</kw>
<msg timestamp="20201030 18:30:59.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.099" endtime="20201030 18:30:59.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.122" endtime="20201030 18:30:59.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.125" endtime="20201030 18:30:59.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.095" endtime="20201030 18:30:59.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.093" endtime="20201030 18:30:59.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.136" endtime="20201030 18:30:59.421"></status>
</kw>
<msg timestamp="20201030 18:30:59.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.134" endtime="20201030 18:30:59.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.425" endtime="20201030 18:30:59.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.433" endtime="20201030 18:30:59.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.131" endtime="20201030 18:30:59.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.129" endtime="20201030 18:30:59.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.440" level="INFO">${RESULT} = [{'diff': 7.886099999999951e-05}, {'diff': 7.747200000000204e-05}, {'diff': 7.841700000000076e-05}, {'diff': 7.793099999999983e-05}, {'diff': 7.779100000000067e-05}, {'diff': 7.811099999999876e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:59.437" endtime="20201030 18:30:59.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:59.445" level="INFO">${ACCURACY} = {'diff': [7.886099999999951e-05, 7.747200000000204e-05, 7.841700000000076e-05, 7.793099999999983e-05, 7.779100000000067e-05, 7.811099999999876e-05, 7.779100000000067e-05, 7.830600000000021e-05, 7.8444...</msg>
<status status="PASS" starttime="20201030 18:30:59.441" endtime="20201030 18:30:59.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.449" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:30:59.448" endtime="20201030 18:30:59.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.452" level="INFO">VALUE: [7.886099999999951e-05, 7.747200000000204e-05, 7.841700000000076e-05, 7.793099999999983e-05, 7.779100000000067e-05, 7.811099999999876e-05, 7.779100000000067e-05, 7.830600000000021e-05, 7.84449999999999e-05, 7.779200000000014e-05, 7.769399999999968e-05, 7.774999999999796e-05, 7.804100000000092e-05, 7.77770000000011e-05, 7.840299999999772e-05, 7.770899999999872e-05, 7.833299999999987e-05, 7.830500000000074e-05, 7.754100000000042e-05, 7.793000000000036e-05, 7.747300000000151e-05, 7.79169999999968e-05, 7.816699999999704e-05, 7.816700000000051e-05, 7.818000000000061e-05, 7.752800000000032e-05, 7.816700000000051e-05, 7.841600000000129e-05, 7.779199999999667e-05, 7.805500000000049e-05, 7.798599999999864e-05, 7.770799999999925e-05, 7.748599999999814e-05, 7.747200000000204e-05, 7.754199999999989e-05, 7.748600000000161e-05, 7.763900000000087e-05, 7.761099999999826e-05, 7.748600000000161e-05, 7.761200000000121e-05, 7.768099999999958e-05, 7.811199999999824e-05, 7.834699999999944e-05, 7.805500000000049e-05, 7.747300000000151e-05, 7.801399999999778e-05, 7.786200000000146e-05, 7.754199999999989e-05, 7.8458e-05, 7.770899999999872e-05]</msg>
<status status="PASS" starttime="20201030 18:30:59.450" endtime="20201030 18:30:59.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.446" endtime="20201030 18:30:59.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.457" endtime="20201030 18:30:59.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.455" endtime="20201030 18:30:59.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.454" endtime="20201030 18:30:59.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.092" endtime="20201030 18:30:59.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.091" endtime="20201030 18:30:59.478"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.487" endtime="20201030 18:30:59.506"></status>
</kw>
<msg timestamp="20201030 18:30:59.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.485" endtime="20201030 18:30:59.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.507" endtime="20201030 18:30:59.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.510" endtime="20201030 18:30:59.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.482" endtime="20201030 18:30:59.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.480" endtime="20201030 18:30:59.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.519" endtime="20201030 18:30:59.805"></status>
</kw>
<msg timestamp="20201030 18:30:59.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.517" endtime="20201030 18:30:59.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.809" endtime="20201030 18:30:59.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.818" endtime="20201030 18:30:59.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.515" endtime="20201030 18:30:59.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.513" endtime="20201030 18:30:59.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.824" level="INFO">${RESULT} = [{'diff': 7.993100000000183e-05}, {'diff': 7.882000000000028e-05}, {'diff': 7.854100000000142e-05}, {'diff': 7.916699999999804e-05}, {'diff': 7.884699999999994e-05}, {'diff': 7.852799999999785e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:59.821" endtime="20201030 18:30:59.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:59.828" level="INFO">${ACCURACY} = {'diff': [7.993100000000183e-05, 7.882000000000028e-05, 7.854100000000142e-05, 7.916699999999804e-05, 7.884699999999994e-05, 7.852799999999785e-05, 7.912499999999933e-05, 7.866600000000154e-05, 7.8499...</msg>
<status status="PASS" starttime="20201030 18:30:59.825" endtime="20201030 18:30:59.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.833" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:30:59.832" endtime="20201030 18:30:59.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.835" level="INFO">VALUE: [7.993100000000183e-05, 7.882000000000028e-05, 7.854100000000142e-05, 7.916699999999804e-05, 7.884699999999994e-05, 7.852799999999785e-05, 7.912499999999933e-05, 7.866600000000154e-05, 7.849999999999871e-05, 7.849999999999871e-05, 7.904099999999845e-05, 7.890299999999822e-05, 7.884699999999994e-05, 7.927800000000207e-05, 7.902799999999835e-05, 7.886099999999951e-05, 7.941600000000229e-05, 7.872199999999982e-05, 7.862499999999883e-05, 7.854199999999742e-05, 7.848599999999914e-05, 7.936199999999949e-05, 7.850000000000218e-05, 7.924999999999946e-05, 7.891700000000126e-05, 7.898600000000311e-05, 7.912499999999933e-05, 7.898599999999964e-05, 7.880600000000071e-05, 7.924999999999946e-05, 7.880600000000071e-05, 7.90970000000002e-05, 7.924999999999946e-05, 7.879200000000114e-05, 7.915300000000194e-05, 7.848599999999914e-05, 7.879200000000114e-05, 7.929199999999817e-05, 7.883399999999985e-05, 7.854200000000089e-05, 7.929200000000164e-05, 7.869400000000068e-05, 7.936100000000001e-05, 7.883300000000037e-05, 7.930499999999827e-05, 7.912499999999933e-05, 7.924999999999946e-05, 7.86519999999985e-05, 7.854199999999742e-05, 7.855500000000099e-05]</msg>
<status status="PASS" starttime="20201030 18:30:59.834" endtime="20201030 18:30:59.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.829" endtime="20201030 18:30:59.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.845" endtime="20201030 18:30:59.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.844" endtime="20201030 18:30:59.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.843" endtime="20201030 18:30:59.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.478" endtime="20201030 18:30:59.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.478" endtime="20201030 18:30:59.866"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.875" endtime="20201030 18:30:59.894"></status>
</kw>
<msg timestamp="20201030 18:30:59.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.873" endtime="20201030 18:30:59.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.895" endtime="20201030 18:30:59.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.898" endtime="20201030 18:30:59.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.871" endtime="20201030 18:30:59.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.868" endtime="20201030 18:30:59.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.907" endtime="20201030 18:31:00.192"></status>
</kw>
<msg timestamp="20201030 18:31:00.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.905" endtime="20201030 18:31:00.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.196" endtime="20201030 18:31:00.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.205" endtime="20201030 18:31:00.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.903" endtime="20201030 18:31:00.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.901" endtime="20201030 18:31:00.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.211" level="INFO">${RESULT} = [{'diff': 8.008299999999816e-05}, {'diff': 7.998600000000064e-05}, {'diff': 8.044399999999896e-05}, {'diff': 8.011100000000076e-05}, {'diff': 8.03329999999984e-05}, {'diff': 7.948600000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:00.208" endtime="20201030 18:31:00.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.215" level="INFO">${ACCURACY} = {'diff': [8.008299999999816e-05, 7.998600000000064e-05, 8.044399999999896e-05, 8.011100000000076e-05, 8.03329999999984e-05, 7.948600000000014e-05, 7.990299999999922e-05, 7.986199999999999e-05, 8.03609...</msg>
<status status="PASS" starttime="20201030 18:31:00.212" endtime="20201030 18:31:00.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.220" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.219" endtime="20201030 18:31:00.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.222" level="INFO">VALUE: [8.008299999999816e-05, 7.998600000000064e-05, 8.044399999999896e-05, 8.011100000000076e-05, 8.03329999999984e-05, 7.948600000000014e-05, 7.990299999999922e-05, 7.986199999999999e-05, 8.036099999999755e-05, 8.022199999999785e-05, 7.968099999999811e-05, 7.963900000000287e-05, 8.025000000000046e-05, 7.966599999999907e-05, 8.012500000000033e-05, 7.97779999999991e-05, 8.029199999999917e-05, 7.984800000000042e-05, 7.991700000000226e-05, 7.966700000000201e-05, 7.965299999999897e-05, 7.998600000000064e-05, 7.983300000000138e-05, 7.99719999999976e-05, 8.025000000000046e-05, 8.01389999999999e-05, 8.029199999999917e-05, 7.994400000000193e-05, 8.02779999999996e-05, 7.9458000000001e-05, 8.001399999999978e-05, 7.979200000000214e-05, 7.949999999999971e-05, 7.986100000000051e-05, 8.000000000000021e-05, 8.034699999999798e-05, 7.979200000000214e-05, 7.967999999999864e-05, 8.036100000000101e-05, 7.968099999999811e-05, 8.030600000000221e-05, 8.033300000000188e-05, 7.952799999999885e-05, 8.036100000000101e-05, 8.022200000000132e-05, 8.01389999999999e-05, 7.992999999999889e-05, 8.020799999999828e-05, 8.006899999999859e-05, 7.966699999999854e-05]</msg>
<status status="PASS" starttime="20201030 18:31:00.221" endtime="20201030 18:31:00.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.216" endtime="20201030 18:31:00.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.228" endtime="20201030 18:31:00.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.227" endtime="20201030 18:31:00.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.225" endtime="20201030 18:31:00.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.867" endtime="20201030 18:31:00.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.866" endtime="20201030 18:31:00.249"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.257" endtime="20201030 18:31:00.276"></status>
</kw>
<msg timestamp="20201030 18:31:00.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.256" endtime="20201030 18:31:00.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.277" endtime="20201030 18:31:00.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.280" endtime="20201030 18:31:00.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.253" endtime="20201030 18:31:00.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.251" endtime="20201030 18:31:00.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.289" endtime="20201030 18:31:00.574"></status>
</kw>
<msg timestamp="20201030 18:31:00.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021490347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.287" endtime="20201030 18:31:00.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021490347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.579" endtime="20201030 18:31:00.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.587" endtime="20201030 18:31:00.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.285" endtime="20201030 18:31:00.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.283" endtime="20201030 18:31:00.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.594" level="INFO">${RESULT} = [{'diff': 8.131999999999931e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.144399999999996e-05}, {'diff': 8.100000000000121e-05}, {'diff': 8.141600000000082e-05}, {'diff': 8.104199999999992e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:00.591" endtime="20201030 18:31:00.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.599" level="INFO">${ACCURACY} = {'diff': [8.131999999999931e-05, 8.093099999999936e-05, 8.144399999999996e-05, 8.100000000000121e-05, 8.141600000000082e-05, 8.104199999999992e-05, 8.052799999999985e-05, 8.052799999999985e-05, 8.1249...</msg>
<status status="PASS" starttime="20201030 18:31:00.595" endtime="20201030 18:31:00.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.603" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.602" endtime="20201030 18:31:00.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.606" level="INFO">VALUE: [8.131999999999931e-05, 8.093099999999936e-05, 8.144399999999996e-05, 8.100000000000121e-05, 8.141600000000082e-05, 8.104199999999992e-05, 8.052799999999985e-05, 8.052799999999985e-05, 8.124999999999799e-05, 8.047200000000157e-05, 8.143000000000039e-05, 8.104199999999992e-05, 8.136099999999855e-05, 8.066600000000007e-05, 8.104100000000045e-05, 8.079199999999967e-05, 8.068100000000258e-05, 8.091600000000032e-05, 8.111100000000177e-05, 8.052800000000332e-05, 8.130500000000027e-05, 8.116700000000004e-05, 8.098599999999817e-05, 8.07910000000002e-05, 8.14170000000003e-05, 8.081899999999934e-05, 8.079199999999967e-05, 8.07910000000002e-05, 8.093099999999936e-05, 8.048600000000114e-05, 8.084699999999848e-05, 8.048600000000114e-05, 8.14170000000003e-05, 8.12780000000006e-05, 8.120799999999928e-05, 8.070799999999878e-05, 8.122199999999885e-05, 8.097300000000154e-05, 8.129200000000017e-05, 8.087500000000108e-05, 8.12369999999979e-05, 8.109699999999873e-05, 8.123600000000189e-05, 8.075000000000096e-05, 8.118099999999961e-05, 8.105500000000002e-05, 8.109699999999873e-05, 8.073600000000139e-05, 8.124999999999799e-05, 8.122199999999885e-05]</msg>
<status status="PASS" starttime="20201030 18:31:00.605" endtime="20201030 18:31:00.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.600" endtime="20201030 18:31:00.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.611" endtime="20201030 18:31:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.609" endtime="20201030 18:31:00.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.608" endtime="20201030 18:31:00.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.250" endtime="20201030 18:31:00.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.249" endtime="20201030 18:31:00.632"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.640" endtime="20201030 18:31:00.659"></status>
</kw>
<msg timestamp="20201030 18:31:00.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.639" endtime="20201030 18:31:00.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.660" endtime="20201030 18:31:00.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.663" endtime="20201030 18:31:00.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.636" endtime="20201030 18:31:00.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.634" endtime="20201030 18:31:00.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.672" endtime="20201030 18:31:00.959"></status>
</kw>
<msg timestamp="20201030 18:31:00.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.670" endtime="20201030 18:31:00.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.963" endtime="20201030 18:31:00.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.971" endtime="20201030 18:31:00.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.668" endtime="20201030 18:31:00.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.666" endtime="20201030 18:31:00.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.978" level="INFO">${RESULT} = [{'diff': 8.272199999999688e-05}, {'diff': 8.22780000000016e-05}, {'diff': 8.193000000000089e-05}, {'diff': 8.195800000000003e-05}, {'diff': 8.161199999999827e-05}, {'diff': 8.166700000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:00.975" endtime="20201030 18:31:00.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.982" level="INFO">${ACCURACY} = {'diff': [8.272199999999688e-05, 8.22780000000016e-05, 8.193000000000089e-05, 8.195800000000003e-05, 8.161199999999827e-05, 8.166700000000054e-05, 8.234699999999998e-05, 8.155500000000052e-05, 8.24859...</msg>
<status status="PASS" starttime="20201030 18:31:00.979" endtime="20201030 18:31:00.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.986" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.985" endtime="20201030 18:31:00.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.989" level="INFO">VALUE: [8.272199999999688e-05, 8.22780000000016e-05, 8.193000000000089e-05, 8.195800000000003e-05, 8.161199999999827e-05, 8.166700000000054e-05, 8.234699999999998e-05, 8.155500000000052e-05, 8.248599999999967e-05, 8.158299999999966e-05, 8.183399999999938e-05, 8.18329999999999e-05, 8.216699999999758e-05, 8.152800000000085e-05, 8.16109999999988e-05, 8.223599999999942e-05, 8.209800000000267e-05, 8.216699999999758e-05, 8.161100000000227e-05, 8.18329999999999e-05, 8.180500000000077e-05, 8.19170000000008e-05, 8.195800000000003e-05, 8.234799999999945e-05, 8.216700000000104e-05, 8.166700000000054e-05, 8.173600000000239e-05, 8.205499999999755e-05, 8.234699999999998e-05, 8.22919999999977e-05, 8.155599999999999e-05, 8.198599999999917e-05, 8.176400000000153e-05, 8.179200000000067e-05, 8.149999999999824e-05, 8.241599999999835e-05, 8.187499999999862e-05, 8.15979999999987e-05, 8.243100000000086e-05, 8.219400000000071e-05, 8.173599999999892e-05, 8.152700000000138e-05, 8.198600000000264e-05, 8.155500000000052e-05, 8.22780000000016e-05, 8.14719999999991e-05, 8.154200000000042e-05, 8.237499999999912e-05, 8.18329999999999e-05, 8.23330000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:31:00.987" endtime="20201030 18:31:00.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.983" endtime="20201030 18:31:00.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.994" endtime="20201030 18:31:01.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.992" endtime="20201030 18:31:01.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.991" endtime="20201030 18:31:01.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.633" endtime="20201030 18:31:01.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.632" endtime="20201030 18:31:01.015"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.026" endtime="20201030 18:31:01.046"></status>
</kw>
<msg timestamp="20201030 18:31:01.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.024" endtime="20201030 18:31:01.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.049" endtime="20201030 18:31:01.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.053" endtime="20201030 18:31:01.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.021" endtime="20201030 18:31:01.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.018" endtime="20201030 18:31:01.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.066" endtime="20201030 18:31:01.353"></status>
</kw>
<msg timestamp="20201030 18:31:01.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026064833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026148431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.064" endtime="20201030 18:31:01.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026064833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026148431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.358" endtime="20201030 18:31:01.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.366" endtime="20201030 18:31:01.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.061" endtime="20201030 18:31:01.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.058" endtime="20201030 18:31:01.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.372" level="INFO">${RESULT} = [{'diff': 8.35980000000007e-05}, {'diff': 8.252800000000185e-05}, {'diff': 8.338899999999969e-05}, {'diff': 8.25130000000028e-05}, {'diff': 8.252799999999838e-05}, {'diff': 8.342999999999892e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:01.369" endtime="20201030 18:31:01.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:01.376" level="INFO">${ACCURACY} = {'diff': [8.35980000000007e-05, 8.252800000000185e-05, 8.338899999999969e-05, 8.25130000000028e-05, 8.252799999999838e-05, 8.342999999999892e-05, 8.290299999999876e-05, 8.27780000000021e-05, 8.3249999...</msg>
<status status="PASS" starttime="20201030 18:31:01.373" endtime="20201030 18:31:01.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.381" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:31:01.380" endtime="20201030 18:31:01.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.383" level="INFO">VALUE: [8.35980000000007e-05, 8.252800000000185e-05, 8.338899999999969e-05, 8.25130000000028e-05, 8.252799999999838e-05, 8.342999999999892e-05, 8.290299999999876e-05, 8.27780000000021e-05, 8.324999999999999e-05, 8.27780000000021e-05, 8.331900000000184e-05, 8.309700000000073e-05, 8.295799999999756e-05, 8.276400000000253e-05, 8.281899999999787e-05, 8.31110000000003e-05, 8.340299999999926e-05, 8.327699999999966e-05, 8.327799999999913e-05, 8.338800000000021e-05, 8.295800000000103e-05, 8.27919999999982e-05, 8.340299999999926e-05, 8.284799999999995e-05, 8.276399999999906e-05, 8.270900000000025e-05, 8.266600000000207e-05, 8.295799999999756e-05, 8.315199999999953e-05, 8.254200000000142e-05, 8.248599999999967e-05, 8.322200000000085e-05, 8.28330000000009e-05, 8.316699999999858e-05, 8.327799999999913e-05, 8.287499999999962e-05, 8.304199999999845e-05, 8.291699999999833e-05, 8.283400000000038e-05, 8.316699999999858e-05, 8.333299999999794e-05, 8.254200000000489e-05, 8.25840000000036e-05, 8.318100000000161e-05, 8.272299999999982e-05, 8.277799999999863e-05, 8.283399999999691e-05, 8.30970000000042e-05, 8.272200000000035e-05, 8.270799999999384e-05]</msg>
<status status="PASS" starttime="20201030 18:31:01.382" endtime="20201030 18:31:01.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.377" endtime="20201030 18:31:01.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.389" endtime="20201030 18:31:01.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.388" endtime="20201030 18:31:01.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.386" endtime="20201030 18:31:01.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.015" endtime="20201030 18:31:01.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.015" endtime="20201030 18:31:01.410"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.418" endtime="20201030 18:31:01.437"></status>
</kw>
<msg timestamp="20201030 18:31:01.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.417" endtime="20201030 18:31:01.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.438" endtime="20201030 18:31:01.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.441" endtime="20201030 18:31:01.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.414" endtime="20201030 18:31:01.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.412" endtime="20201030 18:31:01.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.450" endtime="20201030 18:31:01.736"></status>
</kw>
<msg timestamp="20201030 18:31:01.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.448" endtime="20201030 18:31:01.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.740" endtime="20201030 18:31:01.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.748" endtime="20201030 18:31:01.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.446" endtime="20201030 18:31:01.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.444" endtime="20201030 18:31:01.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.755" level="INFO">${RESULT} = [{'diff': 8.413900000000044e-05}, {'diff': 8.395899999999804e-05}, {'diff': 8.375000000000049e-05}, {'diff': 8.395899999999804e-05}, {'diff': 8.36110000000008e-05}, {'diff': 8.413899999999697e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:01.751" endtime="20201030 18:31:01.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:01.762" level="INFO">${ACCURACY} = {'diff': [8.413900000000044e-05, 8.395899999999804e-05, 8.375000000000049e-05, 8.395899999999804e-05, 8.36110000000008e-05, 8.413899999999697e-05, 8.4153e-05, 8.36659999999996e-05, 8.420800000000228e-...</msg>
<status status="PASS" starttime="20201030 18:31:01.755" endtime="20201030 18:31:01.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.766" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:31:01.765" endtime="20201030 18:31:01.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.769" level="INFO">VALUE: [8.413900000000044e-05, 8.395899999999804e-05, 8.375000000000049e-05, 8.395899999999804e-05, 8.36110000000008e-05, 8.413899999999697e-05, 8.4153e-05, 8.36659999999996e-05, 8.420800000000228e-05, 8.352799999999938e-05, 8.427700000000066e-05, 8.420799999999881e-05, 8.397300000000107e-05, 8.427799999999666e-05, 8.3846999999998e-05, 8.350000000000024e-05, 8.36110000000008e-05, 8.402799999999988e-05, 8.442999999999992e-05, 8.358299999999819e-05, 8.433299999999894e-05, 8.409700000000173e-05, 8.413900000000044e-05, 8.34720000000011e-05, 8.438900000000069e-05, 8.407000000000206e-05, 8.347300000000057e-05, 8.424999999999752e-05, 8.398600000000117e-05, 8.411200000000077e-05, 8.418099999999915e-05, 8.420900000000175e-05, 8.430599999999927e-05, 8.337500000000012e-05, 8.3459000000001e-05, 8.362500000000037e-05, 8.370899999999779e-05, 8.363899999999994e-05, 8.401400000000031e-05, 8.427800000000013e-05, 8.370800000000178e-05, 8.413900000000044e-05, 8.401400000000031e-05, 8.370799999999831e-05, 8.38049999999993e-05, 8.354100000000295e-05, 8.390299999999976e-05, 8.427800000000013e-05, 8.400000000000074e-05, 8.347199999999763e-05]</msg>
<status status="PASS" starttime="20201030 18:31:01.767" endtime="20201030 18:31:01.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.763" endtime="20201030 18:31:01.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.774" endtime="20201030 18:31:01.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.772" endtime="20201030 18:31:01.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.771" endtime="20201030 18:31:01.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.411" endtime="20201030 18:31:01.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.410" endtime="20201030 18:31:01.795"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.803" endtime="20201030 18:31:01.822"></status>
</kw>
<msg timestamp="20201030 18:31:01.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.802" endtime="20201030 18:31:01.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.823" endtime="20201030 18:31:01.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.826" endtime="20201030 18:31:01.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.799" endtime="20201030 18:31:01.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.797" endtime="20201030 18:31:01.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.835" endtime="20201030 18:31:02.122"></status>
</kw>
<msg timestamp="20201030 18:31:02.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.833" endtime="20201030 18:31:02.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.127" endtime="20201030 18:31:02.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.137" endtime="20201030 18:31:02.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.830" endtime="20201030 18:31:02.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.829" endtime="20201030 18:31:02.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.147" level="INFO">${RESULT} = [{'diff': 8.508299999999969e-05}, {'diff': 8.494399999999999e-05}, {'diff': 8.49859999999987e-05}, {'diff': 8.458299999999919e-05}, {'diff': 8.450000000000124e-05}, {'diff': 8.5153000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:02.142" endtime="20201030 18:31:02.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.152" level="INFO">${ACCURACY} = {'diff': [8.508299999999969e-05, 8.494399999999999e-05, 8.49859999999987e-05, 8.458299999999919e-05, 8.450000000000124e-05, 8.5153000000001e-05, 8.504100000000098e-05, 8.531900000000037e-05, 8.5332999...</msg>
<status status="PASS" starttime="20201030 18:31:02.148" endtime="20201030 18:31:02.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.157" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.156" endtime="20201030 18:31:02.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.160" level="INFO">VALUE: [8.508299999999969e-05, 8.494399999999999e-05, 8.49859999999987e-05, 8.458299999999919e-05, 8.450000000000124e-05, 8.5153000000001e-05, 8.504100000000098e-05, 8.531900000000037e-05, 8.533299999999994e-05, 8.46530000000005e-05, 8.444399999999949e-05, 8.458299999999919e-05, 8.506999999999959e-05, 8.481899999999987e-05, 8.46530000000005e-05, 8.470800000000278e-05, 8.526399999999809e-05, 8.51660000000011e-05, 8.520799999999981e-05, 8.519499999999972e-05, 8.465199999999756e-05, 8.506900000000012e-05, 8.477800000000063e-05, 8.526400000000156e-05, 8.529100000000123e-05, 8.538899999999822e-05, 8.519499999999972e-05, 8.48330000000029e-05, 8.470799999999931e-05, 8.533399999999941e-05, 8.527799999999766e-05, 8.474999999999802e-05, 8.509699999999926e-05, 8.463900000000094e-05, 8.538899999999822e-05, 8.506999999999959e-05, 8.504200000000045e-05, 8.46530000000005e-05, 8.490300000000076e-05, 8.48050000000003e-05, 8.495799999999956e-05, 8.44309999999994e-05, 8.476400000000106e-05, 8.527800000000113e-05, 8.477700000000116e-05, 8.53050000000008e-05, 8.487499999999815e-05, 8.533299999999994e-05, 8.458399999999866e-05, 8.44859999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:31:02.159" endtime="20201030 18:31:02.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.154" endtime="20201030 18:31:02.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.165" endtime="20201030 18:31:02.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.163" endtime="20201030 18:31:02.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.162" endtime="20201030 18:31:02.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.795" endtime="20201030 18:31:02.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.795" endtime="20201030 18:31:02.186"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.194" endtime="20201030 18:31:02.214"></status>
</kw>
<msg timestamp="20201030 18:31:02.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.193" endtime="20201030 18:31:02.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.215" endtime="20201030 18:31:02.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.218" endtime="20201030 18:31:02.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.190" endtime="20201030 18:31:02.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.188" endtime="20201030 18:31:02.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.227" endtime="20201030 18:31:02.512"></status>
</kw>
<msg timestamp="20201030 18:31:02.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.225" endtime="20201030 18:31:02.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.516" endtime="20201030 18:31:02.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.524" endtime="20201030 18:31:02.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.223" endtime="20201030 18:31:02.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.221" endtime="20201030 18:31:02.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.531" level="INFO">${RESULT} = [{'diff': 8.701399999999984e-05}, {'diff': 8.551399999999834e-05}, {'diff': 8.568100000000065e-05}, {'diff': 8.570800000000031e-05}, {'diff': 8.559699999999976e-05}, {'diff': 8.570899999999979e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:02.528" endtime="20201030 18:31:02.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.535" level="INFO">${ACCURACY} = {'diff': [8.701399999999984e-05, 8.551399999999834e-05, 8.568100000000065e-05, 8.570800000000031e-05, 8.559699999999976e-05, 8.570899999999979e-05, 8.627699999999919e-05, 8.583300000000044e-05, 8.6277...</msg>
<status status="PASS" starttime="20201030 18:31:02.532" endtime="20201030 18:31:02.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.539" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.538" endtime="20201030 18:31:02.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.542" level="INFO">VALUE: [8.701399999999984e-05, 8.551399999999834e-05, 8.568100000000065e-05, 8.570800000000031e-05, 8.559699999999976e-05, 8.570899999999979e-05, 8.627699999999919e-05, 8.583300000000044e-05, 8.627799999999866e-05, 8.545800000000006e-05, 8.576399999999859e-05, 8.594500000000047e-05, 8.570799999999684e-05, 8.54859999999992e-05, 8.569500000000022e-05, 8.551399999999834e-05, 8.609700000000026e-05, 8.565299999999804e-05, 8.627800000000213e-05, 8.627800000000213e-05, 8.570800000000031e-05, 8.583300000000044e-05, 8.619500000000072e-05, 8.57920000000012e-05, 8.595900000000004e-05, 8.638899999999922e-05, 8.597200000000013e-05, 8.551400000000181e-05, 8.606900000000112e-05, 8.606899999999765e-05, 8.633400000000041e-05, 8.597200000000013e-05, 8.641599999999888e-05, 8.615199999999906e-05, 8.615199999999906e-05, 8.559799999999923e-05, 8.581900000000087e-05, 8.64310000000014e-05, 8.594500000000047e-05, 8.572199999999988e-05, 8.595800000000056e-05, 8.56669999999976e-05, 8.552799999999791e-05, 8.570899999999979e-05, 8.633399999999694e-05, 8.549999999999877e-05, 8.602799999999841e-05, 8.558300000000019e-05, 8.606999999999712e-05, 8.616700000000158e-05]</msg>
<status status="PASS" starttime="20201030 18:31:02.541" endtime="20201030 18:31:02.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.536" endtime="20201030 18:31:02.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.548" endtime="20201030 18:31:02.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.546" endtime="20201030 18:31:02.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.545" endtime="20201030 18:31:02.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.187" endtime="20201030 18:31:02.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.186" endtime="20201030 18:31:02.568"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.577" endtime="20201030 18:31:02.596"></status>
</kw>
<msg timestamp="20201030 18:31:02.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.576" endtime="20201030 18:31:02.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.597" endtime="20201030 18:31:02.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.600" endtime="20201030 18:31:02.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.573" endtime="20201030 18:31:02.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.571" endtime="20201030 18:31:02.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.610" endtime="20201030 18:31:02.896"></status>
</kw>
<msg timestamp="20201030 18:31:02.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.608" endtime="20201030 18:31:02.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.900" endtime="20201030 18:31:02.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.908" endtime="20201030 18:31:02.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.605" endtime="20201030 18:31:02.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.603" endtime="20201030 18:31:02.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.915" level="INFO">${RESULT} = [{'diff': 8.706899999999865e-05}, {'diff': 8.647200000000063e-05}, {'diff': 8.64730000000001e-05}, {'diff': 8.684699999999754e-05}, {'diff': 8.707000000000159e-05}, {'diff': 8.670799999999784e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:02.912" endtime="20201030 18:31:02.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.920" level="INFO">${ACCURACY} = {'diff': [8.706899999999865e-05, 8.647200000000063e-05, 8.64730000000001e-05, 8.684699999999754e-05, 8.707000000000159e-05, 8.670799999999784e-05, 8.715299999999954e-05, 8.693099999999843e-05, 8.64720...</msg>
<status status="PASS" starttime="20201030 18:31:02.916" endtime="20201030 18:31:02.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.924" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.923" endtime="20201030 18:31:02.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.927" level="INFO">VALUE: [8.706899999999865e-05, 8.647200000000063e-05, 8.64730000000001e-05, 8.684699999999754e-05, 8.707000000000159e-05, 8.670799999999784e-05, 8.715299999999954e-05, 8.693099999999843e-05, 8.647200000000063e-05, 8.691599999999938e-05, 8.726400000000009e-05, 8.738900000000022e-05, 8.652700000000291e-05, 8.726400000000009e-05, 8.71250000000004e-05, 8.665199999999956e-05, 8.740299999999979e-05, 8.670799999999784e-05, 8.740299999999979e-05, 8.694399999999852e-05, 8.690300000000276e-05, 8.690300000000276e-05, 8.740199999999684e-05, 8.738900000000022e-05, 8.713899999999997e-05, 8.726300000000062e-05, 8.647200000000063e-05, 8.670800000000131e-05, 8.718100000000215e-05, 8.688899999999972e-05, 8.675000000000002e-05, 8.683300000000144e-05, 8.666700000000208e-05, 8.690199999999981e-05, 8.715299999999954e-05, 8.729199999999923e-05, 8.711099999999736e-05, 8.727799999999966e-05, 8.688899999999972e-05, 8.687500000000015e-05, 8.690299999999929e-05, 8.722199999999791e-05, 8.643099999999793e-05, 8.719399999999877e-05, 8.719500000000172e-05, 8.738900000000022e-05, 8.688899999999972e-05, 8.740299999999979e-05, 8.645800000000106e-05, 8.740299999999979e-05]</msg>
<status status="PASS" starttime="20201030 18:31:02.925" endtime="20201030 18:31:02.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.921" endtime="20201030 18:31:02.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.932" endtime="20201030 18:31:02.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.930" endtime="20201030 18:31:02.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.929" endtime="20201030 18:31:02.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.569" endtime="20201030 18:31:02.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.569" endtime="20201030 18:31:02.953"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.961" endtime="20201030 18:31:02.980"></status>
</kw>
<msg timestamp="20201030 18:31:02.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.960" endtime="20201030 18:31:02.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.981" endtime="20201030 18:31:02.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.984" endtime="20201030 18:31:02.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.957" endtime="20201030 18:31:02.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.955" endtime="20201030 18:31:02.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.993" endtime="20201030 18:31:03.279"></status>
</kw>
<msg timestamp="20201030 18:31:03.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.991" endtime="20201030 18:31:03.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.283" endtime="20201030 18:31:03.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.291" endtime="20201030 18:31:03.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.989" endtime="20201030 18:31:03.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.987" endtime="20201030 18:31:03.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.298" level="INFO">${RESULT} = [{'diff': 8.812499999999793e-05}, {'diff': 8.83059999999998e-05}, {'diff': 8.756999999999862e-05}, {'diff': 8.776300000000112e-05}, {'diff': 8.769399999999927e-05}, {'diff': 8.806899999999965e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:03.295" endtime="20201030 18:31:03.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:03.302" level="INFO">${ACCURACY} = {'diff': [8.812499999999793e-05, 8.83059999999998e-05, 8.756999999999862e-05, 8.776300000000112e-05, 8.769399999999927e-05, 8.806899999999965e-05, 8.806899999999965e-05, 8.763900000000047e-05, 8.80699...</msg>
<status status="PASS" starttime="20201030 18:31:03.299" endtime="20201030 18:31:03.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.307" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:31:03.305" endtime="20201030 18:31:03.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.309" level="INFO">VALUE: [8.812499999999793e-05, 8.83059999999998e-05, 8.756999999999862e-05, 8.776300000000112e-05, 8.769399999999927e-05, 8.806899999999965e-05, 8.806899999999965e-05, 8.763900000000047e-05, 8.806999999999912e-05, 8.774999999999755e-05, 8.794399999999952e-05, 8.761100000000133e-05, 8.840299999999732e-05, 8.79860000000017e-05, 8.763900000000047e-05, 8.831999999999937e-05, 8.76250000000009e-05, 8.826400000000109e-05, 8.811099999999836e-05, 8.791699999999986e-05, 8.806899999999965e-05, 8.818099999999968e-05, 8.7944999999999e-05, 8.826299999999815e-05, 8.783299999999897e-05, 8.770800000000231e-05, 8.831999999999937e-05, 8.838800000000174e-05, 8.802700000000094e-05, 8.788899999999725e-05, 8.808299999999922e-05, 8.745899999999807e-05, 8.755499999999958e-05, 8.838900000000122e-05, 8.747199999999816e-05, 8.76669999999996e-05, 8.795900000000204e-05, 8.742999999999945e-05, 8.809700000000226e-05, 8.840200000000131e-05, 8.787499999999768e-05, 8.756899999999915e-05, 8.74449999999985e-05, 8.831999999999937e-05, 8.756899999999915e-05, 8.766700000000308e-05, 8.750000000000077e-05, 8.751400000000034e-05, 8.76669999999996e-05, 8.805600000000302e-05]</msg>
<status status="PASS" starttime="20201030 18:31:03.308" endtime="20201030 18:31:03.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.303" endtime="20201030 18:31:03.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.314" endtime="20201030 18:31:03.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.312" endtime="20201030 18:31:03.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.311" endtime="20201030 18:31:03.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.953" endtime="20201030 18:31:03.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.953" endtime="20201030 18:31:03.335"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.343" endtime="20201030 18:31:03.363"></status>
</kw>
<msg timestamp="20201030 18:31:03.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.342" endtime="20201030 18:31:03.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.364" endtime="20201030 18:31:03.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.367" endtime="20201030 18:31:03.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.339" endtime="20201030 18:31:03.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.337" endtime="20201030 18:31:03.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.376" endtime="20201030 18:31:03.661"></status>
</kw>
<msg timestamp="20201030 18:31:03.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.374" endtime="20201030 18:31:03.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.666" endtime="20201030 18:31:03.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.674" endtime="20201030 18:31:03.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.372" endtime="20201030 18:31:03.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.370" endtime="20201030 18:31:03.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.680" level="INFO">${RESULT} = [{'diff': 8.965300000000204e-05}, {'diff': 8.86670000000006e-05}, {'diff': 8.873600000000245e-05}, {'diff': 8.920899999999982e-05}, {'diff': 8.938899999999875e-05}, {'diff': 8.856900000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:03.677" endtime="20201030 18:31:03.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:03.685" level="INFO">${ACCURACY} = {'diff': [8.965300000000204e-05, 8.86670000000006e-05, 8.873600000000245e-05, 8.920899999999982e-05, 8.938899999999875e-05, 8.856900000000015e-05, 8.905500000000108e-05, 8.902699999999847e-05, 8.84440...</msg>
<status status="PASS" starttime="20201030 18:31:03.681" endtime="20201030 18:31:03.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.689" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:31:03.688" endtime="20201030 18:31:03.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.692" level="INFO">VALUE: [8.965300000000204e-05, 8.86670000000006e-05, 8.873600000000245e-05, 8.920899999999982e-05, 8.938899999999875e-05, 8.856900000000015e-05, 8.905500000000108e-05, 8.902699999999847e-05, 8.844400000000002e-05, 8.859699999999929e-05, 8.877800000000116e-05, 8.916599999999816e-05, 8.844400000000002e-05, 8.877800000000116e-05, 8.916599999999816e-05, 8.841700000000036e-05, 8.91670000000011e-05, 8.852699999999797e-05, 8.844500000000297e-05, 8.858400000000266e-05, 8.866600000000113e-05, 8.93190000000009e-05, 8.881999999999987e-05, 8.934800000000298e-05, 8.908300000000022e-05, 8.845799999999959e-05, 8.893100000000043e-05, 8.895800000000009e-05, 8.902699999999847e-05, 8.908399999999969e-05, 8.888899999999825e-05, 8.901400000000184e-05, 8.926300000000262e-05, 8.884699999999954e-05, 8.851400000000134e-05, 8.926399999999862e-05, 8.926400000000209e-05, 8.927799999999819e-05, 8.881999999999987e-05, 8.858299999999972e-05, 8.909699999999979e-05, 8.880500000000083e-05, 8.904199999999751e-05, 8.84449999999995e-05, 8.845799999999959e-05, 8.938900000000222e-05, 8.8945e-05, 8.888900000000172e-05, 8.908299999999675e-05, 8.916600000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:31:03.690" endtime="20201030 18:31:03.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.685" endtime="20201030 18:31:03.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.697" endtime="20201030 18:31:03.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.696" endtime="20201030 18:31:03.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.695" endtime="20201030 18:31:03.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.336" endtime="20201030 18:31:03.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.335" endtime="20201030 18:31:03.718"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.727" endtime="20201030 18:31:03.745"></status>
</kw>
<msg timestamp="20201030 18:31:03.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.725" endtime="20201030 18:31:03.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.747" endtime="20201030 18:31:03.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.749" endtime="20201030 18:31:03.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.723" endtime="20201030 18:31:03.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.721" endtime="20201030 18:31:03.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.758" endtime="20201030 18:31:04.044"></status>
</kw>
<msg timestamp="20201030 18:31:04.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.757" endtime="20201030 18:31:04.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.048" endtime="20201030 18:31:04.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.057" endtime="20201030 18:31:04.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.754" endtime="20201030 18:31:04.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.753" endtime="20201030 18:31:04.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.063" level="INFO">${RESULT} = [{'diff': 9.03060000000018e-05}, {'diff': 8.945799999999712e-05}, {'diff': 8.947200000000016e-05}, {'diff': 8.993100000000143e-05}, {'diff': 8.945800000000059e-05}, {'diff': 9.01389999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:04.060" endtime="20201030 18:31:04.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.068" level="INFO">${ACCURACY} = {'diff': [9.03060000000018e-05, 8.945799999999712e-05, 8.947200000000016e-05, 8.993100000000143e-05, 8.945800000000059e-05, 9.01389999999995e-05, 8.945900000000007e-05, 9.01519999999996e-05, 9.0179999...</msg>
<status status="PASS" starttime="20201030 18:31:04.064" endtime="20201030 18:31:04.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.073" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.072" endtime="20201030 18:31:04.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.075" level="INFO">VALUE: [9.03060000000018e-05, 8.945799999999712e-05, 8.947200000000016e-05, 8.993100000000143e-05, 8.945800000000059e-05, 9.01389999999995e-05, 8.945900000000007e-05, 9.01519999999996e-05, 9.017999999999873e-05, 9.03199999999979e-05, 8.967999999999823e-05, 8.968100000000118e-05, 8.997300000000014e-05, 9.008300000000122e-05, 9.005600000000155e-05, 9.025000000000005e-05, 8.99999999999998e-05, 9.019500000000125e-05, 8.987499999999968e-05, 8.958299999999725e-05, 8.990299999999882e-05, 9.01939999999983e-05, 8.962499999999943e-05, 8.976399999999912e-05, 8.998600000000023e-05, 9.005599999999808e-05, 8.998600000000023e-05, 9.016699999999864e-05, 9.017999999999873e-05, 8.99999999999998e-05, 8.948599999999973e-05, 8.980499999999836e-05, 8.997200000000066e-05, 9.018100000000168e-05, 8.947200000000016e-05, 8.983400000000044e-05, 9.026399999999962e-05, 9.025000000000005e-05, 8.988900000000272e-05, 9.026399999999962e-05, 8.969500000000075e-05, 8.948599999999973e-05, 8.94999999999993e-05, 9.001399999999937e-05, 8.94450000000005e-05, 9.032000000000137e-05, 8.940299999999832e-05, 8.983300000000097e-05, 9.030499999999886e-05, 9.019500000000125e-05]</msg>
<status status="PASS" starttime="20201030 18:31:04.074" endtime="20201030 18:31:04.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.069" endtime="20201030 18:31:04.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.080" endtime="20201030 18:31:04.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.079" endtime="20201030 18:31:04.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.077" endtime="20201030 18:31:04.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.719" endtime="20201030 18:31:04.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.718" endtime="20201030 18:31:04.101"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.109" endtime="20201030 18:31:04.128"></status>
</kw>
<msg timestamp="20201030 18:31:04.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.108" endtime="20201030 18:31:04.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.130" endtime="20201030 18:31:04.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.132" endtime="20201030 18:31:04.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.105" endtime="20201030 18:31:04.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.103" endtime="20201030 18:31:04.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.141" endtime="20201030 18:31:04.428"></status>
</kw>
<msg timestamp="20201030 18:31:04.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.140" endtime="20201030 18:31:04.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.432" endtime="20201030 18:31:04.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.441" endtime="20201030 18:31:04.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.137" endtime="20201030 18:31:04.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.135" endtime="20201030 18:31:04.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.447" level="INFO">${RESULT} = [{'diff': 9.109700000000179e-05}, {'diff': 9.06520000000001e-05}, {'diff': 9.0945000000002e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.08190000000024e-05}, {'diff': 9.087500000000068e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:31:04.444" endtime="20201030 18:31:04.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.451" level="INFO">${ACCURACY} = {'diff': [9.109700000000179e-05, 9.06520000000001e-05, 9.0945000000002e-05, 9.075000000000055e-05, 9.08190000000024e-05, 9.087500000000068e-05, 9.111099999999789e-05, 9.055499999999911e-05, 9.13190000...</msg>
<status status="PASS" starttime="20201030 18:31:04.448" endtime="20201030 18:31:04.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.456" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.455" endtime="20201030 18:31:04.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.458" level="INFO">VALUE: [9.109700000000179e-05, 9.06520000000001e-05, 9.0945000000002e-05, 9.075000000000055e-05, 9.08190000000024e-05, 9.087500000000068e-05, 9.111099999999789e-05, 9.055499999999911e-05, 9.13190000000029e-05, 9.125000000000105e-05, 9.117999999999973e-05, 9.117999999999973e-05, 9.125000000000105e-05, 9.062500000000043e-05, 9.04450000000015e-05, 9.073600000000098e-05, 9.059700000000129e-05, 9.073599999999751e-05, 9.143099999999946e-05, 9.098600000000123e-05, 9.123600000000148e-05, 9.131899999999943e-05, 9.125000000000105e-05, 9.092999999999948e-05, 9.08199999999984e-05, 9.069499999999828e-05, 9.072300000000089e-05, 9.054199999999901e-05, 9.068099999999871e-05, 9.112500000000093e-05, 9.041699999999889e-05, 9.086100000000111e-05, 9.056999999999815e-05, 9.123599999999801e-05, 9.111100000000136e-05, 9.066599999999966e-05, 9.086200000000058e-05, 9.102799999999994e-05, 9.106900000000265e-05, 9.066699999999914e-05, 9.108299999999875e-05, 9.105600000000255e-05, 9.069500000000175e-05, 9.140299999999685e-05, 9.082000000000187e-05, 9.142999999999998e-05, 9.061200000000033e-05, 9.10139999999969e-05, 9.125000000000105e-05, 9.056899999999868e-05]</msg>
<status status="PASS" starttime="20201030 18:31:04.457" endtime="20201030 18:31:04.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.452" endtime="20201030 18:31:04.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.463" endtime="20201030 18:31:04.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.462" endtime="20201030 18:31:04.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.460" endtime="20201030 18:31:04.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.102" endtime="20201030 18:31:04.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.101" endtime="20201030 18:31:04.484"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.493" endtime="20201030 18:31:04.513"></status>
</kw>
<msg timestamp="20201030 18:31:04.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.491" endtime="20201030 18:31:04.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.514" endtime="20201030 18:31:04.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.516" endtime="20201030 18:31:04.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.489" endtime="20201030 18:31:04.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.487" endtime="20201030 18:31:04.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.526" endtime="20201030 18:31:04.812"></status>
</kw>
<msg timestamp="20201030 18:31:04.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.524" endtime="20201030 18:31:04.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.816" endtime="20201030 18:31:04.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.824" endtime="20201030 18:31:04.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.521" endtime="20201030 18:31:04.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.520" endtime="20201030 18:31:04.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.831" level="INFO">${RESULT} = [{'diff': 9.247200000000316e-05}, {'diff': 9.149999999999783e-05}, {'diff': 9.184699999999907e-05}, {'diff': 9.141599999999694e-05}, {'diff': 9.205500000000061e-05}, {'diff': 9.158400000000219e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:04.827" endtime="20201030 18:31:04.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.835" level="INFO">${ACCURACY} = {'diff': [9.247200000000316e-05, 9.149999999999783e-05, 9.184699999999907e-05, 9.141599999999694e-05, 9.205500000000061e-05, 9.158400000000219e-05, 9.19589999999991e-05, 9.162499999999796e-05, 9.17640...</msg>
<status status="PASS" starttime="20201030 18:31:04.832" endtime="20201030 18:31:04.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.839" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.838" endtime="20201030 18:31:04.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.842" level="INFO">VALUE: [9.247200000000316e-05, 9.149999999999783e-05, 9.184699999999907e-05, 9.141599999999694e-05, 9.205500000000061e-05, 9.158400000000219e-05, 9.19589999999991e-05, 9.162499999999796e-05, 9.176400000000112e-05, 9.180500000000036e-05, 9.1639000000001e-05, 9.18329999999995e-05, 9.168000000000023e-05, 9.223700000000196e-05, 9.176299999999818e-05, 9.209799999999879e-05, 9.148599999999826e-05, 9.190300000000082e-05, 9.16939999999998e-05, 9.21940000000003e-05, 9.1639000000001e-05, 9.198600000000223e-05, 9.176399999999765e-05, 9.166700000000014e-05, 9.207000000000312e-05, 9.184700000000254e-05, 9.156899999999968e-05, 9.195799999999962e-05, 9.155599999999958e-05, 9.172200000000241e-05, 9.151400000000087e-05, 9.15000000000013e-05, 9.173699999999799e-05, 9.230500000000086e-05, 9.184699999999907e-05, 9.198599999999876e-05, 9.186100000000211e-05, 9.161200000000133e-05, 9.220899999999935e-05, 9.154200000000001e-05, 9.191600000000091e-05, 9.168099999999971e-05, 9.218000000000073e-05, 9.180599999999983e-05, 9.183399999999897e-05, 9.223599999999901e-05, 9.180599999999983e-05, 9.172199999999894e-05, 9.213799999999855e-05, 9.154200000000001e-05]</msg>
<status status="PASS" starttime="20201030 18:31:04.840" endtime="20201030 18:31:04.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.836" endtime="20201030 18:31:04.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.854" endtime="20201030 18:31:04.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.853" endtime="20201030 18:31:04.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.851" endtime="20201030 18:31:04.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.485" endtime="20201030 18:31:04.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.484" endtime="20201030 18:31:04.875"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.884" endtime="20201030 18:31:04.903"></status>
</kw>
<msg timestamp="20201030 18:31:04.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.882" endtime="20201030 18:31:04.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.904" endtime="20201030 18:31:04.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.907" endtime="20201030 18:31:04.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.880" endtime="20201030 18:31:04.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.878" endtime="20201030 18:31:04.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.916" endtime="20201030 18:31:05.201"></status>
</kw>
<msg timestamp="20201030 18:31:05.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.914" endtime="20201030 18:31:05.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.205" endtime="20201030 18:31:05.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.213" endtime="20201030 18:31:05.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.912" endtime="20201030 18:31:05.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.910" endtime="20201030 18:31:05.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.220" level="INFO">${RESULT} = [{'diff': 9.341599999999894e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.305500000000161e-05}, {'diff': 9.269500000000028e-05}, {'diff': 9.319399999999783e-05}, {'diff': 9.306900000000118e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:05.216" endtime="20201030 18:31:05.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.227" level="INFO">${ACCURACY} = {'diff': [9.341599999999894e-05, 9.286099999999964e-05, 9.305500000000161e-05, 9.269500000000028e-05, 9.319399999999783e-05, 9.306900000000118e-05, 9.258399999999972e-05, 9.2639000000002e-05, 9.311099...</msg>
<status status="PASS" starttime="20201030 18:31:05.221" endtime="20201030 18:31:05.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.232" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.231" endtime="20201030 18:31:05.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.234" level="INFO">VALUE: [9.341599999999894e-05, 9.286099999999964e-05, 9.305500000000161e-05, 9.269500000000028e-05, 9.319399999999783e-05, 9.306900000000118e-05, 9.258399999999972e-05, 9.2639000000002e-05, 9.311099999999989e-05, 9.323600000000001e-05, 9.251400000000187e-05, 9.244500000000003e-05, 9.277799999999822e-05, 9.248599999999926e-05, 9.323600000000001e-05, 9.333400000000047e-05, 9.307000000000065e-05, 9.251400000000187e-05, 9.340299999999885e-05, 9.337499999999971e-05, 9.24589999999996e-05, 9.302799999999847e-05, 9.317999999999826e-05, 9.273599999999951e-05, 9.26529999999981e-05, 9.268100000000071e-05, 9.299999999999933e-05, 9.25139999999984e-05, 9.287499999999921e-05, 9.29590000000001e-05, 9.258300000000025e-05, 9.294400000000105e-05, 9.261099999999939e-05, 9.30139999999989e-05, 9.288899999999878e-05, 9.272199999999994e-05, 9.299999999999933e-05, 9.294400000000105e-05, 9.265300000000157e-05, 9.305600000000108e-05, 9.295800000000062e-05, 9.274999999999908e-05, 9.294400000000105e-05, 9.338899999999928e-05, 9.294500000000053e-05, 9.288900000000225e-05, 9.311099999999989e-05, 9.315199999999912e-05, 9.28330000000005e-05, 9.287499999999921e-05]</msg>
<status status="PASS" starttime="20201030 18:31:05.233" endtime="20201030 18:31:05.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.228" endtime="20201030 18:31:05.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.239" endtime="20201030 18:31:05.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.237" endtime="20201030 18:31:05.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.236" endtime="20201030 18:31:05.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.876" endtime="20201030 18:31:05.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.876" endtime="20201030 18:31:05.260"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.269" endtime="20201030 18:31:05.287"></status>
</kw>
<msg timestamp="20201030 18:31:05.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.267" endtime="20201030 18:31:05.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.289" endtime="20201030 18:31:05.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.292" endtime="20201030 18:31:05.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.265" endtime="20201030 18:31:05.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.262" endtime="20201030 18:31:05.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.301" endtime="20201030 18:31:05.587"></status>
</kw>
<msg timestamp="20201030 18:31:05.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219065, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 18:31:05.299" endtime="20201030 18:31:05.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219065, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 18:31:05.591" endtime="20201030 18:31:05.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.599" endtime="20201030 18:31:05.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.296" endtime="20201030 18:31:05.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.295" endtime="20201030 18:31:05.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.606" level="INFO">${RESULT} = [{'diff': 9.449999999999736e-05}, {'diff': 9.423600000000101e-05}, {'diff': 9.392999999999901e-05}, {'diff': 9.380499999999889e-05}, {'diff': 9.391599999999944e-05}, {'diff': 9.375000000000008e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:05.602" endtime="20201030 18:31:05.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.610" level="INFO">${ACCURACY} = {'diff': [9.449999999999736e-05, 9.423600000000101e-05, 9.392999999999901e-05, 9.380499999999889e-05, 9.391599999999944e-05, 9.375000000000008e-05, 9.361100000000039e-05, 9.35000000000033e-05, 9.42500...</msg>
<status status="PASS" starttime="20201030 18:31:05.607" endtime="20201030 18:31:05.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.614" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.613" endtime="20201030 18:31:05.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.617" level="INFO">VALUE: [9.449999999999736e-05, 9.423600000000101e-05, 9.392999999999901e-05, 9.380499999999889e-05, 9.391599999999944e-05, 9.375000000000008e-05, 9.361100000000039e-05, 9.35000000000033e-05, 9.425000000000058e-05, 9.411100000000089e-05, 9.376400000000312e-05, 9.422199999999797e-05, 9.349999999999983e-05, 9.348600000000026e-05, 9.411099999999742e-05, 9.444400000000255e-05, 9.354199999999854e-05, 9.422200000000144e-05, 9.3639000000003e-05, 9.393099999999849e-05, 9.400000000000033e-05, 9.413900000000003e-05, 9.411100000000089e-05, 9.3639000000003e-05, 9.425000000000058e-05, 9.341699999999842e-05, 9.437500000000071e-05, 9.380499999999889e-05, 9.398600000000076e-05, 9.381899999999846e-05, 9.375000000000008e-05, 9.418099999999874e-05, 9.362499999999996e-05, 9.341700000000189e-05, 9.373600000000051e-05, 9.349999999999983e-05, 9.393100000000196e-05, 9.358400000000072e-05, 9.413800000000055e-05, 9.42079999999984e-05, 9.400000000000033e-05, 9.411100000000089e-05, 9.436099999999767e-05, 9.357000000000115e-05, 9.348699999999974e-05, 9.423600000000101e-05, 9.362499999999996e-05, 9.383400000000097e-05, 9.386100000000064e-05, 9.375000000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:31:05.615" endtime="20201030 18:31:05.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.611" endtime="20201030 18:31:05.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.622" endtime="20201030 18:31:05.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.620" endtime="20201030 18:31:05.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.619" endtime="20201030 18:31:05.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.261" endtime="20201030 18:31:05.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.260" endtime="20201030 18:31:05.642"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.652" endtime="20201030 18:31:05.672"></status>
</kw>
<msg timestamp="20201030 18:31:05.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.650" endtime="20201030 18:31:05.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.674" endtime="20201030 18:31:05.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.676" endtime="20201030 18:31:05.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.648" endtime="20201030 18:31:05.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.645" endtime="20201030 18:31:05.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.685" endtime="20201030 18:31:05.971"></status>
</kw>
<msg timestamp="20201030 18:31:05.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023667097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.684" endtime="20201030 18:31:05.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023667097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.975" endtime="20201030 18:31:05.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.983" endtime="20201030 18:31:05.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.681" endtime="20201030 18:31:05.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.679" endtime="20201030 18:31:05.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.990" level="INFO">${RESULT} = [{'diff': 9.526399999999768e-05}, {'diff': 9.523700000000149e-05}, {'diff': 9.494499999999906e-05}, {'diff': 9.463900000000053e-05}, {'diff': 9.455499999999964e-05}, {'diff': 9.479100000000032e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:05.987" endtime="20201030 18:31:05.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.994" level="INFO">${ACCURACY} = {'diff': [9.526399999999768e-05, 9.523700000000149e-05, 9.494499999999906e-05, 9.463900000000053e-05, 9.455499999999964e-05, 9.479100000000032e-05, 9.448600000000126e-05, 9.505600000000308e-05, 9.4972...</msg>
<status status="PASS" starttime="20201030 18:31:05.991" endtime="20201030 18:31:05.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.998" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.997" endtime="20201030 18:31:05.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.001" level="INFO">VALUE: [9.526399999999768e-05, 9.523700000000149e-05, 9.494499999999906e-05, 9.463900000000053e-05, 9.455499999999964e-05, 9.479100000000032e-05, 9.448600000000126e-05, 9.505600000000308e-05, 9.49720000000022e-05, 9.530500000000039e-05, 9.46660000000002e-05, 9.505500000000014e-05, 9.454100000000007e-05, 9.462500000000096e-05, 9.473600000000151e-05, 9.512499999999799e-05, 9.500000000000133e-05, 9.525000000000158e-05, 9.46660000000002e-05, 9.525000000000158e-05, 9.475000000000108e-05, 9.525000000000158e-05, 9.501399999999743e-05, 9.443099999999899e-05, 9.509700000000232e-05, 9.469399999999933e-05, 9.474999999999761e-05, 9.537499999999824e-05, 9.467999999999976e-05, 9.509699999999885e-05, 9.504200000000004e-05, 9.512499999999799e-05, 9.491699999999992e-05, 9.49859999999983e-05, 9.504100000000057e-05, 9.516599999999723e-05, 9.448600000000126e-05, 9.46660000000002e-05, 9.497199999999872e-05, 9.454100000000007e-05, 9.491699999999992e-05, 9.480599999999936e-05, 9.487500000000121e-05, 9.511099999999842e-05, 9.516700000000017e-05, 9.505599999999961e-05, 9.53469999999991e-05, 9.459699999999835e-05, 9.511099999999842e-05, 9.509799999999832e-05]</msg>
<status status="PASS" starttime="20201030 18:31:06.000" endtime="20201030 18:31:06.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.995" endtime="20201030 18:31:06.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.007" endtime="20201030 18:31:06.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.005" endtime="20201030 18:31:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.004" endtime="20201030 18:31:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.643" endtime="20201030 18:31:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.643" endtime="20201030 18:31:06.027"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.036" endtime="20201030 18:31:06.055"></status>
</kw>
<msg timestamp="20201030 18:31:06.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.035" endtime="20201030 18:31:06.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.057" endtime="20201030 18:31:06.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.059" endtime="20201030 18:31:06.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.032" endtime="20201030 18:31:06.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.030" endtime="20201030 18:31:06.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.068" endtime="20201030 18:31:06.355"></status>
</kw>
<msg timestamp="20201030 18:31:06.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.067" endtime="20201030 18:31:06.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.359" endtime="20201030 18:31:06.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.368" endtime="20201030 18:31:06.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.064" endtime="20201030 18:31:06.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.062" endtime="20201030 18:31:06.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.374" level="INFO">${RESULT} = [{'diff': 9.66799999999983e-05}, {'diff': 9.594400000000058e-05}, {'diff': 9.561099999999892e-05}, {'diff': 9.54859999999988e-05}, {'diff': 9.577800000000122e-05}, {'diff': 9.590300000000135e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:06.371" endtime="20201030 18:31:06.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:06.379" level="INFO">${ACCURACY} = {'diff': [9.66799999999983e-05, 9.594400000000058e-05, 9.561099999999892e-05, 9.54859999999988e-05, 9.577800000000122e-05, 9.590300000000135e-05, 9.581999999999993e-05, 9.616700000000117e-05, 9.636099...</msg>
<status status="PASS" starttime="20201030 18:31:06.375" endtime="20201030 18:31:06.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.384" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:31:06.383" endtime="20201030 18:31:06.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.386" level="INFO">VALUE: [9.66799999999983e-05, 9.594400000000058e-05, 9.561099999999892e-05, 9.54859999999988e-05, 9.577800000000122e-05, 9.590300000000135e-05, 9.581999999999993e-05, 9.616700000000117e-05, 9.636099999999967e-05, 9.624999999999911e-05, 9.575000000000208e-05, 9.631900000000096e-05, 9.619500000000031e-05, 9.580600000000036e-05, 9.54859999999988e-05, 9.573600000000251e-05, 9.622299999999945e-05, 9.637499999999924e-05, 9.618000000000126e-05, 9.607000000000018e-05, 9.612500000000246e-05, 9.618000000000126e-05, 9.580499999999742e-05, 9.554200000000054e-05, 9.64019999999989e-05, 9.591599999999798e-05, 9.579200000000079e-05, 9.618000000000126e-05, 9.577799999999775e-05, 9.541700000000042e-05, 9.544499999999956e-05, 9.636199999999914e-05, 9.625000000000258e-05, 9.56669999999972e-05, 9.599999999999886e-05, 9.618100000000074e-05, 9.559699999999935e-05, 9.545799999999965e-05, 9.586099999999917e-05, 9.630600000000086e-05, 9.581900000000046e-05, 9.583300000000003e-05, 9.555600000000011e-05, 9.575000000000208e-05, 9.631900000000096e-05, 9.579199999999732e-05, 9.586100000000264e-05, 9.569499999999981e-05, 9.605499999999767e-05, 9.555500000000064e-05]</msg>
<status status="PASS" starttime="20201030 18:31:06.385" endtime="20201030 18:31:06.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.380" endtime="20201030 18:31:06.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.391" endtime="20201030 18:31:06.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.389" endtime="20201030 18:31:06.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.388" endtime="20201030 18:31:06.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.028" endtime="20201030 18:31:06.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.028" endtime="20201030 18:31:06.412"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.420" endtime="20201030 18:31:06.439"></status>
</kw>
<msg timestamp="20201030 18:31:06.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.419" endtime="20201030 18:31:06.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.441" endtime="20201030 18:31:06.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.443" endtime="20201030 18:31:06.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.416" endtime="20201030 18:31:06.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.414" endtime="20201030 18:31:06.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.452" endtime="20201030 18:31:06.740"></status>
</kw>
<msg timestamp="20201030 18:31:06.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.451" endtime="20201030 18:31:06.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.744" endtime="20201030 18:31:06.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.753" endtime="20201030 18:31:06.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.448" endtime="20201030 18:31:06.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.447" endtime="20201030 18:31:06.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.759" level="INFO">${RESULT} = [{'diff': 9.772300000000095e-05}, {'diff': 9.691700000000192e-05}, {'diff': 9.666700000000167e-05}, {'diff': 9.694499999999759e-05}, {'diff': 9.737500000000024e-05}, {'diff': 9.673600000000004e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:06.756" endtime="20201030 18:31:06.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:06.763" level="INFO">${ACCURACY} = {'diff': [9.772300000000095e-05, 9.691700000000192e-05, 9.666700000000167e-05, 9.694499999999759e-05, 9.737500000000024e-05, 9.673600000000004e-05, 9.680600000000136e-05, 9.673599999999657e-05, 9.7111...</msg>
<status status="PASS" starttime="20201030 18:31:06.760" endtime="20201030 18:31:06.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.768" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:31:06.767" endtime="20201030 18:31:06.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.770" level="INFO">VALUE: [9.772300000000095e-05, 9.691700000000192e-05, 9.666700000000167e-05, 9.694499999999759e-05, 9.737500000000024e-05, 9.673600000000004e-05, 9.680600000000136e-05, 9.673599999999657e-05, 9.711100000000042e-05, 9.741699999999895e-05, 9.649999999999936e-05, 9.693100000000149e-05, 9.725000000000011e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.641699999999795e-05, 9.693099999999802e-05, 9.725000000000011e-05, 9.730600000000186e-05, 9.668100000000124e-05, 9.661099999999992e-05, 9.641700000000142e-05, 9.727799999999925e-05, 9.643099999999752e-05, 9.725000000000011e-05, 9.65279999999985e-05, 9.642999999999805e-05, 9.655500000000164e-05, 9.690299999999888e-05, 9.697200000000072e-05, 9.725000000000011e-05, 9.668100000000124e-05, 9.68059999999979e-05, 9.673600000000004e-05, 9.649999999999936e-05, 9.704199999999857e-05, 9.676399999999918e-05, 9.655500000000164e-05, 9.699999999999986e-05, 9.709699999999738e-05, 9.648600000000326e-05, 9.736100000000067e-05, 9.729199999999882e-05, 9.719499999999784e-05, 9.654199999999807e-05, 9.668099999999777e-05, 9.718100000000174e-05, 9.730500000000239e-05, 9.66799999999983e-05, 9.707000000000118e-05]</msg>
<status status="PASS" starttime="20201030 18:31:06.769" endtime="20201030 18:31:06.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.764" endtime="20201030 18:31:06.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.775" endtime="20201030 18:31:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.774" endtime="20201030 18:31:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.773" endtime="20201030 18:31:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.413" endtime="20201030 18:31:06.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.412" endtime="20201030 18:31:06.796"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.805" endtime="20201030 18:31:06.825"></status>
</kw>
<msg timestamp="20201030 18:31:06.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.803" endtime="20201030 18:31:06.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.826" endtime="20201030 18:31:06.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.829" endtime="20201030 18:31:06.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.801" endtime="20201030 18:31:06.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.798" endtime="20201030 18:31:06.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.838" endtime="20201030 18:31:07.124"></status>
</kw>
<msg timestamp="20201030 18:31:07.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.836" endtime="20201030 18:31:07.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.128" endtime="20201030 18:31:07.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.136" endtime="20201030 18:31:07.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.834" endtime="20201030 18:31:07.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.832" endtime="20201030 18:31:07.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.142" level="INFO">${RESULT} = [{'diff': 9.890300000000088e-05}, {'diff': 9.823599999999807e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.781899999999899e-05}, {'diff': 9.806899999999924e-05}, {'diff': 9.740299999999938e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:07.139" endtime="20201030 18:31:07.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.147" level="INFO">${ACCURACY} = {'diff': [9.890300000000088e-05, 9.823599999999807e-05, 9.834699999999863e-05, 9.781899999999899e-05, 9.806899999999924e-05, 9.740299999999938e-05, 9.76669999999992e-05, 9.772300000000095e-05, 9.81110...</msg>
<status status="PASS" starttime="20201030 18:31:07.143" endtime="20201030 18:31:07.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.151" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:31:07.150" endtime="20201030 18:31:07.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.154" level="INFO">VALUE: [9.890300000000088e-05, 9.823599999999807e-05, 9.834699999999863e-05, 9.781899999999899e-05, 9.806899999999924e-05, 9.740299999999938e-05, 9.76669999999992e-05, 9.772300000000095e-05, 9.811100000000142e-05, 9.741599999999948e-05, 9.8028e-05, 9.816600000000023e-05, 9.804200000000304e-05, 9.816600000000023e-05, 9.787499999999727e-05, 9.798700000000077e-05, 9.816600000000023e-05, 9.776400000000018e-05, 9.766599999999973e-05, 9.755499999999917e-05, 9.798599999999782e-05, 9.805499999999967e-05, 9.833299999999906e-05, 9.737499999999677e-05, 9.74019999999999e-05, 9.811100000000142e-05, 9.791699999999945e-05, 9.742999999999905e-05, 9.743000000000251e-05, 9.829100000000035e-05, 9.809699999999838e-05, 9.820799999999894e-05, 9.784800000000107e-05, 9.827800000000025e-05, 9.804199999999957e-05, 9.781899999999899e-05, 9.765299999999963e-05, 9.756899999999874e-05, 9.815300000000013e-05, 9.815300000000013e-05, 9.797200000000172e-05, 9.820799999999894e-05, 9.808299999999881e-05, 9.75279999999995e-05, 9.765299999999963e-05, 9.7721999999998e-05, 9.7721999999998e-05, 9.761100000000092e-05, 9.801400000000043e-05, 9.758399999999778e-05]</msg>
<status status="PASS" starttime="20201030 18:31:07.152" endtime="20201030 18:31:07.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.147" endtime="20201030 18:31:07.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.159" endtime="20201030 18:31:07.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.158" endtime="20201030 18:31:07.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.157" endtime="20201030 18:31:07.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.797" endtime="20201030 18:31:07.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.796" endtime="20201030 18:31:07.180"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.189" endtime="20201030 18:31:07.208"></status>
</kw>
<msg timestamp="20201030 18:31:07.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.187" endtime="20201030 18:31:07.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.209" endtime="20201030 18:31:07.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.212" endtime="20201030 18:31:07.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.185" endtime="20201030 18:31:07.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.182" endtime="20201030 18:31:07.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.221" endtime="20201030 18:31:07.506"></status>
</kw>
<msg timestamp="20201030 18:31:07.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.219" endtime="20201030 18:31:07.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.510" endtime="20201030 18:31:07.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.518" endtime="20201030 18:31:07.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.217" endtime="20201030 18:31:07.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.215" endtime="20201030 18:31:07.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.525" level="INFO">${RESULT} = [{'diff': 9.993000000000155e-05}, {'diff': 9.84860000000018e-05}, {'diff': 9.916699999999723e-05}, {'diff': 9.904200000000057e-05}, {'diff': 9.931899999999702e-05}, {'diff': 9.931999999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:07.522" endtime="20201030 18:31:07.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.530" level="INFO">${ACCURACY} = {'diff': [9.993000000000155e-05, 9.84860000000018e-05, 9.916699999999723e-05, 9.904200000000057e-05, 9.931899999999702e-05, 9.931999999999996e-05, 9.872299999999848e-05, 9.863899999999759e-05, 9.89860...</msg>
<status status="PASS" starttime="20201030 18:31:07.526" endtime="20201030 18:31:07.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.535" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:31:07.534" endtime="20201030 18:31:07.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.537" level="INFO">VALUE: [9.993000000000155e-05, 9.84860000000018e-05, 9.916699999999723e-05, 9.904200000000057e-05, 9.931899999999702e-05, 9.931999999999996e-05, 9.872299999999848e-05, 9.863899999999759e-05, 9.89860000000023e-05, 9.919499999999984e-05, 9.923600000000254e-05, 9.898700000000177e-05, 9.929100000000135e-05, 9.891600000000098e-05, 9.90410000000011e-05, 9.920799999999994e-05, 9.936100000000267e-05, 9.916600000000123e-05, 9.891700000000045e-05, 9.875000000000161e-05, 9.940300000000138e-05, 9.93609999999992e-05, 9.840300000000038e-05, 9.876400000000118e-05, 9.841699999999995e-05, 9.859800000000182e-05, 9.877800000000075e-05, 9.854200000000007e-05, 9.854200000000007e-05, 9.923599999999907e-05, 9.879200000000032e-05, 9.865200000000116e-05, 9.840300000000038e-05, 9.884699999999913e-05, 9.874999999999814e-05, 9.854200000000007e-05, 9.865299999999716e-05, 9.918100000000027e-05, 9.923599999999907e-05, 9.879200000000032e-05, 9.89860000000023e-05, 9.890300000000088e-05, 9.895899999999916e-05, 9.88609999999987e-05, 9.862500000000149e-05, 9.879200000000032e-05, 9.931999999999996e-05, 9.918100000000027e-05, 9.936200000000214e-05, 9.88479999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:31:07.536" endtime="20201030 18:31:07.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.531" endtime="20201030 18:31:07.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.542" endtime="20201030 18:31:07.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.540" endtime="20201030 18:31:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.539" endtime="20201030 18:31:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.181" endtime="20201030 18:31:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.180" endtime="20201030 18:31:07.563"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.572" endtime="20201030 18:31:07.591"></status>
</kw>
<msg timestamp="20201030 18:31:07.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.570" endtime="20201030 18:31:07.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.592" endtime="20201030 18:31:07.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.595" endtime="20201030 18:31:07.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.567" endtime="20201030 18:31:07.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.565" endtime="20201030 18:31:07.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.604" endtime="20201030 18:31:07.890"></status>
</kw>
<msg timestamp="20201030 18:31:07.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.602" endtime="20201030 18:31:07.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.894" endtime="20201030 18:31:07.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.903" endtime="20201030 18:31:07.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.600" endtime="20201030 18:31:07.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.598" endtime="20201030 18:31:07.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.909" level="INFO">${RESULT} = [{'diff': 0.00010032000000000096}, {'diff': 9.994400000000112e-05}, {'diff': 9.9722e-05}, {'diff': 0.00010016600000000223}, {'diff': 9.961099999999945e-05}, {'diff': 9.98609999999997e-05}, {'diff': 9....</msg>
<status status="PASS" starttime="20201030 18:31:07.906" endtime="20201030 18:31:07.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.913" level="INFO">${ACCURACY} = {'diff': [0.00010032000000000096, 9.994400000000112e-05, 9.9722e-05, 0.00010016600000000223, 9.961099999999945e-05, 9.98609999999997e-05, 9.995900000000016e-05, 0.00010023699999999955, 0.0001001670000...</msg>
<status status="PASS" starttime="20201030 18:31:07.910" endtime="20201030 18:31:07.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.918" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:31:07.917" endtime="20201030 18:31:07.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.920" level="INFO">VALUE: [0.00010032000000000096, 9.994400000000112e-05, 9.9722e-05, 0.00010016600000000223, 9.961099999999945e-05, 9.98609999999997e-05, 9.995900000000016e-05, 0.00010023699999999955, 0.0001001670000000017, 0.00010027799999999878, 9.970800000000044e-05, 0.00010033300000000106, 0.00010027799999999878, 9.95280000000015e-05, 9.997200000000026e-05, 9.965300000000163e-05, 9.979200000000132e-05, 9.947199999999976e-05, 9.994400000000112e-05, 0.00010001400000000243, 0.00010022299999999998, 0.00010001399999999896, 9.940300000000138e-05, 0.00010006899999999777, 0.00010033300000000106, 9.995900000000016e-05, 9.956999999999674e-05, 9.945800000000019e-05, 9.954200000000107e-05, 9.951399999999846e-05, 0.00010026399999999921, 0.00010027799999999878, 9.954099999999813e-05, 9.988900000000231e-05, 9.963900000000206e-05, 9.969499999999687e-05, 9.983300000000056e-05, 9.995800000000069e-05, 9.94999999999989e-05, 9.980500000000142e-05, 0.00010012499999999952, 0.00010008400000000028, 0.00010029200000000182, 9.976400000000218e-05, 9.991600000000198e-05, 0.00010037499999999977, 9.988899999999884e-05, 9.95280000000015e-05, 0.00010006899999999777, 0.00010020799999999747]</msg>
<status status="PASS" starttime="20201030 18:31:07.919" endtime="20201030 18:31:07.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.914" endtime="20201030 18:31:07.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.925" endtime="20201030 18:31:07.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.924" endtime="20201030 18:31:07.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.922" endtime="20201030 18:31:07.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.564" endtime="20201030 18:31:07.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.563" endtime="20201030 18:31:07.946"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.955" endtime="20201030 18:31:07.975"></status>
</kw>
<msg timestamp="20201030 18:31:07.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.953" endtime="20201030 18:31:07.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.976" endtime="20201030 18:31:07.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.979" endtime="20201030 18:31:07.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.951" endtime="20201030 18:31:07.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.948" endtime="20201030 18:31:07.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.988" endtime="20201030 18:31:08.274"></status>
</kw>
<msg timestamp="20201030 18:31:08.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.986" endtime="20201030 18:31:08.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.279" endtime="20201030 18:31:08.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.287" endtime="20201030 18:31:08.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.984" endtime="20201030 18:31:08.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.982" endtime="20201030 18:31:08.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.293" level="INFO">${RESULT} = [{'diff': 0.00010184699999999866}, {'diff': 0.00010098600000000083}, {'diff': 0.00010065299999999916}, {'diff': 0.00010101399999999996}, {'diff': 0.00010109700000000138}, {'diff': 0.000100512999999999...</msg>
<status status="PASS" starttime="20201030 18:31:08.290" endtime="20201030 18:31:08.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:08.297" level="INFO">${ACCURACY} = {'diff': [0.00010184699999999866, 0.00010098600000000083, 0.00010065299999999916, 0.00010101399999999996, 0.00010109700000000138, 0.00010051299999999999, 0.00010094500000000159, 0.00010070800000000144...</msg>
<status status="PASS" starttime="20201030 18:31:08.294" endtime="20201030 18:31:08.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.302" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.301" endtime="20201030 18:31:08.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.304" level="INFO">VALUE: [0.00010184699999999866, 0.00010098600000000083, 0.00010065299999999916, 0.00010101399999999996, 0.00010109700000000138, 0.00010051299999999999, 0.00010094500000000159, 0.00010070800000000144, 0.00010131899999999902, 0.00010136099999999773, 0.00010052799999999903, 0.00010051400000000293, 0.00010048600000000033, 0.00010079099999999938, 0.00010126400000000021, 0.00010122199999999804, 0.00010122300000000098, 0.00010113900000000009, 0.00010058299999999784, 0.00010038899999999934, 0.0001013610000000012, 0.00010127799999999978, 0.00010051299999999999, 0.00010066599999999926, 0.00010129099999999988, 0.00010108300000000181, 0.00010134700000000163, 0.00010051399999999946, 0.0001012220000000015, 0.00010115200000000019, 0.0001006939999999984, 0.00010136200000000067, 0.00010079099999999938, 0.00010072300000000048, 0.00010066699999999873, 0.00010117999999999933, 0.00010116699999999923, 0.00010065300000000263, 0.00010133400000000153, 0.00010119499999999837, 0.00010059700000000088, 0.00010106899999999877, 0.0001004020000000029, 0.00010084700000000113, 0.00010038899999999934, 0.00010112500000000052, 0.00010090199999999994, 0.00010113800000000062, 0.00010059800000000035, 0.00010067999999999883]</msg>
<status status="PASS" starttime="20201030 18:31:08.303" endtime="20201030 18:31:08.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.298" endtime="20201030 18:31:08.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.310" endtime="20201030 18:31:08.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.309" endtime="20201030 18:31:08.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.307" endtime="20201030 18:31:08.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.947" endtime="20201030 18:31:08.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.946" endtime="20201030 18:31:08.331"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.340" endtime="20201030 18:31:08.359"></status>
</kw>
<msg timestamp="20201030 18:31:08.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.338" endtime="20201030 18:31:08.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.361" endtime="20201030 18:31:08.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.363" endtime="20201030 18:31:08.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.336" endtime="20201030 18:31:08.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.333" endtime="20201030 18:31:08.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.372" endtime="20201030 18:31:08.658"></status>
</kw>
<msg timestamp="20201030 18:31:08.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.371" endtime="20201030 18:31:08.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.662" endtime="20201030 18:31:08.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.670" endtime="20201030 18:31:08.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.368" endtime="20201030 18:31:08.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.366" endtime="20201030 18:31:08.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.677" level="INFO">${RESULT} = [{'diff': 0.0001028749999999988}, {'diff': 0.00010194400000000312}, {'diff': 0.00010151400000000046}, {'diff': 0.00010138899999999687}, {'diff': 0.00010156899999999927}, {'diff': 0.0001017079999999989...</msg>
<status status="PASS" starttime="20201030 18:31:08.674" endtime="20201030 18:31:08.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:08.684" level="INFO">${ACCURACY} = {'diff': [0.0001028749999999988, 0.00010194400000000312, 0.00010151400000000046, 0.00010138899999999687, 0.00010156899999999927, 0.00010170799999999897, 0.00010179199999999985, 0.00010163800000000112,...</msg>
<status status="PASS" starttime="20201030 18:31:08.678" endtime="20201030 18:31:08.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.689" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.688" endtime="20201030 18:31:08.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.692" level="INFO">VALUE: [0.0001028749999999988, 0.00010194400000000312, 0.00010151400000000046, 0.00010138899999999687, 0.00010156899999999927, 0.00010170799999999897, 0.00010179199999999985, 0.00010163800000000112, 0.0001023480000000021, 0.00010183299999999909, 0.00010152799999999657, 0.00010233299999999959, 0.00010208400000000228, 0.0001016939999999994, 0.00010174999999999768, 0.00010155599999999917, 0.00010215300000000066, 0.00010165300000000016, 0.00010157000000000221, 0.00010179100000000038, 0.00010156999999999874, 0.00010215300000000066, 0.00010158399999999831, 0.00010183299999999909, 0.00010215300000000066, 0.00010231900000000002, 0.00010163800000000112, 0.0001023199999999995, 0.00010144400000000262, 0.00010197200000000226, 0.00010177800000000028, 0.00010176399999999725, 0.00010212499999999805, 0.00010180499999999995, 0.00010233299999999959, 0.00010211099999999848, 0.00010194399999999965, 0.00010206999999999924, 0.00010211100000000195, 0.00010190300000000041, 0.000101819999999999, 0.00010236099999999873, 0.00010186099999999823, 0.00010177800000000028, 0.00010206899999999977, 0.00010226400000000122, 0.00010220799999999947, 0.00010224999999999818, 0.00010158299999999884, 0.00010206899999999977]</msg>
<status status="PASS" starttime="20201030 18:31:08.690" endtime="20201030 18:31:08.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.685" endtime="20201030 18:31:08.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.697" endtime="20201030 18:31:08.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.696" endtime="20201030 18:31:08.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.694" endtime="20201030 18:31:08.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.332" endtime="20201030 18:31:08.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.331" endtime="20201030 18:31:08.718"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.727" endtime="20201030 18:31:08.746"></status>
</kw>
<msg timestamp="20201030 18:31:08.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.725" endtime="20201030 18:31:08.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.748" endtime="20201030 18:31:08.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.750" endtime="20201030 18:31:08.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.723" endtime="20201030 18:31:08.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.721" endtime="20201030 18:31:08.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.759" endtime="20201030 18:31:09.046"></status>
</kw>
<msg timestamp="20201030 18:31:09.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.758" endtime="20201030 18:31:09.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.050" endtime="20201030 18:31:09.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.058" endtime="20201030 18:31:09.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.755" endtime="20201030 18:31:09.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.753" endtime="20201030 18:31:09.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.064" level="INFO">${RESULT} = [{'diff': 0.00010344500000000062}, {'diff': 0.00010248599999999886}, {'diff': 0.00010315200000000219}, {'diff': 0.0001023619999999982}, {'diff': 0.0001033200000000005}, {'diff': 0.00010237500000000177...</msg>
<status status="PASS" starttime="20201030 18:31:09.061" endtime="20201030 18:31:09.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.068" level="INFO">${ACCURACY} = {'diff': [0.00010344500000000062, 0.00010248599999999886, 0.00010315200000000219, 0.0001023619999999982, 0.0001033200000000005, 0.00010237500000000177, 0.00010233299999999959, 0.00010291700000000098, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.065" endtime="20201030 18:31:09.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.073" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.072" endtime="20201030 18:31:09.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.075" level="INFO">VALUE: [0.00010344500000000062, 0.00010248599999999886, 0.00010315200000000219, 0.0001023619999999982, 0.0001033200000000005, 0.00010237500000000177, 0.00010233299999999959, 0.00010291700000000098, 0.000102416000000001, 0.00010307000000000024, 0.00010313899999999862, 0.00010334799999999963, 0.00010302800000000154, 0.000102513999999998, 0.00010270799999999997, 0.00010262500000000202, 0.00010326399999999875, 0.00010240300000000091, 0.00010243000000000058, 0.00010276300000000224, 0.00010288899999999837, 0.00010304199999999764, 0.00010245799999999972, 0.00010262499999999855, 0.00010301400000000197, 0.00010270899999999944, 0.0001025689999999968, 0.00010312499999999905, 0.00010288900000000184, 0.00010259699999999941, 0.00010281900000000052, 0.00010277699999999834, 0.00010309699999999991, 0.00010327799999999832, 0.00010329200000000135, 0.00010320800000000047, 0.00010263799999999865, 0.00010279200000000085, 0.00010315300000000166, 0.00010295899999999969, 0.00010337500000000277, 0.00010241700000000048, 0.00010309699999999991, 0.00010336200000000267, 0.00010306900000000077, 0.00010326400000000222, 0.00010238899999999787, 0.00010240299999999744, 0.00010245799999999972, 0.0001030139999999985]</msg>
<status status="PASS" starttime="20201030 18:31:09.074" endtime="20201030 18:31:09.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.069" endtime="20201030 18:31:09.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.080" endtime="20201030 18:31:09.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.079" endtime="20201030 18:31:09.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.078" endtime="20201030 18:31:09.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.719" endtime="20201030 18:31:09.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.719" endtime="20201030 18:31:09.101"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.109" endtime="20201030 18:31:09.130"></status>
</kw>
<msg timestamp="20201030 18:31:09.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.108" endtime="20201030 18:31:09.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.131" endtime="20201030 18:31:09.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.134" endtime="20201030 18:31:09.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.105" endtime="20201030 18:31:09.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.103" endtime="20201030 18:31:09.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.143" endtime="20201030 18:31:09.428"></status>
</kw>
<msg timestamp="20201030 18:31:09.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.141" endtime="20201030 18:31:09.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.432" endtime="20201030 18:31:09.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.440" endtime="20201030 18:31:09.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.139" endtime="20201030 18:31:09.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.137" endtime="20201030 18:31:09.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.447" level="INFO">${RESULT} = [{'diff': 0.00010445800000000172}, {'diff': 0.00010425000000000018}, {'diff': 0.00010433400000000106}, {'diff': 0.00010365299999999869}, {'diff': 0.00010376399999999925}, {'diff': 0.000104291999999998...</msg>
<status status="PASS" starttime="20201030 18:31:09.444" endtime="20201030 18:31:09.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.451" level="INFO">${ACCURACY} = {'diff': [0.00010445800000000172, 0.00010425000000000018, 0.00010433400000000106, 0.00010365299999999869, 0.00010376399999999925, 0.00010429199999999889, 0.00010412500000000005, 0.00010408400000000081...</msg>
<status status="PASS" starttime="20201030 18:31:09.448" endtime="20201030 18:31:09.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.455" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.454" endtime="20201030 18:31:09.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.457" level="INFO">VALUE: [0.00010445800000000172, 0.00010425000000000018, 0.00010433400000000106, 0.00010365299999999869, 0.00010376399999999925, 0.00010429199999999889, 0.00010412500000000005, 0.00010408400000000081, 0.00010419399999999843, 0.00010376399999999925, 0.00010362499999999955, 0.00010352800000000204, 0.00010413899999999962, 0.00010399999999999993, 0.00010436100000000073, 0.00010377799999999882, 0.000104207999999998, 0.0001040559999999982, 0.00010412500000000005, 0.0001037360000000001, 0.0001033749999999993, 0.00010351300000000299, 0.00010429099999999941, 0.00010341700000000148, 0.00010390199999999947, 0.00010407000000000124, 0.00010402799999999907, 0.00010390300000000241, 0.00010345800000000072, 0.00010366699999999826, 0.00010405600000000167, 0.0001033749999999993, 0.0001041940000000019, 0.00010373699999999958, 0.00010347200000000029, 0.00010411100000000048, 0.00010340299999999844, 0.00010423700000000008, 0.00010413899999999962, 0.00010358300000000084, 0.00010341699999999801, 0.00010401400000000297, 0.00010413899999999962, 0.00010337500000000277, 0.0001037360000000001, 0.0001041810000000018, 0.00010426399999999975, 0.00010374999999999968, 0.00010376399999999925, 0.00010345800000000072]</msg>
<status status="PASS" starttime="20201030 18:31:09.456" endtime="20201030 18:31:09.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.452" endtime="20201030 18:31:09.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.463" endtime="20201030 18:31:09.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.462" endtime="20201030 18:31:09.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.461" endtime="20201030 18:31:09.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.102" endtime="20201030 18:31:09.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.101" endtime="20201030 18:31:09.484"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.493" endtime="20201030 18:31:09.512"></status>
</kw>
<msg timestamp="20201030 18:31:09.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.491" endtime="20201030 18:31:09.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.514" endtime="20201030 18:31:09.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.516" endtime="20201030 18:31:09.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.489" endtime="20201030 18:31:09.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.487" endtime="20201030 18:31:09.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.525" endtime="20201030 18:31:09.811"></status>
</kw>
<msg timestamp="20201030 18:31:09.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.524" endtime="20201030 18:31:09.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.815" endtime="20201030 18:31:09.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.823" endtime="20201030 18:31:09.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.521" endtime="20201030 18:31:09.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.519" endtime="20201030 18:31:09.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.830" level="INFO">${RESULT} = [{'diff': 0.00010506999999999878}, {'diff': 0.00010513900000000062}, {'diff': 0.00010502800000000007}, {'diff': 0.00010501399999999703}, {'diff': 0.00010502800000000007}, {'diff': 0.000104707999999998...</msg>
<status status="PASS" starttime="20201030 18:31:09.827" endtime="20201030 18:31:09.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.835" level="INFO">${ACCURACY} = {'diff': [0.00010506999999999878, 0.00010513900000000062, 0.00010502800000000007, 0.00010501399999999703, 0.00010502800000000007, 0.0001047079999999985, 0.0001053750000000013, 0.00010457000000000174, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.831" endtime="20201030 18:31:09.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.839" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.838" endtime="20201030 18:31:09.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.842" level="INFO">VALUE: [0.00010506999999999878, 0.00010513900000000062, 0.00010502800000000007, 0.00010501399999999703, 0.00010502800000000007, 0.0001047079999999985, 0.0001053750000000013, 0.00010457000000000174, 0.00010463900000000012, 0.00010438899999999987, 0.00010517999999999986, 0.00010475000000000068, 0.00010493099999999908, 0.0001051949999999989, 0.00010472199999999807, 0.00010512500000000105, 0.00010523599999999814, 0.00010461100000000098, 0.00010518099999999933, 0.000104514, 0.00010530499999999998, 0.00010445800000000172, 0.00010463900000000012, 0.00010434699999999769, 0.00010531999999999903, 0.00010445800000000172, 0.00010488900000000037, 0.00010438899999999987, 0.00010481899999999905, 0.00010440300000000291, 0.00010450000000000043, 0.00010494400000000265, 0.00010493099999999908, 0.00010513900000000062, 0.00010494399999999918, 0.0001050689999999993, 0.00010440299999999944, 0.00010444499999999815, 0.00010463900000000012, 0.00010495800000000222, 0.00010530499999999998, 0.00010490299999999994, 0.00010458299999999837, 0.0001050689999999993, 0.0001046810000000023, 0.00010444399999999868, 0.00010518099999999933, 0.00010493099999999908, 0.00010494400000000265, 0.00010495899999999822]</msg>
<status status="PASS" starttime="20201030 18:31:09.840" endtime="20201030 18:31:09.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.836" endtime="20201030 18:31:09.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.852" endtime="20201030 18:31:09.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.850" endtime="20201030 18:31:09.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.849" endtime="20201030 18:31:09.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.485" endtime="20201030 18:31:09.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.484" endtime="20201030 18:31:09.872"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.881" endtime="20201030 18:31:09.901"></status>
</kw>
<msg timestamp="20201030 18:31:09.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.879" endtime="20201030 18:31:09.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.902" endtime="20201030 18:31:09.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.905" endtime="20201030 18:31:09.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.877" endtime="20201030 18:31:09.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.875" endtime="20201030 18:31:09.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.913" endtime="20201030 18:31:10.200"></status>
</kw>
<msg timestamp="20201030 18:31:10.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.912" endtime="20201030 18:31:10.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.204" endtime="20201030 18:31:10.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.212" endtime="20201030 18:31:10.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.909" endtime="20201030 18:31:10.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.908" endtime="20201030 18:31:10.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.219" level="INFO">${RESULT} = [{'diff': 0.00010655500000000123}, {'diff': 0.0001060690000000003}, {'diff': 0.00010612499999999858}, {'diff': 0.00010623599999999914}, {'diff': 0.00010622199999999957}, {'diff': 0.0001058049999999970...</msg>
<status status="PASS" starttime="20201030 18:31:10.215" endtime="20201030 18:31:10.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.223" level="INFO">${ACCURACY} = {'diff': [0.00010655500000000123, 0.0001060690000000003, 0.00010612499999999858, 0.00010623599999999914, 0.00010622199999999957, 0.00010580499999999701, 0.00010531999999999903, 0.00010541600000000054,...</msg>
<status status="PASS" starttime="20201030 18:31:10.220" endtime="20201030 18:31:10.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.227" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.226" endtime="20201030 18:31:10.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.229" level="INFO">VALUE: [0.00010655500000000123, 0.0001060690000000003, 0.00010612499999999858, 0.00010623599999999914, 0.00010622199999999957, 0.00010580499999999701, 0.00010531999999999903, 0.00010541600000000054, 0.00010543099999999958, 0.00010569399999999993, 0.00010630600000000046, 0.0001058889999999979, 0.00010623599999999914, 0.00010580599999999996, 0.00010611100000000248, 0.0001060560000000002, 0.00010544399999999968, 0.00010594499999999965, 0.00010543000000000011, 0.00010608399999999935, 0.00010604200000000064, 0.00010591699999999704, 0.00010573599999999864, 0.00010566700000000026, 0.00010545899999999872, 0.00010531899999999955, 0.0001060560000000002, 0.00010536100000000173, 0.00010617999999999739, 0.00010544400000000315, 0.00010630500000000098, 0.00010593100000000008, 0.00010536100000000173, 0.0001058889999999979, 0.00010569500000000287, 0.00010534699999999869, 0.00010549999999999796, 0.00010587499999999833, 0.00010575000000000168, 0.00010631900000000055, 0.00010556999999999928, 0.00010619400000000043, 0.00010568099999999983, 0.00010600000000000193, 0.00010618000000000086, 0.00010543000000000011, 0.00010631900000000055, 0.00010631900000000055, 0.00010593000000000061, 0.0001056940000000034]</msg>
<status status="PASS" starttime="20201030 18:31:10.228" endtime="20201030 18:31:10.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.223" endtime="20201030 18:31:10.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.234" endtime="20201030 18:31:10.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.233" endtime="20201030 18:31:10.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.232" endtime="20201030 18:31:10.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.873" endtime="20201030 18:31:10.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.873" endtime="20201030 18:31:10.255"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.264" endtime="20201030 18:31:10.284"></status>
</kw>
<msg timestamp="20201030 18:31:10.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.262" endtime="20201030 18:31:10.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.286" endtime="20201030 18:31:10.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.288" endtime="20201030 18:31:10.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.260" endtime="20201030 18:31:10.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.258" endtime="20201030 18:31:10.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.297" endtime="20201030 18:31:10.583"></status>
</kw>
<msg timestamp="20201030 18:31:10.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.296" endtime="20201030 18:31:10.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.587" endtime="20201030 18:31:10.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.595" endtime="20201030 18:31:10.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.293" endtime="20201030 18:31:10.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.291" endtime="20201030 18:31:10.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.602" level="INFO">${RESULT} = [{'diff': 0.00010741699999999854}, {'diff': 0.00010662500000000255}, {'diff': 0.00010711100000000001}, {'diff': 0.00010719399999999796}, {'diff': 0.00010719400000000143}, {'diff': 0.000107236000000000...</msg>
<status status="PASS" starttime="20201030 18:31:10.599" endtime="20201030 18:31:10.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.606" level="INFO">${ACCURACY} = {'diff': [0.00010741699999999854, 0.00010662500000000255, 0.00010711100000000001, 0.00010719399999999796, 0.00010719400000000143, 0.00010723600000000014, 0.00010668000000000136, 0.00010686099999999976...</msg>
<status status="PASS" starttime="20201030 18:31:10.603" endtime="20201030 18:31:10.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.610" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.609" endtime="20201030 18:31:10.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.613" level="INFO">VALUE: [0.00010741699999999854, 0.00010662500000000255, 0.00010711100000000001, 0.00010719399999999796, 0.00010719400000000143, 0.00010723600000000014, 0.00010668000000000136, 0.00010686099999999976, 0.00010716700000000176, 0.00010692999999999814, 0.00010670899999999997, 0.00010706899999999783, 0.0001070140000000025, 0.00010661100000000298, 0.0001070140000000025, 0.00010730600000000146, 0.00010661100000000298, 0.00010631899999999708, 0.00010638900000000187, 0.00010695799999999728, 0.00010688900000000237, 0.00010698599999999989, 0.00010681900000000105, 0.00010731999999999756, 0.00010730500000000198, 0.00010686099999999976, 0.00010662499999999908, 0.0001072629999999998, 0.00010713899999999915, 0.00010726399999999928, 0.00010699999999999946, 0.00010690299999999847, 0.00010701299999999955, 0.000107208000000001, 0.0001063880000000024, 0.00010658399999999985, 0.00010687499999999933, 0.00010712499999999958, 0.00010693100000000108, 0.00010650000000000243, 0.00010662500000000255, 0.00010732000000000103, 0.00010648599999999939, 0.00010722200000000057, 0.00010700000000000293, 0.00010658300000000037, 0.00010694400000000118, 0.00010649999999999896, 0.00010723699999999961, 0.00010720900000000047]</msg>
<status status="PASS" starttime="20201030 18:31:10.611" endtime="20201030 18:31:10.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.607" endtime="20201030 18:31:10.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.619" endtime="20201030 18:31:10.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.617" endtime="20201030 18:31:10.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.616" endtime="20201030 18:31:10.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.256" endtime="20201030 18:31:10.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.255" endtime="20201030 18:31:10.639"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.648" endtime="20201030 18:31:10.668"></status>
</kw>
<msg timestamp="20201030 18:31:10.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.646" endtime="20201030 18:31:10.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.669" endtime="20201030 18:31:10.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.672" endtime="20201030 18:31:10.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.644" endtime="20201030 18:31:10.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.642" endtime="20201030 18:31:10.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.681" endtime="20201030 18:31:10.968"></status>
</kw>
<msg timestamp="20201030 18:31:10.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.679" endtime="20201030 18:31:10.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.972" endtime="20201030 18:31:10.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.980" endtime="20201030 18:31:10.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.677" endtime="20201030 18:31:10.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.675" endtime="20201030 18:31:10.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.986" level="INFO">${RESULT} = [{'diff': 0.00010862500000000108}, {'diff': 0.00010827799999999985}, {'diff': 0.00010808300000000187}, {'diff': 0.00010738900000000287}, {'diff': 0.00010772200000000107}, {'diff': 0.000107611000000000...</msg>
<status status="PASS" starttime="20201030 18:31:10.983" endtime="20201030 18:31:10.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.991" level="INFO">${ACCURACY} = {'diff': [0.00010862500000000108, 0.00010827799999999985, 0.00010808300000000187, 0.00010738900000000287, 0.00010772200000000107, 0.00010761100000000051, 0.00010751399999999953, 0.000107514000000003, ...</msg>
<status status="PASS" starttime="20201030 18:31:10.987" endtime="20201030 18:31:10.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.996" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.995" endtime="20201030 18:31:10.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.998" level="INFO">VALUE: [0.00010862500000000108, 0.00010827799999999985, 0.00010808300000000187, 0.00010738900000000287, 0.00010772200000000107, 0.00010761100000000051, 0.00010751399999999953, 0.000107514000000003, 0.00010755499999999876, 0.00010795799999999828, 0.00010822300000000104, 0.00010754200000000214, 0.0001073889999999994, 0.00010811099999999754, 0.00010831899999999908, 0.00010748600000000039, 0.00010795900000000122, 0.00010780499999999901, 0.00010812500000000058, 0.00010762500000000008, 0.0001080829999999984, 0.00010744499999999768, 0.00010780499999999901, 0.00010769400000000193, 0.00010762500000000008, 0.00010780500000000248, 0.00010811200000000049, 0.0001077500000000002, 0.00010743100000000158, 0.00010777799999999935, 0.0001078889999999999, 0.00010812500000000058, 0.0001073889999999994, 0.00010799999999999699, 0.00010756899999999833, 0.00010748600000000039, 0.00010755499999999876, 0.00010833299999999865, 0.00010782000000000153, 0.00010808400000000135, 0.00010780499999999901, 0.0001076950000000014, 0.00010794500000000165, 0.00010818100000000233, 0.00010831899999999908, 0.000108208000000002, 0.00010751399999999953, 0.0001073889999999994, 0.00010786100000000076, 0.00010748600000000039]</msg>
<status status="PASS" starttime="20201030 18:31:10.997" endtime="20201030 18:31:10.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.992" endtime="20201030 18:31:10.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.003" endtime="20201030 18:31:11.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.002" endtime="20201030 18:31:11.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.000" endtime="20201030 18:31:11.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.640" endtime="20201030 18:31:11.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.640" endtime="20201030 18:31:11.024"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.032" endtime="20201030 18:31:11.052"></status>
</kw>
<msg timestamp="20201030 18:31:11.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.031" endtime="20201030 18:31:11.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.053" endtime="20201030 18:31:11.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.056" endtime="20201030 18:31:11.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.028" endtime="20201030 18:31:11.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.026" endtime="20201030 18:31:11.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.065" endtime="20201030 18:31:11.354"></status>
</kw>
<msg timestamp="20201030 18:31:11.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.063" endtime="20201030 18:31:11.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.363" endtime="20201030 18:31:11.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.381" endtime="20201030 18:31:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.061" endtime="20201030 18:31:11.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.059" endtime="20201030 18:31:11.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.395" level="INFO">${RESULT} = [{'diff': 0.00010955600000000024}, {'diff': 0.00010845799999999878}, {'diff': 0.00010859700000000194}, {'diff': 0.00010912499999999811}, {'diff': 0.00010867999999999989}, {'diff': 0.000108416999999999...</msg>
<status status="PASS" starttime="20201030 18:31:11.388" endtime="20201030 18:31:11.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:11.404" level="INFO">${ACCURACY} = {'diff': [0.00010955600000000024, 0.00010845799999999878, 0.00010859700000000194, 0.00010912499999999811, 0.00010867999999999989, 0.00010841699999999954, 0.00010834699999999822, 0.00010869499999999893...</msg>
<status status="PASS" starttime="20201030 18:31:11.397" endtime="20201030 18:31:11.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.412" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:31:11.410" endtime="20201030 18:31:11.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.417" level="INFO">VALUE: [0.00010955600000000024, 0.00010845799999999878, 0.00010859700000000194, 0.00010912499999999811, 0.00010867999999999989, 0.00010841699999999954, 0.00010834699999999822, 0.00010869499999999893, 0.00010894399999999971, 0.00010920799999999953, 0.00010897200000000232, 0.00010879199999999992, 0.00010918099999999986, 0.00010847300000000129, 0.00010868000000000336, 0.00010834699999999822, 0.00010863900000000065, 0.00010874999999999774, 0.00010930599999999999, 0.00010890300000000047, 0.00010873600000000164, 0.00010930500000000051, 0.00010915300000000072, 0.00010883399999999863, 0.00010916700000000029, 0.0001083340000000016, 0.00010891600000000057, 0.00010922299999999857, 0.00010837500000000083, 0.00010905599999999974, 0.00010866700000000326, 0.00010879100000000044, 0.00010836200000000074, 0.00010899999999999799, 0.00010874999999999774, 0.00010879199999999992, 0.00010926299999999833, 0.00010900000000000146, 0.00010866600000000032, 0.00010866699999999979, 0.00010904100000000069, 0.00010854199999999967, 0.00010867999999999989, 0.00010907000000000278, 0.00010930500000000051, 0.00010886100000000176, 0.00010844399999999921, 0.00010837499999999736, 0.00010862499999999761, 0.00010912500000000158]</msg>
<status status="PASS" starttime="20201030 18:31:11.415" endtime="20201030 18:31:11.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.405" endtime="20201030 18:31:11.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.428" endtime="20201030 18:31:11.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.424" endtime="20201030 18:31:11.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.422" endtime="20201030 18:31:11.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.025" endtime="20201030 18:31:11.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.024" endtime="20201030 18:31:11.450"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.458" endtime="20201030 18:31:11.479"></status>
</kw>
<msg timestamp="20201030 18:31:11.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.457" endtime="20201030 18:31:11.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.480" endtime="20201030 18:31:11.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.483" endtime="20201030 18:31:11.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.454" endtime="20201030 18:31:11.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.452" endtime="20201030 18:31:11.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.492" endtime="20201030 18:31:11.776"></status>
</kw>
<msg timestamp="20201030 18:31:11.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.490" endtime="20201030 18:31:11.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.781" endtime="20201030 18:31:11.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.789" endtime="20201030 18:31:11.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.488" endtime="20201030 18:31:11.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.486" endtime="20201030 18:31:11.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.795" level="INFO">${RESULT} = [{'diff': 0.0001102769999999989}, {'diff': 0.00010973599999999917}, {'diff': 0.00010979200000000092}, {'diff': 0.0001098890000000019}, {'diff': 0.00011012500000000258}, {'diff': 0.00010998599999999942...</msg>
<status status="PASS" starttime="20201030 18:31:11.792" endtime="20201030 18:31:11.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:11.799" level="INFO">${ACCURACY} = {'diff': [0.0001102769999999989, 0.00010973599999999917, 0.00010979200000000092, 0.0001098890000000019, 0.00011012500000000258, 0.00010998599999999942, 0.00010950000000000196, 0.00010980500000000101, ...</msg>
<status status="PASS" starttime="20201030 18:31:11.796" endtime="20201030 18:31:11.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.803" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:31:11.802" endtime="20201030 18:31:11.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.806" level="INFO">VALUE: [0.0001102769999999989, 0.00010973599999999917, 0.00010979200000000092, 0.0001098890000000019, 0.00011012500000000258, 0.00010998599999999942, 0.00010950000000000196, 0.00010980500000000101, 0.00011029200000000142, 0.00010961099999999904, 0.00010966700000000079, 0.00010966600000000132, 0.0001097219999999996, 0.00011000000000000246, 0.00011011099999999954, 0.00010982000000000006, 0.00011026400000000228, 0.00010954099999999772, 0.00010930599999999999, 0.00010937500000000183, 0.00010979200000000092, 0.00010961099999999904, 0.00010979099999999797, 0.0001097219999999996, 0.00010962499999999861, 0.00011018100000000086, 0.00010974999999999874, 0.00010962499999999861, 0.00010970800000000003, 0.00011005500000000126, 0.00010965299999999775, 0.00010937499999999836, 0.0001102220000000001, 0.0001102220000000001, 0.00010936099999999879, 0.00010965299999999775, 0.00011012499999999911, 0.00010998599999999942, 0.00010961099999999904, 0.00010997199999999985, 0.00011013900000000215, 0.00010993100000000061, 0.00010973599999999917, 0.00010991700000000104, 0.00011023599999999967, 0.00010999999999999899, 0.00010965199999999828, 0.00010947200000000282, 0.00011029100000000194, 0.00010955600000000024]</msg>
<status status="PASS" starttime="20201030 18:31:11.804" endtime="20201030 18:31:11.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.800" endtime="20201030 18:31:11.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.811" endtime="20201030 18:31:11.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.810" endtime="20201030 18:31:11.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.809" endtime="20201030 18:31:11.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.451" endtime="20201030 18:31:11.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.450" endtime="20201030 18:31:11.832"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.841" endtime="20201030 18:31:11.860"></status>
</kw>
<msg timestamp="20201030 18:31:11.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.839" endtime="20201030 18:31:11.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.862" endtime="20201030 18:31:11.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.864" endtime="20201030 18:31:11.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.837" endtime="20201030 18:31:11.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.835" endtime="20201030 18:31:11.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.873" endtime="20201030 18:31:12.159"></status>
</kw>
<msg timestamp="20201030 18:31:12.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021268972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.872" endtime="20201030 18:31:12.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021268972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.163" endtime="20201030 18:31:12.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.171" endtime="20201030 18:31:12.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.869" endtime="20201030 18:31:12.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.867" endtime="20201030 18:31:12.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.177" level="INFO">${RESULT} = [{'diff': 0.00011165299999999975}, {'diff': 0.00011086100000000029}, {'diff': 0.0001109159999999991}, {'diff': 0.00011127799999999938}, {'diff': 0.00011084700000000072}, {'diff': 0.0001111250000000001...</msg>
<status status="PASS" starttime="20201030 18:31:12.174" endtime="20201030 18:31:12.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.185" level="INFO">${ACCURACY} = {'diff': [0.00011165299999999975, 0.00011086100000000029, 0.0001109159999999991, 0.00011127799999999938, 0.00011084700000000072, 0.00011112500000000011, 0.00011123699999999667, 0.00011045799999999731,...</msg>
<status status="PASS" starttime="20201030 18:31:12.178" endtime="20201030 18:31:12.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.189" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.188" endtime="20201030 18:31:12.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.191" level="INFO">VALUE: [0.00011165299999999975, 0.00011086100000000029, 0.0001109159999999991, 0.00011127799999999938, 0.00011084700000000072, 0.00011112500000000011, 0.00011123699999999667, 0.00011045799999999731, 0.00011059700000000047, 0.00011066700000000179, 0.00011102799999999913, 0.00011130599999999852, 0.00011059700000000047, 0.00011067999999999842, 0.00011061100000000004, 0.00011111100000000054, 0.00011048599999999992, 0.00011044500000000068, 0.00011106899999999836, 0.0001110419999999987, 0.00011036099999999979, 0.00011045800000000078, 0.00011061100000000004, 0.00011036100000000326, 0.00011131899999999861, 0.0001112220000000011, 0.00011119400000000196, 0.00011116699999999882, 0.00011079099999999897, 0.00011119500000000143, 0.00011098600000000042, 0.00011041699999999807, 0.00011052799999999863, 0.00011070799999999756, 0.00011126399999999981, 0.00011037500000000283, 0.00011093099999999814, 0.00011048599999999992, 0.00011116600000000282, 0.00011077799999999888, 0.00011123600000000067, 0.00011099999999999999, 0.00011091600000000257, 0.00011123600000000067, 0.00011086100000000029, 0.00011048600000000339, 0.00011102799999999913, 0.00011062499999999961, 0.00011111100000000054, 0.00011073600000000017]</msg>
<status status="PASS" starttime="20201030 18:31:12.190" endtime="20201030 18:31:12.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.185" endtime="20201030 18:31:12.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.196" endtime="20201030 18:31:12.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.195" endtime="20201030 18:31:12.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.194" endtime="20201030 18:31:12.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.833" endtime="20201030 18:31:12.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.833" endtime="20201030 18:31:12.217"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.225" endtime="20201030 18:31:12.245"></status>
</kw>
<msg timestamp="20201030 18:31:12.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.224" endtime="20201030 18:31:12.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.246" endtime="20201030 18:31:12.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.249" endtime="20201030 18:31:12.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.221" endtime="20201030 18:31:12.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.219" endtime="20201030 18:31:12.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.258" endtime="20201030 18:31:12.544"></status>
</kw>
<msg timestamp="20201030 18:31:12.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.256" endtime="20201030 18:31:12.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.548" endtime="20201030 18:31:12.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.556" endtime="20201030 18:31:12.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.254" endtime="20201030 18:31:12.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.252" endtime="20201030 18:31:12.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.562" level="INFO">${RESULT} = [{'diff': 0.0001122359999999982}, {'diff': 0.00011209799999999798}, {'diff': 0.0001122359999999982}, {'diff': 0.00011227800000000038}, {'diff': 0.00011148599999999745}, {'diff': 0.00011158299999999843...</msg>
<status status="PASS" starttime="20201030 18:31:12.559" endtime="20201030 18:31:12.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.566" level="INFO">${ACCURACY} = {'diff': [0.0001122359999999982, 0.00011209799999999798, 0.0001122359999999982, 0.00011227800000000038, 0.00011148599999999745, 0.00011158299999999843, 0.00011134700000000122, 0.00011191699999999957, ...</msg>
<status status="PASS" starttime="20201030 18:31:12.563" endtime="20201030 18:31:12.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.570" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.569" endtime="20201030 18:31:12.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.573" level="INFO">VALUE: [0.0001122359999999982, 0.00011209799999999798, 0.0001122359999999982, 0.00011227800000000038, 0.00011148599999999745, 0.00011158299999999843, 0.00011134700000000122, 0.00011191699999999957, 0.00011152799999999963, 0.00011187500000000086, 0.00011217999999999992, 0.00011225000000000124, 0.00011133299999999818, 0.00011170800000000203, 0.00011162500000000061, 0.0001117770000000004, 0.00011215300000000025, 0.00011198600000000142, 0.0001122359999999982, 0.00011166699999999932, 0.00011162500000000061, 0.00011145900000000125, 0.00011200000000000099, 0.00011138899999999993, 0.00011197200000000185, 0.00011140200000000003, 0.00011181899999999911, 0.00011213900000000068, 0.00011179200000000292, 0.0001120419999999997, 0.00011216600000000035, 0.00011211199999999755, 0.00011202800000000013, 0.00011187500000000086, 0.00011167999999999942, 0.00011175000000000074, 0.00011198599999999795, 0.00011179200000000292, 0.00011150000000000049, 0.00011148600000000092, 0.00011149999999999702, 0.0001117220000000016, 0.00011211100000000154, 0.00011193100000000261, 0.00011156899999999886, 0.00011180599999999902, 0.00011147300000000082, 0.00011129199999999895, 0.00011177799999999988, 0.00011184700000000172]</msg>
<status status="PASS" starttime="20201030 18:31:12.572" endtime="20201030 18:31:12.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.567" endtime="20201030 18:31:12.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.578" endtime="20201030 18:31:12.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.576" endtime="20201030 18:31:12.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.575" endtime="20201030 18:31:12.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.218" endtime="20201030 18:31:12.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.217" endtime="20201030 18:31:12.598"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.607" endtime="20201030 18:31:12.627"></status>
</kw>
<msg timestamp="20201030 18:31:12.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.605" endtime="20201030 18:31:12.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.629" endtime="20201030 18:31:12.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.632" endtime="20201030 18:31:12.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.603" endtime="20201030 18:31:12.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.601" endtime="20201030 18:31:12.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.640" endtime="20201030 18:31:12.926"></status>
</kw>
<msg timestamp="20201030 18:31:12.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.639" endtime="20201030 18:31:12.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.930" endtime="20201030 18:31:12.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.938" endtime="20201030 18:31:12.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.636" endtime="20201030 18:31:12.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.635" endtime="20201030 18:31:12.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.945" level="INFO">${RESULT} = [{'diff': 0.00011361099999999957}, {'diff': 0.00011263900000000118}, {'diff': 0.0001123480000000017}, {'diff': 0.00011258299999999943}, {'diff': 0.00011262499999999814}, {'diff': 0.0001125829999999994...</msg>
<status status="PASS" starttime="20201030 18:31:12.942" endtime="20201030 18:31:12.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.948" level="INFO">${ACCURACY} = {'diff': [0.00011361099999999957, 0.00011263900000000118, 0.0001123480000000017, 0.00011258299999999943, 0.00011262499999999814, 0.00011258299999999943, 0.00011262500000000161, 0.00011326399999999834,...</msg>
<status status="PASS" starttime="20201030 18:31:12.946" endtime="20201030 18:31:12.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.953" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.952" endtime="20201030 18:31:12.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.955" level="INFO">VALUE: [0.00011361099999999957, 0.00011263900000000118, 0.0001123480000000017, 0.00011258299999999943, 0.00011262499999999814, 0.00011258299999999943, 0.00011262500000000161, 0.00011326399999999834, 0.00011269499999999946, 0.00011269399999999999, 0.00011305600000000027, 0.00011333300000000018, 0.00011240200000000103, 0.00011294400000000024, 0.00011265300000000075, 0.00011265300000000075, 0.0001127229999999986, 0.00011231899999999961, 0.00011326400000000181, 0.00011277800000000088, 0.00011316600000000135, 0.00011243000000000017, 0.00011259800000000195, 0.00011241599999999713, 0.00011290200000000153, 0.00011297199999999938, 0.00011258299999999943, 0.00011327800000000138, 0.00011245799999999931, 0.00011316699999999735, 0.00011251400000000106, 0.00011234700000000222, 0.00011277800000000088, 0.00011295799999999981, 0.00011238900000000093, 0.0001124160000000006, 0.00011327699999999843, 0.00011251400000000106, 0.00011298600000000242, 0.00011318000000000092, 0.0001130969999999995, 0.00011284699999999925, 0.00011266600000000085, 0.00011279100000000097, 0.0001128749999999984, 0.00011327800000000138, 0.00011327800000000138, 0.0001127359999999987, 0.00011322199999999963, 0.00011312499999999864]</msg>
<status status="PASS" starttime="20201030 18:31:12.954" endtime="20201030 18:31:12.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.949" endtime="20201030 18:31:12.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.961" endtime="20201030 18:31:12.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.959" endtime="20201030 18:31:12.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.958" endtime="20201030 18:31:12.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.599" endtime="20201030 18:31:12.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.599" endtime="20201030 18:31:12.982"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.990" endtime="20201030 18:31:13.010"></status>
</kw>
<msg timestamp="20201030 18:31:13.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.989" endtime="20201030 18:31:13.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.012" endtime="20201030 18:31:13.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.014" endtime="20201030 18:31:13.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.986" endtime="20201030 18:31:13.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.984" endtime="20201030 18:31:13.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.023" endtime="20201030 18:31:13.308"></status>
</kw>
<msg timestamp="20201030 18:31:13.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.021" endtime="20201030 18:31:13.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.312" endtime="20201030 18:31:13.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.320" endtime="20201030 18:31:13.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.019" endtime="20201030 18:31:13.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.017" endtime="20201030 18:31:13.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.326" level="INFO">${RESULT} = [{'diff': 0.00011445799999999784}, {'diff': 0.00011395799999999734}, {'diff': 0.00011384699999999678}, {'diff': 0.00011422200000000063}, {'diff': 0.00011395800000000081}, {'diff': 0.000113987000000002...</msg>
<status status="PASS" starttime="20201030 18:31:13.323" endtime="20201030 18:31:13.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:13.331" level="INFO">${ACCURACY} = {'diff': [0.00011445799999999784, 0.00011395799999999734, 0.00011384699999999678, 0.00011422200000000063, 0.00011395800000000081, 0.00011398700000000289, 0.0001142360000000002, 0.00011430600000000152,...</msg>
<status status="PASS" starttime="20201030 18:31:13.327" endtime="20201030 18:31:13.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.335" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:31:13.334" endtime="20201030 18:31:13.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.338" level="INFO">VALUE: [0.00011445799999999784, 0.00011395799999999734, 0.00011384699999999678, 0.00011422200000000063, 0.00011395800000000081, 0.00011398700000000289, 0.0001142360000000002, 0.00011430600000000152, 0.0001140420000000017, 0.00011391700000000157, 0.00011365299999999828, 0.00011386099999999982, 0.00011365300000000175, 0.00011402800000000213, 0.00011426399999999934, 0.00011336099999999932, 0.00011341700000000107, 0.00011383400000000016, 0.0001142360000000002, 0.0001135420000000012, 0.00011402799999999866, 0.0001140420000000017, 0.00011398599999999995, 0.00011365299999999828, 0.00011420800000000106, 0.00011365300000000175, 0.00011390299999999853, 0.000113903000000002, 0.00011381899999999764, 0.00011336100000000279, 0.00011340299999999803, 0.0001137359999999997, 0.00011408400000000041, 0.00011427699999999943, 0.0001140970000000005, 0.00011415299999999878, 0.00011384700000000025, 0.00011400000000000299, 0.0001137229999999996, 0.00011365199999999881, 0.00011338900000000193, 0.00011344400000000074, 0.00011394500000000071, 0.00011343100000000064, 0.0001135420000000012, 0.00011391700000000157, 0.00011415300000000225, 0.00011408400000000041, 0.000114290999999999, 0.00011366699999999785]</msg>
<status status="PASS" starttime="20201030 18:31:13.336" endtime="20201030 18:31:13.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.332" endtime="20201030 18:31:13.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.343" endtime="20201030 18:31:13.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.341" endtime="20201030 18:31:13.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.340" endtime="20201030 18:31:13.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.983" endtime="20201030 18:31:13.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.982" endtime="20201030 18:31:13.363"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.372" endtime="20201030 18:31:13.392"></status>
</kw>
<msg timestamp="20201030 18:31:13.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.370" endtime="20201030 18:31:13.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.393" endtime="20201030 18:31:13.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.395" endtime="20201030 18:31:13.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.368" endtime="20201030 18:31:13.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.366" endtime="20201030 18:31:13.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.404" endtime="20201030 18:31:13.692"></status>
</kw>
<msg timestamp="20201030 18:31:13.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02126925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:13.403" endtime="20201030 18:31:13.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02126925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:13.696" endtime="20201030 18:31:13.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.703" endtime="20201030 18:31:13.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.400" endtime="20201030 18:31:13.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.399" endtime="20201030 18:31:13.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.710" level="INFO">${RESULT} = [{'diff': 0.00011570799999999909}, {'diff': 0.00011477799999999941}, {'diff': 0.00011504099999999975}, {'diff': 0.00011469399999999852}, {'diff': 0.00011444500000000121}, {'diff': 0.000115111000000001...</msg>
<status status="PASS" starttime="20201030 18:31:13.707" endtime="20201030 18:31:13.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:13.714" level="INFO">${ACCURACY} = {'diff': [0.00011570799999999909, 0.00011477799999999941, 0.00011504099999999975, 0.00011469399999999852, 0.00011444500000000121, 0.00011511100000000107, 0.00011433400000000066, 0.00011458399999999744...</msg>
<status status="PASS" starttime="20201030 18:31:13.711" endtime="20201030 18:31:13.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.718" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:31:13.717" endtime="20201030 18:31:13.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.720" level="INFO">VALUE: [0.00011570799999999909, 0.00011477799999999941, 0.00011504099999999975, 0.00011469399999999852, 0.00011444500000000121, 0.00011511100000000107, 0.00011433400000000066, 0.00011458399999999744, 0.0001145689999999984, 0.00011502799999999966, 0.00011475000000000027, 0.00011476399999999984, 0.00011494399999999877, 0.0001143749999999999, 0.00011513900000000021, 0.0001147499999999968, 0.00011490299999999953, 0.00011483300000000168, 0.00011472199999999766, 0.00011463899999999971, 0.00011466699999999885, 0.00011441599999999913, 0.00011520800000000206, 0.00011477799999999941, 0.00011511100000000107, 0.00011488899999999996, 0.00011488899999999996, 0.00011480499999999907, 0.0001150970000000015, 0.00011470800000000156, 0.00011479200000000245, 0.00011438899999999946, 0.00011461100000000057, 0.00011519500000000196, 0.00011512500000000064, 0.00011456900000000186, 0.00011483300000000168, 0.00011457000000000134, 0.00011440199999999956, 0.00011484699999999778, 0.00011495799999999834, 0.00011502799999999966, 0.00011462500000000014, 0.00011444399999999827, 0.00011444400000000174, 0.00011508299999999846, 0.00011458399999999744, 0.00011515200000000031, 0.00011526400000000034, 0.00011515299999999978]</msg>
<status status="PASS" starttime="20201030 18:31:13.719" endtime="20201030 18:31:13.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.715" endtime="20201030 18:31:13.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.725" endtime="20201030 18:31:13.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.724" endtime="20201030 18:31:13.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.723" endtime="20201030 18:31:13.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.364" endtime="20201030 18:31:13.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.364" endtime="20201030 18:31:13.746"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.757" endtime="20201030 18:31:13.778"></status>
</kw>
<msg timestamp="20201030 18:31:13.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.755" endtime="20201030 18:31:13.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.779" endtime="20201030 18:31:13.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.782" endtime="20201030 18:31:13.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.752" endtime="20201030 18:31:13.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.748" endtime="20201030 18:31:13.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.791" endtime="20201030 18:31:14.076"></status>
</kw>
<msg timestamp="20201030 18:31:14.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024686833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0248035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:13.789" endtime="20201030 18:31:14.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024686833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0248035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:14.080" endtime="20201030 18:31:14.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.088" endtime="20201030 18:31:14.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.787" endtime="20201030 18:31:14.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.785" endtime="20201030 18:31:14.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.095" level="INFO">${RESULT} = [{'diff': 0.00011666700000000085}, {'diff': 0.00011570799999999909}, {'diff': 0.00011595800000000281}, {'diff': 0.00011625000000000177}, {'diff': 0.00011619499999999949}, {'diff': 0.000115403000000000...</msg>
<status status="PASS" starttime="20201030 18:31:14.091" endtime="20201030 18:31:14.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.098" level="INFO">${ACCURACY} = {'diff': [0.00011666700000000085, 0.00011570799999999909, 0.00011595800000000281, 0.00011625000000000177, 0.00011619499999999949, 0.00011540300000000003, 0.00011623599999999873, 0.00011591600000000063...</msg>
<status status="PASS" starttime="20201030 18:31:14.095" endtime="20201030 18:31:14.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.103" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.102" endtime="20201030 18:31:14.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.105" level="INFO">VALUE: [0.00011666700000000085, 0.00011570799999999909, 0.00011595800000000281, 0.00011625000000000177, 0.00011619499999999949, 0.00011540300000000003, 0.00011623599999999873, 0.00011591600000000063, 0.00011551400000000059, 0.00011570899999999856, 0.00011584700000000225, 0.00011608299999999946, 0.00011606999999999937, 0.00011541600000000013, 0.00011534699999999828, 0.0001162230000000021, 0.0001157910000000005, 0.00011579199999999998, 0.0001154169999999996, 0.00011625000000000177, 0.0001159300000000002, 0.00011536100000000132, 0.00011608400000000241, 0.00011551400000000059, 0.00011606999999999937, 0.00011534700000000175, 0.00011583300000000268, 0.00011559800000000148, 0.00011602800000000066, 0.00011572199999999866, 0.00011555600000000277, 0.00011561199999999758, 0.00011584700000000225, 0.00011540300000000003, 0.00011557000000000234, 0.00011615299999999731, 0.00011630600000000005, 0.00011616600000000088, 0.00011616699999999688, 0.00011616700000000035, 0.00011615199999999784, 0.00011547199999999841, 0.00011623600000000567, 0.00011551400000000406, 0.00011601400000000456, 0.00011590199999999412, 0.00011543099999999917, 0.00011595799999999934, 0.00011531900000000261, 0.00011545799999999884]</msg>
<status status="PASS" starttime="20201030 18:31:14.104" endtime="20201030 18:31:14.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.099" endtime="20201030 18:31:14.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.111" endtime="20201030 18:31:14.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.109" endtime="20201030 18:31:14.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.108" endtime="20201030 18:31:14.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.747" endtime="20201030 18:31:14.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.746" endtime="20201030 18:31:14.132"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.140" endtime="20201030 18:31:14.161"></status>
</kw>
<msg timestamp="20201030 18:31:14.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.139" endtime="20201030 18:31:14.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.162" endtime="20201030 18:31:14.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.164" endtime="20201030 18:31:14.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.136" endtime="20201030 18:31:14.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.134" endtime="20201030 18:31:14.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.173" endtime="20201030 18:31:14.460"></status>
</kw>
<msg timestamp="20201030 18:31:14.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.172" endtime="20201030 18:31:14.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.464" endtime="20201030 18:31:14.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.472" endtime="20201030 18:31:14.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.169" endtime="20201030 18:31:14.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.167" endtime="20201030 18:31:14.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.478" level="INFO">${RESULT} = [{'diff': 0.00011758400000000044}, {'diff': 0.00011669400000000052}, {'diff': 0.00011663899999999824}, {'diff': 0.00011663900000000171}, {'diff': 0.0001166109999999991}, {'diff': 0.0001171390000000022...</msg>
<status status="PASS" starttime="20201030 18:31:14.475" endtime="20201030 18:31:14.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.483" level="INFO">${ACCURACY} = {'diff': [0.00011758400000000044, 0.00011669400000000052, 0.00011663899999999824, 0.00011663900000000171, 0.0001166109999999991, 0.00011713900000000221, 0.00011718100000000092, 0.00011698599999999948,...</msg>
<status status="PASS" starttime="20201030 18:31:14.479" endtime="20201030 18:31:14.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.488" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.487" endtime="20201030 18:31:14.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.490" level="INFO">VALUE: [0.00011758400000000044, 0.00011669400000000052, 0.00011663899999999824, 0.00011663900000000171, 0.0001166109999999991, 0.00011713900000000221, 0.00011718100000000092, 0.00011698599999999948, 0.00011719500000000049, 0.00011682000000000012, 0.00011648599999999898, 0.00011707000000000037, 0.00011715299999999831, 0.00011701400000000209, 0.00011637499999999842, 0.00011633399999999919, 0.00011645900000000278, 0.00011652699999999822, 0.00011719400000000102, 0.00011699999999999905, 0.00011647199999999941, 0.00011673599999999923, 0.0001170690000000009, 0.0001167499999999988, 0.0001170690000000009, 0.00011630600000000005, 0.00011659800000000248, 0.00011701399999999862, 0.00011722200000000016, 0.00011712499999999917, 0.0001163049999999971, 0.00011631900000000014, 0.0001163750000000019, 0.00011644400000000027, 0.00011683300000000021, 0.00011725000000000277, 0.00011712500000000264, 0.00011684699999999978, 0.00011658299999999996, 0.00011695800000000034, 0.00011662500000000214, 0.00011694500000000024, 0.00011681900000000064, 0.00011711200000000255, 0.00011676400000000184, 0.00011669400000000052, 0.00011662500000000214, 0.00011692999999999773, 0.00011631900000000014, 0.00011704200000000123]</msg>
<status status="PASS" starttime="20201030 18:31:14.489" endtime="20201030 18:31:14.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.484" endtime="20201030 18:31:14.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.495" endtime="20201030 18:31:14.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.494" endtime="20201030 18:31:14.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.492" endtime="20201030 18:31:14.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.133" endtime="20201030 18:31:14.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.132" endtime="20201030 18:31:14.516"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.524" endtime="20201030 18:31:14.544"></status>
</kw>
<msg timestamp="20201030 18:31:14.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.523" endtime="20201030 18:31:14.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.546" endtime="20201030 18:31:14.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.548" endtime="20201030 18:31:14.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.520" endtime="20201030 18:31:14.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.518" endtime="20201030 18:31:14.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.557" endtime="20201030 18:31:14.844"></status>
</kw>
<msg timestamp="20201030 18:31:14.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021433875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.555" endtime="20201030 18:31:14.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021433875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.848" endtime="20201030 18:31:14.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.856" endtime="20201030 18:31:14.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.553" endtime="20201030 18:31:14.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.551" endtime="20201030 18:31:14.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.862" level="INFO">${RESULT} = [{'diff': 0.00011795800000000134}, {'diff': 0.00011819399999999855}, {'diff': 0.00011783299999999775}, {'diff': 0.00011762499999999967}, {'diff': 0.00011777799999999894}, {'diff': 0.000117554999999998...</msg>
<status status="PASS" starttime="20201030 18:31:14.859" endtime="20201030 18:31:14.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.866" level="INFO">${ACCURACY} = {'diff': [0.00011795800000000134, 0.00011819399999999855, 0.00011783299999999775, 0.00011762499999999967, 0.00011777799999999894, 0.00011755499999999836, 0.0001175829999999975, 0.00011795800000000134,...</msg>
<status status="PASS" starttime="20201030 18:31:14.863" endtime="20201030 18:31:14.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.871" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.870" endtime="20201030 18:31:14.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.873" level="INFO">VALUE: [0.00011795800000000134, 0.00011819399999999855, 0.00011783299999999775, 0.00011762499999999967, 0.00011777799999999894, 0.00011755499999999836, 0.0001175829999999975, 0.00011795800000000134, 0.00011833300000000171, 0.00011783300000000121, 0.0001174439999999978, 0.00011749999999999955, 0.00011797300000000038, 0.0001177499999999998, 0.00011823600000000073, 0.00011759700000000053, 0.00011800000000000005, 0.00011763799999999977, 0.00011823600000000073, 0.00011802799999999919, 0.0001181249999999967, 0.0001177089999999971, 0.0001180690000000019, 0.00011794400000000177, 0.0001180690000000019, 0.00011808300000000146, 0.00011790299999999906, 0.00011765299999999881, 0.00011792999999999873, 0.00011736099999999985, 0.00011790299999999906, 0.00011763900000000271, 0.00011782000000000112, 0.00011813800000000027, 0.00011829199999999901, 0.00011770799999999762, 0.00011798600000000048, 0.00011745800000000084, 0.00011770800000000109, 0.00011813899999999974, 0.00011809699999999757, 0.00011772200000000066, 0.00011759699999999706, 0.00011745900000000031, 0.00011827799999999944, 0.00011765299999999881, 0.00011733400000000019, 0.00011777699999999947, 0.00011772200000000066, 0.00011798600000000048]</msg>
<status status="PASS" starttime="20201030 18:31:14.872" endtime="20201030 18:31:14.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.867" endtime="20201030 18:31:14.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.883" endtime="20201030 18:31:14.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.881" endtime="20201030 18:31:14.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.880" endtime="20201030 18:31:14.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.517" endtime="20201030 18:31:14.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.516" endtime="20201030 18:31:14.903"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.912" endtime="20201030 18:31:14.933"></status>
</kw>
<msg timestamp="20201030 18:31:14.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.910" endtime="20201030 18:31:14.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.934" endtime="20201030 18:31:14.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.937" endtime="20201030 18:31:14.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.908" endtime="20201030 18:31:14.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.906" endtime="20201030 18:31:14.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.946" endtime="20201030 18:31:15.231"></status>
</kw>
<msg timestamp="20201030 18:31:15.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.944" endtime="20201030 18:31:15.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.235" endtime="20201030 18:31:15.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.243" endtime="20201030 18:31:15.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.942" endtime="20201030 18:31:15.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.940" endtime="20201030 18:31:15.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.250" level="INFO">${RESULT} = [{'diff': 0.00011976400000000137}, {'diff': 0.00011902800000000019}, {'diff': 0.00011836099999999738}, {'diff': 0.00011833299999999825}, {'diff': 0.00011926400000000087}, {'diff': 0.000118429999999999...</msg>
<status status="PASS" starttime="20201030 18:31:15.246" endtime="20201030 18:31:15.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:15.254" level="INFO">${ACCURACY} = {'diff': [0.00011976400000000137, 0.00011902800000000019, 0.00011836099999999738, 0.00011833299999999825, 0.00011926400000000087, 0.00011842999999999923, 0.00011902800000000019, 0.00011847200000000141...</msg>
<status status="PASS" starttime="20201030 18:31:15.251" endtime="20201030 18:31:15.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.258" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:31:15.257" endtime="20201030 18:31:15.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.260" level="INFO">VALUE: [0.00011976400000000137, 0.00011902800000000019, 0.00011836099999999738, 0.00011833299999999825, 0.00011926400000000087, 0.00011842999999999923, 0.00011902800000000019, 0.00011847200000000141, 0.00011907000000000237, 0.0001187630000000009, 0.00011916699999999988, 0.00011926400000000087, 0.00011909800000000151, 0.00011908399999999847, 0.00011840299999999956, 0.00011923600000000173, 0.0001188890000000005, 0.0001188890000000005, 0.00011879200000000298, 0.00011902700000000072, 0.00011917999999999998, 0.00011902800000000019, 0.00011906899999999943, 0.00011920799999999912, 0.00011840299999999956, 0.0001184309999999987, 0.00011837500000000042, 0.0001190699999999989, 0.00011849999999999708, 0.00011913900000000074, 0.00011887500000000092, 0.0001190560000000028, 0.00011869399999999905, 0.00011887500000000092, 0.00011895800000000234, 0.00011927800000000044, 0.00011845799999999837, 0.00011922199999999869, 0.0001183049999999991, 0.00011901400000000062, 0.00011857000000000187, 0.00011852799999999969, 0.00011883299999999875, 0.000118389, 0.00011862500000000067, 0.00011920800000000259, 0.00011892999999999973, 0.00011902800000000019, 0.00011897300000000138, 0.00011870900000000156]</msg>
<status status="PASS" starttime="20201030 18:31:15.259" endtime="20201030 18:31:15.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.254" endtime="20201030 18:31:15.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.266" endtime="20201030 18:31:15.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.264" endtime="20201030 18:31:15.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.263" endtime="20201030 18:31:15.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.904" endtime="20201030 18:31:15.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.904" endtime="20201030 18:31:15.287"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.295" endtime="20201030 18:31:15.315"></status>
</kw>
<msg timestamp="20201030 18:31:15.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.294" endtime="20201030 18:31:15.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.317" endtime="20201030 18:31:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.319" endtime="20201030 18:31:15.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.291" endtime="20201030 18:31:15.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.289" endtime="20201030 18:31:15.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.328" endtime="20201030 18:31:15.613"></status>
</kw>
<msg timestamp="20201030 18:31:15.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.326" endtime="20201030 18:31:15.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.617" endtime="20201030 18:31:15.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.625" endtime="20201030 18:31:15.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.324" endtime="20201030 18:31:15.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.322" endtime="20201030 18:31:15.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.632" level="INFO">${RESULT} = [{'diff': 0.00012086099999999989}, {'diff': 0.00011938899999999752}, {'diff': 0.00012024999999999883}, {'diff': 0.00011938899999999752}, {'diff': 0.00012016600000000141}, {'diff': 0.000119750000000001...</msg>
<status status="PASS" starttime="20201030 18:31:15.628" endtime="20201030 18:31:15.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:15.639" level="INFO">${ACCURACY} = {'diff': [0.00012086099999999989, 0.00011938899999999752, 0.00012024999999999883, 0.00011938899999999752, 0.00012016600000000141, 0.0001197500000000018, 0.00011931899999999968, 0.00012006900000000043,...</msg>
<status status="PASS" starttime="20201030 18:31:15.633" endtime="20201030 18:31:15.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.644" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:31:15.643" endtime="20201030 18:31:15.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.646" level="INFO">VALUE: [0.00012086099999999989, 0.00011938899999999752, 0.00012024999999999883, 0.00011938899999999752, 0.00012016600000000141, 0.0001197500000000018, 0.00011931899999999968, 0.00012006900000000043, 0.00011980600000000008, 0.00012019500000000002, 0.0001202639999999984, 0.000119389000000001, 0.00012006900000000043, 0.00012002800000000119, 0.00011961199999999811, 0.00012001400000000162, 0.00011976400000000137, 0.00011973600000000223, 0.00011933299999999925, 0.00011931999999999915, 0.0001201249999999987, 0.00011987499999999846, 0.00011969400000000005, 0.00012005500000000086, 0.00011980600000000008, 0.00011959699999999907, 0.00012018100000000045, 0.00011951400000000112, 0.00012019500000000002, 0.00011966600000000091, 0.00012020800000000012, 0.00011969400000000005, 0.00011980600000000008, 0.00012008399999999947, 0.00011968099999999995, 0.00011957000000000287, 0.00011995799999999987, 0.00012001299999999868, 0.00011931899999999968, 0.00011963899999999777, 0.00011976400000000137, 0.00011951400000000112, 0.0001199310000000002, 0.00011944499999999927, 0.00011937500000000142, 0.00011966600000000091, 0.00011986100000000235, 0.00011972299999999866, 0.00011950000000000155, 0.0001198890000000015]</msg>
<status status="PASS" starttime="20201030 18:31:15.645" endtime="20201030 18:31:15.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.640" endtime="20201030 18:31:15.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.651" endtime="20201030 18:31:15.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.649" endtime="20201030 18:31:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.648" endtime="20201030 18:31:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.287" endtime="20201030 18:31:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.287" endtime="20201030 18:31:15.671"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.680" endtime="20201030 18:31:15.700"></status>
</kw>
<msg timestamp="20201030 18:31:15.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.678" endtime="20201030 18:31:15.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.702" endtime="20201030 18:31:15.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.704" endtime="20201030 18:31:15.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.676" endtime="20201030 18:31:15.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.674" endtime="20201030 18:31:15.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.713" endtime="20201030 18:31:16.000"></status>
</kw>
<msg timestamp="20201030 18:31:16.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021450958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.711" endtime="20201030 18:31:16.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021450958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.004" endtime="20201030 18:31:16.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.012" endtime="20201030 18:31:16.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.709" endtime="20201030 18:31:16.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.707" endtime="20201030 18:31:16.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.018" level="INFO">${RESULT} = [{'diff': 0.000121777}, {'diff': 0.00012087499999999946}, {'diff': 0.00012079200000000151}, {'diff': 0.0001204029999999981}, {'diff': 0.0001206249999999992}, {'diff': 0.00012076400000000237}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:31:16.015" endtime="20201030 18:31:16.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.022" level="INFO">${ACCURACY} = {'diff': [0.000121777, 0.00012087499999999946, 0.00012079200000000151, 0.0001204029999999981, 0.0001206249999999992, 0.00012076400000000237, 0.00012099999999999958, 0.00012123600000000026, 0.000121055...</msg>
<status status="PASS" starttime="20201030 18:31:16.019" endtime="20201030 18:31:16.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.026" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.025" endtime="20201030 18:31:16.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.029" level="INFO">VALUE: [0.000121777, 0.00012087499999999946, 0.00012079200000000151, 0.0001204029999999981, 0.0001206249999999992, 0.00012076400000000237, 0.00012099999999999958, 0.00012123600000000026, 0.00012105599999999786, 0.00012044500000000027, 0.00012048599999999951, 0.00012080600000000108, 0.0001210969999999971, 0.0001206249999999992, 0.00012111100000000014, 0.00012112500000000317, 0.0001211249999999997, 0.00012080499999999814, 0.00012044500000000027, 0.00012118100000000145, 0.00012061099999999964, 0.00012101400000000262, 0.0001209310000000012, 0.0001210700000000009, 0.00012037499999999896, 0.00012061099999999964, 0.00012098600000000001, 0.0001204440000000008, 0.00012066600000000191, 0.00012032000000000015, 0.00012077800000000194, 0.00012119500000000102, 0.00012105600000000133, 0.00012049999999999908, 0.00012061099999999964, 0.00012104199999999829, 0.00012087499999999946, 0.0001209449999999973, 0.0001207639999999989, 0.0001209310000000012, 0.0001211249999999997, 0.00012120800000000112, 0.00012105500000000186, 0.00012105599999999786, 0.00012082000000000065, 0.00012058399999999997, 0.00012111100000000014, 0.00012102800000000219, 0.0001210700000000009, 0.00012091700000000163]</msg>
<status status="PASS" starttime="20201030 18:31:16.027" endtime="20201030 18:31:16.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.023" endtime="20201030 18:31:16.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.035" endtime="20201030 18:31:16.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.033" endtime="20201030 18:31:16.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.032" endtime="20201030 18:31:16.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.672" endtime="20201030 18:31:16.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.672" endtime="20201030 18:31:16.056"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.064" endtime="20201030 18:31:16.085"></status>
</kw>
<msg timestamp="20201030 18:31:16.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.063" endtime="20201030 18:31:16.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.087" endtime="20201030 18:31:16.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.089" endtime="20201030 18:31:16.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.060" endtime="20201030 18:31:16.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.058" endtime="20201030 18:31:16.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.098" endtime="20201030 18:31:16.383"></status>
</kw>
<msg timestamp="20201030 18:31:16.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.097" endtime="20201030 18:31:16.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.387" endtime="20201030 18:31:16.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.395" endtime="20201030 18:31:16.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.094" endtime="20201030 18:31:16.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.092" endtime="20201030 18:31:16.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.402" level="INFO">${RESULT} = [{'diff': 0.00012220800000000212}, {'diff': 0.00012144500000000127}, {'diff': 0.00012168099999999848}, {'diff': 0.00012148600000000051}, {'diff': 0.00012174999999999686}, {'diff': 0.000121874999999996...</msg>
<status status="PASS" starttime="20201030 18:31:16.399" endtime="20201030 18:31:16.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.406" level="INFO">${ACCURACY} = {'diff': [0.00012220800000000212, 0.00012144500000000127, 0.00012168099999999848, 0.00012148600000000051, 0.00012174999999999686, 0.00012187499999999699, 0.00012152799999999922, 0.00012180499999999914...</msg>
<status status="PASS" starttime="20201030 18:31:16.403" endtime="20201030 18:31:16.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.410" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.409" endtime="20201030 18:31:16.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.412" level="INFO">VALUE: [0.00012220800000000212, 0.00012144500000000127, 0.00012168099999999848, 0.00012148600000000051, 0.00012174999999999686, 0.00012187499999999699, 0.00012152799999999922, 0.00012180499999999914, 0.00012141599999999919, 0.00012173600000000076, 0.00012222300000000116, 0.00012179199999999904, 0.00012165299999999934, 0.00012173600000000076, 0.00012161100000000064, 0.00012191599999999969, 0.00012212499999999724, 0.00012180599999999861, 0.00012134700000000082, 0.00012159700000000107, 0.00012136100000000039, 0.00012195800000000187, 0.0001219579999999984, 0.0001216380000000003, 0.00012150000000000008, 0.0001221250000000007, 0.0001214310000000017, 0.0001214310000000017, 0.00012152800000000269, 0.00012204200000000276, 0.00012161100000000064, 0.00012180599999999861, 0.00012168000000000248, 0.00012198600000000101, 0.00012212499999999724, 0.00012163899999999978, 0.00012143099999999823, 0.00012224999999999736, 0.0001219029999999996, 0.00012197200000000144, 0.00012175000000000033, 0.00012142999999999876, 0.00012188900000000003, 0.00012159799999999707, 0.00012120800000000112, 0.0001212639999999994, 0.00012177799999999947, 0.00012179099999999957, 0.00012195800000000187, 0.00012202700000000025]</msg>
<status status="PASS" starttime="20201030 18:31:16.411" endtime="20201030 18:31:16.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.407" endtime="20201030 18:31:16.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.418" endtime="20201030 18:31:16.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.417" endtime="20201030 18:31:16.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.416" endtime="20201030 18:31:16.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.057" endtime="20201030 18:31:16.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.056" endtime="20201030 18:31:16.439"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.447" endtime="20201030 18:31:16.468"></status>
</kw>
<msg timestamp="20201030 18:31:16.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.446" endtime="20201030 18:31:16.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.469" endtime="20201030 18:31:16.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.472" endtime="20201030 18:31:16.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.443" endtime="20201030 18:31:16.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.441" endtime="20201030 18:31:16.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.480" endtime="20201030 18:31:16.766"></status>
</kw>
<msg timestamp="20201030 18:31:16.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.479" endtime="20201030 18:31:16.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.770" endtime="20201030 18:31:16.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.778" endtime="20201030 18:31:16.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.476" endtime="20201030 18:31:16.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.475" endtime="20201030 18:31:16.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.785" level="INFO">${RESULT} = [{'diff': 0.00012294399999999983}, {'diff': 0.00012300000000000158}, {'diff': 0.00012256899999999946}, {'diff': 0.00012288899999999756}, {'diff': 0.0001232359999999988}, {'diff': 0.0001230140000000011...</msg>
<status status="PASS" starttime="20201030 18:31:16.782" endtime="20201030 18:31:16.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.789" level="INFO">${ACCURACY} = {'diff': [0.00012294399999999983, 0.00012300000000000158, 0.00012256899999999946, 0.00012288899999999756, 0.0001232359999999988, 0.00012301400000000115, 0.00012233300000000225, 0.00012316600000000094,...</msg>
<status status="PASS" starttime="20201030 18:31:16.786" endtime="20201030 18:31:16.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.794" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.793" endtime="20201030 18:31:16.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.796" level="INFO">VALUE: [0.00012294399999999983, 0.00012300000000000158, 0.00012256899999999946, 0.00012288899999999756, 0.0001232359999999988, 0.00012301400000000115, 0.00012233300000000225, 0.00012316600000000094, 0.00012266699999999991, 0.0001232640000000014, 0.00012251400000000065, 0.00012312499999999824, 0.0001231389999999978, 0.00012270899999999862, 0.0001226250000000012, 0.00012293099999999973, 0.0001224999999999976, 0.00012305500000000039, 0.00012268099999999948, 0.00012311099999999867, 0.0001229999999999981, 0.00012269499999999905, 0.00012262499999999774, 0.0001230700000000029, 0.00012250000000000108, 0.00012294399999999983, 0.00012294399999999983, 0.00012306899999999996, 0.00012287500000000146, 0.00012319400000000008, 0.00012320799999999965, 0.00012281999999999918, 0.0001232770000000015, 0.00012256899999999946, 0.00012238900000000053, 0.00012250000000000108, 0.00012293099999999973, 0.00012286100000000189, 0.00012270899999999862, 0.0001230420000000003, 0.00012256899999999946, 0.0001226250000000012, 0.00012236099999999792, 0.00012293099999999973, 0.00012306999999999943, 0.00012323600000000226, 0.0001231250000000017, 0.00012270899999999862, 0.00012284700000000232, 0.0001223059999999991]</msg>
<status status="PASS" starttime="20201030 18:31:16.795" endtime="20201030 18:31:16.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.790" endtime="20201030 18:31:16.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.801" endtime="20201030 18:31:16.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.800" endtime="20201030 18:31:16.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.798" endtime="20201030 18:31:16.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.440" endtime="20201030 18:31:16.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.439" endtime="20201030 18:31:16.822"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.830" endtime="20201030 18:31:16.851"></status>
</kw>
<msg timestamp="20201030 18:31:16.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.829" endtime="20201030 18:31:16.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.852" endtime="20201030 18:31:16.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.855" endtime="20201030 18:31:16.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.826" endtime="20201030 18:31:16.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.824" endtime="20201030 18:31:16.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.864" endtime="20201030 18:31:17.151"></status>
</kw>
<msg timestamp="20201030 18:31:17.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.862" endtime="20201030 18:31:17.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.155" endtime="20201030 18:31:17.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.163" endtime="20201030 18:31:17.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.860" endtime="20201030 18:31:17.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.858" endtime="20201030 18:31:17.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.170" level="INFO">${RESULT} = [{'diff': 0.00012405499999999792}, {'diff': 0.00012343000000000076}, {'diff': 0.00012356900000000046}, {'diff': 0.0001232909999999976}, {'diff': 0.00012350000000000208}, {'diff': 0.0001238749999999989...</msg>
<status status="PASS" starttime="20201030 18:31:17.167" endtime="20201030 18:31:17.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.174" level="INFO">${ACCURACY} = {'diff': [0.00012405499999999792, 0.00012343000000000076, 0.00012356900000000046, 0.0001232909999999976, 0.00012350000000000208, 0.00012387499999999899, 0.0001242229999999997, 0.00012397199999999997, ...</msg>
<status status="PASS" starttime="20201030 18:31:17.171" endtime="20201030 18:31:17.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.178" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.177" endtime="20201030 18:31:17.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.180" level="INFO">VALUE: [0.00012405499999999792, 0.00012343000000000076, 0.00012356900000000046, 0.0001232909999999976, 0.00012350000000000208, 0.00012387499999999899, 0.0001242229999999997, 0.00012397199999999997, 0.00012343100000000023, 0.0001238190000000007, 0.0001238060000000006, 0.00012379200000000104, 0.00012387499999999899, 0.0001239999999999991, 0.00012351399999999818, 0.00012365300000000135, 0.00012361199999999864, 0.00012412499999999924, 0.0001234999999999986, 0.00012356999999999993, 0.0001234999999999986, 0.0001239450000000003, 0.00012418100000000099, 0.0001234999999999986, 0.00012356999999999993, 0.0001234449999999998, 0.00012412499999999924, 0.00012355600000000036, 0.0001236389999999983, 0.00012419500000000055, 0.00012358300000000003, 0.00012402799999999825, 0.0001238199999999967, 0.00012333300000000325, 0.00012352800000000122, 0.0001236389999999983, 0.00012423699999999926, 0.0001237359999999993, 0.00012423699999999926, 0.00012331999999999968, 0.00012424999999999936, 0.00012398599999999954, 0.00012329200000000054, 0.00012337500000000196, 0.00012350000000000208, 0.0001236389999999983, 0.00012379100000000157, 0.00012375000000000233, 0.00012372199999999972, 0.00012370899999999962]</msg>
<status status="PASS" starttime="20201030 18:31:17.179" endtime="20201030 18:31:17.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.175" endtime="20201030 18:31:17.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.185" endtime="20201030 18:31:17.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.184" endtime="20201030 18:31:17.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.183" endtime="20201030 18:31:17.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.823" endtime="20201030 18:31:17.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.822" endtime="20201030 18:31:17.206"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.215" endtime="20201030 18:31:17.236"></status>
</kw>
<msg timestamp="20201030 18:31:17.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.213" endtime="20201030 18:31:17.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.237" endtime="20201030 18:31:17.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.240" endtime="20201030 18:31:17.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.211" endtime="20201030 18:31:17.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.208" endtime="20201030 18:31:17.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.249" endtime="20201030 18:31:17.534"></status>
</kw>
<msg timestamp="20201030 18:31:17.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.247" endtime="20201030 18:31:17.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.538" endtime="20201030 18:31:17.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.546" endtime="20201030 18:31:17.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.245" endtime="20201030 18:31:17.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.243" endtime="20201030 18:31:17.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.552" level="INFO">${RESULT} = [{'diff': 0.0001249450000000013}, {'diff': 0.0001244999999999996}, {'diff': 0.00012482000000000118}, {'diff': 0.00012512500000000024}, {'diff': 0.00012469400000000158}, {'diff': 0.00012491700000000217...</msg>
<status status="PASS" starttime="20201030 18:31:17.549" endtime="20201030 18:31:17.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.556" level="INFO">${ACCURACY} = {'diff': [0.0001249450000000013, 0.0001244999999999996, 0.00012482000000000118, 0.00012512500000000024, 0.00012469400000000158, 0.00012491700000000217, 0.00012498600000000054, 0.00012444399999999786, ...</msg>
<status status="PASS" starttime="20201030 18:31:17.553" endtime="20201030 18:31:17.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.561" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.560" endtime="20201030 18:31:17.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.563" level="INFO">VALUE: [0.0001249450000000013, 0.0001244999999999996, 0.00012482000000000118, 0.00012512500000000024, 0.00012469400000000158, 0.00012491700000000217, 0.00012498600000000054, 0.00012444399999999786, 0.00012482000000000118, 0.00012452799999999875, 0.00012436100000000339, 0.0001244450000000008, 0.00012497200000000097, 0.00012512500000000024, 0.00012444400000000133, 0.00012513800000000033, 0.0001252360000000008, 0.00012437499999999949, 0.00012518100000000199, 0.00012451399999999918, 0.0001244999999999996, 0.00012474999999999986, 0.0001251939999999986, 0.00012525000000000036, 0.0001251939999999986, 0.00012462499999999974, 0.00012498599999999707, 0.00012505499999999892, 0.00012487499999999999, 0.0001250000000000001, 0.0001247360000000003, 0.00012455499999999842, 0.00012437499999999949, 0.00012493100000000174, 0.00012497300000000044, 0.00012454100000000232, 0.00012493000000000226, 0.00012488899999999956, 0.00012502799999999925, 0.00012468099999999802, 0.00012505600000000186, 0.0001250420000000023, 0.00012480599999999814, 0.00012493100000000174, 0.000124777999999999, 0.00012434700000000035, 0.00012520899999999766, 0.00012462499999999974, 0.00012436099999999992, 0.0001244169999999982]</msg>
<status status="PASS" starttime="20201030 18:31:17.562" endtime="20201030 18:31:17.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.557" endtime="20201030 18:31:17.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.569" endtime="20201030 18:31:17.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.567" endtime="20201030 18:31:17.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.566" endtime="20201030 18:31:17.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.207" endtime="20201030 18:31:17.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.206" endtime="20201030 18:31:17.590"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.598" endtime="20201030 18:31:17.618"></status>
</kw>
<msg timestamp="20201030 18:31:17.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.597" endtime="20201030 18:31:17.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.620" endtime="20201030 18:31:17.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.622" endtime="20201030 18:31:17.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.594" endtime="20201030 18:31:17.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.592" endtime="20201030 18:31:17.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.631" endtime="20201030 18:31:17.916"></status>
</kw>
<msg timestamp="20201030 18:31:17.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021252611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.630" endtime="20201030 18:31:17.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021252611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.920" endtime="20201030 18:31:17.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.928" endtime="20201030 18:31:17.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.627" endtime="20201030 18:31:17.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.625" endtime="20201030 18:31:17.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.935" level="INFO">${RESULT} = [{'diff': 0.00012623599999999832}, {'diff': 0.00012536100000000092}, {'diff': 0.0001262369999999978}, {'diff': 0.00012530499999999917}, {'diff': 0.0001259580000000024}, {'diff': 0.00012548599999999757...</msg>
<status status="PASS" starttime="20201030 18:31:17.932" endtime="20201030 18:31:17.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.939" level="INFO">${ACCURACY} = {'diff': [0.00012623599999999832, 0.00012536100000000092, 0.0001262369999999978, 0.00012530499999999917, 0.0001259580000000024, 0.00012548599999999757, 0.00012557000000000193, 0.00012582000000000218, ...</msg>
<status status="PASS" starttime="20201030 18:31:17.936" endtime="20201030 18:31:17.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.944" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.943" endtime="20201030 18:31:17.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.946" level="INFO">VALUE: [0.00012623599999999832, 0.00012536100000000092, 0.0001262369999999978, 0.00012530499999999917, 0.0001259580000000024, 0.00012548599999999757, 0.00012557000000000193, 0.00012582000000000218, 0.00012623700000000126, 0.00012580500000000314, 0.0001259299999999998, 0.00012541599999999972, 0.00012561100000000117, 0.00012583400000000175, 0.0001261109999999982, 0.00012570899999999816, 0.0001259450000000023, 0.00012588900000000056, 0.00012534700000000135, 0.00012536100000000092, 0.00012536099999999745, 0.00012587500000000099, 0.00012627799999999703, 0.00012548600000000104, 0.0001255000000000006, 0.0001254030000000031, 0.00012611100000000167, 0.0001253199999999982, 0.00012583300000000228, 0.00012618100000000299, 0.00012554199999999932, 0.00012605499999999992, 0.0001257910000000001, 0.0001255000000000006, 0.000125471999999998, 0.00012568100000000249, 0.00012601400000000068, 0.0001262360000000018, 0.00012609699999999863, 0.00012554199999999932, 0.0001259169999999997, 0.0001261390000000008, 0.0001255559999999989, 0.0001259450000000023, 0.0001256109999999977, 0.00012537500000000049, 0.00012579199999999957, 0.00012588900000000056, 0.0001256939999999991, 0.00012540299999999963]</msg>
<status status="PASS" starttime="20201030 18:31:17.945" endtime="20201030 18:31:17.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.940" endtime="20201030 18:31:17.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.951" endtime="20201030 18:31:17.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.950" endtime="20201030 18:31:17.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.948" endtime="20201030 18:31:17.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.591" endtime="20201030 18:31:17.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.590" endtime="20201030 18:31:17.972"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.980" endtime="20201030 18:31:18.001"></status>
</kw>
<msg timestamp="20201030 18:31:18.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.979" endtime="20201030 18:31:18.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.002" endtime="20201030 18:31:18.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.005" endtime="20201030 18:31:18.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.976" endtime="20201030 18:31:18.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.974" endtime="20201030 18:31:18.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.014" endtime="20201030 18:31:18.301"></status>
</kw>
<msg timestamp="20201030 18:31:18.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021306708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021433875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.012" endtime="20201030 18:31:18.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021306708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021433875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.305" endtime="20201030 18:31:18.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.313" endtime="20201030 18:31:18.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.010" endtime="20201030 18:31:18.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.008" endtime="20201030 18:31:18.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.319" level="INFO">${RESULT} = [{'diff': 0.00012716700000000095}, {'diff': 0.0001264580000000029}, {'diff': 0.0001266109999999987}, {'diff': 0.00012722199999999975}, {'diff': 0.00012654100000000085}, {'diff': 0.00012691600000000122...</msg>
<status status="PASS" starttime="20201030 18:31:18.316" endtime="20201030 18:31:18.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.323" level="INFO">${ACCURACY} = {'diff': [0.00012716700000000095, 0.0001264580000000029, 0.0001266109999999987, 0.00012722199999999975, 0.00012654100000000085, 0.00012691600000000122, 0.00012694400000000036, 0.0001268329999999998, 0...</msg>
<status status="PASS" starttime="20201030 18:31:18.320" endtime="20201030 18:31:18.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.328" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.327" endtime="20201030 18:31:18.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.330" level="INFO">VALUE: [0.00012716700000000095, 0.0001264580000000029, 0.0001266109999999987, 0.00012722199999999975, 0.00012654100000000085, 0.00012691600000000122, 0.00012694400000000036, 0.0001268329999999998, 0.00012654100000000085, 0.00012665300000000088, 0.00012637500000000149, 0.00012659699999999913, 0.00012630599999999964, 0.00012702800000000125, 0.00012720899999999966, 0.00012723599999999932, 0.0001266109999999987, 0.0001265000000000016, 0.0001272499999999989, 0.0001265000000000016, 0.0001266940000000001, 0.0001267499999999984, 0.00012648600000000204, 0.0001269300000000008, 0.00012706999999999996, 0.00012687499999999852, 0.00012668000000000054, 0.0001266940000000001, 0.00012686099999999895, 0.00012638900000000106, 0.00012673700000000176, 0.00012694400000000036, 0.00012666600000000097, 0.00012644399999999986, 0.00012725000000000236, 0.00012668000000000054, 0.00012668000000000054, 0.0001263199999999992, 0.00012726399999999846, 0.00012662499999999827, 0.0001268889999999981, 0.00012640299999999716, 0.0001267499999999984, 0.00012655500000000042, 0.00012638900000000106, 0.0001268329999999998, 0.00012638900000000106, 0.0001270560000000004, 0.00012663899999999784, 0.00012675000000000186]</msg>
<status status="PASS" starttime="20201030 18:31:18.329" endtime="20201030 18:31:18.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.324" endtime="20201030 18:31:18.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.335" endtime="20201030 18:31:18.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.333" endtime="20201030 18:31:18.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.332" endtime="20201030 18:31:18.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.973" endtime="20201030 18:31:18.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.972" endtime="20201030 18:31:18.356"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.364" endtime="20201030 18:31:18.386"></status>
</kw>
<msg timestamp="20201030 18:31:18.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.363" endtime="20201030 18:31:18.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.387" endtime="20201030 18:31:18.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.390" endtime="20201030 18:31:18.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.360" endtime="20201030 18:31:18.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.358" endtime="20201030 18:31:18.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.398" endtime="20201030 18:31:18.683"></status>
</kw>
<msg timestamp="20201030 18:31:18.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.397" endtime="20201030 18:31:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.687" endtime="20201030 18:31:18.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.695" endtime="20201030 18:31:18.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.394" endtime="20201030 18:31:18.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.393" endtime="20201030 18:31:18.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.701" level="INFO">${RESULT} = [{'diff': 0.00012817999999999857}, {'diff': 0.0001275139999999987}, {'diff': 0.00012758400000000003}, {'diff': 0.00012791699999999823}, {'diff': 0.00012786099999999995}, {'diff': 0.0001274170000000012...</msg>
<status status="PASS" starttime="20201030 18:31:18.698" endtime="20201030 18:31:18.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.705" level="INFO">${ACCURACY} = {'diff': [0.00012817999999999857, 0.0001275139999999987, 0.00012758400000000003, 0.00012791699999999823, 0.00012786099999999995, 0.0001274170000000012, 0.00012805599999999792, 0.00012807000000000096, ...</msg>
<status status="PASS" starttime="20201030 18:31:18.702" endtime="20201030 18:31:18.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.709" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.708" endtime="20201030 18:31:18.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.712" level="INFO">VALUE: [0.00012817999999999857, 0.0001275139999999987, 0.00012758400000000003, 0.00012791699999999823, 0.00012786099999999995, 0.0001274170000000012, 0.00012805599999999792, 0.00012807000000000096, 0.0001280139999999992, 0.00012772199999999678, 0.00012740299999999816, 0.00012748599999999957, 0.00012798600000000007, 0.00012795800000000093, 0.0001278620000000029, 0.00012769399999999764, 0.00012730500000000117, 0.0001279720000000005, 0.00012798600000000007, 0.00012822200000000075, 0.0001281529999999989, 0.00012749999999999914, 0.0001277919999999981, 0.00012766700000000145, 0.0001281110000000002, 0.0001273200000000002, 0.00012730600000000064, 0.00012773599999999982, 0.00012765300000000188, 0.0001275139999999987, 0.00012773599999999982, 0.00012743100000000077, 0.0001273330000000003, 0.00012768100000000102, 0.00012766699999999798, 0.00012798699999999955, 0.00012791699999999823, 0.000127778000000002, 0.0001281529999999989, 0.0001276529999999984, 0.00012759700000000013, 0.00012772200000000025, 0.00012798600000000007, 0.00012762499999999927, 0.00012773599999999982, 0.0001276659999999985, 0.00012768100000000102, 0.0001274170000000012, 0.0001272780000000015, 0.00012772200000000025]</msg>
<status status="PASS" starttime="20201030 18:31:18.710" endtime="20201030 18:31:18.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.706" endtime="20201030 18:31:18.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.717" endtime="20201030 18:31:18.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.716" endtime="20201030 18:31:18.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.715" endtime="20201030 18:31:18.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.356" endtime="20201030 18:31:18.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.356" endtime="20201030 18:31:18.738"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.747" endtime="20201030 18:31:18.767"></status>
</kw>
<msg timestamp="20201030 18:31:18.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.745" endtime="20201030 18:31:18.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.769" endtime="20201030 18:31:18.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.771" endtime="20201030 18:31:18.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.743" endtime="20201030 18:31:18.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.740" endtime="20201030 18:31:18.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.780" endtime="20201030 18:31:19.065"></status>
</kw>
<msg timestamp="20201030 18:31:19.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021403931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.778" endtime="20201030 18:31:19.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021403931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.069" endtime="20201030 18:31:19.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.077" endtime="20201030 18:31:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.776" endtime="20201030 18:31:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.774" endtime="20201030 18:31:19.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.083" level="INFO">${RESULT} = [{'diff': 0.00012934800000000135}, {'diff': 0.00012833299999999784}, {'diff': 0.00012918099999999905}, {'diff': 0.00012872199999999778}, {'diff': 0.00012837500000000002}, {'diff': 0.000128555000000002...</msg>
<status status="PASS" starttime="20201030 18:31:19.080" endtime="20201030 18:31:19.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.091" level="INFO">${ACCURACY} = {'diff': [0.00012934800000000135, 0.00012833299999999784, 0.00012918099999999905, 0.00012872199999999778, 0.00012837500000000002, 0.00012855500000000242, 0.00012915200000000043, 0.000129166, 0.0001287...</msg>
<status status="PASS" starttime="20201030 18:31:19.084" endtime="20201030 18:31:19.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.095" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.094" endtime="20201030 18:31:19.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.097" level="INFO">VALUE: [0.00012934800000000135, 0.00012833299999999784, 0.00012918099999999905, 0.00012872199999999778, 0.00012837500000000002, 0.00012855500000000242, 0.00012915200000000043, 0.000129166, 0.0001287500000000004, 0.00012915200000000043, 0.00012923599999999785, 0.00012887500000000052, 0.0001287370000000003, 0.00012877700000000006, 0.00012863899999999984, 0.00012847300000000048, 0.0001289309999999988, 0.0001291249999999973, 0.00012862500000000027, 0.00012863899999999984, 0.00012851400000000318, 0.00012869399999999864, 0.00012873599999999735, 0.00012844400000000186, 0.00012890299999999966, 0.0001289859999999976, 0.00012893100000000227, 0.00012900000000000064, 0.0001285560000000019, 0.00012922300000000123, 0.00012923599999999785, 0.0001282499999999999, 0.00012886099999999748, 0.00012854199999999885, 0.0001288890000000001, 0.00012859700000000113, 0.0001285560000000019, 0.00012920800000000218, 0.0001286529999999994, 0.0001287500000000004, 0.0001284439999999984, 0.00012859700000000113, 0.00012917999999999957, 0.00012897199999999803, 0.00012916699999999948, 0.00012895800000000193, 0.00012916699999999948, 0.00012897300000000098, 0.0001289859999999976, 0.00012854099999999938]</msg>
<status status="PASS" starttime="20201030 18:31:19.096" endtime="20201030 18:31:19.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.092" endtime="20201030 18:31:19.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.102" endtime="20201030 18:31:19.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.101" endtime="20201030 18:31:19.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.100" endtime="20201030 18:31:19.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.739" endtime="20201030 18:31:19.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.738" endtime="20201030 18:31:19.123"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.131" endtime="20201030 18:31:19.152"></status>
</kw>
<msg timestamp="20201030 18:31:19.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.130" endtime="20201030 18:31:19.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.154" endtime="20201030 18:31:19.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.156" endtime="20201030 18:31:19.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.127" endtime="20201030 18:31:19.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.125" endtime="20201030 18:31:19.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.165" endtime="20201030 18:31:19.451"></status>
</kw>
<msg timestamp="20201030 18:31:19.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021312278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.163" endtime="20201030 18:31:19.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021312278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.455" endtime="20201030 18:31:19.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.463" endtime="20201030 18:31:19.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.161" endtime="20201030 18:31:19.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.159" endtime="20201030 18:31:19.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.470" level="INFO">${RESULT} = [{'diff': 0.00013063899999999837}, {'diff': 0.00013012500000000177}, {'diff': 0.00012955499999999995}, {'diff': 0.0001298050000000002}, {'diff': 0.00012929100000000013}, {'diff': 0.0001302500000000019...</msg>
<status status="PASS" starttime="20201030 18:31:19.467" endtime="20201030 18:31:19.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.474" level="INFO">${ACCURACY} = {'diff': [0.00013063899999999837, 0.00013012500000000177, 0.00012955499999999995, 0.0001298050000000002, 0.00012929100000000013, 0.0001302500000000019, 0.00012933299999999884, 0.00012933299999999884, ...</msg>
<status status="PASS" starttime="20201030 18:31:19.471" endtime="20201030 18:31:19.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.478" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.477" endtime="20201030 18:31:19.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.480" level="INFO">VALUE: [0.00013063899999999837, 0.00013012500000000177, 0.00012955499999999995, 0.0001298050000000002, 0.00012929100000000013, 0.0001302500000000019, 0.00012933299999999884, 0.00012933299999999884, 0.00012984700000000238, 0.00012955499999999995, 0.00012961099999999823, 0.00012995799999999946, 0.00013004100000000088, 0.00012948600000000157, 0.0001298890000000011, 0.00012966699999999998, 0.00012945799999999896, 0.0001298469999999989, 0.00012966699999999998, 0.00012997199999999903, 0.0001296110000000017, 0.00012983400000000228, 0.0001299859999999986, 0.00013000000000000164, 0.0001296660000000005, 0.00013009699999999916, 0.00012934700000000188, 0.00013022300000000223, 0.00012986099999999848, 0.00013004200000000035, 0.00012976400000000096, 0.00013004199999999688, 0.00012941699999999973, 0.0001295140000000007, 0.00012972199999999878, 0.00012972299999999826, 0.00012959699999999866, 0.0001299859999999986, 0.0001298469999999989, 0.00013018100000000005, 0.00012963900000000084, 0.00012929100000000013, 0.0001293049999999997, 0.0001293469999999984, 0.00012936100000000145, 0.00012972299999999826, 0.0001293469999999984, 0.00012941699999999973, 0.0001295829999999991, 0.00012941699999999973]</msg>
<status status="PASS" starttime="20201030 18:31:19.479" endtime="20201030 18:31:19.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.475" endtime="20201030 18:31:19.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.485" endtime="20201030 18:31:19.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.484" endtime="20201030 18:31:19.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.483" endtime="20201030 18:31:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.124" endtime="20201030 18:31:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.123" endtime="20201030 18:31:19.506"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.515" endtime="20201030 18:31:19.536"></status>
</kw>
<msg timestamp="20201030 18:31:19.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.513" endtime="20201030 18:31:19.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.538" endtime="20201030 18:31:19.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.540" endtime="20201030 18:31:19.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.510" endtime="20201030 18:31:19.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.508" endtime="20201030 18:31:19.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.549" endtime="20201030 18:31:19.835"></status>
</kw>
<msg timestamp="20201030 18:31:19.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.548" endtime="20201030 18:31:19.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.839" endtime="20201030 18:31:19.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.847" endtime="20201030 18:31:19.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.545" endtime="20201030 18:31:19.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.543" endtime="20201030 18:31:19.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.854" level="INFO">${RESULT} = [{'diff': 0.00013161100000000023}, {'diff': 0.00013109700000000016}, {'diff': 0.00013091700000000123}, {'diff': 0.00013036099999999898}, {'diff': 0.0001306249999999988}, {'diff': 0.0001304310000000003...</msg>
<status status="PASS" starttime="20201030 18:31:19.850" endtime="20201030 18:31:19.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.858" level="INFO">${ACCURACY} = {'diff': [0.00013161100000000023, 0.00013109700000000016, 0.00013091700000000123, 0.00013036099999999898, 0.0001306249999999988, 0.0001304310000000003, 0.00013074999999999892, 0.0001306669999999975, 0...</msg>
<status status="PASS" starttime="20201030 18:31:19.855" endtime="20201030 18:31:19.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.863" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.862" endtime="20201030 18:31:19.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.865" level="INFO">VALUE: [0.00013161100000000023, 0.00013109700000000016, 0.00013091700000000123, 0.00013036099999999898, 0.0001306249999999988, 0.0001304310000000003, 0.00013074999999999892, 0.0001306669999999975, 0.00013029199999999713, 0.00013109700000000016, 0.0001302920000000006, 0.00013031900000000027, 0.00013098699999999908, 0.00013061099999999923, 0.0001309729999999995, 0.0001309859999999996, 0.00013086200000000242, 0.00013063900000000184, 0.00013086199999999895, 0.00013123699999999933, 0.0001311530000000019, 0.00013072199999999978, 0.00013097199999999656, 0.00013095800000000046, 0.0001308050000000012, 0.00013073600000000282, 0.00013088899999999862, 0.0001303890000000016, 0.0001307080000000002, 0.00013073599999999935, 0.00013030600000000017, 0.00013037499999999855, 0.00013036100000000245, 0.0001304029999999977, 0.00013097200000000003, 0.0001302920000000006, 0.0001303050000000007, 0.00013118000000000157, 0.0001306110000000027, 0.00013031900000000027, 0.0001304029999999977, 0.00013118100000000105, 0.0001304310000000003, 0.00013084800000000285, 0.00013052800000000128, 0.00013029100000000113, 0.00013095800000000046, 0.0001306799999999976, 0.00013105500000000145, 0.0001306119999999987]</msg>
<status status="PASS" starttime="20201030 18:31:19.864" endtime="20201030 18:31:19.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.859" endtime="20201030 18:31:19.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.871" endtime="20201030 18:31:19.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.869" endtime="20201030 18:31:19.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.868" endtime="20201030 18:31:19.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.507" endtime="20201030 18:31:19.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.506" endtime="20201030 18:31:19.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.158" endtime="20201030 18:31:19.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.896" endtime="20201030 18:31:19.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.894" endtime="20201030 18:31:19.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.893" endtime="20201030 18:31:19.916"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:41.092" endtime="20201030 18:31:19.916" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.927" endtime="20201030 18:31:19.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.926" endtime="20201030 18:31:19.947"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.960" endtime="20201030 18:31:19.972"></status>
</kw>
<msg timestamp="20201030 18:31:19.972" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.958" endtime="20201030 18:31:19.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.975" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.973" endtime="20201030 18:31:19.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.978" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:19.976" endtime="20201030 18:31:19.978"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:19.956" endtime="20201030 18:31:19.979"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:19.953" endtime="20201030 18:31:19.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.952" endtime="20201030 18:31:19.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:19.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:19.983" endtime="20201030 18:31:19.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.980" endtime="20201030 18:31:19.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.951" endtime="20201030 18:31:19.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.951" endtime="20201030 18:31:19.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.985" endtime="20201030 18:31:19.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.949" endtime="20201030 18:31:19.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.948" endtime="20201030 18:31:19.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.924" endtime="20201030 18:31:19.988"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.998" endtime="20201030 18:31:20.015"></status>
</kw>
<msg timestamp="20201030 18:31:20.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.997" endtime="20201030 18:31:20.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.017" endtime="20201030 18:31:20.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.019" endtime="20201030 18:31:20.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.994" endtime="20201030 18:31:20.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.991" endtime="20201030 18:31:20.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.028" endtime="20201030 18:31:20.313"></status>
</kw>
<msg timestamp="20201030 18:31:20.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063575278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063651569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.027" endtime="20201030 18:31:20.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063575278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063651569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.317" endtime="20201030 18:31:20.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.325" endtime="20201030 18:31:20.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.024" endtime="20201030 18:31:20.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.023" endtime="20201030 18:31:20.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.332" level="INFO">${RESULT} = [{'diff': 7.62910000000061e-05}, {'diff': 7.526399999999156e-05}, {'diff': 7.523599999999242e-05}, {'diff': 7.520799999999328e-05}, {'diff': 7.52910000000051e-05}, {'diff': 7.52919999999907e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:20.329" endtime="20201030 18:31:20.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.337" level="INFO">${ACCURACY} = {'diff': [7.62910000000061e-05, 7.526399999999156e-05, 7.523599999999242e-05, 7.520799999999328e-05, 7.52910000000051e-05, 7.52919999999907e-05, 7.532000000000372e-05, 7.530499999999773e-05, 7.5291999...</msg>
<status status="PASS" starttime="20201030 18:31:20.333" endtime="20201030 18:31:20.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.341" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.340" endtime="20201030 18:31:20.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.344" level="INFO">VALUE: [7.62910000000061e-05, 7.526399999999156e-05, 7.523599999999242e-05, 7.520799999999328e-05, 7.52910000000051e-05, 7.52919999999907e-05, 7.532000000000372e-05, 7.530499999999773e-05, 7.52919999999907e-05, 7.534700000000338e-05, 7.52360000000063e-05, 7.529200000000458e-05, 7.530499999999773e-05, 7.531900000000424e-05, 7.52919999999907e-05, 7.533299999999687e-05, 7.529099999999123e-05, 7.524999999999893e-05, 7.532000000000372e-05, 7.531900000000424e-05, 7.531900000000424e-05, 7.526399999999156e-05, 7.532000000000372e-05, 7.530599999999721e-05, 7.530500000001161e-05, 7.531900000000424e-05, 7.527799999999807e-05, 7.527799999999807e-05, 7.527800000001195e-05, 7.530599999999721e-05, 7.530499999999773e-05, 7.531900000000424e-05, 7.523599999999242e-05, 7.529200000000458e-05, 7.530499999999773e-05, 7.529200000000458e-05, 7.530599999999721e-05, 7.527799999999807e-05, 7.52910000000051e-05, 7.530599999999721e-05, 7.52910000000051e-05, 7.530600000001109e-05, 7.527799999999807e-05, 7.530599999999721e-05, 7.529200000000458e-05, 7.524999999999893e-05, 7.52910000000051e-05, 7.530499999999773e-05, 7.529099999999123e-05, 7.533399999999635e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.342" endtime="20201030 18:31:20.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.338" endtime="20201030 18:31:20.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.348" endtime="20201030 18:31:20.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.346" endtime="20201030 18:31:20.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.345" endtime="20201030 18:31:20.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.989" endtime="20201030 18:31:20.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.989" endtime="20201030 18:31:20.369"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.378" endtime="20201030 18:31:20.394"></status>
</kw>
<msg timestamp="20201030 18:31:20.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.376" endtime="20201030 18:31:20.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.396" endtime="20201030 18:31:20.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.398" endtime="20201030 18:31:20.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.374" endtime="20201030 18:31:20.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.371" endtime="20201030 18:31:20.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.407" endtime="20201030 18:31:20.693"></status>
</kw>
<msg timestamp="20201030 18:31:20.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.406" endtime="20201030 18:31:20.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.697" endtime="20201030 18:31:20.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.705" endtime="20201030 18:31:20.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.403" endtime="20201030 18:31:20.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.401" endtime="20201030 18:31:20.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.711" level="INFO">${RESULT} = [{'diff': 7.631999999999778e-05}, {'diff': 7.529199999999764e-05}, {'diff': 7.538899999999862e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.530599999999721e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:20.708" endtime="20201030 18:31:20.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.717" level="INFO">${ACCURACY} = {'diff': [7.631999999999778e-05, 7.529199999999764e-05, 7.538899999999862e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.532000000000025e-05, 7.534799999999939e-05, 7.5304...</msg>
<status status="PASS" starttime="20201030 18:31:20.712" endtime="20201030 18:31:20.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.721" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.720" endtime="20201030 18:31:20.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.723" level="INFO">VALUE: [7.631999999999778e-05, 7.529199999999764e-05, 7.538899999999862e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.532000000000025e-05, 7.534799999999939e-05, 7.530499999999773e-05, 7.530600000000068e-05, 7.530499999999773e-05, 7.530499999999773e-05, 7.527800000000154e-05, 7.526400000000197e-05, 7.530600000000068e-05, 7.52639999999985e-05, 7.526400000000197e-05, 7.531900000000077e-05, 7.537499999999905e-05, 7.527799999999807e-05, 7.52769999999986e-05, 7.527700000000206e-05, 7.529100000000163e-05, 7.529200000000111e-05, 7.530600000000068e-05, 7.53050000000012e-05, 7.530600000000068e-05, 7.527800000000154e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.529100000000163e-05, 7.53050000000012e-05, 7.527799999999807e-05, 7.529099999999816e-05, 7.530499999999773e-05, 7.529200000000111e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.529099999999816e-05, 7.529099999999816e-05, 7.53050000000012e-05, 7.530600000000068e-05, 7.527799999999807e-05, 7.531900000000077e-05, 7.530599999999721e-05, 7.53189999999973e-05, 7.529200000000111e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.529200000000111e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.722" endtime="20201030 18:31:20.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.717" endtime="20201030 18:31:20.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.728" endtime="20201030 18:31:20.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.726" endtime="20201030 18:31:20.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.725" endtime="20201030 18:31:20.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.369" endtime="20201030 18:31:20.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.369" endtime="20201030 18:31:20.749"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.757" endtime="20201030 18:31:20.774"></status>
</kw>
<msg timestamp="20201030 18:31:20.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.756" endtime="20201030 18:31:20.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.776" endtime="20201030 18:31:20.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.778" endtime="20201030 18:31:20.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.753" endtime="20201030 18:31:20.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.751" endtime="20201030 18:31:20.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.787" endtime="20201030 18:31:21.074"></status>
</kw>
<msg timestamp="20201030 18:31:21.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.786" endtime="20201030 18:31:21.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.078" endtime="20201030 18:31:21.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.086" endtime="20201030 18:31:21.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.783" endtime="20201030 18:31:21.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.781" endtime="20201030 18:31:21.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.093" level="INFO">${RESULT} = [{'diff': 7.633299999999787e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.534699999999991e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.53050000000012e-05}, {'diff': 7.524999999999893e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:21.090" endtime="20201030 18:31:21.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.097" level="INFO">${ACCURACY} = {'diff': [7.633299999999787e-05, 7.530600000000068e-05, 7.534699999999991e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.524999999999893e-05, 7.529199999999764e-05, 7.532000000000025e-05, 7.53060...</msg>
<status status="PASS" starttime="20201030 18:31:21.094" endtime="20201030 18:31:21.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.102" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.101" endtime="20201030 18:31:21.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.104" level="INFO">VALUE: [7.633299999999787e-05, 7.530600000000068e-05, 7.534699999999991e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.524999999999893e-05, 7.529199999999764e-05, 7.532000000000025e-05, 7.530600000000068e-05, 7.529099999999816e-05, 7.527800000000154e-05, 7.529100000000163e-05, 7.527799999999807e-05, 7.530600000000068e-05, 7.53189999999973e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.529199999999764e-05, 7.53050000000012e-05, 7.530499999999773e-05, 7.530499999999773e-05, 7.530499999999773e-05, 7.533300000000034e-05, 7.53050000000012e-05, 7.529200000000111e-05, 7.534699999999991e-05, 7.524999999999893e-05, 7.533300000000034e-05, 7.53050000000012e-05, 7.530600000000068e-05, 7.530499999999773e-05, 7.530600000000068e-05, 7.53050000000012e-05, 7.530599999999721e-05, 7.532000000000025e-05, 7.536199999999896e-05, 7.52639999999985e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.529200000000111e-05, 7.532000000000025e-05, 7.530499999999773e-05, 7.533300000000034e-05, 7.53050000000012e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.533399999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.103" endtime="20201030 18:31:21.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.098" endtime="20201030 18:31:21.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.109" endtime="20201030 18:31:21.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.108" endtime="20201030 18:31:21.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.107" endtime="20201030 18:31:21.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.750" endtime="20201030 18:31:21.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.749" endtime="20201030 18:31:21.130"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.139" endtime="20201030 18:31:21.156"></status>
</kw>
<msg timestamp="20201030 18:31:21.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.138" endtime="20201030 18:31:21.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.158" endtime="20201030 18:31:21.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.160" endtime="20201030 18:31:21.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.135" endtime="20201030 18:31:21.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.133" endtime="20201030 18:31:21.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.169" endtime="20201030 18:31:21.455"></status>
</kw>
<msg timestamp="20201030 18:31:21.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:21.168" endtime="20201030 18:31:21.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:21.459" endtime="20201030 18:31:21.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.467" endtime="20201030 18:31:21.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.165" endtime="20201030 18:31:21.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.164" endtime="20201030 18:31:21.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.474" level="INFO">${RESULT} = [{'diff': 7.630599999999821e-05}, {'diff': 7.529199999999764e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.53050000000012e-05}, {'diff': 7.529200000000111e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:21.471" endtime="20201030 18:31:21.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.478" level="INFO">${ACCURACY} = {'diff': [7.630599999999821e-05, 7.529199999999764e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.529200000000111e-05, 7.529200000000111e-05, 7.533399999999982e-05, 7.53050...</msg>
<status status="PASS" starttime="20201030 18:31:21.475" endtime="20201030 18:31:21.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.483" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.481" endtime="20201030 18:31:21.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.485" level="INFO">VALUE: [7.630599999999821e-05, 7.529199999999764e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.529200000000111e-05, 7.529200000000111e-05, 7.533399999999982e-05, 7.53050000000012e-05, 7.529099999999816e-05, 7.529199999999764e-05, 7.533399999999982e-05, 7.534699999999991e-05, 7.530600000000068e-05, 7.534799999999939e-05, 7.530499999999773e-05, 7.529200000000111e-05, 7.529200000000111e-05, 7.529200000000111e-05, 7.533400000000329e-05, 7.53050000000012e-05, 7.53050000000012e-05, 7.53890000000021e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.529200000000111e-05, 7.53050000000012e-05, 7.533400000000329e-05, 7.534699999999991e-05, 7.529100000000163e-05, 7.531900000000077e-05, 7.52500000000024e-05, 7.53050000000012e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.534800000000286e-05, 7.533300000000034e-05, 7.531900000000077e-05, 7.529200000000111e-05, 7.530499999999773e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.532000000000025e-05, 7.530600000000068e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.484" endtime="20201030 18:31:21.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.479" endtime="20201030 18:31:21.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.490" endtime="20201030 18:31:21.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.489" endtime="20201030 18:31:21.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.488" endtime="20201030 18:31:21.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.131" endtime="20201030 18:31:21.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.131" endtime="20201030 18:31:21.511"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.520" endtime="20201030 18:31:21.537"></status>
</kw>
<msg timestamp="20201030 18:31:21.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.518" endtime="20201030 18:31:21.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.538" endtime="20201030 18:31:21.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.541" endtime="20201030 18:31:21.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.516" endtime="20201030 18:31:21.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.514" endtime="20201030 18:31:21.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.549" endtime="20201030 18:31:21.835"></status>
</kw>
<msg timestamp="20201030 18:31:21.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02159275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:21.548" endtime="20201030 18:31:21.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02159275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:21.839" endtime="20201030 18:31:21.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.847" endtime="20201030 18:31:21.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.545" endtime="20201030 18:31:21.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.544" endtime="20201030 18:31:21.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.854" level="INFO">${RESULT} = [{'diff': 7.634699999999744e-05}, {'diff': 7.531999999999678e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.533300000000034e-05}, {'diff': 7.53050000000012e-05}, {'diff': 7.534699999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:21.850" endtime="20201030 18:31:21.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.859" level="INFO">${ACCURACY} = {'diff': [7.634699999999744e-05, 7.531999999999678e-05, 7.532000000000025e-05, 7.533300000000034e-05, 7.53050000000012e-05, 7.534699999999991e-05, 7.53050000000012e-05, 7.532000000000025e-05, 7.532000...</msg>
<status status="PASS" starttime="20201030 18:31:21.855" endtime="20201030 18:31:21.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.863" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.862" endtime="20201030 18:31:21.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.865" level="INFO">VALUE: [7.634699999999744e-05, 7.531999999999678e-05, 7.532000000000025e-05, 7.533300000000034e-05, 7.53050000000012e-05, 7.534699999999991e-05, 7.53050000000012e-05, 7.532000000000025e-05, 7.532000000000025e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.530600000000068e-05, 7.53050000000012e-05, 7.53050000000012e-05, 7.530599999999721e-05, 7.529100000000163e-05, 7.530600000000068e-05, 7.53050000000012e-05, 7.530600000000068e-05, 7.529200000000111e-05, 7.534699999999991e-05, 7.530499999999773e-05, 7.529199999999764e-05, 7.530600000000068e-05, 7.527799999999807e-05, 7.53050000000012e-05, 7.526400000000197e-05, 7.529200000000111e-05, 7.534699999999991e-05, 7.532000000000025e-05, 7.533300000000034e-05, 7.530499999999773e-05, 7.530499999999773e-05, 7.530600000000068e-05, 7.529199999999764e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.530600000000068e-05, 7.52370000000023e-05, 7.53050000000012e-05, 7.530600000000068e-05, 7.529199999999764e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.53890000000021e-05, 7.531999999999678e-05, 7.533399999999982e-05, 7.531900000000077e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.864" endtime="20201030 18:31:21.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.859" endtime="20201030 18:31:21.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.870" endtime="20201030 18:31:21.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.869" endtime="20201030 18:31:21.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.868" endtime="20201030 18:31:21.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.512" endtime="20201030 18:31:21.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.511" endtime="20201030 18:31:21.892"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.900" endtime="20201030 18:31:21.917"></status>
</kw>
<msg timestamp="20201030 18:31:21.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.899" endtime="20201030 18:31:21.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.919" endtime="20201030 18:31:21.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.921" endtime="20201030 18:31:21.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.896" endtime="20201030 18:31:21.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.894" endtime="20201030 18:31:21.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.930" endtime="20201030 18:31:22.215"></status>
</kw>
<msg timestamp="20201030 18:31:22.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.928" endtime="20201030 18:31:22.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.219" endtime="20201030 18:31:22.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.227" endtime="20201030 18:31:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.926" endtime="20201030 18:31:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.924" endtime="20201030 18:31:22.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.234" level="INFO">${RESULT} = [{'diff': 7.629200000000211e-05}, {'diff': 7.529199999999764e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.530600000000068e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:22.231" endtime="20201030 18:31:22.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.238" level="INFO">${ACCURACY} = {'diff': [7.629200000000211e-05, 7.529199999999764e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.5306...</msg>
<status status="PASS" starttime="20201030 18:31:22.235" endtime="20201030 18:31:22.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.242" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.241" endtime="20201030 18:31:22.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.244" level="INFO">VALUE: [7.629200000000211e-05, 7.529199999999764e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.530499999999773e-05, 7.532000000000025e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.53050000000012e-05, 7.526400000000197e-05, 7.530600000000068e-05, 7.53050000000012e-05, 7.530599999999721e-05, 7.532000000000025e-05, 7.529200000000111e-05, 7.532000000000025e-05, 7.53189999999973e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.533300000000034e-05, 7.524999999999893e-05, 7.532000000000025e-05, 7.529199999999764e-05, 7.530600000000068e-05, 7.53189999999973e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.53050000000012e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.534699999999991e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.52500000000024e-05, 7.532000000000025e-05, 7.530600000000068e-05, 7.533300000000034e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.243" endtime="20201030 18:31:22.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.239" endtime="20201030 18:31:22.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.249" endtime="20201030 18:31:22.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.248" endtime="20201030 18:31:22.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.247" endtime="20201030 18:31:22.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.893" endtime="20201030 18:31:22.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.892" endtime="20201030 18:31:22.270"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.278" endtime="20201030 18:31:22.298"></status>
</kw>
<msg timestamp="20201030 18:31:22.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.277" endtime="20201030 18:31:22.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.300" endtime="20201030 18:31:22.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.302" endtime="20201030 18:31:22.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.274" endtime="20201030 18:31:22.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.272" endtime="20201030 18:31:22.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.311" endtime="20201030 18:31:22.595"></status>
</kw>
<msg timestamp="20201030 18:31:22.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024433694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02451, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:22.310" endtime="20201030 18:31:22.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024433694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02451, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:22.599" endtime="20201030 18:31:22.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.607" endtime="20201030 18:31:22.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.307" endtime="20201030 18:31:22.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.306" endtime="20201030 18:31:22.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.614" level="INFO">${RESULT} = [{'diff': 7.630600000000168e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.530599999999721e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.534699999999991e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:22.611" endtime="20201030 18:31:22.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.618" level="INFO">${ACCURACY} = {'diff': [7.630600000000168e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.531900000000077e-05, 7.534699999999991e-05, 7.536199999999896e-05, 7.524999999999893e-05, 7.5320...</msg>
<status status="PASS" starttime="20201030 18:31:22.615" endtime="20201030 18:31:22.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.622" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.621" endtime="20201030 18:31:22.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.625" level="INFO">VALUE: [7.630600000000168e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.531900000000077e-05, 7.534699999999991e-05, 7.536199999999896e-05, 7.524999999999893e-05, 7.532000000000025e-05, 7.529200000000111e-05, 7.533300000000034e-05, 7.52769999999986e-05, 7.529200000000111e-05, 7.529199999999764e-05, 7.530600000000068e-05, 7.529099999999816e-05, 7.529200000000111e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.531999999999678e-05, 7.530499999999773e-05, 7.526400000000197e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.526400000000197e-05, 7.53050000000012e-05, 7.524999999999893e-05, 7.53050000000012e-05, 7.530599999999721e-05, 7.53050000000012e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.527799999999807e-05, 7.52630000000025e-05, 7.530499999999773e-05, 7.532000000000025e-05, 7.53189999999973e-05, 7.53050000000012e-05, 7.52639999999985e-05, 7.529199999999764e-05, 7.529200000000111e-05, 7.529199999999764e-05, 7.53050000000012e-05, 7.53050000000012e-05, 7.529099999999816e-05, 7.529099999999816e-05, 7.523599999999936e-05, 7.529199999999764e-05, 7.531900000000077e-05, 7.533399999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.623" endtime="20201030 18:31:22.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.619" endtime="20201030 18:31:22.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.630" endtime="20201030 18:31:22.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.629" endtime="20201030 18:31:22.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.628" endtime="20201030 18:31:22.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.271" endtime="20201030 18:31:22.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.270" endtime="20201030 18:31:22.651"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.659" endtime="20201030 18:31:22.676"></status>
</kw>
<msg timestamp="20201030 18:31:22.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.658" endtime="20201030 18:31:22.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.678" endtime="20201030 18:31:22.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.680" endtime="20201030 18:31:22.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.655" endtime="20201030 18:31:22.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.653" endtime="20201030 18:31:22.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.689" endtime="20201030 18:31:22.975"></status>
</kw>
<msg timestamp="20201030 18:31:22.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.688" endtime="20201030 18:31:22.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.979" endtime="20201030 18:31:22.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.987" endtime="20201030 18:31:22.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.685" endtime="20201030 18:31:22.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.683" endtime="20201030 18:31:22.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.993" level="INFO">${RESULT} = [{'diff': 7.629199999999864e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.529200000000111e-05}, {'diff': 7.529100000000163e-05}, {'diff': 7.529199999999764e-05}, {'diff': 7.529200000000111e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:22.990" endtime="20201030 18:31:22.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.998" level="INFO">${ACCURACY} = {'diff': [7.629199999999864e-05, 7.532000000000025e-05, 7.529200000000111e-05, 7.529100000000163e-05, 7.529199999999764e-05, 7.529200000000111e-05, 7.529099999999816e-05, 7.532000000000025e-05, 7.5319...</msg>
<status status="PASS" starttime="20201030 18:31:22.994" endtime="20201030 18:31:22.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.003" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.002" endtime="20201030 18:31:23.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.005" level="INFO">VALUE: [7.629199999999864e-05, 7.532000000000025e-05, 7.529200000000111e-05, 7.529100000000163e-05, 7.529199999999764e-05, 7.529200000000111e-05, 7.529099999999816e-05, 7.532000000000025e-05, 7.531900000000077e-05, 7.534699999999991e-05, 7.530599999999721e-05, 7.530600000000068e-05, 7.53050000000012e-05, 7.532000000000025e-05, 7.530600000000068e-05, 7.530600000000068e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.534799999999939e-05, 7.53050000000012e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.530499999999773e-05, 7.530499999999773e-05, 7.527799999999807e-05, 7.53890000000021e-05, 7.532000000000025e-05, 7.529100000000163e-05, 7.532000000000025e-05, 7.531900000000077e-05, 7.534699999999991e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.529099999999816e-05, 7.527800000000154e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.530599999999721e-05, 7.529099999999816e-05, 7.529099999999816e-05, 7.52769999999986e-05, 7.527800000000154e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.531999999999678e-05, 7.537499999999905e-05, 7.531900000000077e-05, 7.529200000000111e-05, 7.531900000000077e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.004" endtime="20201030 18:31:23.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.999" endtime="20201030 18:31:23.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.010" endtime="20201030 18:31:23.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.009" endtime="20201030 18:31:23.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.007" endtime="20201030 18:31:23.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.652" endtime="20201030 18:31:23.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.651" endtime="20201030 18:31:23.031"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.039" endtime="20201030 18:31:23.056"></status>
</kw>
<msg timestamp="20201030 18:31:23.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.038" endtime="20201030 18:31:23.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.058" endtime="20201030 18:31:23.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.060" endtime="20201030 18:31:23.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.035" endtime="20201030 18:31:23.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.033" endtime="20201030 18:31:23.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.069" endtime="20201030 18:31:23.356"></status>
</kw>
<msg timestamp="20201030 18:31:23.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.067" endtime="20201030 18:31:23.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.360" endtime="20201030 18:31:23.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.368" endtime="20201030 18:31:23.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.065" endtime="20201030 18:31:23.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.063" endtime="20201030 18:31:23.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.376" level="INFO">${RESULT} = [{'diff': 7.630599999999821e-05}, {'diff': 7.53189999999973e-05}, {'diff': 7.540200000000219e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.529100000000163e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:23.372" endtime="20201030 18:31:23.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.383" level="INFO">${ACCURACY} = {'diff': [7.630599999999821e-05, 7.53189999999973e-05, 7.540200000000219e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.529100000000163e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.53049...</msg>
<status status="PASS" starttime="20201030 18:31:23.377" endtime="20201030 18:31:23.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.389" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.387" endtime="20201030 18:31:23.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.392" level="INFO">VALUE: [7.630599999999821e-05, 7.53189999999973e-05, 7.540200000000219e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.529100000000163e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.530499999999773e-05, 7.530599999999721e-05, 7.532000000000025e-05, 7.530600000000068e-05, 7.524999999999893e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.529200000000111e-05, 7.531900000000077e-05, 7.53050000000012e-05, 7.53050000000012e-05, 7.532000000000025e-05, 7.538899999999862e-05, 7.531900000000077e-05, 7.531999999999678e-05, 7.530600000000068e-05, 7.533300000000034e-05, 7.537499999999905e-05, 7.53189999999973e-05, 7.531900000000077e-05, 7.52639999999985e-05, 7.531900000000077e-05, 7.534699999999991e-05, 7.532000000000025e-05, 7.533399999999982e-05, 7.530599999999721e-05, 7.530499999999773e-05, 7.527800000000154e-05, 7.531900000000077e-05, 7.53189999999973e-05, 7.533300000000034e-05, 7.533300000000034e-05, 7.533399999999982e-05, 7.53050000000012e-05, 7.533300000000034e-05, 7.533300000000034e-05, 7.532000000000025e-05, 7.530600000000068e-05, 7.532000000000025e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.532000000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.390" endtime="20201030 18:31:23.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.384" endtime="20201030 18:31:23.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.399" endtime="20201030 18:31:23.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.397" endtime="20201030 18:31:23.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.396" endtime="20201030 18:31:23.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.032" endtime="20201030 18:31:23.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.031" endtime="20201030 18:31:23.421"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.430" endtime="20201030 18:31:23.449"></status>
</kw>
<msg timestamp="20201030 18:31:23.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.429" endtime="20201030 18:31:23.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.450" endtime="20201030 18:31:23.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.453" endtime="20201030 18:31:23.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.426" endtime="20201030 18:31:23.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.424" endtime="20201030 18:31:23.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.461" endtime="20201030 18:31:23.748"></status>
</kw>
<msg timestamp="20201030 18:31:23.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024230903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.460" endtime="20201030 18:31:23.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024230903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.753" endtime="20201030 18:31:23.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.761" endtime="20201030 18:31:23.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.457" endtime="20201030 18:31:23.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.456" endtime="20201030 18:31:23.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.767" level="INFO">${RESULT} = [{'diff': 7.63189999999983e-05}, {'diff': 7.533300000000034e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.537499999999905e-05}, {'diff': 7.530499999999773e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:23.764" endtime="20201030 18:31:23.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.771" level="INFO">${ACCURACY} = {'diff': [7.63189999999983e-05, 7.533300000000034e-05, 7.532000000000025e-05, 7.531900000000077e-05, 7.537499999999905e-05, 7.530499999999773e-05, 7.53050000000012e-05, 7.531900000000077e-05, 7.530499...</msg>
<status status="PASS" starttime="20201030 18:31:23.768" endtime="20201030 18:31:23.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.776" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.775" endtime="20201030 18:31:23.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.778" level="INFO">VALUE: [7.63189999999983e-05, 7.533300000000034e-05, 7.532000000000025e-05, 7.531900000000077e-05, 7.537499999999905e-05, 7.530499999999773e-05, 7.53050000000012e-05, 7.531900000000077e-05, 7.530499999999773e-05, 7.523699999999883e-05, 7.530600000000068e-05, 7.534699999999991e-05, 7.530600000000068e-05, 7.53189999999973e-05, 7.530599999999721e-05, 7.529099999999816e-05, 7.533399999999982e-05, 7.532000000000025e-05, 7.53050000000012e-05, 7.53050000000012e-05, 7.530499999999773e-05, 7.533300000000034e-05, 7.533300000000034e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.533300000000034e-05, 7.537500000000252e-05, 7.533300000000034e-05, 7.527800000000154e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.530599999999721e-05, 7.527799999999807e-05, 7.53050000000012e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.533300000000034e-05, 7.529200000000111e-05, 7.526400000000197e-05, 7.533300000000034e-05, 7.533300000000034e-05, 7.533399999999982e-05, 7.531900000000077e-05, 7.527800000000154e-05, 7.533399999999982e-05, 7.532000000000025e-05, 7.53189999999973e-05, 7.533300000000034e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.777" endtime="20201030 18:31:23.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.772" endtime="20201030 18:31:23.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.784" endtime="20201030 18:31:23.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.782" endtime="20201030 18:31:23.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.781" endtime="20201030 18:31:23.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.422" endtime="20201030 18:31:23.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.422" endtime="20201030 18:31:23.804"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.813" endtime="20201030 18:31:23.830"></status>
</kw>
<msg timestamp="20201030 18:31:23.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.811" endtime="20201030 18:31:23.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.832" endtime="20201030 18:31:23.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.834" endtime="20201030 18:31:23.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.809" endtime="20201030 18:31:23.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.807" endtime="20201030 18:31:23.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.843" endtime="20201030 18:31:24.129"></status>
</kw>
<msg timestamp="20201030 18:31:24.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.841" endtime="20201030 18:31:24.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.134" endtime="20201030 18:31:24.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.142" endtime="20201030 18:31:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.839" endtime="20201030 18:31:24.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.837" endtime="20201030 18:31:24.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.148" level="INFO">${RESULT} = [{'diff': 7.642999999999886e-05}, {'diff': 7.56379999999994e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.55830000000006e-05}, {'diff': 7.537499999999905e-05}, {'diff': 7.531900000000077e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:24.145" endtime="20201030 18:31:24.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.153" level="INFO">${ACCURACY} = {'diff': [7.642999999999886e-05, 7.56379999999994e-05, 7.531900000000077e-05, 7.55830000000006e-05, 7.537499999999905e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.529200000000111e-05, 7.545800...</msg>
<status status="PASS" starttime="20201030 18:31:24.149" endtime="20201030 18:31:24.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.157" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.156" endtime="20201030 18:31:24.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.160" level="INFO">VALUE: [7.642999999999886e-05, 7.56379999999994e-05, 7.531900000000077e-05, 7.55830000000006e-05, 7.537499999999905e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.529200000000111e-05, 7.545800000000047e-05, 7.533300000000034e-05, 7.532000000000025e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.530499999999773e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.529100000000163e-05, 7.523599999999936e-05, 7.532000000000025e-05, 7.526400000000197e-05, 7.570900000000019e-05, 7.533399999999982e-05, 7.542999999999786e-05, 7.532000000000025e-05, 7.529100000000163e-05, 7.523599999999936e-05, 7.533300000000034e-05, 7.569400000000115e-05, 7.536099999999948e-05, 7.533300000000034e-05, 7.544500000000037e-05, 7.527799999999807e-05, 7.574999999999943e-05, 7.558400000000007e-05, 7.556900000000102e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.534699999999991e-05, 7.537499999999905e-05, 7.5763999999999e-05, 7.529200000000111e-05, 7.531999999999678e-05, 7.55700000000005e-05, 7.56249999999993e-05, 7.545800000000047e-05, 7.532000000000025e-05, 7.559700000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.158" endtime="20201030 18:31:24.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.154" endtime="20201030 18:31:24.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.165" endtime="20201030 18:31:24.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.163" endtime="20201030 18:31:24.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.162" endtime="20201030 18:31:24.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.805" endtime="20201030 18:31:24.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.805" endtime="20201030 18:31:24.185"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.194" endtime="20201030 18:31:24.211"></status>
</kw>
<msg timestamp="20201030 18:31:24.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.192" endtime="20201030 18:31:24.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.212" endtime="20201030 18:31:24.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.215" endtime="20201030 18:31:24.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.190" endtime="20201030 18:31:24.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.188" endtime="20201030 18:31:24.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.224" endtime="20201030 18:31:24.511"></status>
</kw>
<msg timestamp="20201030 18:31:24.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021511847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.222" endtime="20201030 18:31:24.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021511847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.515" endtime="20201030 18:31:24.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.524" endtime="20201030 18:31:24.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.220" endtime="20201030 18:31:24.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.218" endtime="20201030 18:31:24.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.530" level="INFO">${RESULT} = [{'diff': 7.637500000000005e-05}, {'diff': 7.537499999999905e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.53890000000021e-05}, {'diff': 7.559700000000016e-05}, {'diff': 7.563899999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:24.527" endtime="20201030 18:31:24.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.534" level="INFO">${ACCURACY} = {'diff': [7.637500000000005e-05, 7.537499999999905e-05, 7.545800000000047e-05, 7.53890000000021e-05, 7.559700000000016e-05, 7.563899999999887e-05, 7.52769999999986e-05, 7.537499999999905e-05, 7.527799...</msg>
<status status="PASS" starttime="20201030 18:31:24.531" endtime="20201030 18:31:24.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.538" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.537" endtime="20201030 18:31:24.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.541" level="INFO">VALUE: [7.637500000000005e-05, 7.537499999999905e-05, 7.545800000000047e-05, 7.53890000000021e-05, 7.559700000000016e-05, 7.563899999999887e-05, 7.52769999999986e-05, 7.537499999999905e-05, 7.527799999999807e-05, 7.538899999999862e-05, 7.540300000000166e-05, 7.569500000000062e-05, 7.52639999999985e-05, 7.565300000000191e-05, 7.544500000000037e-05, 7.544399999999743e-05, 7.595900000000044e-05, 7.529200000000111e-05, 7.537499999999905e-05, 7.54440000000009e-05, 7.55830000000006e-05, 7.568100000000105e-05, 7.566700000000148e-05, 7.570800000000072e-05, 7.537500000000252e-05, 7.55830000000006e-05, 7.540199999999872e-05, 7.594500000000087e-05, 7.531900000000077e-05, 7.555499999999798e-05, 7.53890000000021e-05, 7.536099999999948e-05, 7.519400000000065e-05, 7.531900000000077e-05, 7.594500000000087e-05, 7.529200000000111e-05, 7.54029999999982e-05, 7.545899999999994e-05, 7.55700000000005e-05, 7.552800000000179e-05, 7.595800000000097e-05, 7.545899999999994e-05, 7.55700000000005e-05, 7.530499999999773e-05, 7.524999999999893e-05, 7.538899999999862e-05, 7.559799999999964e-05, 7.54029999999982e-05, 7.556900000000102e-05, 7.545800000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.539" endtime="20201030 18:31:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.535" endtime="20201030 18:31:24.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.546" endtime="20201030 18:31:24.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.544" endtime="20201030 18:31:24.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.543" endtime="20201030 18:31:24.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.186" endtime="20201030 18:31:24.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.186" endtime="20201030 18:31:24.566"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.575" endtime="20201030 18:31:24.593"></status>
</kw>
<msg timestamp="20201030 18:31:24.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.573" endtime="20201030 18:31:24.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.595" endtime="20201030 18:31:24.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.597" endtime="20201030 18:31:24.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.571" endtime="20201030 18:31:24.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.569" endtime="20201030 18:31:24.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.606" endtime="20201030 18:31:24.892"></status>
</kw>
<msg timestamp="20201030 18:31:24.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.605" endtime="20201030 18:31:24.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.898" endtime="20201030 18:31:24.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.910" endtime="20201030 18:31:24.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.602" endtime="20201030 18:31:24.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.601" endtime="20201030 18:31:24.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.916" level="INFO">${RESULT} = [{'diff': 7.644500000000137e-05}, {'diff': 7.548599999999961e-05}, {'diff': 0.00010011199999999942}, {'diff': 7.623600000000036e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.561099999999973e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:24.913" endtime="20201030 18:31:24.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.920" level="INFO">${ACCURACY} = {'diff': [7.644500000000137e-05, 7.548599999999961e-05, 0.00010011199999999942, 7.623600000000036e-05, 7.56249999999993e-05, 7.561099999999973e-05, 7.55700000000005e-05, 0.00010011099999999995, 7.6304...</msg>
<status status="PASS" starttime="20201030 18:31:24.917" endtime="20201030 18:31:24.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.925" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.924" endtime="20201030 18:31:24.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.928" level="INFO">VALUE: [7.644500000000137e-05, 7.548599999999961e-05, 0.00010011199999999942, 7.623600000000036e-05, 7.56249999999993e-05, 7.561099999999973e-05, 7.55700000000005e-05, 0.00010011099999999995, 7.630499999999873e-05, 7.56249999999993e-05, 0.00010011199999999942, 7.638899999999962e-05, 0.00010015300000000213, 7.643099999999833e-05, 7.55700000000005e-05, 7.563899999999887e-05, 7.570900000000019e-05, 7.545899999999994e-05, 7.574999999999943e-05, 7.556900000000102e-05, 7.577800000000204e-05, 7.548599999999961e-05, 0.00010013899999999909, 7.62769999999996e-05, 0.00010008299999999734, 7.632000000000125e-05, 7.569500000000062e-05, 0.00010009700000000038, 0.0001008060000000019, 0.00010086099999999723, 7.627799999999907e-05, 7.55700000000005e-05, 7.547299999999951e-05, 7.558400000000007e-05, 0.00010009699999999691, 7.638899999999962e-05, 0.00010013899999999909, 7.62639999999995e-05, 7.551400000000222e-05, 7.55830000000006e-05, 0.00010011099999999995, 7.634700000000091e-05, 7.551400000000222e-05, 0.00010019500000000084, 7.627799999999907e-05, 7.551399999999875e-05, 0.00010011099999999995, 0.0001008610000000007, 7.63189999999983e-05, 0.00010015199999999919]</msg>
<status status="PASS" starttime="20201030 18:31:24.926" endtime="20201030 18:31:24.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.921" endtime="20201030 18:31:24.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.938" endtime="20201030 18:31:24.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.937" endtime="20201030 18:31:24.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.935" endtime="20201030 18:31:24.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.567" endtime="20201030 18:31:24.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.567" endtime="20201030 18:31:24.959"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.967" endtime="20201030 18:31:24.986"></status>
</kw>
<msg timestamp="20201030 18:31:24.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.966" endtime="20201030 18:31:24.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.987" endtime="20201030 18:31:24.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.990" endtime="20201030 18:31:24.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.963" endtime="20201030 18:31:24.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.961" endtime="20201030 18:31:24.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.998" endtime="20201030 18:31:25.283"></status>
</kw>
<msg timestamp="20201030 18:31:25.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.997" endtime="20201030 18:31:25.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.287" endtime="20201030 18:31:25.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.295" endtime="20201030 18:31:25.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.995" endtime="20201030 18:31:25.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.993" endtime="20201030 18:31:25.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.301" level="INFO">${RESULT} = [{'diff': 0.00010095900000000116}, {'diff': 0.00010084700000000113}, {'diff': 0.00010084700000000113}, {'diff': 0.00010079200000000232}, {'diff': 0.00010083299999999809}, {'diff': 0.000100875000000000...</msg>
<status status="PASS" starttime="20201030 18:31:25.298" endtime="20201030 18:31:25.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.306" level="INFO">${ACCURACY} = {'diff': [0.00010095900000000116, 0.00010084700000000113, 0.00010084700000000113, 0.00010079200000000232, 0.00010083299999999809, 0.00010087500000000027, 0.00010088800000000037, 0.00010088899999999984...</msg>
<status status="PASS" starttime="20201030 18:31:25.302" endtime="20201030 18:31:25.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.311" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.310" endtime="20201030 18:31:25.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.313" level="INFO">VALUE: [0.00010095900000000116, 0.00010084700000000113, 0.00010084700000000113, 0.00010079200000000232, 0.00010083299999999809, 0.00010087500000000027, 0.00010088800000000037, 0.00010088899999999984, 0.00010087500000000027, 0.0001008610000000007, 0.00010087500000000027, 0.00010083400000000103, 0.0001008610000000007, 0.000100819999999998, 0.00010087500000000027, 0.00010087500000000027, 0.00010088899999999984, 0.00010077699999999981, 0.00010087500000000027, 0.00010084700000000113, 0.0001008610000000007, 0.00010087500000000027, 0.0001008610000000007, 0.00010087500000000027, 0.00010087500000000027, 0.00010084700000000113, 0.00010080499999999895, 0.0001008610000000007, 0.00010087500000000027, 0.00010088899999999984, 0.00010088899999999984, 0.00010079099999999938, 0.00010088899999999984, 0.00010084700000000113, 0.0001008610000000007, 0.0001008610000000007, 0.0001008480000000006, 0.00010083300000000156, 0.00010084699999999766, 0.00010084700000000113, 0.00010087500000000027, 0.00010086200000000017, 0.00010083399999999756, 0.00010087500000000027, 0.0001008610000000007, 0.00010088899999999984, 0.00010090199999999994, 0.0001008610000000007, 0.00010080499999999895, 0.00010086099999999723]</msg>
<status status="PASS" starttime="20201030 18:31:25.312" endtime="20201030 18:31:25.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.307" endtime="20201030 18:31:25.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.318" endtime="20201030 18:31:25.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.316" endtime="20201030 18:31:25.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.315" endtime="20201030 18:31:25.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.960" endtime="20201030 18:31:25.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.959" endtime="20201030 18:31:25.338"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.347" endtime="20201030 18:31:25.365"></status>
</kw>
<msg timestamp="20201030 18:31:25.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.345" endtime="20201030 18:31:25.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.367" endtime="20201030 18:31:25.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.369" endtime="20201030 18:31:25.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.343" endtime="20201030 18:31:25.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.341" endtime="20201030 18:31:25.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.378" endtime="20201030 18:31:25.665"></status>
</kw>
<msg timestamp="20201030 18:31:25.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.377" endtime="20201030 18:31:25.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.669" endtime="20201030 18:31:25.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.677" endtime="20201030 18:31:25.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.374" endtime="20201030 18:31:25.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.372" endtime="20201030 18:31:25.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.684" level="INFO">${RESULT} = [{'diff': 0.00010098600000000083}, {'diff': 0.00010084700000000113}, {'diff': 0.00010083299999999809}, {'diff': 0.00010084700000000113}, {'diff': 0.00010079199999999885}, {'diff': 0.000100847000000001...</msg>
<status status="PASS" starttime="20201030 18:31:25.681" endtime="20201030 18:31:25.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.688" level="INFO">${ACCURACY} = {'diff': [0.00010098600000000083, 0.00010084700000000113, 0.00010083299999999809, 0.00010084700000000113, 0.00010079199999999885, 0.00010084700000000113, 0.00010090199999999994, 0.00010087500000000027...</msg>
<status status="PASS" starttime="20201030 18:31:25.685" endtime="20201030 18:31:25.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.692" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.691" endtime="20201030 18:31:25.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.694" level="INFO">VALUE: [0.00010098600000000083, 0.00010084700000000113, 0.00010083299999999809, 0.00010084700000000113, 0.00010079199999999885, 0.00010084700000000113, 0.00010090199999999994, 0.00010087500000000027, 0.00010084699999999766, 0.0001008610000000007, 0.00010083299999999809, 0.00010079199999999885, 0.00010079099999999938, 0.00010087500000000027, 0.00010083300000000156, 0.0001008610000000007, 0.00010084799999999713, 0.00010079199999999885, 0.00010084699999999766, 0.00010083400000000103, 0.00010079099999999938, 0.00010083300000000156, 0.00010084700000000113, 0.0001008610000000007, 0.0001008610000000007, 0.0001008480000000006, 0.0001008480000000006, 0.0001008610000000007, 0.0001008610000000007, 0.0001008610000000007, 0.00010086099999999723, 0.00010088899999999984, 0.0001009159999999995, 0.00010081899999999852, 0.000100819999999998, 0.0001008480000000006, 0.00010083300000000156, 0.00010086099999999723, 0.00010084700000000113, 0.00010086200000000017, 0.00010087500000000027, 0.0001008610000000007, 0.00010084700000000113, 0.00010087500000000027, 0.0001008610000000007, 0.0001008610000000007, 0.00010086200000000017, 0.00010081899999999852, 0.00010084700000000113, 0.00010088800000000037]</msg>
<status status="PASS" starttime="20201030 18:31:25.693" endtime="20201030 18:31:25.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.688" endtime="20201030 18:31:25.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.699" endtime="20201030 18:31:25.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.698" endtime="20201030 18:31:25.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.696" endtime="20201030 18:31:25.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.339" endtime="20201030 18:31:25.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.339" endtime="20201030 18:31:25.720"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.728" endtime="20201030 18:31:25.750"></status>
</kw>
<msg timestamp="20201030 18:31:25.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.727" endtime="20201030 18:31:25.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.752" endtime="20201030 18:31:25.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.754" endtime="20201030 18:31:25.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.724" endtime="20201030 18:31:25.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.722" endtime="20201030 18:31:25.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.763" endtime="20201030 18:31:26.048"></status>
</kw>
<msg timestamp="20201030 18:31:26.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025023389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025124347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.761" endtime="20201030 18:31:26.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025023389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025124347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.052" endtime="20201030 18:31:26.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.060" endtime="20201030 18:31:26.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.759" endtime="20201030 18:31:26.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.757" endtime="20201030 18:31:26.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.066" level="INFO">${RESULT} = [{'diff': 0.00010095800000000169}, {'diff': 0.00010083299999999809}, {'diff': 0.00010082000000000146}, {'diff': 0.0001008610000000007}, {'diff': 0.0001008610000000007}, {'diff': 0.00010083300000000156...</msg>
<status status="PASS" starttime="20201030 18:31:26.063" endtime="20201030 18:31:26.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.070" level="INFO">${ACCURACY} = {'diff': [0.00010095800000000169, 0.00010083299999999809, 0.00010082000000000146, 0.0001008610000000007, 0.0001008610000000007, 0.00010083300000000156, 0.00010084699999999766, 0.00010084699999999766, ...</msg>
<status status="PASS" starttime="20201030 18:31:26.067" endtime="20201030 18:31:26.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.075" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.074" endtime="20201030 18:31:26.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.077" level="INFO">VALUE: [0.00010095800000000169, 0.00010083299999999809, 0.00010082000000000146, 0.0001008610000000007, 0.0001008610000000007, 0.00010083300000000156, 0.00010084699999999766, 0.00010084699999999766, 0.0001008749999999968, 0.00010084699999999766, 0.00010084699999999766, 0.0001008610000000007, 0.00010084700000000113, 0.00010087500000000027, 0.00010084700000000113, 0.00010087500000000027, 0.00010079099999999938, 0.00010084700000000113, 0.00010083299999999809, 0.0001008480000000006, 0.00010083399999999756, 0.0001008610000000007, 0.0001008610000000007, 0.0001008619999999967, 0.0001008610000000007, 0.00010079200000000232, 0.00010086200000000017, 0.00010086200000000017, 0.00010083300000000156, 0.00010081899999999852, 0.00010084700000000113, 0.00010083400000000103, 0.00010083300000000156, 0.00010081900000000199, 0.00010082000000000146, 0.00010084700000000113, 0.0001008610000000007, 0.00010083300000000156, 0.00010084700000000113, 0.00010077699999999981, 0.00010087500000000027, 0.00010084699999999766, 0.00010076399999999971, 0.00010084699999999766, 0.00010079099999999938, 0.00010081899999999852, 0.0001008060000000019, 0.00010084699999999766, 0.00010081900000000199, 0.00010083400000000103]</msg>
<status status="PASS" starttime="20201030 18:31:26.076" endtime="20201030 18:31:26.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.071" endtime="20201030 18:31:26.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.084" endtime="20201030 18:31:26.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.082" endtime="20201030 18:31:26.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.080" endtime="20201030 18:31:26.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.721" endtime="20201030 18:31:26.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.720" endtime="20201030 18:31:26.108"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.121" endtime="20201030 18:31:26.141"></status>
</kw>
<msg timestamp="20201030 18:31:26.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.119" endtime="20201030 18:31:26.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.142" endtime="20201030 18:31:26.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.145" endtime="20201030 18:31:26.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.115" endtime="20201030 18:31:26.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.112" endtime="20201030 18:31:26.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.154" endtime="20201030 18:31:26.440"></status>
</kw>
<msg timestamp="20201030 18:31:26.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029395111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029496028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.152" endtime="20201030 18:31:26.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029395111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029496028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.444" endtime="20201030 18:31:26.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.452" endtime="20201030 18:31:26.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.149" endtime="20201030 18:31:26.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.148" endtime="20201030 18:31:26.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.458" level="INFO">${RESULT} = [{'diff': 0.00010091699999999898}, {'diff': 0.00010083400000000103}, {'diff': 0.0001008610000000007}, {'diff': 0.00010086099999999723}, {'diff': 0.00010084700000000113}, {'diff': 0.0001008339999999975...</msg>
<status status="PASS" starttime="20201030 18:31:26.455" endtime="20201030 18:31:26.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.463" level="INFO">${ACCURACY} = {'diff': [0.00010091699999999898, 0.00010083400000000103, 0.0001008610000000007, 0.00010086099999999723, 0.00010084700000000113, 0.00010083399999999756, 0.00010090299999999941, 0.0001008749999999968, ...</msg>
<status status="PASS" starttime="20201030 18:31:26.459" endtime="20201030 18:31:26.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.467" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.466" endtime="20201030 18:31:26.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.469" level="INFO">VALUE: [0.00010091699999999898, 0.00010083400000000103, 0.0001008610000000007, 0.00010086099999999723, 0.00010084700000000113, 0.00010083399999999756, 0.00010090299999999941, 0.0001008749999999968, 0.0001008480000000006, 0.00010084699999999766, 0.00010083300000000156, 0.0001008610000000007, 0.00010079100000000285, 0.00010084700000000113, 0.00010084700000000113, 0.0001008610000000007, 0.00010087500000000027, 0.00010088899999999984, 0.00010090300000000635, 0.00010087500000000027, 0.0001008610000000007, 0.00010093099999999855, 0.00010087500000000027, 0.0001008610000000007, 0.00010087500000000027, 0.00010084700000000113, 0.0001008610000000007, 0.00010084700000000113, 0.00010086099999999376, 0.00010087500000000027, 0.0001008610000000007, 0.00010087500000000027, 0.00010084699999999419, 0.0001008610000000007, 0.00010083300000000156, 0.0001008610000000007, 0.00010088899999999984, 0.00010090299999999941, 0.0001008610000000007, 0.00010086200000000017, 0.0001008610000000007, 0.00010084700000000113, 0.0001008610000000007, 0.0001008610000000007, 0.00010084699999999419, 0.00010088899999999984, 0.0001008610000000007, 0.0001008610000000007, 0.0001008610000000007, 0.0001008610000000007]</msg>
<status status="PASS" starttime="20201030 18:31:26.468" endtime="20201030 18:31:26.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.464" endtime="20201030 18:31:26.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.474" endtime="20201030 18:31:26.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.473" endtime="20201030 18:31:26.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.472" endtime="20201030 18:31:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.110" endtime="20201030 18:31:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.109" endtime="20201030 18:31:26.495"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.504" endtime="20201030 18:31:26.522"></status>
</kw>
<msg timestamp="20201030 18:31:26.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.502" endtime="20201030 18:31:26.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.524" endtime="20201030 18:31:26.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.526" endtime="20201030 18:31:26.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.500" endtime="20201030 18:31:26.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.498" endtime="20201030 18:31:26.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.535" endtime="20201030 18:31:26.821"></status>
</kw>
<msg timestamp="20201030 18:31:26.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.534" endtime="20201030 18:31:26.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.825" endtime="20201030 18:31:26.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.833" endtime="20201030 18:31:26.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.531" endtime="20201030 18:31:26.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.529" endtime="20201030 18:31:26.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.840" level="INFO">${RESULT} = [{'diff': 0.00010097199999999779}, {'diff': 0.00010086099999999723}, {'diff': 0.0001008610000000007}, {'diff': 0.00010086099999999723}, {'diff': 0.00010084700000000113}, {'diff': 0.0001008889999999998...</msg>
<status status="PASS" starttime="20201030 18:31:26.837" endtime="20201030 18:31:26.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.844" level="INFO">${ACCURACY} = {'diff': [0.00010097199999999779, 0.00010086099999999723, 0.0001008610000000007, 0.00010086099999999723, 0.00010084700000000113, 0.00010088899999999984, 0.00010083400000000103, 0.00010083299999999809,...</msg>
<status status="PASS" starttime="20201030 18:31:26.841" endtime="20201030 18:31:26.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.848" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.847" endtime="20201030 18:31:26.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.850" level="INFO">VALUE: [0.00010097199999999779, 0.00010086099999999723, 0.0001008610000000007, 0.00010086099999999723, 0.00010084700000000113, 0.00010088899999999984, 0.00010083400000000103, 0.00010083299999999809, 0.00010080599999999842, 0.0001008480000000006, 0.00010084699999999766, 0.00010083399999999756, 0.00010086099999999723, 0.00010083300000000156, 0.0001008480000000006, 0.0001008480000000006, 0.00010084700000000113, 0.0001008480000000006, 0.00010084700000000113, 0.0001008610000000007, 0.00010084700000000113, 0.0001008610000000007, 0.00010084699999999766, 0.0001009159999999995, 0.0001008610000000007, 0.00010086099999999723, 0.0001008610000000007, 0.00010084700000000113, 0.00010084700000000113, 0.0001008610000000007, 0.00010084700000000113, 0.0001008610000000007, 0.0001008610000000007, 0.00010087500000000027, 0.00010084699999999766, 0.00010083300000000156, 0.00010080500000000242, 0.00010083400000000103, 0.0001008060000000019, 0.00010093099999999855, 0.00010083300000000156, 0.00010080599999999842, 0.00010084699999999766, 0.00010084700000000113, 0.00010084700000000113, 0.00010087500000000027, 0.00010087500000000027, 0.00010090199999999994, 0.00010084700000000113, 0.00010084700000000113]</msg>
<status status="PASS" starttime="20201030 18:31:26.849" endtime="20201030 18:31:26.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.845" endtime="20201030 18:31:26.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.855" endtime="20201030 18:31:26.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.854" endtime="20201030 18:31:26.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.853" endtime="20201030 18:31:26.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.496" endtime="20201030 18:31:26.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.496" endtime="20201030 18:31:26.877"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.892" endtime="20201030 18:31:26.913"></status>
</kw>
<msg timestamp="20201030 18:31:26.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.888" endtime="20201030 18:31:26.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.914" endtime="20201030 18:31:26.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.917" endtime="20201030 18:31:26.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.885" endtime="20201030 18:31:26.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.881" endtime="20201030 18:31:26.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.925" endtime="20201030 18:31:27.212"></status>
</kw>
<msg timestamp="20201030 18:31:27.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031223097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031324097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.924" endtime="20201030 18:31:27.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031223097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031324097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.216" endtime="20201030 18:31:27.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.224" endtime="20201030 18:31:27.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.922" endtime="20201030 18:31:27.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.920" endtime="20201030 18:31:27.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.231" level="INFO">${RESULT} = [{'diff': 0.00010100000000000386}, {'diff': 0.0001008610000000007}, {'diff': 0.0001008610000000007}, {'diff': 0.00010088899999999984}, {'diff': 0.00010083300000000156}, {'diff': 0.00010090299999999941...</msg>
<status status="PASS" starttime="20201030 18:31:27.228" endtime="20201030 18:31:27.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.235" level="INFO">${ACCURACY} = {'diff': [0.00010100000000000386, 0.0001008610000000007, 0.0001008610000000007, 0.00010088899999999984, 0.00010083300000000156, 0.00010090299999999941, 0.00010087500000000027, 0.0001008060000000019, 0...</msg>
<status status="PASS" starttime="20201030 18:31:27.232" endtime="20201030 18:31:27.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.239" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.238" endtime="20201030 18:31:27.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.241" level="INFO">VALUE: [0.00010100000000000386, 0.0001008610000000007, 0.0001008610000000007, 0.00010088899999999984, 0.00010083300000000156, 0.00010090299999999941, 0.00010087500000000027, 0.0001008060000000019, 0.00010086099999999376, 0.00010088899999999984, 0.00010087500000000027, 0.00010087500000000027, 0.0001008610000000007, 0.00010087500000000027, 0.0001008610000000007, 0.0001008610000000007, 0.00010088899999999984, 0.00010087500000000027, 0.00010087500000000027, 0.00010087500000000027, 0.0001008610000000007, 0.00010084700000000113, 0.0001008610000000007, 0.00010086099999999376, 0.0001008610000000007, 0.00010084700000000113, 0.00010084700000000113, 0.00010087500000000027, 0.00010088900000000678, 0.00010083300000000156, 0.00010080500000000242, 0.00010084799999999366, 0.0001008480000000006, 0.0001008610000000007, 0.0001008610000000007, 0.00010087500000000027, 0.0001008060000000019, 0.00010087500000000027, 0.00010086099999999376, 0.00010087500000000027, 0.00010087500000000027, 0.00010087500000000027, 0.0001008610000000007, 0.0001008480000000006, 0.00010081900000000199, 0.00010087500000000027, 0.00010088899999999984, 0.0001008610000000007, 0.00010087500000000027, 0.00010084700000000113]</msg>
<status status="PASS" starttime="20201030 18:31:27.240" endtime="20201030 18:31:27.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.236" endtime="20201030 18:31:27.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.247" endtime="20201030 18:31:27.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.246" endtime="20201030 18:31:27.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.245" endtime="20201030 18:31:27.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.878" endtime="20201030 18:31:27.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.878" endtime="20201030 18:31:27.268"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.276" endtime="20201030 18:31:27.295"></status>
</kw>
<msg timestamp="20201030 18:31:27.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.275" endtime="20201030 18:31:27.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.297" endtime="20201030 18:31:27.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.299" endtime="20201030 18:31:27.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.272" endtime="20201030 18:31:27.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.270" endtime="20201030 18:31:27.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.308" endtime="20201030 18:31:27.593"></status>
</kw>
<msg timestamp="20201030 18:31:27.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:27.306" endtime="20201030 18:31:27.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:27.597" endtime="20201030 18:31:27.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.605" endtime="20201030 18:31:27.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.304" endtime="20201030 18:31:27.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.302" endtime="20201030 18:31:27.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.611" level="INFO">${RESULT} = [{'diff': 0.00010098599999999736}, {'diff': 0.0001157910000000005}, {'diff': 0.00010065299999999916}, {'diff': 0.00010079199999999885}, {'diff': 0.00010080599999999842}, {'diff': 0.0001008610000000007...</msg>
<status status="PASS" starttime="20201030 18:31:27.608" endtime="20201030 18:31:27.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.616" level="INFO">${ACCURACY} = {'diff': [0.00010098599999999736, 0.0001157910000000005, 0.00010065299999999916, 0.00010079199999999885, 0.00010080599999999842, 0.0001008610000000007, 0.00010083400000000103, 0.00011569399999999952, ...</msg>
<status status="PASS" starttime="20201030 18:31:27.612" endtime="20201030 18:31:27.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.620" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.619" endtime="20201030 18:31:27.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.623" level="INFO">VALUE: [0.00010098599999999736, 0.0001157910000000005, 0.00010065299999999916, 0.00010079199999999885, 0.00010080599999999842, 0.0001008610000000007, 0.00010083400000000103, 0.00011569399999999952, 0.00010066699999999873, 0.00010083300000000156, 0.0001008610000000007, 0.000100819999999998, 0.00011579199999999998, 0.0001159170000000001, 0.00011597199999999891, 0.000100722000000001, 0.00010076399999999971, 0.0001008480000000006, 0.0001008480000000006, 0.0001157360000000017, 0.00010066599999999926, 0.00011583299999999921, 0.00011598599999999848, 0.00011597199999999891, 0.00011598599999999848, 0.00010066699999999873, 0.00010083300000000156, 0.00010077700000000328, 0.00011577700000000093, 0.00010076399999999971, 0.0001008610000000007, 0.00010084700000000113, 0.00010086200000000017, 0.0001008060000000019, 0.00011579199999999998, 0.00010073600000000058, 0.00010077799999999928, 0.0001008610000000007, 0.0001008610000000007, 0.00010083300000000156, 0.00011581899999999964, 0.0001007359999999971, 0.00010076300000000024, 0.0001008060000000019, 0.00010075000000000014, 0.0001009159999999995, 0.00010076400000000318, 0.00010076399999999971, 0.00011576400000000084, 0.00010073600000000058]</msg>
<status status="PASS" starttime="20201030 18:31:27.621" endtime="20201030 18:31:27.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.617" endtime="20201030 18:31:27.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.627" endtime="20201030 18:31:27.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.626" endtime="20201030 18:31:27.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.625" endtime="20201030 18:31:27.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.269" endtime="20201030 18:31:27.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.268" endtime="20201030 18:31:27.648"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.657" endtime="20201030 18:31:27.676"></status>
</kw>
<msg timestamp="20201030 18:31:27.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.655" endtime="20201030 18:31:27.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.677" endtime="20201030 18:31:27.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.680" endtime="20201030 18:31:27.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.653" endtime="20201030 18:31:27.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.651" endtime="20201030 18:31:27.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.689" endtime="20201030 18:31:27.977"></status>
</kw>
<msg timestamp="20201030 18:31:27.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.687" endtime="20201030 18:31:27.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.981" endtime="20201030 18:31:27.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.989" endtime="20201030 18:31:27.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.685" endtime="20201030 18:31:27.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.683" endtime="20201030 18:31:27.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.996" level="INFO">${RESULT} = [{'diff': 0.00011622199999999916}, {'diff': 0.00011601399999999762}, {'diff': 0.00011598600000000195}, {'diff': 0.0001159170000000001}, {'diff': 0.00011598599999999848}, {'diff': 0.0001159859999999984...</msg>
<status status="PASS" starttime="20201030 18:31:27.993" endtime="20201030 18:31:27.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.000" level="INFO">${ACCURACY} = {'diff': [0.00011622199999999916, 0.00011601399999999762, 0.00011598600000000195, 0.0001159170000000001, 0.00011598599999999848, 0.00011598599999999848, 0.00011602799999999719, 0.00011600000000000152,...</msg>
<status status="PASS" starttime="20201030 18:31:27.997" endtime="20201030 18:31:28.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.004" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.003" endtime="20201030 18:31:28.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.006" level="INFO">VALUE: [0.00011622199999999916, 0.00011601399999999762, 0.00011598600000000195, 0.0001159170000000001, 0.00011598599999999848, 0.00011598599999999848, 0.00011602799999999719, 0.00011600000000000152, 0.0001159170000000001, 0.0001160689999999999, 0.00011597199999999891, 0.00011598600000000195, 0.00011604100000000075, 0.00011599999999999805, 0.00011599999999999805, 0.00011601400000000109, 0.00011598599999999848, 0.0001159170000000001, 0.00011602800000000066, 0.00011598600000000195, 0.00011600000000000152, 0.0001160559999999998, 0.00011594399999999977, 0.00011595800000000281, 0.00011598600000000195, 0.00011598600000000195, 0.00011598599999999848, 0.00011600000000000152, 0.00011598599999999848, 0.00011601400000000109, 0.00011599999999999805, 0.00011598599999999848, 0.00011598700000000142, 0.00011598599999999848, 0.00011598599999999848, 0.00011598600000000195, 0.00011604100000000075, 0.00011597200000000238, 0.00011595800000000281, 0.00011597299999999838, 0.00011597199999999891, 0.00011600000000000152, 0.00011598600000000195, 0.00011601400000000109, 0.00011598600000000195, 0.00011597200000000238, 0.00011594399999999977, 0.00011597200000000238, 0.00011598600000000195, 0.00011597199999999891]</msg>
<status status="PASS" starttime="20201030 18:31:28.005" endtime="20201030 18:31:28.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.000" endtime="20201030 18:31:28.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.011" endtime="20201030 18:31:28.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.010" endtime="20201030 18:31:28.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.009" endtime="20201030 18:31:28.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.649" endtime="20201030 18:31:28.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.649" endtime="20201030 18:31:28.032"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.040" endtime="20201030 18:31:28.061"></status>
</kw>
<msg timestamp="20201030 18:31:28.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.039" endtime="20201030 18:31:28.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.062" endtime="20201030 18:31:28.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.065" endtime="20201030 18:31:28.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.036" endtime="20201030 18:31:28.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.034" endtime="20201030 18:31:28.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.073" endtime="20201030 18:31:28.359"></status>
</kw>
<msg timestamp="20201030 18:31:28.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.072" endtime="20201030 18:31:28.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.363" endtime="20201030 18:31:28.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.371" endtime="20201030 18:31:28.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.069" endtime="20201030 18:31:28.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.068" endtime="20201030 18:31:28.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.377" level="INFO">${RESULT} = [{'diff': 0.0001162499999999983}, {'diff': 0.00011601400000000109}, {'diff': 0.00011598600000000195}, {'diff': 0.00011602800000000066}, {'diff': 0.00011597199999999891}, {'diff': 0.0001159719999999989...</msg>
<status status="PASS" starttime="20201030 18:31:28.374" endtime="20201030 18:31:28.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.381" level="INFO">${ACCURACY} = {'diff': [0.0001162499999999983, 0.00011601400000000109, 0.00011598600000000195, 0.00011602800000000066, 0.00011597199999999891, 0.00011597199999999891, 0.00011598599999999848, 0.00011598599999999848,...</msg>
<status status="PASS" starttime="20201030 18:31:28.378" endtime="20201030 18:31:28.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.386" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.385" endtime="20201030 18:31:28.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.388" level="INFO">VALUE: [0.0001162499999999983, 0.00011601400000000109, 0.00011598600000000195, 0.00011602800000000066, 0.00011597199999999891, 0.00011597199999999891, 0.00011598599999999848, 0.00011598599999999848, 0.00011595799999999934, 0.00011600000000000152, 0.0001159170000000001, 0.00011594499999999924, 0.00011598599999999848, 0.00011595799999999934, 0.00011595799999999934, 0.00011595800000000281, 0.00011597199999999891, 0.00011597199999999891, 0.00011595799999999934, 0.00011598700000000142, 0.00011597199999999891, 0.00011595799999999934, 0.00011593099999999967, 0.00011601400000000109, 0.00011598599999999848, 0.00011597199999999891, 0.00011598599999999848, 0.0001160689999999999, 0.00011598599999999848, 0.00011598600000000195, 0.00011595899999999881, 0.00011601399999999762, 0.00011597199999999891, 0.00011600000000000152, 0.00011599999999999805, 0.00011599999999999805, 0.00011601400000000109, 0.00011597200000000238, 0.00011593099999999967, 0.00011597200000000238, 0.00011601400000000109, 0.00011598599999999848, 0.00011600000000000152, 0.00011599999999999805, 0.00011599999999999805, 0.00011597200000000238, 0.00011598599999999848, 0.00011598600000000195, 0.00011602800000000066, 0.00011598599999999848]</msg>
<status status="PASS" starttime="20201030 18:31:28.387" endtime="20201030 18:31:28.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.382" endtime="20201030 18:31:28.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.394" endtime="20201030 18:31:28.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.392" endtime="20201030 18:31:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.391" endtime="20201030 18:31:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.033" endtime="20201030 18:31:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.032" endtime="20201030 18:31:28.415"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.423" endtime="20201030 18:31:28.442"></status>
</kw>
<msg timestamp="20201030 18:31:28.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.422" endtime="20201030 18:31:28.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.444" endtime="20201030 18:31:28.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.446" endtime="20201030 18:31:28.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.419" endtime="20201030 18:31:28.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.417" endtime="20201030 18:31:28.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.455" endtime="20201030 18:31:28.740"></status>
</kw>
<msg timestamp="20201030 18:31:28.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.453" endtime="20201030 18:31:28.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.744" endtime="20201030 18:31:28.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.752" endtime="20201030 18:31:28.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.451" endtime="20201030 18:31:28.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.449" endtime="20201030 18:31:28.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.758" level="INFO">${RESULT} = [{'diff': 0.00011620899999999906}, {'diff': 0.0001159300000000002}, {'diff': 0.00011598600000000195}, {'diff': 0.00011597300000000185}, {'diff': 0.00011599999999999805}, {'diff': 0.0001159860000000019...</msg>
<status status="PASS" starttime="20201030 18:31:28.755" endtime="20201030 18:31:28.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.763" level="INFO">${ACCURACY} = {'diff': [0.00011620899999999906, 0.0001159300000000002, 0.00011598600000000195, 0.00011597300000000185, 0.00011599999999999805, 0.00011598600000000195, 0.00011601400000000109, 0.00011598599999999848,...</msg>
<status status="PASS" starttime="20201030 18:31:28.759" endtime="20201030 18:31:28.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.768" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.767" endtime="20201030 18:31:28.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.770" level="INFO">VALUE: [0.00011620899999999906, 0.0001159300000000002, 0.00011598600000000195, 0.00011597300000000185, 0.00011599999999999805, 0.00011598600000000195, 0.00011601400000000109, 0.00011598599999999848, 0.00011597200000000238, 0.00011595800000000281, 0.00011599999999999805, 0.0001160689999999999, 0.00011601400000000109, 0.00011598600000000195, 0.00011598599999999848, 0.00011598599999999848, 0.00011598600000000195, 0.00011598599999999848, 0.0001159170000000001, 0.00011598600000000195, 0.00011599999999999805, 0.00011598599999999848, 0.00011595799999999934, 0.00011595799999999934, 0.00011605500000000032, 0.00011607000000000284, 0.00011595799999999934, 0.00011597199999999891, 0.00011598600000000195, 0.00011597199999999891, 0.00011598599999999848, 0.00011594499999999924, 0.00011601399999999762, 0.00011597200000000238, 0.00011599999999999805, 0.00011598599999999848, 0.00011598600000000195, 0.00011597200000000238, 0.0001160689999999999, 0.00011599999999999805, 0.00011599999999999805, 0.0001159170000000001, 0.00011597300000000185, 0.00011598600000000195, 0.00011598599999999848, 0.00011598700000000142, 0.00011591600000000063, 0.00011597300000000185, 0.00011595799999999934, 0.00011598600000000195]</msg>
<status status="PASS" starttime="20201030 18:31:28.769" endtime="20201030 18:31:28.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.764" endtime="20201030 18:31:28.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.775" endtime="20201030 18:31:28.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.773" endtime="20201030 18:31:28.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.772" endtime="20201030 18:31:28.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.415" endtime="20201030 18:31:28.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.415" endtime="20201030 18:31:28.796"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.804" endtime="20201030 18:31:28.823"></status>
</kw>
<msg timestamp="20201030 18:31:28.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.802" endtime="20201030 18:31:28.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.825" endtime="20201030 18:31:28.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.827" endtime="20201030 18:31:28.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.800" endtime="20201030 18:31:28.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.798" endtime="20201030 18:31:28.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.836" endtime="20201030 18:31:29.136"></status>
</kw>
<msg timestamp="20201030 18:31:29.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.834" endtime="20201030 18:31:29.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.146" endtime="20201030 18:31:29.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.165" endtime="20201030 18:31:29.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.832" endtime="20201030 18:31:29.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.830" endtime="20201030 18:31:29.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.182" level="INFO">${RESULT} = [{'diff': 0.00011620899999999906}, {'diff': 0.00011595799999999934}, {'diff': 0.00011593099999999967}, {'diff': 0.00011597199999999891}, {'diff': 0.00011595799999999934}, {'diff': 0.000115957999999999...</msg>
<status status="PASS" starttime="20201030 18:31:29.174" endtime="20201030 18:31:29.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.193" level="INFO">${ACCURACY} = {'diff': [0.00011620899999999906, 0.00011595799999999934, 0.00011593099999999967, 0.00011597199999999891, 0.00011595799999999934, 0.00011595799999999934, 0.00011597199999999891, 0.00011597200000000238...</msg>
<status status="PASS" starttime="20201030 18:31:29.185" endtime="20201030 18:31:29.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.205" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.202" endtime="20201030 18:31:29.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.212" level="INFO">VALUE: [0.00011620899999999906, 0.00011595799999999934, 0.00011593099999999967, 0.00011597199999999891, 0.00011595799999999934, 0.00011595799999999934, 0.00011597199999999891, 0.00011597200000000238, 0.00011595799999999934, 0.00011597199999999891, 0.00011595799999999934, 0.00011597199999999891, 0.0001159300000000002, 0.00011602800000000066, 0.00011594500000000271, 0.00011600000000000152, 0.00011597200000000238, 0.00011598599999999848, 0.00011597300000000185, 0.00011597199999999891, 0.00011595799999999934, 0.00011597199999999891, 0.00011597200000000238, 0.00011597299999999838, 0.00011594399999999977, 0.00011595799999999934, 0.00011595899999999881, 0.00011598599999999848, 0.00011597199999999891, 0.00011598599999999848, 0.00011599999999999805, 0.00011597199999999891, 0.00011593099999999967, 0.00011590300000000053, 0.00011598600000000195, 0.00011594399999999977, 0.00011597300000000185, 0.00011597199999999891, 0.00011595799999999934, 0.00011598600000000195, 0.00011597199999999891, 0.00011597200000000238, 0.00011597199999999891, 0.00011597199999999891, 0.00011598600000000195, 0.00011594399999999977, 0.00011601400000000109, 0.00011590200000000106, 0.00011594499999999924, 0.00011595799999999934]</msg>
<status status="PASS" starttime="20201030 18:31:29.208" endtime="20201030 18:31:29.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.195" endtime="20201030 18:31:29.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.220" endtime="20201030 18:31:29.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.218" endtime="20201030 18:31:29.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.217" endtime="20201030 18:31:29.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.796" endtime="20201030 18:31:29.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.796" endtime="20201030 18:31:29.241"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.249" endtime="20201030 18:31:29.272"></status>
</kw>
<msg timestamp="20201030 18:31:29.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.248" endtime="20201030 18:31:29.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.273" endtime="20201030 18:31:29.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.276" endtime="20201030 18:31:29.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.245" endtime="20201030 18:31:29.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.243" endtime="20201030 18:31:29.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.286" endtime="20201030 18:31:29.571"></status>
</kw>
<msg timestamp="20201030 18:31:29.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.283" endtime="20201030 18:31:29.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.575" endtime="20201030 18:31:29.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.583" endtime="20201030 18:31:29.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.281" endtime="20201030 18:31:29.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.279" endtime="20201030 18:31:29.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.590" level="INFO">${RESULT} = [{'diff': 0.00011630600000000005}, {'diff': 0.00011597199999999891}, {'diff': 0.00011597200000000238}, {'diff': 0.00011597199999999891}, {'diff': 0.00011598600000000195}, {'diff': 0.000116040999999997...</msg>
<status status="PASS" starttime="20201030 18:31:29.587" endtime="20201030 18:31:29.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.594" level="INFO">${ACCURACY} = {'diff': [0.00011630600000000005, 0.00011597199999999891, 0.00011597200000000238, 0.00011597199999999891, 0.00011598600000000195, 0.00011604099999999729, 0.00011598600000000195, 0.00011595900000000228...</msg>
<status status="PASS" starttime="20201030 18:31:29.591" endtime="20201030 18:31:29.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.598" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.597" endtime="20201030 18:31:29.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.600" level="INFO">VALUE: [0.00011630600000000005, 0.00011597199999999891, 0.00011597200000000238, 0.00011597199999999891, 0.00011598600000000195, 0.00011604099999999729, 0.00011598600000000195, 0.00011595900000000228, 0.00011597199999999891, 0.00011594499999999924, 0.00011597200000000238, 0.00011590300000000053, 0.00011597200000000238, 0.00011600000000000152, 0.00011598600000000195, 0.00011597200000000238, 0.00011598700000000142, 0.00011598600000000195, 0.00011597200000000238, 0.00011595799999999934, 0.00011597199999999891, 0.00011590300000000053, 0.00011595899999999881, 0.00011595799999999934, 0.00011598600000000195, 0.00011598599999999848, 0.00011597199999999891, 0.00011597199999999891, 0.00011597200000000238, 0.00011597299999999838, 0.00011597299999999838, 0.00011590300000000053, 0.00011597199999999891, 0.00011595799999999934, 0.00011595799999999934, 0.00011595899999999881, 0.00011600000000000152, 0.00011595799999999934, 0.00011598600000000195, 0.00011595800000000281, 0.00011593099999999967, 0.00011594499999999924, 0.00011595799999999934, 0.00011590199999999412, 0.00011598600000000542, 0.00011597299999999838, 0.00011597300000000532, 0.00011598600000000542, 0.00011597199999999891, 0.00011598599999999848]</msg>
<status status="PASS" starttime="20201030 18:31:29.599" endtime="20201030 18:31:29.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.594" endtime="20201030 18:31:29.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.606" endtime="20201030 18:31:29.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.604" endtime="20201030 18:31:29.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.603" endtime="20201030 18:31:29.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.242" endtime="20201030 18:31:29.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.241" endtime="20201030 18:31:29.627"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.635" endtime="20201030 18:31:29.654"></status>
</kw>
<msg timestamp="20201030 18:31:29.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.634" endtime="20201030 18:31:29.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.656" endtime="20201030 18:31:29.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.658" endtime="20201030 18:31:29.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.631" endtime="20201030 18:31:29.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.629" endtime="20201030 18:31:29.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.667" endtime="20201030 18:31:29.952"></status>
</kw>
<msg timestamp="20201030 18:31:29.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.666" endtime="20201030 18:31:29.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.956" endtime="20201030 18:31:29.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.964" endtime="20201030 18:31:29.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.663" endtime="20201030 18:31:29.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.661" endtime="20201030 18:31:29.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.971" level="INFO">${RESULT} = [{'diff': 0.00011619499999999949}, {'diff': 0.00011595799999999934}, {'diff': 0.00011594399999999977}, {'diff': 0.00011595799999999934}, {'diff': 0.00011595799999999934}, {'diff': 0.000115943999999999...</msg>
<status status="PASS" starttime="20201030 18:31:29.968" endtime="20201030 18:31:29.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.975" level="INFO">${ACCURACY} = {'diff': [0.00011619499999999949, 0.00011595799999999934, 0.00011594399999999977, 0.00011595799999999934, 0.00011595799999999934, 0.00011594399999999977, 0.00011597299999999838, 0.00011598599999999848...</msg>
<status status="PASS" starttime="20201030 18:31:29.972" endtime="20201030 18:31:29.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.980" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.979" endtime="20201030 18:31:29.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.982" level="INFO">VALUE: [0.00011619499999999949, 0.00011595799999999934, 0.00011594399999999977, 0.00011595799999999934, 0.00011595799999999934, 0.00011594399999999977, 0.00011597299999999838, 0.00011598599999999848, 0.00011593099999999967, 0.00011597200000000238, 0.00011595799999999934, 0.00011602800000000066, 0.00011601400000000109, 0.00011595899999999881, 0.00011595799999999934, 0.00011595900000000228, 0.00011593099999999967, 0.00011591600000000063, 0.00011595900000000228, 0.00011595899999999881, 0.00011595800000000281, 0.0001158889999999975, 0.0001159300000000002, 0.00011594399999999977, 0.00011591600000000063, 0.00011595899999999881, 0.00011598600000000195, 0.00011593099999999967, 0.00011594399999999977, 0.00011597199999999891, 0.00011595799999999934, 0.0001159300000000002, 0.00011598600000000195, 0.00011595799999999934, 0.00011594500000000271, 0.00011595900000000228, 0.0001159170000000001, 0.00011594399999999977, 0.0001159170000000001, 0.00011601400000000109, 0.00011594399999999977, 0.0001159170000000001, 0.00011594399999999977, 0.00011595799999999934, 0.00011595900000000228, 0.00011595899999999881, 0.00011590199999999759, 0.00011594399999999977, 0.00011595799999999934, 0.00011594399999999977]</msg>
<status status="PASS" starttime="20201030 18:31:29.981" endtime="20201030 18:31:29.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.976" endtime="20201030 18:31:29.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.991" endtime="20201030 18:31:30.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.990" endtime="20201030 18:31:30.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.989" endtime="20201030 18:31:30.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.627" endtime="20201030 18:31:30.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.627" endtime="20201030 18:31:30.013"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.022" endtime="20201030 18:31:30.041"></status>
</kw>
<msg timestamp="20201030 18:31:30.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.020" endtime="20201030 18:31:30.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.043" endtime="20201030 18:31:30.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.045" endtime="20201030 18:31:30.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.018" endtime="20201030 18:31:30.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.016" endtime="20201030 18:31:30.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.054" endtime="20201030 18:31:30.341"></status>
</kw>
<msg timestamp="20201030 18:31:30.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.052" endtime="20201030 18:31:30.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.345" endtime="20201030 18:31:30.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.353" endtime="20201030 18:31:30.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.050" endtime="20201030 18:31:30.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.048" endtime="20201030 18:31:30.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.359" level="INFO">${RESULT} = [{'diff': 0.00011622200000000263}, {'diff': 0.00011595799999999934}, {'diff': 0.00011597200000000238}, {'diff': 0.00011601400000000109}, {'diff': 0.00011595900000000228}, {'diff': 0.000115945000000002...</msg>
<status status="PASS" starttime="20201030 18:31:30.356" endtime="20201030 18:31:30.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.363" level="INFO">${ACCURACY} = {'diff': [0.00011622200000000263, 0.00011595799999999934, 0.00011597200000000238, 0.00011601400000000109, 0.00011595900000000228, 0.00011594500000000271, 0.00011599999999999805, 0.00011597299999999838...</msg>
<status status="PASS" starttime="20201030 18:31:30.360" endtime="20201030 18:31:30.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.367" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.366" endtime="20201030 18:31:30.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.370" level="INFO">VALUE: [0.00011622200000000263, 0.00011595799999999934, 0.00011597200000000238, 0.00011601400000000109, 0.00011595900000000228, 0.00011594500000000271, 0.00011599999999999805, 0.00011597299999999838, 0.00011595799999999934, 0.00011595799999999934, 0.00011594399999999977, 0.00011595899999999881, 0.00011598700000000142, 0.00011597200000000238, 0.00011597199999999891, 0.00011600000000000152, 0.00011597199999999891, 0.00011598599999999848, 0.00011598600000000195, 0.00011598600000000195, 0.00011597199999999891, 0.00011595800000000281, 0.00011597299999999838, 0.00011595899999999881, 0.00011598700000000142, 0.00011595900000000228, 0.00011598600000000195, 0.00011597200000000238, 0.00011600000000000152, 0.00011595799999999934, 0.00011597199999999891, 0.00011595900000000228, 0.00011597199999999891, 0.00011598600000000195, 0.00011595800000000281, 0.00011595899999999881, 0.00011597300000000185, 0.00011597199999999891, 0.00011595800000000281, 0.00011595799999999934, 0.00011595800000000281, 0.00011594399999999977, 0.00011595799999999934, 0.00011597299999999838, 0.00011597199999999891, 0.00011597199999999891, 0.00011597300000000185, 0.00011600000000000152, 0.00011598600000000195, 0.00011597200000000238]</msg>
<status status="PASS" starttime="20201030 18:31:30.368" endtime="20201030 18:31:30.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.364" endtime="20201030 18:31:30.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.374" endtime="20201030 18:31:30.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.373" endtime="20201030 18:31:30.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.372" endtime="20201030 18:31:30.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.014" endtime="20201030 18:31:30.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.014" endtime="20201030 18:31:30.395"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.404" endtime="20201030 18:31:30.424"></status>
</kw>
<msg timestamp="20201030 18:31:30.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.402" endtime="20201030 18:31:30.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.425" endtime="20201030 18:31:30.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.428" endtime="20201030 18:31:30.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.400" endtime="20201030 18:31:30.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.398" endtime="20201030 18:31:30.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.437" endtime="20201030 18:31:30.740"></status>
</kw>
<msg timestamp="20201030 18:31:30.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.435" endtime="20201030 18:31:30.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.744" endtime="20201030 18:31:30.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.752" endtime="20201030 18:31:30.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.432" endtime="20201030 18:31:30.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.431" endtime="20201030 18:31:30.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.758" level="INFO">${RESULT} = [{'diff': 0.00011619400000000002}, {'diff': 0.00011598700000000142}, {'diff': 0.00011595900000000228}, {'diff': 0.00011597200000000238}, {'diff': 0.00011593099999999967}, {'diff': 0.000115957999999999...</msg>
<status status="PASS" starttime="20201030 18:31:30.755" endtime="20201030 18:31:30.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.762" level="INFO">${ACCURACY} = {'diff': [0.00011619400000000002, 0.00011598700000000142, 0.00011595900000000228, 0.00011597200000000238, 0.00011593099999999967, 0.00011595799999999934, 0.00011598600000000195, 0.00011594399999999977...</msg>
<status status="PASS" starttime="20201030 18:31:30.759" endtime="20201030 18:31:30.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.766" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.765" endtime="20201030 18:31:30.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.769" level="INFO">VALUE: [0.00011619400000000002, 0.00011598700000000142, 0.00011595900000000228, 0.00011597200000000238, 0.00011593099999999967, 0.00011595799999999934, 0.00011598600000000195, 0.00011594399999999977, 0.00011594399999999977, 0.00011600000000000152, 0.00011590300000000053, 0.00011595799999999934, 0.00011593100000000314, 0.00011594500000000271, 0.00011595799999999934, 0.00011601399999999762, 0.00011595799999999934, 0.00011595899999999881, 0.00011593100000000314, 0.0001159170000000001, 0.00011591600000000063, 0.00011590300000000053, 0.00011597199999999891, 0.00011597199999999891, 0.00011595799999999934, 0.00011598599999999848, 0.00011595899999999881, 0.00011594499999999924, 0.00011594400000000324, 0.00011590300000000053, 0.00011588900000000096, 0.00011597200000000238, 0.0001159170000000001, 0.00011595899999999881, 0.00011595900000000228, 0.00011600000000000152, 0.00011595900000000228, 0.00011594399999999977, 0.00011595799999999934, 0.00011595799999999934, 0.00011597299999999838, 0.00011597199999999891, 0.00011593099999999967, 0.00011594499999999924, 0.00011593099999999967, 0.00011593099999999967, 0.00011595899999999881, 0.00011594499999999924, 0.00011601399999999762, 0.00011594500000000271]</msg>
<status status="PASS" starttime="20201030 18:31:30.767" endtime="20201030 18:31:30.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.763" endtime="20201030 18:31:30.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.775" endtime="20201030 18:31:30.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.773" endtime="20201030 18:31:30.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.772" endtime="20201030 18:31:30.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.396" endtime="20201030 18:31:30.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.396" endtime="20201030 18:31:30.796"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.804" endtime="20201030 18:31:30.823"></status>
</kw>
<msg timestamp="20201030 18:31:30.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.803" endtime="20201030 18:31:30.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.825" endtime="20201030 18:31:30.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.827" endtime="20201030 18:31:30.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.800" endtime="20201030 18:31:30.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.798" endtime="20201030 18:31:30.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.836" endtime="20201030 18:31:31.122"></status>
</kw>
<msg timestamp="20201030 18:31:31.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.835" endtime="20201030 18:31:31.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.126" endtime="20201030 18:31:31.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.134" endtime="20201030 18:31:31.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.832" endtime="20201030 18:31:31.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.830" endtime="20201030 18:31:31.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.141" level="INFO">${RESULT} = [{'diff': 0.00011622199999999916}, {'diff': 0.00011597200000000238}, {'diff': 0.00011598600000000195}, {'diff': 0.00011597200000000238}, {'diff': 0.00011595800000000281}, {'diff': 0.000115943999999999...</msg>
<status status="PASS" starttime="20201030 18:31:31.138" endtime="20201030 18:31:31.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.146" level="INFO">${ACCURACY} = {'diff': [0.00011622199999999916, 0.00011597200000000238, 0.00011598600000000195, 0.00011597200000000238, 0.00011595800000000281, 0.00011594399999999977, 0.00011595799999999934, 0.00011605499999999686...</msg>
<status status="PASS" starttime="20201030 18:31:31.142" endtime="20201030 18:31:31.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.150" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.149" endtime="20201030 18:31:31.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.153" level="INFO">VALUE: [0.00011622199999999916, 0.00011597200000000238, 0.00011598600000000195, 0.00011597200000000238, 0.00011595800000000281, 0.00011594399999999977, 0.00011595799999999934, 0.00011605499999999686, 0.00011597300000000185, 0.00011598599999999848, 0.00011595800000000281, 0.00011597199999999891, 0.00011597299999999838, 0.00011590199999999759, 0.00011595799999999934, 0.00011597199999999891, 0.00011602800000000066, 0.0001160559999999998, 0.00011597199999999891, 0.00011595899999999881, 0.00011595800000000281, 0.00011595799999999934, 0.00011595899999999881, 0.00011597300000000185, 0.00011597200000000238, 0.00011597300000000185, 0.00011597299999999838, 0.00011600000000000152, 0.00011597299999999838, 0.00011597299999999838, 0.00011597199999999891, 0.00011597199999999891, 0.00011597199999999891, 0.00011601399999999762, 0.00011597300000000185, 0.00011597199999999891, 0.00011597199999999891, 0.00011598600000000195, 0.00011597299999999838, 0.00011599999999999805, 0.00011598599999999848, 0.00011594499999999924, 0.00011599999999999805, 0.00011599999999999805, 0.00011597199999999891, 0.00011598599999999848, 0.00011598599999999848, 0.00011598600000000195, 0.00011597199999999891, 0.00011598599999999848]</msg>
<status status="PASS" starttime="20201030 18:31:31.152" endtime="20201030 18:31:31.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.146" endtime="20201030 18:31:31.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.159" endtime="20201030 18:31:31.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.157" endtime="20201030 18:31:31.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.156" endtime="20201030 18:31:31.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.797" endtime="20201030 18:31:31.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.796" endtime="20201030 18:31:31.179"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.188" endtime="20201030 18:31:31.207"></status>
</kw>
<msg timestamp="20201030 18:31:31.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.186" endtime="20201030 18:31:31.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.209" endtime="20201030 18:31:31.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.211" endtime="20201030 18:31:31.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.184" endtime="20201030 18:31:31.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.182" endtime="20201030 18:31:31.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.221" endtime="20201030 18:31:31.508"></status>
</kw>
<msg timestamp="20201030 18:31:31.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.219" endtime="20201030 18:31:31.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.512" endtime="20201030 18:31:31.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.520" endtime="20201030 18:31:31.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.217" endtime="20201030 18:31:31.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.215" endtime="20201030 18:31:31.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.527" level="INFO">${RESULT} = [{'diff': 0.00011623599999999873}, {'diff': 0.00011597299999999838}, {'diff': 0.00011600000000000152}, {'diff': 0.00011597200000000238}, {'diff': 0.00011601400000000109}, {'diff': 0.000115971999999998...</msg>
<status status="PASS" starttime="20201030 18:31:31.524" endtime="20201030 18:31:31.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.531" level="INFO">${ACCURACY} = {'diff': [0.00011623599999999873, 0.00011597299999999838, 0.00011600000000000152, 0.00011597200000000238, 0.00011601400000000109, 0.00011597199999999891, 0.00011598599999999848, 0.00011595799999999934...</msg>
<status status="PASS" starttime="20201030 18:31:31.528" endtime="20201030 18:31:31.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.535" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.534" endtime="20201030 18:31:31.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.537" level="INFO">VALUE: [0.00011623599999999873, 0.00011597299999999838, 0.00011600000000000152, 0.00011597200000000238, 0.00011601400000000109, 0.00011597199999999891, 0.00011598599999999848, 0.00011595799999999934, 0.00011598599999999848, 0.0001160559999999998, 0.00011595899999999881, 0.0001159170000000001, 0.0001160559999999998, 0.00011595899999999881, 0.00011597199999999891, 0.00011597200000000238, 0.00011598599999999848, 0.00011599999999999805, 0.00011595799999999934, 0.00011599999999999805, 0.00011595799999999934, 0.00011597300000000185, 0.00011598600000000195, 0.00011597199999999891, 0.00011597199999999891, 0.00011595799999999934, 0.00011600000000000152, 0.0001159300000000002, 0.00011598600000000195, 0.00011598600000000195, 0.0001159170000000001, 0.00011597199999999891, 0.00011594399999999977, 0.00011598599999999848, 0.00011598600000000195, 0.00011602800000000066, 0.00011597199999999891, 0.00011598599999999848, 0.00011597199999999891, 0.00011597199999999891, 0.00011595799999999934, 0.00011598599999999848, 0.00011597299999999838, 0.00011599999999999805, 0.00011597200000000238, 0.00011597199999999891, 0.00011601299999999815, 0.00011601399999999762, 0.00011598600000000195, 0.00011597300000000185]</msg>
<status status="PASS" starttime="20201030 18:31:31.536" endtime="20201030 18:31:31.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.532" endtime="20201030 18:31:31.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.542" endtime="20201030 18:31:31.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.541" endtime="20201030 18:31:31.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.540" endtime="20201030 18:31:31.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.180" endtime="20201030 18:31:31.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.180" endtime="20201030 18:31:31.563"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.572" endtime="20201030 18:31:31.592"></status>
</kw>
<msg timestamp="20201030 18:31:31.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.570" endtime="20201030 18:31:31.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.593" endtime="20201030 18:31:31.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.596" endtime="20201030 18:31:31.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.567" endtime="20201030 18:31:31.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.565" endtime="20201030 18:31:31.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.605" endtime="20201030 18:31:31.892"></status>
</kw>
<msg timestamp="20201030 18:31:31.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.603" endtime="20201030 18:31:31.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.896" endtime="20201030 18:31:31.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.904" endtime="20201030 18:31:31.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.601" endtime="20201030 18:31:31.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.599" endtime="20201030 18:31:31.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.910" level="INFO">${RESULT} = [{'diff': 0.00011622299999999863}, {'diff': 0.00011597200000000238}, {'diff': 0.00011597199999999891}, {'diff': 0.00011605600000000327}, {'diff': 0.00011600000000000152}, {'diff': 0.000115972000000002...</msg>
<status status="PASS" starttime="20201030 18:31:31.907" endtime="20201030 18:31:31.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.914" level="INFO">${ACCURACY} = {'diff': [0.00011622299999999863, 0.00011597200000000238, 0.00011597199999999891, 0.00011605600000000327, 0.00011600000000000152, 0.00011597200000000238, 0.00011599999999999805, 0.00011599999999999805...</msg>
<status status="PASS" starttime="20201030 18:31:31.911" endtime="20201030 18:31:31.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.919" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.918" endtime="20201030 18:31:31.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.921" level="INFO">VALUE: [0.00011622299999999863, 0.00011597200000000238, 0.00011597199999999891, 0.00011605600000000327, 0.00011600000000000152, 0.00011597200000000238, 0.00011599999999999805, 0.00011599999999999805, 0.00011598600000000195, 0.00011598599999999848, 0.00011599999999999805, 0.00011606999999999937, 0.00011595900000000228, 0.00011604099999999729, 0.00011597199999999891, 0.00011598599999999848, 0.00011598599999999848, 0.00011598600000000195, 0.00011598600000000195, 0.00011597200000000238, 0.00011598599999999848, 0.00011600000000000152, 0.00011597199999999891, 0.00011601399999999762, 0.00011598599999999848, 0.00011601400000000109, 0.00011597299999999838, 0.00011595799999999934, 0.00011598599999999848, 0.00011598699999999795, 0.00011598600000000195, 0.00011595899999999881, 0.00011597200000000238, 0.00011598599999999848, 0.00011601400000000109, 0.00011598700000000142, 0.00011598600000000195, 0.00011598599999999848, 0.00011595800000000281, 0.00011594399999999977, 0.00011595799999999934, 0.00011600000000000152, 0.00011598599999999848, 0.00011598700000000142, 0.00011598699999999795, 0.00011593099999999967, 0.00011599999999999805, 0.00011597200000000238, 0.00011598600000000195, 0.00011599999999999805]</msg>
<status status="PASS" starttime="20201030 18:31:31.920" endtime="20201030 18:31:31.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.915" endtime="20201030 18:31:31.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.927" endtime="20201030 18:31:31.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.925" endtime="20201030 18:31:31.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.924" endtime="20201030 18:31:31.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.564" endtime="20201030 18:31:31.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.563" endtime="20201030 18:31:31.948"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.956" endtime="20201030 18:31:31.975"></status>
</kw>
<msg timestamp="20201030 18:31:31.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.955" endtime="20201030 18:31:31.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.977" endtime="20201030 18:31:31.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.979" endtime="20201030 18:31:31.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.952" endtime="20201030 18:31:31.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.950" endtime="20201030 18:31:31.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.988" endtime="20201030 18:31:32.274"></status>
</kw>
<msg timestamp="20201030 18:31:32.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.987" endtime="20201030 18:31:32.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.278" endtime="20201030 18:31:32.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.286" endtime="20201030 18:31:32.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.984" endtime="20201030 18:31:32.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.982" endtime="20201030 18:31:32.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.295" level="INFO">${RESULT} = [{'diff': 0.00011622200000000263}, {'diff': 0.00011598600000000195}, {'diff': 0.00011598600000000195}, {'diff': 0.00011600000000000152}, {'diff': 0.00011601400000000109}, {'diff': 0.000115943999999999...</msg>
<status status="PASS" starttime="20201030 18:31:32.291" endtime="20201030 18:31:32.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.300" level="INFO">${ACCURACY} = {'diff': [0.00011622200000000263, 0.00011598600000000195, 0.00011598600000000195, 0.00011600000000000152, 0.00011601400000000109, 0.00011594399999999977, 0.00011597199999999891, 0.00011604200000000023...</msg>
<status status="PASS" starttime="20201030 18:31:32.296" endtime="20201030 18:31:32.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.305" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.304" endtime="20201030 18:31:32.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.307" level="INFO">VALUE: [0.00011622200000000263, 0.00011598600000000195, 0.00011598600000000195, 0.00011600000000000152, 0.00011601400000000109, 0.00011594399999999977, 0.00011597199999999891, 0.00011604200000000023, 0.00011598599999999848, 0.00011597199999999891, 0.00011598600000000195, 0.00011597200000000238, 0.00011598700000000142, 0.00011597199999999891, 0.0001159300000000002, 0.00011600000000000152, 0.00011600000000000152, 0.00011600000000000152, 0.00011598600000000195, 0.00011598599999999848, 0.00011598699999999795, 0.00011599999999999805, 0.00011597199999999891, 0.00011601399999999762, 0.00011601300000000161, 0.00011597199999999891, 0.00011597200000000238, 0.00011599999999999805, 0.00011598599999999848, 0.00011598600000000195, 0.00011599999999999805, 0.00011597200000000238, 0.00011590300000000053, 0.00011598600000000195, 0.00011600000000000152, 0.00011602700000000118, 0.00011598600000000195, 0.00011599999999999805, 0.0001160559999999998, 0.00011597199999999891, 0.00011598600000000195, 0.00011597300000000185, 0.00011595799999999934, 0.00011602799999999719, 0.00011598599999999848, 0.00011598599999999848, 0.00011599999999999805, 0.00011602800000000066, 0.00011598600000000195, 0.00011604100000000075]</msg>
<status status="PASS" starttime="20201030 18:31:32.306" endtime="20201030 18:31:32.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.301" endtime="20201030 18:31:32.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.312" endtime="20201030 18:31:32.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.310" endtime="20201030 18:31:32.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.309" endtime="20201030 18:31:32.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.948" endtime="20201030 18:31:32.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.948" endtime="20201030 18:31:32.333"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.342" endtime="20201030 18:31:32.361"></status>
</kw>
<msg timestamp="20201030 18:31:32.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.340" endtime="20201030 18:31:32.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.362" endtime="20201030 18:31:32.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.365" endtime="20201030 18:31:32.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.337" endtime="20201030 18:31:32.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.335" endtime="20201030 18:31:32.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.374" endtime="20201030 18:31:32.661"></status>
</kw>
<msg timestamp="20201030 18:31:32.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.372" endtime="20201030 18:31:32.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.665" endtime="20201030 18:31:32.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.673" endtime="20201030 18:31:32.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.370" endtime="20201030 18:31:32.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.368" endtime="20201030 18:31:32.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.679" level="INFO">${RESULT} = [{'diff': 0.00011626400000000134}, {'diff': 0.00011600000000000152}, {'diff': 0.00011598599999999848}, {'diff': 0.00011599999999999805}, {'diff': 0.00011600000000000152}, {'diff': 0.000115943999999999...</msg>
<status status="PASS" starttime="20201030 18:31:32.676" endtime="20201030 18:31:32.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.683" level="INFO">${ACCURACY} = {'diff': [0.00011626400000000134, 0.00011600000000000152, 0.00011598599999999848, 0.00011599999999999805, 0.00011600000000000152, 0.00011594399999999977, 0.00011599999999999805, 0.00011599999999999805...</msg>
<status status="PASS" starttime="20201030 18:31:32.680" endtime="20201030 18:31:32.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.688" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.687" endtime="20201030 18:31:32.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.690" level="INFO">VALUE: [0.00011626400000000134, 0.00011600000000000152, 0.00011598599999999848, 0.00011599999999999805, 0.00011600000000000152, 0.00011594399999999977, 0.00011599999999999805, 0.00011599999999999805, 0.00011597199999999891, 0.00011599999999999805, 0.00011598699999999795, 0.00011601400000000109, 0.00011597199999999891, 0.00011597199999999891, 0.00011597299999999838, 0.00011598600000000195, 0.00011598600000000195, 0.00011600000000000152, 0.00011600000000000152, 0.00011598600000000195, 0.00011599999999999805, 0.00011598699999999795, 0.00011599999999999805, 0.00011599999999999805, 0.00011600000000000152, 0.00011598599999999848, 0.00011597200000000238, 0.00011598600000000195, 0.00011598600000000195, 0.00011595899999999881, 0.00011597300000000185, 0.00011598699999999795, 0.00011598599999999848, 0.00011598599999999848, 0.00011600000000000152, 0.00011599999999999805, 0.00011598599999999848, 0.00011597299999999838, 0.00011590200000000106, 0.00011595799999999934, 0.00011595799999999934, 0.00011606999999999937, 0.00011598599999999848, 0.00011597299999999838, 0.00011602800000000066, 0.00011595900000000228, 0.00011593099999999967, 0.00011597299999999838, 0.00011598599999999848, 0.00011595799999999934]</msg>
<status status="PASS" starttime="20201030 18:31:32.689" endtime="20201030 18:31:32.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.684" endtime="20201030 18:31:32.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.695" endtime="20201030 18:31:32.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.694" endtime="20201030 18:31:32.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.692" endtime="20201030 18:31:32.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.334" endtime="20201030 18:31:32.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.333" endtime="20201030 18:31:32.716"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.725" endtime="20201030 18:31:32.747"></status>
</kw>
<msg timestamp="20201030 18:31:32.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.723" endtime="20201030 18:31:32.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.749" endtime="20201030 18:31:32.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.751" endtime="20201030 18:31:32.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.721" endtime="20201030 18:31:32.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.718" endtime="20201030 18:31:32.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.760" endtime="20201030 18:31:33.046"></status>
</kw>
<msg timestamp="20201030 18:31:33.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025238944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025355167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.759" endtime="20201030 18:31:33.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025238944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025355167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.051" endtime="20201030 18:31:33.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.059" endtime="20201030 18:31:33.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.756" endtime="20201030 18:31:33.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.755" endtime="20201030 18:31:33.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.065" level="INFO">${RESULT} = [{'diff': 0.0001162230000000021}, {'diff': 0.00011595899999999881}, {'diff': 0.00011597199999999891}, {'diff': 0.00011595900000000228}, {'diff': 0.00011599999999999805}, {'diff': 0.0001160140000000010...</msg>
<status status="PASS" starttime="20201030 18:31:33.062" endtime="20201030 18:31:33.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.069" level="INFO">${ACCURACY} = {'diff': [0.0001162230000000021, 0.00011595899999999881, 0.00011597199999999891, 0.00011595900000000228, 0.00011599999999999805, 0.00011601400000000109, 0.00011594499999999924, 0.00011598600000000195,...</msg>
<status status="PASS" starttime="20201030 18:31:33.066" endtime="20201030 18:31:33.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.074" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.073" endtime="20201030 18:31:33.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.076" level="INFO">VALUE: [0.0001162230000000021, 0.00011595899999999881, 0.00011597199999999891, 0.00011595900000000228, 0.00011599999999999805, 0.00011601400000000109, 0.00011594499999999924, 0.00011598600000000195, 0.00011597300000000185, 0.00011597199999999891, 0.00011595799999999934, 0.00011598599999999848, 0.00011597199999999891, 0.00011597300000000185, 0.00011598599999999848, 0.00011597200000000238, 0.0001160689999999999, 0.00011599999999999805, 0.00011597199999999891, 0.00011601400000000109, 0.00011595799999999934, 0.00011601299999999815, 0.00011602800000000066, 0.00011598600000000195, 0.00011597199999999891, 0.00011600000000000152, 0.00011593099999999967, 0.00011597199999999891, 0.00011600000000000152, 0.00011597199999999891, 0.00011598600000000195, 0.00011598600000000195, 0.00011598599999999848, 0.00011594399999999977, 0.00011597199999999891, 0.00011595799999999934, 0.00011594399999999977, 0.00011597199999999891, 0.00011597199999999891, 0.00011598599999999848, 0.00011595900000000228, 0.00011594499999999924, 0.00011595899999999881, 0.00011597299999999838, 0.00011597199999999891, 0.00011598700000000489, 0.00011597200000000585, 0.00011595799999999934, 0.00011602799999999719, 0.00011599999999999805]</msg>
<status status="PASS" starttime="20201030 18:31:33.075" endtime="20201030 18:31:33.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.070" endtime="20201030 18:31:33.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.082" endtime="20201030 18:31:33.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.081" endtime="20201030 18:31:33.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.079" endtime="20201030 18:31:33.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.717" endtime="20201030 18:31:33.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.716" endtime="20201030 18:31:33.103"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.112" endtime="20201030 18:31:33.131"></status>
</kw>
<msg timestamp="20201030 18:31:33.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.110" endtime="20201030 18:31:33.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.132" endtime="20201030 18:31:33.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.135" endtime="20201030 18:31:33.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.107" endtime="20201030 18:31:33.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.105" endtime="20201030 18:31:33.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.144" endtime="20201030 18:31:33.429"></status>
</kw>
<msg timestamp="20201030 18:31:33.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.142" endtime="20201030 18:31:33.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.433" endtime="20201030 18:31:33.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.442" endtime="20201030 18:31:33.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.140" endtime="20201030 18:31:33.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.138" endtime="20201030 18:31:33.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.448" level="INFO">${RESULT} = [{'diff': 0.00011616700000000035}, {'diff': 0.00011597199999999891}, {'diff': 0.00011597199999999891}, {'diff': 0.00011599999999999805}, {'diff': 0.00011599999999999805}, {'diff': 0.000115986000000001...</msg>
<status status="PASS" starttime="20201030 18:31:33.445" endtime="20201030 18:31:33.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.453" level="INFO">${ACCURACY} = {'diff': [0.00011616700000000035, 0.00011597199999999891, 0.00011597199999999891, 0.00011599999999999805, 0.00011599999999999805, 0.00011598600000000195, 0.00011600000000000152, 0.00011601400000000109...</msg>
<status status="PASS" starttime="20201030 18:31:33.449" endtime="20201030 18:31:33.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.457" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.456" endtime="20201030 18:31:33.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.460" level="INFO">VALUE: [0.00011616700000000035, 0.00011597199999999891, 0.00011597199999999891, 0.00011599999999999805, 0.00011599999999999805, 0.00011598600000000195, 0.00011600000000000152, 0.00011601400000000109, 0.00011598600000000195, 0.00011598599999999848, 0.00011599999999999805, 0.00011598600000000195, 0.00011601299999999815, 0.00011609699999999903, 0.00011598600000000195, 0.00011598599999999848, 0.00011597299999999838, 0.00011598700000000142, 0.00011600000000000152, 0.00011598599999999848, 0.00011598600000000195, 0.00011599999999999805, 0.00011600000000000152, 0.00011598599999999848, 0.00011613900000000121, 0.00011598599999999848, 0.0001159170000000001, 0.00011601400000000109, 0.00011594399999999977, 0.00011597200000000238, 0.00011594400000000324, 0.00011598599999999848, 0.00011598599999999848, 0.00011597299999999838, 0.00011598700000000142, 0.00011597200000000238, 0.00011599999999999805, 0.00011599999999999805, 0.00011598700000000142, 0.00011598600000000195, 0.00011597299999999838, 0.0001161109999999986, 0.00011594399999999977, 0.00011601400000000109, 0.00011600000000000152, 0.00011597200000000238, 0.00011597200000000238, 0.00011595799999999934, 0.00011598700000000142, 0.00011597300000000185]</msg>
<status status="PASS" starttime="20201030 18:31:33.458" endtime="20201030 18:31:33.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.454" endtime="20201030 18:31:33.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.465" endtime="20201030 18:31:33.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.463" endtime="20201030 18:31:33.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.462" endtime="20201030 18:31:33.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.104" endtime="20201030 18:31:33.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.103" endtime="20201030 18:31:33.486"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.494" endtime="20201030 18:31:33.514"></status>
</kw>
<msg timestamp="20201030 18:31:33.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.493" endtime="20201030 18:31:33.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.515" endtime="20201030 18:31:33.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.517" endtime="20201030 18:31:33.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.490" endtime="20201030 18:31:33.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.488" endtime="20201030 18:31:33.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.527" endtime="20201030 18:31:33.814"></status>
</kw>
<msg timestamp="20201030 18:31:33.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.525" endtime="20201030 18:31:33.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.818" endtime="20201030 18:31:33.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.827" endtime="20201030 18:31:33.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.522" endtime="20201030 18:31:33.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.521" endtime="20201030 18:31:33.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.834" level="INFO">${RESULT} = [{'diff': 0.00011768100000000142}, {'diff': 0.00011768099999999795}, {'diff': 0.00011769400000000152}, {'diff': 0.00011702799999999819}, {'diff': 0.0001170560000000008}, {'diff': 0.0001179720000000009...</msg>
<status status="PASS" starttime="20201030 18:31:33.831" endtime="20201030 18:31:33.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.838" level="INFO">${ACCURACY} = {'diff': [0.00011768100000000142, 0.00011768099999999795, 0.00011769400000000152, 0.00011702799999999819, 0.0001170560000000008, 0.00011797200000000091, 0.00011790300000000253, 0.00011791600000000263,...</msg>
<status status="PASS" starttime="20201030 18:31:33.835" endtime="20201030 18:31:33.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.843" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.842" endtime="20201030 18:31:33.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.845" level="INFO">VALUE: [0.00011768100000000142, 0.00011768099999999795, 0.00011769400000000152, 0.00011702799999999819, 0.0001170560000000008, 0.00011797200000000091, 0.00011790300000000253, 0.00011791600000000263, 0.00011747200000000041, 0.00011722200000000016, 0.00011727700000000243, 0.00011766599999999891, 0.00011748599999999998, 0.00011740200000000256, 0.00011770900000000056, 0.00011733300000000071, 0.00011697199999999991, 0.00011729200000000148, 0.00011727699999999897, 0.0001176110000000001, 0.00011784700000000078, 0.00011783300000000121, 0.00011759800000000001, 0.00011747200000000041, 0.0001174170000000016, 0.00011742999999999823, 0.00011698599999999948, 0.0001175829999999975, 0.00011759700000000053, 0.0001172499999999993, 0.00011697199999999991, 0.00011791699999999863, 0.00011718100000000092, 0.00011716699999999788, 0.00011727799999999844, 0.00011713900000000221, 0.00011716700000000135, 0.00011779200000000198, 0.0001174439999999978, 0.00011716600000000188, 0.00011745799999999737, 0.00011747200000000041, 0.00011784699999999732, 0.00011712500000000264, 0.00011740200000000256, 0.00011727799999999844, 0.00011763899999999924, 0.00011738799999999952, 0.00011756899999999793, 0.00011705599999999733]</msg>
<status status="PASS" starttime="20201030 18:31:33.844" endtime="20201030 18:31:33.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.839" endtime="20201030 18:31:33.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.850" endtime="20201030 18:31:33.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.849" endtime="20201030 18:31:33.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.847" endtime="20201030 18:31:33.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.487" endtime="20201030 18:31:33.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.486" endtime="20201030 18:31:33.871"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.880" endtime="20201030 18:31:33.900"></status>
</kw>
<msg timestamp="20201030 18:31:33.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.878" endtime="20201030 18:31:33.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.902" endtime="20201030 18:31:33.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.904" endtime="20201030 18:31:33.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.876" endtime="20201030 18:31:33.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.874" endtime="20201030 18:31:33.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.913" endtime="20201030 18:31:34.199"></status>
</kw>
<msg timestamp="20201030 18:31:34.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023007889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.912" endtime="20201030 18:31:34.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023007889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.203" endtime="20201030 18:31:34.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.211" endtime="20201030 18:31:34.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.909" endtime="20201030 18:31:34.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.907" endtime="20201030 18:31:34.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.218" level="INFO">${RESULT} = [{'diff': 0.00011820800000000159}, {'diff': 0.00011804199999999876}, {'diff': 0.00011852799999999969}, {'diff': 0.00011888800000000102}, {'diff': 0.00011866699999999938}, {'diff': 0.000118639000000000...</msg>
<status status="PASS" starttime="20201030 18:31:34.214" endtime="20201030 18:31:34.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.222" level="INFO">${ACCURACY} = {'diff': [0.00011820800000000159, 0.00011804199999999876, 0.00011852799999999969, 0.00011888800000000102, 0.00011866699999999938, 0.00011863900000000024, 0.00011838800000000052, 0.00011887500000000092...</msg>
<status status="PASS" starttime="20201030 18:31:34.219" endtime="20201030 18:31:34.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.226" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.225" endtime="20201030 18:31:34.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.228" level="INFO">VALUE: [0.00011820800000000159, 0.00011804199999999876, 0.00011852799999999969, 0.00011888800000000102, 0.00011866699999999938, 0.00011863900000000024, 0.00011838800000000052, 0.00011887500000000092, 0.00011851400000000012, 0.00011827699999999997, 0.00011861099999999763, 0.00011815199999999984, 0.00011902799999999672, 0.00011800000000000005, 0.00011858399999999797, 0.00011819399999999855, 0.00011887500000000092, 0.00011877700000000047, 0.00011813800000000027, 0.00011866599999999991, 0.00011837500000000042, 0.00011855599999999883, 0.00011852799999999969, 0.00011836100000000085, 0.00011822199999999769, 0.00011831999999999815, 0.00011866699999999938, 0.00011823600000000073, 0.00011851400000000012, 0.0001181110000000006, 0.00011869400000000252, 0.00011870800000000209, 0.000118389, 0.0001188049999999996, 0.00011852799999999969, 0.00011815300000000278, 0.00011833299999999825, 0.00011829199999999901, 0.00011876400000000037, 0.0001187500000000008, 0.00011858400000000144, 0.00011800000000000005, 0.00011815299999999931, 0.00011844499999999827, 0.00011873600000000123, 0.00011862500000000067, 0.00011801399999999962, 0.00011873600000000123, 0.0001182089999999976, 0.00011826399999999987]</msg>
<status status="PASS" starttime="20201030 18:31:34.227" endtime="20201030 18:31:34.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.222" endtime="20201030 18:31:34.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.234" endtime="20201030 18:31:34.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.233" endtime="20201030 18:31:34.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.232" endtime="20201030 18:31:34.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.872" endtime="20201030 18:31:34.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.872" endtime="20201030 18:31:34.257"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.275" endtime="20201030 18:31:34.297"></status>
</kw>
<msg timestamp="20201030 18:31:34.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.272" endtime="20201030 18:31:34.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.300" endtime="20201030 18:31:34.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.305" endtime="20201030 18:31:34.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.266" endtime="20201030 18:31:34.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.262" endtime="20201030 18:31:34.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.324" endtime="20201030 18:31:34.614"></status>
</kw>
<msg timestamp="20201030 18:31:34.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034215486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034334833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.321" endtime="20201030 18:31:34.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034215486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034334833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.618" endtime="20201030 18:31:34.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.626" endtime="20201030 18:31:34.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.316" endtime="20201030 18:31:34.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.312" endtime="20201030 18:31:34.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.632" level="INFO">${RESULT} = [{'diff': 0.00011934699999999882}, {'diff': 0.00011920800000000259}, {'diff': 0.00011970800000000309}, {'diff': 0.00011909699999999857}, {'diff': 0.00011945899999999537}, {'diff': 0.000119055999999999...</msg>
<status status="PASS" starttime="20201030 18:31:34.629" endtime="20201030 18:31:34.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.637" level="INFO">${ACCURACY} = {'diff': [0.00011934699999999882, 0.00011920800000000259, 0.00011970800000000309, 0.00011909699999999857, 0.00011945899999999537, 0.00011905599999999933, 0.00011901400000000062, 0.00011933300000000618...</msg>
<status status="PASS" starttime="20201030 18:31:34.633" endtime="20201030 18:31:34.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.641" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.640" endtime="20201030 18:31:34.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.644" level="INFO">VALUE: [0.00011934699999999882, 0.00011920800000000259, 0.00011970800000000309, 0.00011909699999999857, 0.00011945899999999537, 0.00011905599999999933, 0.00011901400000000062, 0.00011933300000000618, 0.00011950000000000155, 0.00011922200000000216, 0.0001189300000000032, 0.00011991599999999769, 0.0001199029999999976, 0.00011949999999999461, 0.00011901400000000062, 0.0001197370000000017, 0.00011988899999999802, 0.00011898600000000148, 0.00011974999999999486, 0.00011920800000000259, 0.00011976399999999443, 0.0001194579999999959, 0.00011976400000000137, 0.00011897200000000191, 0.00011933299999999925, 0.00011979200000000051, 0.00011926400000000087, 0.00011970800000000309, 0.00011915300000000378, 0.00011900000000000105, 0.00011945899999999537, 0.00011947199999999547, 0.00011926400000000087, 0.0001191249999999977, 0.00011927800000000044, 0.00011987499999999846, 0.00011948599999999504, 0.00011926400000000087, 0.00011915199999999737, 0.00011941599999999719, 0.00011983299999999975, 0.00011945800000000284, 0.00011988899999999802, 0.00011911199999999761, 0.00012000000000000205, 0.00011938900000000446, 0.0001198750000000054, 0.00011911099999999814, 0.00011970799999999615, 0.00011980600000000008]</msg>
<status status="PASS" starttime="20201030 18:31:34.643" endtime="20201030 18:31:34.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.638" endtime="20201030 18:31:34.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.649" endtime="20201030 18:31:34.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.647" endtime="20201030 18:31:34.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.646" endtime="20201030 18:31:34.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.259" endtime="20201030 18:31:34.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.257" endtime="20201030 18:31:34.669"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.678" endtime="20201030 18:31:34.697"></status>
</kw>
<msg timestamp="20201030 18:31:34.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.676" endtime="20201030 18:31:34.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.699" endtime="20201030 18:31:34.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.701" endtime="20201030 18:31:34.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.674" endtime="20201030 18:31:34.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.672" endtime="20201030 18:31:34.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.710" endtime="20201030 18:31:34.996"></status>
</kw>
<msg timestamp="20201030 18:31:34.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.709" endtime="20201030 18:31:34.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.000" endtime="20201030 18:31:35.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.008" endtime="20201030 18:31:35.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.706" endtime="20201030 18:31:35.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.704" endtime="20201030 18:31:35.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.015" level="INFO">${RESULT} = [{'diff': 0.00012034799999999929}, {'diff': 0.00012013900000000174}, {'diff': 0.0001204440000000008}, {'diff': 0.00012027800000000144}, {'diff': 0.00012080600000000108}, {'diff': 0.0001208060000000010...</msg>
<status status="PASS" starttime="20201030 18:31:35.012" endtime="20201030 18:31:35.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.019" level="INFO">${ACCURACY} = {'diff': [0.00012034799999999929, 0.00012013900000000174, 0.0001204440000000008, 0.00012027800000000144, 0.00012080600000000108, 0.00012080600000000108, 0.0001204029999999981, 0.00012002800000000119, ...</msg>
<status status="PASS" starttime="20201030 18:31:35.016" endtime="20201030 18:31:35.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.023" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.022" endtime="20201030 18:31:35.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.026" level="INFO">VALUE: [0.00012034799999999929, 0.00012013900000000174, 0.0001204440000000008, 0.00012027800000000144, 0.00012080600000000108, 0.00012080600000000108, 0.0001204029999999981, 0.00012002800000000119, 0.0001207639999999989, 0.00012020800000000012, 0.00012022199999999969, 0.00012015300000000131, 0.00012026400000000187, 0.00012090300000000206, 0.00012027800000000144, 0.00012079200000000151, 0.00012087499999999946, 0.00012027800000000144, 0.00012029200000000101, 0.00012097200000000044, 0.00012019400000000055, 0.00012026400000000187, 0.0001207639999999989, 0.00012029200000000101, 0.00012044500000000027, 0.00012030600000000058, 0.0001202769999999985, 0.00012033300000000025, 0.00012013899999999827, 0.0001202639999999984, 0.00012030600000000058, 0.00012080599999999761, 0.00012051399999999865, 0.00012063800000000277, 0.00012068100000000095, 0.00012016700000000088, 0.00012086099999999989, 0.00012076400000000237, 0.00012040300000000156, 0.00011995799999999987, 0.0001204440000000008, 0.00012034699999999982, 0.00012051399999999865, 0.00012058399999999997, 0.0001200699999999999, 0.00012019500000000002, 0.00012069399999999758, 0.00012084700000000032, 0.00012020800000000012, 0.00012036099999999939]</msg>
<status status="PASS" starttime="20201030 18:31:35.024" endtime="20201030 18:31:35.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.020" endtime="20201030 18:31:35.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.037" endtime="20201030 18:31:35.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.035" endtime="20201030 18:31:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.034" endtime="20201030 18:31:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.670" endtime="20201030 18:31:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.670" endtime="20201030 18:31:35.057"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.066" endtime="20201030 18:31:35.086"></status>
</kw>
<msg timestamp="20201030 18:31:35.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.064" endtime="20201030 18:31:35.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.088" endtime="20201030 18:31:35.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.090" endtime="20201030 18:31:35.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.062" endtime="20201030 18:31:35.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.060" endtime="20201030 18:31:35.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.099" endtime="20201030 18:31:35.384"></status>
</kw>
<msg timestamp="20201030 18:31:35.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.098" endtime="20201030 18:31:35.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.388" endtime="20201030 18:31:35.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.396" endtime="20201030 18:31:35.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.095" endtime="20201030 18:31:35.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.094" endtime="20201030 18:31:35.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.403" level="INFO">${RESULT} = [{'diff': 0.00012108400000000047}, {'diff': 0.00012140300000000256}, {'diff': 0.00012144399999999833}, {'diff': 0.00012104199999999829}, {'diff': 0.00012105600000000133}, {'diff': 0.000121151999999999...</msg>
<status status="PASS" starttime="20201030 18:31:35.399" endtime="20201030 18:31:35.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.407" level="INFO">${ACCURACY} = {'diff': [0.00012108400000000047, 0.00012140300000000256, 0.00012144399999999833, 0.00012104199999999829, 0.00012105600000000133, 0.00012115199999999937, 0.00012109700000000057, 0.00012161100000000064...</msg>
<status status="PASS" starttime="20201030 18:31:35.404" endtime="20201030 18:31:35.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.411" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.410" endtime="20201030 18:31:35.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.413" level="INFO">VALUE: [0.00012108400000000047, 0.00012140300000000256, 0.00012144399999999833, 0.00012104199999999829, 0.00012105600000000133, 0.00012115199999999937, 0.00012109700000000057, 0.00012161100000000064, 0.00012191599999999969, 0.0001217090000000011, 0.00012151399999999965, 0.00012133300000000125, 0.0001210969999999971, 0.00012147300000000041, 0.00012134800000000029, 0.0001214029999999991, 0.00012113899999999928, 0.00012142999999999876, 0.00012180599999999861, 0.00012170799999999815, 0.00012147199999999747, 0.00012170799999999815, 0.00012148600000000051, 0.00012108299999999753, 0.0001214310000000017, 0.00012127799999999897, 0.00012156900000000193, 0.00012190200000000012, 0.00012154200000000226, 0.00012111100000000014, 0.00012144399999999833, 0.00012179199999999904, 0.00012152699999999975, 0.00012166599999999944, 0.00012120800000000112, 0.00012130499999999864, 0.0001211379999999998, 0.0001216380000000003, 0.00012116599999999894, 0.00012148600000000051, 0.00012152799999999922, 0.00012129200000000201, 0.00012109800000000004, 0.00012113899999999928, 0.00012175000000000033, 0.00012130499999999864, 0.00012150000000000008, 0.0001215830000000015, 0.00012109700000000057, 0.0001219029999999996]</msg>
<status status="PASS" starttime="20201030 18:31:35.412" endtime="20201030 18:31:35.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.407" endtime="20201030 18:31:35.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.419" endtime="20201030 18:31:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.418" endtime="20201030 18:31:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.416" endtime="20201030 18:31:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.058" endtime="20201030 18:31:35.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.058" endtime="20201030 18:31:35.440"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.448" endtime="20201030 18:31:35.468"></status>
</kw>
<msg timestamp="20201030 18:31:35.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.447" endtime="20201030 18:31:35.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.469" endtime="20201030 18:31:35.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.472" endtime="20201030 18:31:35.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.444" endtime="20201030 18:31:35.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.442" endtime="20201030 18:31:35.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.481" endtime="20201030 18:31:35.766"></status>
</kw>
<msg timestamp="20201030 18:31:35.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.479" endtime="20201030 18:31:35.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.769" endtime="20201030 18:31:35.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.777" endtime="20201030 18:31:35.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.477" endtime="20201030 18:31:35.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.475" endtime="20201030 18:31:35.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.784" level="INFO">${RESULT} = [{'diff': 0.00012269499999999905}, {'diff': 0.00012269399999999958}, {'diff': 0.00012283299999999928}, {'diff': 0.00012195800000000187}, {'diff': 0.00012255499999999989}, {'diff': 0.000122333999999998...</msg>
<status status="PASS" starttime="20201030 18:31:35.781" endtime="20201030 18:31:35.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.789" level="INFO">${ACCURACY} = {'diff': [0.00012269499999999905, 0.00012269399999999958, 0.00012283299999999928, 0.00012195800000000187, 0.00012255499999999989, 0.00012233399999999825, 0.00012202700000000025, 0.00012252800000000022...</msg>
<status status="PASS" starttime="20201030 18:31:35.785" endtime="20201030 18:31:35.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.793" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.792" endtime="20201030 18:31:35.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.796" level="INFO">VALUE: [0.00012269499999999905, 0.00012269399999999958, 0.00012283299999999928, 0.00012195800000000187, 0.00012255499999999989, 0.00012233399999999825, 0.00012202700000000025, 0.00012252800000000022, 0.0001225969999999986, 0.00012298599999999854, 0.00012243099999999923, 0.00012206899999999896, 0.0001229999999999981, 0.0001221250000000007, 0.00012275000000000133, 0.00012238900000000053, 0.00012255599999999936, 0.0001223189999999992, 0.00012255599999999936, 0.00012243099999999923, 0.0001221380000000008, 0.00012263900000000078, 0.00012238900000000053, 0.00012186100000000089, 0.0001227640000000009, 0.00012208299999999853, 0.00012206900000000243, 0.0001227359999999983, 0.00012224999999999736, 0.00012286099999999842, 0.00012294399999999983, 0.0001224160000000002, 0.00012219499999999855, 0.00012268099999999948, 0.00012200000000000058, 0.00012231999999999868, 0.00012234700000000182, 0.00012202700000000025, 0.00012280500000000014, 0.0001221799999999995, 0.0001220700000000019, 0.000122777000000001, 0.00012236100000000139, 0.00012268099999999948, 0.00012220799999999865, 0.00012274999999999786, 0.00012236200000000086, 0.00012265300000000035, 0.00012225000000000083, 0.00012226300000000093]</msg>
<status status="PASS" starttime="20201030 18:31:35.794" endtime="20201030 18:31:35.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.790" endtime="20201030 18:31:35.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.800" endtime="20201030 18:31:35.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.799" endtime="20201030 18:31:35.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.798" endtime="20201030 18:31:35.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.441" endtime="20201030 18:31:35.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.440" endtime="20201030 18:31:35.821"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.830" endtime="20201030 18:31:35.849"></status>
</kw>
<msg timestamp="20201030 18:31:35.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.828" endtime="20201030 18:31:35.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.851" endtime="20201030 18:31:35.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.853" endtime="20201030 18:31:35.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.826" endtime="20201030 18:31:35.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.824" endtime="20201030 18:31:35.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.862" endtime="20201030 18:31:36.154"></status>
</kw>
<msg timestamp="20201030 18:31:36.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.861" endtime="20201030 18:31:36.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.158" endtime="20201030 18:31:36.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.166" endtime="20201030 18:31:36.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.858" endtime="20201030 18:31:36.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.856" endtime="20201030 18:31:36.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.173" level="INFO">${RESULT} = [{'diff': 0.00012338899999999806}, {'diff': 0.00012319400000000008}, {'diff': 0.00012386100000000289}, {'diff': 0.00012356999999999993}, {'diff': 0.00012338900000000153}, {'diff': 0.000123082999999999...</msg>
<status status="PASS" starttime="20201030 18:31:36.169" endtime="20201030 18:31:36.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.177" level="INFO">${ACCURACY} = {'diff': [0.00012338899999999806, 0.00012319400000000008, 0.00012386100000000289, 0.00012356999999999993, 0.00012338900000000153, 0.00012308299999999953, 0.00012295800000000287, 0.00012325000000000183...</msg>
<status status="PASS" starttime="20201030 18:31:36.174" endtime="20201030 18:31:36.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.181" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.180" endtime="20201030 18:31:36.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.183" level="INFO">VALUE: [0.00012338899999999806, 0.00012319400000000008, 0.00012386100000000289, 0.00012356999999999993, 0.00012338900000000153, 0.00012308299999999953, 0.00012295800000000287, 0.00012325000000000183, 0.00012316700000000042, 0.00012338899999999806, 0.00012393099999999727, 0.00012363900000000178, 0.00012306899999999996, 0.000123083999999999, 0.00012300000000000158, 0.00012361099999999917, 0.00012331999999999968, 0.00012325000000000183, 0.0001236389999999983, 0.00012351399999999818, 0.00012370899999999962, 0.0001236939999999971, 0.00012356900000000046, 0.00012356900000000046, 0.00012387499999999899, 0.0001236389999999983, 0.0001236389999999983, 0.00012329200000000054, 0.0001231250000000017, 0.00012327800000000097, 0.0001238190000000007, 0.00012376399999999843, 0.00012298599999999854, 0.0001235969999999996, 0.00012327800000000097, 0.00012387499999999899, 0.0001234030000000011, 0.00012380500000000114, 0.00012306999999999943, 0.0001236250000000022, 0.00012387499999999899, 0.00012305599999999986, 0.00012365300000000135, 0.00012338900000000153, 0.00012387499999999899, 0.000123083999999999, 0.0001233190000000002, 0.0001230700000000029, 0.00012305500000000039, 0.00012305599999999986]</msg>
<status status="PASS" starttime="20201030 18:31:36.182" endtime="20201030 18:31:36.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.177" endtime="20201030 18:31:36.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.188" endtime="20201030 18:31:36.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.187" endtime="20201030 18:31:36.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.186" endtime="20201030 18:31:36.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.822" endtime="20201030 18:31:36.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.822" endtime="20201030 18:31:36.209"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.218" endtime="20201030 18:31:36.241"></status>
</kw>
<msg timestamp="20201030 18:31:36.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.216" endtime="20201030 18:31:36.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.242" endtime="20201030 18:31:36.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.245" endtime="20201030 18:31:36.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.214" endtime="20201030 18:31:36.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.212" endtime="20201030 18:31:36.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.254" endtime="20201030 18:31:36.540"></status>
</kw>
<msg timestamp="20201030 18:31:36.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025238444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.252" endtime="20201030 18:31:36.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025238444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.544" endtime="20201030 18:31:36.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.552" endtime="20201030 18:31:36.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.249" endtime="20201030 18:31:36.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.248" endtime="20201030 18:31:36.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.558" level="INFO">${RESULT} = [{'diff': 0.00012424999999999936}, {'diff': 0.00012407000000000043}, {'diff': 0.0001242359999999998}, {'diff': 0.0001244999999999996}, {'diff': 0.00012394400000000083}, {'diff': 0.00012479200000000204...</msg>
<status status="PASS" starttime="20201030 18:31:36.555" endtime="20201030 18:31:36.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.562" level="INFO">${ACCURACY} = {'diff': [0.00012424999999999936, 0.00012407000000000043, 0.0001242359999999998, 0.0001244999999999996, 0.00012394400000000083, 0.00012479200000000204, 0.00012480499999999867, 0.00012462499999999974, ...</msg>
<status status="PASS" starttime="20201030 18:31:36.559" endtime="20201030 18:31:36.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.567" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.566" endtime="20201030 18:31:36.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.569" level="INFO">VALUE: [0.00012424999999999936, 0.00012407000000000043, 0.0001242359999999998, 0.0001244999999999996, 0.00012394400000000083, 0.00012479200000000204, 0.00012480499999999867, 0.00012462499999999974, 0.00012436099999999992, 0.0001242359999999998, 0.00012470800000000115, 0.0001242359999999998, 0.00012469499999999759, 0.0001248060000000016, 0.0001243619999999994, 0.00012474999999999986, 0.00012454099999999885, 0.00012426299999999946, 0.00012438900000000253, 0.00012404199999999782, 0.00012444399999999786, 0.00012463900000000278, 0.00012402799999999825, 0.0001239450000000003, 0.00012394399999999736, 0.00012495900000000087, 0.00012416600000000194, 0.00012475000000000333, 0.00012481899999999824, 0.00012437499999999949, 0.00012400000000000258, 0.00012476399999999943, 0.0001248329999999978, 0.0001240970000000001, 0.00012424999999999936, 0.0001247360000000003, 0.00012493099999999827, 0.0001245970000000006, 0.00012480599999999814, 0.0001243060000000011, 0.00012438900000000253, 0.00012487500000000346, 0.0001239999999999991, 0.00012430600000000458, 0.0001247360000000003, 0.0001242359999999998, 0.0001246109999999967, 0.0001247360000000003, 0.00012430599999999764, 0.00012409700000000357]</msg>
<status status="PASS" starttime="20201030 18:31:36.568" endtime="20201030 18:31:36.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.563" endtime="20201030 18:31:36.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.575" endtime="20201030 18:31:36.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.573" endtime="20201030 18:31:36.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.572" endtime="20201030 18:31:36.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.210" endtime="20201030 18:31:36.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.209" endtime="20201030 18:31:36.596"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.604" endtime="20201030 18:31:36.624"></status>
</kw>
<msg timestamp="20201030 18:31:36.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.603" endtime="20201030 18:31:36.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.625" endtime="20201030 18:31:36.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.628" endtime="20201030 18:31:36.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.600" endtime="20201030 18:31:36.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.598" endtime="20201030 18:31:36.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.637" endtime="20201030 18:31:36.922"></status>
</kw>
<msg timestamp="20201030 18:31:36.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.635" endtime="20201030 18:31:36.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.926" endtime="20201030 18:31:36.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.935" endtime="20201030 18:31:36.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.633" endtime="20201030 18:31:36.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.631" endtime="20201030 18:31:36.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.941" level="INFO">${RESULT} = [{'diff': 0.00012570799999999868}, {'diff': 0.00012515300000000285}, {'diff': 0.0001255979999999976}, {'diff': 0.000125568999999999}, {'diff': 0.00012593099999999927}, {'diff': 0.0001255559999999989},...</msg>
<status status="PASS" starttime="20201030 18:31:36.938" endtime="20201030 18:31:36.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.946" level="INFO">${ACCURACY} = {'diff': [0.00012570799999999868, 0.00012515300000000285, 0.0001255979999999976, 0.000125568999999999, 0.00012593099999999927, 0.0001255559999999989, 0.00012518100000000199, 0.00012565299999999988, 0....</msg>
<status status="PASS" starttime="20201030 18:31:36.942" endtime="20201030 18:31:36.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.950" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.949" endtime="20201030 18:31:36.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.953" level="INFO">VALUE: [0.00012570799999999868, 0.00012515300000000285, 0.0001255979999999976, 0.000125568999999999, 0.00012593099999999927, 0.0001255559999999989, 0.00012518100000000199, 0.00012565299999999988, 0.00012577700000000053, 0.00012544499999999834, 0.0001250420000000023, 0.00012536099999999745, 0.00012551400000000018, 0.0001252909999999996, 0.00012512500000000024, 0.00012508300000000153, 0.00012588900000000056, 0.00012518099999999852, 0.00012520800000000165, 0.00012534700000000135, 0.0001251389999999998, 0.00012562499999999727, 0.00012534700000000135, 0.0001252230000000007, 0.00012519499999999809, 0.00012531899999999874, 0.00012551400000000018, 0.0001256520000000004, 0.0001249299999999988, 0.0001258329999999988, 0.00012493000000000226, 0.000125778, 0.00012497200000000097, 0.00012567999999999954, 0.00012580500000000314, 0.00012498600000000054, 0.0001255000000000006, 0.00012533300000000178, 0.0001254030000000031, 0.00012519500000000156, 0.00012566699999999945, 0.0001258199999999987, 0.00012572199999999825, 0.0001254580000000019, 0.0001256939999999991, 0.0001253199999999982, 0.00012567999999999954, 0.0001257360000000013, 0.00012580499999999967, 0.00012491599999999922]</msg>
<status status="PASS" starttime="20201030 18:31:36.951" endtime="20201030 18:31:36.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.947" endtime="20201030 18:31:36.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.958" endtime="20201030 18:31:36.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.956" endtime="20201030 18:31:36.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.955" endtime="20201030 18:31:36.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.596" endtime="20201030 18:31:36.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.596" endtime="20201030 18:31:36.978"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.987" endtime="20201030 18:31:37.006"></status>
</kw>
<msg timestamp="20201030 18:31:37.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.985" endtime="20201030 18:31:37.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.008" endtime="20201030 18:31:37.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.010" endtime="20201030 18:31:37.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.983" endtime="20201030 18:31:37.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.981" endtime="20201030 18:31:37.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.019" endtime="20201030 18:31:37.306"></status>
</kw>
<msg timestamp="20201030 18:31:37.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.018" endtime="20201030 18:31:37.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.311" endtime="20201030 18:31:37.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.318" endtime="20201030 18:31:37.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.015" endtime="20201030 18:31:37.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.014" endtime="20201030 18:31:37.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.325" level="INFO">${RESULT} = [{'diff': 0.00012663899999999784}, {'diff': 0.00012651400000000118}, {'diff': 0.0001268049999999972}, {'diff': 0.00012609800000000157}, {'diff': 0.00012690300000000113}, {'diff': 0.0001261950000000025...</msg>
<status status="PASS" starttime="20201030 18:31:37.322" endtime="20201030 18:31:37.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.329" level="INFO">${ACCURACY} = {'diff': [0.00012663899999999784, 0.00012651400000000118, 0.0001268049999999972, 0.00012609800000000157, 0.00012690300000000113, 0.00012619500000000256, 0.00012611199999999767, 0.00012634700000000235,...</msg>
<status status="PASS" starttime="20201030 18:31:37.326" endtime="20201030 18:31:37.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.333" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.332" endtime="20201030 18:31:37.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.336" level="INFO">VALUE: [0.00012663899999999784, 0.00012651400000000118, 0.0001268049999999972, 0.00012609800000000157, 0.00012690300000000113, 0.00012619500000000256, 0.00012611199999999767, 0.00012634700000000235, 0.0001262780000000005, 0.00012694499999999984, 0.00012651400000000118, 0.00012608299999999906, 0.00012684699999999938, 0.00012601400000000068, 0.00012629200000000007, 0.0001266390000000013, 0.00012676399999999796, 0.00012608299999999906, 0.00012620799999999918, 0.0001259719999999985, 0.00012638900000000106, 0.00012645799999999943, 0.00012673599999999882, 0.00012608399999999853, 0.0001266529999999974, 0.00012694400000000036, 0.00012687500000000199, 0.00012676400000000143, 0.00012604100000000035, 0.00012623599999999832, 0.0001261939999999996, 0.00012602800000000025, 0.00012597200000000197, 0.00012643099999999977, 0.00012638800000000158, 0.0001267499999999984, 0.00012658399999999903, 0.00012656999999999946, 0.0001262499999999979, 0.0001265139999999977, 0.00012652799999999728, 0.0001266390000000013, 0.00012626399999999746, 0.0001260979999999981, 0.00012609699999999863, 0.00012620799999999918, 0.00012651400000000118, 0.000126569, 0.00012622199999999875, 0.00012640200000000115]</msg>
<status status="PASS" starttime="20201030 18:31:37.334" endtime="20201030 18:31:37.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.330" endtime="20201030 18:31:37.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.341" endtime="20201030 18:31:37.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.339" endtime="20201030 18:31:37.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.338" endtime="20201030 18:31:37.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.979" endtime="20201030 18:31:37.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.979" endtime="20201030 18:31:37.361"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.370" endtime="20201030 18:31:37.391"></status>
</kw>
<msg timestamp="20201030 18:31:37.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.368" endtime="20201030 18:31:37.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.392" endtime="20201030 18:31:37.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.394" endtime="20201030 18:31:37.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.366" endtime="20201030 18:31:37.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.364" endtime="20201030 18:31:37.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.403" endtime="20201030 18:31:37.689"></status>
</kw>
<msg timestamp="20201030 18:31:37.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.402" endtime="20201030 18:31:37.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.694" endtime="20201030 18:31:37.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.702" endtime="20201030 18:31:37.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.399" endtime="20201030 18:31:37.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.398" endtime="20201030 18:31:37.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.708" level="INFO">${RESULT} = [{'diff': 0.0001274309999999973}, {'diff': 0.0001274309999999973}, {'diff': 0.00012773599999999982}, {'diff': 0.0001274300000000013}, {'diff': 0.00012715300000000138}, {'diff': 0.00012744500000000034}...</msg>
<status status="PASS" starttime="20201030 18:31:37.705" endtime="20201030 18:31:37.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.712" level="INFO">${ACCURACY} = {'diff': [0.0001274309999999973, 0.0001274309999999973, 0.00012773599999999982, 0.0001274300000000013, 0.00012715300000000138, 0.00012744500000000034, 0.00012755500000000142, 0.0001271109999999992, 0....</msg>
<status status="PASS" starttime="20201030 18:31:37.709" endtime="20201030 18:31:37.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.716" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.715" endtime="20201030 18:31:37.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.719" level="INFO">VALUE: [0.0001274309999999973, 0.0001274309999999973, 0.00012773599999999982, 0.0001274300000000013, 0.00012715300000000138, 0.00012744500000000034, 0.00012755500000000142, 0.0001271109999999992, 0.00012779200000000157, 0.00012737499999999902, 0.0001272910000000016, 0.00012773599999999982, 0.00012784700000000038, 0.00012720800000000018, 0.00012711100000000267, 0.00012786099999999995, 0.00012780599999999767, 0.00012773599999999982, 0.00012773599999999982, 0.00012716700000000095, 0.0001270000000000021, 0.00012737499999999902, 0.00012757000000000046, 0.0001273200000000002, 0.00012772299999999973, 0.0001278049999999982, 0.00012755500000000142, 0.00012738900000000206, 0.00012779099999999863, 0.00012766699999999798, 0.00012730600000000064, 0.0001275269999999988, 0.00012795799999999746, 0.00012729200000000107, 0.00012770800000000068, 0.000127778000000002, 0.0001273889999999986, 0.0001273049999999977, 0.0001277919999999981, 0.00012704199999999735, 0.00012770900000000016, 0.00012757000000000046, 0.0001279439999999979, 0.00012731899999999727, 0.00012711199999999867, 0.00012712499999999877, 0.00012726399999999846, 0.00012723599999999932, 0.0001270139999999982, 0.00012743100000000077]</msg>
<status status="PASS" starttime="20201030 18:31:37.717" endtime="20201030 18:31:37.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.713" endtime="20201030 18:31:37.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.725" endtime="20201030 18:31:37.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.723" endtime="20201030 18:31:37.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.722" endtime="20201030 18:31:37.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.362" endtime="20201030 18:31:37.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.362" endtime="20201030 18:31:37.745"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.754" endtime="20201030 18:31:37.773"></status>
</kw>
<msg timestamp="20201030 18:31:37.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.752" endtime="20201030 18:31:37.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.775" endtime="20201030 18:31:37.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.777" endtime="20201030 18:31:37.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.750" endtime="20201030 18:31:37.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.748" endtime="20201030 18:31:37.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.786" endtime="20201030 18:31:38.072"></status>
</kw>
<msg timestamp="20201030 18:31:38.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.785" endtime="20201030 18:31:38.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.076" endtime="20201030 18:31:38.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.084" endtime="20201030 18:31:38.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.782" endtime="20201030 18:31:38.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.781" endtime="20201030 18:31:38.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.091" level="INFO">${RESULT} = [{'diff': 0.0001289300000000028}, {'diff': 0.00012805599999999792}, {'diff': 0.00012807000000000096}, {'diff': 0.0001279590000000004}, {'diff': 0.00012807000000000096}, {'diff': 0.00012856899999999852...</msg>
<status status="PASS" starttime="20201030 18:31:38.087" endtime="20201030 18:31:38.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.095" level="INFO">${ACCURACY} = {'diff': [0.0001289300000000028, 0.00012805599999999792, 0.00012807000000000096, 0.0001279590000000004, 0.00012807000000000096, 0.00012856899999999852, 0.00012862500000000027, 0.00012845899999999744, ...</msg>
<status status="PASS" starttime="20201030 18:31:38.092" endtime="20201030 18:31:38.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.100" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.099" endtime="20201030 18:31:38.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.102" level="INFO">VALUE: [0.0001289300000000028, 0.00012805599999999792, 0.00012807000000000096, 0.0001279590000000004, 0.00012807000000000096, 0.00012856899999999852, 0.00012862500000000027, 0.00012845899999999744, 0.00012788900000000256, 0.00012883299999999834, 0.00012848700000000005, 0.0001285560000000019, 0.00012829200000000207, 0.00012844499999999787, 0.00012807000000000096, 0.00012823600000000032, 0.0001285560000000019, 0.00012812499999999977, 0.00012868000000000254, 0.000128569999999998, 0.00012804199999999835, 0.00012795800000000093, 0.0001282499999999999, 0.0001281110000000002, 0.0001281940000000016, 0.0001283889999999996, 0.00012866700000000245, 0.0001281110000000002, 0.00012809700000000063, 0.00012855500000000242, 0.00012852799999999928, 0.00012863800000000036, 0.00012804099999999888, 0.0001284300000000023, 0.00012858300000000156, 0.00012844500000000134, 0.00012798600000000007, 0.0001286110000000007, 0.00012788900000000256, 0.00012859700000000113, 0.0001282919999999986, 0.00012844500000000134, 0.00012812499999999977, 0.00012813899999999934, 0.00012887500000000052, 0.0001279590000000004, 0.00012813899999999934, 0.00012848600000000057, 0.00012798600000000007, 0.00012874999999999692]</msg>
<status status="PASS" starttime="20201030 18:31:38.101" endtime="20201030 18:31:38.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.096" endtime="20201030 18:31:38.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.107" endtime="20201030 18:31:38.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.106" endtime="20201030 18:31:38.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.105" endtime="20201030 18:31:38.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.746" endtime="20201030 18:31:38.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.746" endtime="20201030 18:31:38.128"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.137" endtime="20201030 18:31:38.156"></status>
</kw>
<msg timestamp="20201030 18:31:38.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.135" endtime="20201030 18:31:38.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.158" endtime="20201030 18:31:38.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.160" endtime="20201030 18:31:38.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.133" endtime="20201030 18:31:38.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.131" endtime="20201030 18:31:38.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.169" endtime="20201030 18:31:38.456"></status>
</kw>
<msg timestamp="20201030 18:31:38.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.168" endtime="20201030 18:31:38.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.460" endtime="20201030 18:31:38.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.468" endtime="20201030 18:31:38.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.165" endtime="20201030 18:31:38.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.164" endtime="20201030 18:31:38.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.474" level="INFO">${RESULT} = [{'diff': 0.00012990300000000066}, {'diff': 0.00012918100000000252}, {'diff': 0.00012900000000000064}, {'diff': 0.000129166}, {'diff': 0.0001297920000000001}, {'diff': 0.0001297079999999992}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:31:38.471" endtime="20201030 18:31:38.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.478" level="INFO">${ACCURACY} = {'diff': [0.00012990300000000066, 0.00012918100000000252, 0.00012900000000000064, 0.000129166, 0.0001297920000000001, 0.0001297079999999992, 0.00012929100000000013, 0.00012937500000000102, 0.000129861...</msg>
<status status="PASS" starttime="20201030 18:31:38.475" endtime="20201030 18:31:38.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.483" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.482" endtime="20201030 18:31:38.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.485" level="INFO">VALUE: [0.00012990300000000066, 0.00012918100000000252, 0.00012900000000000064, 0.000129166, 0.0001297920000000001, 0.0001297079999999992, 0.00012929100000000013, 0.00012937500000000102, 0.00012986100000000195, 0.00012912500000000077, 0.00012993000000000032, 0.00012961099999999823, 0.00012929100000000013, 0.00012934799999999788, 0.0001294309999999993, 0.00012955499999999995, 0.00012986099999999848, 0.00012955599999999942, 0.0001291249999999973, 0.0001290140000000002, 0.00012966599999999703, 0.0001297500000000014, 0.0001294439999999994, 0.00012892999999999932, 0.00012941600000000025, 0.0001290829999999986, 0.00012892999999999932, 0.00012898600000000107, 0.00012959699999999866, 0.00012962500000000127, 0.00012997199999999903, 0.00012952800000000028, 0.00012973599999999835, 0.0001293890000000006, 0.00012941699999999973, 0.00012944400000000286, 0.0001297500000000014, 0.00012922199999999828, 0.0001293890000000006, 0.00012913900000000034, 0.00012931999999999874, 0.00012936099999999798, 0.00012980599999999967, 0.0001297500000000014, 0.0001295829999999991, 0.0001294859999999981, 0.0001292500000000009, 0.0001297920000000001, 0.00012902799999999978, 0.00012927700000000056]</msg>
<status status="PASS" starttime="20201030 18:31:38.484" endtime="20201030 18:31:38.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.479" endtime="20201030 18:31:38.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.490" endtime="20201030 18:31:38.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.489" endtime="20201030 18:31:38.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.487" endtime="20201030 18:31:38.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.129" endtime="20201030 18:31:38.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.128" endtime="20201030 18:31:38.511"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.519" endtime="20201030 18:31:38.540"></status>
</kw>
<msg timestamp="20201030 18:31:38.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.518" endtime="20201030 18:31:38.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.542" endtime="20201030 18:31:38.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.544" endtime="20201030 18:31:38.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.515" endtime="20201030 18:31:38.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.513" endtime="20201030 18:31:38.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.553" endtime="20201030 18:31:38.839"></status>
</kw>
<msg timestamp="20201030 18:31:38.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.552" endtime="20201030 18:31:38.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.843" endtime="20201030 18:31:38.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.851" endtime="20201030 18:31:38.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.549" endtime="20201030 18:31:38.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.547" endtime="20201030 18:31:38.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.857" level="INFO">${RESULT} = [{'diff': 0.00013054200000000085}, {'diff': 0.00013087500000000252}, {'diff': 0.00013087499999999905}, {'diff': 0.00013011099999999873}, {'diff': 0.00013055600000000042}, {'diff': 0.000130139000000001...</msg>
<status status="PASS" starttime="20201030 18:31:38.854" endtime="20201030 18:31:38.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.861" level="INFO">${ACCURACY} = {'diff': [0.00013054200000000085, 0.00013087500000000252, 0.00013087499999999905, 0.00013011099999999873, 0.00013055600000000042, 0.00013013900000000134, 0.0001304440000000004, 0.00013037499999999855,...</msg>
<status status="PASS" starttime="20201030 18:31:38.858" endtime="20201030 18:31:38.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.866" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.865" endtime="20201030 18:31:38.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.868" level="INFO">VALUE: [0.00013054200000000085, 0.00013087500000000252, 0.00013087499999999905, 0.00013011099999999873, 0.00013055600000000042, 0.00013013900000000134, 0.0001304440000000004, 0.00013037499999999855, 0.00013050000000000214, 0.00013037499999999855, 0.00013061099999999923, 0.0001303890000000016, 0.00013073599999999935, 0.00013061099999999923, 0.0001307920000000011, 0.00013041699999999726, 0.00012994499999999937, 0.00013030499999999723, 0.00013041599999999778, 0.00013050000000000214, 0.00013073599999999935, 0.00013069500000000012, 0.00013080600000000067, 0.00013055600000000042, 0.00013036099999999898, 0.0001301249999999983, 0.00013031999999999974, 0.0001305270000000018, 0.0001304859999999991, 0.00013074999999999892, 0.00013047199999999953, 0.0001308469999999999, 0.0001309310000000008, 0.00013012500000000177, 0.00013066700000000098, 0.0001302079999999997, 0.00013000000000000164, 0.00013030600000000017, 0.0001306799999999976, 0.00013073699999999883, 0.00012991700000000023, 0.00013086199999999895, 0.00013019400000000014, 0.0001299309999999998, 0.0001301799999999971, 0.00013066700000000098, 0.00013073599999999935, 0.00013068100000000055, 0.00013073599999999935, 0.00013030600000000017]</msg>
<status status="PASS" starttime="20201030 18:31:38.867" endtime="20201030 18:31:38.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.862" endtime="20201030 18:31:38.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.874" endtime="20201030 18:31:38.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.872" endtime="20201030 18:31:38.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.871" endtime="20201030 18:31:38.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.512" endtime="20201030 18:31:38.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.511" endtime="20201030 18:31:38.894"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.903" endtime="20201030 18:31:38.923"></status>
</kw>
<msg timestamp="20201030 18:31:38.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.901" endtime="20201030 18:31:38.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.924" endtime="20201030 18:31:38.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.927" endtime="20201030 18:31:38.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.899" endtime="20201030 18:31:38.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.897" endtime="20201030 18:31:38.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.936" endtime="20201030 18:31:39.223"></status>
</kw>
<msg timestamp="20201030 18:31:39.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.935" endtime="20201030 18:31:39.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.227" endtime="20201030 18:31:39.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.235" endtime="20201030 18:31:39.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.932" endtime="20201030 18:31:39.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.930" endtime="20201030 18:31:39.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.242" level="INFO">${RESULT} = [{'diff': 0.00013097200000000003}, {'diff': 0.00013111099999999973}, {'diff': 0.00013151399999999924}, {'diff': 0.00013186100000000048}, {'diff': 0.00013111099999999973}, {'diff': 0.000131723000000000...</msg>
<status status="PASS" starttime="20201030 18:31:39.238" endtime="20201030 18:31:39.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.247" level="INFO">${ACCURACY} = {'diff': [0.00013097200000000003, 0.00013111099999999973, 0.00013151399999999924, 0.00013186100000000048, 0.00013111099999999973, 0.00013172300000000026, 0.00013129100000000213, 0.000131473, 0.0001314...</msg>
<status status="PASS" starttime="20201030 18:31:39.243" endtime="20201030 18:31:39.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.251" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.250" endtime="20201030 18:31:39.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.253" level="INFO">VALUE: [0.00013097200000000003, 0.00013111099999999973, 0.00013151399999999924, 0.00013186100000000048, 0.00013111099999999973, 0.00013172300000000026, 0.00013129100000000213, 0.000131473, 0.00013141600000000225, 0.00013090199999999871, 0.00013173600000000035, 0.00013191700000000223, 0.0001318470000000009, 0.00013183300000000134, 0.00013147200000000053, 0.0001314029999999987, 0.00013123599999999985, 0.00013105500000000145, 0.00013180600000000167, 0.00013159700000000066, 0.00013130499999999823, 0.00013149999999999967, 0.00013191699999999876, 0.00013148599999999663, 0.0001316669999999985, 0.00013144500000000087, 0.0001316249999999998, 0.0001318470000000009, 0.00013127800000000203, 0.0001314029999999987, 0.00013102800000000178, 0.0001311249999999993, 0.0001309729999999995, 0.00013177799999999906, 0.0001317920000000021, 0.0001313470000000004, 0.00013137499999999955, 0.00013183299999999787, 0.0001313340000000003, 0.00013126400000000246, 0.0001313890000000026, 0.00013100000000000264, 0.00013158400000000056, 0.00013102699999999884, 0.000131166000000002, 0.00013109700000000016, 0.0001313890000000026, 0.00013122299999999976, 0.00013105600000000092, 0.00013137499999999955]</msg>
<status status="PASS" starttime="20201030 18:31:39.252" endtime="20201030 18:31:39.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.247" endtime="20201030 18:31:39.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.258" endtime="20201030 18:31:39.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.257" endtime="20201030 18:31:39.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.256" endtime="20201030 18:31:39.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.895" endtime="20201030 18:31:39.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.895" endtime="20201030 18:31:39.279"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.288" endtime="20201030 18:31:39.311"></status>
</kw>
<msg timestamp="20201030 18:31:39.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.286" endtime="20201030 18:31:39.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.314" endtime="20201030 18:31:39.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.319" endtime="20201030 18:31:39.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.284" endtime="20201030 18:31:39.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.282" endtime="20201030 18:31:39.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.338" endtime="20201030 18:31:39.633"></status>
</kw>
<msg timestamp="20201030 18:31:39.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.335" endtime="20201030 18:31:39.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.637" endtime="20201030 18:31:39.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.645" endtime="20201030 18:31:39.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.330" endtime="20201030 18:31:39.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.326" endtime="20201030 18:31:39.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.652" level="INFO">${RESULT} = [{'diff': 0.00013220899999999772}, {'diff': 0.0001326250000000008}, {'diff': 0.00013261100000000123}, {'diff': 0.0001323189999999988}, {'diff': 0.0001327640000000005}, {'diff': 0.000132264}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 18:31:39.648" endtime="20201030 18:31:39.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.656" level="INFO">${ACCURACY} = {'diff': [0.00013220899999999772, 0.0001326250000000008, 0.00013261100000000123, 0.0001323189999999988, 0.0001327640000000005, 0.000132264, 0.00013251400000000024, 0.00013197200000000103, 0.0001321389...</msg>
<status status="PASS" starttime="20201030 18:31:39.653" endtime="20201030 18:31:39.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.660" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.659" endtime="20201030 18:31:39.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.663" level="INFO">VALUE: [0.00013220899999999772, 0.0001326250000000008, 0.00013261100000000123, 0.0001323189999999988, 0.0001327640000000005, 0.000132264, 0.00013251400000000024, 0.00013197200000000103, 0.00013213899999999987, 0.00013229199999999913, 0.00013204200000000235, 0.00013205499999999898, 0.00013247200000000153, 0.00013230499999999923, 0.00013265299999999994, 0.0001323340000000013, 0.00013201399999999974, 0.0001319029999999992, 0.00013277800000000006, 0.00013216700000000248, 0.00013209800000000063, 0.00013198700000000008, 0.00013259700000000166, 0.0001326669999999995, 0.00013236100000000098, 0.00013258299999999862, 0.00013270799999999874, 0.0001328470000000019, 0.00013209800000000063, 0.00013254199999999938, 0.00013234800000000088, 0.00013259700000000166, 0.0001325279999999998, 0.00013286100000000148, 0.00013272200000000178, 0.0001323470000000014, 0.00013258299999999862, 0.00013284699999999844, 0.00013266600000000003, 0.00013229199999999913, 0.00013223599999999738, 0.00013262499999999733, 0.000132166999999999, 0.0001319730000000005, 0.0001320409999999994, 0.0001324999999999972, 0.00013291699999999976, 0.00013230499999999923, 0.0001319029999999992, 0.0001319449999999979]</msg>
<status status="PASS" starttime="20201030 18:31:39.661" endtime="20201030 18:31:39.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.656" endtime="20201030 18:31:39.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.667" endtime="20201030 18:31:39.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.666" endtime="20201030 18:31:39.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.665" endtime="20201030 18:31:39.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.280" endtime="20201030 18:31:39.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.279" endtime="20201030 18:31:39.688"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.697" endtime="20201030 18:31:39.720"></status>
</kw>
<msg timestamp="20201030 18:31:39.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.695" endtime="20201030 18:31:39.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.722" endtime="20201030 18:31:39.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.724" endtime="20201030 18:31:39.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.693" endtime="20201030 18:31:39.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.691" endtime="20201030 18:31:39.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.733" endtime="20201030 18:31:40.019"></status>
</kw>
<msg timestamp="20201030 18:31:40.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.732" endtime="20201030 18:31:40.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.023" endtime="20201030 18:31:40.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.032" endtime="20201030 18:31:40.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.729" endtime="20201030 18:31:40.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.728" endtime="20201030 18:31:40.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.038" level="INFO">${RESULT} = [{'diff': 0.00013369499999999965}, {'diff': 0.0001330280000000003}, {'diff': 0.00013370799999999974}, {'diff': 0.00013383399999999934}, {'diff': 0.00013282000000000224}, {'diff': 0.0001329729999999980...</msg>
<status status="PASS" starttime="20201030 18:31:40.035" endtime="20201030 18:31:40.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.042" level="INFO">${ACCURACY} = {'diff': [0.00013369499999999965, 0.0001330280000000003, 0.00013370799999999974, 0.00013383399999999934, 0.00013282000000000224, 0.00013297299999999804, 0.00013288899999999715, 0.00013320799999999924,...</msg>
<status status="PASS" starttime="20201030 18:31:40.039" endtime="20201030 18:31:40.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.046" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.045" endtime="20201030 18:31:40.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.049" level="INFO">VALUE: [0.00013369499999999965, 0.0001330280000000003, 0.00013370799999999974, 0.00013383399999999934, 0.00013282000000000224, 0.00013297299999999804, 0.00013288899999999715, 0.00013320799999999924, 0.00013369499999999965, 0.0001332779999999971, 0.0001334579999999995, 0.00013334699999999894, 0.00013295899999999847, 0.0001337090000000027, 0.00013351399999999777, 0.0001335280000000008, 0.00013358299999999962, 0.00013286100000000148, 0.0001334030000000007, 0.00013373600000000235, 0.00013365200000000146, 0.00013375000000000192, 0.00013355599999999995, 0.00013326300000000152, 0.00013377800000000106, 0.0001338190000000003, 0.00013372199999999931, 0.00013374999999999845, 0.0001336800000000006, 0.00013363900000000137, 0.00013338900000000112, 0.0001330969999999987, 0.00013292999999999985, 0.0001337909999999977, 0.0001332779999999971, 0.0001337640000000015, 0.00013340200000000121, 0.00013365200000000146, 0.00013340199999999774, 0.0001329719999999951, 0.00013366699999999704, 0.00013365299999999747, 0.0001330969999999987, 0.00013358299999999962, 0.0001337770000000016, 0.00013329100000000066, 0.00013355500000000048, 0.00013372200000000278, 0.0001334440000000034, 0.00013383299999999987]</msg>
<status status="PASS" starttime="20201030 18:31:40.047" endtime="20201030 18:31:40.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.043" endtime="20201030 18:31:40.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.104" endtime="20201030 18:31:40.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.102" endtime="20201030 18:31:40.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.101" endtime="20201030 18:31:40.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.689" endtime="20201030 18:31:40.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.689" endtime="20201030 18:31:40.125"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.133" endtime="20201030 18:31:40.153"></status>
</kw>
<msg timestamp="20201030 18:31:40.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.132" endtime="20201030 18:31:40.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.155" endtime="20201030 18:31:40.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.158" endtime="20201030 18:31:40.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.129" endtime="20201030 18:31:40.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.127" endtime="20201030 18:31:40.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.167" endtime="20201030 18:31:40.452"></status>
</kw>
<msg timestamp="20201030 18:31:40.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.165" endtime="20201030 18:31:40.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.456" endtime="20201030 18:31:40.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.464" endtime="20201030 18:31:40.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.163" endtime="20201030 18:31:40.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.161" endtime="20201030 18:31:40.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.471" level="INFO">${RESULT} = [{'diff': 0.00013458300000000062}, {'diff': 0.000134167000000001}, {'diff': 0.00013455500000000148}, {'diff': 0.00013490299999999872}, {'diff': 0.00013425000000000242}, {'diff': 0.0001341519999999985}...</msg>
<status status="PASS" starttime="20201030 18:31:40.467" endtime="20201030 18:31:40.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.475" level="INFO">${ACCURACY} = {'diff': [0.00013458300000000062, 0.000134167000000001, 0.00013455500000000148, 0.00013490299999999872, 0.00013425000000000242, 0.0001341519999999985, 0.00013398599999999913, 0.00013419400000000067, 0...</msg>
<status status="PASS" starttime="20201030 18:31:40.472" endtime="20201030 18:31:40.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.479" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.478" endtime="20201030 18:31:40.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.482" level="INFO">VALUE: [0.00013458300000000062, 0.000134167000000001, 0.00013455500000000148, 0.00013490299999999872, 0.00013425000000000242, 0.0001341519999999985, 0.00013398599999999913, 0.00013419400000000067, 0.0001344030000000017, 0.00013470800000000074, 0.0001340280000000013, 0.0001343479999999994, 0.00013424999999999895, 0.00013423599999999938, 0.00013405500000000098, 0.00013441700000000126, 0.00013441600000000178, 0.00013477699999999912, 0.00013415200000000196, 0.0001348190000000013, 0.00013472200000000031, 0.00013448599999999963, 0.0001346389999999989, 0.00013434800000000288, 0.0001342229999999993, 0.00013477800000000206, 0.00013452799999999834, 0.00013491700000000176, 0.00013461099999999976, 0.0001349030000000022, 0.00013425000000000242, 0.00013420800000000024, 0.0001339030000000012, 0.00013412499999999883, 0.00013475000000000292, 0.00013402700000000184, 0.00013479100000000216, 0.00013434699999999994, 0.00013455600000000095, 0.0001339999999999987, 0.00013424999999999895, 0.00013394400000000042, 0.00013411199999999873, 0.00013438900000000212, 0.00013483300000000087, 0.00013462499999999933, 0.00013413799999999892, 0.0001343609999999995, 0.00013479200000000163, 0.0001345840000000001]</msg>
<status status="PASS" starttime="20201030 18:31:40.480" endtime="20201030 18:31:40.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.476" endtime="20201030 18:31:40.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.487" endtime="20201030 18:31:40.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.486" endtime="20201030 18:31:40.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.484" endtime="20201030 18:31:40.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.125" endtime="20201030 18:31:40.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.125" endtime="20201030 18:31:40.508"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.517" endtime="20201030 18:31:40.538"></status>
</kw>
<msg timestamp="20201030 18:31:40.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.515" endtime="20201030 18:31:40.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.539" endtime="20201030 18:31:40.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.542" endtime="20201030 18:31:40.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.513" endtime="20201030 18:31:40.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.511" endtime="20201030 18:31:40.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.551" endtime="20201030 18:31:40.836"></status>
</kw>
<msg timestamp="20201030 18:31:40.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.549" endtime="20201030 18:31:40.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.841" endtime="20201030 18:31:40.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.849" endtime="20201030 18:31:40.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.547" endtime="20201030 18:31:40.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.545" endtime="20201030 18:31:40.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.855" level="INFO">${RESULT} = [{'diff': 0.0001358329999999984}, {'diff': 0.00013534699999999747}, {'diff': 0.00013566699999999904}, {'diff': 0.00013532000000000127}, {'diff': 0.0001356389999999999}, {'diff': 0.00013591700000000276...</msg>
<status status="PASS" starttime="20201030 18:31:40.852" endtime="20201030 18:31:40.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.859" level="INFO">${ACCURACY} = {'diff': [0.0001358329999999984, 0.00013534699999999747, 0.00013566699999999904, 0.00013532000000000127, 0.0001356389999999999, 0.00013591700000000276, 0.00013504200000000188, 0.0001353060000000017, 0...</msg>
<status status="PASS" starttime="20201030 18:31:40.856" endtime="20201030 18:31:40.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.863" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.862" endtime="20201030 18:31:40.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.867" level="INFO">VALUE: [0.0001358329999999984, 0.00013534699999999747, 0.00013566699999999904, 0.00013532000000000127, 0.0001356389999999999, 0.00013591700000000276, 0.00013504200000000188, 0.0001353060000000017, 0.00013588900000000015, 0.00013515299999999897, 0.00013526399999999952, 0.00013505600000000145, 0.00013559699999999772, 0.00013533300000000137, 0.00013594400000000242, 0.00013542999999999888, 0.00013529199999999866, 0.00013502799999999884, 0.00013534700000000094, 0.0001357909999999997, 0.00013555599999999848, 0.0001356389999999999, 0.0001349999999999997, 0.0001358480000000009, 0.00013573700000000036, 0.00013515299999999897, 0.0001351389999999994, 0.0001351809999999981, 0.00013566699999999904, 0.00013511100000000026, 0.0001354030000000027, 0.00013551399999999977, 0.000135264000000003, 0.00013526399999999952, 0.0001354589999999975, 0.00013497300000000004, 0.00013548600000000063, 0.0001354169999999988, 0.0001356670000000025, 0.00013551399999999977, 0.00013515300000000244, 0.0001353610000000005, 0.00013542999999999888, 0.00013586099999999754, 0.00013493000000000185, 0.00013561200000000023, 0.00013561100000000076, 0.00013541700000000226, 0.00013534699999999747, 0.00013548600000000063]</msg>
<status status="PASS" starttime="20201030 18:31:40.864" endtime="20201030 18:31:40.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.860" endtime="20201030 18:31:40.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.872" endtime="20201030 18:31:40.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.870" endtime="20201030 18:31:40.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.869" endtime="20201030 18:31:40.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.509" endtime="20201030 18:31:40.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.508" endtime="20201030 18:31:40.892"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.901" endtime="20201030 18:31:40.921"></status>
</kw>
<msg timestamp="20201030 18:31:40.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.899" endtime="20201030 18:31:40.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.923" endtime="20201030 18:31:40.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.925" endtime="20201030 18:31:40.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.897" endtime="20201030 18:31:40.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.895" endtime="20201030 18:31:40.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.934" endtime="20201030 18:31:41.220"></status>
</kw>
<msg timestamp="20201030 18:31:41.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.933" endtime="20201030 18:31:41.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.224" endtime="20201030 18:31:41.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.233" endtime="20201030 18:31:41.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.930" endtime="20201030 18:31:41.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.928" endtime="20201030 18:31:41.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.239" level="INFO">${RESULT} = [{'diff': 0.00013598600000000113}, {'diff': 0.00013598600000000113}, {'diff': 0.0001363190000000028}, {'diff': 0.00013686099999999854}, {'diff': 0.0001365419999999999}, {'diff': 0.00013641600000000031...</msg>
<status status="PASS" starttime="20201030 18:31:41.236" endtime="20201030 18:31:41.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.244" level="INFO">${ACCURACY} = {'diff': [0.00013598600000000113, 0.00013598600000000113, 0.0001363190000000028, 0.00013686099999999854, 0.0001365419999999999, 0.00013641600000000031, 0.00013659699999999872, 0.00013640200000000074, ...</msg>
<status status="PASS" starttime="20201030 18:31:41.240" endtime="20201030 18:31:41.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.249" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.248" endtime="20201030 18:31:41.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.253" level="INFO">VALUE: [0.00013598600000000113, 0.00013598600000000113, 0.0001363190000000028, 0.00013686099999999854, 0.0001365419999999999, 0.00013641600000000031, 0.00013659699999999872, 0.00013640200000000074, 0.00013642999999999988, 0.00013684699999999897, 0.00013609699999999822, 0.0001365979999999982, 0.00013608399999999812, 0.0001369170000000003, 0.00013606999999999855, 0.00013679200000000016, 0.00013674999999999798, 0.00013622299999999782, 0.0001360970000000017, 0.00013665300000000047, 0.00013651400000000077, 0.000136555, 0.00013625000000000095, 0.0001362780000000001, 0.00013652800000000034, 0.00013608299999999865, 0.00013654100000000044, 0.00013597300000000104, 0.00013623599999999791, 0.00013666700000000004, 0.00013598599999999766, 0.00013680599999999973, 0.000135958999999998, 0.00013679200000000016, 0.00013658399999999862, 0.00013681899999999983, 0.00013640300000000022, 0.000136555, 0.0001365979999999982, 0.0001365000000000012, 0.00013672199999999884, 0.00013643099999999936, 0.00013676400000000102, 0.00013688900000000115, 0.00013677699999999765, 0.0001367910000000007, 0.00013638900000000065, 0.00013622199999999834, 0.00013623600000000138, 0.00013623700000000086]</msg>
<status status="PASS" starttime="20201030 18:31:41.251" endtime="20201030 18:31:41.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.246" endtime="20201030 18:31:41.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.258" endtime="20201030 18:31:41.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.257" endtime="20201030 18:31:41.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.255" endtime="20201030 18:31:41.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.893" endtime="20201030 18:31:41.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.893" endtime="20201030 18:31:41.279"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.288" endtime="20201030 18:31:41.308"></status>
</kw>
<msg timestamp="20201030 18:31:41.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.286" endtime="20201030 18:31:41.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.310" endtime="20201030 18:31:41.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.313" endtime="20201030 18:31:41.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.284" endtime="20201030 18:31:41.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.281" endtime="20201030 18:31:41.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.322" endtime="20201030 18:31:41.608"></status>
</kw>
<msg timestamp="20201030 18:31:41.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.320" endtime="20201030 18:31:41.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.612" endtime="20201030 18:31:41.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.620" endtime="20201030 18:31:41.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.317" endtime="20201030 18:31:41.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.316" endtime="20201030 18:31:41.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.627" level="INFO">${RESULT} = [{'diff': 0.00013790300000000172}, {'diff': 0.0001376940000000007}, {'diff': 0.00013726400000000152}, {'diff': 0.00013769500000000018}, {'diff': 0.00013708399999999912}, {'diff': 0.0001371530000000009...</msg>
<status status="PASS" starttime="20201030 18:31:41.624" endtime="20201030 18:31:41.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.631" level="INFO">${ACCURACY} = {'diff': [0.00013790300000000172, 0.0001376940000000007, 0.00013726400000000152, 0.00013769500000000018, 0.00013708399999999912, 0.00013715300000000097, 0.00013722299999999882, 0.00013709699999999922,...</msg>
<status status="PASS" starttime="20201030 18:31:41.628" endtime="20201030 18:31:41.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.635" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.634" endtime="20201030 18:31:41.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.638" level="INFO">VALUE: [0.00013790300000000172, 0.0001376940000000007, 0.00013726400000000152, 0.00013769500000000018, 0.00013708399999999912, 0.00013715300000000097, 0.00013722299999999882, 0.00013709699999999922, 0.00013738900000000165, 0.00013788899999999868, 0.00013697200000000256, 0.0001377780000000016, 0.00013690199999999778, 0.00013744499999999993, 0.00013690300000000072, 0.00013761199999999876, 0.00013688900000000115, 0.0001378330000000004, 0.00013777799999999812, 0.00013747299999999907, 0.00013751400000000177, 0.00013769500000000018, 0.00013729200000000066, 0.00013698600000000213, 0.0001372230000000023, 0.00013726400000000152, 0.0001373329999999999, 0.0001372780000000011, 0.00013791699999999782, 0.00013688900000000115, 0.00013740300000000122, 0.00013708299999999965, 0.0001369719999999991, 0.00013708300000000312, 0.0001378200000000003, 0.00013745800000000002, 0.0001373329999999999, 0.0001378749999999991, 0.00013757000000000005, 0.00013780600000000073, 0.00013749999999999873, 0.00013770899999999975, 0.0001373329999999999, 0.00013697299999999857, 0.00013719499999999968, 0.0001373329999999999, 0.00013780500000000126, 0.0001370000000000017, 0.00013774999999999898, 0.00013726400000000152]</msg>
<status status="PASS" starttime="20201030 18:31:41.636" endtime="20201030 18:31:41.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.632" endtime="20201030 18:31:41.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.643" endtime="20201030 18:31:41.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.641" endtime="20201030 18:31:41.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.640" endtime="20201030 18:31:41.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.280" endtime="20201030 18:31:41.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.279" endtime="20201030 18:31:41.663"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.672" endtime="20201030 18:31:41.693"></status>
</kw>
<msg timestamp="20201030 18:31:41.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.670" endtime="20201030 18:31:41.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.695" endtime="20201030 18:31:41.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.697" endtime="20201030 18:31:41.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.668" endtime="20201030 18:31:41.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.666" endtime="20201030 18:31:41.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.706" endtime="20201030 18:31:41.992"></status>
</kw>
<msg timestamp="20201030 18:31:41.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.705" endtime="20201030 18:31:41.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.996" endtime="20201030 18:31:42.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.004" endtime="20201030 18:31:42.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.702" endtime="20201030 18:31:42.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.700" endtime="20201030 18:31:42.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.010" level="INFO">${RESULT} = [{'diff': 0.00013794399999999749}, {'diff': 0.00013820800000000077}, {'diff': 0.00013890199999999978}, {'diff': 0.00013876399999999955}, {'diff': 0.00013876399999999955}, {'diff': 0.000138833000000001...</msg>
<status status="PASS" starttime="20201030 18:31:42.007" endtime="20201030 18:31:42.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.014" level="INFO">${ACCURACY} = {'diff': [0.00013794399999999749, 0.00013820800000000077, 0.00013890199999999978, 0.00013876399999999955, 0.00013876399999999955, 0.0001388330000000014, 0.0001387919999999987, 0.0001380000000000027, 0...</msg>
<status status="PASS" starttime="20201030 18:31:42.011" endtime="20201030 18:31:42.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.019" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.018" endtime="20201030 18:31:42.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.022" level="INFO">VALUE: [0.00013794399999999749, 0.00013820800000000077, 0.00013890199999999978, 0.00013876399999999955, 0.00013876399999999955, 0.0001388330000000014, 0.0001387919999999987, 0.0001380000000000027, 0.00013876399999999955, 0.00013840299999999875, 0.00013826400000000252, 0.000138652999999999, 0.00013877699999999965, 0.0001380269999999989, 0.00013858300000000115, 0.00013830600000000123, 0.00013802800000000184, 0.00013802799999999837, 0.00013866699999999857, 0.0001386810000000016, 0.0001379720000000001, 0.0001388750000000001, 0.0001387079999999978, 0.00013834799999999994, 0.00013865199999999953, 0.00013851400000000277, 0.00013790300000000172, 0.00013788899999999868, 0.00013849999999999973, 0.00013841699999999832, 0.00013872200000000084, 0.00013863899999999943, 0.00013820800000000077, 0.00013802800000000184, 0.00013822299999999982, 0.00013879200000000216, 0.0001385139999999993, 0.00013859700000000072, 0.00013880599999999826, 0.00013877799999999912, 0.00013799999999999923, 0.00013854099999999897, 0.0001388330000000014, 0.00013845899999999703, 0.00013834799999999994, 0.00013845800000000102, 0.00013840299999999875, 0.00013808300000000065, 0.00013808400000000012, 0.00013794400000000095]</msg>
<status status="PASS" starttime="20201030 18:31:42.020" endtime="20201030 18:31:42.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.015" endtime="20201030 18:31:42.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.027" endtime="20201030 18:31:42.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.026" endtime="20201030 18:31:42.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.024" endtime="20201030 18:31:42.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.664" endtime="20201030 18:31:42.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.664" endtime="20201030 18:31:42.048"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.056" endtime="20201030 18:31:42.077"></status>
</kw>
<msg timestamp="20201030 18:31:42.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.055" endtime="20201030 18:31:42.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.078" endtime="20201030 18:31:42.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.081" endtime="20201030 18:31:42.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.052" endtime="20201030 18:31:42.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.050" endtime="20201030 18:31:42.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.090" endtime="20201030 18:31:42.376"></status>
</kw>
<msg timestamp="20201030 18:31:42.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.088" endtime="20201030 18:31:42.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.380" endtime="20201030 18:31:42.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.388" endtime="20201030 18:31:42.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.086" endtime="20201030 18:31:42.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.084" endtime="20201030 18:31:42.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.394" level="INFO">${RESULT} = [{'diff': 0.0001396110000000013}, {'diff': 0.0001391529999999995}, {'diff': 0.00013931900000000233}, {'diff': 0.00013926300000000058}, {'diff': 0.00013926400000000005}, {'diff': 0.00013958299999999868...</msg>
<status status="PASS" starttime="20201030 18:31:42.391" endtime="20201030 18:31:42.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.399" level="INFO">${ACCURACY} = {'diff': [0.0001396110000000013, 0.0001391529999999995, 0.00013931900000000233, 0.00013926300000000058, 0.00013926400000000005, 0.00013958299999999868, 0.00013976400000000055, 0.00013981899999999936, ...</msg>
<status status="PASS" starttime="20201030 18:31:42.395" endtime="20201030 18:31:42.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.404" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.403" endtime="20201030 18:31:42.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.406" level="INFO">VALUE: [0.0001396110000000013, 0.0001391529999999995, 0.00013931900000000233, 0.00013926300000000058, 0.00013926400000000005, 0.00013958299999999868, 0.00013976400000000055, 0.00013981899999999936, 0.00013941600000000332, 0.0001393200000000018, 0.0001398469999999985, 0.00013893000000000238, 0.00013900000000000023, 0.00013968099999999914, 0.00013973600000000141, 0.00013967999999999967, 0.00013943100000000236, 0.0001394720000000016, 0.00013933299999999843, 0.00013962500000000086, 0.00013956999999999858, 0.00013926400000000005, 0.00013986100000000154, 0.00013886100000000054, 0.0001390139999999998, 0.00013894399999999849, 0.00013986099999999807, 0.00013942999999999942, 0.00013973599999999795, 0.00013961099999999782, 0.00013968099999999914, 0.00013966699999999957, 0.00013936100000000104, 0.00013922199999999788, 0.00013929099999999972, 0.00013930599999999876, 0.00013954099999999997, 0.0001388750000000001, 0.0001398750000000011, 0.00013981999999999883, 0.00013970899999999828, 0.00013974999999999752, 0.00013986099999999807, 0.00013961099999999782, 0.00013975000000000098, 0.0001393200000000018, 0.00013900000000000023, 0.00013891599999999935, 0.00013913899999999993, 0.00013975000000000098]</msg>
<status status="PASS" starttime="20201030 18:31:42.405" endtime="20201030 18:31:42.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.400" endtime="20201030 18:31:42.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.411" endtime="20201030 18:31:42.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.410" endtime="20201030 18:31:42.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.408" endtime="20201030 18:31:42.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.049" endtime="20201030 18:31:42.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.048" endtime="20201030 18:31:42.432"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.441" endtime="20201030 18:31:42.461"></status>
</kw>
<msg timestamp="20201030 18:31:42.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.439" endtime="20201030 18:31:42.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.463" endtime="20201030 18:31:42.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.465" endtime="20201030 18:31:42.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.436" endtime="20201030 18:31:42.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.434" endtime="20201030 18:31:42.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.474" endtime="20201030 18:31:42.760"></status>
</kw>
<msg timestamp="20201030 18:31:42.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.473" endtime="20201030 18:31:42.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.764" endtime="20201030 18:31:42.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.772" endtime="20201030 18:31:42.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.470" endtime="20201030 18:31:42.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.468" endtime="20201030 18:31:42.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.779" level="INFO">${RESULT} = [{'diff': 0.00014008300000000265}, {'diff': 0.00014054200000000044}, {'diff': 0.00014048699999999817}, {'diff': 0.00014081900000000036}, {'diff': 0.00014051399999999784}, {'diff': 0.000140735999999998...</msg>
<status status="PASS" starttime="20201030 18:31:42.776" endtime="20201030 18:31:42.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.783" level="INFO">${ACCURACY} = {'diff': [0.00014008300000000265, 0.00014054200000000044, 0.00014048699999999817, 0.00014081900000000036, 0.00014051399999999784, 0.00014073599999999895, 0.00014013900000000093, 0.0001405140000000013,...</msg>
<status status="PASS" starttime="20201030 18:31:42.780" endtime="20201030 18:31:42.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.787" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.786" endtime="20201030 18:31:42.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.790" level="INFO">VALUE: [0.00014008300000000265, 0.00014054200000000044, 0.00014048699999999817, 0.00014081900000000036, 0.00014051399999999784, 0.00014073599999999895, 0.00014013900000000093, 0.0001405140000000013, 0.00014004199999999994, 0.00013991699999999982, 0.00014002800000000037, 0.00014022200000000234, 0.00014022199999999888, 0.00013992999999999992, 0.00014052699999999793, 0.0001403339999999989, 0.0001407079999999998, 0.00013991699999999982, 0.00014066700000000057, 0.00014009699999999875, 0.00014059699999999925, 0.00014000000000000123, 0.00014007000000000255, 0.00013992999999999992, 0.00014036099999999857, 0.00013984700000000197, 0.00014013900000000093, 0.00013991699999999982, 0.00014083299999999993, 0.0001407079999999998, 0.0001403880000000017, 0.00014013900000000093, 0.00014041700000000032, 0.00014050000000000173, 0.00014049999999999827, 0.00014041599999999738, 0.00014058399999999915, 0.0001402079999999993, 0.00014002800000000037, 0.00013994399999999949, 0.00014012500000000136, 0.00014069400000000024, 0.0001400140000000008, 0.00013998600000000166, 0.00014004199999999994, 0.0001402920000000002, 0.0001405270000000014, 0.00014020899999999878, 0.00014077800000000112, 0.00014056999999999958]</msg>
<status status="PASS" starttime="20201030 18:31:42.788" endtime="20201030 18:31:42.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.784" endtime="20201030 18:31:42.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.795" endtime="20201030 18:31:42.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.793" endtime="20201030 18:31:42.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.792" endtime="20201030 18:31:42.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.433" endtime="20201030 18:31:42.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.432" endtime="20201030 18:31:42.815"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.824" endtime="20201030 18:31:42.846"></status>
</kw>
<msg timestamp="20201030 18:31:42.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.822" endtime="20201030 18:31:42.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.847" endtime="20201030 18:31:42.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.849" endtime="20201030 18:31:42.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.820" endtime="20201030 18:31:42.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.818" endtime="20201030 18:31:42.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.859" endtime="20201030 18:31:43.144"></status>
</kw>
<msg timestamp="20201030 18:31:43.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.857" endtime="20201030 18:31:43.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.148" endtime="20201030 18:31:43.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.156" endtime="20201030 18:31:43.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.854" endtime="20201030 18:31:43.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.853" endtime="20201030 18:31:43.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.163" level="INFO">${RESULT} = [{'diff': 0.00014091600000000135}, {'diff': 0.00014140300000000175}, {'diff': 0.00014174999999999952}, {'diff': 0.00014130499999999782}, {'diff': 0.0001408750000000021}, {'diff': 0.0001417359999999999...</msg>
<status status="PASS" starttime="20201030 18:31:43.160" endtime="20201030 18:31:43.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.167" level="INFO">${ACCURACY} = {'diff': [0.00014091600000000135, 0.00014140300000000175, 0.00014174999999999952, 0.00014130499999999782, 0.0001408750000000021, 0.00014173599999999995, 0.00014158300000000068, 0.00014130499999999782,...</msg>
<status status="PASS" starttime="20201030 18:31:43.164" endtime="20201030 18:31:43.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.171" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.170" endtime="20201030 18:31:43.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.175" level="INFO">VALUE: [0.00014091600000000135, 0.00014140300000000175, 0.00014174999999999952, 0.00014130499999999782, 0.0001408750000000021, 0.00014173599999999995, 0.00014158300000000068, 0.00014130499999999782, 0.0001414310000000009, 0.00014115200000000203, 0.00014087499999999864, 0.0001410270000000019, 0.00014137499999999914, 0.00014158400000000015, 0.00014166700000000157, 0.00014113899999999846, 0.00014095800000000006, 0.00014095800000000006, 0.00014144500000000046, 0.00014149999999999927, 0.00014104200000000094, 0.00014094499999999996, 0.00014190300000000225, 0.0001412080000000003, 0.00014137499999999914, 0.00014144500000000046, 0.00014122299999999935, 0.00014180499999999832, 0.00014157000000000058, 0.00014131900000000086, 0.0001413050000000013, 0.00014131900000000086, 0.00014151399999999884, 0.00014099999999999877, 0.00014155500000000154, 0.00014174999999999952, 0.00014155600000000101, 0.0001413189999999974, 0.00014174999999999952, 0.00014176400000000255, 0.00014126399999999859, 0.00014163900000000243, 0.00014151399999999884, 0.00014176399999999909, 0.000141137999999999, 0.00014093000000000092, 0.00014137499999999914, 0.00014152800000000187, 0.00014131999999999686, 0.0001411950000000002]</msg>
<status status="PASS" starttime="20201030 18:31:43.173" endtime="20201030 18:31:43.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.168" endtime="20201030 18:31:43.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.180" endtime="20201030 18:31:43.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.178" endtime="20201030 18:31:43.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.177" endtime="20201030 18:31:43.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.816" endtime="20201030 18:31:43.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.816" endtime="20201030 18:31:43.201"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.209" endtime="20201030 18:31:43.230"></status>
</kw>
<msg timestamp="20201030 18:31:43.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.208" endtime="20201030 18:31:43.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.232" endtime="20201030 18:31:43.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.234" endtime="20201030 18:31:43.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.205" endtime="20201030 18:31:43.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.203" endtime="20201030 18:31:43.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.243" endtime="20201030 18:31:43.527"></status>
</kw>
<msg timestamp="20201030 18:31:43.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.241" endtime="20201030 18:31:43.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.532" endtime="20201030 18:31:43.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.540" endtime="20201030 18:31:43.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.239" endtime="20201030 18:31:43.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.237" endtime="20201030 18:31:43.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.546" level="INFO">${RESULT} = [{'diff': 0.0001423059999999983}, {'diff': 0.0001418889999999992}, {'diff': 0.00014276400000000009}, {'diff': 0.00014233300000000143}, {'diff': 0.00014220900000000078}, {'diff': 0.00014256999999999811...</msg>
<status status="PASS" starttime="20201030 18:31:43.543" endtime="20201030 18:31:43.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.553" level="INFO">${ACCURACY} = {'diff': [0.0001423059999999983, 0.0001418889999999992, 0.00014276400000000009, 0.00014233300000000143, 0.00014220900000000078, 0.00014256999999999811, 0.00014258300000000168, 0.0001424019999999998, 0...</msg>
<status status="PASS" starttime="20201030 18:31:43.547" endtime="20201030 18:31:43.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.557" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.556" endtime="20201030 18:31:43.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.560" level="INFO">VALUE: [0.0001423059999999983, 0.0001418889999999992, 0.00014276400000000009, 0.00014233300000000143, 0.00014220900000000078, 0.00014256999999999811, 0.00014258300000000168, 0.0001424019999999998, 0.00014218099999999817, 0.00014233399999999743, 0.00014269399999999877, 0.00014251399999999984, 0.00014241699999999885, 0.00014209700000000075, 0.00014216599999999913, 0.00014275000000000052, 0.0001421249999999999, 0.00014248599999999723, 0.00014261100000000082, 0.00014255599999999854, 0.00014216599999999913, 0.0001423889999999997, 0.00014219399999999827, 0.00014233399999999743, 0.00014194500000000096, 0.00014234800000000047, 0.00014236100000000057, 0.00014283300000000193, 0.00014233300000000143, 0.00014287500000000064, 0.00014218000000000217, 0.00014251399999999984, 0.00014220799999999784, 0.00014225000000000002, 0.00014233299999999796, 0.00014201399999999934, 0.00014277799999999966, 0.00014233300000000143, 0.00014202800000000237, 0.00014244399999999852, 0.00014280600000000226, 0.00014257000000000158, 0.00014226399999999959, 0.00014232000000000133, 0.0001428059999999988, 0.00014273600000000095, 0.00014251399999999984, 0.00014255599999999854, 0.00014213900000000293, 0.00014199999999999977]</msg>
<status status="PASS" starttime="20201030 18:31:43.559" endtime="20201030 18:31:43.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.554" endtime="20201030 18:31:43.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.565" endtime="20201030 18:31:43.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.563" endtime="20201030 18:31:43.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.562" endtime="20201030 18:31:43.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.202" endtime="20201030 18:31:43.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.201" endtime="20201030 18:31:43.586"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.594" endtime="20201030 18:31:43.615"></status>
</kw>
<msg timestamp="20201030 18:31:43.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.593" endtime="20201030 18:31:43.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.616" endtime="20201030 18:31:43.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.619" endtime="20201030 18:31:43.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.590" endtime="20201030 18:31:43.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.588" endtime="20201030 18:31:43.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.628" endtime="20201030 18:31:43.915"></status>
</kw>
<msg timestamp="20201030 18:31:43.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.626" endtime="20201030 18:31:43.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.919" endtime="20201030 18:31:43.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.927" endtime="20201030 18:31:43.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.624" endtime="20201030 18:31:43.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.622" endtime="20201030 18:31:43.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.933" level="INFO">${RESULT} = [{'diff': 0.00014319399999999927}, {'diff': 0.00014344399999999952}, {'diff': 0.00014326400000000059}, {'diff': 0.00014351399999999737}, {'diff': 0.0001431669999999996}, {'diff': 0.0001431949999999987...</msg>
<status status="PASS" starttime="20201030 18:31:43.930" endtime="20201030 18:31:43.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.937" level="INFO">${ACCURACY} = {'diff': [0.00014319399999999927, 0.00014344399999999952, 0.00014326400000000059, 0.00014351399999999737, 0.0001431669999999996, 0.00014319499999999874, 0.00014286100000000107, 0.00014333300000000243,...</msg>
<status status="PASS" starttime="20201030 18:31:43.934" endtime="20201030 18:31:43.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.942" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.941" endtime="20201030 18:31:43.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.944" level="INFO">VALUE: [0.00014319399999999927, 0.00014344399999999952, 0.00014326400000000059, 0.00014351399999999737, 0.0001431669999999996, 0.00014319499999999874, 0.00014286100000000107, 0.00014333300000000243, 0.00014301400000000034, 0.00014363900000000096, 0.00014326400000000059, 0.00014337499999999767, 0.00014376400000000109, 0.00014294400000000249, 0.00014370799999999934, 0.00014306899999999914, 0.00014326399999999712, 0.00014313900000000046, 0.00014322200000000188, 0.00014383299999999946, 0.0001430829999999987, 0.00014290299999999978, 0.00014356999999999911, 0.00014320799999999884, 0.0001434020000000008, 0.00014333300000000243, 0.00014325000000000102, 0.0001432080000000023, 0.0001430829999999987, 0.00014381999999999937, 0.00014368099999999967, 0.00014313900000000046, 0.00014375000000000152, 0.00014306899999999914, 0.0001438189999999999, 0.00014390300000000078, 0.00014347199999999866, 0.00014355500000000007, 0.00014347199999999866, 0.0001429449999999985, 0.00014291700000000282, 0.00014355600000000301, 0.00014369399999999977, 0.00014370799999999934, 0.0001433890000000007, 0.00014380500000000032, 0.00014380500000000032, 0.0001438059999999998, 0.00014376400000000109, 0.0001429310000000024]</msg>
<status status="PASS" starttime="20201030 18:31:43.943" endtime="20201030 18:31:43.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.938" endtime="20201030 18:31:43.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.949" endtime="20201030 18:31:43.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.948" endtime="20201030 18:31:43.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.947" endtime="20201030 18:31:43.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.586" endtime="20201030 18:31:43.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.586" endtime="20201030 18:31:43.970"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.978" endtime="20201030 18:31:44.000"></status>
</kw>
<msg timestamp="20201030 18:31:44.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.977" endtime="20201030 18:31:44.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.002" endtime="20201030 18:31:44.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.004" endtime="20201030 18:31:44.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.974" endtime="20201030 18:31:44.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.972" endtime="20201030 18:31:44.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.013" endtime="20201030 18:31:44.300"></status>
</kw>
<msg timestamp="20201030 18:31:44.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:44.012" endtime="20201030 18:31:44.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:44.304" endtime="20201030 18:31:44.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.313" endtime="20201030 18:31:44.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.009" endtime="20201030 18:31:44.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.007" endtime="20201030 18:31:44.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.320" level="INFO">${RESULT} = [{'diff': 0.00014487500000000264}, {'diff': 0.00014405500000000057}, {'diff': 0.00014422299999999888}, {'diff': 0.00014429099999999778}, {'diff': 0.00014473599999999948}, {'diff': 0.000144417000000000...</msg>
<status status="PASS" starttime="20201030 18:31:44.317" endtime="20201030 18:31:44.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.324" level="INFO">${ACCURACY} = {'diff': [0.00014487500000000264, 0.00014405500000000057, 0.00014422299999999888, 0.00014429099999999778, 0.00014473599999999948, 0.00014441700000000085, 0.00014433299999999996, 0.00014425000000000202...</msg>
<status status="PASS" starttime="20201030 18:31:44.321" endtime="20201030 18:31:44.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.328" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.327" endtime="20201030 18:31:44.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.331" level="INFO">VALUE: [0.00014487500000000264, 0.00014405500000000057, 0.00014422299999999888, 0.00014429099999999778, 0.00014473599999999948, 0.00014441700000000085, 0.00014433299999999996, 0.00014425000000000202, 0.00014390300000000078, 0.00014419400000000027, 0.0001443060000000003, 0.00014443000000000095, 0.0001441670000000006, 0.0001441250000000019, 0.00014431899999999692, 0.0001446120000000023, 0.0001444999999999988, 0.0001443890000000017, 0.00014425000000000202, 0.00014457000000000012, 0.00014437499999999867, 0.00014448599999999923, 0.0001445549999999976, 0.00014482000000000037, 0.0001439860000000022, 0.00014442999999999748, 0.00014455500000000107, 0.0001441250000000019, 0.0001444999999999988, 0.00014405500000000057, 0.00014474999999999905, 0.00014473599999999948, 0.0001444999999999988, 0.0001448609999999996, 0.00014483300000000046, 0.00014455600000000055, 0.00014419400000000027, 0.000144138999999998, 0.00014461100000000282, 0.0001439449999999995, 0.0001439999999999983, 0.00014445800000000009, 0.00014452700000000193, 0.00014469400000000077, 0.0001439999999999983, 0.00014431999999999987, 0.0001439999999999983, 0.0001439860000000022, 0.0001440280000000009, 0.00014455500000000107]</msg>
<status status="PASS" starttime="20201030 18:31:44.329" endtime="20201030 18:31:44.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.325" endtime="20201030 18:31:44.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.337" endtime="20201030 18:31:44.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.335" endtime="20201030 18:31:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.334" endtime="20201030 18:31:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.971" endtime="20201030 18:31:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.970" endtime="20201030 18:31:44.357"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.366" endtime="20201030 18:31:44.387"></status>
</kw>
<msg timestamp="20201030 18:31:44.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.364" endtime="20201030 18:31:44.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.388" endtime="20201030 18:31:44.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.391" endtime="20201030 18:31:44.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.362" endtime="20201030 18:31:44.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.360" endtime="20201030 18:31:44.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.400" endtime="20201030 18:31:44.685"></status>
</kw>
<msg timestamp="20201030 18:31:44.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.398" endtime="20201030 18:31:44.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.689" endtime="20201030 18:31:44.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.697" endtime="20201030 18:31:44.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.396" endtime="20201030 18:31:44.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.394" endtime="20201030 18:31:44.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.704" level="INFO">${RESULT} = [{'diff': 0.0001456389999999995}, {'diff': 0.00014583300000000146}, {'diff': 0.00014497200000000016}, {'diff': 0.00014576399999999962}, {'diff': 0.00014577799999999919}, {'diff': 0.0001456390000000029...</msg>
<status status="PASS" starttime="20201030 18:31:44.701" endtime="20201030 18:31:44.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.709" level="INFO">${ACCURACY} = {'diff': [0.0001456389999999995, 0.00014583300000000146, 0.00014497200000000016, 0.00014576399999999962, 0.00014577799999999919, 0.00014563900000000296, 0.00014563900000000296, 0.00014561100000000035,...</msg>
<status status="PASS" starttime="20201030 18:31:44.705" endtime="20201030 18:31:44.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.713" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.712" endtime="20201030 18:31:44.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.715" level="INFO">VALUE: [0.0001456389999999995, 0.00014583300000000146, 0.00014497200000000016, 0.00014576399999999962, 0.00014577799999999919, 0.00014563900000000296, 0.00014563900000000296, 0.00014561100000000035, 0.00014572199999999744, 0.00014552699999999946, 0.0001455830000000012, 0.0001449029999999983, 0.00014524999999999955, 0.00014575000000000005, 0.00014548600000000023, 0.00014548600000000023, 0.00014548600000000023, 0.00014511099999999985, 0.0001456939999999983, 0.00014505500000000157, 0.00014484700000000003, 0.00014495900000000006, 0.00014497200000000016, 0.00014515200000000256, 0.00014520800000000084, 0.00014526399999999912, 0.0001450830000000007, 0.00014516699999999813, 0.0001449450000000005, 0.0001452220000000004, 0.00014509799999999975, 0.0001457220000000009, 0.00014552799999999894, 0.00014566699999999863, 0.00014567999999999873, 0.00014491699999999788, 0.00014547200000000066, 0.0001452220000000004, 0.00014576300000000014, 0.00014561100000000035, 0.00014497200000000016, 0.0001456939999999983, 0.00014533400000000044, 0.00014529199999999826, 0.0001453610000000001, 0.00014484700000000003, 0.0001454999999999998, 0.00014494400000000102, 0.00014542999999999848, 0.00014567999999999873]</msg>
<status status="PASS" starttime="20201030 18:31:44.714" endtime="20201030 18:31:44.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.709" endtime="20201030 18:31:44.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.720" endtime="20201030 18:31:44.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.719" endtime="20201030 18:31:44.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.718" endtime="20201030 18:31:44.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.358" endtime="20201030 18:31:44.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.358" endtime="20201030 18:31:44.741"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.750" endtime="20201030 18:31:44.771"></status>
</kw>
<msg timestamp="20201030 18:31:44.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.748" endtime="20201030 18:31:44.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.772" endtime="20201030 18:31:44.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.775" endtime="20201030 18:31:44.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.746" endtime="20201030 18:31:44.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.744" endtime="20201030 18:31:44.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.784" endtime="20201030 18:31:45.070"></status>
</kw>
<msg timestamp="20201030 18:31:45.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.782" endtime="20201030 18:31:45.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.074" endtime="20201030 18:31:45.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.082" endtime="20201030 18:31:45.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.779" endtime="20201030 18:31:45.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.778" endtime="20201030 18:31:45.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.088" level="INFO">${RESULT} = [{'diff': 0.00014615299999999956}, {'diff': 0.00014655600000000255}, {'diff': 0.00014597300000000063}, {'diff': 0.00014590300000000278}, {'diff': 0.00014643000000000295}, {'diff': 0.000146277000000000...</msg>
<status status="PASS" starttime="20201030 18:31:45.085" endtime="20201030 18:31:45.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.092" level="INFO">${ACCURACY} = {'diff': [0.00014615299999999956, 0.00014655600000000255, 0.00014597300000000063, 0.00014590300000000278, 0.00014643000000000295, 0.0001462770000000002, 0.0001460130000000004, 0.0001462220000000014, 0...</msg>
<status status="PASS" starttime="20201030 18:31:45.089" endtime="20201030 18:31:45.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.097" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.096" endtime="20201030 18:31:45.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.099" level="INFO">VALUE: [0.00014615299999999956, 0.00014655600000000255, 0.00014597300000000063, 0.00014590300000000278, 0.00014643000000000295, 0.0001462770000000002, 0.0001460130000000004, 0.0001462220000000014, 0.00014679199999999976, 0.00014597200000000116, 0.0001468610000000016, 0.00014611100000000085, 0.00014665300000000006, 0.00014587500000000017, 0.00014662500000000092, 0.0001465419999999995, 0.00014637500000000067, 0.00014641699999999938, 0.00014655599999999908, 0.00014665300000000006, 0.0001462770000000002, 0.0001466390000000005, 0.0001467220000000019, 0.00014676400000000062, 0.000146348000000001, 0.0001465969999999983, 0.00014625000000000055, 0.00014623600000000098, 0.0001459719999999977, 0.0001464029999999998, 0.00014677800000000019, 0.0001467770000000007, 0.00014588899999999974, 0.00014615299999999956, 0.00014675000000000105, 0.00014602699999999996, 0.0001465139999999969, 0.00014680599999999933, 0.00014649999999999733, 0.00014583300000000146, 0.00014616599999999966, 0.0001461939999999988, 0.00014597300000000063, 0.00014627799999999969, 0.00014679199999999976, 0.00014687500000000117, 0.0001464029999999998, 0.00014590199999999984, 0.0001467220000000019, 0.0001468060000000028]</msg>
<status status="PASS" starttime="20201030 18:31:45.098" endtime="20201030 18:31:45.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.093" endtime="20201030 18:31:45.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.109" endtime="20201030 18:31:45.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.107" endtime="20201030 18:31:45.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.106" endtime="20201030 18:31:45.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.742" endtime="20201030 18:31:45.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.742" endtime="20201030 18:31:45.129"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.138" endtime="20201030 18:31:45.160"></status>
</kw>
<msg timestamp="20201030 18:31:45.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.137" endtime="20201030 18:31:45.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.161" endtime="20201030 18:31:45.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.164" endtime="20201030 18:31:45.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.134" endtime="20201030 18:31:45.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.132" endtime="20201030 18:31:45.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.173" endtime="20201030 18:31:45.459"></status>
</kw>
<msg timestamp="20201030 18:31:45.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:45.171" endtime="20201030 18:31:45.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:45.463" endtime="20201030 18:31:45.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.471" endtime="20201030 18:31:45.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.169" endtime="20201030 18:31:45.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.167" endtime="20201030 18:31:45.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.477" level="INFO">${RESULT} = [{'diff': 0.00014777799999999772}, {'diff': 0.00014762499999999845}, {'diff': 0.00014711200000000133}, {'diff': 0.00014779100000000128}, {'diff': 0.000147042}, {'diff': 0.0001472220000000024}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:31:45.474" endtime="20201030 18:31:45.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.481" level="INFO">${ACCURACY} = {'diff': [0.00014777799999999772, 0.00014762499999999845, 0.00014711200000000133, 0.00014779100000000128, 0.000147042, 0.0001472220000000024, 0.00014768000000000073, 0.00014711099999999838, 0.00014734...</msg>
<status status="PASS" starttime="20201030 18:31:45.478" endtime="20201030 18:31:45.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.486" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.485" endtime="20201030 18:31:45.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.489" level="INFO">VALUE: [0.00014777799999999772, 0.00014762499999999845, 0.00014711200000000133, 0.00014779100000000128, 0.000147042, 0.0001472220000000024, 0.00014768000000000073, 0.00014711099999999838, 0.00014734700000000253, 0.0001469870000000012, 0.0001473199999999994, 0.0001476529999999976, 0.0001475969999999993, 0.00014738900000000124, 0.00014779200000000076, 0.00014748599999999876, 0.00014691699999999988, 0.0001474030000000008, 0.00014777800000000119, 0.00014705599999999958, 0.0001474719999999992, 0.00014729200000000026, 0.00014723600000000198, 0.0001468749999999977, 0.00014720799999999937, 0.00014683300000000246, 0.00014770799999999987, 0.0001468480000000015, 0.00014708400000000219, 0.00014702800000000044, 0.00014773600000000248, 0.00014730599999999983, 0.00014716700000000013, 0.0001469580000000026, 0.00014752799999999747, 0.00014720899999999884, 0.0001473199999999994, 0.00014720799999999937, 0.00014740299999999734, 0.00014734799999999854, 0.00014754100000000103, 0.00014695799999999912, 0.00014747299999999866, 0.0001475139999999979, 0.00014738899999999777, 0.00014691699999999988, 0.00014726400000000112, 0.00014722199999999894, 0.00014732000000000287, 0.0001469030000000003]</msg>
<status status="PASS" starttime="20201030 18:31:45.487" endtime="20201030 18:31:45.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.482" endtime="20201030 18:31:45.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.494" endtime="20201030 18:31:45.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.493" endtime="20201030 18:31:45.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.492" endtime="20201030 18:31:45.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.130" endtime="20201030 18:31:45.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.130" endtime="20201030 18:31:45.515"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.524" endtime="20201030 18:31:45.544"></status>
</kw>
<msg timestamp="20201030 18:31:45.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.522" endtime="20201030 18:31:45.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.546" endtime="20201030 18:31:45.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.548" endtime="20201030 18:31:45.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.519" endtime="20201030 18:31:45.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.517" endtime="20201030 18:31:45.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.557" endtime="20201030 18:31:45.843"></status>
</kw>
<msg timestamp="20201030 18:31:45.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.556" endtime="20201030 18:31:45.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.847" endtime="20201030 18:31:45.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.855" endtime="20201030 18:31:45.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.553" endtime="20201030 18:31:45.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.552" endtime="20201030 18:31:45.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.861" level="INFO">${RESULT} = [{'diff': 0.00014816700000000113}, {'diff': 0.00014818099999999723}, {'diff': 0.00014798600000000273}, {'diff': 0.00014820899999999984}, {'diff': 0.00014815300000000156}, {'diff': 0.000148319000000000...</msg>
<status status="PASS" starttime="20201030 18:31:45.858" endtime="20201030 18:31:45.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.866" level="INFO">${ACCURACY} = {'diff': [0.00014816700000000113, 0.00014818099999999723, 0.00014798600000000273, 0.00014820899999999984, 0.00014815300000000156, 0.00014831900000000092, 0.000148139000000002, 0.00014870800000000087, ...</msg>
<status status="PASS" starttime="20201030 18:31:45.862" endtime="20201030 18:31:45.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.871" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.870" endtime="20201030 18:31:45.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.873" level="INFO">VALUE: [0.00014816700000000113, 0.00014818099999999723, 0.00014798600000000273, 0.00014820899999999984, 0.00014815300000000156, 0.00014831900000000092, 0.000148139000000002, 0.00014870800000000087, 0.00014822199999999994, 0.00014837500000000267, 0.00014829200000000126, 0.0001480969999999998, 0.000148526999999999, 0.00014793100000000045, 0.0001479719999999997, 0.00014877799999999872, 0.00014841700000000138, 0.0001482359999999995, 0.00014784699999999956, 0.00014876400000000262, 0.00014852800000000194, 0.00014884700000000056, 0.00014858300000000074, 0.00014849999999999933, 0.00014838899999999877, 0.00014843100000000095, 0.00014858299999999727, 0.00014784699999999956, 0.0001485420000000015, 0.00014870900000000034, 0.00014820800000000037, 0.00014883299999999752, 0.0001485139999999989, 0.00014863899999999902, 0.00014797200000000316, 0.00014781900000000042, 0.00014877800000000219, 0.00014804199999999754, 0.000147833, 0.00014865300000000206, 0.0001481940000000008, 0.0001479719999999997, 0.0001480969999999998, 0.00014877800000000219, 0.0001482919999999978, 0.00014852799999999847, 0.00014827699999999874, 0.00014827799999999822, 0.00014816700000000113, 0.0001487229999999999]</msg>
<status status="PASS" starttime="20201030 18:31:45.872" endtime="20201030 18:31:45.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.867" endtime="20201030 18:31:45.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.878" endtime="20201030 18:31:45.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.877" endtime="20201030 18:31:45.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.875" endtime="20201030 18:31:45.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.516" endtime="20201030 18:31:45.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.515" endtime="20201030 18:31:45.899"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.907" endtime="20201030 18:31:45.928"></status>
</kw>
<msg timestamp="20201030 18:31:45.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.906" endtime="20201030 18:31:45.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.930" endtime="20201030 18:31:45.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.932" endtime="20201030 18:31:45.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.903" endtime="20201030 18:31:45.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.901" endtime="20201030 18:31:45.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.941" endtime="20201030 18:31:46.228"></status>
</kw>
<msg timestamp="20201030 18:31:46.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:45.940" endtime="20201030 18:31:46.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:46.233" endtime="20201030 18:31:46.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.241" endtime="20201030 18:31:46.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.937" endtime="20201030 18:31:46.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.935" endtime="20201030 18:31:46.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.248" level="INFO">${RESULT} = [{'diff': 0.0001494169999999989}, {'diff': 0.00014968099999999873}, {'diff': 0.00014894500000000102}, {'diff': 0.00014918099999999823}, {'diff': 0.0001496659999999997}, {'diff': 0.00014958399999999775...</msg>
<status status="PASS" starttime="20201030 18:31:46.245" endtime="20201030 18:31:46.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.252" level="INFO">${ACCURACY} = {'diff': [0.0001494169999999989, 0.00014968099999999873, 0.00014894500000000102, 0.00014918099999999823, 0.0001496659999999997, 0.00014958399999999775, 0.0001497919999999993, 0.0001493469999999976, 0....</msg>
<status status="PASS" starttime="20201030 18:31:46.249" endtime="20201030 18:31:46.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.256" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.255" endtime="20201030 18:31:46.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.259" level="INFO">VALUE: [0.0001494169999999989, 0.00014968099999999873, 0.00014894500000000102, 0.00014918099999999823, 0.0001496659999999997, 0.00014958399999999775, 0.0001497919999999993, 0.0001493469999999976, 0.00014938899999999977, 0.0001495970000000013, 0.00014912499999999995, 0.00014972200000000144, 0.00014886100000000013, 0.00014950000000000033, 0.0001495970000000013, 0.00014962500000000045, 0.00014893000000000198, 0.00014936099999999716, 0.00014902800000000244, 0.00014920900000000084, 0.00014938899999999977, 0.0001495139999999999, 0.00014930600000000183, 0.00014912499999999995, 0.0001491659999999992, 0.00014945799999999815, 0.00014902800000000244, 0.0001495559999999986, 0.0001497909999999998, 0.00014968099999999873, 0.0001489299999999985, 0.00014884700000000056, 0.0001494169999999989, 0.00014930499999999888, 0.00014967999999999926, 0.00014922199999999747, 0.0001494169999999989, 0.000148833000000001, 0.00014886100000000013, 0.00014948600000000076, 0.00014908299999999777, 0.00014913800000000005, 0.00014952799999999947, 0.00014948600000000076, 0.00014925000000000008, 0.0001490139999999994, 0.0001489299999999985, 0.00014922200000000094, 0.0001492360000000005, 0.00014926400000000312]</msg>
<status status="PASS" starttime="20201030 18:31:46.257" endtime="20201030 18:31:46.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.253" endtime="20201030 18:31:46.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.264" endtime="20201030 18:31:46.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.262" endtime="20201030 18:31:46.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.261" endtime="20201030 18:31:46.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.900" endtime="20201030 18:31:46.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.899" endtime="20201030 18:31:46.285"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.293" endtime="20201030 18:31:46.315"></status>
</kw>
<msg timestamp="20201030 18:31:46.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.292" endtime="20201030 18:31:46.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.317" endtime="20201030 18:31:46.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.319" endtime="20201030 18:31:46.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.289" endtime="20201030 18:31:46.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.287" endtime="20201030 18:31:46.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.328" endtime="20201030 18:31:46.614"></status>
</kw>
<msg timestamp="20201030 18:31:46.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.327" endtime="20201030 18:31:46.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.618" endtime="20201030 18:31:46.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.626" endtime="20201030 18:31:46.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.324" endtime="20201030 18:31:46.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.323" endtime="20201030 18:31:46.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.633" level="INFO">${RESULT} = [{'diff': 0.00014993099999999898}, {'diff': 0.00015043099999999948}, {'diff': 0.00015022199999999847}, {'diff': 0.00015038900000000077}, {'diff': 0.00015020900000000184}, {'diff': 0.000150721999999998...</msg>
<status status="PASS" starttime="20201030 18:31:46.630" endtime="20201030 18:31:46.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.637" level="INFO">${ACCURACY} = {'diff': [0.00014993099999999898, 0.00015043099999999948, 0.00015022199999999847, 0.00015038900000000077, 0.00015020900000000184, 0.00015072199999999897, 0.00015022199999999847, 0.00015083299999999952...</msg>
<status status="PASS" starttime="20201030 18:31:46.634" endtime="20201030 18:31:46.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.641" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.640" endtime="20201030 18:31:46.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.644" level="INFO">VALUE: [0.00014993099999999898, 0.00015043099999999948, 0.00015022199999999847, 0.00015038900000000077, 0.00015020900000000184, 0.00015072199999999897, 0.00015022199999999847, 0.00015083299999999952, 0.00015090300000000084, 0.00015034800000000154, 0.00015027799999999675, 0.00015086099999999866, 0.00015008399999999825, 0.00015072200000000244, 0.00015004100000000006, 0.00015016700000000313, 0.00015002799999999997, 0.00015054100000000056, 0.00014986099999999766, 0.00014991599999999994, 0.00015084700000000256, 0.00015002799999999997, 0.00015054200000000004, 0.0001500140000000004, 0.00015002799999999997, 0.0001499299999999995, 0.00015009800000000129, 0.0001502499999999976, 0.00015027800000000022, 0.00015058299999999927, 0.00015072199999999897, 0.0001505409999999971, 0.00015030499999999988, 0.00015084799999999857, 0.00014990299999999984, 0.0001501940000000028, 0.00015063900000000102, 0.0001504729999999982, 0.00015054200000000004, 0.00015002799999999997, 0.00015013900000000052, 0.00014998600000000126, 0.000149833000000002, 0.0001499859999999978, 0.00014993000000000298, 0.000150527999999997, 0.00014994399999999908, 0.00015004199999999607, 0.0001503059999999959, 0.00014990299999999984]</msg>
<status status="PASS" starttime="20201030 18:31:46.642" endtime="20201030 18:31:46.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.638" endtime="20201030 18:31:46.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.649" endtime="20201030 18:31:46.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.648" endtime="20201030 18:31:46.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.647" endtime="20201030 18:31:46.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.286" endtime="20201030 18:31:46.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.285" endtime="20201030 18:31:46.670"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.679" endtime="20201030 18:31:46.700"></status>
</kw>
<msg timestamp="20201030 18:31:46.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.677" endtime="20201030 18:31:46.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.701" endtime="20201030 18:31:46.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.704" endtime="20201030 18:31:46.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.675" endtime="20201030 18:31:46.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.673" endtime="20201030 18:31:46.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.713" endtime="20201030 18:31:46.999"></status>
</kw>
<msg timestamp="20201030 18:31:47.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.711" endtime="20201030 18:31:47.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.003" endtime="20201030 18:31:47.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.011" endtime="20201030 18:31:47.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.709" endtime="20201030 18:31:47.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.707" endtime="20201030 18:31:47.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.017" level="INFO">${RESULT} = [{'diff': 0.0001509300000000005}, {'diff': 0.0001515560000000006}, {'diff': 0.00015179199999999782}, {'diff': 0.00015170899999999987}, {'diff': 0.00015143100000000048}, {'diff': 0.00015162499999999898...</msg>
<status status="PASS" starttime="20201030 18:31:47.014" endtime="20201030 18:31:47.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.025" level="INFO">${ACCURACY} = {'diff': [0.0001509300000000005, 0.0001515560000000006, 0.00015179199999999782, 0.00015170899999999987, 0.00015143100000000048, 0.00015162499999999898, 0.0001512079999999999, 0.00015113900000000152, 0...</msg>
<status status="PASS" starttime="20201030 18:31:47.018" endtime="20201030 18:31:47.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.029" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.028" endtime="20201030 18:31:47.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.032" level="INFO">VALUE: [0.0001509300000000005, 0.0001515560000000006, 0.00015179199999999782, 0.00015170899999999987, 0.00015143100000000048, 0.00015162499999999898, 0.0001512079999999999, 0.00015113900000000152, 0.00015111100000000238, 0.00015172199999999997, 0.00015109799999999882, 0.00015108399999999925, 0.00015095899999999912, 0.00015140300000000134, 0.00015119400000000033, 0.00015158399999999975, 0.0001517920000000013, 0.0001511109999999989, 0.00015086100000000213, 0.0001512360000000025, 0.00015154200000000104, 0.00015154200000000104, 0.0001509019999999979, 0.00015122199999999947, 0.00015159699999999984, 0.00015159699999999984, 0.00015141699999999744, 0.0001511109999999989, 0.00015108299999999977, 0.00015165200000000212, 0.00015120900000000284, 0.00015100000000000183, 0.00015147199999999972, 0.00015151399999999843, 0.00015104200000000054, 0.0001509590000000026, 0.00015090299999999737, 0.00015090299999999737, 0.00015122200000000294, 0.00015166700000000116, 0.0001513889999999983, 0.00015172199999999997, 0.00015172199999999997, 0.00015122199999999947, 0.00015118100000000023, 0.0001517499999999991, 0.0001510279999999975, 0.00015129199999999732, 0.00015140299999999787, 0.00015126400000000165]</msg>
<status status="PASS" starttime="20201030 18:31:47.030" endtime="20201030 18:31:47.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.026" endtime="20201030 18:31:47.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.036" endtime="20201030 18:31:47.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.035" endtime="20201030 18:31:47.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.034" endtime="20201030 18:31:47.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.671" endtime="20201030 18:31:47.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.671" endtime="20201030 18:31:47.057"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.066" endtime="20201030 18:31:47.087"></status>
</kw>
<msg timestamp="20201030 18:31:47.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.064" endtime="20201030 18:31:47.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.088" endtime="20201030 18:31:47.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.091" endtime="20201030 18:31:47.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.062" endtime="20201030 18:31:47.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.060" endtime="20201030 18:31:47.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.100" endtime="20201030 18:31:47.387"></status>
</kw>
<msg timestamp="20201030 18:31:47.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.098" endtime="20201030 18:31:47.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.392" endtime="20201030 18:31:47.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.400" endtime="20201030 18:31:47.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.096" endtime="20201030 18:31:47.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.094" endtime="20201030 18:31:47.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.406" level="INFO">${RESULT} = [{'diff': 0.00015220799999999743}, {'diff': 0.00015286100000000066}, {'diff': 0.00015241600000000244}, {'diff': 0.00015259700000000084}, {'diff': 0.00015272200000000097}, {'diff': 0.000152528000000002...</msg>
<status status="PASS" starttime="20201030 18:31:47.403" endtime="20201030 18:31:47.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.410" level="INFO">${ACCURACY} = {'diff': [0.00015220799999999743, 0.00015286100000000066, 0.00015241600000000244, 0.00015259700000000084, 0.00015272200000000097, 0.00015252800000000247, 0.00015240300000000234, 0.0001526669999999987,...</msg>
<status status="PASS" starttime="20201030 18:31:47.407" endtime="20201030 18:31:47.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.415" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.414" endtime="20201030 18:31:47.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.417" level="INFO">VALUE: [0.00015220799999999743, 0.00015286100000000066, 0.00015241600000000244, 0.00015259700000000084, 0.00015272200000000097, 0.00015252800000000247, 0.00015240300000000234, 0.0001526669999999987, 0.00015208300000000077, 0.00015241699999999844, 0.00015194400000000108, 0.00015255500000000213, 0.00015284699999999762, 0.0001518470000000001, 0.00015265199999999965, 0.0001521530000000021, 0.00015262499999999998, 0.000152527999999999, 0.00015227699999999927, 0.0001518470000000001, 0.00015242999999999854, 0.00015263899999999955, 0.00015200000000000283, 0.0001521669999999982, 0.000152527999999999, 0.00015272200000000097, 0.00015194500000000055, 0.0001520270000000025, 0.00015247200000000072, 0.00015218100000000123, 0.00015190200000000237, 0.0001527219999999975, 0.00015216700000000166, 0.00015216599999999872, 0.0001522080000000009, 0.00015270900000000087, 0.00015234800000000007, 0.00015266700000000216, 0.00015194400000000108, 0.00015251399999999943, 0.00015240299999999887, 0.00015273600000000054, 0.00015265299999999912, 0.00015258400000000075, 0.0001526110000000004, 0.00015242999999999854, 0.0001519859999999998, 0.0001526669999999987, 0.00015240299999999887, 0.00015194400000000108]</msg>
<status status="PASS" starttime="20201030 18:31:47.416" endtime="20201030 18:31:47.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.411" endtime="20201030 18:31:47.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.422" endtime="20201030 18:31:47.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.421" endtime="20201030 18:31:47.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.419" endtime="20201030 18:31:47.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.058" endtime="20201030 18:31:47.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.057" endtime="20201030 18:31:47.443"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.452" endtime="20201030 18:31:47.473"></status>
</kw>
<msg timestamp="20201030 18:31:47.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.450" endtime="20201030 18:31:47.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.475" endtime="20201030 18:31:47.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.477" endtime="20201030 18:31:47.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.447" endtime="20201030 18:31:47.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.445" endtime="20201030 18:31:47.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.487" endtime="20201030 18:31:47.772"></status>
</kw>
<msg timestamp="20201030 18:31:47.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.485" endtime="20201030 18:31:47.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.776" endtime="20201030 18:31:47.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.784" endtime="20201030 18:31:47.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.482" endtime="20201030 18:31:47.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.481" endtime="20201030 18:31:47.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.790" level="INFO">${RESULT} = [{'diff': 0.0001531120000000004}, {'diff': 0.0001536799999999998}, {'diff': 0.00015330499999999941}, {'diff': 0.0001532500000000006}, {'diff': 0.00015347200000000172}, {'diff': 0.00015348700000000076}...</msg>
<status status="PASS" starttime="20201030 18:31:47.787" endtime="20201030 18:31:47.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.794" level="INFO">${ACCURACY} = {'diff': [0.0001531120000000004, 0.0001536799999999998, 0.00015330499999999941, 0.0001532500000000006, 0.00015347200000000172, 0.00015348700000000076, 0.00015354200000000304, 0.00015341599999999997, 0...</msg>
<status status="PASS" starttime="20201030 18:31:47.791" endtime="20201030 18:31:47.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.799" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.798" endtime="20201030 18:31:47.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.801" level="INFO">VALUE: [0.0001531120000000004, 0.0001536799999999998, 0.00015330499999999941, 0.0001532500000000006, 0.00015347200000000172, 0.00015348700000000076, 0.00015354200000000304, 0.00015341599999999997, 0.0001535410000000001, 0.0001537639999999972, 0.00015311099999999744, 0.00015363800000000108, 0.00015372200000000197, 0.00015306899999999873, 0.0001531110000000009, 0.0001537500000000011, 0.00015373600000000154, 0.0001530279999999995, 0.00015330499999999941, 0.00015384699999999862, 0.00015327799999999975, 0.00015327799999999975, 0.00015308300000000177, 0.0001528889999999998, 0.0001537089999999984, 0.00015348599999999782, 0.0001530279999999995, 0.000153528, 0.00015373599999999807, 0.00015341699999999944, 0.0001538470000000021, 0.0001530409999999996, 0.00015359700000000184, 0.00015377800000000025, 0.00015338899999999683, 0.0001530279999999995, 0.0001532080000000019, 0.00015379199999999982, 0.00015372200000000197, 0.00015329099999999984, 0.00015370799999999893, 0.00015323600000000104, 0.00015390199999999743, 0.0001536669999999997, 0.00015357000000000218, 0.00015295799999999818, 0.0001538059999999994, 0.00015341699999999597, 0.0001532359999999941, 0.00015366699999999622]</msg>
<status status="PASS" starttime="20201030 18:31:47.800" endtime="20201030 18:31:47.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.795" endtime="20201030 18:31:47.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.807" endtime="20201030 18:31:47.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.805" endtime="20201030 18:31:47.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.804" endtime="20201030 18:31:47.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.444" endtime="20201030 18:31:47.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.443" endtime="20201030 18:31:47.828"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.836" endtime="20201030 18:31:47.857"></status>
</kw>
<msg timestamp="20201030 18:31:47.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.835" endtime="20201030 18:31:47.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.859" endtime="20201030 18:31:47.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.861" endtime="20201030 18:31:47.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.832" endtime="20201030 18:31:47.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.830" endtime="20201030 18:31:47.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.870" endtime="20201030 18:31:48.155"></status>
</kw>
<msg timestamp="20201030 18:31:48.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.869" endtime="20201030 18:31:48.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.159" endtime="20201030 18:31:48.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.167" endtime="20201030 18:31:48.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.866" endtime="20201030 18:31:48.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.865" endtime="20201030 18:31:48.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.174" level="INFO">${RESULT} = [{'diff': 0.0001548470000000031}, {'diff': 0.0001539730000000017}, {'diff': 0.00015405500000000016}, {'diff': 0.00015465299999999765}, {'diff': 0.00015404200000000007}, {'diff': 0.0001547219999999995}...</msg>
<status status="PASS" starttime="20201030 18:31:48.171" endtime="20201030 18:31:48.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.179" level="INFO">${ACCURACY} = {'diff': [0.0001548470000000031, 0.0001539730000000017, 0.00015405500000000016, 0.00015465299999999765, 0.00015404200000000007, 0.0001547219999999995, 0.00015386199999999767, 0.00015473600000000254, 0...</msg>
<status status="PASS" starttime="20201030 18:31:48.175" endtime="20201030 18:31:48.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.183" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.182" endtime="20201030 18:31:48.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.186" level="INFO">VALUE: [0.0001548470000000031, 0.0001539730000000017, 0.00015405500000000016, 0.00015465299999999765, 0.00015404200000000007, 0.0001547219999999995, 0.00015386199999999767, 0.00015473600000000254, 0.00015391699999999994, 0.0001540280000000005, 0.0001547089999999994, 0.0001543609999999987, 0.00015398700000000126, 0.0001545829999999998, 0.0001538890000000008, 0.0001540829999999993, 0.0001540829999999993, 0.00015427799999999728, 0.0001546379999999986, 0.00015459699999999937, 0.00015459699999999937, 0.0001547639999999982, 0.00015473599999999907, 0.00015420799999999943, 0.0001540829999999993, 0.00015390199999999743, 0.0001540410000000006, 0.00015440199999999793, 0.00015473599999999907, 0.0001539029999999969, 0.0001540410000000006, 0.0001540549999999967, 0.00015440300000000087, 0.0001540280000000005, 0.00015458399999999928, 0.00015448599999999882, 0.00015468100000000026, 0.00015400000000000136, 0.00015416600000000072, 0.00015416600000000072, 0.00015398599999999832, 0.0001547219999999995, 0.00015455600000000014, 0.000154221999999999, 0.0001543609999999987, 0.00015391699999999994, 0.00015454200000000057, 0.00015456900000000023, 0.0001541670000000002, 0.00015412500000000148]</msg>
<status status="PASS" starttime="20201030 18:31:48.184" endtime="20201030 18:31:48.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.180" endtime="20201030 18:31:48.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.191" endtime="20201030 18:31:48.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.189" endtime="20201030 18:31:48.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.188" endtime="20201030 18:31:48.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.829" endtime="20201030 18:31:48.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.828" endtime="20201030 18:31:48.211"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.220" endtime="20201030 18:31:48.241"></status>
</kw>
<msg timestamp="20201030 18:31:48.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.219" endtime="20201030 18:31:48.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.243" endtime="20201030 18:31:48.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.245" endtime="20201030 18:31:48.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.216" endtime="20201030 18:31:48.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.214" endtime="20201030 18:31:48.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.254" endtime="20201030 18:31:48.542"></status>
</kw>
<msg timestamp="20201030 18:31:48.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.253" endtime="20201030 18:31:48.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.546" endtime="20201030 18:31:48.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.554" endtime="20201030 18:31:48.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.250" endtime="20201030 18:31:48.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.248" endtime="20201030 18:31:48.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.560" level="INFO">${RESULT} = [{'diff': 0.00015563899999999908}, {'diff': 0.000155222}, {'diff': 0.00015502799999999803}, {'diff': 0.00015506899999999726}, {'diff': 0.00015530599999999742}, {'diff': 0.00015518100000000076}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:31:48.557" endtime="20201030 18:31:48.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.565" level="INFO">${ACCURACY} = {'diff': [0.00015563899999999908, 0.000155222, 0.00015502799999999803, 0.00015506899999999726, 0.00015530599999999742, 0.00015518100000000076, 0.00015559700000000037, 0.00015495800000000018, 0.0001548...</msg>
<status status="PASS" starttime="20201030 18:31:48.561" endtime="20201030 18:31:48.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.569" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.568" endtime="20201030 18:31:48.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.572" level="INFO">VALUE: [0.00015563899999999908, 0.000155222, 0.00015502799999999803, 0.00015506899999999726, 0.00015530599999999742, 0.00015518100000000076, 0.00015559700000000037, 0.00015495800000000018, 0.00015488899999999833, 0.00015544500000000058, 0.00015531900000000098, 0.0001554029999999984, 0.00015481900000000048, 0.0001553890000000023, 0.00015477700000000177, 0.0001550280000000015, 0.00015569500000000083, 0.00015577800000000225, 0.00015501299999999898, 0.0001554440000000011, 0.00015544500000000058, 0.00015511099999999944, 0.00015495800000000018, 0.0001557639999999992, 0.00015483300000000005, 0.00015556999999999724, 0.00015537500000000273, 0.00015556900000000123, 0.00015556900000000123, 0.00015519400000000086, 0.00015511099999999944, 0.0001557639999999992, 0.00015538899999999883, 0.00015576400000000268, 0.00015570899999999693, 0.0001557220000000005, 0.00015563899999999908, 0.00015559700000000037, 0.0001554440000000011, 0.00015513899999999858, 0.00015563899999999908, 0.00015530599999999742, 0.00015501399999999846, 0.00015562499999999951, 0.00015502699999999855, 0.00015513899999999858, 0.00015577799999999878, 0.00015541699999999797, 0.0001555700000000007, 0.00015562499999999951]</msg>
<status status="PASS" starttime="20201030 18:31:48.570" endtime="20201030 18:31:48.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.565" endtime="20201030 18:31:48.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.576" endtime="20201030 18:31:48.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.575" endtime="20201030 18:31:48.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.574" endtime="20201030 18:31:48.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.212" endtime="20201030 18:31:48.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.212" endtime="20201030 18:31:48.597"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.606" endtime="20201030 18:31:48.628"></status>
</kw>
<msg timestamp="20201030 18:31:48.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.604" endtime="20201030 18:31:48.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.629" endtime="20201030 18:31:48.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.632" endtime="20201030 18:31:48.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.602" endtime="20201030 18:31:48.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.599" endtime="20201030 18:31:48.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.641" endtime="20201030 18:31:48.927"></status>
</kw>
<msg timestamp="20201030 18:31:48.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.639" endtime="20201030 18:31:48.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.931" endtime="20201030 18:31:48.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.939" endtime="20201030 18:31:48.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.637" endtime="20201030 18:31:48.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.635" endtime="20201030 18:31:48.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.946" level="INFO">${RESULT} = [{'diff': 0.00015659800000000085}, {'diff': 0.00015633299999999808}, {'diff': 0.00015633299999999808}, {'diff': 0.00015672199999999803}, {'diff': 0.00015615299999999915}, {'diff': 0.000156388999999999...</msg>
<status status="PASS" starttime="20201030 18:31:48.943" endtime="20201030 18:31:48.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.950" level="INFO">${ACCURACY} = {'diff': [0.00015659800000000085, 0.00015633299999999808, 0.00015633299999999808, 0.00015672199999999803, 0.00015615299999999915, 0.00015638899999999983, 0.0001561670000000022, 0.00015615199999999968,...</msg>
<status status="PASS" starttime="20201030 18:31:48.947" endtime="20201030 18:31:48.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.954" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.953" endtime="20201030 18:31:48.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.956" level="INFO">VALUE: [0.00015659800000000085, 0.00015633299999999808, 0.00015633299999999808, 0.00015672199999999803, 0.00015615299999999915, 0.00015638899999999983, 0.0001561670000000022, 0.00015615199999999968, 0.0001559440000000016, 0.00015663900000000008, 0.00015587500000000323, 0.0001562639999999997, 0.00015683300000000205, 0.00015613900000000305, 0.00015652799999999953, 0.0001562090000000009, 0.00015631899999999851, 0.000156319999999998, 0.0001566380000000006, 0.00015652700000000005, 0.0001558060000000014, 0.0001558610000000002, 0.00015677799999999978, 0.00015662500000000051, 0.00015680599999999892, 0.0001560830000000013, 0.0001563610000000007, 0.0001563610000000007, 0.00015616599999999925, 0.00015677799999999978, 0.00015662500000000051, 0.00015593000000000204, 0.00015613900000000305, 0.00015592999999999857, 0.00015594500000000108, 0.00015631899999999851, 0.00015581899999999801, 0.0001558199999999975, 0.00015647200000000125, 0.00015588899999999933, 0.0001560549999999987, 0.00015630599999999842, 0.00015612500000000001, 0.00015630599999999842, 0.0001565830000000018, 0.00015619499999999786, 0.00015590299999999543, 0.0001566939999999989, 0.00015587499999999976, 0.00015626399999999624]</msg>
<status status="PASS" starttime="20201030 18:31:48.955" endtime="20201030 18:31:48.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.950" endtime="20201030 18:31:48.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.962" endtime="20201030 18:31:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.961" endtime="20201030 18:31:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.960" endtime="20201030 18:31:48.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.598" endtime="20201030 18:31:48.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.597" endtime="20201030 18:31:48.983"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.992" endtime="20201030 18:31:49.013"></status>
</kw>
<msg timestamp="20201030 18:31:49.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.990" endtime="20201030 18:31:49.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.015" endtime="20201030 18:31:49.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.017" endtime="20201030 18:31:49.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.988" endtime="20201030 18:31:49.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.985" endtime="20201030 18:31:49.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.026" endtime="20201030 18:31:49.311"></status>
</kw>
<msg timestamp="20201030 18:31:49.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.025" endtime="20201030 18:31:49.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.315" endtime="20201030 18:31:49.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.324" endtime="20201030 18:31:49.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.022" endtime="20201030 18:31:49.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.020" endtime="20201030 18:31:49.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.330" level="INFO">${RESULT} = [{'diff': 0.0001570419999999996}, {'diff': 0.00015727800000000028}, {'diff': 0.00015770799999999946}, {'diff': 0.0001575139999999975}, {'diff': 0.00015741699999999997}, {'diff': 0.0001575550000000002}...</msg>
<status status="PASS" starttime="20201030 18:31:49.327" endtime="20201030 18:31:49.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.335" level="INFO">${ACCURACY} = {'diff': [0.0001570419999999996, 0.00015727800000000028, 0.00015770799999999946, 0.0001575139999999975, 0.00015741699999999997, 0.0001575550000000002, 0.0001573749999999978, 0.00015715300000000015, 0....</msg>
<status status="PASS" starttime="20201030 18:31:49.331" endtime="20201030 18:31:49.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.340" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.339" endtime="20201030 18:31:49.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.342" level="INFO">VALUE: [0.0001570419999999996, 0.00015727800000000028, 0.00015770799999999946, 0.0001575139999999975, 0.00015741699999999997, 0.0001575550000000002, 0.0001573749999999978, 0.00015715300000000015, 0.00015768000000000032, 0.00015780499999999698, 0.00015723600000000157, 0.00015730499999999994, 0.00015723699999999757, 0.00015688900000000033, 0.00015752800000000053, 0.00015690200000000043, 0.00015761100000000194, 0.00015763900000000108, 0.00015758299999999933, 0.0001577359999999986, 0.00015694500000000208, 0.0001571939999999994, 0.00015747300000000172, 0.00015756999999999924, 0.00015752700000000106, 0.00015708299999999883, 0.00015738900000000083, 0.00015701400000000046, 0.0001576939999999999, 0.00015716600000000025, 0.00015738900000000083, 0.00015717999999999982, 0.00015681899999999901, 0.00015745800000000268, 0.00015751400000000096, 0.0001569870000000008, 0.0001569029999999999, 0.00015695899999999818, 0.00015765299999999718, 0.00015747199999999878, 0.00015695900000000165, 0.00015754100000000062, 0.00015777699999999784, 0.00015716600000000025, 0.0001575000000000014, 0.0001579030000000009, 0.00015762499999999804, 0.00015698600000000132, 0.00015743099999999954, 0.00015780599999999992]</msg>
<status status="PASS" starttime="20201030 18:31:49.341" endtime="20201030 18:31:49.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.336" endtime="20201030 18:31:49.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.347" endtime="20201030 18:31:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.346" endtime="20201030 18:31:49.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.344" endtime="20201030 18:31:49.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.984" endtime="20201030 18:31:49.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.983" endtime="20201030 18:31:49.368"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.376" endtime="20201030 18:31:49.398"></status>
</kw>
<msg timestamp="20201030 18:31:49.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.375" endtime="20201030 18:31:49.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.399" endtime="20201030 18:31:49.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.402" endtime="20201030 18:31:49.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.372" endtime="20201030 18:31:49.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.370" endtime="20201030 18:31:49.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.411" endtime="20201030 18:31:49.697"></status>
</kw>
<msg timestamp="20201030 18:31:49.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.409" endtime="20201030 18:31:49.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.701" endtime="20201030 18:31:49.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.709" endtime="20201030 18:31:49.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.407" endtime="20201030 18:31:49.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.405" endtime="20201030 18:31:49.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.716" level="INFO">${RESULT} = [{'diff': 0.0001587779999999983}, {'diff': 0.00015863900000000208}, {'diff': 0.00015826399999999824}, {'diff': 0.00015788900000000133}, {'diff': 0.00015863900000000208}, {'diff': 0.0001578880000000018...</msg>
<status status="PASS" starttime="20201030 18:31:49.713" endtime="20201030 18:31:49.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.720" level="INFO">${ACCURACY} = {'diff': [0.0001587779999999983, 0.00015863900000000208, 0.00015826399999999824, 0.00015788900000000133, 0.00015863900000000208, 0.00015788800000000186, 0.00015863899999999861, 0.00015797199999999928,...</msg>
<status status="PASS" starttime="20201030 18:31:49.717" endtime="20201030 18:31:49.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.724" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.723" endtime="20201030 18:31:49.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.727" level="INFO">VALUE: [0.0001587779999999983, 0.00015863900000000208, 0.00015826399999999824, 0.00015788900000000133, 0.00015863900000000208, 0.00015788800000000186, 0.00015863899999999861, 0.00015797199999999928, 0.00015797199999999928, 0.0001587359999999996, 0.00015818099999999682, 0.00015863899999999861, 0.0001583749999999988, 0.00015868099999999732, 0.00015844400000000064, 0.00015856900000000076, 0.0001585139999999985, 0.0001579579999999997, 0.00015788900000000133, 0.00015856900000000076, 0.0001583480000000026, 0.00015851400000000196, 0.00015870800000000046, 0.00015826300000000224, 0.00015822199999999953, 0.00015858300000000033, 0.000157916000000001, 0.0001585969999999999, 0.0001581940000000004, 0.00015825000000000214, 0.00015819499999999986, 0.0001584450000000001, 0.00015867999999999785, 0.00015829200000000085, 0.0001587359999999996, 0.00015823600000000257, 0.0001587640000000022, 0.00015852800000000153, 0.00015849999999999892, 0.00015801299999999852, 0.00015880499999999798, 0.00015793000000000057, 0.0001586810000000008, 0.00015801400000000146, 0.00015833300000000008, 0.0001579030000000009, 0.00015823600000000257, 0.00015847199999999978, 0.0001579449999999996, 0.0001581940000000004]</msg>
<status status="PASS" starttime="20201030 18:31:49.725" endtime="20201030 18:31:49.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.721" endtime="20201030 18:31:49.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.732" endtime="20201030 18:31:49.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.730" endtime="20201030 18:31:49.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.729" endtime="20201030 18:31:49.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.369" endtime="20201030 18:31:49.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.368" endtime="20201030 18:31:49.753"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.761" endtime="20201030 18:31:49.783"></status>
</kw>
<msg timestamp="20201030 18:31:49.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.760" endtime="20201030 18:31:49.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.785" endtime="20201030 18:31:49.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.787" endtime="20201030 18:31:49.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.757" endtime="20201030 18:31:49.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.755" endtime="20201030 18:31:49.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.796" endtime="20201030 18:31:50.081"></status>
</kw>
<msg timestamp="20201030 18:31:50.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.795" endtime="20201030 18:31:50.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.085" endtime="20201030 18:31:50.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.094" endtime="20201030 18:31:50.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.792" endtime="20201030 18:31:50.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.791" endtime="20201030 18:31:50.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.100" level="INFO">${RESULT} = [{'diff': 0.0001595550000000022}, {'diff': 0.00015922200000000053}, {'diff': 0.00015926399999999924}, {'diff': 0.00015913900000000258}, {'diff': 0.00015913899999999911}, {'diff': 0.0001595279999999990...</msg>
<status status="PASS" starttime="20201030 18:31:50.097" endtime="20201030 18:31:50.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.104" level="INFO">${ACCURACY} = {'diff': [0.0001595550000000022, 0.00015922200000000053, 0.00015926399999999924, 0.00015913900000000258, 0.00015913899999999911, 0.00015952799999999906, 0.00015958299999999787, 0.00015909799999999988,...</msg>
<status status="PASS" starttime="20201030 18:31:50.101" endtime="20201030 18:31:50.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.109" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.108" endtime="20201030 18:31:50.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.112" level="INFO">VALUE: [0.0001595550000000022, 0.00015922200000000053, 0.00015926399999999924, 0.00015913900000000258, 0.00015913899999999911, 0.00015952799999999906, 0.00015958299999999787, 0.00015909799999999988, 0.00015890299999999843, 0.00015913899999999911, 0.0001594580000000012, 0.0001590420000000016, 0.00015961100000000047, 0.00015907000000000074, 0.00015941599999999903, 0.00015927800000000228, 0.00015949999999999992, 0.00015933299999999762, 0.00015888900000000233, 0.00015966700000000222, 0.0001590840000000003, 0.00015930599999999795, 0.00015941599999999903, 0.0001593619999999997, 0.00015947200000000078, 0.00015965299999999918, 0.00015984700000000115, 0.00015909799999999988, 0.00015963899999999961, 0.00015919399999999792, 0.00015956900000000176, 0.0001592779999999988, 0.000159013999999999, 0.00015945799999999774, 0.0001590420000000016, 0.00015915299999999868, 0.0001589580000000007, 0.00015920800000000096, 0.00015940299999999893, 0.0001595689999999983, 0.00015926399999999924, 0.00015981900000000202, 0.00015894399999999767, 0.00015929200000000185, 0.00015897299999999975, 0.0001592079999999975, 0.00015908399999999684, 0.00015920800000000096, 0.00015880599999999745, 0.0001590830000000043]</msg>
<status status="PASS" starttime="20201030 18:31:50.110" endtime="20201030 18:31:50.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.105" endtime="20201030 18:31:50.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.122" endtime="20201030 18:31:50.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.121" endtime="20201030 18:31:50.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.119" endtime="20201030 18:31:50.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.754" endtime="20201030 18:31:50.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.753" endtime="20201030 18:31:50.143"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.151" endtime="20201030 18:31:50.173"></status>
</kw>
<msg timestamp="20201030 18:31:50.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.150" endtime="20201030 18:31:50.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.174" endtime="20201030 18:31:50.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.177" endtime="20201030 18:31:50.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.147" endtime="20201030 18:31:50.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.145" endtime="20201030 18:31:50.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.186" endtime="20201030 18:31:50.473"></status>
</kw>
<msg timestamp="20201030 18:31:50.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.184" endtime="20201030 18:31:50.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.477" endtime="20201030 18:31:50.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.485" endtime="20201030 18:31:50.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.182" endtime="20201030 18:31:50.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.180" endtime="20201030 18:31:50.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.492" level="INFO">${RESULT} = [{'diff': 0.00016027700000000034}, {'diff': 0.00016025000000000067}, {'diff': 0.00016038900000000036}, {'diff': 0.00016031899999999905}, {'diff': 0.0001601949999999984}, {'diff': 0.0001601939999999989...</msg>
<status status="PASS" starttime="20201030 18:31:50.488" endtime="20201030 18:31:50.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.499" level="INFO">${ACCURACY} = {'diff': [0.00016027700000000034, 0.00016025000000000067, 0.00016038900000000036, 0.00016031899999999905, 0.0001601949999999984, 0.00016019399999999892, 0.00016067999999999985, 0.00016050000000000092,...</msg>
<status status="PASS" starttime="20201030 18:31:50.493" endtime="20201030 18:31:50.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.503" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.502" endtime="20201030 18:31:50.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.506" level="INFO">VALUE: [0.00016027700000000034, 0.00016025000000000067, 0.00016038900000000036, 0.00016031899999999905, 0.0001601949999999984, 0.00016019399999999892, 0.00016067999999999985, 0.00016050000000000092, 0.0001598750000000003, 0.00016012500000000054, 0.00015983299999999812, 0.0001603750000000008, 0.00015993000000000257, 0.0001598620000000002, 0.00016045799999999874, 0.00015990199999999996, 0.00016076400000000074, 0.0001602779999999998, 0.00016029199999999938, 0.00016043099999999907, 0.00015994400000000214, 0.00016025000000000067, 0.0001604299999999996, 0.00016026400000000024, 0.0001602499999999972, 0.0001603750000000008, 0.00016044400000000264, 0.00015988899999999986, 0.00016050000000000092, 0.00016040299999999993, 0.00016044499999999864, 0.0001604169999999995, 0.00016016699999999925, 0.00016011100000000097, 0.0001601949999999984, 0.00015988899999999986, 0.00015984700000000115, 0.00016067999999999985, 0.00016050000000000092, 0.00016018099999999882, 0.00016070899999999846, 0.0001605559999999992, 0.00015980599999999845, 0.00016055499999999973, 0.00016047200000000178, 0.00016020900000000143, 0.00016050000000000092, 0.00016026400000000024, 0.00016068099999999932, 0.00015988899999999986]</msg>
<status status="PASS" starttime="20201030 18:31:50.504" endtime="20201030 18:31:50.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.500" endtime="20201030 18:31:50.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.511" endtime="20201030 18:31:50.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.509" endtime="20201030 18:31:50.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.508" endtime="20201030 18:31:50.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.144" endtime="20201030 18:31:50.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.143" endtime="20201030 18:31:50.531"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.540" endtime="20201030 18:31:50.562"></status>
</kw>
<msg timestamp="20201030 18:31:50.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.539" endtime="20201030 18:31:50.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.563" endtime="20201030 18:31:50.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.565" endtime="20201030 18:31:50.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.536" endtime="20201030 18:31:50.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.534" endtime="20201030 18:31:50.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.575" endtime="20201030 18:31:50.862"></status>
</kw>
<msg timestamp="20201030 18:31:50.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.573" endtime="20201030 18:31:50.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.866" endtime="20201030 18:31:50.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.874" endtime="20201030 18:31:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.571" endtime="20201030 18:31:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.569" endtime="20201030 18:31:50.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.881" level="INFO">${RESULT} = [{'diff': 0.00016106999999999927}, {'diff': 0.000160917}, {'diff': 0.00016098599999999838}, {'diff': 0.00016122199999999906}, {'diff': 0.00016144499999999964}, {'diff': 0.00016144400000000017}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:31:50.877" endtime="20201030 18:31:50.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.884" level="INFO">${ACCURACY} = {'diff': [0.00016106999999999927, 0.000160917, 0.00016098599999999838, 0.00016122199999999906, 0.00016144499999999964, 0.00016144400000000017, 0.00016126399999999777, 0.00016126400000000124, 0.0001611...</msg>
<status status="PASS" starttime="20201030 18:31:50.881" endtime="20201030 18:31:50.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.889" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.888" endtime="20201030 18:31:50.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.892" level="INFO">VALUE: [0.00016106999999999927, 0.000160917, 0.00016098599999999838, 0.00016122199999999906, 0.00016144499999999964, 0.00016144400000000017, 0.00016126399999999777, 0.00016126400000000124, 0.00016116700000000025, 0.00016098600000000185, 0.00016099999999999795, 0.0001608750000000013, 0.00016181899999999708, 0.00016175000000000217, 0.00016138900000000136, 0.0001617369999999986, 0.00016125000000000167, 0.00016098599999999838, 0.00016101300000000152, 0.0001617499999999987, 0.00016163900000000161, 0.00016122200000000253, 0.00016169400000000042, 0.00016090300000000043, 0.0001608339999999986, 0.00016163899999999815, 0.0001616949999999999, 0.00016119399999999992, 0.00016158399999999934, 0.00016115199999999774, 0.000161014000000001, 0.00016149999999999845, 0.00016162500000000204, 0.00016176400000000174, 0.00016144499999999964, 0.00016163900000000161, 0.00016131999999999952, 0.00016093099999999957, 0.00016159800000000238, 0.00016122299999999853, 0.00016180599999999698, 0.00016100000000000142, 0.00016098600000000185, 0.00016148599999999888, 0.00016145799999999974, 0.00016165300000000118, 0.0001615560000000002, 0.00016126400000000124, 0.00016081999999999902, 0.00016125000000000167]</msg>
<status status="PASS" starttime="20201030 18:31:50.890" endtime="20201030 18:31:50.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.885" endtime="20201030 18:31:50.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.896" endtime="20201030 18:31:50.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.895" endtime="20201030 18:31:50.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.894" endtime="20201030 18:31:50.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.532" endtime="20201030 18:31:50.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.532" endtime="20201030 18:31:50.917"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.926" endtime="20201030 18:31:50.948"></status>
</kw>
<msg timestamp="20201030 18:31:50.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.924" endtime="20201030 18:31:50.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.950" endtime="20201030 18:31:50.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.952" endtime="20201030 18:31:50.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.922" endtime="20201030 18:31:50.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.920" endtime="20201030 18:31:50.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.961" endtime="20201030 18:31:51.248"></status>
</kw>
<msg timestamp="20201030 18:31:51.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.960" endtime="20201030 18:31:51.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.252" endtime="20201030 18:31:51.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.260" endtime="20201030 18:31:51.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.957" endtime="20201030 18:31:51.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.956" endtime="20201030 18:31:51.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.266" level="INFO">${RESULT} = [{'diff': 0.00016282000000000102}, {'diff': 0.0001619719999999998}, {'diff': 0.0001627780000000023}, {'diff': 0.0001625690000000013}, {'diff': 0.0001624720000000003}, {'diff': 0.000162014000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:31:51.263" endtime="20201030 18:31:51.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.270" level="INFO">${ACCURACY} = {'diff': [0.00016282000000000102, 0.0001619719999999998, 0.0001627780000000023, 0.0001625690000000013, 0.0001624720000000003, 0.000162014000000002, 0.00016233300000000062, 0.0001625140000000025, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:51.267" endtime="20201030 18:31:51.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.275" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.274" endtime="20201030 18:31:51.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.277" level="INFO">VALUE: [0.00016282000000000102, 0.0001619719999999998, 0.0001627780000000023, 0.0001625690000000013, 0.0001624720000000003, 0.000162014000000002, 0.00016233300000000062, 0.0001625140000000025, 0.0001624720000000003, 0.00016227799999999834, 0.0001622499999999992, 0.00016234799999999966, 0.00016266700000000175, 0.0001620690000000008, 0.00016205500000000123, 0.00016182000000000002, 0.00016268100000000132, 0.00016232000000000052, 0.00016213799999999917, 0.00016216699999999779, 0.00016275000000000317, 0.00016254200000000163, 0.00016232000000000052, 0.00016207000000000027, 0.00016187499999999883, 0.00016213899999999865, 0.00016280600000000145, 0.00016216700000000125, 0.0001624439999999977, 0.00016266700000000175, 0.00016218100000000082, 0.00016231999999999705, 0.00016205500000000123, 0.00016262499999999958, 0.0001621109999999995, 0.0001627629999999998, 0.00016179099999999794, 0.00016182000000000002, 0.00016230600000000095, 0.00016240300000000193, 0.00016244400000000117, 0.00016205499999999776, 0.00016252800000000206, 0.0001625690000000013, 0.00016265299999999872, 0.00016194500000000361, 0.00016204200000000113, 0.00016263899999999915, 0.00016226300000000277, 0.0001627769999999959]</msg>
<status status="PASS" starttime="20201030 18:31:51.276" endtime="20201030 18:31:51.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.271" endtime="20201030 18:31:51.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.283" endtime="20201030 18:31:51.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.282" endtime="20201030 18:31:51.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.280" endtime="20201030 18:31:51.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.918" endtime="20201030 18:31:51.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.917" endtime="20201030 18:31:51.304"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.314" endtime="20201030 18:31:51.337"></status>
</kw>
<msg timestamp="20201030 18:31:51.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.312" endtime="20201030 18:31:51.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.338" endtime="20201030 18:31:51.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.341" endtime="20201030 18:31:51.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.309" endtime="20201030 18:31:51.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.307" endtime="20201030 18:31:51.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.350" endtime="20201030 18:31:51.636"></status>
</kw>
<msg timestamp="20201030 18:31:51.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.348" endtime="20201030 18:31:51.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.640" endtime="20201030 18:31:51.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.648" endtime="20201030 18:31:51.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.346" endtime="20201030 18:31:51.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.344" endtime="20201030 18:31:51.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.654" level="INFO">${RESULT} = [{'diff': 0.00016386100000000126}, {'diff': 0.00016306899999999833}, {'diff': 0.00016356899999999883}, {'diff': 0.00016374999999999723}, {'diff': 0.00016366600000000328}, {'diff': 0.000163541999999999...</msg>
<status status="PASS" starttime="20201030 18:31:51.651" endtime="20201030 18:31:51.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.659" level="INFO">${ACCURACY} = {'diff': [0.00016386100000000126, 0.00016306899999999833, 0.00016356899999999883, 0.00016374999999999723, 0.00016366600000000328, 0.00016354199999999916, 0.00016287499999999983, 0.00016347199999999784...</msg>
<status status="PASS" starttime="20201030 18:31:51.655" endtime="20201030 18:31:51.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.664" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.663" endtime="20201030 18:31:51.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.666" level="INFO">VALUE: [0.00016386100000000126, 0.00016306899999999833, 0.00016356899999999883, 0.00016374999999999723, 0.00016366600000000328, 0.00016354199999999916, 0.00016287499999999983, 0.00016347199999999784, 0.0001635699999999983, 0.00016298600000000038, 0.00016305499999999876, 0.00016373600000000113, 0.0001628340000000006, 0.00016373600000000113, 0.00016344500000000164, 0.00016357000000000177, 0.00016287499999999983, 0.00016287499999999983, 0.00016331999999999805, 0.00016282000000000102, 0.00016286100000000026, 0.00016356899999999883, 0.00016337500000000033, 0.00016301399999999952, 0.00016363900000000015, 0.00016343100000000207, 0.00016299999999999995, 0.00016366699999999929, 0.0001634309999999986, 0.000163304999999999, 0.00016280500000000198, 0.0001629439999999982, 0.00016372200000000156, 0.00016309700000000094, 0.00016312500000000008, 0.0001637500000000007, 0.00016362500000000058, 0.00016312500000000008, 0.00016359799999999397, 0.00016305599999999476, 0.00016294499999999768, 0.00016337500000000033, 0.00016388800000000092, 0.0001632360000000041, 0.00016301399999999605, 0.00016349999999999698, 0.00016286100000000026, 0.00016318099999999836, 0.000163014000000003, 0.00016327799999999587]</msg>
<status status="PASS" starttime="20201030 18:31:51.665" endtime="20201030 18:31:51.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.660" endtime="20201030 18:31:51.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.671" endtime="20201030 18:31:51.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.670" endtime="20201030 18:31:51.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.668" endtime="20201030 18:31:51.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.305" endtime="20201030 18:31:51.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.304" endtime="20201030 18:31:51.692"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.701" endtime="20201030 18:31:51.722"></status>
</kw>
<msg timestamp="20201030 18:31:51.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.699" endtime="20201030 18:31:51.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.724" endtime="20201030 18:31:51.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.726" endtime="20201030 18:31:51.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.697" endtime="20201030 18:31:51.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.695" endtime="20201030 18:31:51.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.735" endtime="20201030 18:31:52.022"></status>
</kw>
<msg timestamp="20201030 18:31:52.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.734" endtime="20201030 18:31:52.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.026" endtime="20201030 18:31:52.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.034" endtime="20201030 18:31:52.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.731" endtime="20201030 18:31:52.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.730" endtime="20201030 18:31:52.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.041" level="INFO">${RESULT} = [{'diff': 0.00016437499999999786}, {'diff': 0.00016459700000000244}, {'diff': 0.00016423600000000163}, {'diff': 0.00016473599999999866}, {'diff': 0.00016397199999999834}, {'diff': 0.000164166999999999...</msg>
<status status="PASS" starttime="20201030 18:31:52.037" endtime="20201030 18:31:52.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.045" level="INFO">${ACCURACY} = {'diff': [0.00016437499999999786, 0.00016459700000000244, 0.00016423600000000163, 0.00016473599999999866, 0.00016397199999999834, 0.00016416699999999979, 0.00016441700000000004, 0.00016486100000000226...</msg>
<status status="PASS" starttime="20201030 18:31:52.042" endtime="20201030 18:31:52.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.049" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.048" endtime="20201030 18:31:52.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.051" level="INFO">VALUE: [0.00016437499999999786, 0.00016459700000000244, 0.00016423600000000163, 0.00016473599999999866, 0.00016397199999999834, 0.00016416699999999979, 0.00016441700000000004, 0.00016486100000000226, 0.00016444499999999918, 0.00016447199999999884, 0.0001646249999999981, 0.00016448600000000188, 0.00016418099999999936, 0.0001641110000000015, 0.00016426400000000077, 0.00016469399999999995, 0.0001640699999999988, 0.00016451399999999755, 0.00016477800000000084, 0.00016443000000000013, 0.00016474999999999823, 0.0001647500000000017, 0.00016423600000000163, 0.00016380599999999898, 0.00016387500000000083, 0.00016449999999999798, 0.00016455599999999973, 0.0001642919999999999, 0.00016462500000000158, 0.0001639859999999979, 0.0001639309999999991, 0.00016472200000000256, 0.00016456899999999983, 0.00016416700000000325, 0.00016465300000000072, 0.00016480599999999998, 0.00016466599999999734, 0.0001642919999999999, 0.0001644859999999984, 0.0001639309999999991, 0.00016455500000000026, 0.0001638340000000016, 0.0001640560000000027, 0.00016452700000000112, 0.00016391600000000006, 0.00016459699999999897, 0.00016451399999999755, 0.0001642919999999999, 0.00016434800000000166, 0.00016423599999999816]</msg>
<status status="PASS" starttime="20201030 18:31:52.050" endtime="20201030 18:31:52.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.045" endtime="20201030 18:31:52.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.056" endtime="20201030 18:31:52.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.055" endtime="20201030 18:31:52.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.054" endtime="20201030 18:31:52.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.693" endtime="20201030 18:31:52.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.693" endtime="20201030 18:31:52.077"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.086" endtime="20201030 18:31:52.108"></status>
</kw>
<msg timestamp="20201030 18:31:52.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.084" endtime="20201030 18:31:52.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.110" endtime="20201030 18:31:52.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.112" endtime="20201030 18:31:52.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.082" endtime="20201030 18:31:52.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.080" endtime="20201030 18:31:52.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.122" endtime="20201030 18:31:52.407"></status>
</kw>
<msg timestamp="20201030 18:31:52.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.120" endtime="20201030 18:31:52.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.411" endtime="20201030 18:31:52.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.419" endtime="20201030 18:31:52.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.117" endtime="20201030 18:31:52.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.116" endtime="20201030 18:31:52.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.426" level="INFO">${RESULT} = [{'diff': 0.0001649310000000001}, {'diff': 0.00016486099999999879}, {'diff': 0.00016536099999999929}, {'diff': 0.00016490300000000097}, {'diff': 0.00016555500000000126}, {'diff': 0.0001648469999999992...</msg>
<status status="PASS" starttime="20201030 18:31:52.423" endtime="20201030 18:31:52.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.430" level="INFO">${ACCURACY} = {'diff': [0.0001649310000000001, 0.00016486099999999879, 0.00016536099999999929, 0.00016490300000000097, 0.00016555500000000126, 0.00016484699999999922, 0.00016498600000000238, 0.00016543099999999714,...</msg>
<status status="PASS" starttime="20201030 18:31:52.427" endtime="20201030 18:31:52.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.434" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.433" endtime="20201030 18:31:52.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.437" level="INFO">VALUE: [0.0001649310000000001, 0.00016486099999999879, 0.00016536099999999929, 0.00016490300000000097, 0.00016555500000000126, 0.00016484699999999922, 0.00016498600000000238, 0.00016543099999999714, 0.00016542999999999766, 0.00016497199999999934, 0.00016541700000000104, 0.00016555600000000073, 0.00016498600000000238, 0.00016587500000000283, 0.00016483299999999965, 0.00016509699999999947, 0.00016484699999999922, 0.00016491699999999707, 0.0001656249999999991, 0.0001650829999999999, 0.0001652639999999983, 0.0001649029999999975, 0.00016565299999999825, 0.00016518000000000088, 0.00016558399999999987, 0.00016530600000000048, 0.0001652920000000009, 0.0001653890000000019, 0.0001653189999999971, 0.00016566700000000129, 0.00016537499999999886, 0.0001655280000000016, 0.0001655700000000003, 0.00016530600000000048, 0.00016486099999999879, 0.00016561200000000248, 0.00016523600000000263, 0.0001652219999999996, 0.00016499999999999848, 0.00016519499999999993, 0.00016473599999999866, 0.00016493000000000063, 0.00016500000000000195, 0.0001655280000000016, 0.0001654310000000006, 0.00016525000000000567, 0.00016576400000000574, 0.00016506899999999686, 0.0001649020000000015, 0.0001649859999999989]</msg>
<status status="PASS" starttime="20201030 18:31:52.436" endtime="20201030 18:31:52.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.431" endtime="20201030 18:31:52.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.443" endtime="20201030 18:31:52.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.441" endtime="20201030 18:31:52.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.440" endtime="20201030 18:31:52.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.078" endtime="20201030 18:31:52.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.078" endtime="20201030 18:31:52.464"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.472" endtime="20201030 18:31:52.494"></status>
</kw>
<msg timestamp="20201030 18:31:52.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.471" endtime="20201030 18:31:52.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.496" endtime="20201030 18:31:52.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.498" endtime="20201030 18:31:52.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.468" endtime="20201030 18:31:52.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.466" endtime="20201030 18:31:52.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.507" endtime="20201030 18:31:52.793"></status>
</kw>
<msg timestamp="20201030 18:31:52.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.506" endtime="20201030 18:31:52.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.797" endtime="20201030 18:31:52.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.805" endtime="20201030 18:31:52.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.503" endtime="20201030 18:31:52.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.501" endtime="20201030 18:31:52.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.812" level="INFO">${RESULT} = [{'diff': 0.00016649999999999998}, {'diff': 0.00016630499999999854}, {'diff': 0.0001658479999999997}, {'diff': 0.00016659800000000044}, {'diff': 0.00016675000000000023}, {'diff': 0.0001658470000000002...</msg>
<status status="PASS" starttime="20201030 18:31:52.808" endtime="20201030 18:31:52.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.816" level="INFO">${ACCURACY} = {'diff': [0.00016649999999999998, 0.00016630499999999854, 0.0001658479999999997, 0.00016659800000000044, 0.00016675000000000023, 0.00016584700000000022, 0.000166305000000002, 0.00016656999999999783, 0...</msg>
<status status="PASS" starttime="20201030 18:31:52.812" endtime="20201030 18:31:52.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.821" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.820" endtime="20201030 18:31:52.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.823" level="INFO">VALUE: [0.00016649999999999998, 0.00016630499999999854, 0.0001658479999999997, 0.00016659800000000044, 0.00016675000000000023, 0.00016584700000000022, 0.000166305000000002, 0.00016656999999999783, 0.00016608400000000037, 0.0001660419999999982, 0.00016661100000000054, 0.00016600000000000295, 0.00016647300000000032, 0.00016634700000000072, 0.0001658059999999975, 0.0001661249999999996, 0.00016573600000000313, 0.00016616700000000179, 0.00016582000000000055, 0.00016654099999999922, 0.00016634700000000072, 0.00016649999999999998, 0.0001657920000000014, 0.00016629100000000244, 0.00016616699999999832, 0.00016637499999999986, 0.00016647200000000084, 0.00016619399999999798, 0.0001664860000000004, 0.0001662639999999993, 0.00016609700000000047, 0.00016659800000000044, 0.00016677799999999937, 0.00016615199999999927, 0.00016602700000000262, 0.0001665700000000013, 0.0001665419999999987, 0.00016669500000000143, 0.00016608400000000037, 0.000166709000000001, 0.00016609700000000047, 0.00016637499999999986, 0.00016654200000000216, 0.0001658890000000024, 0.00016597200000000034, 0.00016615299999999875, 0.00016629199999999844, 0.00016579199999999794, 0.00016590300000000197, 0.00016656999999999783]</msg>
<status status="PASS" starttime="20201030 18:31:52.822" endtime="20201030 18:31:52.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.817" endtime="20201030 18:31:52.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.828" endtime="20201030 18:31:52.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.827" endtime="20201030 18:31:52.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.826" endtime="20201030 18:31:52.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.464" endtime="20201030 18:31:52.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.464" endtime="20201030 18:31:52.849"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.858" endtime="20201030 18:31:52.880"></status>
</kw>
<msg timestamp="20201030 18:31:52.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.856" endtime="20201030 18:31:52.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.881" endtime="20201030 18:31:52.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.884" endtime="20201030 18:31:52.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.854" endtime="20201030 18:31:52.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.852" endtime="20201030 18:31:52.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.893" endtime="20201030 18:31:53.179"></status>
</kw>
<msg timestamp="20201030 18:31:53.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.891" endtime="20201030 18:31:53.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.183" endtime="20201030 18:31:53.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.191" endtime="20201030 18:31:53.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.889" endtime="20201030 18:31:53.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.887" endtime="20201030 18:31:53.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.197" level="INFO">${RESULT} = [{'diff': 0.00016766699999999982}, {'diff': 0.00016725000000000073}, {'diff': 0.00016713900000000018}, {'diff': 0.00016713900000000018}, {'diff': 0.0001669029999999995}, {'diff': 0.0001670140000000000...</msg>
<status status="PASS" starttime="20201030 18:31:53.194" endtime="20201030 18:31:53.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.201" level="INFO">${ACCURACY} = {'diff': [0.00016766699999999982, 0.00016725000000000073, 0.00016713900000000018, 0.00016713900000000018, 0.0001669029999999995, 0.00016701400000000005, 0.00016669399999999848, 0.00016675000000000023,...</msg>
<status status="PASS" starttime="20201030 18:31:53.198" endtime="20201030 18:31:53.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.206" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.205" endtime="20201030 18:31:53.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.208" level="INFO">VALUE: [0.00016766699999999982, 0.00016725000000000073, 0.00016713900000000018, 0.00016713900000000018, 0.0001669029999999995, 0.00016701400000000005, 0.00016669399999999848, 0.00016675000000000023, 0.00016766699999999982, 0.0001669860000000009, 0.00016772300000000157, 0.00016737500000000086, 0.00016720799999999855, 0.00016747199999999837, 0.0001669029999999995, 0.000167403, 0.00016686099999999732, 0.0001677220000000021, 0.00016770899999999853, 0.00016770799999999905, 0.0001674449999999987, 0.00016776300000000133, 0.00016720800000000202, 0.000167403, 0.00016738900000000043, 0.00016692999999999916, 0.00016775000000000123, 0.00016706999999999833, 0.0001672640000000003, 0.00016736099999999782, 0.00016716699999999932, 0.0001672220000000016, 0.0001667220000000011, 0.00016758400000000187, 0.00016765200000000077, 0.00016732000000000205, 0.00016733300000000215, 0.00016759800000000144, 0.00016700000000000048, 0.00016751399999999708, 0.0001669860000000009, 0.00016759700000000197, 0.00016777800000000037, 0.00016716699999999932, 0.00016677799999999937, 0.00016708299999999843, 0.0001668610000000008, 0.00016759700000000197, 0.00016766700000000329, 0.0001675969999999985]</msg>
<status status="PASS" starttime="20201030 18:31:53.207" endtime="20201030 18:31:53.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.202" endtime="20201030 18:31:53.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.213" endtime="20201030 18:31:53.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.212" endtime="20201030 18:31:53.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.210" endtime="20201030 18:31:53.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.850" endtime="20201030 18:31:53.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.849" endtime="20201030 18:31:53.234"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.243" endtime="20201030 18:31:53.265"></status>
</kw>
<msg timestamp="20201030 18:31:53.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.241" endtime="20201030 18:31:53.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.267" endtime="20201030 18:31:53.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.269" endtime="20201030 18:31:53.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.238" endtime="20201030 18:31:53.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.236" endtime="20201030 18:31:53.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.279" endtime="20201030 18:31:53.563"></status>
</kw>
<msg timestamp="20201030 18:31:53.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.277" endtime="20201030 18:31:53.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.567" endtime="20201030 18:31:53.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.576" endtime="20201030 18:31:53.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.274" endtime="20201030 18:31:53.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.273" endtime="20201030 18:31:53.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.582" level="INFO">${RESULT} = [{'diff': 0.00016851400000000155}, {'diff': 0.0001684579999999998}, {'diff': 0.0001679030000000005}, {'diff': 0.00016843100000000014}, {'diff': 0.00016851400000000155}, {'diff': 0.00016772199999999862...</msg>
<status status="PASS" starttime="20201030 18:31:53.579" endtime="20201030 18:31:53.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.586" level="INFO">${ACCURACY} = {'diff': [0.00016851400000000155, 0.0001684579999999998, 0.0001679030000000005, 0.00016843100000000014, 0.00016851400000000155, 0.00016772199999999862, 0.0001679030000000005, 0.00016870800000000005, 0...</msg>
<status status="PASS" starttime="20201030 18:31:53.583" endtime="20201030 18:31:53.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.591" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.590" endtime="20201030 18:31:53.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.594" level="INFO">VALUE: [0.00016851400000000155, 0.0001684579999999998, 0.0001679030000000005, 0.00016843100000000014, 0.00016851400000000155, 0.00016772199999999862, 0.0001679030000000005, 0.00016870800000000005, 0.00016823600000000216, 0.00016861099999999907, 0.0001678189999999996, 0.00016838900000000143, 0.00016790200000000102, 0.00016833399999999915, 0.0001684579999999998, 0.00016784699999999875, 0.00016863900000000168, 0.0001685420000000007, 0.00016794500000000268, 0.00016813900000000118, 0.00016834699999999925, 0.00016843100000000014, 0.00016829200000000044, 0.0001683190000000001, 0.0001681800000000004, 0.0001680839999999989, 0.00016820899999999903, 0.00016769399999999948, 0.00016855600000000026, 0.00016788900000000093, 0.0001682220000000026, 0.00016858299999999993, 0.0001685839999999994, 0.00016858299999999993, 0.00016865300000000125, 0.00016808400000000237, 0.000168306, 0.000168403000000001, 0.00016845899999999928, 0.00016815300000000075, 0.00016872199999999962, 0.00016838899999999796, 0.00016841700000000057, 0.000168194999999996, 0.00016802800000000062, 0.00016841599999999762, 0.00016834699999999925, 0.00016786099999999832, 0.00016815299999999728, 0.00016812499999999814]</msg>
<status status="PASS" starttime="20201030 18:31:53.592" endtime="20201030 18:31:53.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.587" endtime="20201030 18:31:53.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.599" endtime="20201030 18:31:53.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.597" endtime="20201030 18:31:53.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.596" endtime="20201030 18:31:53.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.235" endtime="20201030 18:31:53.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.234" endtime="20201030 18:31:53.620"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.628" endtime="20201030 18:31:53.650"></status>
</kw>
<msg timestamp="20201030 18:31:53.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.627" endtime="20201030 18:31:53.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.652" endtime="20201030 18:31:53.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.654" endtime="20201030 18:31:53.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.624" endtime="20201030 18:31:53.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.622" endtime="20201030 18:31:53.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.663" endtime="20201030 18:31:53.949"></status>
</kw>
<msg timestamp="20201030 18:31:53.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.662" endtime="20201030 18:31:53.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.953" endtime="20201030 18:31:53.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.962" endtime="20201030 18:31:53.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.659" endtime="20201030 18:31:53.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.657" endtime="20201030 18:31:53.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.968" level="INFO">${RESULT} = [{'diff': 0.00016959799999999997}, {'diff': 0.000168999999999999}, {'diff': 0.0001695970000000005}, {'diff': 0.00016902799999999815}, {'diff': 0.00016916599999999837}, {'diff': 0.00016908300000000043}...</msg>
<status status="PASS" starttime="20201030 18:31:53.965" endtime="20201030 18:31:53.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.975" level="INFO">${ACCURACY} = {'diff': [0.00016959799999999997, 0.000168999999999999, 0.0001695970000000005, 0.00016902799999999815, 0.00016916599999999837, 0.00016908300000000043, 0.00016920900000000003, 0.00016966699999999835, 0...</msg>
<status status="PASS" starttime="20201030 18:31:53.969" endtime="20201030 18:31:53.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.980" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.979" endtime="20201030 18:31:53.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.982" level="INFO">VALUE: [0.00016959799999999997, 0.000168999999999999, 0.0001695970000000005, 0.00016902799999999815, 0.00016916599999999837, 0.00016908300000000043, 0.00016920900000000003, 0.00016966699999999835, 0.00016972200000000062, 0.00016915299999999828, 0.0001691389999999987, 0.00016954099999999875, 0.00016945900000000028, 0.0001697779999999989, 0.00016934700000000025, 0.0001692909999999985, 0.0001696389999999992, 0.00016926399999999883, 0.00016965299999999878, 0.0001694160000000021, 0.0001693190000000011, 0.000169097, 0.00016934700000000025, 0.0001695129999999996, 0.00016965299999999878, 0.00016940299999999853, 0.00016918100000000089, 0.00016898699999999892, 0.00016890299999999803, 0.0001694580000000008, 0.00016940299999999853, 0.00016902800000000162, 0.00016920800000000055, 0.0001689030000000015, 0.00016951399999999908, 0.00016901400000000205, 0.00016920799999999708, 0.00016902799999999815, 0.00016970800000000105, 0.00016929100000000197, 0.00016933300000000068, 0.00016911099999999957, 0.00016915300000000175, 0.00016922200000000012, 0.00016920800000000055, 0.00016897199999999987, 0.0001696389999999992, 0.00016965299999999878, 0.00016895800000000377, 0.00016884699999999975]</msg>
<status status="PASS" starttime="20201030 18:31:53.981" endtime="20201030 18:31:53.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.976" endtime="20201030 18:31:53.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.987" endtime="20201030 18:31:54.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.986" endtime="20201030 18:31:54.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.985" endtime="20201030 18:31:54.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.620" endtime="20201030 18:31:54.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.620" endtime="20201030 18:31:54.008"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.017" endtime="20201030 18:31:54.039"></status>
</kw>
<msg timestamp="20201030 18:31:54.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.015" endtime="20201030 18:31:54.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.040" endtime="20201030 18:31:54.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.043" endtime="20201030 18:31:54.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.013" endtime="20201030 18:31:54.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.011" endtime="20201030 18:31:54.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.052" endtime="20201030 18:31:54.339"></status>
</kw>
<msg timestamp="20201030 18:31:54.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.050" endtime="20201030 18:31:54.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.343" endtime="20201030 18:31:54.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.352" endtime="20201030 18:31:54.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.048" endtime="20201030 18:31:54.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.046" endtime="20201030 18:31:54.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.359" level="INFO">${RESULT} = [{'diff': 0.00017058300000000193}, {'diff': 0.00017016600000000284}, {'diff': 0.00016979199999999847}, {'diff': 0.00017009800000000047}, {'diff': 0.00017022200000000112}, {'diff': 0.000170762999999997...</msg>
<status status="PASS" starttime="20201030 18:31:54.355" endtime="20201030 18:31:54.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.363" level="INFO">${ACCURACY} = {'diff': [0.00017058300000000193, 0.00017016600000000284, 0.00016979199999999847, 0.00017009800000000047, 0.00017022200000000112, 0.0001707629999999974, 0.0001698329999999977, 0.00017027699999999993, ...</msg>
<status status="PASS" starttime="20201030 18:31:54.360" endtime="20201030 18:31:54.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.367" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.366" endtime="20201030 18:31:54.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.370" level="INFO">VALUE: [0.00017058300000000193, 0.00017016600000000284, 0.00016979199999999847, 0.00017009800000000047, 0.00017022200000000112, 0.0001707629999999974, 0.0001698329999999977, 0.00017027699999999993, 0.0001705000000000005, 0.00017002799999999915, 0.00017073599999999772, 0.00017051400000000008, 0.0001703329999999982, 0.000170306000000002, 0.00017075000000000076, 0.0001705689999999989, 0.0001698749999999999, 0.00017054199999999922, 0.00017016600000000284, 0.00017019500000000146, 0.00017065299999999978, 0.00016990199999999955, 0.00017034700000000125, 0.00017069500000000196, 0.000170097000000001, 0.00017045799999999833, 0.00017047200000000137, 0.00017058399999999793, 0.0001701389999999997, 0.0001698329999999977, 0.00016991700000000207, 0.00017045900000000128, 0.00017004099999999925, 0.00016984699999999728, 0.00017052799999999965, 0.00017052799999999965, 0.00017002799999999915, 0.00017065299999999978, 0.0001706109999999976, 0.00017033400000000115, 0.0001706949999999985, 0.00017054099999999975, 0.00017061199999999707, 0.00017008299999999796, 0.00017041700000000257, 0.00016991700000000207, 0.00017008300000000143, 0.00017065300000000325, 0.00017048700000000389, 0.00017027799999999593]</msg>
<status status="PASS" starttime="20201030 18:31:54.368" endtime="20201030 18:31:54.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.364" endtime="20201030 18:31:54.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.375" endtime="20201030 18:31:54.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.373" endtime="20201030 18:31:54.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.372" endtime="20201030 18:31:54.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.009" endtime="20201030 18:31:54.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.009" endtime="20201030 18:31:54.395"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.404" endtime="20201030 18:31:54.427"></status>
</kw>
<msg timestamp="20201030 18:31:54.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.402" endtime="20201030 18:31:54.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.429" endtime="20201030 18:31:54.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.431" endtime="20201030 18:31:54.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.400" endtime="20201030 18:31:54.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.398" endtime="20201030 18:31:54.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.440" endtime="20201030 18:31:54.725"></status>
</kw>
<msg timestamp="20201030 18:31:54.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.438" endtime="20201030 18:31:54.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.729" endtime="20201030 18:31:54.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.737" endtime="20201030 18:31:54.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.436" endtime="20201030 18:31:54.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.434" endtime="20201030 18:31:54.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.743" level="INFO">${RESULT} = [{'diff': 0.00017152799999999718}, {'diff': 0.00017125000000000126}, {'diff': 0.00017088900000000046}, {'diff': 0.00017166700000000035}, {'diff': 0.0001709719999999984}, {'diff': 0.0001715970000000025...</msg>
<status status="PASS" starttime="20201030 18:31:54.740" endtime="20201030 18:31:54.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.748" level="INFO">${ACCURACY} = {'diff': [0.00017152799999999718, 0.00017125000000000126, 0.00017088900000000046, 0.00017166700000000035, 0.0001709719999999984, 0.0001715970000000025, 0.00017154100000000075, 0.00017126399999999736, ...</msg>
<status status="PASS" starttime="20201030 18:31:54.744" endtime="20201030 18:31:54.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.752" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.751" endtime="20201030 18:31:54.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.754" level="INFO">VALUE: [0.00017152799999999718, 0.00017125000000000126, 0.00017088900000000046, 0.00017166700000000035, 0.0001709719999999984, 0.0001715970000000025, 0.00017154100000000075, 0.00017126399999999736, 0.00017179200000000047, 0.0001712360000000017, 0.0001715139999999976, 0.00017134700000000225, 0.00017140300000000053, 0.00017093099999999917, 0.00017120899999999856, 0.0001717780000000009, 0.00017136099999999835, 0.00017147299999999838, 0.00017108300000000243, 0.00017186100000000232, 0.00017170799999999958, 0.0001716949999999995, 0.00017126400000000083, 0.00017083400000000165, 0.00017158299999999946, 0.00017134800000000172, 0.00017143099999999967, 0.0001713329999999992, 0.00017120800000000255, 0.00017122200000000212, 0.00017084700000000175, 0.00017127700000000093, 0.0001708750000000009, 0.00017115300000000028, 0.00017084699999999828, 0.00017109699999999853, 0.00017172199999999915, 0.0001716520000000013, 0.00017163899999999774, 0.00017129199999999997, 0.0001715689999999999, 0.000170888999999997, 0.0001711390000000007, 0.0001715970000000025, 0.00017102800000000362, 0.00017112500000000114, 0.00017147299999999838, 0.00017162500000000164, 0.00017175000000000523, 0.0001709169999999996]</msg>
<status status="PASS" starttime="20201030 18:31:54.753" endtime="20201030 18:31:54.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.748" endtime="20201030 18:31:54.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.760" endtime="20201030 18:31:54.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.758" endtime="20201030 18:31:54.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.757" endtime="20201030 18:31:54.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.396" endtime="20201030 18:31:54.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.396" endtime="20201030 18:31:54.781"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.789" endtime="20201030 18:31:54.811"></status>
</kw>
<msg timestamp="20201030 18:31:54.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.788" endtime="20201030 18:31:54.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.813" endtime="20201030 18:31:54.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.815" endtime="20201030 18:31:54.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.785" endtime="20201030 18:31:54.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.783" endtime="20201030 18:31:54.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.824" endtime="20201030 18:31:55.111"></status>
</kw>
<msg timestamp="20201030 18:31:55.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:54.823" endtime="20201030 18:31:55.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:55.115" endtime="20201030 18:31:55.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.123" endtime="20201030 18:31:55.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.820" endtime="20201030 18:31:55.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.819" endtime="20201030 18:31:55.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.130" level="INFO">${RESULT} = [{'diff': 0.000172791999999998}, {'diff': 0.0001719719999999994}, {'diff': 0.0001721109999999991}, {'diff': 0.00017187499999999842}, {'diff': 0.00017220800000000008}, {'diff': 0.00017227699999999846},...</msg>
<status status="PASS" starttime="20201030 18:31:55.126" endtime="20201030 18:31:55.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.135" level="INFO">${ACCURACY} = {'diff': [0.000172791999999998, 0.0001719719999999994, 0.0001721109999999991, 0.00017187499999999842, 0.00017220800000000008, 0.00017227699999999846, 0.00017268100000000092, 0.00017222199999999965, 0....</msg>
<status status="PASS" starttime="20201030 18:31:55.131" endtime="20201030 18:31:55.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.139" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.138" endtime="20201030 18:31:55.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.141" level="INFO">VALUE: [0.000172791999999998, 0.0001719719999999994, 0.0001721109999999991, 0.00017187499999999842, 0.00017220800000000008, 0.00017227699999999846, 0.00017268100000000092, 0.00017222199999999965, 0.00017241699999999763, 0.00017245800000000033, 0.00017265300000000178, 0.000172195, 0.000172791000000002, 0.00017204199999999725, 0.00017277700000000243, 0.00017191600000000112, 0.00017266700000000135, 0.00017255499999999785, 0.0001718049999999971, 0.00017223599999999922, 0.00017201400000000158, 0.0001717499999999983, 0.00017272200000000015, 0.00017242999999999772, 0.00017272200000000015, 0.00017201299999999864, 0.00017177699999999796, 0.00017218000000000094, 0.00017240300000000153, 0.00017266700000000135, 0.0001724719999999999, 0.0001719589999999993, 0.00017265300000000178, 0.00017236099999999935, 0.00017230600000000054, 0.00017255499999999785, 0.00017218000000000094, 0.00017202800000000115, 0.00017184799999999875, 0.00017218100000000042, 0.0001726529999999983, 0.00017272200000000015, 0.00017272200000000015, 0.00017229200000000097, 0.00017241699999999763, 0.00017184699999999928, 0.00017259700000000003, 0.00017236099999999935, 0.0001723750000000024, 0.0001722919999999975]</msg>
<status status="PASS" starttime="20201030 18:31:55.140" endtime="20201030 18:31:55.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.135" endtime="20201030 18:31:55.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.153" endtime="20201030 18:31:55.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.152" endtime="20201030 18:31:55.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.151" endtime="20201030 18:31:55.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.782" endtime="20201030 18:31:55.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.781" endtime="20201030 18:31:55.174"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.183" endtime="20201030 18:31:55.205"></status>
</kw>
<msg timestamp="20201030 18:31:55.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.181" endtime="20201030 18:31:55.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.207" endtime="20201030 18:31:55.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.209" endtime="20201030 18:31:55.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.179" endtime="20201030 18:31:55.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.177" endtime="20201030 18:31:55.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.218" endtime="20201030 18:31:55.504"></status>
</kw>
<msg timestamp="20201030 18:31:55.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.217" endtime="20201030 18:31:55.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.508" endtime="20201030 18:31:55.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.517" endtime="20201030 18:31:55.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.214" endtime="20201030 18:31:55.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.212" endtime="20201030 18:31:55.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.523" level="INFO">${RESULT} = [{'diff': 0.0001733330000000012}, {'diff': 0.00017333299999999774}, {'diff': 0.00017293100000000117}, {'diff': 0.000173694000000002}, {'diff': 0.00017284700000000028}, {'diff': 0.00017337499999999992}...</msg>
<status status="PASS" starttime="20201030 18:31:55.520" endtime="20201030 18:31:55.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.527" level="INFO">${ACCURACY} = {'diff': [0.0001733330000000012, 0.00017333299999999774, 0.00017293100000000117, 0.000173694000000002, 0.00017284700000000028, 0.00017337499999999992, 0.00017370800000000158, 0.00017295799999999736, 0...</msg>
<status status="PASS" starttime="20201030 18:31:55.524" endtime="20201030 18:31:55.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.532" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.531" endtime="20201030 18:31:55.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.534" level="INFO">VALUE: [0.0001733330000000012, 0.00017333299999999774, 0.00017293100000000117, 0.000173694000000002, 0.00017284700000000028, 0.00017337499999999992, 0.00017370800000000158, 0.00017295799999999736, 0.00017337499999999992, 0.00017373600000000072, 0.00017341599999999915, 0.00017337499999999992, 0.0001727499999999993, 0.0001728200000000006, 0.00017307000000000086, 0.00017305499999999835, 0.00017318099999999795, 0.0001730699999999974, 0.0001731659999999989, 0.00017302800000000215, 0.00017345799999999786, 0.0001734309999999982, 0.00017370799999999811, 0.00017376399999999986, 0.00017343100000000167, 0.00017344500000000124, 0.00017344500000000124, 0.00017312499999999967, 0.0001735980000000005, 0.0001731940000000015, 0.00017344400000000176, 0.0001731110000000001, 0.00017365199999999983, 0.00017351400000000308, 0.00017316700000000185, 0.00017281899999999767, 0.00017358400000000093, 0.000173098, 0.00017277699999999896, 0.000172791000000002, 0.00017365199999999983, 0.00017313899999999924, 0.0001731529999999988, 0.00017340300000000253, 0.0001732910000000025, 0.0001733889999999995, 0.0001728200000000006, 0.00017309799999999653, 0.00017293100000000117, 0.00017344500000000124]</msg>
<status status="PASS" starttime="20201030 18:31:55.533" endtime="20201030 18:31:55.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.528" endtime="20201030 18:31:55.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.539" endtime="20201030 18:31:55.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.537" endtime="20201030 18:31:55.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.536" endtime="20201030 18:31:55.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.175" endtime="20201030 18:31:55.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.174" endtime="20201030 18:31:55.560"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.568" endtime="20201030 18:31:55.591"></status>
</kw>
<msg timestamp="20201030 18:31:55.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.567" endtime="20201030 18:31:55.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.593" endtime="20201030 18:31:55.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.595" endtime="20201030 18:31:55.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.564" endtime="20201030 18:31:55.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.562" endtime="20201030 18:31:55.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.604" endtime="20201030 18:31:55.889"></status>
</kw>
<msg timestamp="20201030 18:31:55.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.603" endtime="20201030 18:31:55.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.894" endtime="20201030 18:31:55.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.902" endtime="20201030 18:31:55.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.600" endtime="20201030 18:31:55.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.598" endtime="20201030 18:31:55.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.908" level="INFO">${RESULT} = [{'diff': 0.00017406899999999892}, {'diff': 0.00017383299999999824}, {'diff': 0.0001745270000000007}, {'diff': 0.00017377799999999943}, {'diff': 0.00017461099999999813}, {'diff': 0.0001743470000000017...</msg>
<status status="PASS" starttime="20201030 18:31:55.905" endtime="20201030 18:31:55.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.912" level="INFO">${ACCURACY} = {'diff': [0.00017406899999999892, 0.00017383299999999824, 0.0001745270000000007, 0.00017377799999999943, 0.00017461099999999813, 0.00017434700000000178, 0.00017440300000000006, 0.00017452800000000018,...</msg>
<status status="PASS" starttime="20201030 18:31:55.909" endtime="20201030 18:31:55.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.917" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.916" endtime="20201030 18:31:55.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.919" level="INFO">VALUE: [0.00017406899999999892, 0.00017383299999999824, 0.0001745270000000007, 0.00017377799999999943, 0.00017461099999999813, 0.00017434700000000178, 0.00017440300000000006, 0.00017452800000000018, 0.00017463900000000074, 0.0001740560000000023, 0.0001738469999999978, 0.00017391699999999913, 0.0001744439999999993, 0.00017404099999999978, 0.00017431899999999917, 0.00017455599999999932, 0.000174485999999998, 0.000173889, 0.00017377799999999943, 0.00017399999999999707, 0.00017454199999999975, 0.0001740140000000001, 0.0001739439999999988, 0.0001739439999999988, 0.00017469399999999954, 0.00017384800000000075, 0.00017437500000000092, 0.00017408300000000196, 0.00017443100000000267, 0.00017390200000000008, 0.0001746530000000003, 0.00017452800000000018, 0.00017406899999999892, 0.0001741529999999998, 0.0001745699999999989, 0.00017377799999999943, 0.00017377799999999943, 0.000174582999999999, 0.000174098000000001, 0.00017454200000000322, 0.00017437500000000092, 0.0001738330000000017, 0.00017468100000000292, 0.0001744720000000019, 0.00017451300000000114, 0.00017409699999999806, 0.00017476400000000086, 0.00017402799999999968, 0.0001740829999999985, 0.00017430599999999907]</msg>
<status status="PASS" starttime="20201030 18:31:55.918" endtime="20201030 18:31:55.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.913" endtime="20201030 18:31:55.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.925" endtime="20201030 18:31:55.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.923" endtime="20201030 18:31:55.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.922" endtime="20201030 18:31:55.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.561" endtime="20201030 18:31:55.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.560" endtime="20201030 18:31:55.946"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.954" endtime="20201030 18:31:55.976"></status>
</kw>
<msg timestamp="20201030 18:31:55.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.953" endtime="20201030 18:31:55.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.978" endtime="20201030 18:31:55.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.981" endtime="20201030 18:31:55.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.950" endtime="20201030 18:31:55.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.948" endtime="20201030 18:31:55.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.989" endtime="20201030 18:31:56.276"></status>
</kw>
<msg timestamp="20201030 18:31:56.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.988" endtime="20201030 18:31:56.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.280" endtime="20201030 18:31:56.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.288" endtime="20201030 18:31:56.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.985" endtime="20201030 18:31:56.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.984" endtime="20201030 18:31:56.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.294" level="INFO">${RESULT} = [{'diff': 0.00017531900000000017}, {'diff': 0.0001755140000000016}, {'diff': 0.00017513900000000124}, {'diff': 0.00017537500000000192}, {'diff': 0.00017549999999999857}, {'diff': 0.0001756810000000004...</msg>
<status status="PASS" starttime="20201030 18:31:56.291" endtime="20201030 18:31:56.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.299" level="INFO">${ACCURACY} = {'diff': [0.00017531900000000017, 0.0001755140000000016, 0.00017513900000000124, 0.00017537500000000192, 0.00017549999999999857, 0.00017568100000000045, 0.00017519400000000004, 0.00017497199999999893,...</msg>
<status status="PASS" starttime="20201030 18:31:56.295" endtime="20201030 18:31:56.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.304" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.303" endtime="20201030 18:31:56.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.306" level="INFO">VALUE: [0.00017531900000000017, 0.0001755140000000016, 0.00017513900000000124, 0.00017537500000000192, 0.00017549999999999857, 0.00017568100000000045, 0.00017519400000000004, 0.00017497199999999893, 0.00017561099999999913, 0.00017545799999999986, 0.000174889000000001, 0.00017570800000000011, 0.00017519400000000004, 0.00017515299999999734, 0.0001754310000000002, 0.00017545899999999934, 0.0001756249999999987, 0.00017505599999999982, 0.00017549999999999857, 0.00017506899999999992, 0.0001755699999999999, 0.00017484799999999828, 0.0001753050000000006, 0.00017530600000000007, 0.00017519499999999952, 0.00017495799999999936, 0.00017523599999999875, 0.00017541700000000063, 0.00017529199999999703, 0.0001749720000000024, 0.0001751249999999982, 0.000175583, 0.00017483299999999924, 0.0001751110000000021, 0.00017533400000000268, 0.00017527700000000146, 0.00017566700000000088, 0.00017566700000000088, 0.00017502800000000068, 0.00017508399999999896, 0.00017545799999999986, 0.00017547199999999943, 0.00017566700000000088, 0.00017484799999999828, 0.00017495799999999936, 0.00017540300000000106, 0.0001753890000000015, 0.00017479100000000053, 0.00017554200000000075, 0.00017519399999999657]</msg>
<status status="PASS" starttime="20201030 18:31:56.305" endtime="20201030 18:31:56.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.300" endtime="20201030 18:31:56.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.311" endtime="20201030 18:31:56.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.310" endtime="20201030 18:31:56.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.308" endtime="20201030 18:31:56.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.946" endtime="20201030 18:31:56.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.946" endtime="20201030 18:31:56.333"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.343" endtime="20201030 18:31:56.365"></status>
</kw>
<msg timestamp="20201030 18:31:56.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.341" endtime="20201030 18:31:56.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.367" endtime="20201030 18:31:56.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.369" endtime="20201030 18:31:56.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.338" endtime="20201030 18:31:56.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.336" endtime="20201030 18:31:56.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.379" endtime="20201030 18:31:56.669"></status>
</kw>
<msg timestamp="20201030 18:31:56.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.377" endtime="20201030 18:31:56.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.674" endtime="20201030 18:31:56.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.682" endtime="20201030 18:31:56.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.374" endtime="20201030 18:31:56.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.373" endtime="20201030 18:31:56.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.688" level="INFO">${RESULT} = [{'diff': 0.0001766660000000024}, {'diff': 0.00017577799999999796}, {'diff': 0.00017668100000000145}, {'diff': 0.0001761249999999992}, {'diff': 0.00017632000000000064}, {'diff': 0.00017623599999999975...</msg>
<status status="PASS" starttime="20201030 18:31:56.685" endtime="20201030 18:31:56.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.692" level="INFO">${ACCURACY} = {'diff': [0.0001766660000000024, 0.00017577799999999796, 0.00017668100000000145, 0.0001761249999999992, 0.00017632000000000064, 0.00017623599999999975, 0.00017583300000000024, 0.0001757500000000023, 0...</msg>
<status status="PASS" starttime="20201030 18:31:56.689" endtime="20201030 18:31:56.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.697" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.696" endtime="20201030 18:31:56.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.699" level="INFO">VALUE: [0.0001766660000000024, 0.00017577799999999796, 0.00017668100000000145, 0.0001761249999999992, 0.00017632000000000064, 0.00017623599999999975, 0.00017583300000000024, 0.0001757500000000023, 0.0001763189999999977, 0.0001758050000000011, 0.00017630600000000107, 0.0001767769999999995, 0.0001764449999999973, 0.00017636099999999988, 0.00017670800000000111, 0.00017601399999999864, 0.000176179999999998, 0.0001764579999999974, 0.00017669400000000154, 0.00017642999999999825, 0.00017668000000000197, 0.0001764440000000013, 0.0001761249999999992, 0.00017627799999999846, 0.00017642999999999825, 0.00017654200000000175, 0.0001766249999999997, 0.00017613899999999877, 0.00017669400000000154, 0.00017644500000000077, 0.00017613900000000224, 0.00017576299999999892, 0.00017595899999999984, 0.00017663899999999927, 0.00017670799999999764, 0.00017652799999999871, 0.00017634799999999978, 0.0001762500000000028, 0.00017598600000000297, 0.00017630499999999466, 0.00017655600000000132, 0.00017626400000000236, 0.00017587499999999895, 0.00017669400000000501, 0.0001759579999999969, 0.0001761249999999992, 0.00017626400000000236, 0.00017586099999999938, 0.0001764579999999974, 0.00017655600000000132]</msg>
<status status="PASS" starttime="20201030 18:31:56.698" endtime="20201030 18:31:56.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.693" endtime="20201030 18:31:56.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.704" endtime="20201030 18:31:56.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.703" endtime="20201030 18:31:56.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.702" endtime="20201030 18:31:56.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.334" endtime="20201030 18:31:56.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.333" endtime="20201030 18:31:56.725"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.734" endtime="20201030 18:31:56.757"></status>
</kw>
<msg timestamp="20201030 18:31:56.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.732" endtime="20201030 18:31:56.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.758" endtime="20201030 18:31:56.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.761" endtime="20201030 18:31:56.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.729" endtime="20201030 18:31:56.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.727" endtime="20201030 18:31:56.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.770" endtime="20201030 18:31:57.057"></status>
</kw>
<msg timestamp="20201030 18:31:57.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:56.768" endtime="20201030 18:31:57.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:57.061" endtime="20201030 18:31:57.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.069" endtime="20201030 18:31:57.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.766" endtime="20201030 18:31:57.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.764" endtime="20201030 18:31:57.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.076" level="INFO">${RESULT} = [{'diff': 0.00017711100000000063}, {'diff': 0.00017701399999999964}, {'diff': 0.00017720800000000161}, {'diff': 0.00017752700000000024}, {'diff': 0.0001767639999999994}, {'diff': 0.0001770549999999988...</msg>
<status status="PASS" starttime="20201030 18:31:57.072" endtime="20201030 18:31:57.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.079" level="INFO">${ACCURACY} = {'diff': [0.00017711100000000063, 0.00017701399999999964, 0.00017720800000000161, 0.00017752700000000024, 0.0001767639999999994, 0.00017705499999999888, 0.00017694399999999832, 0.0001772639999999999, ...</msg>
<status status="PASS" starttime="20201030 18:31:57.076" endtime="20201030 18:31:57.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.084" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.083" endtime="20201030 18:31:57.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.087" level="INFO">VALUE: [0.00017711100000000063, 0.00017701399999999964, 0.00017720800000000161, 0.00017752700000000024, 0.0001767639999999994, 0.00017705499999999888, 0.00017694399999999832, 0.0001772639999999999, 0.00017695900000000084, 0.00017716599999999944, 0.0001771250000000002, 0.00017725000000000032, 0.00017738800000000055, 0.00017712499999999673, 0.00017745800000000186, 0.00017683300000000124, 0.000177486000000001, 0.00017773599999999778, 0.00017740200000000012, 0.00017752799999999971, 0.00017732000000000164, 0.00017751400000000014, 0.00017756999999999842, 0.00017729199999999903, 0.00017743099999999873, 0.0001767090000000006, 0.0001774310000000022, 0.00017718000000000247, 0.00017705599999999835, 0.00017690300000000256, 0.00017768099999999898, 0.000177583999999998, 0.00017709700000000106, 0.00017701399999999964, 0.00017713900000000324, 0.00017718099999999848, 0.0001769449999999978, 0.00017736100000000088, 0.00017723600000000075, 0.0001770409999999993, 0.00017751400000000014, 0.00017761099999999766, 0.00017700000000000354, 0.00017694400000000526, 0.0001771669999999989, 0.00017698599999999703, 0.0001771250000000002, 0.00017705599999999488, 0.00017736100000000088, 0.00017691699999999866]</msg>
<status status="PASS" starttime="20201030 18:31:57.085" endtime="20201030 18:31:57.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.080" endtime="20201030 18:31:57.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.092" endtime="20201030 18:31:57.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.091" endtime="20201030 18:31:57.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.090" endtime="20201030 18:31:57.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.726" endtime="20201030 18:31:57.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.725" endtime="20201030 18:31:57.113"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.122" endtime="20201030 18:31:57.144"></status>
</kw>
<msg timestamp="20201030 18:31:57.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.120" endtime="20201030 18:31:57.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.146" endtime="20201030 18:31:57.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.148" endtime="20201030 18:31:57.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.118" endtime="20201030 18:31:57.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.116" endtime="20201030 18:31:57.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.157" endtime="20201030 18:31:57.442"></status>
</kw>
<msg timestamp="20201030 18:31:57.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.156" endtime="20201030 18:31:57.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.446" endtime="20201030 18:31:57.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.455" endtime="20201030 18:31:57.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.153" endtime="20201030 18:31:57.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.151" endtime="20201030 18:31:57.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.461" level="INFO">${RESULT} = [{'diff': 0.00017872199999999921}, {'diff': 0.0001780969999999986}, {'diff': 0.00017801399999999717}, {'diff': 0.00017813799999999783}, {'diff': 0.00017862499999999823}, {'diff': 0.0001782500000000013...</msg>
<status status="PASS" starttime="20201030 18:31:57.458" endtime="20201030 18:31:57.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.468" level="INFO">${ACCURACY} = {'diff': [0.00017872199999999921, 0.0001780969999999986, 0.00017801399999999717, 0.00017813799999999783, 0.00017862499999999823, 0.00017825000000000132, 0.00017790200000000062, 0.00017822199999999871,...</msg>
<status status="PASS" starttime="20201030 18:31:57.462" endtime="20201030 18:31:57.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.473" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.472" endtime="20201030 18:31:57.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.475" level="INFO">VALUE: [0.00017872199999999921, 0.0001780969999999986, 0.00017801399999999717, 0.00017813799999999783, 0.00017862499999999823, 0.00017825000000000132, 0.00017790200000000062, 0.00017822199999999871, 0.0001784030000000006, 0.0001786670000000004, 0.00017815300000000034, 0.00017838899999999755, 0.00017811099999999816, 0.00017820799999999914, 0.00017798599999999803, 0.00017813900000000077, 0.00017865200000000137, 0.00017815300000000034, 0.00017824999999999785, 0.0001784579999999994, 0.00017873599999999878, 0.00017805499999999988, 0.00017786100000000138, 0.00017784699999999834, 0.00017779199999999953, 0.00017847199999999896, 0.00017834699999999884, 0.00017787500000000095, 0.0001778470000000018, 0.0001783609999999984, 0.0001781250000000012, 0.00017783299999999877, 0.00017829100000000056, 0.00017872300000000216, 0.00017837499999999798, 0.00017812499999999773, 0.0001779449999999988, 0.000178486000000002, 0.00017843099999999973, 0.00017820800000000261, 0.00017834699999999884, 0.00017826300000000142, 0.00017870799999999964, 0.00017791699999999966, 0.00017804200000000325, 0.00017808299999999902, 0.00017788900000000052, 0.00017811100000000163, 0.00017777699999999702, 0.00017801399999999717]</msg>
<status status="PASS" starttime="20201030 18:31:57.474" endtime="20201030 18:31:57.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.469" endtime="20201030 18:31:57.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.480" endtime="20201030 18:31:57.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.479" endtime="20201030 18:31:57.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.478" endtime="20201030 18:31:57.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.114" endtime="20201030 18:31:57.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.113" endtime="20201030 18:31:57.501"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.510" endtime="20201030 18:31:57.532"></status>
</kw>
<msg timestamp="20201030 18:31:57.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.508" endtime="20201030 18:31:57.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.534" endtime="20201030 18:31:57.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.536" endtime="20201030 18:31:57.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.506" endtime="20201030 18:31:57.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.504" endtime="20201030 18:31:57.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.545" endtime="20201030 18:31:57.831"></status>
</kw>
<msg timestamp="20201030 18:31:57.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.544" endtime="20201030 18:31:57.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.836" endtime="20201030 18:31:57.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.844" endtime="20201030 18:31:57.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.541" endtime="20201030 18:31:57.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.539" endtime="20201030 18:31:57.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.850" level="INFO">${RESULT} = [{'diff': 0.00017968100000000098}, {'diff': 0.00017955600000000085}, {'diff': 0.00017892999999999729}, {'diff': 0.00017879100000000106}, {'diff': 0.00017937500000000245}, {'diff': 0.000179681000000000...</msg>
<status status="PASS" starttime="20201030 18:31:57.847" endtime="20201030 18:31:57.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.854" level="INFO">${ACCURACY} = {'diff': [0.00017968100000000098, 0.00017955600000000085, 0.00017892999999999729, 0.00017879100000000106, 0.00017937500000000245, 0.00017968100000000098, 0.00017961099999999966, 0.0001795970000000001,...</msg>
<status status="PASS" starttime="20201030 18:31:57.851" endtime="20201030 18:31:57.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.859" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.858" endtime="20201030 18:31:57.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.861" level="INFO">VALUE: [0.00017968100000000098, 0.00017955600000000085, 0.00017892999999999729, 0.00017879100000000106, 0.00017937500000000245, 0.00017968100000000098, 0.00017961099999999966, 0.0001795970000000001, 0.00017919400000000058, 0.0001793609999999994, 0.00017927800000000146, 0.0001795970000000001, 0.00017891700000000066, 0.00017916600000000144, 0.00017905500000000088, 0.0001794730000000029, 0.00017951399999999867, 0.00017952699999999877, 0.00017909700000000306, 0.00017961099999999966, 0.00017965300000000184, 0.00017934699999999984, 0.00017877800000000096, 0.00017886100000000238, 0.00017973599999999978, 0.00017904200000000078, 0.00017924999999999885, 0.0001789999999999986, 0.00017883399999999924, 0.00017961099999999966, 0.00017904200000000078, 0.0001793060000000006, 0.00017922199999999971, 0.0001788609999999989, 0.00017956899999999748, 0.00017948599999999953, 0.00017902800000000121, 0.0001789860000000025, 0.00017952700000000224, 0.00017884699999999934, 0.00017966699999999794, 0.00017934699999999984, 0.00017904200000000078, 0.0001794999999999991, 0.00017884699999999934, 0.00017944399999999736, 0.0001794450000000003, 0.00017923599999999928, 0.0001795979999999961, 0.0001795129999999992]</msg>
<status status="PASS" starttime="20201030 18:31:57.860" endtime="20201030 18:31:57.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.855" endtime="20201030 18:31:57.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.866" endtime="20201030 18:31:57.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.865" endtime="20201030 18:31:57.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.863" endtime="20201030 18:31:57.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.502" endtime="20201030 18:31:57.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.502" endtime="20201030 18:31:57.887"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.895" endtime="20201030 18:31:57.919"></status>
</kw>
<msg timestamp="20201030 18:31:57.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.894" endtime="20201030 18:31:57.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.920" endtime="20201030 18:31:57.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.923" endtime="20201030 18:31:57.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.891" endtime="20201030 18:31:57.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.889" endtime="20201030 18:31:57.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.932" endtime="20201030 18:31:58.218"></status>
</kw>
<msg timestamp="20201030 18:31:58.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.930" endtime="20201030 18:31:58.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.222" endtime="20201030 18:31:58.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.230" endtime="20201030 18:31:58.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.928" endtime="20201030 18:31:58.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.926" endtime="20201030 18:31:58.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.237" level="INFO">${RESULT} = [{'diff': 0.0001803060000000016}, {'diff': 0.00018047200000000096}, {'diff': 0.00018020800000000115}, {'diff': 0.00017984700000000034}, {'diff': 0.00018030499999999866}, {'diff': 0.0001802369999999997...</msg>
<status status="PASS" starttime="20201030 18:31:58.234" endtime="20201030 18:31:58.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.241" level="INFO">${ACCURACY} = {'diff': [0.0001803060000000016, 0.00018047200000000096, 0.00018020800000000115, 0.00017984700000000034, 0.00018030499999999866, 0.00018023699999999976, 0.00018047300000000044, 0.00018047200000000096,...</msg>
<status status="PASS" starttime="20201030 18:31:58.238" endtime="20201030 18:31:58.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.245" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.244" endtime="20201030 18:31:58.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.248" level="INFO">VALUE: [0.0001803060000000016, 0.00018047200000000096, 0.00018020800000000115, 0.00017984700000000034, 0.00018030499999999866, 0.00018023699999999976, 0.00018047300000000044, 0.00018047200000000096, 0.00018059699999999762, 0.0001806109999999972, 0.00018040299999999912, 0.00017973599999999978, 0.00017990299999999862, 0.00018009800000000006, 0.00018004199999999831, 0.00018002699999999927, 0.00017984699999999687, 0.00018051399999999967, 0.0001804169999999987, 0.0001805000000000001, 0.00018072199999999775, 0.00017992999999999829, 0.00018022200000000071, 0.00018065299999999937, 0.0001803610000000004, 0.00018030599999999813, 0.0001804030000000026, 0.0001804589999999974, 0.000180277999999999, 0.0001800840000000005, 0.00018052799999999924, 0.00018065299999999937, 0.00017972200000000021, 0.00018055599999999838, 0.00018024999999999985, 0.0001800970000000006, 0.00018013799999999983, 0.0001802909999999991, 0.00018066599999999947, 0.00018055599999999838, 0.00017997200000000046, 0.00018052799999999578, 0.00017994399999999439, 0.0001799869999999995, 0.0001806109999999972, 0.00018030599999999813, 0.00017994399999999439, 0.0001804030000000026, 0.00018038899999999608, 0.00018061100000000413]</msg>
<status status="PASS" starttime="20201030 18:31:58.246" endtime="20201030 18:31:58.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.242" endtime="20201030 18:31:58.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.254" endtime="20201030 18:31:58.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.252" endtime="20201030 18:31:58.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.251" endtime="20201030 18:31:58.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.888" endtime="20201030 18:31:58.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.887" endtime="20201030 18:31:58.274"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.283" endtime="20201030 18:31:58.306"></status>
</kw>
<msg timestamp="20201030 18:31:58.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.281" endtime="20201030 18:31:58.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.307" endtime="20201030 18:31:58.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.310" endtime="20201030 18:31:58.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.279" endtime="20201030 18:31:58.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.277" endtime="20201030 18:31:58.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.319" endtime="20201030 18:31:58.604"></status>
</kw>
<msg timestamp="20201030 18:31:58.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.317" endtime="20201030 18:31:58.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.608" endtime="20201030 18:31:58.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.616" endtime="20201030 18:31:58.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.315" endtime="20201030 18:31:58.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.313" endtime="20201030 18:31:58.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.622" level="INFO">${RESULT} = [{'diff': 0.00018115299999999987}, {'diff': 0.00018098599999999757}, {'diff': 0.00018076399999999992}, {'diff': 0.00018125000000000085}, {'diff': 0.00018116699999999944}, {'diff': 0.000181305999999999...</msg>
<status status="PASS" starttime="20201030 18:31:58.619" endtime="20201030 18:31:58.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.627" level="INFO">${ACCURACY} = {'diff': [0.00018115299999999987, 0.00018098599999999757, 0.00018076399999999992, 0.00018125000000000085, 0.00018116699999999944, 0.00018130599999999913, 0.00018172199999999875, 0.0001810970000000016,...</msg>
<status status="PASS" starttime="20201030 18:31:58.623" endtime="20201030 18:31:58.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.632" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.630" endtime="20201030 18:31:58.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.634" level="INFO">VALUE: [0.00018115299999999987, 0.00018098599999999757, 0.00018076399999999992, 0.00018125000000000085, 0.00018116699999999944, 0.00018130599999999913, 0.00018172199999999875, 0.0001810970000000016, 0.0001806809999999985, 0.00018140300000000012, 0.00018081899999999873, 0.000181180999999999, 0.00018111100000000116, 0.00018125000000000085, 0.00018152700000000077, 0.000181278, 0.00018129199999999956, 0.00018076399999999992, 0.00018122199999999825, 0.00018115299999999987, 0.00018144400000000283, 0.00018148600000000153, 0.00018108399999999802, 0.00018143099999999926, 0.0001806800000000025, 0.0001815970000000021, 0.00018133300000000227, 0.00018126400000000042, 0.00018144399999999936, 0.00018090200000000015, 0.00018125000000000085, 0.0001810970000000016, 0.00018076399999999992, 0.0001813610000000014, 0.00018111100000000116, 0.00018137500000000098, 0.00018080599999999863, 0.0001815139999999972, 0.00018102799999999974, 0.00018158300000000252, 0.00018162500000000123, 0.00018137500000000098, 0.00018168100000000298, 0.00018081899999999873, 0.0001807909999999996, 0.0001810700000000054, 0.0001807779999999995, 0.00018094400000000233, 0.00018076399999999992, 0.00018101400000000017]</msg>
<status status="PASS" starttime="20201030 18:31:58.633" endtime="20201030 18:31:58.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.628" endtime="20201030 18:31:58.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.639" endtime="20201030 18:31:58.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.637" endtime="20201030 18:31:58.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.636" endtime="20201030 18:31:58.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.275" endtime="20201030 18:31:58.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.275" endtime="20201030 18:31:58.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.988" endtime="20201030 18:31:58.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.664" endtime="20201030 18:31:58.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.662" endtime="20201030 18:31:58.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.661" endtime="20201030 18:31:58.684"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:19.922" endtime="20201030 18:31:58.684" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:39.621" endtime="20201030 18:31:58.688"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.741" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:58.750" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:59.929" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:58.740" endtime="20201030 18:31:59.930"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.932" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:31:59.931" endtime="20201030 18:31:59.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.739" endtime="20201030 18:31:59.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.935" endtime="20201030 18:32:00.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.934" endtime="20201030 18:32:00.180"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.192" endtime="20201030 18:32:00.206"></status>
</kw>
<msg timestamp="20201030 18:32:00.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.191" endtime="20201030 18:32:00.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.207" endtime="20201030 18:32:00.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.212" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:00.210" endtime="20201030 18:32:00.212"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:00.188" endtime="20201030 18:32:00.213"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:00.186" endtime="20201030 18:32:00.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.185" endtime="20201030 18:32:00.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:00.217" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:00.217" endtime="20201030 18:32:00.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.214" endtime="20201030 18:32:00.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.184" endtime="20201030 18:32:00.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.183" endtime="20201030 18:32:00.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.219" endtime="20201030 18:32:00.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.182" endtime="20201030 18:32:00.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.230" endtime="20201030 18:32:00.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.180" endtime="20201030 18:32:00.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.737" endtime="20201030 18:32:00.232"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.238" endtime="20201030 18:32:00.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.236" endtime="20201030 18:32:00.258"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.271" endtime="20201030 18:32:00.283"></status>
</kw>
<msg timestamp="20201030 18:32:00.284" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.269" endtime="20201030 18:32:00.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.285" endtime="20201030 18:32:00.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.289" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:00.287" endtime="20201030 18:32:00.289"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:00.267" endtime="20201030 18:32:00.291"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:00.264" endtime="20201030 18:32:00.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.263" endtime="20201030 18:32:00.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:00.296" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:00.295" endtime="20201030 18:32:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.293" endtime="20201030 18:32:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.262" endtime="20201030 18:32:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.262" endtime="20201030 18:32:00.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.297" endtime="20201030 18:32:00.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.260" endtime="20201030 18:32:00.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.259" endtime="20201030 18:32:00.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.235" endtime="20201030 18:32:00.300"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.308" endtime="20201030 18:32:06.413"></status>
</kw>
<msg timestamp="20201030 18:32:06.414" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.307" endtime="20201030 18:32:06.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.419" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.416" endtime="20201030 18:32:06.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.422" endtime="20201030 18:32:06.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.304" endtime="20201030 18:32:06.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.302" endtime="20201030 18:32:06.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.433" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:06.429" endtime="20201030 18:32:06.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.443" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:06.440" endtime="20201030 18:32:06.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.447" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:06.445" endtime="20201030 18:32:06.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.435" endtime="20201030 18:32:06.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.458" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:06.456" endtime="20201030 18:32:06.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.463" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:06.461" endtime="20201030 18:32:06.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.451" endtime="20201030 18:32:06.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.472" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:06.471" endtime="20201030 18:32:06.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.474" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:32:06.473" endtime="20201030 18:32:06.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.466" endtime="20201030 18:32:06.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.481" endtime="20201030 18:32:06.784"></status>
</kw>
<msg timestamp="20201030 18:32:06.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061482986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161205903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.480" endtime="20201030 18:32:06.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061482986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161205903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.792" endtime="20201030 18:32:06.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.805" endtime="20201030 18:32:06.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.477" endtime="20201030 18:32:06.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.475" endtime="20201030 18:32:06.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:06.815" level="INFO">${FILTERED} = [{'diff': 0.09972291700000001}, {'diff': 0.09961794499999999}, {'diff': 0.09963038899999999}, {'diff': 0.09963650000000002}, {'diff': 0.099637056}, {'diff': 0.099645612}, {'diff': 0.09965404099999997}...</msg>
<status status="PASS" starttime="20201030 18:32:06.811" endtime="20201030 18:32:06.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.818" level="INFO">${RESULT} = {'diff': [0.09972291700000001, 0.09961794499999999, 0.09963038899999999, 0.09963650000000002, 0.099637056, 0.099645612, 0.09965404099999997, 0.09965311099999996, 0.09965381899999992, 0.099647763, 0.09...</msg>
<status status="PASS" starttime="20201030 18:32:06.816" endtime="20201030 18:32:06.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.823" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:06.822" endtime="20201030 18:32:06.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.825" level="INFO">VALUE: [0.09972291700000001, 0.09961794499999999, 0.09963038899999999, 0.09963650000000002, 0.099637056, 0.099645612, 0.09965404099999997, 0.09965311099999996, 0.09965381899999992, 0.099647763, 0.09965512499999996, 0.09965447199999988, 0.0996539729999999, 0.09965159700000004, 0.09965197199999998, 0.09965059700000012, 0.09965041600000002, 0.09964862499999994, 0.09965213900000003, 0.09965177800000014, 0.09964979200000013, 0.0996429860000001, 0.09965059699999967, 0.09964819400000025, 0.09964484699999998, 0.09964700000000004, 0.09964974999999976, 0.09964997199999992, 0.09965112499999984, 0.09964481899999988, 0.09964595800000042, 0.09964691599999975, 0.09964902699999989, 0.09965024999999983, 0.09964627800000025, 0.09965088799999977, 0.0996544720000001, 0.0996520000000003, 0.09965206899999979, 0.09965129200000034, 0.09964788899999988, 0.09965438899999945, 0.09965894499999983, 0.09966054200000052, 0.09965923700000001, 0.09965066599999961, 0.09965122199999943, 0.09965475000000001, 0.09964894500000021, 0.09965401300000032, 0.09965404200000005]</msg>
<status status="PASS" starttime="20201030 18:32:06.824" endtime="20201030 18:32:06.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.819" endtime="20201030 18:32:06.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.830" endtime="20201030 18:32:06.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.829" endtime="20201030 18:32:06.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.827" endtime="20201030 18:32:06.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.301" endtime="20201030 18:32:06.851"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:00.233" endtime="20201030 18:32:06.851" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.858" endtime="20201030 18:32:06.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.856" endtime="20201030 18:32:06.878"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.892" endtime="20201030 18:32:06.904"></status>
</kw>
<msg timestamp="20201030 18:32:06.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.890" endtime="20201030 18:32:06.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.907" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.905" endtime="20201030 18:32:06.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.910" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:06.908" endtime="20201030 18:32:06.910"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:06.887" endtime="20201030 18:32:06.911"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:06.885" endtime="20201030 18:32:06.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.884" endtime="20201030 18:32:06.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:06.915" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:06.915" endtime="20201030 18:32:06.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.912" endtime="20201030 18:32:06.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.883" endtime="20201030 18:32:06.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.882" endtime="20201030 18:32:06.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.917" endtime="20201030 18:32:06.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.880" endtime="20201030 18:32:06.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.878" endtime="20201030 18:32:06.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.855" endtime="20201030 18:32:06.920"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.928" endtime="20201030 18:32:13.032"></status>
</kw>
<msg timestamp="20201030 18:32:13.033" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.926" endtime="20201030 18:32:13.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.039" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.036" endtime="20201030 18:32:13.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.042" endtime="20201030 18:32:13.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.924" endtime="20201030 18:32:13.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.922" endtime="20201030 18:32:13.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.052" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:13.049" endtime="20201030 18:32:13.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.061" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:13.059" endtime="20201030 18:32:13.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.067" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:13.063" endtime="20201030 18:32:13.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.054" endtime="20201030 18:32:13.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.077" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:13.075" endtime="20201030 18:32:13.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.082" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:13.080" endtime="20201030 18:32:13.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.071" endtime="20201030 18:32:13.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.088" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:13.087" endtime="20201030 18:32:13.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.090" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:32:13.089" endtime="20201030 18:32:13.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.085" endtime="20201030 18:32:13.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.098" endtime="20201030 18:32:13.401"></status>
</kw>
<msg timestamp="20201030 18:32:13.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061604903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161418014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.096" endtime="20201030 18:32:13.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061604903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161418014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.405" endtime="20201030 18:32:13.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.413" endtime="20201030 18:32:13.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.093" endtime="20201030 18:32:13.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.092" endtime="20201030 18:32:13.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:13.419" level="INFO">${FILTERED} = [{'diff': 0.099813111}, {'diff': 0.09956897299999998}, {'diff': 0.09964447199999998}, {'diff': 0.09963919400000004}, {'diff': 0.09963168100000003}, {'diff': 0.09963847199999998}, {'diff': 0.0996344439...</msg>
<status status="PASS" starttime="20201030 18:32:13.416" endtime="20201030 18:32:13.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.426" level="INFO">${RESULT} = {'diff': [0.099813111, 0.09956897299999998, 0.09964447199999998, 0.09963919400000004, 0.09963168100000003, 0.09963847199999998, 0.09963444399999999, 0.09963540299999996, 0.09963781999999999, 0.0996375...</msg>
<status status="PASS" starttime="20201030 18:32:13.420" endtime="20201030 18:32:13.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.430" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:13.429" endtime="20201030 18:32:13.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.432" level="INFO">VALUE: [0.099813111, 0.09956897299999998, 0.09964447199999998, 0.09963919400000004, 0.09963168100000003, 0.09963847199999998, 0.09963444399999999, 0.09963540299999996, 0.09963781999999999, 0.09963757000000006, 0.09963806999999991, 0.09964379199999995, 0.09964581900000002, 0.09964137500000003, 0.09964193100000007, 0.09964293099999999, 0.09963863900000014, 0.09964357000000001, 0.09964163899999989, 0.0996432770000002, 0.09964844399999961, 0.09964319500000007, 0.09964122200000025, 0.09964237500000017, 0.09964348600000017, 0.09964558400000012, 0.09963757000000006, 0.09963900000000026, 0.09964098599999982, 0.09964286099999997, 0.09963661099999976, 0.09963173700000016, 0.0996360420000002, 0.09963504200000006, 0.0996339719999999, 0.09963473600000006, 0.09963962500000001, 0.09964176299999972, 0.09963342999999991, 0.09963452800000017, 0.09963397200000035, 0.09963268100000011, 0.09963570900000018, 0.09963509800000026, 0.09963680499999938, 0.09963630499999976, 0.0996327499999996, 0.09963545899999993, 0.09963477700000034, 0.09963137499999952, 0.099634569]</msg>
<status status="PASS" starttime="20201030 18:32:13.431" endtime="20201030 18:32:13.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.427" endtime="20201030 18:32:13.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.437" endtime="20201030 18:32:13.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.435" endtime="20201030 18:32:13.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.434" endtime="20201030 18:32:13.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.921" endtime="20201030 18:32:13.457"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:06.853" endtime="20201030 18:32:13.458" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.464" endtime="20201030 18:32:13.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.463" endtime="20201030 18:32:13.484"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.497" endtime="20201030 18:32:13.509"></status>
</kw>
<msg timestamp="20201030 18:32:13.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.495" endtime="20201030 18:32:13.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.512" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.511" endtime="20201030 18:32:13.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.515" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:13.513" endtime="20201030 18:32:13.515"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:13.493" endtime="20201030 18:32:13.516"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:13.491" endtime="20201030 18:32:13.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.489" endtime="20201030 18:32:13.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:13.520" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:13.520" endtime="20201030 18:32:13.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.518" endtime="20201030 18:32:13.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.489" endtime="20201030 18:32:13.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.488" endtime="20201030 18:32:13.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.522" endtime="20201030 18:32:13.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.487" endtime="20201030 18:32:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.485" endtime="20201030 18:32:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.462" endtime="20201030 18:32:13.525"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.534" endtime="20201030 18:32:19.632"></status>
</kw>
<msg timestamp="20201030 18:32:19.633" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.532" endtime="20201030 18:32:19.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.635" endtime="20201030 18:32:19.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.641" endtime="20201030 18:32:19.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.530" endtime="20201030 18:32:19.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.527" endtime="20201030 18:32:19.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.652" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:19.648" endtime="20201030 18:32:19.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.660" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:19.658" endtime="20201030 18:32:19.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.664" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:19.662" endtime="20201030 18:32:19.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.653" endtime="20201030 18:32:19.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.673" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:19.671" endtime="20201030 18:32:19.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.678" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:19.676" endtime="20201030 18:32:19.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.667" endtime="20201030 18:32:19.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.687" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:19.685" endtime="20201030 18:32:19.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.691" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:32:19.689" endtime="20201030 18:32:19.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.681" endtime="20201030 18:32:19.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.706" endtime="20201030 18:32:20.009"></status>
</kw>
<msg timestamp="20201030 18:32:20.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061143792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161258778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.703" endtime="20201030 18:32:20.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061143792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161258778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.013" endtime="20201030 18:32:20.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.021" endtime="20201030 18:32:20.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.698" endtime="20201030 18:32:20.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.694" endtime="20201030 18:32:20.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:20.027" level="INFO">${FILTERED} = [{'diff': 0.10011498599999999}, {'diff': 0.09925112500000002}, {'diff': 0.099637861}, {'diff': 0.09964043100000003}, {'diff': 0.099634903}, {'diff': 0.09963276300000001}, {'diff': 0.09963683300000004}...</msg>
<status status="PASS" starttime="20201030 18:32:20.024" endtime="20201030 18:32:20.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.032" level="INFO">${RESULT} = {'diff': [0.10011498599999999, 0.09925112500000002, 0.099637861, 0.09964043100000003, 0.099634903, 0.09963276300000001, 0.09963683300000004, 0.09962712499999993, 0.09962593100000006, 0.099628069999999...</msg>
<status status="PASS" starttime="20201030 18:32:20.028" endtime="20201030 18:32:20.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.036" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:20.035" endtime="20201030 18:32:20.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.038" level="INFO">VALUE: [0.10011498599999999, 0.09925112500000002, 0.099637861, 0.09964043100000003, 0.099634903, 0.09963276300000001, 0.09963683300000004, 0.09962712499999993, 0.09962593100000006, 0.09962806999999996, 0.09963669399999997, 0.09962826399999991, 0.0996260830000002, 0.0996304589999999, 0.09962688899999983, 0.09963125000000006, 0.09962775000000001, 0.09962647199999997, 0.09962777799999989, 0.09962712499999982, 0.09963245800000031, 0.09962756899999992, 0.09963129100000012, 0.09963094399999983, 0.09962765200000012, 0.09962718000000015, 0.09962433400000004, 0.09962729200000009, 0.09962788900000019, 0.09962731899999966, 0.09963327799999977, 0.09962602799999987, 0.09962458300000021, 0.09962190300000007, 0.09962243000000015, 0.09961841599999977, 0.09962061099999975, 0.09962056999999991, 0.09962526400000016, 0.09962125000000022, 0.09962250000000061, 0.09962133299999998, 0.09961522199999973, 0.09961967999999999, 0.09961618100000003, 0.099620292, 0.09962738900000012, 0.09962675000000054, 0.09963145900000026, 0.09963748599999978, 0.09964225000000049]</msg>
<status status="PASS" starttime="20201030 18:32:20.037" endtime="20201030 18:32:20.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.033" endtime="20201030 18:32:20.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.043" endtime="20201030 18:32:20.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.042" endtime="20201030 18:32:20.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.041" endtime="20201030 18:32:20.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.525" endtime="20201030 18:32:20.064"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:13.459" endtime="20201030 18:32:20.064" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.071" endtime="20201030 18:32:20.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.069" endtime="20201030 18:32:20.091"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.104" endtime="20201030 18:32:20.116"></status>
</kw>
<msg timestamp="20201030 18:32:20.117" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.103" endtime="20201030 18:32:20.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.119" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.118" endtime="20201030 18:32:20.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.122" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:20.120" endtime="20201030 18:32:20.123"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:20.099" endtime="20201030 18:32:20.123"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:20.097" endtime="20201030 18:32:20.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.096" endtime="20201030 18:32:20.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:20.128" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:20.127" endtime="20201030 18:32:20.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.125" endtime="20201030 18:32:20.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.095" endtime="20201030 18:32:20.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.094" endtime="20201030 18:32:20.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.129" endtime="20201030 18:32:20.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.093" endtime="20201030 18:32:20.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.091" endtime="20201030 18:32:20.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.068" endtime="20201030 18:32:20.132"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.140" endtime="20201030 18:32:26.240"></status>
</kw>
<msg timestamp="20201030 18:32:26.241" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.138" endtime="20201030 18:32:26.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.246" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.243" endtime="20201030 18:32:26.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.249" endtime="20201030 18:32:26.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.136" endtime="20201030 18:32:26.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.134" endtime="20201030 18:32:26.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.259" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:26.256" endtime="20201030 18:32:26.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.267" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:26.265" endtime="20201030 18:32:26.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.271" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:26.269" endtime="20201030 18:32:26.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.261" endtime="20201030 18:32:26.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.281" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:26.279" endtime="20201030 18:32:26.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.284" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:26.283" endtime="20201030 18:32:26.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.274" endtime="20201030 18:32:26.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.288" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:26.287" endtime="20201030 18:32:26.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.290" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:32:26.289" endtime="20201030 18:32:26.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.285" endtime="20201030 18:32:26.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.299" endtime="20201030 18:32:26.596"></status>
</kw>
<msg timestamp="20201030 18:32:26.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060685056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160985292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.297" endtime="20201030 18:32:26.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060685056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160985292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.600" endtime="20201030 18:32:26.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.608" endtime="20201030 18:32:26.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.293" endtime="20201030 18:32:26.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.292" endtime="20201030 18:32:26.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:26.614" level="INFO">${FILTERED} = [{'diff': 0.100300236}, {'diff': 0.099849667}, {'diff': 0.09887208399999997}, {'diff': 0.09964947300000004}, {'diff': 0.09964661200000002}, {'diff': 0.09964950000000006}, {'diff': 0.09965254099999998}...</msg>
<status status="PASS" starttime="20201030 18:32:26.611" endtime="20201030 18:32:26.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.618" level="INFO">${RESULT} = {'diff': [0.100300236, 0.099849667, 0.09887208399999997, 0.09964947300000004, 0.09964661200000002, 0.09964950000000006, 0.09965254099999998, 0.09964967999999996, 0.09965302799999998, 0.099651971999999...</msg>
<status status="PASS" starttime="20201030 18:32:26.615" endtime="20201030 18:32:26.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.622" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:26.621" endtime="20201030 18:32:26.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.624" level="INFO">VALUE: [0.100300236, 0.099849667, 0.09887208399999997, 0.09964947300000004, 0.09964661200000002, 0.09964950000000006, 0.09965254099999998, 0.09964967999999996, 0.09965302799999998, 0.09965197199999998, 0.09964873600000002, 0.09964586099999995, 0.09964802800000006, 0.09964779199999985, 0.09964947200000007, 0.09965182000000006, 0.09965087500000003, 0.09964284699999992, 0.09963965200000002, 0.09964392999999983, 0.0996453749999997, 0.09964752799999976, 0.09964815299999996, 0.09964222199999995, 0.09964769400000018, 0.09964870800000014, 0.09964441600000029, 0.0996494440000002, 0.09964872200000041, 0.09964777800000002, 0.09964979200000013, 0.09965244499999981, 0.09964547200000018, 0.09964592999999988, 0.0996523469999997, 0.09965341699999986, 0.09965208300000006, 0.09964876399999989, 0.09964852800000035, 0.09965031900000021, 0.09964783299999969, 0.09965584799999938, 0.09965336099999966, 0.0996588049999998, 0.09965697200000001, 0.09965658399999988, 0.0996587360000003, 0.09965887499999937, 0.0996559020000003, 0.09965455599999995, 0.09965340299999959]</msg>
<status status="PASS" starttime="20201030 18:32:26.623" endtime="20201030 18:32:26.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.619" endtime="20201030 18:32:26.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.629" endtime="20201030 18:32:26.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.628" endtime="20201030 18:32:26.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.627" endtime="20201030 18:32:26.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.133" endtime="20201030 18:32:26.651"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:20.066" endtime="20201030 18:32:26.651" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.657" endtime="20201030 18:32:26.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.656" endtime="20201030 18:32:26.677"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.690" endtime="20201030 18:32:26.702"></status>
</kw>
<msg timestamp="20201030 18:32:26.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.688" endtime="20201030 18:32:26.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.705" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.704" endtime="20201030 18:32:26.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.708" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:26.706" endtime="20201030 18:32:26.708"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:26.686" endtime="20201030 18:32:26.709"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:26.684" endtime="20201030 18:32:26.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.682" endtime="20201030 18:32:26.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:26.713" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:26.713" endtime="20201030 18:32:26.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.711" endtime="20201030 18:32:26.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.682" endtime="20201030 18:32:26.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.681" endtime="20201030 18:32:26.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.715" endtime="20201030 18:32:26.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.680" endtime="20201030 18:32:26.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.678" endtime="20201030 18:32:26.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.655" endtime="20201030 18:32:26.718"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.728" endtime="20201030 18:32:32.828"></status>
</kw>
<msg timestamp="20201030 18:32:32.829" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.725" endtime="20201030 18:32:32.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.834" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.831" endtime="20201030 18:32:32.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.837" endtime="20201030 18:32:32.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.722" endtime="20201030 18:32:32.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.720" endtime="20201030 18:32:32.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.847" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:32.844" endtime="20201030 18:32:32.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.855" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:32.853" endtime="20201030 18:32:32.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.859" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:32.857" endtime="20201030 18:32:32.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.849" endtime="20201030 18:32:32.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.870" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:32.868" endtime="20201030 18:32:32.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.874" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:32.872" endtime="20201030 18:32:32.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.863" endtime="20201030 18:32:32.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.881" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:32.880" endtime="20201030 18:32:32.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.883" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:32:32.882" endtime="20201030 18:32:32.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.877" endtime="20201030 18:32:32.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.890" endtime="20201030 18:32:33.188"></status>
</kw>
<msg timestamp="20201030 18:32:33.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062248986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162838444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.889" endtime="20201030 18:32:33.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062248986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162838444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.193" endtime="20201030 18:32:33.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.201" endtime="20201030 18:32:33.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.886" endtime="20201030 18:32:33.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.885" endtime="20201030 18:32:33.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:33.207" level="INFO">${FILTERED} = [{'diff': 0.10058945799999999}, {'diff': 0.09990333300000001}, {'diff': 0.09855072199999998}, {'diff': 0.09965248600000004}, {'diff': 0.09964905600000001}, {'diff': 0.09965251400000008}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 18:32:33.204" endtime="20201030 18:32:33.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.212" level="INFO">${RESULT} = {'diff': [0.10058945799999999, 0.09990333300000001, 0.09855072199999998, 0.09965248600000004, 0.09964905600000001, 0.09965251400000008, 0.09964647199999999, 0.09964450000000002, 0.099644972, 0.0996445...</msg>
<status status="PASS" starttime="20201030 18:32:33.208" endtime="20201030 18:32:33.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.216" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:33.215" endtime="20201030 18:32:33.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.218" level="INFO">VALUE: [0.10058945799999999, 0.09990333300000001, 0.09855072199999998, 0.09965248600000004, 0.09964905600000001, 0.09965251400000008, 0.09964647199999999, 0.09964450000000002, 0.099644972, 0.09964450000000002, 0.09964533400000009, 0.0996438340000001, 0.09963807000000013, 0.09964205599999998, 0.0996429029999999, 0.09964015299999995, 0.09964747200000001, 0.09965020800000013, 0.09964872299999983, 0.09964763900000007, 0.09965095800000023, 0.09964952800000004, 0.09964452799999979, 0.09964790300000015, 0.09964763900000007, 0.09964804100000002, 0.09965175000000004, 0.0996472500000003, 0.0996460560000001, 0.09964633299999992, 0.09964476400000022, 0.09964244500000019, 0.09964422200000023, 0.09964743100000018, 0.09964519399999983, 0.09964927799999979, 0.0996501809999999, 0.0996404860000002, 0.09963955499999999, 0.09963551399999959, 0.09963836200000031, 0.09964594499999979, 0.09964466699999974, 0.09964572300000007, 0.09963993100000046, 0.0996435550000001, 0.09963966599999985, 0.09963841700000042, 0.0996411109999995, 0.09964367999999979, 0.09964473600000012]</msg>
<status status="PASS" starttime="20201030 18:32:33.217" endtime="20201030 18:32:33.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.213" endtime="20201030 18:32:33.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.223" endtime="20201030 18:32:33.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.222" endtime="20201030 18:32:33.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.221" endtime="20201030 18:32:33.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.718" endtime="20201030 18:32:33.244"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:26.653" endtime="20201030 18:32:33.244" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.251" endtime="20201030 18:32:33.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.249" endtime="20201030 18:32:33.271"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.283" endtime="20201030 18:32:33.296"></status>
</kw>
<msg timestamp="20201030 18:32:33.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.282" endtime="20201030 18:32:33.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.298" endtime="20201030 18:32:33.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.302" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:33.300" endtime="20201030 18:32:33.303"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:33.279" endtime="20201030 18:32:33.303"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:33.277" endtime="20201030 18:32:33.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.276" endtime="20201030 18:32:33.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:33.308" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:33.307" endtime="20201030 18:32:33.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.305" endtime="20201030 18:32:33.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.275" endtime="20201030 18:32:33.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.274" endtime="20201030 18:32:33.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.309" endtime="20201030 18:32:33.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.273" endtime="20201030 18:32:33.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.271" endtime="20201030 18:32:33.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.248" endtime="20201030 18:32:33.312"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.320" endtime="20201030 18:32:39.420"></status>
</kw>
<msg timestamp="20201030 18:32:39.421" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.319" endtime="20201030 18:32:39.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.426" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.423" endtime="20201030 18:32:39.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.429" endtime="20201030 18:32:39.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.316" endtime="20201030 18:32:39.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.314" endtime="20201030 18:32:39.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.440" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:39.436" endtime="20201030 18:32:39.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.448" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:39.446" endtime="20201030 18:32:39.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.452" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:39.450" endtime="20201030 18:32:39.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.441" endtime="20201030 18:32:39.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.462" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:39.460" endtime="20201030 18:32:39.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.466" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:39.464" endtime="20201030 18:32:39.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.455" endtime="20201030 18:32:39.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.476" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:39.474" endtime="20201030 18:32:39.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.480" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:32:39.478" endtime="20201030 18:32:39.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.469" endtime="20201030 18:32:39.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.494" endtime="20201030 18:32:39.792"></status>
</kw>
<msg timestamp="20201030 18:32:39.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061314361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162254833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.492" endtime="20201030 18:32:39.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061314361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162254833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.796" endtime="20201030 18:32:39.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.804" endtime="20201030 18:32:39.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.487" endtime="20201030 18:32:39.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.483" endtime="20201030 18:32:39.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:39.810" level="INFO">${FILTERED} = [{'diff': 0.10094047199999999}, {'diff': 0.09989290300000003}, {'diff': 0.098215889}, {'diff': 0.10143433299999999}, {'diff': 0.09787134700000005}, {'diff': 0.09965301399999993}, {'diff': 0.09964825},...</msg>
<status status="PASS" starttime="20201030 18:32:39.807" endtime="20201030 18:32:39.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.814" level="INFO">${RESULT} = {'diff': [0.10094047199999999, 0.09989290300000003, 0.098215889, 0.10143433299999999, 0.09787134700000005, 0.09965301399999993, 0.09964825, 0.099643347, 0.09964459699999995, 0.099636069, 0.09963555499...</msg>
<status status="PASS" starttime="20201030 18:32:39.811" endtime="20201030 18:32:39.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.818" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:39.817" endtime="20201030 18:32:39.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.821" level="INFO">VALUE: [0.10094047199999999, 0.09989290300000003, 0.098215889, 0.10143433299999999, 0.09787134700000005, 0.09965301399999993, 0.09964825, 0.099643347, 0.09964459699999995, 0.099636069, 0.09963555499999988, 0.09963429199999996, 0.09963925000000007, 0.09963405499999989, 0.09963937499999997, 0.09964344499999989, 0.09964640299999994, 0.09964274999999989, 0.09964345800000007, 0.09963949999999988, 0.0996381529999999, 0.09964395800000014, 0.09964683300000043, 0.09964234700000008, 0.09964490299999973, 0.09964840299999977, 0.09964580499999975, 0.09964087499999996, 0.0996389449999997, 0.09964708400000033, 0.09964041699999981, 0.09964022200000011, 0.09964529199999994, 0.09965244399999973, 0.09964962500000007, 0.0996470279999997, 0.0996501809999999, 0.09964375000000025, 0.09964319399999999, 0.09964272200000046, 0.09964426400000015, 0.09964673599999951, 0.09964438800000064, 0.09964390299999959, 0.09964538899999997, 0.09964467999999993, 0.09964494400000046, 0.09964623599999989, 0.09964961199999944, 0.09964800000000018, 0.09965169400000029]</msg>
<status status="PASS" starttime="20201030 18:32:39.819" endtime="20201030 18:32:39.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.815" endtime="20201030 18:32:39.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.825" endtime="20201030 18:32:39.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.824" endtime="20201030 18:32:39.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.823" endtime="20201030 18:32:39.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.313" endtime="20201030 18:32:39.846"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:33.246" endtime="20201030 18:32:39.847" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:58.697" endtime="20201030 18:32:39.853"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:29:51.287" endtime="20201030 18:32:39.885"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
